void sub_18931626C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893163D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189316540(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893166AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189317150(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitBoardingInfoCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = a1[4];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  [a1[5] readAll:1];
  [a1[7] readAll:1];
  [a1[3] readAll:1];
  return [a1[6] readAll:1];
}

unint64_t GEOTransitBoardingInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitBoardingInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOTransitBoardingInfoReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOTransitBoardingInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitBoardingInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOTransitBoardingInfoCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18931742C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitBoardingInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitBoardingInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189317490(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitBoardingInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_35:
    BOOL v17 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v17;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_35;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      if (v7++ >= 9)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14 || v15 == 4) {
      goto LABEL_35;
    }
    switch((v8 >> 3))
    {
      case 1u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOTransitBoardingInfoEntryIsValid(a1)) {
          goto LABEL_30;
        }
        goto LABEL_34;
      case 2u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOTransitExitPlanInfoIsValid(a1)) {
          goto LABEL_30;
        }
        goto LABEL_34;
      case 4u:
      case 5u:
      case 6u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitListTimeInstructionIsValid(a1)) {
          goto LABEL_34;
        }
LABEL_30:
        PBReaderRecallMark();
        goto LABEL_31;
      default:
        if (PBReaderSkipValueWithTag())
        {
LABEL_31:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_35;
          }
          continue;
        }
LABEL_34:
        PBReaderRecallMark();
        return 0;
    }
  }
}

BOOL GEOTransitBoardingInfoEntryIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_58;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_55;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_45;
          }
        case 2u:
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
            goto LABEL_58;
          }
          goto LABEL_44;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitOccupancyInfoIsValid(a1)) {
            goto LABEL_58;
          }
          goto LABEL_44;
        case 5u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOTransitExitPlanInfoIsValid(a1)) {
            goto LABEL_44;
          }
          goto LABEL_58;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_58;
          }
          unsigned int v23 = 0;
          break;
        case 7u:
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitListTimeInstructionIsValid(a1)) {
            goto LABEL_58;
          }
LABEL_44:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_58:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_45;
      }
LABEL_55:
      a1[*v4] = 1;
LABEL_45:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOTransitExitPlanInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_55;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_55;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_42;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              unsigned int v28 = v15++;
              if (v28 <= 8) {
                continue;
              }
            }
            goto LABEL_43;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_57;
        }
LABEL_46:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v29 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v30 = *v2;
            uint64_t v31 = *(void *)&a1[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
              break;
            }
            int v33 = *(char *)(*(void *)&a1[*v5] + v31);
            *(void *)&a1[v30] = v32;
            if (v33 < 0)
            {
              BOOL v13 = v29++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_46;
          }
          a1[*v4] = 1;
        }
        goto LABEL_32;
      }
      if (v17 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_57;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_43;
        }
LABEL_42:
        a1[*v4] = 1;
        goto LABEL_43;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_57;
      }
LABEL_43:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_55;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
    {
LABEL_57:
      PBReaderRecallMark();
      return 0;
    }
LABEL_32:
    PBReaderRecallMark();
    goto LABEL_43;
  }
LABEL_55:
  BOOL v34 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v34;
}

void sub_189317FD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitBoardingInfoIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  int v2 = *(unsigned __int8 *)(a1 + 76);
  if ((v2 & 0x44444444) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEOTransitExitPlanInfoIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 76);
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOTransitListTimeInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 76);
  }
  if ((v2 & 2) != 0)
  {
    if (GEOTransitListTimeInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 76);
  }
  if ((v2 & 0x10) == 0) {
    goto LABEL_16;
  }
  if (GEOTransitListTimeInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
    return 1;
  }
  LOBYTE(v2) = *(unsigned char *)(a1 + 76);
LABEL_16:
  if ((v2 & 4) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 32);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOTransitBoardingInfoEntryIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_28;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_28:

  return v3;
}

os_unfair_lock_s *GEOTransitBoardingInfoIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOTransitBoardingInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189318610(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189318A44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189318E84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitBoardingInfoEntryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFFCFFF9FFFAFFFDLL), (int8x8_t)0x1000100010001))+ (HIBYTE(*(_WORD *)(a1 + 92)) & 1)+ ((*(_WORD *)(a1 + 92) >> 5) & 1)+ ((*(_WORD *)(a1 + 92) >> 2) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v67 = v17;
        char v68 = v18 | v17;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v69 = (v19 == 0) | v18;
        BOOL v70 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_117;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_117:
      int v65 = 1;
      goto LABEL_118;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v70;
    if ((v69 & 1) == 0)
    {
      v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_92;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(_WORD *)(a1 + 92) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_95;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_97;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_95:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_97:
        *(_DWORD *)(a1 + 84) = v41;
        goto LABEL_116;
      case 2:
        if (!v34) {
          goto LABEL_92;
        }
        if ((*(_WORD *)(a1 + 92) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_138;
          }
          __int16 v60 = *(_WORD *)(a1 + 92) << 9;
          goto LABEL_114;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_138;
        }
        v49 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_137;
        }
        PBReaderRecallMark();
        uint64_t v50 = 48;
        goto LABEL_91;
      case 3:
        if (!v34) {
          goto LABEL_92;
        }
        if ((*(_WORD *)(a1 + 92) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_138;
          }
          __int16 v60 = *(_WORD *)(a1 + 92) << 12;
          goto LABEL_114;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_138;
        }
        v49 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_137;
        }
        PBReaderRecallMark();
        uint64_t v50 = 24;
        goto LABEL_91;
      case 4:
        if (!v34) {
          goto LABEL_92;
        }
        if ((*(_WORD *)(a1 + 92) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_138;
          }
          __int16 v60 = *(_WORD *)(a1 + 92) << 7;
          goto LABEL_114;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_138;
        }
        v49 = objc_alloc_init(GEOTransitOccupancyInfo);
        if (!GEOTransitOccupancyInfoReadAllFrom((uint64_t)v49, (void *)v3)) {
          goto LABEL_137;
        }
        PBReaderRecallMark();
        uint64_t v50 = 64;
        goto LABEL_91;
      case 5:
        if (!v34) {
          goto LABEL_92;
        }
        if ((*(_WORD *)(a1 + 92) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_138;
          }
          __int16 v60 = *(_WORD *)(a1 + 92) << 10;
          goto LABEL_114;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_138;
        }
        v49 = objc_alloc_init(GEOTransitExitPlanInfo);
        if (!GEOTransitExitPlanInfoReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_137;
        }
        PBReaderRecallMark();
        uint64_t v50 = 40;
        goto LABEL_91;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_92;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v53 = 0;
        *(_WORD *)(a1 + 92) |= 2u;
        while (2)
        {
          uint64_t v54 = *v20;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v22) + v55);
            *(void *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              BOOL v30 = v52++ >= 9;
              if (v30)
              {
                uint64_t v53 = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v53 = 0;
        }
LABEL_101:
        *(unsigned char *)(a1 + 88) = v53 != 0;
        goto LABEL_116;
      case 7:
        if (!v34) {
          goto LABEL_92;
        }
        if ((*(_WORD *)(a1 + 92) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_138;
          }
          __int16 v60 = *(_WORD *)(a1 + 92) << 8;
          goto LABEL_114;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_138;
        }
        v49 = objc_alloc_init(GEOTransitListTimeInstruction);
        if (!GEOTransitListTimeInstructionReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_137;
        }
        PBReaderRecallMark();
        uint64_t v50 = 56;
        goto LABEL_91;
      case 8:
        if (!v34) {
          goto LABEL_92;
        }
        if ((*(_WORD *)(a1 + 92) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_138;
          }
          __int16 v60 = *(_WORD *)(a1 + 92) << 11;
LABEL_114:
          v7 += v60 >> 15;
LABEL_115:
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
LABEL_116:
          if (!(v68 & 1 | (v7 != 0))) {
            goto LABEL_117;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_138;
        }
        v49 = objc_alloc_init(GEOTransitListTimeInstruction);
        if (GEOTransitListTimeInstructionReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v50 = 32;
LABEL_91:
          v58 = *(void **)(a1 + v50);
          *(void *)(a1 + v50) = v49;

          --v7;
          goto LABEL_115;
        }
LABEL_137:

LABEL_138:
        int v65 = 0;
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_118:
        unint64_t v66 = 0x1EB28C000uLL;
        if (v67) {
LABEL_119:
        }
          *(_WORD *)(a1 + *(int *)(v66 + 3600)) |= 4u;
        if (v70 || (v65 & 1) == 0)
        {
          *(_WORD *)(a1 + *(int *)(v66 + 3600)) |= 0x40u;
          *(_WORD *)(a1 + *(int *)(v66 + 3600)) |= 8u;
          *(_WORD *)(a1 + *(int *)(v66 + 3600)) |= 0x80u;
          *(_WORD *)(a1 + *(int *)(v66 + 3600)) |= 0x10u;
          *(_WORD *)(a1 + *(int *)(v66 + 3600)) |= 0x100u;
          *(_WORD *)(a1 + *(int *)(v66 + 3600)) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            int v62 = *v19++;
            __int16 v61 = 64;
            switch(v62)
            {
              case 0:
                goto LABEL_131;
              case 2:
                goto LABEL_129;
              case 3:
                __int16 v61 = 8;
                goto LABEL_129;
              case 4:
                __int16 v61 = 256;
                goto LABEL_129;
              case 5:
                __int16 v61 = 32;
                goto LABEL_129;
              case 7:
                __int16 v61 = 128;
                goto LABEL_129;
              case 8:
                __int16 v61 = 16;
LABEL_129:
                *(_WORD *)(a1 + *(int *)(v66 + 3600)) |= v61;
                break;
              default:
                continue;
            }
          }
        }
LABEL_131:
        if (v65) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v70)
        {
          v63 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v67 & 1) == 0 || (*(_WORD *)(a1 + 92) & 4) != 0)
        {
LABEL_92:
          char v59 = PBReaderSkipValueWithTag();
          int v22 = (int *)MEMORY[0x1E4F940B8];
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v59 & 1) == 0)
          {
            int v65 = 0;
            goto LABEL_118;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v48)
          {
            int v65 = 0;
            unint64_t v66 = 0x1EB28C000;
            goto LABEL_119;
          }
        }
        goto LABEL_116;
    }
  }
}

void sub_189319A38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189319BA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189319D18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189319E88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189319FF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18931AB7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitBoardingInfoEntryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 56) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 64) readAll:1];
  int v2 = *(void **)(a1 + 40);

  return [v2 readAll:1];
}

unint64_t GEOTransitBoardingInfoEntryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitBoardingInfoEntryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOTransitBoardingInfoEntryReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOTransitBoardingInfoEntryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitBoardingInfoEntryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOTransitBoardingInfoEntryCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_18931ADAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitBoardingInfoEntryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitBoardingInfoEntryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18931AE10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitOccupancyInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

void sub_18931B258(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitBoardingInfoEntryIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  __int16 v2 = *(_WORD *)(a1 + 92);
  if ((v2 & 0x200) != 0) {
    return 1;
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 92);
  }
  if ((v2 & 8) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 92);
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEOTransitListTimeInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 92);
  }
  if ((v2 & 0x10) == 0) {
    goto LABEL_14;
  }
  if (GEOTransitListTimeInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
    return 1;
  }
  __int16 v2 = *(_WORD *)(a1 + 92);
LABEL_14:
  if ((v2 & 0x100) != 0) {
    return 1;
  }
  if ((v2 & 0x20) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 40);

  return (uint64_t)GEOTransitExitPlanInfoIsDirty(v4);
}

os_unfair_lock_s *GEOTransitBoardingInfoEntryIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOTransitBoardingInfoEntryIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18931B79C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18931BCDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitClusterArtworkItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          uint64_t v27 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          unint64_t v28 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v27;
        }
        else if ((v12 >> 3) == 1)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v23 = *v6;
            uint64_t v24 = *(void *)&v5[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
            *(void *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_36;
            }
            v20 += 7;
            BOOL v17 = v21++ >= 9;
            if (v17)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            LODWORD(v22) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v29 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v30 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v29;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_18931C6DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitClusterArtworkItemReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTransitClusterArtworkItemReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18931C740(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitClusterArtworkItemIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_18931D004(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitClusterArtworkSetReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1)
      + (*(unsigned char *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        int v17 = v16 & ~v11 | v7;
        int v64 = v16 | v11;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        if (((v16 | v11) | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        int v20 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_82;
        }
        char v62 = v17;
        int v63 = (v9 != 0) | v64 | v17;
        int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_80;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v18;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    int v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_80:
      int v20 = 1;
      goto LABEL_81;
    }
    unint64_t v34 = v25 >> 3;
    BOOL v35 = v64;
    if (!((v19 == 0) | v64 & 1))
    {
      int v36 = v19;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    if (v34 == 2) {
      break;
    }
    if (v34 == 1)
    {
      if (v35 && (*(unsigned char *)(a1 + 68) & 2) == 0)
      {
        if (v32 == 2)
        {
          int v20 = PBReaderPlaceMark();
          if (!v20) {
            goto LABEL_81;
          }
          while (*(void *)(v3 + *v18) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v21))
          {
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v42 = 0;
            while (1)
            {
              uint64_t v43 = *v18;
              uint64_t v44 = *(void *)(v3 + v43);
              unint64_t v45 = v44 + 1;
              if (v44 == -1 || v45 > *(void *)(v3 + *v6)) {
                break;
              }
              char v46 = *(unsigned char *)(*(void *)(v3 + *v22) + v44);
              *(void *)(v3 + v43) = v45;
              v42 |= (unint64_t)(v46 & 0x7F) << v40;
              if (v46 < 0)
              {
                v40 += 7;
                BOOL v30 = v41++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_54;
            }
            *(unsigned char *)(v3 + *v21) = 1;
LABEL_54:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v50 = 0;
          unsigned int v51 = 0;
          uint64_t v52 = 0;
          while (1)
          {
            uint64_t v53 = *v18;
            uint64_t v54 = *(void *)(v3 + v53);
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)(v3 + *v6)) {
              break;
            }
            char v56 = *(unsigned char *)(*(void *)(v3 + *v22) + v54);
            *(void *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              BOOL v30 = v51++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_77;
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_77:
          PBRepeatedUInt32Add();
        }
LABEL_78:
        if ((v63 & 1) == 0) {
          goto LABEL_80;
        }
        goto LABEL_79;
      }
    }
    else if ((v62 & 1) != 0 && (*(unsigned char *)(a1 + 68) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v48 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        v49 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v48;
      }
      int v20 = PBUnknownFieldAdd();
      if (!v20) {
        goto LABEL_83;
      }
      goto LABEL_78;
    }
LABEL_66:
    int v20 = PBReaderSkipValueWithTag();
    if ((v20 & v63 & 1) == 0) {
      goto LABEL_81;
    }
LABEL_79:
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6)) {
      goto LABEL_80;
    }
  }
  if (!v35 || (*(unsigned char *)(a1 + 68) & 4) != 0) {
    goto LABEL_66;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_101;
  }
  v47 = objc_alloc_init(GEOTransitClusterArtworkItem);
  if (GEOTransitClusterArtworkItemReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOTransitClusterArtworkSet _addNoFlagsArtworkItem:](a1, v47);

    goto LABEL_78;
  }

LABEL_101:
  int v20 = 0;
LABEL_81:
  LOBYTE(v17) = v62;
LABEL_82:
  if (v17) {
LABEL_83:
  }
    *(unsigned char *)(a1 + 68) |= 1u;
  if (v64 & 1 | ((v20 & 1) == 0))
  {
    *(unsigned char *)(a1 + 68) |= 2u;
    *(unsigned char *)(a1 + 68) |= 4u;
    goto LABEL_94;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v58 = *v19++;
        int v57 = v58;
        if (v58 == 1) {
          break;
        }
        if (v57 == 2)
        {
          char v59 = 4;
          goto LABEL_93;
        }
        if (!v57) {
          goto LABEL_94;
        }
      }
      char v59 = 2;
LABEL_93:
      *(unsigned char *)(a1 + 68) |= v59;
      continue;
    }
  }
LABEL_94:
  if (v20) {
    unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v64)
  {
    __int16 v60 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18931D9DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18931E4E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOTransitClusterArtworkSetCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 48);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOTransitClusterArtworkSetReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitClusterArtworkSetReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOTransitClusterArtworkSetReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOTransitClusterArtworkSetReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitClusterArtworkSetReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOTransitClusterArtworkSetCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18931E77C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitClusterArtworkSetReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitClusterArtworkSetReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18931E7E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitClusterArtworkSetIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_45;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_45;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_47;
          }
LABEL_34:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v22 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              uint64_t v24 = *(void *)&a1[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                break;
              }
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                BOOL v13 = v22++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_34;
            }
            a1[*v4] = 1;
          }
LABEL_30:
          PBReaderRecallMark();
          goto LABEL_44;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_47;
        }
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            unsigned int v21 = v15++;
            if (v21 <= 8) {
              continue;
            }
          }
          goto LABEL_44;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_47;
      }
LABEL_44:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitClusterArtworkItemIsValid(a1))
    {
LABEL_47:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_30;
  }
LABEL_45:
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_18931ED04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitClusterArtworkSetIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_18931F10C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18931F42C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18931F770(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitDecoderDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (a2)
  {
    os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
    char v6 = (int *)MEMORY[0x1E4F940E0];
    *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 132);
    [(id)v3 seekToOffset:*(unsigned int *)(a1 + 128)];
    uint64_t v7 = 0;
    char v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    unsigned int v12 = *(unsigned __int16 *)(a1 + 140);
    uint16x4_t v13 = (uint16x4_t)vdup_n_s16(v12);
    unsigned int v14 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16(v13, (uint16x4_t)0xFFF6FFFEFFFDFFF5), (int8x8_t)0x1000100010001))+ (v12 & 1)+ ((*(_WORD *)(a1 + 140) >> 7) & 1)+ ((*(_WORD *)(a1 + 140) >> 5) & 1))+ (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16(v13, (uint16x4_t)0xFFF4FFFFFFFAFFFCLL), (int8x8_t)0x1000100010001))+ ((v12 >> 8) & 1)+ ((v12 >> 13) & 1)+ ((v12 >> 9) & 1));
    while (2)
    {
      uint64_t v15 = 1;
      uint64_t v16 = 1;
      uint64_t v17 = 1;
      switch(a3[v7])
      {
        case -4:
          ++v14;
          goto LABEL_8;
        case -3:
          char v8 = 1;
          goto LABEL_7;
        case -2:
          uint64_t v16 = v10;
          goto LABEL_10;
        case -1:
          goto LABEL_10;
        case 0:
          BOOL v18 = v14 > 9;
          int v19 = v18 & ~v11 | v9;
          int v20 = v18 | v11;
          if (((v18 | v11) | v8)) {
            unsigned int v21 = 0;
          }
          else {
            unsigned int v21 = a3;
          }
          BOOL v22 = v7 != 0;
          uint64_t v23 = (int *)MEMORY[0x1E4F940E8];
          int v24 = 1;
          unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
            goto LABEL_116;
          }
          char v50 = v19;
          int v51 = v22 | v20 | v19;
          int v26 = (int *)MEMORY[0x1E4F940B8];
          break;
        default:
          ++v14;
LABEL_7:
          uint64_t v15 = v9;
LABEL_8:
          uint64_t v16 = v10;
          uint64_t v17 = v11;
LABEL_10:
          ++v7;
          uint64_t v9 = v15;
          uint64_t v10 = v16;
          uint64_t v11 = v17;
          continue;
      }
      break;
    }
    while (!*(unsigned char *)(v3 + *v25))
    {
      char v27 = 0;
      unsigned int v28 = 0;
      unint64_t v29 = 0;
      while (1)
      {
        uint64_t v30 = *v23;
        uint64_t v31 = *(void *)(v3 + v30);
        unint64_t v32 = v31 + 1;
        if (v31 == -1 || v32 > *(void *)(v3 + *v6)) {
          break;
        }
        char v33 = *(unsigned char *)(*(void *)(v3 + *v26) + v31);
        *(void *)(v3 + v30) = v32;
        v29 |= (unint64_t)(v33 & 0x7F) << v27;
        if ((v33 & 0x80) == 0) {
          goto LABEL_25;
        }
        v27 += 7;
        if (v28++ >= 9)
        {
          unint64_t v29 = 0;
          int v35 = *(unsigned __int8 *)(v3 + *v25);
          goto LABEL_27;
        }
      }
      *(unsigned char *)(v3 + *v25) = 1;
LABEL_25:
      int v35 = *(unsigned __int8 *)(v3 + *v25);
      if (*(unsigned char *)(v3 + *v25)) {
        unint64_t v29 = 0;
      }
LABEL_27:
      if (v35 || (v29 & 7) == 4) {
        break;
      }
      unint64_t v37 = v29 >> 3;
      BOOL v38 = v20;
      if (!((v21 == 0) | v20 & 1))
      {
        BOOL v39 = v21;
        do
        {
          int v41 = *v39++;
          int v40 = v41;
          BOOL v38 = v41 != 0;
          if (v41) {
            BOOL v42 = v40 == v37;
          }
          else {
            BOOL v42 = 1;
          }
        }
        while (!v42);
      }
      switch((int)v37)
      {
        case 1:
          if (!v38 || (*(_WORD *)(a1 + 140) & 0x40) != 0) {
            goto LABEL_112;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_142;
          }
          uint64_t v43 = objc_alloc_init(GEOPBTransitStation);
          if (!GEOPBTransitStationReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
            goto LABEL_141;
          }
          PBReaderRecallMark();
          -[GEOTransitDecoderData _addNoFlagsStation:](a1, v43);
          goto LABEL_109;
        case 5:
          if (!v38 || (*(_WORD *)(a1 + 140) & 0x10) != 0) {
            goto LABEL_112;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_142;
          }
          uint64_t v43 = objc_alloc_init(GEOPBTransitLine);
          if (!GEOPBTransitLineReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
            goto LABEL_141;
          }
          PBReaderRecallMark();
          -[GEOTransitDecoderData _addNoFlagsLine:](a1, v43);
          goto LABEL_109;
        case 8:
          if (!v38 || (*(_WORD *)(a1 + 140) & 2) != 0) {
            goto LABEL_112;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_142;
          }
          uint64_t v43 = objc_alloc_init(GEOPBTransitAccessPoint);
          if (!GEOPBTransitAccessPointReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
            goto LABEL_141;
          }
          PBReaderRecallMark();
          -[GEOTransitDecoderData _addNoFlagsAccessPoint:](a1, v43);
          goto LABEL_109;
        case 10:
          if (!v38 || (*(_WORD *)(a1 + 140) & 0x1000) != 0) {
            goto LABEL_112;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_142;
          }
          uint64_t v43 = objc_alloc_init(GEORoute);
          if (!GEORouteReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
            goto LABEL_141;
          }
          PBReaderRecallMark();
          -[GEOTransitDecoderData _addNoFlagsWalking:](a1, v43);
          goto LABEL_109;
        case 11:
          if (!v38 || (*(_WORD *)(a1 + 140) & 0x100) != 0) {
            goto LABEL_112;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_142;
          }
          uint64_t v43 = objc_alloc_init(GEOPBTransitStop);
          if (!GEOPBTransitStopReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
            goto LABEL_141;
          }
          PBReaderRecallMark();
          -[GEOTransitDecoderData _addNoFlagsStop:](a1, v43);
          goto LABEL_109;
        case 12:
          if (!v38 || (*(_WORD *)(a1 + 140) & 0x2000) != 0) {
            goto LABEL_112;
          }
          PBReaderReadData();
          uint64_t v43 = (GEOPBTransitStation *)objc_claimAutoreleasedReturnValue();
          if (v43) {
            -[GEOTransitDecoderData _addNoFlagsZilchPoints:](a1, v43);
          }
          goto LABEL_109;
        case 13:
          if (!v38 || (*(_WORD *)(a1 + 140) & 0x200) != 0) {
            goto LABEL_112;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_142;
          }
          uint64_t v43 = objc_alloc_init(GEOPBTransitSystem);
          if (!GEOPBTransitSystemReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
            goto LABEL_141;
          }
          PBReaderRecallMark();
          -[GEOTransitDecoderData _addNoFlagsSystem:](a1, v43);
          goto LABEL_109;
        case 15:
          if (!v38 || (*(_WORD *)(a1 + 140) & 0x800) != 0) {
            goto LABEL_112;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_142;
          }
          uint64_t v43 = objc_alloc_init(GEOPBTransitIncident);
          if (!GEOPBTransitIncidentReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
            goto LABEL_141;
          }
          PBReaderRecallMark();
          -[GEOTransitDecoderData _addNoFlagsTransitIncident:](a1, v43);
          goto LABEL_109;
        case 17:
          if (!v38 || (*(_WORD *)(a1 + 140) & 8) != 0) {
            goto LABEL_112;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_142;
          }
          uint64_t v43 = objc_alloc_init(GEOPBTransitHall);
          if (!GEOPBTransitHallReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
            goto LABEL_141;
          }
          PBReaderRecallMark();
          -[GEOTransitDecoderData _addNoFlagsHall:](a1, v43);
          goto LABEL_109;
        case 18:
          if (!v38 || (*(_WORD *)(a1 + 140) & 4) != 0) {
            goto LABEL_112;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_142;
          }
          uint64_t v43 = objc_alloc_init(GEOPBTransitArtwork);
          if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
            goto LABEL_141;
          }
          PBReaderRecallMark();
          -[GEOTransitDecoderData _addNoFlagsArtwork:](a1, v43);
          goto LABEL_109;
        case 19:
          if (!v38 || (*(_WORD *)(a1 + 140) & 0x400) != 0) {
            goto LABEL_112;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_142;
          }
          uint64_t v43 = objc_alloc_init(GEOPBTransitRoutingIncidentMessage);
          if (!GEOPBTransitRoutingIncidentMessageReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
            goto LABEL_141;
          }
          PBReaderRecallMark();
          -[GEOTransitDecoderData _addNoFlagsTransitIncidentMessage:](a1, v43);
          goto LABEL_109;
        case 20:
          if (!v38 || (*(_WORD *)(a1 + 140) & 0x80) != 0) {
            goto LABEL_112;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_142;
          }
          uint64_t v43 = objc_alloc_init(GEOTransitStep);
          if (!GEOTransitStepReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
            goto LABEL_141;
          }
          PBReaderRecallMark();
          -[GEOTransitDecoderData _addNoFlagsStep:](a1, v43);
          goto LABEL_109;
        case 21:
          if (!v38 || (*(_WORD *)(a1 + 140) & 0x20) != 0) {
            goto LABEL_112;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_142;
          }
          uint64_t v43 = objc_alloc_init(GEOPBTransitPaymentMethod);
          if (!GEOPBTransitPaymentMethodReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1))
          {
LABEL_141:

LABEL_142:
            int v24 = 0;
            unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
            goto LABEL_115;
          }
          PBReaderRecallMark();
          -[GEOTransitDecoderData _addNoFlagsPaymentMethod:](a1, v43);
LABEL_109:

          unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
LABEL_110:
          if ((v51 & 1) == 0) {
            goto LABEL_114;
          }
LABEL_113:
          if (*(void *)(v3 + *v23) >= *(void *)(v3 + *v6)) {
            goto LABEL_114;
          }
          break;
        default:
          if (v50 & 1) == 0 || (*(_WORD *)(a1 + 140))
          {
LABEL_112:
            int v24 = PBReaderSkipValueWithTag();
            unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
            if ((v24 & v51 & 1) == 0) {
              goto LABEL_115;
            }
            goto LABEL_113;
          }
          if (!*(void *)(a1 + 16))
          {
            id v44 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v45 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v44;
          }
          int v24 = PBUnknownFieldAdd();
          unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
          if (!v24) {
            goto LABEL_117;
          }
          goto LABEL_110;
      }
    }
LABEL_114:
    int v24 = 1;
LABEL_115:
    LOBYTE(v19) = v50;
LABEL_116:
    if (v19) {
LABEL_117:
    }
      *(_WORD *)(a1 + 140) |= 1u;
    if (v20 & 1 | ((v24 & 1) == 0))
    {
      *(_WORD *)(a1 + 140) |= 0x40u;
      *(_WORD *)(a1 + 140) |= 0x10u;
      *(_WORD *)(a1 + 140) |= 2u;
      *(_WORD *)(a1 + 140) |= 0x1000u;
      *(_WORD *)(a1 + 140) |= 0x100u;
      *(_WORD *)(a1 + 140) |= 0x2000u;
      *(_WORD *)(a1 + 140) |= 0x200u;
      *(_WORD *)(a1 + 140) |= 0x800u;
      *(_WORD *)(a1 + 140) |= 8u;
      *(_WORD *)(a1 + 140) |= 4u;
      *(_WORD *)(a1 + 140) |= 0x400u;
      *(_WORD *)(a1 + 140) |= 0x80u;
      *(_WORD *)(a1 + 140) |= 0x20u;
    }
    else if (v21)
    {
      while (1)
      {
        int v46 = *v21++;
        __int16 v47 = 64;
        switch(v46)
        {
          case 0:
            goto LABEL_135;
          case 1:
            goto LABEL_134;
          case 5:
            __int16 v47 = 16;
            goto LABEL_134;
          case 8:
            __int16 v47 = 2;
            goto LABEL_134;
          case 10:
            __int16 v47 = 4096;
            goto LABEL_134;
          case 11:
            __int16 v47 = 256;
            goto LABEL_134;
          case 12:
            __int16 v47 = 0x2000;
            goto LABEL_134;
          case 13:
            __int16 v47 = 512;
            goto LABEL_134;
          case 15:
            __int16 v47 = 2048;
            goto LABEL_134;
          case 17:
            __int16 v47 = 8;
            goto LABEL_134;
          case 18:
            __int16 v47 = 4;
            goto LABEL_134;
          case 19:
            __int16 v47 = 1024;
            goto LABEL_134;
          case 20:
            __int16 v47 = 128;
            goto LABEL_134;
          case 21:
            __int16 v47 = 32;
LABEL_134:
            *(_WORD *)(a1 + 140) |= v47;
            break;
          default:
            continue;
        }
      }
    }
LABEL_135:
    if (v24)
    {
      unint64_t v3 = *(unsigned char *)(v3 + *v25) == 0;
      if ((v20 & 1) == 0) {
        return v3;
      }
      goto LABEL_139;
    }
    unint64_t v3 = 0;
    if (v20)
    {
LABEL_139:
      id v48 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_189320744(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189320B0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189320ED4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932129C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189321664(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189321A2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189321DF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893221BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189322584(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18932294C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189322D14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893230DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189325550(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOTransitDecoderDataCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v122 = *MEMORY[0x1E4F143B8];
  long long v106 = 0u;
  long long v107 = 0u;
  long long v108 = 0u;
  long long v109 = 0u;
  id v2 = a1[8];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v106 objects:v121 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v107;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v107 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v106 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v106 objects:v121 count:16];
    }
    while (v4);
  }

  long long v104 = 0u;
  long long v105 = 0u;
  long long v102 = 0u;
  long long v103 = 0u;
  id v7 = a1[6];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v102 objects:v120 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v103;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v103 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v102 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v102 objects:v120 count:16];
    }
    while (v9);
  }

  long long v100 = 0u;
  long long v101 = 0u;
  long long v98 = 0u;
  long long v99 = 0u;
  id v12 = a1[3];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v98 objects:v119 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v99;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v99 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v98 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v98 objects:v119 count:16];
    }
    while (v14);
  }

  long long v96 = 0u;
  long long v97 = 0u;
  long long v94 = 0u;
  long long v95 = 0u;
  id v17 = a1[14];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v94 objects:v118 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v95;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v95 != v20) {
          objc_enumerationMutation(v17);
        }
        [*(id *)(*((void *)&v94 + 1) + 8 * v21++) readAll:1];
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v94 objects:v118 count:16];
    }
    while (v19);
  }

  long long v92 = 0u;
  long long v93 = 0u;
  long long v90 = 0u;
  long long v91 = 0u;
  id v22 = a1[10];
  uint64_t v23 = [v22 countByEnumeratingWithState:&v90 objects:v117 count:16];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)v91;
    do
    {
      uint64_t v26 = 0;
      do
      {
        if (*(void *)v91 != v25) {
          objc_enumerationMutation(v22);
        }
        [*(id *)(*((void *)&v90 + 1) + 8 * v26++) readAll:1];
      }
      while (v24 != v26);
      uint64_t v24 = [v22 countByEnumeratingWithState:&v90 objects:v117 count:16];
    }
    while (v24);
  }

  long long v88 = 0u;
  long long v89 = 0u;
  long long v86 = 0u;
  long long v87 = 0u;
  id v27 = a1[11];
  uint64_t v28 = [v27 countByEnumeratingWithState:&v86 objects:v116 count:16];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = *(void *)v87;
    do
    {
      uint64_t v31 = 0;
      do
      {
        if (*(void *)v87 != v30) {
          objc_enumerationMutation(v27);
        }
        [*(id *)(*((void *)&v86 + 1) + 8 * v31++) readAll:1];
      }
      while (v29 != v31);
      uint64_t v29 = [v27 countByEnumeratingWithState:&v86 objects:v116 count:16];
    }
    while (v29);
  }

  long long v84 = 0u;
  long long v85 = 0u;
  long long v82 = 0u;
  long long v83 = 0u;
  id v32 = a1[13];
  uint64_t v33 = [v32 countByEnumeratingWithState:&v82 objects:v115 count:16];
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = *(void *)v83;
    do
    {
      uint64_t v36 = 0;
      do
      {
        if (*(void *)v83 != v35) {
          objc_enumerationMutation(v32);
        }
        -[GEOPBTransitIncident readAll:](*(void *)(*((void *)&v82 + 1) + 8 * v36++), 1);
      }
      while (v34 != v36);
      uint64_t v34 = [v32 countByEnumeratingWithState:&v82 objects:v115 count:16];
    }
    while (v34);
  }

  long long v80 = 0u;
  long long v81 = 0u;
  long long v78 = 0u;
  long long v79 = 0u;
  id v37 = a1[5];
  uint64_t v38 = [v37 countByEnumeratingWithState:&v78 objects:v114 count:16];
  if (v38)
  {
    uint64_t v39 = v38;
    uint64_t v40 = *(void *)v79;
    do
    {
      uint64_t v41 = 0;
      do
      {
        if (*(void *)v79 != v40) {
          objc_enumerationMutation(v37);
        }
        [*(id *)(*((void *)&v78 + 1) + 8 * v41++) readAll:1];
      }
      while (v39 != v41);
      uint64_t v39 = [v37 countByEnumeratingWithState:&v78 objects:v114 count:16];
    }
    while (v39);
  }

  long long v76 = 0u;
  long long v77 = 0u;
  long long v74 = 0u;
  long long v75 = 0u;
  id v42 = a1[4];
  uint64_t v43 = [v42 countByEnumeratingWithState:&v74 objects:v113 count:16];
  if (v43)
  {
    uint64_t v44 = v43;
    uint64_t v45 = *(void *)v75;
    do
    {
      uint64_t v46 = 0;
      do
      {
        if (*(void *)v75 != v45) {
          objc_enumerationMutation(v42);
        }
        [*(id *)(*((void *)&v74 + 1) + 8 * v46++) readAll:1];
      }
      while (v44 != v46);
      uint64_t v44 = [v42 countByEnumeratingWithState:&v74 objects:v113 count:16];
    }
    while (v44);
  }

  long long v72 = 0u;
  long long v73 = 0u;
  long long v70 = 0u;
  long long v71 = 0u;
  id v47 = a1[12];
  uint64_t v48 = [v47 countByEnumeratingWithState:&v70 objects:v112 count:16];
  if (v48)
  {
    uint64_t v49 = v48;
    uint64_t v50 = *(void *)v71;
    do
    {
      uint64_t v51 = 0;
      do
      {
        if (*(void *)v71 != v50) {
          objc_enumerationMutation(v47);
        }
        -[GEOPBTransitRoutingIncidentMessage readAll:](*(void *)(*((void *)&v70 + 1) + 8 * v51++), 1);
      }
      while (v49 != v51);
      uint64_t v49 = [v47 countByEnumeratingWithState:&v70 objects:v112 count:16];
    }
    while (v49);
  }

  long long v68 = 0u;
  long long v69 = 0u;
  long long v66 = 0u;
  long long v67 = 0u;
  id v52 = a1[9];
  uint64_t v53 = [v52 countByEnumeratingWithState:&v66 objects:v111 count:16];
  if (v53)
  {
    uint64_t v54 = v53;
    uint64_t v55 = *(void *)v67;
    do
    {
      uint64_t v56 = 0;
      do
      {
        if (*(void *)v67 != v55) {
          objc_enumerationMutation(v52);
        }
        [*(id *)(*((void *)&v66 + 1) + 8 * v56++) readAll:1];
      }
      while (v54 != v56);
      uint64_t v54 = [v52 countByEnumeratingWithState:&v66 objects:v111 count:16];
    }
    while (v54);
  }

  long long v64 = 0u;
  long long v65 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  id v57 = a1[7];
  uint64_t v58 = [v57 countByEnumeratingWithState:&v62 objects:v110 count:16];
  if (v58)
  {
    uint64_t v59 = v58;
    uint64_t v60 = *(void *)v63;
    do
    {
      uint64_t v61 = 0;
      do
      {
        if (*(void *)v63 != v60) {
          objc_enumerationMutation(v57);
        }
        objc_msgSend(*(id *)(*((void *)&v62 + 1) + 8 * v61++), "readAll:", 1, (void)v62);
      }
      while (v59 != v61);
      uint64_t v59 = [v57 countByEnumeratingWithState:&v62 objects:v110 count:16];
    }
    while (v59);
  }
}

unint64_t GEOTransitDecoderDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 132))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitDecoderDataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 136));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 128) = [v8 position];
  *(_DWORD *)(a1 + 132) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOTransitDecoderDataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOTransitDecoderDataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitDecoderDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOTransitDecoderDataCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 136));
  return Specified;
}

void sub_189325E6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitDecoderDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitDecoderDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189325ED0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitDecoderDataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPBTransitStationIsValid(a1)) {
            goto LABEL_69;
          }
          goto LABEL_72;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitLineIsValid(a1)) {
            goto LABEL_72;
          }
          goto LABEL_69;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitAccessPointIsValid(a1)) {
            goto LABEL_72;
          }
          goto LABEL_69;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteIsValid(a1)) {
            goto LABEL_72;
          }
          goto LABEL_69;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitStopIsValid(a1)) {
            goto LABEL_72;
          }
          goto LABEL_69;
        case 0xCu:
          if (v15 == 2) {
            goto LABEL_40;
          }
          goto LABEL_72;
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitSystemIsValid(a1)) {
            goto LABEL_72;
          }
          goto LABEL_69;
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitIncidentIsValid(a1)) {
            goto LABEL_72;
          }
          goto LABEL_69;
        case 0x11u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitHallIsValid(a1)) {
            goto LABEL_72;
          }
          goto LABEL_69;
        case 0x12u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_72;
          }
          goto LABEL_69;
        case 0x13u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitRoutingIncidentMessageIsValid(a1)) {
            goto LABEL_72;
          }
          goto LABEL_69;
        case 0x14u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitStepIsValid(a1)) {
            goto LABEL_72;
          }
          goto LABEL_69;
        case 0x15u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitPaymentMethodIsValid(a1)) {
            goto LABEL_72;
          }
LABEL_69:
          PBReaderRecallMark();
          goto LABEL_70;
        default:
LABEL_40:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_72:
            PBReaderRecallMark();
            return 0;
          }
LABEL_70:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_71;
          }
          break;
      }
    }
  }
LABEL_71:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOTransitStepIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_177;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_213;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_177;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_213;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_177;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_213;
          }
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitVehicleInfoIsValid(a1)) {
            goto LABEL_237;
          }
          goto LABEL_212;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_177;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_213;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_177;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_213;
          }
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitEnterExitInfoIsValid(a1)) {
            goto LABEL_237;
          }
          goto LABEL_212;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitTransferInfoIsValid(a1)) {
            goto LABEL_237;
          }
          goto LABEL_212;
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_177;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_213;
          }
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitArrivalInfoIsValid(a1)) {
            goto LABEL_237;
          }
          goto LABEL_212;
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_237;
          }
          goto LABEL_212;
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_177;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_213;
          }
        case 0x11u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOInstructionSetIsValid(a1)) {
            goto LABEL_237;
          }
          goto LABEL_212;
        case 0x13u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v53 = 0;
          while (1)
          {
            uint64_t v54 = *v2;
            uint64_t v55 = *(void *)&a1[v54];
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
              goto LABEL_177;
            }
            int v57 = *(char *)(*(void *)&a1[*v5] + v55);
            *(void *)&a1[v54] = v56;
            if (v57 < 0)
            {
              BOOL v22 = v53++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_213;
          }
        case 0x14u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v58 = 0;
          while (1)
          {
            uint64_t v59 = *v2;
            uint64_t v60 = *(void *)&a1[v59];
            unint64_t v61 = v60 + 1;
            if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
              goto LABEL_177;
            }
            int v62 = *(char *)(*(void *)&a1[*v5] + v60);
            *(void *)&a1[v59] = v61;
            if (v62 < 0)
            {
              BOOL v22 = v58++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_213;
          }
        case 0x16u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_237;
            }
            while (1)
            {
              uint64_t v63 = *v2;
              uint64_t v64 = *(void *)&a1[v63];
              unint64_t v65 = v64 + 1;
              if (v64 == -1 || v65 > *(void *)&a1[*v3]) {
                goto LABEL_177;
              }
              int v66 = *(char *)(*(void *)&a1[*v5] + v64);
              *(void *)&a1[v63] = v65;
              if (v66 < 0)
              {
                unsigned int v67 = v15++;
                if (v67 <= 8) {
                  continue;
                }
              }
              goto LABEL_213;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_237;
          }
LABEL_216:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v103 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v104 = *v2;
              uint64_t v105 = *(void *)&a1[v104];
              unint64_t v106 = v105 + 1;
              if (v105 == -1 || v106 > *(void *)&a1[*v3]) {
                break;
              }
              int v107 = *(char *)(*(void *)&a1[*v5] + v105);
              *(void *)&a1[v104] = v106;
              if (v107 < 0)
              {
                BOOL v13 = v103++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_216;
            }
            a1[*v4] = 1;
          }
          goto LABEL_212;
        case 0x17u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_237:
              PBReaderRecallMark();
              return 0;
            }
LABEL_226:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v108 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v109 = *v2;
                uint64_t v110 = *(void *)&a1[v109];
                unint64_t v111 = v110 + 1;
                if (v110 == -1 || v111 > *(void *)&a1[*v3]) {
                  break;
                }
                int v112 = *(char *)(*(void *)&a1[*v5] + v110);
                *(void *)&a1[v109] = v111;
                if (v112 < 0)
                {
                  BOOL v13 = v108++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_226;
              }
              a1[*v4] = 1;
            }
LABEL_212:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_237;
            }
            while (1)
            {
              uint64_t v68 = *v2;
              uint64_t v69 = *(void *)&a1[v68];
              unint64_t v70 = v69 + 1;
              if (v69 == -1 || v70 > *(void *)&a1[*v3]) {
                break;
              }
              int v71 = *(char *)(*(void *)&a1[*v5] + v69);
              *(void *)&a1[v68] = v70;
              if (v71 < 0)
              {
                unsigned int v72 = v15++;
                if (v72 <= 8) {
                  continue;
                }
              }
              goto LABEL_213;
            }
LABEL_177:
            a1[*v4] = 1;
          }
LABEL_213:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_235;
          }
          break;
        case 0x18u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v73 = 0;
          while (1)
          {
            uint64_t v74 = *v2;
            uint64_t v75 = *(void *)&a1[v74];
            unint64_t v76 = v75 + 1;
            if (v75 == -1 || v76 > *(void *)&a1[*v3]) {
              goto LABEL_177;
            }
            int v77 = *(char *)(*(void *)&a1[*v5] + v75);
            *(void *)&a1[v74] = v76;
            if (v77 < 0)
            {
              BOOL v22 = v73++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_213;
          }
        case 0x19u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v78 = 0;
          while (1)
          {
            uint64_t v79 = *v2;
            uint64_t v80 = *(void *)&a1[v79];
            unint64_t v81 = v80 + 1;
            if (v80 == -1 || v81 > *(void *)&a1[*v3]) {
              goto LABEL_177;
            }
            int v82 = *(char *)(*(void *)&a1[*v5] + v80);
            *(void *)&a1[v79] = v81;
            if (v82 < 0)
            {
              BOOL v22 = v78++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_213;
          }
        case 0x1Au:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v83 = 0;
          while (1)
          {
            uint64_t v84 = *v2;
            uint64_t v85 = *(void *)&a1[v84];
            unint64_t v86 = v85 + 1;
            if (v85 == -1 || v86 > *(void *)&a1[*v3]) {
              goto LABEL_177;
            }
            int v87 = *(char *)(*(void *)&a1[*v5] + v85);
            *(void *)&a1[v84] = v86;
            if (v87 < 0)
            {
              BOOL v22 = v83++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_213;
          }
        case 0x1Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v88 = 0;
          while (1)
          {
            uint64_t v89 = *v2;
            uint64_t v90 = *(void *)&a1[v89];
            unint64_t v91 = v90 + 1;
            if (v90 == -1 || v91 > *(void *)&a1[*v3]) {
              goto LABEL_177;
            }
            int v92 = *(char *)(*(void *)&a1[*v5] + v90);
            *(void *)&a1[v89] = v91;
            if (v92 < 0)
            {
              BOOL v22 = v88++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_213;
          }
        case 0x1Cu:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v93 = 0;
          while (1)
          {
            uint64_t v94 = *v2;
            uint64_t v95 = *(void *)&a1[v94];
            unint64_t v96 = v95 + 1;
            if (v95 == -1 || v96 > *(void *)&a1[*v3]) {
              goto LABEL_177;
            }
            int v97 = *(char *)(*(void *)&a1[*v5] + v95);
            *(void *)&a1[v94] = v96;
            if (v97 < 0)
            {
              BOOL v22 = v93++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_213;
          }
        case 0x1Du:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v98 = 0;
          while (1)
          {
            uint64_t v99 = *v2;
            uint64_t v100 = *(void *)&a1[v99];
            unint64_t v101 = v100 + 1;
            if (v100 == -1 || v101 > *(void *)&a1[*v3]) {
              goto LABEL_177;
            }
            int v102 = *(char *)(*(void *)&a1[*v5] + v100);
            *(void *)&a1[v99] = v101;
            if (v102 < 0)
            {
              BOOL v22 = v98++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_213;
          }
        case 0x1Eu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitBaseFareIsValid(a1)) {
            goto LABEL_237;
          }
          goto LABEL_212;
        case 0x1Fu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitSurchargeIsValid(a1)) {
            goto LABEL_237;
          }
          goto LABEL_212;
        case 0x20u:
          if (v15 == 2) {
            goto LABEL_187;
          }
          goto LABEL_237;
        case 0x21u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitVehiclePositionInfoIsValid(a1)) {
            goto LABEL_237;
          }
          goto LABEL_212;
        case 0x22u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitScheduleInfoIsValid(a1)) {
            goto LABEL_237;
          }
          goto LABEL_212;
        case 0x23u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitBoardingInfoIsValid(a1)) {
            goto LABEL_237;
          }
          goto LABEL_212;
        case 0x24u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitStepBadgeIsValid(a1)) {
            goto LABEL_237;
          }
          goto LABEL_212;
        case 0x25u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitRegionAlertIsValid(a1)) {
            goto LABEL_237;
          }
          goto LABEL_212;
        case 0x26u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOAdvisoriesInfoIsValid(a1)) {
            goto LABEL_212;
          }
          goto LABEL_237;
        default:
LABEL_187:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_237;
          }
          goto LABEL_213;
      }
    }
  }
LABEL_235:
  BOOL v113 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v113;
}

void sub_1893277D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitDecoderDataIsDirty(uint64_t a1)
{
  uint64_t v103 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  __int16 v2 = *(_WORD *)(a1 + 140);
  if ((v2 & 0x7FFE) == 0)
  {
    if ((v2 & 0x10) != 0)
    {
      long long v90 = 0u;
      long long v91 = 0u;
      long long v88 = 0u;
      long long v89 = 0u;
      id v4 = *(id *)(a1 + 48);
      uint64_t v5 = [v4 countByEnumeratingWithState:&v88 objects:v102 count:16];
      if (v5)
      {
        uint64_t v6 = v5;
        uint64_t v7 = *(void *)v89;
LABEL_6:
        uint64_t v8 = 0;
        while (1)
        {
          if (*(void *)v89 != v7) {
            objc_enumerationMutation(v4);
          }
          if (GEOPBTransitLineIsDirty(*(os_unfair_lock_s **)(*((void *)&v88 + 1) + 8 * v8))) {
            goto LABEL_114;
          }
          if (v6 == ++v8)
          {
            uint64_t v6 = [v4 countByEnumeratingWithState:&v88 objects:v102 count:16];
            if (v6) {
              goto LABEL_6;
            }
            break;
          }
        }
      }

      __int16 v2 = *(_WORD *)(a1 + 140);
    }
    if ((v2 & 2) != 0)
    {
      long long v86 = 0u;
      long long v87 = 0u;
      long long v84 = 0u;
      long long v85 = 0u;
      id v4 = *(id *)(a1 + 24);
      uint64_t v9 = [v4 countByEnumeratingWithState:&v84 objects:v101 count:16];
      if (v9)
      {
        uint64_t v10 = v9;
        uint64_t v11 = *(void *)v85;
LABEL_16:
        uint64_t v12 = 0;
        while (1)
        {
          if (*(void *)v85 != v11) {
            objc_enumerationMutation(v4);
          }
          if (GEOPBTransitAccessPointIsDirty(*(os_unfair_lock_s **)(*((void *)&v84 + 1) + 8 * v12))) {
            goto LABEL_114;
          }
          if (v10 == ++v12)
          {
            uint64_t v10 = [v4 countByEnumeratingWithState:&v84 objects:v101 count:16];
            if (v10) {
              goto LABEL_16;
            }
            break;
          }
        }
      }

      __int16 v2 = *(_WORD *)(a1 + 140);
    }
    if ((v2 & 0x1000) != 0)
    {
      long long v82 = 0u;
      long long v83 = 0u;
      long long v80 = 0u;
      long long v81 = 0u;
      id v4 = *(id *)(a1 + 112);
      uint64_t v13 = [v4 countByEnumeratingWithState:&v80 objects:v100 count:16];
      if (v13)
      {
        uint64_t v14 = v13;
        uint64_t v15 = *(void *)v81;
LABEL_26:
        uint64_t v16 = 0;
        while (1)
        {
          if (*(void *)v81 != v15) {
            objc_enumerationMutation(v4);
          }
          if (GEORouteIsDirty(*(os_unfair_lock_s **)(*((void *)&v80 + 1) + 8 * v16))) {
            goto LABEL_114;
          }
          if (v14 == ++v16)
          {
            uint64_t v14 = [v4 countByEnumeratingWithState:&v80 objects:v100 count:16];
            if (v14) {
              goto LABEL_26;
            }
            break;
          }
        }
      }

      __int16 v2 = *(_WORD *)(a1 + 140);
    }
    if ((v2 & 0x100) != 0)
    {
      long long v78 = 0u;
      long long v79 = 0u;
      long long v76 = 0u;
      long long v77 = 0u;
      id v4 = *(id *)(a1 + 80);
      uint64_t v17 = [v4 countByEnumeratingWithState:&v76 objects:v99 count:16];
      if (v17)
      {
        uint64_t v18 = v17;
        uint64_t v19 = *(void *)v77;
LABEL_36:
        uint64_t v20 = 0;
        while (1)
        {
          if (*(void *)v77 != v19) {
            objc_enumerationMutation(v4);
          }
          if (GEOPBTransitStopIsDirty(*(void *)(*((void *)&v76 + 1) + 8 * v20))) {
            goto LABEL_114;
          }
          if (v18 == ++v20)
          {
            uint64_t v18 = [v4 countByEnumeratingWithState:&v76 objects:v99 count:16];
            if (v18) {
              goto LABEL_36;
            }
            break;
          }
        }
      }

      __int16 v2 = *(_WORD *)(a1 + 140);
    }
    if ((v2 & 0x200) != 0)
    {
      long long v74 = 0u;
      long long v75 = 0u;
      long long v72 = 0u;
      long long v73 = 0u;
      id v4 = *(id *)(a1 + 88);
      uint64_t v21 = [v4 countByEnumeratingWithState:&v72 objects:v98 count:16];
      if (v21)
      {
        uint64_t v22 = v21;
        uint64_t v23 = *(void *)v73;
LABEL_46:
        uint64_t v24 = 0;
        while (1)
        {
          if (*(void *)v73 != v23) {
            objc_enumerationMutation(v4);
          }
          if (GEOPBTransitSystemIsDirty(*(os_unfair_lock_s **)(*((void *)&v72 + 1) + 8 * v24))) {
            goto LABEL_114;
          }
          if (v22 == ++v24)
          {
            uint64_t v22 = [v4 countByEnumeratingWithState:&v72 objects:v98 count:16];
            if (v22) {
              goto LABEL_46;
            }
            break;
          }
        }
      }

      __int16 v2 = *(_WORD *)(a1 + 140);
    }
    if ((v2 & 0x800) != 0)
    {
      long long v70 = 0u;
      long long v71 = 0u;
      long long v68 = 0u;
      long long v69 = 0u;
      id v4 = *(id *)(a1 + 104);
      uint64_t v25 = [v4 countByEnumeratingWithState:&v68 objects:v97 count:16];
      if (v25)
      {
        uint64_t v26 = v25;
        uint64_t v27 = *(void *)v69;
LABEL_56:
        uint64_t v28 = 0;
        while (1)
        {
          if (*(void *)v69 != v27) {
            objc_enumerationMutation(v4);
          }
          if (GEOPBTransitIncidentIsDirty(*(os_unfair_lock_s **)(*((void *)&v68 + 1) + 8 * v28))) {
            goto LABEL_114;
          }
          if (v26 == ++v28)
          {
            uint64_t v26 = [v4 countByEnumeratingWithState:&v68 objects:v97 count:16];
            if (v26) {
              goto LABEL_56;
            }
            break;
          }
        }
      }

      __int16 v2 = *(_WORD *)(a1 + 140);
    }
    if ((v2 & 8) != 0)
    {
      long long v66 = 0u;
      long long v67 = 0u;
      long long v64 = 0u;
      long long v65 = 0u;
      id v4 = *(id *)(a1 + 40);
      uint64_t v29 = [v4 countByEnumeratingWithState:&v64 objects:v96 count:16];
      if (v29)
      {
        uint64_t v30 = v29;
        uint64_t v31 = *(void *)v65;
LABEL_66:
        uint64_t v32 = 0;
        while (1)
        {
          if (*(void *)v65 != v31) {
            objc_enumerationMutation(v4);
          }
          if (GEOPBTransitHallIsDirty(*(void *)(*((void *)&v64 + 1) + 8 * v32))) {
            goto LABEL_114;
          }
          if (v30 == ++v32)
          {
            uint64_t v30 = [v4 countByEnumeratingWithState:&v64 objects:v96 count:16];
            if (v30) {
              goto LABEL_66;
            }
            break;
          }
        }
      }

      __int16 v2 = *(_WORD *)(a1 + 140);
    }
    if ((v2 & 4) != 0)
    {
      long long v62 = 0u;
      long long v63 = 0u;
      long long v60 = 0u;
      long long v61 = 0u;
      id v4 = *(id *)(a1 + 32);
      uint64_t v33 = [v4 countByEnumeratingWithState:&v60 objects:v95 count:16];
      if (v33)
      {
        uint64_t v34 = v33;
        uint64_t v35 = *(void *)v61;
LABEL_76:
        uint64_t v36 = 0;
        while (1)
        {
          if (*(void *)v61 != v35) {
            objc_enumerationMutation(v4);
          }
          if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(*((void *)&v60 + 1) + 8 * v36))) {
            goto LABEL_114;
          }
          if (v34 == ++v36)
          {
            uint64_t v34 = [v4 countByEnumeratingWithState:&v60 objects:v95 count:16];
            if (v34) {
              goto LABEL_76;
            }
            break;
          }
        }
      }

      __int16 v2 = *(_WORD *)(a1 + 140);
    }
    if ((v2 & 0x400) != 0)
    {
      long long v58 = 0u;
      long long v59 = 0u;
      long long v56 = 0u;
      long long v57 = 0u;
      id v4 = *(id *)(a1 + 96);
      uint64_t v37 = [v4 countByEnumeratingWithState:&v56 objects:v94 count:16];
      if (v37)
      {
        uint64_t v38 = v37;
        uint64_t v39 = *(void *)v57;
LABEL_86:
        uint64_t v40 = 0;
        while (1)
        {
          if (*(void *)v57 != v39) {
            objc_enumerationMutation(v4);
          }
          if (GEOPBTransitRoutingIncidentMessageIsDirty(*(void *)(*((void *)&v56 + 1) + 8 * v40))) {
            goto LABEL_114;
          }
          if (v38 == ++v40)
          {
            uint64_t v38 = [v4 countByEnumeratingWithState:&v56 objects:v94 count:16];
            if (v38) {
              goto LABEL_86;
            }
            break;
          }
        }
      }

      __int16 v2 = *(_WORD *)(a1 + 140);
    }
    if ((v2 & 0x80) != 0)
    {
      long long v54 = 0u;
      long long v55 = 0u;
      long long v52 = 0u;
      long long v53 = 0u;
      id v4 = *(id *)(a1 + 72);
      uint64_t v41 = [v4 countByEnumeratingWithState:&v52 objects:v93 count:16];
      if (v41)
      {
        uint64_t v42 = v41;
        uint64_t v43 = *(void *)v53;
LABEL_96:
        uint64_t v44 = 0;
        while (1)
        {
          if (*(void *)v53 != v43) {
            objc_enumerationMutation(v4);
          }
          if (GEOTransitStepIsDirty(*(os_unfair_lock_s **)(*((void *)&v52 + 1) + 8 * v44))) {
            goto LABEL_114;
          }
          if (v42 == ++v44)
          {
            uint64_t v42 = [v4 countByEnumeratingWithState:&v52 objects:v93 count:16];
            if (v42) {
              goto LABEL_96;
            }
            break;
          }
        }
      }

      __int16 v2 = *(_WORD *)(a1 + 140);
    }
    if ((v2 & 0x20) == 0) {
      return 0;
    }
    long long v50 = 0u;
    long long v51 = 0u;
    long long v48 = 0u;
    long long v49 = 0u;
    id v4 = *(id *)(a1 + 56);
    uint64_t v3 = [v4 countByEnumeratingWithState:&v48 objects:v92 count:16];
    if (!v3)
    {
LABEL_115:

      return v3;
    }
    uint64_t v45 = *(void *)v49;
LABEL_107:
    uint64_t v46 = 0;
    while (1)
    {
      if (*(void *)v49 != v45) {
        objc_enumerationMutation(v4);
      }
      if (GEOPBTransitPaymentMethodIsDirty(*(void *)(*((void *)&v48 + 1) + 8 * v46))) {
        break;
      }
      if (v3 == ++v46)
      {
        uint64_t v3 = [v4 countByEnumeratingWithState:&v48 objects:v92 count:16];
        if (v3) {
          goto LABEL_107;
        }
        goto LABEL_115;
      }
    }
LABEL_114:
    uint64_t v3 = 1;
    goto LABEL_115;
  }
  return 1;
}

os_unfair_lock_s *GEOTransitDecoderDataIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOTransitDecoderDataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 34);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18932939C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189329FCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitDepartureEntryReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          *(unsigned char *)(a1 + 28) |= 2u;
          while (1)
          {
            uint64_t v28 = *v4;
            uint64_t v29 = *(void *)&v3[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&v3[*v5]) {
              break;
            }
            char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
            *(void *)&v3[v28] = v30;
            v27 |= (unint64_t)(v31 & 0x7F) << v25;
            if ((v31 & 0x80) == 0) {
              goto LABEL_44;
            }
            v25 += 7;
            BOOL v15 = v26++ >= 9;
            if (v15)
            {
              LODWORD(v27) = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6]) {
            LODWORD(v27) = 0;
          }
LABEL_46:
          *(_DWORD *)(a1 + 24) = v27;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_40;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_42;
            }
          }
          v3[*v6] = 1;
LABEL_40:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_42:
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v32 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v33 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v32;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_49;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v34 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    BOOL v34 = 0;
  }
  objc_sync_exit(v3);

  return v34;
}

void sub_18932B180(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitDepartureEntryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTransitDepartureEntryReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18932B1E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitDepartureEntryIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOTransitEngineDebugDataReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          *(unsigned char *)(a1 + 24) |= 1u;
          uint64_t v18 = *v4;
          unint64_t v19 = *(void *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
            *(void *)&v3[v18] = v19 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v20 = 0;
          }
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_31;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_31:
    BOOL v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_18932BEEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitEngineDebugDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTransitEngineDebugDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18932BF50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitEngineDebugDataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v16 != 1) {
          goto LABEL_29;
        }
        uint64_t v18 = *v2;
        unint64_t v19 = *(void *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v20 = v19 + 8, v20 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v18] = v20;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v21 = 0;
        goto LABEL_28;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOTransitEnterExitInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_60;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_62;
              }
            }
            v3[*v6] = 1;
LABEL_60:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_62:
            uint64_t v53 = 16;
            goto LABEL_75;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 2u;
            while (2)
            {
              uint64_t v27 = *v4;
              uint64_t v28 = *(void *)&v3[v27];
              unint64_t v29 = v28 + 1;
              if (v28 == -1 || v29 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
                *(void *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_66;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_66:
            uint64_t v53 = 20;
            goto LABEL_75;
          case 3u:
            char v31 = 0;
            unsigned int v32 = 0;
            uint64_t v33 = 0;
            *(unsigned char *)(a1 + 32) |= 8u;
            while (2)
            {
              uint64_t v34 = *v4;
              uint64_t v35 = *(void *)&v3[v34];
              unint64_t v36 = v35 + 1;
              if (v35 == -1 || v36 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v37 = *(unsigned char *)(*(void *)&v3[*v7] + v35);
                *(void *)&v3[v34] = v36;
                v33 |= (unint64_t)(v37 & 0x7F) << v31;
                if (v37 < 0)
                {
                  v31 += 7;
                  BOOL v15 = v32++ >= 9;
                  if (v15)
                  {
                    uint64_t v33 = 0;
                    goto LABEL_70;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v33 = 0;
            }
LABEL_70:
            BOOL v54 = v33 != 0;
            uint64_t v55 = 28;
            goto LABEL_80;
          case 5u:
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 4u;
            while (2)
            {
              uint64_t v42 = *v4;
              uint64_t v43 = *(void *)&v3[v42];
              unint64_t v44 = v43 + 1;
              if (v43 == -1 || v44 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v45 = *(unsigned char *)(*(void *)&v3[*v7] + v43);
                *(void *)&v3[v42] = v44;
                v20 |= (unint64_t)(v45 & 0x7F) << v40;
                if (v45 < 0)
                {
                  v40 += 7;
                  BOOL v15 = v41++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_74;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_74:
            uint64_t v53 = 24;
LABEL_75:
            *(_DWORD *)(a1 + v53) = v20;
            continue;
          case 7u:
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v48 = 0;
            *(unsigned char *)(a1 + 32) |= 0x10u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v38 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              uint64_t v39 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v38;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_83;
            }
            continue;
        }
        while (1)
        {
          uint64_t v49 = *v4;
          uint64_t v50 = *(void *)&v3[v49];
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)&v3[*v5]) {
            break;
          }
          char v52 = *(unsigned char *)(*(void *)&v3[*v7] + v50);
          *(void *)&v3[v49] = v51;
          v48 |= (unint64_t)(v52 & 0x7F) << v46;
          if ((v52 & 0x80) == 0) {
            goto LABEL_77;
          }
          v46 += 7;
          BOOL v15 = v47++ >= 9;
          if (v15)
          {
            uint64_t v48 = 0;
            goto LABEL_79;
          }
        }
        v3[*v6] = 1;
LABEL_77:
        if (v3[*v6]) {
          uint64_t v48 = 0;
        }
LABEL_79:
        BOOL v54 = v48 != 0;
        uint64_t v55 = 29;
LABEL_80:
        *(unsigned char *)(a1 + v55) = v54;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v56 = v3[*v6] == 0;
  }
  else
  {
LABEL_83:
    BOOL v56 = 0;
  }
  objc_sync_exit(v3);

  return v56;
}

void sub_18932D338(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitEnterExitInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTransitEnterExitInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18932D3B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitEnterExitInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v21 = v32++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v37 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_65:
          BOOL v42 = 0;
          goto LABEL_64;
      }
      while (1)
      {
        uint64_t v38 = *v2;
        uint64_t v39 = *(void *)&a1[v38];
        unint64_t v40 = v39 + 1;
        if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
          break;
        }
        int v41 = *(char *)(*(void *)&a1[*v5] + v39);
        *(void *)&a1[v38] = v40;
        if (v41 < 0)
        {
          BOOL v21 = v37++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_62;
      }
LABEL_61:
      a1[*v4] = 1;
LABEL_62:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v42 = a1[*v4] == 0;
LABEL_64:
  PBReaderRecallMark();
  return v42;
}

BOOL GEOTransitEntryReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 48) |= 2u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_54;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                uint64_t v20 = 0;
                goto LABEL_56;
              }
            }
            v3[*v6] = 1;
LABEL_54:
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_56:
            uint64_t v48 = 32;
            goto LABEL_61;
          case 2u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 48) |= 1u;
            while (2)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
                *(void *)&v3[v29] = v31;
                v20 |= (unint64_t)(v32 & 0x7F) << v27;
                if (v32 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    uint64_t v20 = 0;
                    goto LABEL_60;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_60:
            uint64_t v48 = 16;
LABEL_61:
            *(void *)(a1 + v48) = v20;
            continue;
          case 3u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v35 = 0;
            *(unsigned char *)(a1 + 48) |= 4u;
            while (2)
            {
              uint64_t v36 = *v4;
              uint64_t v37 = *(void *)&v3[v36];
              unint64_t v38 = v37 + 1;
              if (v37 == -1 || v38 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
                *(void *)&v3[v36] = v38;
                v35 |= (unint64_t)(v39 & 0x7F) << v33;
                if (v39 < 0)
                {
                  v33 += 7;
                  BOOL v15 = v34++ >= 9;
                  if (v15)
                  {
                    LODWORD(v35) = 0;
                    goto LABEL_65;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v35) = 0;
            }
LABEL_65:
            uint64_t v49 = 40;
            goto LABEL_70;
          case 4u:
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v35 = 0;
            *(unsigned char *)(a1 + 48) |= 8u;
            break;
          case 5u:
            uint64_t v46 = PBReaderReadData();
            unsigned int v47 = *(void **)(a1 + 24);
            *(void *)(a1 + 24) = v46;

            continue;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              int v26 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v25;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_73;
            }
            continue;
        }
        while (1)
        {
          uint64_t v42 = *v4;
          uint64_t v43 = *(void *)&v3[v42];
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)&v3[*v5]) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)&v3[*v7] + v43);
          *(void *)&v3[v42] = v44;
          v35 |= (unint64_t)(v45 & 0x7F) << v40;
          if ((v45 & 0x80) == 0) {
            goto LABEL_67;
          }
          v40 += 7;
          BOOL v15 = v41++ >= 9;
          if (v15)
          {
            LODWORD(v35) = 0;
            goto LABEL_69;
          }
        }
        v3[*v6] = 1;
LABEL_67:
        if (v3[*v6]) {
          LODWORD(v35) = 0;
        }
LABEL_69:
        uint64_t v49 = 44;
LABEL_70:
        *(_DWORD *)(a1 + v49) = v35;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v50 = v3[*v6] == 0;
  }
  else
  {
LABEL_73:
    BOOL v50 = 0;
  }
  objc_sync_exit(v3);

  return v50;
}

void sub_18932EBEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitEntryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTransitEntryReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18932EC64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitEntryIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_51;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_51;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_51;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v33 = 0;
          break;
        case 5u:
          if (v15 == 2) {
            goto LABEL_53;
          }
          goto LABEL_57;
        default:
LABEL_53:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          BOOL v38 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        uint64_t v34 = *v2;
        uint64_t v35 = *(void *)&a1[v34];
        unint64_t v36 = v35 + 1;
        if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
          break;
        }
        int v37 = *(char *)(*(void *)&a1[*v5] + v35);
        *(void *)&a1[v34] = v36;
        if (v37 < 0)
        {
          BOOL v22 = v33++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_51:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v38 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v38;
}

void sub_18932F920(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitExitPlanInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 72) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 72) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 72) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v7;
        char v18 = v16 | v11;
        if (((v16 | v11) | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v79 = 1;
        int v21 = (int *)MEMORY[0x1E4F940C8];
        char v22 = v16 & ~(_BYTE)v11 | v7;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_99;
        }
        char v77 = v17;
        char v80 = v18 | v17;
        char v81 = (v19 == 0) | v18;
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        char v78 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_97;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_97:
      int v79 = 1;
      goto LABEL_98;
    }
    uint64_t v35 = v21;
    unint64_t v36 = v26 >> 3;
    BOOL v37 = v18;
    if ((v81 & 1) == 0)
    {
      BOOL v38 = v19;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    if (v36 == 3) {
      break;
    }
    if (v36 == 2)
    {
      if (v37 && (*(unsigned char *)(a1 + 72) & 4) == 0)
      {
        int v21 = v35;
        if (v33 == 2)
        {
          int v52 = PBReaderPlaceMark();
          char v6 = (int *)MEMORY[0x1E4F940E0];
          if (!v52) {
            goto LABEL_119;
          }
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
          if (*(void *)(v3 + *v20) < *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]))
          {
            do
            {
              if (*(unsigned char *)(v3 + *v21)) {
                break;
              }
              char v53 = 0;
              unsigned int v54 = 0;
              uint64_t v55 = 0;
              while (1)
              {
                uint64_t v56 = *v20;
                uint64_t v57 = *(void *)(v3 + v56);
                unint64_t v58 = v57 + 1;
                if (v57 == -1 || v58 > *(void *)(v3 + *v6)) {
                  break;
                }
                char v59 = *(unsigned char *)(*(void *)(v3 + *v23) + v57);
                *(void *)(v3 + v56) = v58;
                v55 |= (unint64_t)(v59 & 0x7F) << v53;
                if (v59 < 0)
                {
                  v53 += 7;
                  BOOL v31 = v54++ >= 9;
                  if (!v31) {
                    continue;
                  }
                }
                goto LABEL_68;
              }
              *(unsigned char *)(v3 + *v21) = 1;
LABEL_68:
              PBRepeatedUInt32Add();
            }
            while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6));
          }
          PBReaderRecallMark();
        }
        else
        {
          char v65 = 0;
          unsigned int v66 = 0;
          uint64_t v67 = 0;
          char v6 = (int *)MEMORY[0x1E4F940E0];
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v68 = *v20;
            uint64_t v69 = *(void *)(v3 + v68);
            unint64_t v70 = v69 + 1;
            if (v69 == -1 || v70 > *(void *)(v3 + *v6)) {
              break;
            }
            char v71 = *(unsigned char *)(*(void *)(v3 + *v23) + v69);
            *(void *)(v3 + v68) = v70;
            v67 |= (unint64_t)(v71 & 0x7F) << v65;
            if (v71 < 0)
            {
              v65 += 7;
              BOOL v31 = v66++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_95;
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_95:
          PBRepeatedUInt32Add();
        }
        char v18 = v78;
        goto LABEL_77;
      }
      goto LABEL_76;
    }
    if (v36 == 1)
    {
      if (v8)
      {
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        int v21 = v35;
        char v6 = (int *)MEMORY[0x1E4F940E0];
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        while (1)
        {
          uint64_t v45 = *v20;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
            break;
          }
          char v48 = *(unsigned char *)(*(void *)(v3 + *v23) + v46);
          *(void *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0) {
            goto LABEL_81;
          }
          v42 += 7;
          BOOL v31 = v43++ >= 9;
          if (v31)
          {
            LODWORD(v44) = 0;
            goto LABEL_83;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_81:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v44) = 0;
        }
LABEL_83:
        *(_DWORD *)(a1 + 68) = v44;
        goto LABEL_77;
      }
      goto LABEL_76;
    }
    if ((v77 & 1) == 0 || (*(unsigned char *)(a1 + 72) & 2) != 0) {
      goto LABEL_76;
    }
    if (!*(void *)(a1 + 16))
    {
      id v60 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      long long v61 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v60;
    }
    int v62 = PBUnknownFieldAdd();
    char v18 = v78;
    int v21 = v35;
    char v6 = (int *)MEMORY[0x1E4F940E0];
    unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
    if (!v62)
    {
      int v79 = 0;
      goto LABEL_100;
    }
LABEL_77:
    if (!(v80 & 1 | (v9 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
      goto LABEL_97;
    }
  }
  if (!v37)
  {
LABEL_76:
    char v63 = PBReaderSkipValueWithTag();
    char v18 = v78;
    int v21 = v35;
    char v6 = (int *)MEMORY[0x1E4F940E0];
    unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
    if ((v63 & 1) == 0)
    {
      int v79 = 0;
      goto LABEL_98;
    }
    goto LABEL_77;
  }
  int v21 = v35;
  if ((*(unsigned char *)(a1 + 72) & 8) != 0)
  {
    char v64 = PBReaderSkipValueWithTag();
    char v6 = (int *)MEMORY[0x1E4F940E0];
    if ((v64 & 1) == 0) {
      goto LABEL_119;
    }
    v9 += *(unsigned __int8 *)(a1 + 72) << 28 >> 31;
    goto LABEL_86;
  }
  char v49 = PBReaderPlaceMark();
  char v6 = (int *)MEMORY[0x1E4F940E0];
  if ((v49 & 1) == 0) {
    goto LABEL_119;
  }
  BOOL v50 = objc_alloc_init(GEOFormattedString);
  if (GEOFormattedStringReadAllFrom((uint64_t)v50, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    unint64_t v51 = *(void **)(a1 + 48);
    *(void *)(a1 + 48) = v50;

    --v9;
LABEL_86:
    char v18 = v78;
    unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
    goto LABEL_77;
  }

LABEL_119:
  int v79 = 0;
  char v18 = v78;
LABEL_98:
  char v22 = v77;
LABEL_99:
  if (v22) {
LABEL_100:
  }
    *(unsigned char *)(a1 + 72) |= 2u;
  if (v18 & 1 | ((v79 & 1) == 0))
  {
    *(unsigned char *)(a1 + 72) |= 4u;
    *(unsigned char *)(a1 + 72) |= 8u;
    goto LABEL_111;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v73 = *v19++;
        int v72 = v73;
        if (v73 == 2) {
          break;
        }
        if (v72 == 3)
        {
          char v74 = 8;
          goto LABEL_110;
        }
        if (!v72) {
          goto LABEL_111;
        }
      }
      char v74 = 4;
LABEL_110:
      *(unsigned char *)(a1 + 72) |= v74;
      continue;
    }
  }
LABEL_111:
  if (v79)
  {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
    if ((v18 & 1) == 0) {
      return v3;
    }
LABEL_115:
    long long v75 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v18) {
      goto LABEL_115;
    }
  }
  return v3;
}

void sub_1893304B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189330C5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitExitPlanInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitExitPlanInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOTransitExitPlanInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOTransitExitPlanInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitExitPlanInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 48) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189330E04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitExitPlanInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitExitPlanInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189330E68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18933104C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOTransitExitPlanInfoIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  if ((*(unsigned char *)(a1 + 72) & 0x14) != 0) {
    return (os_unfair_lock_s *)1;
  }
  if ((*(unsigned char *)(a1 + 72) & 8) == 0) {
    return 0;
  }
  id v3 = *(os_unfair_lock_s **)(a1 + 48);

  return GEOFormattedStringIsDirty(v3);
}

os_unfair_lock_s *GEOTransitExitPlanInfoIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    __int16 v2 = _GEOTransitExitPlanInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return v2;
  }
  return result;
}

void sub_18933140C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189331724(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitLegReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        int v17 = v10 & 7;
        if (v16 || v17 == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_61;
            }
            while (*(void *)&v3[*v4] < *(void *)&v3[*v5] && !v3[*v6])
            {
              char v26 = 0;
              unsigned int v27 = 0;
              uint64_t v28 = 0;
              while (1)
              {
                uint64_t v29 = *v4;
                uint64_t v30 = *(void *)&v3[v29];
                unint64_t v31 = v30 + 1;
                if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
                  break;
                }
                char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
                *(void *)&v3[v29] = v31;
                v28 |= (unint64_t)(v32 & 0x7F) << v26;
                if (v32 < 0)
                {
                  v26 += 7;
                  BOOL v15 = v27++ >= 9;
                  if (!v15) {
                    continue;
                  }
                }
                goto LABEL_40;
              }
              v3[*v6] = 1;
LABEL_40:
              PBRepeatedInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v37 = 0;
            while (1)
            {
              uint64_t v38 = *v4;
              uint64_t v39 = *(void *)&v3[v38];
              unint64_t v40 = v39 + 1;
              if (v39 == -1 || v40 > *(void *)&v3[*v5]) {
                break;
              }
              char v41 = *(unsigned char *)(*(void *)&v3[*v7] + v39);
              *(void *)&v3[v38] = v40;
              v37 |= (unint64_t)(v41 & 0x7F) << v35;
              if (v41 < 0)
              {
                v35 += 7;
                BOOL v15 = v36++ >= 9;
                if (!v15) {
                  continue;
                }
              }
              goto LABEL_58;
            }
            v3[*v6] = 1;
LABEL_58:
            PBRepeatedInt32Add();
          }
        }
        else if ((v10 >> 3) == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 44) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_46;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              LODWORD(v21) = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6]) {
            LODWORD(v21) = 0;
          }
LABEL_48:
          *(_DWORD *)(a1 + 40) = v21;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v34 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v33;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_61;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_61:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_189332390(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitLegReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTransitLegReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893323F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitLegIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_37;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              unsigned int v27 = v15++;
              if (v27 <= 8) {
                continue;
              }
            }
            goto LABEL_49;
          }
        }
        if (!PBReaderPlaceMark())
        {
LABEL_52:
          PBReaderRecallMark();
          return 0;
        }
LABEL_39:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v28 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              break;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v13 = v28++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_39;
          }
          a1[*v4] = 1;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((v8 >> 3) == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              break;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0 && v17++ <= 8) {
              continue;
            }
            goto LABEL_49;
          }
LABEL_37:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_52;
        }
      }
LABEL_49:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOTransitOccupancyInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18933347C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitOccupancyInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTransitOccupancyInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893334E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitPathReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          char v18 = objc_alloc_init(GEOTransitLeg);
          if (!GEOTransitLegReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addLeg:", v18, 0, 0);
        }
        else
        {
          if (!a1[1])
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v20 = (void *)a1[1];
            a1[1] = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18933417C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitPathReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTransitPathReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893341E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitPathIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitLegIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOTransitPriceReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_51;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_51;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3) {
          break;
        }
        if (v18 == 2)
        {
          uint64_t v32 = PBReaderReadString();
          BOOL v33 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v32;
        }
        else
        {
          if (v18 == 1)
          {
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (1)
            {
              uint64_t v22 = *v4;
              uint64_t v23 = *(void *)&v3[v22];
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
              *(void *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_42;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_44;
              }
            }
            v3[*v6] = 1;
LABEL_42:
            if (v3[*v6]) {
              LODWORD(v21) = 0;
            }
LABEL_44:
            uint64_t v36 = 24;
LABEL_49:
            *(_DWORD *)(a1 + v36) = v21;
            goto LABEL_50;
          }
          if (!*(void *)(a1 + 8))
          {
            id v34 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v35 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v34;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_52;
          }
        }
LABEL_50:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_51;
        }
      }
      char v26 = 0;
      unsigned int v27 = 0;
      uint64_t v21 = 0;
      *(unsigned char *)(a1 + 32) |= 2u;
      while (1)
      {
        uint64_t v28 = *v4;
        uint64_t v29 = *(void *)&v3[v28];
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)&v3[*v5]) {
          break;
        }
        char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
        *(void *)&v3[v28] = v30;
        v21 |= (unint64_t)(v31 & 0x7F) << v26;
        if ((v31 & 0x80) == 0) {
          goto LABEL_46;
        }
        v26 += 7;
        BOOL v15 = v27++ >= 9;
        if (v15)
        {
          LODWORD(v21) = 0;
          goto LABEL_48;
        }
      }
      v3[*v6] = 1;
LABEL_46:
      if (v3[*v6]) {
        LODWORD(v21) = 0;
      }
LABEL_48:
      uint64_t v36 = 28;
      goto LABEL_49;
    }
LABEL_51:
    BOOL v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_52:
    BOOL v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_189335408(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitPriceReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTransitPriceReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18933546C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189335B6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitRegionAlertReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v52 = v17;
        char v53 = v18 | v17;
        if ((v18 | v7)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        char v54 = (v19 == 0) | v18;
        BOOL v55 = v18;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_62;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_62:
      int v50 = 1;
      goto LABEL_63;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v55;
    if ((v54 & 1) == 0)
    {
      char v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_56;
      }
      if ((*(unsigned char *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_82;
        }
        v8 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_82;
        }
        uint64_t v39 = objc_alloc_init(GEOTransitBanner);
        if (!GEOTransitBannerReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        unint64_t v40 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v39;

        --v8;
      }
      goto LABEL_60;
    }
    if (v52 & 1) == 0 || (*(unsigned char *)(a1 + 52)) {
      goto LABEL_56;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      BOOL v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    int v43 = PBUnknownFieldAdd();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v43)
    {
      int v50 = 0;
      unint64_t v51 = 0x1EB28C000;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v53 & 1 | (v8 != 0))) {
      goto LABEL_62;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + 52) & 4) != 0)
  {
LABEL_56:
    char v44 = PBReaderSkipValueWithTag();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v44 & 1) == 0)
    {
      int v50 = 0;
      goto LABEL_63;
    }
    goto LABEL_61;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_82;
  }
  uint64_t v39 = objc_alloc_init(GEOPBTransitTriggerRegion);
  if (GEOPBTransitTriggerRegionReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOTransitRegionAlert _addNoFlagsTriggerRegion:](a1, v39);

LABEL_60:
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_61;
  }
LABEL_81:

LABEL_82:
  int v50 = 0;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_63:
  unint64_t v51 = 0x1EB28C000uLL;
  if ((v52 & 1) == 0) {
    goto LABEL_65;
  }
LABEL_64:
  *(unsigned char *)(a1 + *(int *)(v51 + 3948)) |= 1u;
LABEL_65:
  if (v55 || (v50 & 1) == 0)
  {
    *(unsigned char *)(a1 + *(int *)(v51 + 3948)) |= 2u;
    *(unsigned char *)(a1 + *(int *)(v51 + 3948)) |= 4u;
    goto LABEL_75;
  }
  if (v19)
  {
    while (1)
    {
      int v47 = *v19++;
      int v46 = v47;
      if (v47 == 1) {
        break;
      }
      if (v46 == 2)
      {
        char v45 = 4;
LABEL_71:
        *(unsigned char *)(a1 + *(int *)(v51 + 3948)) |= v45;
      }
      else if (!v46)
      {
        goto LABEL_75;
      }
    }
    char v45 = 2;
    goto LABEL_71;
  }
LABEL_75:
  if (v50) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v55)
  {
    char v48 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189336228(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189336CA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOTransitRegionAlertCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 24) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOTransitRegionAlertReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitRegionAlertReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOTransitRegionAlertReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOTransitRegionAlertReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitRegionAlertReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOTransitRegionAlertCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189336F54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitRegionAlertReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitRegionAlertReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189336FB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitRegionAlertIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitBannerIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitTriggerRegionIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1893373EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitRegionAlertIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 2) != 0)
  {
    if (GEOTransitBannerIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEOTransitRegionAlertIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOTransitRegionAlertIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189337938(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189337C54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189337FBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitRouteDisplayStringsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFAFFFDFFFBFFFCLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 84) & 1)+ ((*(unsigned char *)(a1 + 84) & 2) != 0)+ ((*(unsigned char *)(a1 + 84) & 4) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v8)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_91;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_91:
      int v51 = 1;
      goto LABEL_92;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      char v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 7:
        if (!v34) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x20) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_111;
          }
          uint64_t v39 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v40 = 56;
            goto LABEL_75;
          }
          goto LABEL_110;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        char v46 = 4 * *(unsigned char *)(a1 + 84);
        goto LABEL_88;
      case 8:
        if (!v34) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_111;
          }
          char v46 = 8 * *(unsigned char *)(a1 + 84);
          goto LABEL_88;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_111;
        }
        uint64_t v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_110;
        }
        PBReaderRecallMark();
        uint64_t v40 = 48;
        goto LABEL_75;
      case 9:
        if (!v34) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_111;
          }
          char v46 = 16 * *(unsigned char *)(a1 + 84);
          goto LABEL_88;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_111;
        }
        uint64_t v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_110;
        }
        PBReaderRecallMark();
        uint64_t v40 = 40;
        goto LABEL_75;
      case 13:
        if (!v34) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_111;
          }
          char v46 = 2 * *(unsigned char *)(a1 + 84);
          goto LABEL_88;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_111;
        }
        uint64_t v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_110;
        }
        PBReaderRecallMark();
        uint64_t v40 = 64;
        goto LABEL_75;
      case 14:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 2) != 0) {
          goto LABEL_76;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_111;
        }
        uint64_t v39 = objc_alloc_init(GEOTransitAdvisory);
        if (!GEOTransitAdvisoryReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_110;
        }
        PBReaderRecallMark();
        -[GEOTransitRouteDisplayStrings _addNoFlagsAdvisory:](a1, v39);

        goto LABEL_89;
      case 15:
        if (!v34) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 84) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_111;
          }
          char v46 = 32 * *(unsigned char *)(a1 + 84);
LABEL_88:
          v7 += v46 >> 7;
LABEL_89:
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_90:
          if (!(v54 & 1 | (v7 != 0))) {
            goto LABEL_91;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_111;
        }
        uint64_t v39 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v40 = 32;
LABEL_75:
          char v44 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
          goto LABEL_89;
        }
LABEL_110:

LABEL_111:
        int v51 = 0;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_92:
        unint64_t v52 = 0x1EB28C000uLL;
        if (v53) {
LABEL_93:
        }
          *(unsigned char *)(a1 + *(int *)(v52 + 3976)) |= 1u;
        if (v56 || (v51 & 1) == 0)
        {
          *(unsigned char *)(a1 + *(int *)(v52 + 3976)) |= 0x20u;
          *(unsigned char *)(a1 + *(int *)(v52 + 3976)) |= 0x10u;
          *(unsigned char *)(a1 + *(int *)(v52 + 3976)) |= 8u;
          *(unsigned char *)(a1 + *(int *)(v52 + 3976)) |= 0x40u;
          *(unsigned char *)(a1 + *(int *)(v52 + 3976)) |= 2u;
          *(unsigned char *)(a1 + *(int *)(v52 + 3976)) |= 4u;
        }
        else if (v19)
        {
          while (1)
          {
            int v47 = *v19++;
            char v48 = 32;
            switch(v47)
            {
              case 0:
                goto LABEL_104;
              case 7:
                goto LABEL_103;
              case 8:
                char v48 = 16;
                goto LABEL_103;
              case 9:
                char v48 = 8;
                goto LABEL_103;
              case 13:
                char v48 = 64;
                goto LABEL_103;
              case 14:
                char v48 = 2;
                goto LABEL_103;
              case 15:
                char v48 = 4;
LABEL_103:
                *(unsigned char *)(a1 + *(int *)(v52 + 3976)) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_104:
        if (v51) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v56)
        {
          char v49 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v53 & 1) == 0 || (*(unsigned char *)(a1 + 84))
        {
LABEL_76:
          char v45 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v45 & 1) == 0)
          {
            int v51 = 0;
            goto LABEL_92;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v51 = 0;
            unint64_t v52 = 0x1EB28C000;
            goto LABEL_93;
          }
        }
        goto LABEL_90;
    }
  }
}

void sub_1893389DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189338B48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189338CB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189338E18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893391E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189339D20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitRouteDisplayStringsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  [a1[7] readAll:1];
  [a1[6] readAll:1];
  [a1[5] readAll:1];
  [a1[8] readAll:1];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v2 = a1[3];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  return [a1[4] readAll:1];
}

unint64_t GEOTransitRouteDisplayStringsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitRouteDisplayStringsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOTransitRouteDisplayStringsReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOTransitRouteDisplayStringsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitRouteDisplayStringsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOTransitRouteDisplayStringsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_18933A00C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitRouteDisplayStringsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitRouteDisplayStringsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18933A070(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitRouteDisplayStringsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_31:
    BOOL v17 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v17;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_31;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      if (v7++ >= 9)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14 || v15 == 4) {
      goto LABEL_31;
    }
    switch((v8 >> 3))
    {
      case 7u:
      case 8u:
      case 9u:
      case 0xDu:
      case 0xFu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
          goto LABEL_30;
        }
        goto LABEL_22;
      case 0xEu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitAdvisoryIsValid(a1)) {
          goto LABEL_30;
        }
LABEL_22:
        PBReaderRecallMark();
        goto LABEL_23;
      default:
        if (PBReaderSkipValueWithTag())
        {
LABEL_23:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_31;
          }
          continue;
        }
LABEL_30:
        PBReaderRecallMark();
        return 0;
    }
  }
}

void sub_18933A554(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitRouteDisplayStringsIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  int v2 = *(char *)(a1 + 84);
  if (v2 < 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 8) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 0x40) == 0) {
    goto LABEL_14;
  }
  if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 64))) {
    return 1;
  }
  LOBYTE(v2) = *(unsigned char *)(a1 + 84);
LABEL_14:
  if ((v2 & 2) != 0) {
    return 1;
  }
  if ((v2 & 4) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 32);

  return (uint64_t)GEOFormattedStringIsDirty(v4);
}

os_unfair_lock_s *GEOTransitRouteDisplayStringsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOTransitRouteDisplayStringsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18933AAF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18933AF84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitRouteUpdateConfigurationReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_34:
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18933B8BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitRouteUpdateConfigurationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTransitRouteUpdateConfigurationReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18933B920(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitRouteUpdateConfigurationIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOTransitScheduleInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v18 = objc_alloc_init(GEOTransitEntry);
          if (!GEOTransitEntryReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          unint64_t v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_18933C50C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitScheduleInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTransitScheduleInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18933C570(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitScheduleInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitEntryIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_18933CD08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitSectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 116);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 112)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 132)), (uint16x4_t)0xFFFCFFFDFFFBFFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 132) >> 7) & 1)+ ((*(_WORD *)(a1 + 132) >> 2) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        char v18 = v16 | v11;
        unint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        if (((v16 | v11) | v8)) {
          id v20 = 0;
        }
        else {
          id v20 = a3;
        }
        int v113 = 1;
        char v21 = v16 & ~(_BYTE)v11 | v9;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_165;
        }
        char v111 = v17;
        char v114 = v18 | v17;
        char v115 = (v20 == 0) | v18;
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        char v112 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_163;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v19;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_163:
      int v113 = 1;
      goto LABEL_164;
    }
    char v35 = v22;
    unint64_t v36 = v26 >> 3;
    BOOL v37 = v18;
    if ((v115 & 1) == 0)
    {
      BOOL v38 = v20;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    int v42 = v36 - 1;
    BOOL v22 = v35;
    switch(v42)
    {
      case 0:
        if (!v37 || (*(_WORD *)(a1 + 132) & 0x20) != 0) {
          goto LABEL_123;
        }
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_185;
          }
          char v6 = (int *)MEMORY[0x1E4F940E0];
          unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          if (*(void *)(v3 + *v19) < *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]))
          {
            while (1)
            {
              if (*(unsigned char *)(v3 + *v22)) {
                goto LABEL_103;
              }
              char v43 = 0;
              unsigned int v44 = 0;
              uint64_t v45 = 0;
              while (1)
              {
                uint64_t v46 = *v19;
                uint64_t v47 = *(void *)(v3 + v46);
                unint64_t v48 = v47 + 1;
                if (v47 == -1 || v48 > *(void *)(v3 + *v6)) {
                  break;
                }
                char v49 = *(unsigned char *)(*(void *)(v3 + *v23) + v47);
                *(void *)(v3 + v46) = v48;
                v45 |= (unint64_t)(v49 & 0x7F) << v43;
                if (v49 < 0)
                {
                  v43 += 7;
                  BOOL v31 = v44++ >= 9;
                  if (!v31) {
                    continue;
                  }
                }
                goto LABEL_53;
              }
              *(unsigned char *)(v3 + *v22) = 1;
LABEL_53:
              PBRepeatedUInt32Add();
              if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v6)) {
                goto LABEL_103;
              }
            }
          }
          goto LABEL_103;
        }
        char v85 = 0;
        unsigned int v86 = 0;
        uint64_t v87 = 0;
        char v6 = (int *)MEMORY[0x1E4F940E0];
        unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        while (1)
        {
          uint64_t v88 = *v19;
          uint64_t v89 = *(void *)(v3 + v88);
          unint64_t v90 = v89 + 1;
          if (v89 == -1 || v90 > *(void *)(v3 + *v6)) {
            goto LABEL_160;
          }
          char v91 = *(unsigned char *)(*(void *)(v3 + *v23) + v89);
          *(void *)(v3 + v88) = v90;
          v87 |= (unint64_t)(v91 & 0x7F) << v85;
          if (v91 < 0)
          {
            v85 += 7;
            BOOL v31 = v86++ >= 9;
            if (!v31) {
              continue;
            }
          }
          goto LABEL_161;
        }
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_123;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v53 = 0;
        *(_WORD *)(a1 + 132) |= 1u;
        char v6 = (int *)MEMORY[0x1E4F940E0];
        unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        while (2)
        {
          uint64_t v54 = *v19;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v23) + v55);
            *(void *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              BOOL v31 = v52++ >= 9;
              if (v31)
              {
                LODWORD(v53) = 0;
                goto LABEL_131;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v53) = 0;
        }
LABEL_131:
        *(_DWORD *)(a1 + 124) = v53;
        goto LABEL_125;
      case 2:
        if (!v37) {
          goto LABEL_123;
        }
        if ((*(_WORD *)(a1 + 132) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_185;
          }
          v7 += *(unsigned __int16 *)(a1 + 132) << 25 >> 31;
          char v18 = v112;
        }
        else
        {
          uint64_t v58 = PBReaderReadString();
          char v59 = *(void **)(a1 + 96);
          *(void *)(a1 + 96) = v58;

          char v18 = v112;
          --v7;
        }
        goto LABEL_138;
      case 3:
        if (!v37 || (*(_WORD *)(a1 + 132) & 8) != 0) {
          goto LABEL_123;
        }
        if (v33 != 2)
        {
          char v92 = 0;
          unsigned int v93 = 0;
          uint64_t v94 = 0;
          char v6 = (int *)MEMORY[0x1E4F940E0];
          unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v95 = *v19;
            uint64_t v96 = *(void *)(v3 + v95);
            unint64_t v97 = v96 + 1;
            if (v96 == -1 || v97 > *(void *)(v3 + *v6)) {
              goto LABEL_160;
            }
            char v98 = *(unsigned char *)(*(void *)(v3 + *v23) + v96);
            *(void *)(v3 + v95) = v97;
            v94 |= (unint64_t)(v98 & 0x7F) << v92;
            if (v98 < 0)
            {
              v92 += 7;
              BOOL v31 = v93++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_161;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_185;
        }
        char v6 = (int *)MEMORY[0x1E4F940E0];
        unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        if (*(void *)(v3 + *v19) < *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]))
        {
          do
          {
            if (*(unsigned char *)(v3 + *v22)) {
              break;
            }
            char v60 = 0;
            unsigned int v61 = 0;
            uint64_t v62 = 0;
            while (1)
            {
              uint64_t v63 = *v19;
              uint64_t v64 = *(void *)(v3 + v63);
              unint64_t v65 = v64 + 1;
              if (v64 == -1 || v65 > *(void *)(v3 + *v6)) {
                break;
              }
              char v66 = *(unsigned char *)(*(void *)(v3 + *v23) + v64);
              *(void *)(v3 + v63) = v65;
              v62 |= (unint64_t)(v66 & 0x7F) << v60;
              if (v66 < 0)
              {
                v60 += 7;
                BOOL v31 = v61++ >= 9;
                if (!v31) {
                  continue;
                }
              }
              goto LABEL_86;
            }
            *(unsigned char *)(v3 + *v22) = 1;
LABEL_86:
            PBRepeatedUInt32Add();
          }
          while (*(void *)(v3 + *v19) < *(void *)(v3 + *v6));
        }
        goto LABEL_103;
      case 4:
        if (!v37 || (*(_WORD *)(a1 + 132) & 0x10) != 0) {
          goto LABEL_123;
        }
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_185;
          }
          char v6 = (int *)MEMORY[0x1E4F940E0];
          unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          if (*(void *)(v3 + *v19) < *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]))
          {
            do
            {
              if (*(unsigned char *)(v3 + *v22)) {
                break;
              }
              char v67 = 0;
              unsigned int v68 = 0;
              uint64_t v69 = 0;
              while (1)
              {
                uint64_t v70 = *v19;
                uint64_t v71 = *(void *)(v3 + v70);
                unint64_t v72 = v71 + 1;
                if (v71 == -1 || v72 > *(void *)(v3 + *v6)) {
                  break;
                }
                char v73 = *(unsigned char *)(*(void *)(v3 + *v23) + v71);
                *(void *)(v3 + v70) = v72;
                v69 |= (unint64_t)(v73 & 0x7F) << v67;
                if (v73 < 0)
                {
                  v67 += 7;
                  BOOL v31 = v68++ >= 9;
                  if (!v31) {
                    continue;
                  }
                }
                goto LABEL_102;
              }
              *(unsigned char *)(v3 + *v22) = 1;
LABEL_102:
              PBRepeatedUInt32Add();
            }
            while (*(void *)(v3 + *v19) < *(void *)(v3 + *v6));
          }
LABEL_103:
          PBReaderRecallMark();
        }
        else
        {
          char v99 = 0;
          unsigned int v100 = 0;
          uint64_t v101 = 0;
          char v6 = (int *)MEMORY[0x1E4F940E0];
          unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v102 = *v19;
            uint64_t v103 = *(void *)(v3 + v102);
            unint64_t v104 = v103 + 1;
            if (v103 == -1 || v104 > *(void *)(v3 + *v6)) {
              break;
            }
            char v105 = *(unsigned char *)(*(void *)(v3 + *v23) + v103);
            *(void *)(v3 + v102) = v104;
            v101 |= (unint64_t)(v105 & 0x7F) << v99;
            if (v105 < 0)
            {
              v99 += 7;
              BOOL v31 = v100++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_161;
          }
LABEL_160:
          *(unsigned char *)(v3 + *v22) = 1;
LABEL_161:
          PBRepeatedUInt32Add();
        }
        char v18 = v112;
        goto LABEL_125;
      case 5:
        if ((v8 & 1) == 0)
        {
LABEL_123:
          char v84 = PBReaderSkipValueWithTag();
          char v18 = v112;
          goto LABEL_124;
        }
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v76 = 0;
        *(_WORD *)(a1 + 132) |= 2u;
        char v6 = (int *)MEMORY[0x1E4F940E0];
        unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        while (1)
        {
          uint64_t v77 = *v19;
          uint64_t v78 = *(void *)(v3 + v77);
          unint64_t v79 = v78 + 1;
          if (v78 == -1 || v79 > *(void *)(v3 + *v6)) {
            break;
          }
          char v80 = *(unsigned char *)(*(void *)(v3 + *v23) + v78);
          *(void *)(v3 + v77) = v79;
          v76 |= (unint64_t)(v80 & 0x7F) << v74;
          if ((v80 & 0x80) == 0) {
            goto LABEL_133;
          }
          v74 += 7;
          BOOL v31 = v75++ >= 9;
          if (v31)
          {
            uint64_t v76 = 0;
            goto LABEL_135;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_133:
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v76 = 0;
        }
LABEL_135:
        *(unsigned char *)(a1 + 128) = v76 != 0;
        goto LABEL_125;
      default:
        if (v35 != 22)
        {
          if ((v111 & 1) == 0 || (*(_WORD *)(a1 + 132) & 4) != 0) {
            goto LABEL_122;
          }
          if (!*(void *)(a1 + 16))
          {
            id v81 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            long long v82 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v81;
          }
          int v83 = PBUnknownFieldAdd();
          char v18 = v112;
          BOOL v22 = v35;
          char v6 = (int *)MEMORY[0x1E4F940E0];
          unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v83)
          {
            int v113 = 0;
            goto LABEL_166;
          }
LABEL_125:
          if (!(v114 & 1 | (v7 != 0)) || *(void *)(v3 + *v19) >= *(void *)(v3 + *v6)) {
            goto LABEL_163;
          }
          continue;
        }
        if (!v37 || (*(_WORD *)(a1 + 132) & 0x80) != 0)
        {
LABEL_122:
          char v84 = PBReaderSkipValueWithTag();
          char v18 = v112;
          BOOL v22 = v35;
LABEL_124:
          char v6 = (int *)MEMORY[0x1E4F940E0];
          unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          if ((v84 & 1) == 0)
          {
            int v113 = 0;
            goto LABEL_164;
          }
          goto LABEL_125;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_185;
        }
        int v50 = objc_alloc_init(GEOTransitTicketingSegment);
        if (GEOTransitTicketingSegmentReadAllFrom((uint64_t)v50, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOTransitSection _addNoFlagsTicketingSegment:](a1, v50);

          char v18 = v112;
          BOOL v22 = v35;
LABEL_138:
          char v6 = (int *)MEMORY[0x1E4F940E0];
          unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_125;
        }

LABEL_185:
        int v113 = 0;
        char v18 = v112;
LABEL_164:
        char v21 = v111;
LABEL_165:
        if (v21) {
LABEL_166:
        }
          *(_WORD *)(a1 + 132) |= 4u;
        if (v18 & 1 | ((v113 & 1) == 0))
        {
          *(_WORD *)(a1 + 132) |= 0x20u;
          *(_WORD *)(a1 + 132) |= 0x40u;
          *(_WORD *)(a1 + 132) |= 8u;
          *(_WORD *)(a1 + 132) |= 0x10u;
          *(_WORD *)(a1 + 132) |= 0x80u;
        }
        else if (v20)
        {
          while (1)
          {
            int v107 = *v20++;
            int v106 = v107;
            __int16 v108 = 32;
            switch(v107)
            {
              case 0:
                goto LABEL_177;
              case 1:
                goto LABEL_176;
              case 2:
                continue;
              case 3:
                __int16 v108 = 64;
                goto LABEL_176;
              case 4:
                __int16 v108 = 8;
                goto LABEL_176;
              case 5:
                __int16 v108 = 16;
                goto LABEL_176;
              default:
                if (v106 != 22) {
                  continue;
                }
                __int16 v108 = 128;
LABEL_176:
                *(_WORD *)(a1 + 132) |= v108;
                break;
            }
          }
        }
LABEL_177:
        if (v113)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_181:
          uint64_t v109 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v18) {
            goto LABEL_181;
          }
        }
        return v3;
    }
  }
}

void sub_18933DE84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18933DFF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18933E380(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18933E784(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18933F708(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOTransitSectionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 104);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOTransitSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 116))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitSectionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 120));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 112) = [v8 position];
  *(_DWORD *)(a1 + 116) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOTransitSectionReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOTransitSectionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOTransitSectionCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 120));
  return Specified;
}

void sub_18933F99C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitSectionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitSectionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18933FA00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitSectionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_99;
            }
            while (1)
            {
LABEL_68:
              if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
                goto LABEL_30;
              }
              unsigned int v43 = a1[*v4];
              if (a1[*v4]) {
                goto LABEL_30;
              }
              while (1)
              {
                uint64_t v44 = *v2;
                uint64_t v45 = *(void *)&a1[v44];
                unint64_t v46 = v45 + 1;
                if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
                  break;
                }
                int v47 = *(char *)(*(void *)&a1[*v5] + v45);
                *(void *)&a1[v44] = v46;
                if (v47 < 0)
                {
                  BOOL v13 = v43++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_68;
              }
              a1[*v4] = 1;
            }
          }
          if ((v8 & 7) != 0) {
            goto LABEL_99;
          }
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_63;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              unsigned int v21 = v15++;
              if (v21 <= 8) {
                continue;
              }
            }
            goto LABEL_65;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_99;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_63;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v27 = v22++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_65;
          }
        case 3u:
          if (v15 == 2) {
            goto LABEL_64;
          }
          goto LABEL_99;
        case 4u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_99;
            }
            while (1)
            {
              uint64_t v28 = *v2;
              uint64_t v29 = *(void *)&a1[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
                goto LABEL_63;
              }
              int v31 = *(char *)(*(void *)&a1[*v5] + v29);
              *(void *)&a1[v28] = v30;
              if (v31 < 0)
              {
                unsigned int v32 = v15++;
                if (v32 <= 8) {
                  continue;
                }
              }
              goto LABEL_65;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_99;
          }
LABEL_78:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v48 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v49 = *v2;
              uint64_t v50 = *(void *)&a1[v49];
              unint64_t v51 = v50 + 1;
              if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
                break;
              }
              int v52 = *(char *)(*(void *)&a1[*v5] + v50);
              *(void *)&a1[v49] = v51;
              if (v52 < 0)
              {
                BOOL v13 = v48++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_78;
            }
            a1[*v4] = 1;
          }
          goto LABEL_30;
        case 5u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_99;
            }
            while (1)
            {
              uint64_t v33 = *v2;
              uint64_t v34 = *(void *)&a1[v33];
              unint64_t v35 = v34 + 1;
              if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
                break;
              }
              int v36 = *(char *)(*(void *)&a1[*v5] + v34);
              *(void *)&a1[v33] = v35;
              if (v36 < 0)
              {
                unsigned int v37 = v15++;
                if (v37 <= 8) {
                  continue;
                }
              }
              goto LABEL_65;
            }
LABEL_63:
            a1[*v4] = 1;
            goto LABEL_65;
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_99;
          }
LABEL_88:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v53 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v54 = *v2;
              uint64_t v55 = *(void *)&a1[v54];
              unint64_t v56 = v55 + 1;
              if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
                break;
              }
              int v57 = *(char *)(*(void *)&a1[*v5] + v55);
              *(void *)&a1[v54] = v56;
              if (v57 < 0)
              {
                BOOL v13 = v53++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_88;
            }
            a1[*v4] = 1;
          }
          goto LABEL_30;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_99;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_63;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v27 = v38++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_65;
          }
        default:
          if ((v8 >> 3) == 22)
          {
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitTicketingSegmentIsValid(a1))
            {
LABEL_99:
              PBReaderRecallMark();
              return 0;
            }
LABEL_30:
            PBReaderRecallMark();
          }
          else
          {
LABEL_64:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_99;
            }
          }
LABEL_65:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_97;
          }
          break;
      }
    }
  }
LABEL_97:
  BOOL v58 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v58;
}

BOOL GEOTransitTicketingSegmentIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitPathIsValid(a1))
        {
LABEL_31:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 2)
        {
          if (v15 != 2) {
            goto LABEL_31;
          }
        }
        else if (v17 == 1 && v15 != 2)
        {
          goto LABEL_31;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_31;
        }
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

void sub_18934051C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitSectionIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  __int16 v2 = *(_WORD *)(a1 + 132);
  if ((v2 & 0x1F8) != 0) {
    return 1;
  }
  if ((v2 & 0x80) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v4 = *(id *)(a1 + 104);
  uint64_t v3 = [v4 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v5 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v4);
        }
        if (GEOTransitTicketingSegmentIsDirty(*(void *)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v3 = [v4 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v3;
}

os_unfair_lock_s *GEOTransitSectionIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOTransitSectionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 30);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189340BF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189341160(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitSectionOptionReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        int v17 = v10 & 7;
        if (v16 || v17 == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 44) |= 1u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if ((v32 & 0x80) == 0) {
              goto LABEL_46;
            }
            v26 += 7;
            BOOL v15 = v27++ >= 9;
            if (v15)
            {
              LODWORD(v28) = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6]) {
            LODWORD(v28) = 0;
          }
LABEL_48:
          *(_DWORD *)(a1 + 40) = v28;
        }
        else if ((v10 >> 3) == 1)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_61;
            }
            while (*(void *)&v3[*v4] < *(void *)&v3[*v5] && !v3[*v6])
            {
              char v19 = 0;
              unsigned int v20 = 0;
              uint64_t v21 = 0;
              while (1)
              {
                uint64_t v22 = *v4;
                uint64_t v23 = *(void *)&v3[v22];
                unint64_t v24 = v23 + 1;
                if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                  break;
                }
                char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
                *(void *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  BOOL v15 = v20++ >= 9;
                  if (!v15) {
                    continue;
                  }
                }
                goto LABEL_33;
              }
              v3[*v6] = 1;
LABEL_33:
              PBRepeatedUInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v37 = 0;
            while (1)
            {
              uint64_t v38 = *v4;
              uint64_t v39 = *(void *)&v3[v38];
              unint64_t v40 = v39 + 1;
              if (v39 == -1 || v40 > *(void *)&v3[*v5]) {
                break;
              }
              char v41 = *(unsigned char *)(*(void *)&v3[*v7] + v39);
              *(void *)&v3[v38] = v40;
              v37 |= (unint64_t)(v41 & 0x7F) << v35;
              if (v41 < 0)
              {
                v35 += 7;
                BOOL v15 = v36++ >= 9;
                if (!v15) {
                  continue;
                }
              }
              goto LABEL_58;
            }
            v3[*v6] = 1;
LABEL_58:
            PBRepeatedUInt32Add();
          }
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v34 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v33;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_61;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_61:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_189341E60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitSectionOptionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTransitSectionOptionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189341EC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitSectionOptionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_50;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_50;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              break;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              unsigned int v21 = v15++;
              if (v21 <= 8) {
                continue;
              }
            }
            goto LABEL_49;
          }
LABEL_37:
          a1[*v4] = 1;
          goto LABEL_49;
        }
        if (!PBReaderPlaceMark())
        {
LABEL_52:
          PBReaderRecallMark();
          return 0;
        }
LABEL_39:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v28 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              break;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v13 = v28++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_39;
          }
          a1[*v4] = 1;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_52;
      }
LABEL_49:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_50;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_52;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_37;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0 && v22++ <= 8) {
        continue;
      }
      goto LABEL_49;
    }
  }
LABEL_50:
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

void sub_189342858(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitSegmentArtworkSetReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1)
      + (*(unsigned char *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        int v17 = v16 & ~v11 | v7;
        int v64 = v16 | v11;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        if (((v16 | v11) | v8)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        int v20 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_82;
        }
        char v62 = v17;
        int v63 = (v9 != 0) | v64 | v17;
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_80;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v18;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    int v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_80:
      int v20 = 1;
      goto LABEL_81;
    }
    unint64_t v34 = v25 >> 3;
    BOOL v35 = v64;
    if (!((v19 == 0) | v64 & 1))
    {
      unsigned int v36 = v19;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    if (v34 == 2) {
      break;
    }
    if (v34 == 1)
    {
      if (v35 && (*(unsigned char *)(a1 + 68) & 2) == 0)
      {
        if (v32 == 2)
        {
          int v20 = PBReaderPlaceMark();
          if (!v20) {
            goto LABEL_81;
          }
          while (*(void *)(v3 + *v18) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v21))
          {
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v42 = 0;
            while (1)
            {
              uint64_t v43 = *v18;
              uint64_t v44 = *(void *)(v3 + v43);
              unint64_t v45 = v44 + 1;
              if (v44 == -1 || v45 > *(void *)(v3 + *v6)) {
                break;
              }
              char v46 = *(unsigned char *)(*(void *)(v3 + *v22) + v44);
              *(void *)(v3 + v43) = v45;
              v42 |= (unint64_t)(v46 & 0x7F) << v40;
              if (v46 < 0)
              {
                v40 += 7;
                BOOL v30 = v41++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_54;
            }
            *(unsigned char *)(v3 + *v21) = 1;
LABEL_54:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v50 = 0;
          unsigned int v51 = 0;
          uint64_t v52 = 0;
          while (1)
          {
            uint64_t v53 = *v18;
            uint64_t v54 = *(void *)(v3 + v53);
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)(v3 + *v6)) {
              break;
            }
            char v56 = *(unsigned char *)(*(void *)(v3 + *v22) + v54);
            *(void *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              BOOL v30 = v51++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_77;
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_77:
          PBRepeatedUInt32Add();
        }
LABEL_78:
        if ((v63 & 1) == 0) {
          goto LABEL_80;
        }
        goto LABEL_79;
      }
    }
    else if ((v62 & 1) != 0 && (*(unsigned char *)(a1 + 68) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v48 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v49 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v48;
      }
      int v20 = PBUnknownFieldAdd();
      if (!v20) {
        goto LABEL_83;
      }
      goto LABEL_78;
    }
LABEL_66:
    int v20 = PBReaderSkipValueWithTag();
    if ((v20 & v63 & 1) == 0) {
      goto LABEL_81;
    }
LABEL_79:
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6)) {
      goto LABEL_80;
    }
  }
  if (!v35 || (*(unsigned char *)(a1 + 68) & 4) != 0) {
    goto LABEL_66;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_101;
  }
  int v47 = objc_alloc_init(GEOTransitClusterArtworkSet);
  if (GEOTransitClusterArtworkSetReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOTransitSegmentArtworkSet _addNoFlagsCluster:](a1, v47);

    goto LABEL_78;
  }

LABEL_101:
  int v20 = 0;
LABEL_81:
  LOBYTE(v17) = v62;
LABEL_82:
  if (v17) {
LABEL_83:
  }
    *(unsigned char *)(a1 + 68) |= 1u;
  if (v64 & 1 | ((v20 & 1) == 0))
  {
    *(unsigned char *)(a1 + 68) |= 2u;
    *(unsigned char *)(a1 + 68) |= 4u;
    goto LABEL_94;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v58 = *v19++;
        int v57 = v58;
        if (v58 == 1) {
          break;
        }
        if (v57 == 2)
        {
          char v59 = 4;
          goto LABEL_93;
        }
        if (!v57) {
          goto LABEL_94;
        }
      }
      char v59 = 2;
LABEL_93:
      *(unsigned char *)(a1 + 68) |= v59;
      continue;
    }
  }
LABEL_94:
  if (v20) {
    unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v64)
  {
    char v60 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189343230(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189343D1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOTransitSegmentArtworkSetCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 48);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOTransitSegmentArtworkSetReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitSegmentArtworkSetReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOTransitSegmentArtworkSetReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOTransitSegmentArtworkSetReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitSegmentArtworkSetReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOTransitSegmentArtworkSetCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189343FB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitSegmentArtworkSetReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitSegmentArtworkSetReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189344014(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitSegmentArtworkSetIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_45;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_45;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_47;
          }
LABEL_34:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v22 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              uint64_t v24 = *(void *)&a1[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                break;
              }
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                BOOL v13 = v22++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_34;
            }
            a1[*v4] = 1;
          }
LABEL_30:
          PBReaderRecallMark();
          goto LABEL_44;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_47;
        }
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            unsigned int v21 = v15++;
            if (v21 <= 8) {
              continue;
            }
          }
          goto LABEL_44;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_47;
      }
LABEL_44:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitClusterArtworkSetIsValid(a1))
    {
LABEL_47:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_30;
  }
LABEL_45:
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_189344528(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitSegmentArtworkSetIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  if ((*(unsigned char *)(a1 + 68) & 0xE) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 68) & 4) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 48);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOTransitClusterArtworkSetIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOTransitSegmentArtworkSetIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOTransitSegmentArtworkSetIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189344A58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189344D78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitServiceGapReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    long long v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      while (!v5[*v8])
      {
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        switch((v12 >> 3))
        {
          case 1u:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 36) |= 4u;
            while (1)
            {
              uint64_t v23 = *v6;
              uint64_t v24 = *(void *)&v5[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
              *(void *)&v5[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0) {
                goto LABEL_49;
              }
              v20 += 7;
              BOOL v17 = v21++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_51;
              }
            }
            v5[*v8] = 1;
LABEL_49:
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_51:
            uint64_t v43 = 32;
            goto LABEL_60;
          case 2u:
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 36) |= 2u;
            while (2)
            {
              uint64_t v31 = *v6;
              uint64_t v32 = *(void *)&v5[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v34 = *(unsigned char *)(*(void *)&v5[*v9] + v32);
                *(void *)&v5[v31] = v33;
                v22 |= (unint64_t)(v34 & 0x7F) << v29;
                if (v34 < 0)
                {
                  v29 += 7;
                  BOOL v17 = v30++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_55:
            uint64_t v43 = 28;
            goto LABEL_60;
          case 3u:
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 36) |= 1u;
            while (2)
            {
              uint64_t v37 = *v6;
              uint64_t v38 = *(void *)&v5[v37];
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v40 = *(unsigned char *)(*(void *)&v5[*v9] + v38);
                *(void *)&v5[v37] = v39;
                v22 |= (unint64_t)(v40 & 0x7F) << v35;
                if (v40 < 0)
                {
                  v35 += 7;
                  BOOL v17 = v36++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_59;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_59:
            uint64_t v43 = 24;
LABEL_60:
            *(_DWORD *)(a1 + v43) = v22;
            goto LABEL_61;
          case 4u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_64;
            }
            unsigned int v41 = objc_alloc_init(GEOFormattedString);
            if (!GEOFormattedStringReadAllFrom((uint64_t)v41, v5, a3))
            {

              goto LABEL_64;
            }
            PBReaderRecallMark();
            uint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;

LABEL_61:
            if (*(void *)&v5[*v6] >= *(void *)&v5[*v7]) {
              goto LABEL_62;
            }
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              unint64_t v28 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v27;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_64;
            }
            goto LABEL_61;
        }
      }
    }
LABEL_62:
    BOOL v44 = v5[*v8] == 0;
  }
  else
  {
LABEL_64:
    BOOL v44 = 0;
  }
  objc_sync_exit(v5);

  return v44;
}

void sub_189345B44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitServiceGapReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTransitServiceGapReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189345BB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitServiceGapIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v28 = 0;
          break;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
            goto LABEL_53;
          }
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

void sub_189346AE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitStepReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 200));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 196);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 192)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = *(_DWORD *)(a1 + 264);
  uint32x4_t v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  unsigned int v15 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62D820), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62D830), v14)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62D840), v14)))+ ((v12 >> 21) & 1)+ ((v12 >> 28) & 1)+ ((v12 >> 30) & 1)+ (*(_DWORD *)(a1 + 268) & 1)+ ((v12 >> 15) & 1)+ (v12 >> 31);
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 0xC;
        char v20 = v19 & ~(_BYTE)v11 | v9;
        char v21 = v19 | v11;
        BOOL v22 = (int *)MEMORY[0x1E4F940E8];
        if (((v19 | v11) | v8)) {
          unsigned int v23 = 0;
        }
        else {
          unsigned int v23 = a3;
        }
        int v24 = 1;
        char v25 = v20;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_391;
        }
        char v184 = v20;
        char v185 = v21 | v20;
        unint64_t v26 = (int *)MEMORY[0x1E4F940C8];
        char v187 = (v23 == 0) | v21;
        int v27 = (int *)MEMORY[0x1E4F940B8];
        char v186 = v21;
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v9;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v26)) {
      goto LABEL_385;
    }
    char v28 = 0;
    unsigned int v29 = 0;
    unint64_t v30 = 0;
    while (1)
    {
      uint64_t v31 = *v22;
      uint64_t v32 = *(void *)(v3 + v31);
      unint64_t v33 = v32 + 1;
      if (v32 == -1 || v33 > *(void *)(v3 + *v6)) {
        break;
      }
      char v34 = *(unsigned char *)(*(void *)(v3 + *v27) + v32);
      *(void *)(v3 + v31) = v33;
      v30 |= (unint64_t)(v34 & 0x7F) << v28;
      if ((v34 & 0x80) == 0) {
        goto LABEL_25;
      }
      v28 += 7;
      BOOL v35 = v29++ >= 9;
      if (v35)
      {
        unint64_t v30 = 0;
        int v36 = *(unsigned __int8 *)(v3 + *v26);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v26) = 1;
LABEL_25:
    int v36 = *(unsigned __int8 *)(v3 + *v26);
    if (*(unsigned char *)(v3 + *v26)) {
      unint64_t v30 = 0;
    }
LABEL_27:
    int v37 = v30 & 7;
    if (v36 || v37 == 4)
    {
LABEL_385:
      int v24 = 1;
      goto LABEL_390;
    }
    unint64_t v39 = v30 >> 3;
    BOOL v40 = v21;
    if ((v187 & 1) == 0)
    {
      unsigned int v41 = v23;
      do
      {
        int v43 = *v41++;
        int v42 = v43;
        BOOL v40 = v43 != 0;
        if (v43) {
          BOOL v44 = v42 == v39;
        }
        else {
          BOOL v44 = 1;
        }
      }
      while (!v44);
    }
    switch((int)v39)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_279;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(void *)(a1 + 264) |= 0x40uLL;
        while (1)
        {
          uint64_t v48 = *v22;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6)) {
            break;
          }
          char v51 = *(unsigned char *)(*(void *)(v3 + *v27) + v49);
          *(void *)(v3 + v48) = v50;
          v47 |= (unint64_t)(v51 & 0x7F) << v45;
          if ((v51 & 0x80) == 0) {
            goto LABEL_282;
          }
          v45 += 7;
          BOOL v35 = v46++ >= 9;
          if (v35)
          {
            LODWORD(v47) = 0;
            goto LABEL_284;
          }
        }
        *(unsigned char *)(v3 + *v26) = 1;
LABEL_282:
        if (*(unsigned char *)(v3 + *v26)) {
          LODWORD(v47) = 0;
        }
LABEL_284:
        uint64_t v164 = 228;
        goto LABEL_341;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_279;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v47 = 0;
        *(void *)(a1 + 264) |= 0x200uLL;
        while (2)
        {
          uint64_t v54 = *v22;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v27) + v55);
            *(void *)(v3 + v54) = v56;
            v47 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v35 = v53++ >= 9;
              if (v35)
              {
                LODWORD(v47) = 0;
                goto LABEL_288;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          LODWORD(v47) = 0;
        }
LABEL_288:
        uint64_t v164 = 240;
        goto LABEL_341;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_279;
        }
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v47 = 0;
        *(void *)(a1 + 264) |= 0x10uLL;
        while (2)
        {
          uint64_t v60 = *v22;
          uint64_t v61 = *(void *)(v3 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(v3 + *v27) + v61);
            *(void *)(v3 + v60) = v62;
            v47 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              BOOL v35 = v59++ >= 9;
              if (v35)
              {
                LODWORD(v47) = 0;
                goto LABEL_292;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          LODWORD(v47) = 0;
        }
LABEL_292:
        uint64_t v164 = 220;
        goto LABEL_341;
      case 4:
        if (!v40 || (*(unsigned char *)(a1 + 267) & 0x80) != 0) {
          goto LABEL_277;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_388;
        }
        int v64 = objc_alloc_init(GEOTransitVehicleInfo);
        if (!GEOTransitVehicleInfoReadAllFrom((uint64_t)v64, (void *)v3, v10 & 1)) {
          goto LABEL_387;
        }
        PBReaderRecallMark();
        -[GEOTransitStep _addNoFlagsVehicleInfo:](a1, v64);
        goto LABEL_263;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_279;
        }
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v70 = 0;
        *(void *)(a1 + 264) |= 0x4000uLL;
        while (2)
        {
          uint64_t v71 = *v22;
          uint64_t v72 = *(void *)(v3 + v71);
          unint64_t v73 = v72 + 1;
          if (v72 == -1 || v73 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v74 = *(unsigned char *)(*(void *)(v3 + *v27) + v72);
            *(void *)(v3 + v71) = v73;
            v70 |= (unint64_t)(v74 & 0x7F) << v68;
            if (v74 < 0)
            {
              v68 += 7;
              BOOL v35 = v69++ >= 9;
              if (v35)
              {
                uint64_t v70 = 0;
                goto LABEL_296;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          uint64_t v70 = 0;
        }
LABEL_296:
        *(unsigned char *)(a1 + 260) = v70 != 0;
        goto LABEL_365;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_279;
        }
        char v75 = 0;
        unsigned int v76 = 0;
        uint64_t v47 = 0;
        *(void *)(a1 + 264) |= 0x1000uLL;
        while (2)
        {
          uint64_t v77 = *v22;
          uint64_t v78 = *(void *)(v3 + v77);
          unint64_t v79 = v78 + 1;
          if (v78 == -1 || v79 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v80 = *(unsigned char *)(*(void *)(v3 + *v27) + v78);
            *(void *)(v3 + v77) = v79;
            v47 |= (unint64_t)(v80 & 0x7F) << v75;
            if (v80 < 0)
            {
              v75 += 7;
              BOOL v35 = v76++ >= 9;
              if (v35)
              {
                LODWORD(v47) = 0;
                goto LABEL_300;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          LODWORD(v47) = 0;
        }
LABEL_300:
        uint64_t v164 = 252;
        goto LABEL_341;
      case 9:
        if (!v40 || (*(unsigned char *)(a1 + 266) & 0x80) != 0) {
          goto LABEL_277;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_388;
        }
        int v64 = objc_alloc_init(GEOTransitEnterExitInfo);
        if (!GEOTransitEnterExitInfoReadAllFrom((uint64_t)v64, (void *)v3)) {
          goto LABEL_387;
        }
        PBReaderRecallMark();
        -[GEOTransitStep _addNoFlagsEnterExitInfo:](a1, v64);
        goto LABEL_263;
      case 10:
        if (!v40 || (*(unsigned char *)(a1 + 267) & 0x20) != 0) {
          goto LABEL_277;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_388;
        }
        int v64 = objc_alloc_init(GEOTransitTransferInfo);
        if (!GEOTransitTransferInfoReadAllFrom((uint64_t)v64, (void *)v3)) {
          goto LABEL_387;
        }
        PBReaderRecallMark();
        -[GEOTransitStep _addNoFlagsTransferInfo:](a1, v64);
        goto LABEL_263;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_279;
        }
        char v81 = 0;
        unsigned int v82 = 0;
        uint64_t v47 = 0;
        *(void *)(a1 + 264) |= 0x400uLL;
        while (2)
        {
          uint64_t v83 = *v22;
          uint64_t v84 = *(void *)(v3 + v83);
          unint64_t v85 = v84 + 1;
          if (v84 == -1 || v85 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v86 = *(unsigned char *)(*(void *)(v3 + *v27) + v84);
            *(void *)(v3 + v83) = v85;
            v47 |= (unint64_t)(v86 & 0x7F) << v81;
            if (v86 < 0)
            {
              v81 += 7;
              BOOL v35 = v82++ >= 9;
              if (v35)
              {
                LODWORD(v47) = 0;
                goto LABEL_304;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          LODWORD(v47) = 0;
        }
LABEL_304:
        uint64_t v164 = 244;
        goto LABEL_341;
      case 12:
        if (!v40) {
          goto LABEL_279;
        }
        if ((*(unsigned char *)(a1 + 266) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_388;
          }
          uint64_t v165 = *(void *)(a1 + 264) << 44;
          goto LABEL_362;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_388;
        }
        int v64 = objc_alloc_init(GEOTransitArrivalInfo);
        if (!GEOTransitArrivalInfoReadAllFrom((uint64_t)v64, (void *)v3)) {
          goto LABEL_387;
        }
        PBReaderRecallMark();
        uint64_t v87 = 80;
        goto LABEL_269;
      case 14:
        if (!v40) {
          goto LABEL_279;
        }
        if ((*(unsigned char *)(a1 + 267) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_388;
          }
          uint64_t v165 = *(void *)(a1 + 264) << 38;
          goto LABEL_362;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_388;
        }
        int v64 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v64, (void *)v3)) {
          goto LABEL_387;
        }
        PBReaderRecallMark();
        uint64_t v87 = 128;
        goto LABEL_269;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_279;
        }
        char v88 = 0;
        unsigned int v89 = 0;
        uint64_t v47 = 0;
        *(void *)(a1 + 264) |= 0x100uLL;
        while (2)
        {
          uint64_t v90 = *v22;
          uint64_t v91 = *(void *)(v3 + v90);
          unint64_t v92 = v91 + 1;
          if (v91 == -1 || v92 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v93 = *(unsigned char *)(*(void *)(v3 + *v27) + v91);
            *(void *)(v3 + v90) = v92;
            v47 |= (unint64_t)(v93 & 0x7F) << v88;
            if (v93 < 0)
            {
              v88 += 7;
              BOOL v35 = v89++ >= 9;
              if (v35)
              {
                LODWORD(v47) = 0;
                goto LABEL_308;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          LODWORD(v47) = 0;
        }
LABEL_308:
        uint64_t v164 = 236;
        goto LABEL_341;
      case 17:
        if (!v40) {
          goto LABEL_279;
        }
        if (*(unsigned char *)(a1 + 267))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_388;
          }
          uint64_t v165 = *(void *)(a1 + 264) << 39;
          goto LABEL_362;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_388;
        }
        int v64 = objc_alloc_init(GEOInstructionSet);
        if (!GEOInstructionSetReadAllFrom((uint64_t)v64, (void *)v3, v10 & 1)) {
          goto LABEL_387;
        }
        PBReaderRecallMark();
        uint64_t v87 = 120;
        goto LABEL_269;
      case 19:
        if ((v8 & 1) == 0) {
          goto LABEL_279;
        }
        char v94 = 0;
        unsigned int v95 = 0;
        uint64_t v47 = 0;
        *(void *)(a1 + 264) |= 0x2000uLL;
        while (2)
        {
          uint64_t v96 = *v22;
          uint64_t v97 = *(void *)(v3 + v96);
          unint64_t v98 = v97 + 1;
          if (v97 == -1 || v98 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v99 = *(unsigned char *)(*(void *)(v3 + *v27) + v97);
            *(void *)(v3 + v96) = v98;
            v47 |= (unint64_t)(v99 & 0x7F) << v94;
            if (v99 < 0)
            {
              v94 += 7;
              BOOL v35 = v95++ >= 9;
              if (v35)
              {
                LODWORD(v47) = 0;
                goto LABEL_312;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          LODWORD(v47) = 0;
        }
LABEL_312:
        uint64_t v164 = 256;
        goto LABEL_341;
      case 20:
        if ((v8 & 1) == 0) {
          goto LABEL_279;
        }
        char v100 = 0;
        unsigned int v101 = 0;
        uint64_t v47 = 0;
        *(void *)(a1 + 264) |= 8uLL;
        while (2)
        {
          uint64_t v102 = *v22;
          uint64_t v103 = *(void *)(v3 + v102);
          unint64_t v104 = v103 + 1;
          if (v103 == -1 || v104 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v105 = *(unsigned char *)(*(void *)(v3 + *v27) + v103);
            *(void *)(v3 + v102) = v104;
            v47 |= (unint64_t)(v105 & 0x7F) << v100;
            if (v105 < 0)
            {
              v100 += 7;
              BOOL v35 = v101++ >= 9;
              if (v35)
              {
                LODWORD(v47) = 0;
                goto LABEL_316;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          LODWORD(v47) = 0;
        }
LABEL_316:
        uint64_t v164 = 216;
        goto LABEL_341;
      case 22:
        if (!v40 || (*(unsigned char *)(a1 + 266) & 1) != 0) {
          goto LABEL_279;
        }
        if (v37 != 2)
        {
          char v166 = 0;
          unsigned int v167 = 0;
          uint64_t v168 = 0;
          while (1)
          {
            uint64_t v169 = *v22;
            uint64_t v170 = *(void *)(v3 + v169);
            unint64_t v171 = v170 + 1;
            if (v170 == -1 || v171 > *(void *)(v3 + *v6)) {
              goto LABEL_383;
            }
            char v172 = *(unsigned char *)(*(void *)(v3 + *v27) + v170);
            *(void *)(v3 + v169) = v171;
            v168 |= (unint64_t)(v172 & 0x7F) << v166;
            if (v172 < 0)
            {
              v166 += 7;
              BOOL v35 = v167++ >= 9;
              if (!v35) {
                continue;
              }
            }
            goto LABEL_384;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_388;
        }
        while (1)
        {
          int v106 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_368;
          }
          char v107 = 0;
          unsigned int v108 = 0;
          uint64_t v109 = 0;
          uint64_t v110 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v111 = *v22;
            uint64_t v112 = *(void *)(v3 + v111);
            unint64_t v113 = v112 + 1;
            if (v112 == -1 || v113 > *(void *)(v3 + *v6)) {
              break;
            }
            char v114 = *(unsigned char *)(*(void *)(v3 + *v110) + v112);
            *(void *)(v3 + v111) = v113;
            v109 |= (unint64_t)(v114 & 0x7F) << v107;
            if (v114 < 0)
            {
              v107 += 7;
              BOOL v35 = v108++ >= 9;
              if (!v35) {
                continue;
              }
            }
            goto LABEL_161;
          }
          *(unsigned char *)(v3 + *v106) = 1;
LABEL_161:
          PBRepeatedUInt32Add();
        }
      case 23:
        if (!v40 || (*(unsigned char *)(a1 + 266) & 2) != 0) {
          goto LABEL_279;
        }
        if (v37 != 2)
        {
          char v173 = 0;
          unsigned int v174 = 0;
          uint64_t v175 = 0;
          while (1)
          {
            uint64_t v176 = *v22;
            uint64_t v177 = *(void *)(v3 + v176);
            unint64_t v178 = v177 + 1;
            if (v177 == -1 || v178 > *(void *)(v3 + *v6)) {
              break;
            }
            char v179 = *(unsigned char *)(*(void *)(v3 + *v27) + v177);
            *(void *)(v3 + v176) = v178;
            v175 |= (unint64_t)(v179 & 0x7F) << v173;
            if (v179 < 0)
            {
              v173 += 7;
              BOOL v35 = v174++ >= 9;
              if (!v35) {
                continue;
              }
            }
            goto LABEL_384;
          }
LABEL_383:
          *(unsigned char *)(v3 + *v26) = 1;
LABEL_384:
          PBRepeatedUInt32Add();
          goto LABEL_363;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_388;
        }
        while (1)
        {
          char v115 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v116 = 0;
          unsigned int v117 = 0;
          uint64_t v118 = 0;
          v119 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v120 = *v22;
            uint64_t v121 = *(void *)(v3 + v120);
            unint64_t v122 = v121 + 1;
            if (v121 == -1 || v122 > *(void *)(v3 + *v6)) {
              break;
            }
            char v123 = *(unsigned char *)(*(void *)(v3 + *v119) + v121);
            *(void *)(v3 + v120) = v122;
            v118 |= (unint64_t)(v123 & 0x7F) << v116;
            if (v123 < 0)
            {
              v116 += 7;
              BOOL v35 = v117++ >= 9;
              if (!v35) {
                continue;
              }
            }
            goto LABEL_176;
          }
          *(unsigned char *)(v3 + *v115) = 1;
LABEL_176:
          PBRepeatedUInt32Add();
        }
LABEL_368:
        PBReaderRecallMark();
        unint64_t v26 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_364;
      case 24:
        if ((v8 & 1) == 0) {
          goto LABEL_279;
        }
        char v124 = 0;
        unsigned int v125 = 0;
        uint64_t v47 = 0;
        *(void *)(a1 + 264) |= 0x80uLL;
        while (2)
        {
          uint64_t v126 = *v22;
          uint64_t v127 = *(void *)(v3 + v126);
          unint64_t v128 = v127 + 1;
          if (v127 == -1 || v128 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v129 = *(unsigned char *)(*(void *)(v3 + *v27) + v127);
            *(void *)(v3 + v126) = v128;
            v47 |= (unint64_t)(v129 & 0x7F) << v124;
            if (v129 < 0)
            {
              v124 += 7;
              BOOL v35 = v125++ >= 9;
              if (v35)
              {
                LODWORD(v47) = 0;
                goto LABEL_320;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          LODWORD(v47) = 0;
        }
LABEL_320:
        uint64_t v164 = 232;
        goto LABEL_341;
      case 25:
        if ((v8 & 1) == 0) {
          goto LABEL_279;
        }
        char v130 = 0;
        unsigned int v131 = 0;
        uint64_t v47 = 0;
        *(void *)(a1 + 264) |= 1uLL;
        while (2)
        {
          uint64_t v132 = *v22;
          uint64_t v133 = *(void *)(v3 + v132);
          unint64_t v134 = v133 + 1;
          if (v133 == -1 || v134 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v135 = *(unsigned char *)(*(void *)(v3 + *v27) + v133);
            *(void *)(v3 + v132) = v134;
            v47 |= (unint64_t)(v135 & 0x7F) << v130;
            if (v135 < 0)
            {
              v130 += 7;
              BOOL v35 = v131++ >= 9;
              if (v35)
              {
                LODWORD(v47) = 0;
                goto LABEL_324;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          LODWORD(v47) = 0;
        }
LABEL_324:
        uint64_t v164 = 204;
        goto LABEL_341;
      case 26:
        if ((v8 & 1) == 0) {
          goto LABEL_279;
        }
        char v136 = 0;
        unsigned int v137 = 0;
        uint64_t v47 = 0;
        *(void *)(a1 + 264) |= 2uLL;
        while (2)
        {
          uint64_t v138 = *v22;
          uint64_t v139 = *(void *)(v3 + v138);
          unint64_t v140 = v139 + 1;
          if (v139 == -1 || v140 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v141 = *(unsigned char *)(*(void *)(v3 + *v27) + v139);
            *(void *)(v3 + v138) = v140;
            v47 |= (unint64_t)(v141 & 0x7F) << v136;
            if (v141 < 0)
            {
              v136 += 7;
              BOOL v35 = v137++ >= 9;
              if (v35)
              {
                LODWORD(v47) = 0;
                goto LABEL_328;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          LODWORD(v47) = 0;
        }
LABEL_328:
        uint64_t v164 = 208;
        goto LABEL_341;
      case 27:
        if ((v8 & 1) == 0) {
          goto LABEL_279;
        }
        char v142 = 0;
        unsigned int v143 = 0;
        uint64_t v47 = 0;
        *(void *)(a1 + 264) |= 4uLL;
        while (2)
        {
          uint64_t v144 = *v22;
          uint64_t v145 = *(void *)(v3 + v144);
          unint64_t v146 = v145 + 1;
          if (v145 == -1 || v146 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v147 = *(unsigned char *)(*(void *)(v3 + *v27) + v145);
            *(void *)(v3 + v144) = v146;
            v47 |= (unint64_t)(v147 & 0x7F) << v142;
            if (v147 < 0)
            {
              v142 += 7;
              BOOL v35 = v143++ >= 9;
              if (v35)
              {
                LODWORD(v47) = 0;
                goto LABEL_332;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          LODWORD(v47) = 0;
        }
LABEL_332:
        uint64_t v164 = 212;
        goto LABEL_341;
      case 28:
        if ((v8 & 1) == 0) {
          goto LABEL_279;
        }
        char v148 = 0;
        unsigned int v149 = 0;
        uint64_t v47 = 0;
        *(void *)(a1 + 264) |= 0x800uLL;
        while (2)
        {
          uint64_t v150 = *v22;
          uint64_t v151 = *(void *)(v3 + v150);
          unint64_t v152 = v151 + 1;
          if (v151 == -1 || v152 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v153 = *(unsigned char *)(*(void *)(v3 + *v27) + v151);
            *(void *)(v3 + v150) = v152;
            v47 |= (unint64_t)(v153 & 0x7F) << v148;
            if (v153 < 0)
            {
              v148 += 7;
              BOOL v35 = v149++ >= 9;
              if (v35)
              {
                LODWORD(v47) = 0;
                goto LABEL_336;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          LODWORD(v47) = 0;
        }
LABEL_336:
        uint64_t v164 = 248;
        goto LABEL_341;
      case 29:
        if ((v8 & 1) == 0) {
          goto LABEL_279;
        }
        char v154 = 0;
        unsigned int v155 = 0;
        uint64_t v47 = 0;
        *(void *)(a1 + 264) |= 0x20uLL;
        while (2)
        {
          uint64_t v156 = *v22;
          uint64_t v157 = *(void *)(v3 + v156);
          unint64_t v158 = v157 + 1;
          if (v157 == -1 || v158 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v159 = *(unsigned char *)(*(void *)(v3 + *v27) + v157);
            *(void *)(v3 + v156) = v158;
            v47 |= (unint64_t)(v159 & 0x7F) << v154;
            if (v159 < 0)
            {
              v154 += 7;
              BOOL v35 = v155++ >= 9;
              if (v35)
              {
                LODWORD(v47) = 0;
                goto LABEL_340;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          LODWORD(v47) = 0;
        }
LABEL_340:
        uint64_t v164 = 224;
LABEL_341:
        *(_DWORD *)(a1 + v164) = v47;
        goto LABEL_365;
      case 30:
        if (!v40) {
          goto LABEL_279;
        }
        if ((*(unsigned char *)(a1 + 266) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_388;
          }
          uint64_t v165 = *(void *)(a1 + 264) << 42;
          goto LABEL_362;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_388;
        }
        int v64 = objc_alloc_init(GEOTransitBaseFare);
        if (!GEOTransitBaseFareReadAllFrom((uint64_t)v64, (void *)v3, v10 & 1)) {
          goto LABEL_387;
        }
        PBReaderRecallMark();
        uint64_t v87 = 96;
        goto LABEL_269;
      case 31:
        if (!v40) {
          goto LABEL_279;
        }
        if ((*(unsigned char *)(a1 + 267) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_388;
          }
          uint64_t v165 = *(void *)(a1 + 264) << 35;
          goto LABEL_362;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_388;
        }
        int v64 = objc_alloc_init(GEOTransitSurcharge);
        if (!GEOTransitSurchargeReadAllFrom((uint64_t)v64, (void *)v3)) {
          goto LABEL_387;
        }
        PBReaderRecallMark();
        uint64_t v87 = 152;
        goto LABEL_269;
      case 32:
        if (!v40) {
          goto LABEL_279;
        }
        if ((*(unsigned char *)(a1 + 267) & 0x40) == 0)
        {
          uint64_t v160 = PBReaderReadData();
          v161 = *(void **)(a1 + 168);
          *(void *)(a1 + 168) = v160;
          goto LABEL_270;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_388;
        }
        uint64_t v165 = *(void *)(a1 + 264) << 33;
        goto LABEL_362;
      case 33:
        if (!v40) {
          goto LABEL_279;
        }
        if (*(unsigned char *)(a1 + 268))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_388;
          }
          uint64_t v165 = *(void *)(a1 + 264) << 31;
          goto LABEL_362;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_388;
        }
        int v64 = objc_alloc_init(GEOTransitVehiclePositionInfo);
        if (!GEOTransitVehiclePositionInfoReadAllFrom(v64, (void *)v3)) {
          goto LABEL_387;
        }
        PBReaderRecallMark();
        uint64_t v87 = 184;
        goto LABEL_269;
      case 34:
        if (!v40) {
          goto LABEL_279;
        }
        if ((*(unsigned char *)(a1 + 267) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_388;
          }
          uint64_t v165 = *(void *)(a1 + 264) << 36;
          goto LABEL_362;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_388;
        }
        int v64 = objc_alloc_init(GEOTransitScheduleInfo);
        if (!GEOTransitScheduleInfoReadAllFrom((uint64_t)v64, (void *)v3)) {
          goto LABEL_387;
        }
        PBReaderRecallMark();
        uint64_t v87 = 144;
        goto LABEL_269;
      case 35:
        if (!v40) {
          goto LABEL_279;
        }
        if ((*(unsigned char *)(a1 + 266) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_388;
          }
          uint64_t v165 = *(void *)(a1 + 264) << 41;
          goto LABEL_362;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_388;
        }
        int v64 = objc_alloc_init(GEOTransitBoardingInfo);
        if (!GEOTransitBoardingInfoReadAllFrom((uint64_t)v64, (void *)v3, v10 & 1)) {
          goto LABEL_387;
        }
        PBReaderRecallMark();
        uint64_t v87 = 104;
        goto LABEL_269;
      case 36:
        if (!v40 || (*(unsigned char *)(a1 + 266) & 0x10) != 0) {
          goto LABEL_277;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_388;
        }
        int v64 = objc_alloc_init(GEOTransitStepBadge);
        if (!GEOTransitStepBadgeReadAllFrom((uint64_t)v64, (void *)v3, v10 & 1)) {
          goto LABEL_387;
        }
        PBReaderRecallMark();
        -[GEOTransitStep _addNoFlagsBadge:](a1, v64);
        goto LABEL_263;
      case 37:
        if (!v40 || (*(unsigned char *)(a1 + 267) & 4) != 0)
        {
LABEL_277:
          char v162 = PBReaderSkipValueWithTag();
          unint64_t v26 = (int *)MEMORY[0x1E4F940C8];
          int v27 = (int *)MEMORY[0x1E4F940B8];
          if ((v162 & 1) == 0) {
            goto LABEL_388;
          }
          goto LABEL_365;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_388;
        }
        int v64 = objc_alloc_init(GEOTransitRegionAlert);
        if (!GEOTransitRegionAlertReadAllFrom((uint64_t)v64, (void *)v3, v10 & 1)) {
          goto LABEL_387;
        }
        PBReaderRecallMark();
        -[GEOTransitStep _addNoFlagsRegionAlert:](a1, v64);
LABEL_263:

        goto LABEL_363;
      case 38:
        if (!v40) {
          goto LABEL_279;
        }
        if ((*(unsigned char *)(a1 + 266) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_388;
          }
          uint64_t v165 = *(void *)(a1 + 264) << 45;
LABEL_362:
          v7 += v165 >> 63;
LABEL_363:
          unint64_t v26 = (int *)MEMORY[0x1E4F940C8];
LABEL_364:
          int v27 = (int *)MEMORY[0x1E4F940B8];
LABEL_365:
          if (!(v185 & 1 | (v7 != 0)))
          {
            int v24 = 1;
            goto LABEL_389;
          }
          char v21 = v186;
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6)) {
            goto LABEL_385;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_388;
        }
        int v64 = objc_alloc_init(GEOAdvisoriesInfo);
        if (GEOAdvisoriesInfoReadAllFrom((uint64_t)v64, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v87 = 72;
LABEL_269:
          v161 = *(void **)(a1 + v87);
          *(void *)(a1 + v87) = v64;
LABEL_270:

          --v7;
          goto LABEL_363;
        }
LABEL_387:

LABEL_388:
        int v24 = 0;
LABEL_389:
        char v21 = v186;
LABEL_390:
        char v25 = v184;
LABEL_391:
        if (v25) {
LABEL_392:
        }
          *(void *)(a1 + 264) |= 0x8000uLL;
        if (v21 & 1 | ((v24 & 1) == 0))
        {
          *(void *)(a1 + 264) |= 0x1FFFF0000uLL;
        }
        else if (v23)
        {
          while (1)
          {
            int v180 = *v23++;
            uint64_t v181 = 0x80000000;
            switch(v180)
            {
              case 0:
                goto LABEL_414;
              case 4:
                goto LABEL_413;
              case 9:
                uint64_t v181 = 0x800000;
                goto LABEL_413;
              case 10:
                uint64_t v181 = 0x20000000;
                goto LABEL_413;
              case 12:
                uint64_t v181 = 0x80000;
                goto LABEL_413;
              case 14:
                uint64_t v181 = 0x2000000;
                goto LABEL_413;
              case 17:
                uint64_t v181 = 0x1000000;
                goto LABEL_413;
              case 22:
                uint64_t v181 = 0x10000;
                goto LABEL_413;
              case 23:
                uint64_t v181 = 0x20000;
                goto LABEL_413;
              case 30:
                uint64_t v181 = 0x200000;
                goto LABEL_413;
              case 31:
                uint64_t v181 = 0x10000000;
                goto LABEL_413;
              case 32:
                uint64_t v181 = 0x40000000;
                goto LABEL_413;
              case 33:
                uint64_t v181 = 0x100000000;
                goto LABEL_413;
              case 34:
                uint64_t v181 = 0x8000000;
                goto LABEL_413;
              case 35:
                uint64_t v181 = 0x400000;
                goto LABEL_413;
              case 36:
                uint64_t v181 = 0x100000;
                goto LABEL_413;
              case 37:
                uint64_t v181 = 0x4000000;
                goto LABEL_413;
              case 38:
                uint64_t v181 = 0x40000;
LABEL_413:
                *(void *)(a1 + 264) |= v181;
                break;
              default:
                continue;
            }
          }
        }
LABEL_414:
        if (v24)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v21 & 1) == 0) {
            return v3;
          }
LABEL_418:
          v182 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v21) {
            goto LABEL_418;
          }
        }
        return v3;
      default:
        if ((v184 & 1) == 0 || (*(unsigned char *)(a1 + 265) & 0x80) != 0)
        {
LABEL_279:
          char v163 = PBReaderSkipValueWithTag();
          int v27 = (int *)MEMORY[0x1E4F940B8];
          unint64_t v26 = (int *)MEMORY[0x1E4F940C8];
          if ((v163 & 1) == 0) {
            goto LABEL_388;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v65 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v66 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v65;
          }
          int v67 = PBUnknownFieldAdd();
          unint64_t v26 = (int *)MEMORY[0x1E4F940C8];
          int v27 = (int *)MEMORY[0x1E4F940B8];
          if (!v67)
          {
            int v24 = 0;
            char v21 = v186;
            goto LABEL_392;
          }
        }
        goto LABEL_365;
    }
  }
}

void sub_189348B70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189349040(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18934948C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189349604(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189349994(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189349C10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189349FA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18934A61C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18934A794(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18934A90C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18934AA84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18934ABFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18934AD6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18934AEE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18934B05C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18934B424(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18934DE78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOTransitStepCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  long long v43 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  id v2 = a1[22];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v43 objects:v51 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v44;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v44 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v43 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v43 objects:v51 count:16];
    }
    while (v4);
  }

  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  id v7 = a1[14];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v39 objects:v50 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v40;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v40 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v39 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v39 objects:v50 count:16];
    }
    while (v9);
  }

  long long v37 = 0u;
  long long v38 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  id v12 = a1[20];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v35 objects:v49 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v36;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v36 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v35 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v35 objects:v49 count:16];
    }
    while (v14);
  }

  [a1[10] readAll:1];
  [a1[16] readAll:1];
  [a1[15] readAll:1];
  [a1[9] readAll:1];
  [a1[12] readAll:1];
  [a1[19] readAll:1];
  [a1[23] readAll:1];
  [a1[18] readAll:1];
  [a1[13] readAll:1];
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  id v17 = a1[11];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v31 objects:v48 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v32;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v32 != v20) {
          objc_enumerationMutation(v17);
        }
        [*(id *)(*((void *)&v31 + 1) + 8 * v21++) readAll:1];
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v31 objects:v48 count:16];
    }
    while (v19);
  }

  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v22 = a1[17];
  uint64_t v23 = [v22 countByEnumeratingWithState:&v27 objects:v47 count:16];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)v28;
    do
    {
      uint64_t v26 = 0;
      do
      {
        if (*(void *)v28 != v25) {
          objc_enumerationMutation(v22);
        }
        objc_msgSend(*(id *)(*((void *)&v27 + 1) + 8 * v26++), "readAll:", 1, (void)v27);
      }
      while (v24 != v26);
      uint64_t v24 = [v22 countByEnumeratingWithState:&v27 objects:v47 count:16];
    }
    while (v24);
  }
}

unint64_t GEOTransitStepReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 196))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitStepReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 200));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 192) = [v8 position];
  *(_DWORD *)(a1 + 196) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOTransitStepReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOTransitStepReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitStepReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOTransitStepCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 200));
  return Specified;
}

void sub_18934E404(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitStepReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitStepReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18934E468(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitVehicleInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitVehicleTimeIsValid(a1)) {
            goto LABEL_95;
          }
          goto LABEL_22;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_95;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_78;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_81;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_95;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_78;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_81;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_95;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_78;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_81;
          }
        case 6u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_95:
              PBReaderRecallMark();
              return 0;
            }
LABEL_84:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v53 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v54 = *v2;
                uint64_t v55 = *(void *)&a1[v54];
                unint64_t v56 = v55 + 1;
                if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
                  break;
                }
                int v57 = *(char *)(*(void *)&a1[*v5] + v55);
                *(void *)&a1[v54] = v56;
                if (v57 < 0)
                {
                  BOOL v13 = v53++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_84;
              }
              a1[*v4] = 1;
            }
LABEL_22:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_95;
            }
            while (1)
            {
              uint64_t v33 = *v2;
              uint64_t v34 = *(void *)&a1[v33];
              unint64_t v35 = v34 + 1;
              if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
                break;
              }
              int v36 = *(char *)(*(void *)&a1[*v5] + v34);
              *(void *)&a1[v33] = v35;
              if (v36 < 0)
              {
                unsigned int v37 = v15++;
                if (v37 <= 8) {
                  continue;
                }
              }
              goto LABEL_81;
            }
LABEL_78:
            a1[*v4] = 1;
          }
LABEL_81:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_93;
          }
          break;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_95;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_78;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_81;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_95;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_78;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_81;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_95;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_78;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_81;
          }
        case 0xEu:
          if (v15 == 2) {
            goto LABEL_80;
          }
          goto LABEL_95;
        default:
LABEL_80:
          if (PBReaderSkipValueWithTag()) {
            goto LABEL_81;
          }
          goto LABEL_95;
      }
    }
  }
LABEL_93:
  BOOL v58 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v58;
}

BOOL GEOTransitTransferInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 4) {
        break;
      }
      if ((v8 >> 3) == 6)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOTransitSurchargeIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_44;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_44;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_46;
        }
        unsigned int v24 = 0;
        while (1)
        {
          uint64_t v25 = *v2;
          uint64_t v26 = *(void *)&a1[v25];
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
            goto LABEL_41;
          }
          int v28 = *(char *)(*(void *)&a1[*v5] + v26);
          *(void *)&a1[v25] = v27;
          if (v28 < 0)
          {
            BOOL v23 = v24++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_43;
        }
      }
      if (v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitSurchargeUnitIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_46;
      }
LABEL_43:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_44;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_46;
    }
    unsigned int v18 = 0;
    while (1)
    {
      uint64_t v19 = *v2;
      uint64_t v20 = *(void *)&a1[v19];
      unint64_t v21 = v20 + 1;
      if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
        break;
      }
      int v22 = *(char *)(*(void *)&a1[*v5] + v20);
      *(void *)&a1[v19] = v21;
      if (v22 < 0)
      {
        BOOL v23 = v18++ > 8;
        if (!v23) {
          continue;
        }
      }
      goto LABEL_43;
    }
LABEL_41:
    a1[*v4] = 1;
    goto LABEL_43;
  }
LABEL_44:
  BOOL v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEOTransitVehiclePositionInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitDepartureEntryIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOTransitStepBadgeIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_18934FA08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitStepIsDirty(uint64_t a1)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 200));
  uint64_t v2 = *(void *)(a1 + 264);
  if ((v2 & 0x2A2880000) != 0) {
    return 1;
  }
  if ((v2 & 0x1000000) == 0)
  {
LABEL_5:
    if ((v2 & 0x30000) != 0) {
      return 1;
    }
    if ((v2 & 0x40000) != 0)
    {
      if (GEOAdvisoriesInfoIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
        return 1;
      }
      uint64_t v2 = *(void *)(a1 + 264);
    }
    if ((v2 & 0x200000) != 0)
    {
      if (GEOTransitBaseFareIsDirty(*(void *)(a1 + 96))) {
        return 1;
      }
      uint64_t v2 = *(void *)(a1 + 264);
    }
    if ((v2 & 0x158000000) != 0) {
      return 1;
    }
    if ((v2 & 0x400000) != 0)
    {
      if (GEOTransitBoardingInfoIsDirty(*(os_unfair_lock_s **)(a1 + 104))) {
        return 1;
      }
      uint64_t v2 = *(void *)(a1 + 264);
    }
    if ((v2 & 0x4100000) != 0) {
      return 1;
    }
    if ((v2 & 0x80000000) != 0)
    {
      long long v26 = 0u;
      long long v27 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      id v5 = *(id *)(a1 + 176);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v25;
LABEL_22:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v25 != v8) {
            objc_enumerationMutation(v5);
          }
          if (GEOTransitVehicleInfoIsDirty(*(void *)(*((void *)&v24 + 1) + 8 * v9))) {
            goto LABEL_50;
          }
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
            if (v7) {
              goto LABEL_22;
            }
            break;
          }
        }
      }

      uint64_t v2 = *(void *)(a1 + 264);
    }
    if ((v2 & 0x100000) != 0)
    {
      long long v22 = 0u;
      long long v23 = 0u;
      long long v20 = 0u;
      long long v21 = 0u;
      id v5 = *(id *)(a1 + 88);
      uint64_t v10 = [v5 countByEnumeratingWithState:&v20 objects:v29 count:16];
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = *(void *)v21;
LABEL_32:
        uint64_t v13 = 0;
        while (1)
        {
          if (*(void *)v21 != v12) {
            objc_enumerationMutation(v5);
          }
          if (GEOTransitStepBadgeIsDirty(*(os_unfair_lock_s **)(*((void *)&v20 + 1) + 8 * v13))) {
            goto LABEL_50;
          }
          if (v11 == ++v13)
          {
            uint64_t v11 = [v5 countByEnumeratingWithState:&v20 objects:v29 count:16];
            if (v11) {
              goto LABEL_32;
            }
            break;
          }
        }
      }

      uint64_t v2 = *(void *)(a1 + 264);
    }
    if ((v2 & 0x4000000) == 0) {
      return 0;
    }
    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v5 = *(id *)(a1 + 136);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v28 count:16];
    if (!v3)
    {
LABEL_51:

      return v3;
    }
    uint64_t v14 = *(void *)v17;
LABEL_43:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(void *)v17 != v14) {
        objc_enumerationMutation(v5);
      }
      if (GEOTransitRegionAlertIsDirty(*(os_unfair_lock_s **)(*((void *)&v16 + 1) + 8 * v15))) {
        break;
      }
      if (v3 == ++v15)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v28 count:16];
        if (v3) {
          goto LABEL_43;
        }
        goto LABEL_51;
      }
    }
LABEL_50:
    uint64_t v3 = 1;
    goto LABEL_51;
  }
  if ((GEOInstructionSetIsDirty(*(os_unfair_lock_s **)(a1 + 120)) & 1) == 0)
  {
    uint64_t v2 = *(void *)(a1 + 264);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOTransitStepIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOTransitStepIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 50);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189350E14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189351FCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893526EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitStepBadgeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v7)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        long long v20 = (int *)MEMORY[0x1E4F940E8];
        long long v21 = (int *)MEMORY[0x1E4F940C8];
        long long v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_66;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_66:
      int v52 = 1;
      goto LABEL_67;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      unint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_57;
      }
      if ((*(unsigned char *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        uint64_t v39 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_85;
        }
        PBReaderRecallMark();
        uint64_t v40 = 24;
LABEL_50:
        unint64_t v41 = *(void **)(a1 + v40);
        *(void *)(a1 + v40) = v39;

        --v8;
LABEL_64:
        long long v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_86;
      }
      char v46 = *(unsigned char *)(a1 + 52) << 6;
LABEL_63:
      v8 += v46 >> 7;
      goto LABEL_64;
    }
    if (v54 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_57:
      char v45 = PBReaderSkipValueWithTag();
      long long v21 = (int *)MEMORY[0x1E4F940C8];
      if ((v45 & 1) == 0)
      {
        int v52 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(void *)(a1 + 16))
    {
      id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      unsigned int v43 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v42;
    }
    int v44 = PBUnknownFieldAdd();
    long long v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v44)
    {
      int v52 = 0;
      unsigned int v53 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v55 & 1 | (v8 != 0))) {
      goto LABEL_66;
    }
  }
  if (!v34) {
    goto LABEL_57;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_86;
    }
    char v46 = 32 * *(unsigned char *)(a1 + 52);
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_86;
  }
  uint64_t v39 = objc_alloc_init(GEOFormattedString);
  if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = 32;
    goto LABEL_50;
  }
LABEL_85:

LABEL_86:
  int v52 = 0;
  long long v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_67:
  unsigned int v53 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
  if ((v54 & 1) == 0) {
    goto LABEL_69;
  }
LABEL_68:
  *(unsigned char *)(a1 + v53[56]) |= 1u;
LABEL_69:
  if (v57 || (v52 & 1) == 0)
  {
    *(unsigned char *)(a1 + v53[56]) |= 2u;
    *(unsigned char *)(a1 + v53[56]) |= 4u;
    goto LABEL_79;
  }
  if (v19)
  {
    while (1)
    {
      int v49 = *v19++;
      int v48 = v49;
      if (v49 == 1) {
        break;
      }
      if (v48 == 2)
      {
        char v47 = 4;
LABEL_75:
        *(unsigned char *)(a1 + v53[56]) |= v47;
      }
      else if (!v48)
      {
        goto LABEL_79;
      }
    }
    char v47 = 2;
    goto LABEL_75;
  }
LABEL_79:
  if (v52) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v57)
  {
    uint64_t v50 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189352DC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189353408(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitStepBadgeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitStepBadgeReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOTransitStepBadgeReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOTransitStepBadgeReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitStepBadgeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1893535C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitStepBadgeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitStepBadgeReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189353628(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893537C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitStepBadgeIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 52);
  }
  if ((v2 & 4) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 32);

  return (uint64_t)GEOFormattedStringIsDirty(v4);
}

os_unfair_lock_s *GEOTransitStepBadgeIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOTransitStepBadgeIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189353B04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189353D80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189354180(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitSuggestedRouteReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 124);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 120)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = *(_DWORD *)(a1 + 156);
  uint32x4_t v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  unsigned int v15 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62D850), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62D860), v14)))+ ((v12 >> 14) & 1)+ ((v12 >> 10) & 1)+ ((v12 >> 6) & 1);
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 7;
        char v20 = v19 & ~(_BYTE)v11 | v9;
        char v21 = v19 | v11;
        if (((v19 | v11) | v8)) {
          long long v22 = 0;
        }
        else {
          long long v22 = a3;
        }
        char v23 = (int *)MEMORY[0x1E4F940E8];
        int v115 = 1;
        unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
        char v25 = v20;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_215;
        }
        char v113 = v20;
        char v116 = v21 | v20;
        char v117 = (v22 == 0) | v21;
        uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
        char v114 = v21;
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v9;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v24)) {
      goto LABEL_213;
    }
    char v27 = 0;
    unsigned int v28 = 0;
    unint64_t v29 = 0;
    while (1)
    {
      uint64_t v30 = *v23;
      uint64_t v31 = *(void *)(v3 + v30);
      unint64_t v32 = v31 + 1;
      if (v31 == -1 || v32 > *(void *)(v3 + *v6)) {
        break;
      }
      char v33 = *(unsigned char *)(*(void *)(v3 + *v26) + v31);
      *(void *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0) {
        goto LABEL_25;
      }
      v27 += 7;
      BOOL v34 = v28++ >= 9;
      if (v34)
      {
        unint64_t v29 = 0;
        int v35 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v24) = 1;
LABEL_25:
    int v35 = *(unsigned __int8 *)(v3 + *v24);
    if (*(unsigned char *)(v3 + *v24)) {
      unint64_t v29 = 0;
    }
LABEL_27:
    int v36 = v29 & 7;
    if (v35 || v36 == 4)
    {
LABEL_213:
      int v115 = 1;
      goto LABEL_214;
    }
    unint64_t v38 = v29 >> 3;
    BOOL v39 = v21;
    if ((v117 & 1) == 0)
    {
      uint64_t v40 = v22;
      do
      {
        int v42 = *v40++;
        int v41 = v42;
        BOOL v39 = v42 != 0;
        if (v42) {
          BOOL v43 = v41 == v38;
        }
        else {
          BOOL v43 = 1;
        }
      }
      while (!v43);
    }
    switch((int)v38)
    {
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_160;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 156) |= 2u;
        while (1)
        {
          uint64_t v47 = *v23;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6)) {
            break;
          }
          char v50 = *(unsigned char *)(*(void *)(v3 + *v26) + v48);
          *(void *)(v3 + v47) = v49;
          v46 |= (unint64_t)(v50 & 0x7F) << v44;
          if ((v50 & 0x80) == 0) {
            goto LABEL_163;
          }
          v44 += 7;
          BOOL v34 = v45++ >= 9;
          if (v34)
          {
            LODWORD(v46) = 0;
            goto LABEL_165;
          }
        }
        *(unsigned char *)(v3 + *v24) = 1;
LABEL_163:
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v46) = 0;
        }
LABEL_165:
        uint64_t v100 = 136;
        goto LABEL_182;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_160;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 156) |= 1u;
        while (2)
        {
          uint64_t v53 = *v23;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v26) + v54);
            *(void *)(v3 + v53) = v55;
            v46 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              BOOL v34 = v52++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_169;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v46) = 0;
        }
LABEL_169:
        uint64_t v100 = 132;
        goto LABEL_182;
      case 7:
        if (!v39 || (*(unsigned char *)(a1 + 157) & 0x80) != 0) {
          goto LABEL_158;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_239;
        }
        uint64_t v60 = objc_alloc_init(GEOTransitStep);
        if (!GEOTransitStepReadAllFrom((uint64_t)v60, (void *)v3, v10 & 1)) {
          goto LABEL_238;
        }
        PBReaderRecallMark();
        -[GEOTransitSuggestedRoute _addNoFlagsSteps:](a1, v60);
        goto LABEL_117;
      case 8:
        if (!v39) {
          goto LABEL_160;
        }
        if ((*(unsigned char *)(a1 + 157) & 8) == 0)
        {
          uint64_t v61 = PBReaderReadData();
          unint64_t v62 = *(void **)(a1 + 72);
          *(void *)(a1 + 72) = v61;
          goto LABEL_153;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_239;
        }
        int v101 = (int)(*(_DWORD *)(a1 + 156) << 20) >> 31;
        goto LABEL_197;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_160;
        }
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 156) |= 4u;
        while (2)
        {
          uint64_t v65 = *v23;
          uint64_t v66 = *(void *)(v3 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(v3 + *v26) + v66);
            *(void *)(v3 + v65) = v67;
            v46 |= (unint64_t)(v68 & 0x7F) << v63;
            if (v68 < 0)
            {
              v63 += 7;
              BOOL v34 = v64++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_173;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v46) = 0;
        }
LABEL_173:
        uint64_t v100 = 140;
        goto LABEL_182;
      case 11:
        if (!v39) {
          goto LABEL_160;
        }
        if (*(unsigned char *)(a1 + 158))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_239;
          }
          int v101 = (int)(*(_DWORD *)(a1 + 156) << 15) >> 31;
          goto LABEL_197;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_239;
        }
        uint64_t v60 = objc_alloc_init(GEOPBTransitRoutingIncidentMessage);
        if (!GEOPBTransitRoutingIncidentMessageReadAllFrom((uint64_t)v60, (void *)v3, v10 & 1)) {
          goto LABEL_238;
        }
        PBReaderRecallMark();
        uint64_t v69 = 112;
        goto LABEL_152;
      case 13:
        if (!v39 || (*(unsigned char *)(a1 + 157) & 0x10) != 0) {
          goto LABEL_158;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_239;
        }
        uint64_t v60 = objc_alloc_init(GEOTransitSegmentArtworkSet);
        if (!GEOTransitSegmentArtworkSetReadAllFrom((uint64_t)v60, (void *)v3, v10 & 1)) {
          goto LABEL_238;
        }
        PBReaderRecallMark();
        -[GEOTransitSuggestedRoute _addNoFlagsRoutePlanningArtwork:](a1, v60);
        goto LABEL_117;
      case 14:
        if (!v39) {
          goto LABEL_160;
        }
        if ((*(unsigned char *)(a1 + 157) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_239;
          }
          int v101 = (int)(*(_DWORD *)(a1 + 156) << 22) >> 31;
          goto LABEL_197;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_239;
        }
        uint64_t v60 = objc_alloc_init(GEOTransitRouteDisplayStrings);
        if (!GEOTransitRouteDisplayStringsReadAllFrom((uint64_t)v60, (void *)v3, v10 & 1)) {
          goto LABEL_238;
        }
        PBReaderRecallMark();
        uint64_t v69 = 56;
        goto LABEL_152;
      case 15:
        if (!v39 || (*(unsigned char *)(a1 + 156) & 0x80) != 0) {
          goto LABEL_160;
        }
        if (v36 != 2)
        {
          char v102 = 0;
          unsigned int v103 = 0;
          uint64_t v104 = 0;
          while (1)
          {
            uint64_t v105 = *v23;
            uint64_t v106 = *(void *)(v3 + v105);
            unint64_t v107 = v106 + 1;
            if (v106 == -1 || v107 > *(void *)(v3 + *v6)) {
              break;
            }
            char v108 = *(unsigned char *)(*(void *)(v3 + *v26) + v106);
            *(void *)(v3 + v105) = v107;
            v104 |= (unint64_t)(v108 & 0x7F) << v102;
            if (v108 < 0)
            {
              v102 += 7;
              BOOL v34 = v103++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_212;
          }
          *(unsigned char *)(v3 + *v24) = 1;
LABEL_212:
          PBRepeatedInt32Add();
          goto LABEL_198;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_239;
        }
        while (1)
        {
          uint64_t v70 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v23) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v71 = 0;
          unsigned int v72 = 0;
          uint64_t v73 = 0;
          char v74 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v75 = *v23;
            uint64_t v76 = *(void *)(v3 + v75);
            unint64_t v77 = v76 + 1;
            if (v76 == -1 || v77 > *(void *)(v3 + *v6)) {
              break;
            }
            char v78 = *(unsigned char *)(*(void *)(v3 + *v74) + v76);
            *(void *)(v3 + v75) = v77;
            v73 |= (unint64_t)(v78 & 0x7F) << v71;
            if (v78 < 0)
            {
              v71 += 7;
              BOOL v34 = v72++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_106;
          }
          *(unsigned char *)(v3 + *v70) = 1;
LABEL_106:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
        unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
        char v21 = v114;
        goto LABEL_199;
      case 18:
        if (!v39 || (*(unsigned char *)(a1 + 157) & 0x20) != 0) {
          goto LABEL_158;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_239;
        }
        uint64_t v60 = objc_alloc_init(GEOTransitSectionOption);
        if (!GEOTransitSectionOptionReadAllFrom((uint64_t)v60, (void *)v3)) {
          goto LABEL_238;
        }
        PBReaderRecallMark();
        -[GEOTransitSuggestedRoute _addNoFlagsSectionOption:](a1, v60);
        goto LABEL_117;
      case 19:
        if (!v39 || (*(unsigned char *)(a1 + 157) & 0x40) != 0)
        {
LABEL_158:
          char v98 = PBReaderSkipValueWithTag();
          char v21 = v114;
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          if ((v98 & 1) == 0) {
            goto LABEL_237;
          }
          goto LABEL_200;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_239;
        }
        uint64_t v60 = objc_alloc_init(GEOTransitSection);
        if (!GEOTransitSectionReadAllFrom((uint64_t)v60, (void *)v3, v10 & 1)) {
          goto LABEL_238;
        }
        PBReaderRecallMark();
        -[GEOTransitSuggestedRoute _addNoFlagsSection:](a1, v60);
LABEL_117:

        goto LABEL_198;
      case 20:
        if ((v8 & 1) == 0) {
          goto LABEL_160;
        }
        char v79 = 0;
        unsigned int v80 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 156) |= 8u;
        while (2)
        {
          uint64_t v81 = *v23;
          uint64_t v82 = *(void *)(v3 + v81);
          unint64_t v83 = v82 + 1;
          if (v82 == -1 || v83 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v84 = *(unsigned char *)(*(void *)(v3 + *v26) + v82);
            *(void *)(v3 + v81) = v83;
            v46 |= (unint64_t)(v84 & 0x7F) << v79;
            if (v84 < 0)
            {
              v79 += 7;
              BOOL v34 = v80++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_177;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v46) = 0;
        }
LABEL_177:
        uint64_t v100 = 144;
        goto LABEL_182;
      case 21:
        if ((v8 & 1) == 0) {
          goto LABEL_160;
        }
        char v85 = 0;
        unsigned int v86 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 156) |= 0x10u;
        while (2)
        {
          uint64_t v87 = *v23;
          uint64_t v88 = *(void *)(v3 + v87);
          unint64_t v89 = v88 + 1;
          if (v88 == -1 || v89 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v90 = *(unsigned char *)(*(void *)(v3 + *v26) + v88);
            *(void *)(v3 + v87) = v89;
            v46 |= (unint64_t)(v90 & 0x7F) << v85;
            if (v90 < 0)
            {
              v85 += 7;
              BOOL v34 = v86++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_181;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v46) = 0;
        }
LABEL_181:
        uint64_t v100 = 148;
LABEL_182:
        *(_DWORD *)(a1 + v100) = v46;
        goto LABEL_200;
      case 22:
        if (!v39) {
          goto LABEL_160;
        }
        if ((*(unsigned char *)(a1 + 157) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_239;
          }
          int v101 = (int)(*(_DWORD *)(a1 + 156) << 21) >> 31;
          goto LABEL_197;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_239;
        }
        uint64_t v60 = objc_alloc_init(GEOTransitEngineDebugData);
        if (!GEOTransitEngineDebugDataReadAllFrom((uint64_t)v60, (void *)v3)) {
          goto LABEL_238;
        }
        PBReaderRecallMark();
        uint64_t v69 = 64;
        goto LABEL_152;
      case 23:
        if ((v8 & 1) == 0) {
          goto LABEL_160;
        }
        char v91 = 0;
        unsigned int v92 = 0;
        uint64_t v93 = 0;
        *(_DWORD *)(a1 + 156) |= 0x20u;
        while (2)
        {
          uint64_t v94 = *v23;
          uint64_t v95 = *(void *)(v3 + v94);
          unint64_t v96 = v95 + 1;
          if (v95 == -1 || v96 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v97 = *(unsigned char *)(*(void *)(v3 + *v26) + v95);
            *(void *)(v3 + v94) = v96;
            v93 |= (unint64_t)(v97 & 0x7F) << v91;
            if (v97 < 0)
            {
              v91 += 7;
              BOOL v34 = v92++ >= 9;
              if (v34)
              {
                uint64_t v93 = 0;
                goto LABEL_186;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v93 = 0;
        }
LABEL_186:
        *(unsigned char *)(a1 + 152) = v93 != 0;
        goto LABEL_200;
      case 24:
        if (!v39) {
          goto LABEL_160;
        }
        if (*(unsigned char *)(a1 + 157))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_239;
          }
          int v101 = (int)(*(_DWORD *)(a1 + 156) << 23) >> 31;
LABEL_197:
          v7 += v101;
LABEL_198:
          char v21 = v114;
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_199:
          uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
LABEL_200:
          if (!(v116 & 1 | (v7 != 0)) || *(void *)(v3 + *v23) >= *(void *)(v3 + *v6)) {
            goto LABEL_213;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_239;
        }
        uint64_t v60 = objc_alloc_init(GEOAdvisoriesInfo);
        if (GEOAdvisoriesInfoReadAllFrom((uint64_t)v60, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v69 = 48;
LABEL_152:
          unint64_t v62 = *(void **)(a1 + v69);
          *(void *)(a1 + v69) = v60;
LABEL_153:

          --v7;
          goto LABEL_198;
        }
LABEL_238:

LABEL_239:
        int v115 = 0;
        char v21 = v114;
        unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_214:
        char v25 = v113;
LABEL_215:
        if (v25) {
LABEL_216:
        }
          *(_DWORD *)(a1 + 156) |= 0x40u;
        if (v21 & 1 | ((v115 & 1) == 0))
        {
          *(_DWORD *)(a1 + 156) |= 0x8000u;
          *(_DWORD *)(a1 + 156) |= 0x800u;
          *(_DWORD *)(a1 + 156) |= 0x10000u;
          *(_DWORD *)(a1 + 156) |= 0x100u;
          *(_DWORD *)(a1 + 156) |= 0x1000u;
          *(_DWORD *)(a1 + 156) |= 0x200u;
          *(_DWORD *)(a1 + 156) |= 0x80u;
          *(_DWORD *)(a1 + 156) |= 0x2000u;
          *(_DWORD *)(a1 + 156) |= 0x4000u;
          *(_DWORD *)(a1 + 156) |= 0x400u;
        }
        else if (v22)
        {
          while (1)
          {
            int v109 = *v22++;
            int v110 = 0x8000;
            switch(v109)
            {
              case 0:
                goto LABEL_231;
              case 7:
                goto LABEL_230;
              case 8:
                int v110 = 2048;
                goto LABEL_230;
              case 11:
                int v110 = 0x10000;
                goto LABEL_230;
              case 13:
                int v110 = 4096;
                goto LABEL_230;
              case 14:
                int v110 = 512;
                goto LABEL_230;
              case 15:
                int v110 = 128;
                goto LABEL_230;
              case 18:
                int v110 = 0x2000;
                goto LABEL_230;
              case 19:
                int v110 = 0x4000;
                goto LABEL_230;
              case 22:
                int v110 = 1024;
                goto LABEL_230;
              case 24:
                int v110 = 256;
LABEL_230:
                *(_DWORD *)(a1 + 156) |= v110;
                break;
              default:
                continue;
            }
          }
        }
LABEL_231:
        if (v115)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v24) == 0;
          if ((v21 & 1) == 0) {
            return v3;
          }
LABEL_235:
          uint64_t v111 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v21) {
            goto LABEL_235;
          }
        }
        return v3;
      default:
        if ((v113 & 1) == 0 || (*(unsigned char *)(a1 + 156) & 0x40) != 0)
        {
LABEL_160:
          char v99 = PBReaderSkipValueWithTag();
          uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
          char v21 = v114;
          if ((v99 & 1) == 0)
          {
LABEL_237:
            int v115 = 0;
            goto LABEL_214;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v57 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v58 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v57;
          }
          int v59 = PBUnknownFieldAdd();
          char v21 = v114;
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          if (!v59)
          {
            int v115 = 0;
            goto LABEL_216;
          }
        }
        goto LABEL_200;
    }
  }
}

void sub_1893556A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189355894(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189355A00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189355B74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189355F40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893560B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189356560(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18935692C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189356DF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189358744(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitSuggestedRouteCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  id v2 = *(id *)(a1 + 104);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v35 objects:v42 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v36;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v36 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v35 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v35 objects:v42 count:16];
    }
    while (v4);
  }

  -[GEOPBTransitRoutingIncidentMessage readAll:](*(void *)(a1 + 112), 1);
  [*(id *)(a1 + 48) readAll:1];
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  id v7 = *(id *)(a1 + 80);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v31 objects:v41 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v32;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v32 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v31 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v31 objects:v41 count:16];
    }
    while (v9);
  }

  [*(id *)(a1 + 56) readAll:1];
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v12 = *(id *)(a1 + 88);
  uint64_t v13 = [v12 countByEnumeratingWithState:&v27 objects:v40 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v28;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v28 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v27 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v27 objects:v40 count:16];
    }
    while (v14);
  }

  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v17 = *(id *)(a1 + 96);
  uint64_t v18 = [v17 countByEnumeratingWithState:&v23 objects:v39 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v24;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v24 != v20) {
          objc_enumerationMutation(v17);
        }
        objc_msgSend(*(id *)(*((void *)&v23 + 1) + 8 * v21++), "readAll:", 1, (void)v23);
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v23 objects:v39 count:16];
    }
    while (v19);
  }

  return [*(id *)(a1 + 64) readAll:1];
}

unint64_t GEOTransitSuggestedRouteReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 124))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitSuggestedRouteReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 128));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 120) = [v8 position];
  *(_DWORD *)(a1 + 124) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOTransitSuggestedRouteReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOTransitSuggestedRouteReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitSuggestedRouteReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOTransitSuggestedRouteCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 128));
  return Specified;
}

void sub_189358BEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitSuggestedRouteReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitSuggestedRouteReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189358C50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitSuggestedRouteIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_124;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_105;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_110;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_124;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_105;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_110;
          }
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitStepIsValid(a1)) {
            goto LABEL_124;
          }
          goto LABEL_109;
        case 8u:
          if (v15 == 2) {
            goto LABEL_40;
          }
          goto LABEL_124;
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_124;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_105;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_110;
          }
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitRoutingIncidentMessageIsValid(a1)) {
            goto LABEL_124;
          }
          goto LABEL_109;
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitSegmentArtworkSetIsValid(a1)) {
            goto LABEL_124;
          }
          goto LABEL_109;
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitRouteDisplayStringsIsValid(a1)) {
            goto LABEL_124;
          }
          goto LABEL_109;
        case 0xFu:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_124:
              PBReaderRecallMark();
              return 0;
            }
LABEL_113:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v53 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v54 = *v2;
                uint64_t v55 = *(void *)&a1[v54];
                unint64_t v56 = v55 + 1;
                if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
                  break;
                }
                int v57 = *(char *)(*(void *)&a1[*v5] + v55);
                *(void *)&a1[v54] = v56;
                if (v57 < 0)
                {
                  BOOL v13 = v53++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_113;
              }
              a1[*v4] = 1;
            }
LABEL_109:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_124;
            }
            while (1)
            {
              uint64_t v33 = *v2;
              uint64_t v34 = *(void *)&a1[v33];
              unint64_t v35 = v34 + 1;
              if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
                break;
              }
              int v36 = *(char *)(*(void *)&a1[*v5] + v34);
              *(void *)&a1[v33] = v35;
              if (v36 < 0)
              {
                unsigned int v37 = v15++;
                if (v37 <= 8) {
                  continue;
                }
              }
              goto LABEL_110;
            }
LABEL_105:
            a1[*v4] = 1;
          }
LABEL_110:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_122;
          }
          break;
        case 0x12u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitSectionOptionIsValid(a1)) {
            goto LABEL_124;
          }
          goto LABEL_109;
        case 0x13u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitSectionIsValid(a1)) {
            goto LABEL_124;
          }
          goto LABEL_109;
        case 0x14u:
          if ((v8 & 7) != 0) {
            goto LABEL_124;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_105;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_110;
          }
        case 0x15u:
          if ((v8 & 7) != 0) {
            goto LABEL_124;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_105;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_110;
          }
        case 0x16u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitEngineDebugDataIsValid(a1)) {
            goto LABEL_124;
          }
          goto LABEL_109;
        case 0x17u:
          if ((v8 & 7) != 0) {
            goto LABEL_124;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_105;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_110;
          }
        case 0x18u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOAdvisoriesInfoIsValid(a1)) {
            goto LABEL_109;
          }
          goto LABEL_124;
        default:
LABEL_40:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_124;
          }
          goto LABEL_110;
      }
    }
  }
LABEL_122:
  BOOL v58 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v58;
}

void sub_189359830(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitSuggestedRouteIsDirty(uint64_t a1)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  int v2 = *(_DWORD *)(a1 + 156);
  if ((v2 & 0x28800) != 0) {
    return 1;
  }
  if ((v2 & 0x10000) != 0)
  {
    if (GEOPBTransitRoutingIncidentMessageIsDirty(*(void *)(a1 + 112))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEOAdvisoriesInfoIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x1000) == 0)
  {
    if ((v2 & 0x200) != 0)
    {
      if (GEOTransitRouteDisplayStringsIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
        return 1;
      }
      int v2 = *(_DWORD *)(a1 + 156);
    }
    if ((v2 & 0x6480) == 0)
    {
      if ((v2 & 0x8000) != 0)
      {
        long long v26 = 0u;
        long long v27 = 0u;
        long long v24 = 0u;
        long long v25 = 0u;
        id v5 = *(id *)(a1 + 104);
        uint64_t v6 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
        if (v6)
        {
          uint64_t v7 = v6;
          uint64_t v8 = *(void *)v25;
LABEL_18:
          uint64_t v9 = 0;
          while (1)
          {
            if (*(void *)v25 != v8) {
              objc_enumerationMutation(v5);
            }
            if (GEOTransitStepIsDirty(*(os_unfair_lock_s **)(*((void *)&v24 + 1) + 8 * v9))) {
              goto LABEL_46;
            }
            if (v7 == ++v9)
            {
              uint64_t v7 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
              if (v7) {
                goto LABEL_18;
              }
              break;
            }
          }
        }

        int v2 = *(_DWORD *)(a1 + 156);
      }
      if ((v2 & 0x1000) != 0)
      {
        long long v22 = 0u;
        long long v23 = 0u;
        long long v20 = 0u;
        long long v21 = 0u;
        id v5 = *(id *)(a1 + 80);
        uint64_t v10 = [v5 countByEnumeratingWithState:&v20 objects:v29 count:16];
        if (v10)
        {
          uint64_t v11 = v10;
          uint64_t v12 = *(void *)v21;
LABEL_28:
          uint64_t v13 = 0;
          while (1)
          {
            if (*(void *)v21 != v12) {
              objc_enumerationMutation(v5);
            }
            if ((GEOTransitSegmentArtworkSetIsDirty(*(os_unfair_lock_s **)(*((void *)&v20 + 1)
                                                                                           + 8 * v13)) & 1) != 0)
              goto LABEL_46;
            if (v11 == ++v13)
            {
              uint64_t v11 = [v5 countByEnumeratingWithState:&v20 objects:v29 count:16];
              if (v11) {
                goto LABEL_28;
              }
              break;
            }
          }
        }

        int v2 = *(_DWORD *)(a1 + 156);
      }
      if ((v2 & 0x4000) == 0) {
        return 0;
      }
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      id v5 = *(id *)(a1 + 96);
      uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v28 count:16];
      if (!v3)
      {
LABEL_47:

        return v3;
      }
      uint64_t v14 = *(void *)v17;
LABEL_39:
      uint64_t v15 = 0;
      while (1)
      {
        if (*(void *)v17 != v14) {
          objc_enumerationMutation(v5);
        }
        if (GEOTransitSectionIsDirty(*(os_unfair_lock_s **)(*((void *)&v16 + 1) + 8 * v15))) {
          break;
        }
        if (v3 == ++v15)
        {
          uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v28 count:16];
          if (v3) {
            goto LABEL_39;
          }
          goto LABEL_47;
        }
      }
LABEL_46:
      uint64_t v3 = 1;
      goto LABEL_47;
    }
  }
  return 1;
}

os_unfair_lock_s *GEOTransitSuggestedRouteIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOTransitSuggestedRouteIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 32);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18935A674(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18935B114(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitSurchargeReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_53;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_53;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3) {
          break;
        }
        if (v18 == 2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 32) |= 2u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v22 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0) {
              goto LABEL_48;
            }
            v27 += 7;
            BOOL v15 = v28++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_50;
            }
          }
          v3[*v6] = 1;
LABEL_48:
          if (v3[*v6]) {
            LODWORD(v22) = 0;
          }
LABEL_50:
          uint64_t v35 = 28;
LABEL_51:
          *(_DWORD *)(a1 + v35) = v22;
          goto LABEL_52;
        }
        if (v18 == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_55;
          }
          long long v19 = objc_alloc_init(GEOTransitSurchargeUnit);
          if (!GEOTransitSurchargeUnitReadAllFrom((uint64_t)v19, v3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addSurchargeUnit:", v19, 0, 0);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v34 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v33;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_55;
          }
        }
LABEL_52:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_53;
        }
      }
      char v20 = 0;
      unsigned int v21 = 0;
      uint64_t v22 = 0;
      *(unsigned char *)(a1 + 32) |= 1u;
      while (1)
      {
        uint64_t v23 = *v4;
        uint64_t v24 = *(void *)&v3[v23];
        unint64_t v25 = v24 + 1;
        if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
          break;
        }
        char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
        *(void *)&v3[v23] = v25;
        v22 |= (unint64_t)(v26 & 0x7F) << v20;
        if ((v26 & 0x80) == 0) {
          goto LABEL_44;
        }
        v20 += 7;
        BOOL v15 = v21++ >= 9;
        if (v15)
        {
          LODWORD(v22) = 0;
          goto LABEL_46;
        }
      }
      v3[*v6] = 1;
LABEL_44:
      if (v3[*v6]) {
        LODWORD(v22) = 0;
      }
LABEL_46:
      uint64_t v35 = 24;
      goto LABEL_51;
    }
LABEL_53:
    BOOL v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_55:
    BOOL v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_18935C3B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitSurchargeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTransitSurchargeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18935C418(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitSurchargeUnitIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitPriceIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOTransitSurchargeUnitReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v18 = objc_alloc_init(GEOTransitPrice);
          if (!GEOTransitPriceReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          long long v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_18935D4F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitSurchargeUnitReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTransitSurchargeUnitReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18935D55C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18935DABC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitTicketingSegmentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v14 & ~(_BYTE)v10 | v7;
        unsigned __int8 v16 = v14 | v10;
        char v51 = v15;
        char v52 = v16 | v15;
        if ((v16 | v8)) {
          BOOL v17 = 0;
        }
        else {
          BOOL v17 = a3;
        }
        unint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        char v53 = (v17 == 0) | v16;
        BOOL v54 = v16;
        long long v19 = (int *)MEMORY[0x1E4F940C8];
        id v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_67;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_67:
      int v50 = 1;
      goto LABEL_68;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v54;
    if ((v53 & 1) == 0)
    {
      id v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 3) {
      break;
    }
    if (v31 == 2)
    {
      if (!v32) {
        goto LABEL_58;
      }
      if ((*(unsigned char *)(a1 + 60) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_84;
        }
        char v45 = 32 * *(unsigned char *)(a1 + 60);
        goto LABEL_64;
      }
      uint64_t v37 = PBReaderReadString();
      uint64_t v38 = 32;
LABEL_51:
      uint64_t v40 = *(void **)(a1 + v38);
      *(void *)(a1 + v38) = v37;

      --v9;
LABEL_65:
      long long v19 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_66;
    }
    if (v31 == 1)
    {
      if (!v32) {
        goto LABEL_58;
      }
      if ((*(unsigned char *)(a1 + 60) & 8) == 0)
      {
        uint64_t v37 = PBReaderReadString();
        uint64_t v38 = 40;
        goto LABEL_51;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_84;
      }
      char v45 = 16 * *(unsigned char *)(a1 + 60);
LABEL_64:
      v9 += v45 >> 7;
      goto LABEL_65;
    }
    if (v51 & 1) == 0 || (*(unsigned char *)(a1 + 60)) {
      goto LABEL_58;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      int v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    int v43 = PBUnknownFieldAdd();
    long long v19 = (int *)MEMORY[0x1E4F940C8];
    if (!v43)
    {
      int v50 = 0;
      goto LABEL_69;
    }
LABEL_66:
    if (!(v52 & 1 | (v9 != 0))) {
      goto LABEL_67;
    }
  }
  if (!v32 || (*(unsigned char *)(a1 + 60) & 2) != 0)
  {
LABEL_58:
    char v44 = PBReaderSkipValueWithTag();
    long long v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v44 & 1) == 0)
    {
      int v50 = 0;
      goto LABEL_68;
    }
    goto LABEL_66;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_84;
  }
  uint64_t v39 = objc_alloc_init(GEOTransitPath);
  if (GEOTransitPathReadAllFrom(v39, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOTransitTicketingSegment _addNoFlagsPath:](a1, v39);

    goto LABEL_65;
  }

LABEL_84:
  int v50 = 0;
  long long v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_68:
  if ((v51 & 1) == 0) {
    goto LABEL_70;
  }
LABEL_69:
  *(unsigned char *)(a1 + 60) |= 1u;
LABEL_70:
  if (v54 || (v50 & 1) == 0)
  {
    *(unsigned char *)(a1 + 60) |= 8u;
    *(unsigned char *)(a1 + 60) |= 4u;
    *(unsigned char *)(a1 + 60) |= 2u;
  }
  else if (v17)
  {
    while (1)
    {
      int v46 = *v17++;
      char v47 = 8;
      switch(v46)
      {
        case 0:
          goto LABEL_77;
        case 1:
          goto LABEL_76;
        case 2:
          char v47 = 4;
          goto LABEL_76;
        case 3:
          char v47 = 2;
LABEL_76:
          *(unsigned char *)(a1 + 60) |= v47;
          break;
        default:
          continue;
      }
    }
  }
LABEL_77:
  if (v50) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v54)
  {
    unsigned int v48 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18935E1B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18935E324(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18935EE08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOTransitTicketingSegmentCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOTransitTicketingSegmentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitTicketingSegmentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOTransitTicketingSegmentReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOTransitTicketingSegmentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitTicketingSegmentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOTransitTicketingSegmentCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18935F09C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitTicketingSegmentReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitTicketingSegmentReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18935F100(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18935F364(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitTicketingSegmentIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_18935F768(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18935FAB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitTransferInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 4)
        {
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          *(unsigned char *)(a1 + 28) |= 2u;
          while (1)
          {
            uint64_t v28 = *v4;
            uint64_t v29 = *(void *)&v3[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&v3[*v5]) {
              break;
            }
            char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
            *(void *)&v3[v28] = v30;
            v27 |= (unint64_t)(v31 & 0x7F) << v25;
            if ((v31 & 0x80) == 0) {
              goto LABEL_44;
            }
            v25 += 7;
            BOOL v15 = v26++ >= 9;
            if (v15)
            {
              LODWORD(v27) = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6]) {
            LODWORD(v27) = 0;
          }
LABEL_46:
          *(_DWORD *)(a1 + 24) = v27;
        }
        else if ((v10 >> 3) == 6)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_40;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_42;
            }
          }
          v3[*v6] = 1;
LABEL_40:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_42:
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v32 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v33 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v32;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_49;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v34 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    BOOL v34 = 0;
  }
  objc_sync_exit(v3);

  return v34;
}

void sub_18936053C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitTransferInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTransitTransferInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893605A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189360BE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitVehicleInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 112)), (uint16x4_t)0xFFF6FFF9FFF8FFF7), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 112) >> 6) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 > 2;
        char v15 = v14 & ~(_BYTE)v10 | v9;
        char v16 = v14 | v10;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        if (((v14 | v10) | v8)) {
          char v18 = 0;
        }
        else {
          char v18 = a3;
        }
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_171;
        }
        char v107 = v15;
        char v109 = v16 | v15;
        char v110 = (v18 == 0) | v16;
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        char v108 = v14 | v10;
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v9;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v19)) {
      goto LABEL_169;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v17;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    int v30 = v23 & 7;
    if (v29 || v30 == 4)
    {
LABEL_169:
      LODWORD(v13) = 1;
      goto LABEL_170;
    }
    unint64_t v32 = v23 >> 3;
    BOOL v33 = v16;
    if ((v110 & 1) == 0)
    {
      BOOL v34 = v18;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33) {
          goto LABEL_121;
        }
        if ((*(_WORD *)(a1 + 112) & 0x100) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_189;
          }
          uint64_t v38 = objc_alloc_init(GEOTransitVehicleTime);
          if (GEOTransitVehicleTimeReadAllFrom((uint64_t)v38, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v39 = 48;
            goto LABEL_48;
          }
          goto LABEL_188;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_189;
        }
        __int16 v94 = *(_WORD *)(a1 + 112) << 7;
        goto LABEL_154;
      case 2:
        if (!v33) {
          goto LABEL_121;
        }
        if ((*(_WORD *)(a1 + 112) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_189;
          }
          __int16 v94 = *(_WORD *)(a1 + 112) << 6;
LABEL_154:
          v7 += v94 >> 15;
          goto LABEL_155;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_189;
        }
        uint64_t v38 = objc_alloc_init(GEOTransitVehicleTime);
        if (GEOTransitVehicleTimeReadAllFrom((uint64_t)v38, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v39 = 56;
LABEL_48:
          uint64_t v40 = *(void **)(a1 + v39);
          *(void *)(a1 + v39) = v38;

          --v7;
LABEL_155:
          char v16 = v108;
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_156:
          if (!(v109 & 1 | (v7 != 0)) || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_169;
          }
          continue;
        }
LABEL_188:

LABEL_189:
        LODWORD(v13) = 0;
        char v16 = v108;
LABEL_170:
        char v15 = v107;
LABEL_171:
        if (v15) {
LABEL_172:
        }
          *(_WORD *)(a1 + 112) |= 0x40u;
        if (v16 & 1 | ((v13 & 1) == 0))
        {
          *(_WORD *)(a1 + 112) |= 0x100u;
          *(_WORD *)(a1 + 112) |= 0x200u;
          *(_WORD *)(a1 + 112) |= 0x80u;
          *(_WORD *)(a1 + 112) |= 0x400u;
        }
        else if (v18)
        {
          while (1)
          {
            int v103 = *v18++;
            int v102 = v103;
            __int16 v104 = 256;
            switch(v103)
            {
              case 0:
                goto LABEL_182;
              case 1:
                goto LABEL_181;
              case 2:
                __int16 v104 = 512;
                goto LABEL_181;
              case 3:
              case 4:
              case 5:
                continue;
              case 6:
                __int16 v104 = 128;
                goto LABEL_181;
              default:
                if (v102 != 14) {
                  continue;
                }
                __int16 v104 = 1024;
LABEL_181:
                *(_WORD *)(a1 + 112) |= v104;
                break;
            }
          }
        }
LABEL_182:
        if (v13)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v16 & 1) == 0) {
            return v3;
          }
LABEL_186:
          uint64_t v105 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v16) {
            goto LABEL_186;
          }
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_121;
        }
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(_WORD *)(a1 + 112) |= 8u;
        while (2)
        {
          uint64_t v44 = *v17;
          uint64_t v45 = *(void *)(v3 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(v3 + *v20) + v45);
            *(void *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v28 = v42++ >= 9;
              if (v28)
              {
                LODWORD(v43) = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v43) = 0;
        }
LABEL_126:
        uint64_t v93 = 100;
        goto LABEL_143;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_121;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v43 = 0;
        *(_WORD *)(a1 + 112) |= 0x20u;
        while (2)
        {
          uint64_t v50 = *v17;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v20) + v51);
            *(void *)(v3 + v50) = v52;
            v43 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              BOOL v28 = v49++ >= 9;
              if (v28)
              {
                LODWORD(v43) = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v43) = 0;
        }
LABEL_130:
        uint64_t v93 = 108;
        goto LABEL_143;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_121;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v43 = 0;
        *(_WORD *)(a1 + 112) |= 2u;
        while (2)
        {
          uint64_t v56 = *v17;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v20) + v57);
            *(void *)(v3 + v56) = v58;
            v43 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              BOOL v28 = v55++ >= 9;
              if (v28)
              {
                LODWORD(v43) = 0;
                goto LABEL_134;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v43) = 0;
        }
LABEL_134:
        uint64_t v93 = 92;
        goto LABEL_143;
      case 6:
        if (!v33 || (*(_WORD *)(a1 + 112) & 0x80) != 0) {
          goto LABEL_121;
        }
        if (v30 != 2)
        {
          char v95 = 0;
          unsigned int v96 = 0;
          uint64_t v97 = 0;
          while (1)
          {
            uint64_t v98 = *v17;
            uint64_t v99 = *(void *)(v3 + v98);
            unint64_t v100 = v99 + 1;
            if (v99 == -1 || v100 > *(void *)(v3 + *v6)) {
              break;
            }
            char v101 = *(unsigned char *)(*(void *)(v3 + *v20) + v99);
            *(void *)(v3 + v98) = v100;
            v97 |= (unint64_t)(v101 & 0x7F) << v95;
            if (v101 < 0)
            {
              v95 += 7;
              BOOL v28 = v96++ >= 9;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_168;
          }
          *(unsigned char *)(v3 + *v19) = 1;
LABEL_168:
          PBRepeatedUInt32Add();
          goto LABEL_155;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_189;
        }
        while (1)
        {
          uint64_t v60 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v61 = 0;
          unsigned int v62 = 0;
          uint64_t v63 = 0;
          while (1)
          {
            uint64_t v64 = *v17;
            uint64_t v65 = *(void *)(v3 + v64);
            unint64_t v66 = v65 + 1;
            if (v65 == -1 || v66 > *(void *)(v3 + *v6)) {
              break;
            }
            char v67 = *(unsigned char *)(*(void *)(v3 + *v20) + v65);
            *(void *)(v3 + v64) = v66;
            v63 |= (unint64_t)(v67 & 0x7F) << v61;
            if (v67 < 0)
            {
              v61 += 7;
              BOOL v28 = v62++ >= 9;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_87;
          }
          *(unsigned char *)(v3 + *v60) = 1;
LABEL_87:
          PBRepeatedUInt32Add();
        }
        PBReaderRecallMark();
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
        char v16 = v108;
        goto LABEL_156;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_121;
        }
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v43 = 0;
        *(_WORD *)(a1 + 112) |= 0x10u;
        while (2)
        {
          uint64_t v70 = *v17;
          uint64_t v71 = *(void *)(v3 + v70);
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(v3 + *v20) + v71);
            *(void *)(v3 + v70) = v72;
            v43 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              BOOL v28 = v69++ >= 9;
              if (v28)
              {
                LODWORD(v43) = 0;
                goto LABEL_138;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v43) = 0;
        }
LABEL_138:
        uint64_t v93 = 104;
        goto LABEL_143;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_121;
        }
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v43 = 0;
        *(_WORD *)(a1 + 112) |= 4u;
        while (2)
        {
          uint64_t v76 = *v17;
          uint64_t v77 = *(void *)(v3 + v76);
          unint64_t v78 = v77 + 1;
          if (v77 == -1 || v78 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v79 = *(unsigned char *)(*(void *)(v3 + *v20) + v77);
            *(void *)(v3 + v76) = v78;
            v43 |= (unint64_t)(v79 & 0x7F) << v74;
            if (v79 < 0)
            {
              v74 += 7;
              BOOL v28 = v75++ >= 9;
              if (v28)
              {
                LODWORD(v43) = 0;
                goto LABEL_142;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v43) = 0;
        }
LABEL_142:
        uint64_t v93 = 96;
LABEL_143:
        *(_DWORD *)(a1 + v93) = v43;
        goto LABEL_156;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_121;
        }
        char v83 = 0;
        unsigned int v84 = 0;
        uint64_t v85 = 0;
        *(_WORD *)(a1 + 112) |= 1u;
        while (2)
        {
          uint64_t v86 = *v17;
          uint64_t v87 = *(void *)(v3 + v86);
          unint64_t v88 = v87 + 1;
          if (v87 == -1 || v88 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v89 = *(unsigned char *)(*(void *)(v3 + *v20) + v87);
            *(void *)(v3 + v86) = v88;
            v85 |= (unint64_t)(v89 & 0x7F) << v83;
            if (v89 < 0)
            {
              v83 += 7;
              BOOL v28 = v84++ >= 9;
              if (v28)
              {
                uint64_t v85 = 0;
                goto LABEL_147;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v85 = 0;
        }
LABEL_147:
        *(void *)(a1 + 64) = v85;
        goto LABEL_156;
      case 14:
        if (!v33) {
          goto LABEL_121;
        }
        if ((*(_WORD *)(a1 + 112) & 0x400) == 0)
        {
          uint64_t v90 = PBReaderReadString();
          char v91 = *(void **)(a1 + 72);
          *(void *)(a1 + 72) = v90;

          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          char v16 = v108;
          --v7;
          goto LABEL_156;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_189;
        }
        __int16 v94 = 32 * *(_WORD *)(a1 + 112);
        goto LABEL_154;
      default:
        if ((v107 & 1) == 0 || (*(_WORD *)(a1 + 112) & 0x40) != 0)
        {
LABEL_121:
          char v92 = PBReaderSkipValueWithTag();
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          char v16 = v108;
          if ((v92 & 1) == 0)
          {
            LODWORD(v13) = 0;
            goto LABEL_170;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v80 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v81 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v80;
          }
          int v82 = PBUnknownFieldAdd();
          char v16 = v108;
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v82)
          {
            LODWORD(v13) = 0;
            goto LABEL_172;
          }
        }
        goto LABEL_156;
    }
  }
}

void sub_189361A24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189361C80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893623EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893631D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitVehicleInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitVehicleInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOTransitVehicleInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOTransitVehicleInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitVehicleInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 48) readAll:1];
    [*(id *)(a1 + 56) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_189363390(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitVehicleInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitVehicleInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893633F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitVehicleTimeIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

void sub_1893638C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitVehicleInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  BOOL v2 = (*(_WORD *)(a1 + 112) & 0xF80) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return v2;
}

void sub_189363E14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189364438(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitVehiclePositionInfoReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v18 = objc_alloc_init(GEOTransitDepartureEntry);
          if (!GEOTransitDepartureEntryReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addDepartureEntry:", v18, 0, 0);
        }
        else
        {
          if (!a1[1])
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v20 = (void *)a1[1];
            a1[1] = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189364EA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitVehiclePositionInfoReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTransitVehiclePositionInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189364F0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitVehicleTimeReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189365C9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitVehicleTimeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTransitVehicleTimeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189365D00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189366144(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1893661A0(_Unwind_Exception *a1)
{
  maps::path_codec::geo3::RoutingPathLeg::~RoutingPathLeg(v1);
  _Unwind_Resume(a1);
}

void sub_189366224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189366318(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18936641C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1893664D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18936658C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1893665F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1893667D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_189366904(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t GEODefaultsSetUseServer(uint64_t result)
{
  _GEODefaultsUseServer = result;
  return result;
}

void GEODefaultsDisableServer()
{
  _MergedGlobals_197 = 1;
}

void _GEOConfigSetProxy(void *a1)
{
  if (qword_1EB29F658)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      __int16 v6 = 0;
      BOOL v2 = MEMORY[0x1E4F14500];
      id v3 = "Assertion failed: _proxyClass == ((void *)0)";
      uint64_t v4 = (uint8_t *)&v6;
LABEL_9:
      _os_log_fault_impl(&dword_188D96000, v2, OS_LOG_TYPE_FAULT, v3, v4, 2u);
    }
  }
  else
  {
    if ([a1 conformsToProtocol:&unk_1ED750E58])
    {
      qword_1EB29F658 = (uint64_t)a1;
      return;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      __int16 v5 = 0;
      BOOL v2 = MEMORY[0x1E4F14500];
      id v3 = "Assertion failed: [clas conformsToProtocol:@protocol(GEOConfigProxy)]";
      uint64_t v4 = (uint8_t *)&v5;
      goto LABEL_9;
    }
  }
}

__CFString *GEODefaultsSourceAsString(unint64_t a1)
{
  if (a1 >= 0xA)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"GEODefaultsSourceUnknown(%d)", a1);
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v1 = off_1E53DB640[a1];
  }

  return v1;
}

uint64_t _GEOConfigOptionsForDefaultsSource(unint64_t a1)
{
  if (a1 > 9) {
    return 983040;
  }
  else {
    return qword_18A62DDD8[a1];
  }
}

void GEOUserDefaultsTriggerWatchSync(void *a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (NanoPreferencesSyncLibraryCore() && getNPSManagerClass())
  {
    BOOL v2 = j__GEOGetUserDefaultsLog();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      int v6 = 138543362;
      id v7 = v1;
      _os_log_impl(&dword_188D96000, v2, OS_LOG_TYPE_INFO, "Synchronizing key '%{public}@' to paired watch (if applicable)", (uint8_t *)&v6, 0xCu);
    }

    id v3 = objc_alloc_init((Class)getNPSManagerClass());
    if (qword_1EB29F678 != -1) {
      dispatch_once(&qword_1EB29F678, &__block_literal_global_60);
    }
    uint64_t v4 = qword_1EB29F670;
    __int16 v5 = [MEMORY[0x1E4F1CAD0] setWithObject:v1];
    [v3 synchronizeUserDefaultsDomain:v4 keys:v5];
  }
  else
  {
    id v3 = j__GEOGetUserDefaultsLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v6 = 138543362;
      id v7 = v1;
      _os_log_impl(&dword_188D96000, v3, OS_LOG_TYPE_ERROR, "Unable to synchronizing key '%{public}@' to paired watch (missing NPSManager)", (uint8_t *)&v6, 0xCu);
    }
  }
}

void _GEOResetAllDefaults(int a1)
{
  if ((_MergedGlobals_197 & 1) == 0)
  {
    if (_GEODefaultsUseServer)
    {
      id empty = xpc_dictionary_create_empty();
      xpc_dictionary_set_string(empty, "message", "defaults.resetAllDefaults");
      BOOL v2 = _GEODefaultsServerConnection();
      id v3 = v2;
      if (a1) {
        [v2 sendMessageSync:empty];
      }
      else {
        [v2 sendMessage:empty];
      }
    }
    else
    {
      if (qword_1EB29F688 != -1) {
        dispatch_once(&qword_1EB29F688, &__block_literal_global_65_0);
      }
      CFStringRef v4 = (const __CFString *)*MEMORY[0x1E4F1D3F0];
      CFStringRef v5 = (const __CFString *)*MEMORY[0x1E4F1D3C8];
      CFArrayRef v6 = CFPreferencesCopyKeyList((CFStringRef)qword_1EB29F680, (CFStringRef)*MEMORY[0x1E4F1D3F0], (CFStringRef)*MEMORY[0x1E4F1D3C8]);
      if (v6)
      {
        CFArrayRef v7 = v6;
        if (qword_1EB29F688 != -1) {
          dispatch_once(&qword_1EB29F688, &__block_literal_global_65_0);
        }
        CFPreferencesSetMultiple(0, v7, (CFStringRef)qword_1EB29F680, v4, v5);
        uint64_t v8 = _GEOConfigProxy();
        unsigned int v9 = [v8 configStoreForSource:2];
        [v9 resync];

        CFRelease(v7);
      }
    }
  }
}

void _GEOSetAllValuesInStore(uint64_t a1, void *a2)
{
  id v12 = a2;
  if ((_MergedGlobals_197 & 1) == 0)
  {
    if (_GEODefaultsUseServer)
    {
      id v3 = [[GEOConfigSetAllValueInStoreRequest alloc] initWithTraits:0 auditToken:0 throttleToken:0];
      [(GEOConfigSetAllValueInStoreRequest *)v3 setKeyOptions:a1];
      [(GEOConfigSetAllValueInStoreRequest *)v3 setKeyStringsAndValues:v12];
      CFStringRef v4 = _GEODefaultsServerConnection();
      [(GEOXPCRequest *)v3 send:v4];
LABEL_18:

      goto LABEL_19;
    }
    uint64_t v5 = a1 & 0xFF0000;
    if ((a1 & 0xFF0000uLL) < 0x40000)
    {
      if (v5 == 0x10000)
      {
        uint64_t v6 = 3;
        goto LABEL_16;
      }
      if (v5 == 0x20000)
      {
        uint64_t v6 = 6;
        goto LABEL_16;
      }
    }
    else
    {
      if ((a1 & 0xFF0000) == 0x40000)
      {
        uint64_t v6 = 7;
        goto LABEL_16;
      }
      if (v5 == 0x80000)
      {
        uint64_t v6 = 8;
        goto LABEL_16;
      }
      if (v5 == 983040)
      {
        uint64_t v6 = 2;
LABEL_16:
        _directStoreForSource(v6);
        CFArrayRef v7 = (GEOConfigSetAllValueInStoreRequest *)objc_claimAutoreleasedReturnValue();
        if (!v7) {
          goto LABEL_19;
        }
        id v3 = v7;
        CFStringRef v4 = [(GEOConfigSetAllValueInStoreRequest *)v7 getConfigValueForKey:0 countryCode:0 options:0 source:0];
        [(GEOConfigSetAllValueInStoreRequest *)v3 setConfigValue:v12 forKey:@"/" options:0 synchronous:1];
        uint64_t v8 = +[GEOCountryConfiguration sharedConfiguration];
        unsigned int v9 = [v8 countryCode];
        unint64_t v10 = GEOCalculateChangedKeys(v4, v12, v9);

        uint64_t v11 = [v10 allObjects];
        _GEOConfigPostKeysChangedNotification(v11, a1);

        goto LABEL_18;
      }
    }
    uint64_t v6 = 0;
    goto LABEL_16;
  }
LABEL_19:
}

id GEOGetValuesForKeysForCompanionSync(void *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (_MergedGlobals_197)
  {
    uint64_t v8 = (void *)MEMORY[0x1E4F1CC08];
  }
  else if (_GEODefaultsUseServer)
  {
    BOOL v2 = [[GEOConfigGetCompanionSyncValuesForKeysRequest alloc] initWithTraits:0 auditToken:0 throttleToken:0];
    id v3 = [v1 allObjects];
    [(GEOConfigGetCompanionSyncValuesForKeysRequest *)v2 setKeyStrings:v3];

    CFStringRef v4 = _GEODefaultsServerConnection();
    id v10 = 0;
    uint64_t v5 = [(GEOXPCRequest *)v2 sendSync:v4 error:&v10];
    id v6 = v10;

    if (v6)
    {
      CFArrayRef v7 = j__GEOGetUserDefaultsLog();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        id v12 = v6;
        _os_log_impl(&dword_188D96000, v7, OS_LOG_TYPE_ERROR, "Received error: \"%@\"", buf, 0xCu);
      }
    }
    uint64_t v8 = [v5 keyStringsAndValues];
  }
  else
  {
    uint64_t v8 = [MEMORY[0x1E4F1CA60] dictionary];
    [v8 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:@"___static_key___"];
    _populateMissingKeysFromStore(v1, 0x40000, v8);
    _populateMissingKeysFromStore(v1, 0x20000, v8);
    _populateMissingKeysFromStore(v1, 0x80000, v8);
  }

  return v8;
}

void _populateMissingKeysFromStore(void *a1, uint64_t a2, void *a3)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  CFArrayRef v7 = _GEOConfigProxy();
  uint64_t v8 = [v7 configStoreForOptions:a2];

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v9 = v5;
  uint64_t v10 = [v9 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)v18;
    do
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v18 != v12) {
          objc_enumerationMutation(v9);
        }
        uint64_t v14 = *(void *)(*((void *)&v17 + 1) + 8 * i);
        BOOL v15 = objc_msgSend(v6, "objectForKeyedSubscript:", v14, (void)v17);

        if (!v15)
        {
          int v16 = [v8 getConfigValueForKey:v14 countryCode:0 options:a2 source:0];
          if (v16) {
            [v6 setObject:v16 forKeyedSubscript:v14];
          }
        }
      }
      uint64_t v11 = [v9 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v11);
  }
}

void GEOResetAllDefaults()
{
}

uint64_t GEOConfig_configEntitlementsForAuditToken(void *a1, const char *a2)
{
  return [a1 valuesForEntitlement:@"com.apple.GeoServices.Config"];
}

uint64_t GEOConfig_validateEntitlementForKey(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  if ([v5 hasPrefix:@"entitled/"])
  {
    CFArrayRef v7 = [v6 valuesForEntitlement:@"com.apple.GeoServices.Config"];
    if ([v7 containsObject:@"*"])
    {
      uint64_t v8 = 1;
    }
    else
    {
      id v9 = GEOConfig_getRequiredEntitlement(v5);
      uint64_t v8 = [v7 containsObject:v9];
      if ((v8 & 1) == 0)
      {
        uint64_t v10 = NSString;
        uint64_t v11 = [v6 bundleId];
        uint64_t v12 = [v10 stringWithFormat:@"Client %@ does not have required GEOConfig entitlement \"%@\" to access key \"%@\"", v11, v9, v5];

        *a3 = [MEMORY[0x1E4F28C58] GEOErrorWithCode:-10 reason:v12];
      }
    }
  }
  else
  {
    uint64_t v8 = 1;
  }

  return v8;
}

void __GEOGetGEODaemonLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEODaemon");
  id v1 = (void *)qword_1EB29F6D0;
  qword_1EB29F6D0 = (uint64_t)v0;
}

uint64_t GEOQuadKeyForCoordinate(char a1, double a2, double a3, uint64_t a4, uint64_t a5, const unsigned __int8 *a6)
{
  *(double *)&v9[1] = a2;
  double v10 = a3;
  v9[0] = a1;
  gloria::TileId::FromLatLng((gloria::TileId *)&v9[1], &v10, (const double *)v9, a6);
  return v7 | gloria::LEADING_BITS_VALUE_LUT[v6];
}

unint64_t GEOQuadKeyAncestorAt(unint64_t a1, unsigned int a2)
{
  int v2 = __clz(a1);
  int v3 = (int)((63 - v2 + (((63 - v2) & 0x80u) >> 7)) << 24) >> 25;
  if (a2 >= v3)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      v6[0] = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Assertion failed: zoom < tileID.zoom()", (uint8_t *)v6, 2u);
    }
    return 0;
  }
  else
  {
    unint64_t v4 = (a1 - gloria::LEADING_BITS_VALUE_LUT[v3]) >> (2 * (v3 - a2));
    if (!a2) {
      unint64_t v4 = 0;
    }
    return v4 | gloria::LEADING_BITS_VALUE_LUT[a2];
  }
}

void gloria::DbOptions::~DbOptions(gloria::DbOptions *this)
{
  int v2 = (std::__shared_weak_count *)*((void *)this + 5);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  int v3 = (std::__shared_weak_count *)*((void *)this + 1);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
}

void sub_189367BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

void sub_189367CFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189367D80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189367DF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189367E50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189368230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, void *a20)
{
  std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::destroy((uint64_t)&a19, a20);

  _Unwind_Resume(a1);
}

void sub_189368508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t geo::DbReaderTarFileDescriptor::DbReaderTarFileDescriptor(uint64_t a1, int a2, void *a3)
{
  uint64_t v118 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  *(void *)a1 = &unk_1ED513A10;
  *(_DWORD *)(a1 + 8) = a2;
  id v6 = v5;
  *(_DWORD *)(a1 + 112) = 1065353216;
  uint64_t v7 = (float *)(a1 + 112);
  *(void *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 40) = 0u;
  uint64_t v8 = (void **)(a1 + 40);
  *(_DWORD *)(a1 + 72) = 1065353216;
  char v109 = (float *)(a1 + 72);
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  id v9 = (void **)(a1 + 80);
  *(_OWORD *)(a1 + 96) = 0u;
  if (fstat(*(_DWORD *)(a1 + 8), &v115) == -1)
  {
    uint64_t v12 = *(id *)(a1 + 16);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      int v98 = *(_DWORD *)(a1 + 8);
      int v99 = *__error();
      unint64_t v100 = __error();
      char v101 = strerror(*v100);
      LODWORD(buf.__r_.__value_.__l.__data_) = 67109634;
      HIDWORD(buf.__r_.__value_.__r.__words[0]) = v98;
      LOWORD(buf.__r_.__value_.__r.__words[1]) = 1024;
      *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = v99;
      HIWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
      buf.__r_.__value_.__r.__words[2] = (std::string::size_type)v101;
      _os_log_error_impl(&dword_188D96000, v12, OS_LOG_TYPE_ERROR, "[TarFile] Could not get file information for descriptor %d with error %d: %s", (uint8_t *)&buf, 0x18u);
    }
    goto LABEL_5;
  }
  off_t st_size = v115.st_size;
  uint64_t v11 = mmap(0, v115.st_size, 1, 2, *(_DWORD *)(a1 + 8), 0);
  if ((unint64_t)v11 + 1 <= 1)
  {
    uint64_t v12 = *(id *)(a1 + 16);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      int v94 = *(_DWORD *)(a1 + 8);
      int v95 = *__error();
      unsigned int v96 = __error();
      uint64_t v97 = strerror(*v96);
      LODWORD(buf.__r_.__value_.__l.__data_) = 67109634;
      HIDWORD(buf.__r_.__value_.__r.__words[0]) = v94;
      LOWORD(buf.__r_.__value_.__r.__words[1]) = 1024;
      *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = v95;
      HIWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
      buf.__r_.__value_.__r.__words[2] = (std::string::size_type)v97;
      _os_log_error_impl(&dword_188D96000, v12, OS_LOG_TYPE_ERROR, "[TarFile] Could not memory-map file descriptor: %d with error %d: %s", (uint8_t *)&buf, 0x18u);
    }
LABEL_5:

    goto LABEL_223;
  }
  uint64_t v13 = *(NSObject **)(a1 + 16);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
  {
    LODWORD(buf.__r_.__value_.__l.__data_) = 134218240;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v11;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2048;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v11 + st_size;
    _os_log_debug_impl(&dword_188D96000, v13, OS_LOG_TYPE_DEBUG, "[TarFile] Memory-mapped file at [%p : %p]", (uint8_t *)&buf, 0x16u);
  }
  *(void *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = st_size;
  archive_read_new();
  archive_read_support_format_tar();
  if (archive_read_open_memory())
  {
    uint64_t v14 = *(id *)(a1 + 16);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      uint64_t v102 = archive_error_string();
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v102;
      _os_log_error_impl(&dword_188D96000, v14, OS_LOG_TYPE_ERROR, "[TarFile] error: %s", (uint8_t *)&buf, 0xCu);
    }

    archive_read_free();
    goto LABEL_223;
  }
  uint64_t v114 = 0;
  char v108 = (unint64_t *)(a1 + 104);
  int v103 = (void *)(a1 + 96);
  __int16 v104 = (void *)(a1 + 56);
  id v106 = v6;
LABEL_16:
  while (2)
  {
    int next_header = archive_read_next_header();
    if (!next_header)
    {
      if (archive_entry_filetype() != 0x8000) {
        continue;
      }
      uint64_t v16 = archive_entry_size();
      uint64_t v112 = 0;
      uint64_t v113 = 0;
      uint64_t v111 = 0;
      if (archive_read_data_block() || v112 != v16)
      {
        uint64_t v26 = archive_error_string();
        BOOL v27 = *(NSObject **)(a1 + 16);
        if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
        {
          LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v26;
          _os_log_error_impl(&dword_188D96000, v27, OS_LOG_TYPE_ERROR, "[TarFile] Failed to archive_read_data_block(): %s", (uint8_t *)&buf, 0xCu);
        }
        continue;
      }
      long long v17 = (char *)archive_entry_pathname_utf8();
      std::string::basic_string[abi:ne180100]<0>(&buf, v17);
      std::string::basic_string[abi:ne180100]<0>(&v110, "data/");
      if ((v110.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v18 = (std::string::size_type)&v110;
      }
      else {
        std::string::size_type v18 = v110.__r_.__value_.__r.__words[0];
      }
      if ((v110.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v110.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v110.__r_.__value_.__l.__size_;
      }
      p_std::string buf = &buf;
      if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      {
        std::string::size_type v21 = HIBYTE(buf.__r_.__value_.__r.__words[2]);
      }
      else
      {
        std::string::size_type v21 = buf.__r_.__value_.__l.__size_;
        p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
      }
      uint64_t v107 = v16;
      if (size && v21)
      {
        std::string::size_type v22 = size - 1;
        std::string::size_type v23 = v21 - 1;
        char v24 = (unsigned __int8 *)v18;
        do
        {
          if (*v24 != p_buf->__r_.__value_.__s.__data_[0]) {
            break;
          }
          ++v24;
          if (!v22) {
            break;
          }
          p_std::string buf = (std::string *)((char *)p_buf + 1);
          --v22;
        }
        while (v23--);
      }
      else
      {
        char v24 = (unsigned __int8 *)v18;
      }
      if (SHIBYTE(v110.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v110.__r_.__value_.__l.__data_);
      }
      if (v24 == (unsigned __int8 *)(v18 + size))
      {
        std::string::size_type v28 = HIBYTE(buf.__r_.__value_.__r.__words[2]);
        if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v28 = buf.__r_.__value_.__l.__size_;
        }
        std::string::basic_string(&v110, &buf, 5uLL, v28 - 5, (std::allocator<char> *)&v116);
        if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(buf.__r_.__value_.__l.__data_);
        }
        std::string buf = v110;
      }
      uint64_t v29 = v113;
      int v30 = (unint64_t *)(a1 + 64);
      unint64_t v31 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 64, (uint64_t)&buf);
      std::string::size_type v32 = v31;
      unint64_t v33 = *(void *)(a1 + 48);
      if (!v33) {
        goto LABEL_65;
      }
      uint64_t v105 = v29;
      uint8x8_t v34 = (uint8x8_t)vcnt_s8((int8x8_t)v33);
      v34.i16[0] = vaddlv_u8(v34);
      unint64_t v35 = v34.u32[0];
      if (v34.u32[0] > 1uLL)
      {
        std::string::size_type v18 = v31;
        if (v31 >= v33) {
          std::string::size_type v18 = v31 % v33;
        }
      }
      else
      {
        std::string::size_type v18 = (v33 - 1) & v31;
      }
      int v36 = (void **)*((void *)*v8 + v18);
      if (v36)
      {
        BOOL v37 = (char *)*v36;
        if (*v36)
        {
          while (1)
          {
            unint64_t v38 = *((void *)v37 + 1);
            if (v38 == v32)
            {
              if (std::equal_to<std::string>::operator()[abi:ne180100]((uint64_t)v109, (unsigned __int8 *)v37 + 16, (unsigned __int8 *)&buf))
              {
                uint64_t v29 = v105;
LABEL_124:
                *((void *)v37 + 5) = v29;
                unint64_t v60 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)v108, (uint64_t)&buf);
                std::string::size_type v61 = v60;
                unint64_t v62 = *(void *)(a1 + 88);
                if (v62)
                {
                  uint8x8_t v63 = (uint8x8_t)vcnt_s8((int8x8_t)v62);
                  v63.i16[0] = vaddlv_u8(v63);
                  unint64_t v64 = v63.u32[0];
                  if (v63.u32[0] > 1uLL)
                  {
                    std::string::size_type v18 = v60;
                    if (v60 >= v62) {
                      std::string::size_type v18 = v60 % v62;
                    }
                  }
                  else
                  {
                    std::string::size_type v18 = (v62 - 1) & v60;
                  }
                  uint64_t v65 = (void **)*((void *)*v9 + v18);
                  if (v65)
                  {
                    unint64_t v66 = (char *)*v65;
                    if (*v65)
                    {
                      while (2)
                      {
                        unint64_t v67 = *((void *)v66 + 1);
                        if (v67 != v61)
                        {
                          if (v64 > 1)
                          {
                            if (v67 >= v62) {
                              v67 %= v62;
                            }
                          }
                          else
                          {
                            v67 &= v62 - 1;
                          }
                          if (v67 != v18) {
                            goto LABEL_140;
                          }
LABEL_139:
                          unint64_t v66 = *(char **)v66;
                          if (!v66) {
                            goto LABEL_140;
                          }
                          continue;
                        }
                        break;
                      }
                      if ((std::equal_to<std::string>::operator()[abi:ne180100](a1 + 112, (unsigned __int8 *)v66 + 16, (unsigned __int8 *)&buf) & 1) == 0)goto LABEL_139; {
                      id v6 = v106;
                      }
LABEL_199:
                      *((void *)v66 + 5) = v107;
                      if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
                        operator delete(buf.__r_.__value_.__l.__data_);
                      }
                      goto LABEL_16;
                    }
                  }
                }
LABEL_140:
                unint64_t v66 = (char *)operator new(0x30uLL);
                *(void *)unint64_t v66 = 0;
                *((void *)v66 + 1) = v61;
                char v68 = (std::string *)(v66 + 16);
                if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
                {
                  std::string::__init_copy_ctor_external(v68, buf.__r_.__value_.__l.__data_, buf.__r_.__value_.__l.__size_);
                }
                else
                {
                  *(_OWORD *)&v68->__r_.__value_.__l.__data_ = *(_OWORD *)&buf.__r_.__value_.__l.__data_;
                  *((void *)v66 + 4) = *((void *)&buf.__r_.__value_.__l + 2);
                }
                *((void *)v66 + 5) = 0;
                float v69 = (float)(*v108 + 1);
                float v70 = *v7;
                if (!v62 || (float)(v70 * (float)v62) < v69)
                {
                  BOOL v71 = (v62 & (v62 - 1)) != 0;
                  if (v62 < 3) {
                    BOOL v71 = 1;
                  }
                  unint64_t v72 = v71 | (2 * v62);
                  unint64_t v73 = vcvtps_u32_f32(v69 / v70);
                  if (v72 <= v73) {
                    int8x8_t prime = (int8x8_t)v73;
                  }
                  else {
                    int8x8_t prime = (int8x8_t)v72;
                  }
                  if (*(void *)&prime == 1)
                  {
                    int8x8_t prime = (int8x8_t)2;
                  }
                  else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
                  {
                    int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
                  }
                  unint64_t v62 = *(void *)(a1 + 88);
                  if (*(void *)&prime <= v62)
                  {
                    if (*(void *)&prime < v62)
                    {
                      unint64_t v81 = vcvtps_u32_f32((float)*v108 / *v7);
                      if (v62 < 3
                        || (uint8x8_t v82 = (uint8x8_t)vcnt_s8((int8x8_t)v62), v82.i16[0] = vaddlv_u8(v82), v82.u32[0] > 1uLL))
                      {
                        unint64_t v81 = std::__next_prime(v81);
                      }
                      else
                      {
                        uint64_t v83 = 1 << -(char)__clz(v81 - 1);
                        if (v81 >= 2) {
                          unint64_t v81 = v83;
                        }
                      }
                      if (*(void *)&prime <= v81) {
                        int8x8_t prime = (int8x8_t)v81;
                      }
                      if (*(void *)&prime >= v62)
                      {
                        unint64_t v62 = *(void *)(a1 + 88);
                      }
                      else
                      {
                        if (prime) {
                          goto LABEL_155;
                        }
                        uint64_t v90 = *v9;
                        *id v9 = 0;
                        if (v90) {
                          operator delete(v90);
                        }
                        unint64_t v62 = 0;
                        *(void *)(a1 + 88) = 0;
                      }
                    }
                  }
                  else
                  {
LABEL_155:
                    if (*(void *)&prime >> 61) {
                      std::__throw_bad_array_new_length[abi:ne180100]();
                    }
                    unsigned int v75 = operator new(8 * *(void *)&prime);
                    uint64_t v76 = *v9;
                    *id v9 = v75;
                    if (v76) {
                      operator delete(v76);
                    }
                    uint64_t v77 = 0;
                    *(int8x8_t *)(a1 + 88) = prime;
                    do
                      *((void *)*v9 + v77++) = 0;
                    while (*(void *)&prime != v77);
                    unint64_t v78 = (void *)*v103;
                    if (*v103)
                    {
                      unint64_t v79 = v78[1];
                      uint8x8_t v80 = (uint8x8_t)vcnt_s8(prime);
                      v80.i16[0] = vaddlv_u8(v80);
                      if (v80.u32[0] > 1uLL)
                      {
                        if (v79 >= *(void *)&prime) {
                          v79 %= *(void *)&prime;
                        }
                      }
                      else
                      {
                        v79 &= *(void *)&prime - 1;
                      }
                      *((void *)*v9 + v79) = v103;
                      unsigned int v84 = (void *)*v78;
                      if (*v78)
                      {
                        do
                        {
                          unint64_t v85 = v84[1];
                          if (v80.u32[0] > 1uLL)
                          {
                            if (v85 >= *(void *)&prime) {
                              v85 %= *(void *)&prime;
                            }
                          }
                          else
                          {
                            v85 &= *(void *)&prime - 1;
                          }
                          if (v85 != v79)
                          {
                            if (!*((void *)*v9 + v85))
                            {
                              *((void *)*v9 + v85) = v78;
                              goto LABEL_180;
                            }
                            *unint64_t v78 = *v84;
                            *unsigned int v84 = **((void **)*v9 + v85);
                            **((void **)*v9 + v85) = v84;
                            unsigned int v84 = v78;
                          }
                          unint64_t v85 = v79;
LABEL_180:
                          unint64_t v78 = v84;
                          unsigned int v84 = (void *)*v84;
                          unint64_t v79 = v85;
                        }
                        while (v84);
                      }
                    }
                    unint64_t v62 = (unint64_t)prime;
                  }
                  if ((v62 & (v62 - 1)) != 0)
                  {
                    if (v61 >= v62) {
                      std::string::size_type v18 = v61 % v62;
                    }
                    else {
                      std::string::size_type v18 = v61;
                    }
                  }
                  else
                  {
                    std::string::size_type v18 = (v62 - 1) & v61;
                  }
                }
                uint64_t v86 = *v9;
                uint64_t v87 = (void *)*((void *)*v9 + v18);
                if (v87)
                {
                  *(void *)unint64_t v66 = *v87;
                  id v6 = v106;
                  goto LABEL_197;
                }
                *(void *)unint64_t v66 = *v103;
                *int v103 = v66;
                v86[v18] = v103;
                id v6 = v106;
                if (*(void *)v66)
                {
                  unint64_t v88 = *(void *)(*(void *)v66 + 8);
                  if ((v62 & (v62 - 1)) != 0)
                  {
                    if (v88 >= v62) {
                      v88 %= v62;
                    }
                  }
                  else
                  {
                    v88 &= v62 - 1;
                  }
                  uint64_t v87 = (char *)*v9 + 8 * v88;
LABEL_197:
                  *uint64_t v87 = v66;
                }
                ++*v108;
                goto LABEL_199;
              }
            }
            else
            {
              if (v35 > 1)
              {
                if (v38 >= v33) {
                  v38 %= v33;
                }
              }
              else
              {
                v38 &= v33 - 1;
              }
              if (v38 != v18)
              {
LABEL_63:
                int v30 = (unint64_t *)(a1 + 64);
                break;
              }
            }
            BOOL v37 = *(char **)v37;
            if (!v37) {
              goto LABEL_63;
            }
          }
        }
      }
      uint64_t v29 = v105;
LABEL_65:
      BOOL v37 = (char *)operator new(0x30uLL);
      *(void *)BOOL v37 = 0;
      *((void *)v37 + 1) = v32;
      uint64_t v39 = (std::string *)(v37 + 16);
      if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
      {
        std::string::__init_copy_ctor_external(v39, buf.__r_.__value_.__l.__data_, buf.__r_.__value_.__l.__size_);
      }
      else
      {
        *(_OWORD *)&v39->__r_.__value_.__l.__data_ = *(_OWORD *)&buf.__r_.__value_.__l.__data_;
        *((void *)v37 + 4) = *((void *)&buf.__r_.__value_.__l + 2);
      }
      *((void *)v37 + 5) = 0;
      float v40 = (float)(*v30 + 1);
      float v41 = *v109;
      if (!v33 || (float)(v41 * (float)v33) < v40)
      {
        BOOL v42 = (v33 & (v33 - 1)) != 0;
        if (v33 < 3) {
          BOOL v42 = 1;
        }
        unint64_t v43 = v42 | (2 * v33);
        unint64_t v44 = vcvtps_u32_f32(v40 / v41);
        if (v43 <= v44) {
          int8x8_t v45 = (int8x8_t)v44;
        }
        else {
          int8x8_t v45 = (int8x8_t)v43;
        }
        if (*(void *)&v45 == 1)
        {
          int8x8_t v45 = (int8x8_t)2;
        }
        else if ((*(void *)&v45 & (*(void *)&v45 - 1)) != 0)
        {
          int8x8_t v45 = (int8x8_t)std::__next_prime(*(void *)&v45);
        }
        unint64_t v33 = *(void *)(a1 + 48);
        if (*(void *)&v45 <= v33)
        {
          if (*(void *)&v45 < v33)
          {
            unint64_t v52 = vcvtps_u32_f32((float)*v30 / *v109);
            if (v33 < 3 || (uint8x8_t v53 = (uint8x8_t)vcnt_s8((int8x8_t)v33), v53.i16[0] = vaddlv_u8(v53), v53.u32[0] > 1uLL))
            {
              unint64_t v52 = std::__next_prime(v52);
            }
            else
            {
              uint64_t v54 = 1 << -(char)__clz(v52 - 1);
              if (v52 >= 2) {
                unint64_t v52 = v54;
              }
            }
            if (*(void *)&v45 <= v52) {
              int8x8_t v45 = (int8x8_t)v52;
            }
            if (*(void *)&v45 >= v33)
            {
              unint64_t v33 = *(void *)(a1 + 48);
            }
            else
            {
              if (v45) {
                goto LABEL_80;
              }
              char v89 = *v8;
              *uint64_t v8 = 0;
              if (v89) {
                operator delete(v89);
              }
              unint64_t v33 = 0;
              *(void *)(a1 + 48) = 0;
            }
          }
        }
        else
        {
LABEL_80:
          if (*(void *)&v45 >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          unint64_t v46 = operator new(8 * *(void *)&v45);
          char v47 = *v8;
          *uint64_t v8 = v46;
          if (v47) {
            operator delete(v47);
          }
          uint64_t v48 = 0;
          *(int8x8_t *)(a1 + 48) = v45;
          do
            *((void *)*v8 + v48++) = 0;
          while (*(void *)&v45 != v48);
          unsigned int v49 = (void *)*v104;
          if (*v104)
          {
            unint64_t v50 = v49[1];
            uint8x8_t v51 = (uint8x8_t)vcnt_s8(v45);
            v51.i16[0] = vaddlv_u8(v51);
            if (v51.u32[0] > 1uLL)
            {
              if (v50 >= *(void *)&v45) {
                v50 %= *(void *)&v45;
              }
            }
            else
            {
              v50 &= *(void *)&v45 - 1;
            }
            *((void *)*v8 + v50) = v104;
            unsigned int v55 = (void *)*v49;
            if (*v49)
            {
              do
              {
                unint64_t v56 = v55[1];
                if (v51.u32[0] > 1uLL)
                {
                  if (v56 >= *(void *)&v45) {
                    v56 %= *(void *)&v45;
                  }
                }
                else
                {
                  v56 &= *(void *)&v45 - 1;
                }
                if (v56 != v50)
                {
                  if (!*((void *)*v8 + v56))
                  {
                    *((void *)*v8 + v56) = v49;
                    goto LABEL_105;
                  }
                  void *v49 = *v55;
                  *unsigned int v55 = **((void **)*v8 + v56);
                  **((void **)*v8 + v56) = v55;
                  unsigned int v55 = v49;
                }
                unint64_t v56 = v50;
LABEL_105:
                unsigned int v49 = v55;
                unsigned int v55 = (void *)*v55;
                unint64_t v50 = v56;
              }
              while (v55);
            }
          }
          unint64_t v33 = (unint64_t)v45;
        }
        if ((v33 & (v33 - 1)) != 0)
        {
          if (v32 >= v33) {
            std::string::size_type v18 = v32 % v33;
          }
          else {
            std::string::size_type v18 = v32;
          }
        }
        else
        {
          std::string::size_type v18 = (v33 - 1) & v32;
        }
      }
      uint64_t v57 = *v8;
      unint64_t v58 = (void *)*((void *)*v8 + v18);
      if (v58)
      {
        *(void *)BOOL v37 = *v58;
      }
      else
      {
        *(void *)BOOL v37 = *v104;
        *__int16 v104 = v37;
        v57[v18] = v104;
        if (!*(void *)v37)
        {
LABEL_123:
          ++*v30;
          goto LABEL_124;
        }
        unint64_t v59 = *(void *)(*(void *)v37 + 8);
        if ((v33 & (v33 - 1)) != 0)
        {
          if (v59 >= v33) {
            v59 %= v33;
          }
        }
        else
        {
          v59 &= v33 - 1;
        }
        unint64_t v58 = (char *)*v8 + 8 * v59;
      }
      void *v58 = v37;
      goto LABEL_123;
    }
    break;
  }
  if (next_header != 1)
  {
    uint64_t v91 = archive_error_string();
    char v92 = *(NSObject **)(a1 + 16);
    if (os_log_type_enabled(v92, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v91;
      _os_log_error_impl(&dword_188D96000, v92, OS_LOG_TYPE_ERROR, "[TarFile] Failed to archive_read_next_header(): %s", (uint8_t *)&buf, 0xCu);
    }
  }
  archive_read_close();
  archive_read_free();
LABEL_223:

  return a1;
}

void sub_189369378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::~__hash_table(v18);
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::~__hash_table(v17);

  _Unwind_Resume(a1);
}

void geo::DbReaderTarFileDescriptor::~DbReaderTarFileDescriptor(geo::DbReaderTarFileDescriptor *this)
{
  *(void *)this = &unk_1ED513A10;
  int v2 = (void *)*((void *)this + 3);
  if (v2)
  {
    size_t v3 = *((void *)this + 4);
    if (v3) {
      munmap(v2, v3);
    }
  }
  int v4 = *((_DWORD *)this + 2);
  if ((v4 & 0x80000000) == 0) {
    close(v4);
  }
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::~__hash_table((uint64_t)this + 80);
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::~__hash_table((uint64_t)this + 40);
}

{
  uint64_t vars8;

  geo::DbReaderTarFileDescriptor::~DbReaderTarFileDescriptor(this);

  JUMPOUT(0x18C11F580);
}

void geo::DbReaderTarFileDescriptor::absolutePath(uint64_t a1@<X1>, std::string *a2@<X8>)
{
  if (*(char *)(a1 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    a2->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
  }
}

BOOL geo::DbReaderTarFileDescriptor::pathExists(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a2 + 23);
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *(void *)(a2 + 8);
  }
  if (v2) {
    size_t v3 = std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((void *)(a1 + 40), (unsigned __int8 *)a2);
  }
  else {
    size_t v3 = *(unsigned __int8 **)(a1 + 64);
  }
  return v3 != 0;
}

uint64_t geo::DbReaderTarFileDescriptor::listFiles@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  if (!*(void *)(a1 + 64))
  {
    v29[0] = 1;
    int v30 = 0;
    unint64_t v31 = "";
    uint64_t v32 = 0;
    std::string::size_type v21 = v29;
LABEL_32:
    uint64_t v22 = a4;
    int v23 = 1;
    return gloria::Status::Status(v22, v23, (uint64_t)v21);
  }
  id v5 = *(uint64_t **)(a1 + 56);
  if (!v5) {
    goto LABEL_31;
  }
  int v8 = 0;
  do
  {
    id v9 = (long long *)(v5 + 2);
    double v10 = (unsigned __int8 *)v5[2];
    uint64_t v11 = a2[23];
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = a2;
    }
    else {
      uint64_t v12 = *(unsigned __int8 **)a2;
    }
    if ((v11 & 0x80u) != 0) {
      uint64_t v11 = *((void *)a2 + 1);
    }
    uint64_t v13 = *((unsigned __int8 *)v5 + 39);
    if ((v13 & 0x80u) != 0) {
      uint64_t v13 = v5[3];
    }
    else {
      double v10 = (unsigned __int8 *)(v5 + 2);
    }
    if (v11) {
      BOOL v14 = v13 == 0;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14)
    {
      long long v19 = v12;
    }
    else
    {
      uint64_t v17 = v11 - 1;
      uint64_t v18 = v13 - 1;
      long long v19 = v12;
      do
      {
        if (*v19 != *v10) {
          break;
        }
        ++v19;
        if (!v17) {
          break;
        }
        ++v10;
        --v17;
      }
      while (v18--);
    }
    if (v19 == &v12[v11])
    {
      unint64_t v15 = a3[1];
      if (v15 >= a3[2])
      {
        uint64_t v16 = std::vector<std::string>::__push_back_slow_path<std::string const&>(a3, v9);
      }
      else
      {
        std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)a3, v9);
        uint64_t v16 = v15 + 24;
      }
      a3[1] = v16;
      ++v8;
    }
    id v5 = (uint64_t *)*v5;
  }
  while (v5);
  if (v8 <= 0)
  {
LABEL_31:
    char v25 = 1;
    int v26 = 0;
    BOOL v27 = "";
    uint64_t v28 = 0;
    std::string::size_type v21 = &v25;
    goto LABEL_32;
  }
  v29[0] = 1;
  int v30 = 0;
  unint64_t v31 = "";
  uint64_t v32 = 0;
  std::string::size_type v21 = v29;
  uint64_t v22 = a4;
  int v23 = 0;
  return gloria::Status::Status(v22, v23, (uint64_t)v21);
}

uint64_t geo::DbReaderTarFileDescriptor::createMemoryBuffer@<X0>(void *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t (****a3)(void)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7 = std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>(a1 + 5, a2);
  unint64_t v8 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)(a1 + 13), (uint64_t)a2);
  int8x8_t v9 = (int8x8_t)a1[11];
  if (v9)
  {
    unint64_t v10 = v8;
    uint8x8_t v11 = (uint8x8_t)vcnt_s8(v9);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v13 = v8;
      if (v8 >= *(void *)&v9) {
        unint64_t v13 = v8 % *(void *)&v9;
      }
    }
    else
    {
      unint64_t v13 = (*(void *)&v9 - 1) & v8;
    }
    BOOL v14 = *(unsigned __int8 ***)(a1[10] + 8 * v13);
    if (v14)
    {
      unint64_t v15 = *v14;
      if (*v14)
      {
        uint64_t v16 = (uint64_t)(a1 + 14);
        do
        {
          unint64_t v17 = *((void *)v15 + 1);
          if (v10 == v17)
          {
            if (std::equal_to<std::string>::operator()[abi:ne180100](v16, v15 + 16, a2))
            {
              if (v7)
              {
                int v23 = 0;
                uint64_t v24 = 0;
                int v25 = -1;
                uint64_t v27 = 0;
                uint64_t v28 = 0;
                __p = 0;
                uint64_t v22 = *((void *)v7 + 5);
                uint64_t v19 = (***a3)();
                uint64_t v20 = *((void *)v15 + 5);
                int v23 = (const char *)v19;
                uint64_t v24 = v20;
                operator new();
              }
              break;
            }
          }
          else
          {
            if (v12 > 1)
            {
              if (v17 >= *(void *)&v9) {
                v17 %= *(void *)&v9;
              }
            }
            else
            {
              v17 &= *(void *)&v9 - 1;
            }
            if (v17 != v13) {
              break;
            }
          }
          unint64_t v15 = *(unsigned __int8 **)v15;
        }
        while (v15);
      }
    }
  }
  LOBYTE(v22) = 1;
  HIDWORD(v22) = 0;
  int v23 = "";
  uint64_t v24 = 0;
  return gloria::Status::Status(a4, 1, (uint64_t)&v22);
}

void sub_189369968(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string::size_type geo::GloriaDB::QuadKey::ReadFrom(uint64_t a1, std::string *this)
{
  return std::string::copy(this, (std::string::value_type *)(a1 + 8), 8uLL, 0);
}

std::string *geo::GloriaDB::QuadKey::WriteTo(uint64_t a1, std::string *this)
{
  return std::string::replace(this, 0, 8uLL, (const std::string::value_type *)(a1 + 8));
}

void geo::GloriaDB::QuadKey::clone(geo::GloriaDB::QuadKey *this)
{
}

void geo::TarBuffer::Read(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, _DWORD *a5@<X8>)
{
  uint64_t v8 = *a2;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  gloria::MemoryDescriptor::CheckBounds((gloria::MemoryDescriptor *)(a1 + 8), *a2, *a3, (uint64_t)a5);
  if (*a5)
  {
    uint64_t v11 = 0;
    *(unsigned char *)(a4 + 3) = 0;
    *(_WORD *)(a4 + 1) = 0;
    unint64_t v12 = "";
  }
  else
  {
    unint64_t v12 = (const char *)(v9 + v10 + v8);
    uint64_t v11 = *a3;
  }
  *(unsigned char *)a4 = 1;
  *(_DWORD *)(a4 + 4) = 0;
  *(void *)(a4 + 8) = v12;
  *(void *)(a4 + 16) = v11;
}

void geo::TarBuffer::~TarBuffer(void **this)
{
  *this = &unk_1ED514478;
  if (*((char *)this + 63) < 0) {
    operator delete(this[5]);
  }
}

{
  uint64_t vars8;

  *this = &unk_1ED514478;
  if (*((char *)this + 63) < 0) {
    operator delete(this[5]);
  }

  JUMPOUT(0x18C11F580);
}

uint64_t geo::TarBuffer::Close@<X0>(uint64_t a1@<X8>)
{
  v3[0] = 1;
  int v4 = 0;
  id v5 = "";
  uint64_t v6 = 0;
  return gloria::Status::Status(a1, 0, (uint64_t)v3);
}

void std::__shared_ptr_pointer<geo::GloriaDB::QuadKey *,std::shared_ptr<gloria::RecordAttribute>::__shared_ptr_default_delete<gloria::RecordAttribute,geo::GloriaDB::QuadKey>,std::allocator<geo::GloriaDB::QuadKey>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x18C11F580);
}

uint64_t std::__shared_ptr_pointer<geo::GloriaDB::QuadKey *,std::shared_ptr<gloria::RecordAttribute>::__shared_ptr_default_delete<gloria::RecordAttribute,geo::GloriaDB::QuadKey>,std::allocator<geo::GloriaDB::QuadKey>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void std::__shared_ptr_emplace<geo::DbReaderTarFileDescriptor>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1ED5187B8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<geo::DbReaderTarFileDescriptor>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1ED5187B8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x18C11F580);
}

uint64_t std::__shared_ptr_emplace<geo::DbReaderTarFileDescriptor>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_18936A0D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18936A298(_Unwind_Exception *a1)
{
}

void sub_18936A318(_Unwind_Exception *a1)
{
}

void sub_18936A434(_Unwind_Exception *a1)
{
}

void sub_18936A5C8(_Unwind_Exception *a1)
{
}

void sub_18936A64C(_Unwind_Exception *a1)
{
}

BOOL GEOPDSearchKey64Value32PairReadAllFrom(uint64_t a1, void *a2)
{
  size_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (1)
          {
            uint64_t v28 = *v4;
            uint64_t v29 = *(void *)&v3[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&v3[*v5]) {
              break;
            }
            char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
            *(void *)&v3[v28] = v30;
            v27 |= (unint64_t)(v31 & 0x7F) << v25;
            if ((v31 & 0x80) == 0) {
              goto LABEL_42;
            }
            v25 += 7;
            BOOL v15 = v26++ >= 9;
            if (v15)
            {
              LODWORD(v27) = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v27) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + 16) = v27;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_38;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_40;
            }
          }
          v3[*v6] = 1;
LABEL_38:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_40:
          *(void *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_47;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v32 = v3[*v6] == 0;
  }
  else
  {
LABEL_47:
    BOOL v32 = 0;
  }
  objc_sync_exit(v3);

  return v32;
}

void sub_18936D688(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18936DDAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKey64Value64PairReadAllFrom(uint64_t a1, void *a2)
{
  size_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              unsigned int v26 = &OBJC_IVAR___GEOPDSearchKey64Value64Pair__value;
              goto LABEL_40;
            }
            v27 += 7;
            BOOL v25 = v28++ > 8;
            if (v25)
            {
              uint64_t v20 = 0;
              unsigned int v26 = &OBJC_IVAR___GEOPDSearchKey64Value64Pair__value;
              goto LABEL_42;
            }
          }
          unsigned int v26 = &OBJC_IVAR___GEOPDSearchKey64Value64Pair__value;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_48;
            }
            continue;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              unsigned int v26 = &OBJC_IVAR___GEOPDSearchKey64Value64Pair__key;
              goto LABEL_39;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              uint64_t v20 = 0;
              unsigned int v26 = &OBJC_IVAR___GEOPDSearchKey64Value64Pair__key;
              goto LABEL_42;
            }
          }
          unsigned int v26 = &OBJC_IVAR___GEOPDSearchKey64Value64Pair__key;
        }
LABEL_40:
        if (v3[*v6]) {
          uint64_t v20 = 0;
        }
LABEL_42:
        *(void *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    BOOL v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_18936E520(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18936EC44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKey64ValueBoolPairReadAllFrom(uint64_t a1, void *a2)
{
  size_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (1)
          {
            uint64_t v28 = *v4;
            uint64_t v29 = *(void *)&v3[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&v3[*v5]) {
              break;
            }
            char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
            *(void *)&v3[v28] = v30;
            v27 |= (unint64_t)(v31 & 0x7F) << v25;
            if ((v31 & 0x80) == 0) {
              goto LABEL_42;
            }
            v25 += 7;
            BOOL v15 = v26++ >= 9;
            if (v15)
            {
              uint64_t v27 = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6]) {
            uint64_t v27 = 0;
          }
LABEL_44:
          *(unsigned char *)(a1 + 16) = v27 != 0;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_38;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_40;
            }
          }
          v3[*v6] = 1;
LABEL_38:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_40:
          *(void *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_47;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v32 = v3[*v6] == 0;
  }
  else
  {
LABEL_47:
    BOOL v32 = 0;
  }
  objc_sync_exit(v3);

  return v32;
}

void sub_18936F3B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18936FAE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189370608(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKey64ValuePairReadAllFrom(uint64_t a1, void *a2)
{
  size_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          uint64_t v25 = PBReaderReadString();
          unsigned int v26 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_34:
          *(void *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189370C04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189371344(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKeyDoubleValue64PairReadAllFrom(uint64_t a1, void *a2)
{
  size_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v24 = *v4;
            uint64_t v25 = *(void *)&v3[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&v3[*v5]) {
              break;
            }
            char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v25);
            *(void *)&v3[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0) {
              goto LABEL_34;
            }
            v21 += 7;
            BOOL v15 = v22++ >= 9;
            if (v15)
            {
              uint64_t v23 = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            uint64_t v23 = 0;
          }
LABEL_36:
          *(void *)(a1 + 16) = v23;
        }
        else if ((v10 >> 3) == 1)
        {
          *(unsigned char *)(a1 + 24) |= 1u;
          uint64_t v18 = *v4;
          unint64_t v19 = *(void *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
            *(void *)&v3[v18] = v19 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v20 = 0;
          }
          *(void *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_41;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v28 = v3[*v6] == 0;
  }
  else
  {
LABEL_41:
    BOOL v28 = 0;
  }
  objc_sync_exit(v3);

  return v28;
}

void sub_189371A70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189372214(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKeyDoubleValueDoublePairReadAllFrom(uint64_t a1, void *a2)
{
  size_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          *(unsigned char *)(a1 + 24) |= 2u;
          uint64_t v21 = *v4;
          unint64_t v22 = *(void *)&v3[v21];
          if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v22 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v20 = 0;
          }
          uint64_t v23 = &OBJC_IVAR___GEOPDSearchKeyDoubleValueDoublePair__value;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_36;
            }
            continue;
          }
          *(unsigned char *)(a1 + 24) |= 1u;
          uint64_t v18 = *v4;
          unint64_t v19 = *(void *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
            *(void *)&v3[v18] = v19 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v20 = 0;
          }
          uint64_t v23 = &OBJC_IVAR___GEOPDSearchKeyDoubleValueDoublePair__key;
        }
        *(void *)(a1 + *v23) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v24 = v3[*v6] == 0;
  }
  else
  {
LABEL_36:
    BOOL v24 = 0;
  }
  objc_sync_exit(v3);

  return v24;
}

void sub_18937290C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189373104(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKeyValue32PairReadAllFrom(uint64_t a1, void *a2)
{
  size_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_32;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v22) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          unint64_t v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1893737BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189373F0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKeyValue64PairReadAllFrom(uint64_t a1, void *a2)
{
  size_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_32;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              uint64_t v22 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v22 = 0;
          }
LABEL_34:
          *(void *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          unint64_t v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1893745C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189374D14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKeyValueBoolPairReadAllFrom(uint64_t a1, void *a2)
{
  size_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_32;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              uint64_t v22 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v22 = 0;
          }
LABEL_34:
          *(unsigned char *)(a1 + 16) = v22 != 0;
        }
        else if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          unint64_t v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1893753D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189375B2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchKeyValueBytesPairReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    char v14 = 0;
  }
  else {
    char v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  int v16 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v17 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_62;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_62:
      if (v13)
      {
        char v41 = 1;
        goto LABEL_72;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            int v43 = *v14++;
            int v42 = v43;
            if (v43 != 1 && v42 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_73;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v15)
    {
      char v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 != 2)
    {
      if (v29 != 1)
      {
        int v38 = PBReaderSkipValueWithTag();
        unint64_t v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v38) {
          goto LABEL_70;
        }
        goto LABEL_58;
      }
      if (v30)
      {
        if ((*(unsigned char *)(a1 + 44) & 1) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 16;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_71;
        }
        v9 -= *(unsigned char *)(a1 + 44) & 1;
LABEL_57:
        unint64_t v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_58:
        if (v9) {
          char v40 = 1;
        }
        else {
          char v40 = v13;
        }
        if ((v40 & 1) == 0) {
          goto LABEL_62;
        }
        continue;
      }
LABEL_51:
      char v39 = PBReaderSkipValueWithTag();
      unint64_t v17 = (int *)MEMORY[0x1E4F940C8];
      if ((v39 & 1) == 0)
      {
LABEL_70:
        char v41 = 0;
        goto LABEL_72;
      }
      goto LABEL_58;
    }
    break;
  }
  if (!v30) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) == 0)
  {
    uint64_t v35 = PBReaderReadData();
    uint64_t v36 = 24;
LABEL_48:
    BOOL v37 = *(void **)(a1 + v36);
    *(void *)(a1 + v36) = v35;

    unint64_t v17 = (int *)MEMORY[0x1E4F940C8];
    --v9;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_57;
  }
LABEL_71:
  char v41 = 0;
  unint64_t v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v41)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if (!v13) {
      return v3;
    }
    goto LABEL_74;
  }
  unint64_t v3 = 0;
  if (v13)
  {
LABEL_74:
    unint64_t v44 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18937652C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937660C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchKeyValueBytesPairReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchKeyValueBytesPairReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 32) = [v6 position];
      *(_DWORD *)(a1 + 36) = [v6 length];
      unint64_t Specified = GEOPDSearchKeyValueBytesPairReadSpecified(a1, (unint64_t)v6, (int *)&GEOPDSearchKeyValueBytesPairReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)char v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189376788(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937690C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189376A64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893770C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKeyValueDoublePairReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          *(unsigned char *)(a1 + 24) |= 1u;
          uint64_t v20 = *v4;
          unint64_t v21 = *(void *)&v3[v20];
          if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v22 = *(void *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v22 = 0;
          }
          *(void *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          char v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_31;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_31:
    BOOL v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_189377610(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKeyValueDoublePairIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v16 != 1) {
          goto LABEL_33;
        }
        uint64_t v18 = *v2;
        unint64_t v19 = *(void *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v20 = v19 + 8, v20 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v18] = v20;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if (v16 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_33:
          BOOL v21 = 0;
          goto LABEL_32;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_33;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

void sub_189377FB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKeyValueFloatPairReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          *(unsigned char *)(a1 + 20) |= 1u;
          uint64_t v20 = *v4;
          unint64_t v21 = *(void *)&v3[v20];
          if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)&v3[*v5])
          {
            int v22 = *(_DWORD *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v22 = 0;
          }
          *(_DWORD *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          unint64_t v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_31;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_31:
    BOOL v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_189378754(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKeyValueFloatPairIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v16 != 5) {
          goto LABEL_33;
        }
        uint64_t v18 = *v2;
        unint64_t v19 = *(void *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v20 = v19 + 4, v20 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v18] = v20;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if (v16 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_33:
          BOOL v21 = 0;
          goto LABEL_32;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_33;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

unint64_t GEOPDSearchKeyValuePairReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = a3;
  }
  int v15 = (int *)MEMORY[0x1E4F940E8];
  int v16 = (int *)MEMORY[0x1E4F940C8];
  if (v12) {
    BOOL v17 = 1;
  }
  else {
    BOOL v17 = v14 == 0;
  }
  uint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v16)) {
      goto LABEL_62;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v15;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v16) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v16);
    if (*(unsigned char *)(v3 + *v16)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_62:
      if (v13)
      {
        char v41 = 1;
        goto LABEL_72;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            int v43 = *v14++;
            int v42 = v43;
            if (v43 != 1 && v42 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_73;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v17)
    {
      char v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 != 2)
    {
      if (v29 != 1)
      {
        int v38 = PBReaderSkipValueWithTag();
        int v16 = (int *)MEMORY[0x1E4F940C8];
        if (!v38) {
          goto LABEL_70;
        }
        goto LABEL_58;
      }
      if (v30)
      {
        if ((*(unsigned char *)(a1 + 44) & 1) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 16;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_71;
        }
        v9 -= *(unsigned char *)(a1 + 44) & 1;
LABEL_57:
        int v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_58:
        if (v9) {
          char v40 = 1;
        }
        else {
          char v40 = v13;
        }
        if ((v40 & 1) == 0) {
          goto LABEL_62;
        }
        continue;
      }
LABEL_51:
      char v39 = PBReaderSkipValueWithTag();
      int v16 = (int *)MEMORY[0x1E4F940C8];
      if ((v39 & 1) == 0)
      {
LABEL_70:
        char v41 = 0;
        goto LABEL_72;
      }
      goto LABEL_58;
    }
    break;
  }
  if (!v30) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) == 0)
  {
    uint64_t v35 = PBReaderReadString();
    uint64_t v36 = 24;
LABEL_48:
    BOOL v37 = *(void **)(a1 + v36);
    *(void *)(a1 + v36) = v35;

    int v16 = (int *)MEMORY[0x1E4F940C8];
    --v9;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_57;
  }
LABEL_71:
  char v41 = 0;
  int v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v41)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v16) == 0;
    if (!v13) {
      return v3;
    }
    goto LABEL_74;
  }
  unint64_t v3 = 0;
  if (v13)
  {
LABEL_74:
    unint64_t v44 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1893792F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893793D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchKeyValuePairReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchKeyValuePairReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchKeyValuePairReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchKeyValuePairReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchKeyValuePairReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1893796D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKeyValuePairIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v15 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

void sub_189379A1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKeyValuePairIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189379BF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKeyValuePairListReadAllFrom(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          unsigned int v20 = objc_alloc_init(GEOPDSearchKeyValuePair);
          if (!GEOPDSearchKeyValuePairReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          -[GEOPDSearchKeyValuePairList addPairs:](a1, v20);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v21 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v21 = 0;
  }
  objc_sync_exit(v5);

  return v21;
}

void sub_18937A40C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKeyValuePairListIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchKeyValuePairIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_18937AAF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18937B5B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unint64_t GEOPDFeatureBuildingReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v52 = v17;
        char v53 = v18 | v17;
        if ((v18 | v8)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        char v54 = (v19 == 0) | v18;
        BOOL v55 = v18;
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_72;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      unint64_t v27 = *(void *)(v3 + v26);
      if (v27 == -1 || v27 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v27 + 1;
      v25 |= (unint64_t)(v28 & 0x7F) << v23;
      if ((v28 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v30 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v30 || (v25 & 7) == 4)
    {
LABEL_72:
      int v50 = 1;
      goto LABEL_73;
    }
    unint64_t v32 = v25 >> 3;
    BOOL v33 = v55;
    if ((v54 & 1) == 0)
    {
      BOOL v34 = v19;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    if (v32 == 3)
    {
      if (!v33 || (*(unsigned char *)(a1 + 60) & 4) != 0)
      {
LABEL_63:
        char v44 = PBReaderSkipValueWithTag();
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        if ((v44 & 1) == 0)
        {
          int v50 = 0;
          goto LABEL_73;
        }
        goto LABEL_71;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_89;
      }
      int v38 = objc_alloc_init(GEOPDVenueLevel);
      if (!GEOPDVenueLevelReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1)) {
        goto LABEL_88;
      }
      PBReaderRecallMark();
      -[GEOPDFeatureBuilding _addNoFlagsLevel:](a1, v38);

      goto LABEL_70;
    }
    if (v32 == 2) {
      break;
    }
    if (v32 == 1)
    {
      if (!v33) {
        goto LABEL_63;
      }
      if ((*(unsigned char *)(a1 + 60) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_89;
        }
        int v38 = objc_alloc_init(GEOPDVenueContainer);
        if (!GEOPDVenueContainerReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1)) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        uint64_t v39 = 40;
LABEL_56:
        char v40 = *(void **)(a1 + v39);
        *(void *)(a1 + v39) = v38;

        --v7;
LABEL_70:
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_71;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_89;
      }
      char v45 = 16 * *(unsigned char *)(a1 + 60);
LABEL_69:
      v7 += v45 >> 7;
      goto LABEL_70;
    }
    if (v52 & 1) == 0 || (*(unsigned char *)(a1 + 60)) {
      goto LABEL_63;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      int v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    int v43 = PBUnknownFieldAdd();
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v43)
    {
      int v50 = 0;
      uint8x8_t v51 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
      goto LABEL_74;
    }
LABEL_71:
    if (!(v53 & 1 | (v7 != 0))) {
      goto LABEL_72;
    }
  }
  if (!v33) {
    goto LABEL_63;
  }
  if ((*(unsigned char *)(a1 + 60) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_89;
    }
    char v45 = *(unsigned char *)(a1 + 60) << 6;
    goto LABEL_69;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_89;
  }
  int v38 = objc_alloc_init(GEOPDVenueBuilding);
  if (GEOPDVenueBuildingReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v39 = 24;
    goto LABEL_56;
  }
LABEL_88:

LABEL_89:
  int v50 = 0;
  BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_73:
  uint8x8_t v51 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
  if ((v52 & 1) == 0) {
    goto LABEL_75;
  }
LABEL_74:
  *(unsigned char *)(a1 + v51[173]) |= 1u;
LABEL_75:
  if (v55 || (v50 & 1) == 0)
  {
    *(unsigned char *)(a1 + v51[173]) |= 8u;
    *(unsigned char *)(a1 + v51[173]) |= 2u;
    *(unsigned char *)(a1 + v51[173]) |= 4u;
  }
  else if (v19)
  {
    while (1)
    {
      int v46 = *v19++;
      char v47 = 8;
      switch(v46)
      {
        case 0:
          goto LABEL_82;
        case 1:
          goto LABEL_81;
        case 2:
          char v47 = 2;
          goto LABEL_81;
        case 3:
          char v47 = 4;
LABEL_81:
          *(unsigned char *)(a1 + v51[173]) |= v47;
          break;
        default:
          continue;
      }
    }
  }
LABEL_82:
  if (v50) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v55)
  {
    uint64_t v48 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18937D43C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937D530(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDFeatureBuildingCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  -[GEOPDVenueContainer readAll:](*(void *)(a1 + 40), 1);
  -[GEOPDVenueBuilding readAll:](*(void *)(a1 + 24), 1);
  long long v8 = 0u;
  long long v9 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v7;
    while (1)
    {
      if (*(void *)v7 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }
}

void sub_18937D958(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDFeatureBuildingIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 60);
  if ((v2 & 0x10) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEOPDVenueContainerIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 60);
  }
  if ((v2 & 2) != 0)
  {
    if (GEOPDVenueBuildingIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 60);
  }
  return (v2 >> 2) & 1;
}

void sub_18937DCF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDFeaturePOIReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFEFFFDFFFCFFFFLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v52 = v17;
        char v53 = v18 | v17;
        if ((v18 | v8)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        char v54 = (v19 == 0) | v18;
        BOOL v55 = v18;
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_77;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      unint64_t v27 = *(void *)(v3 + v26);
      if (v27 == -1 || v27 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v27 + 1;
      v25 |= (unint64_t)(v28 & 0x7F) << v23;
      if ((v28 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v30 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v30 || (v25 & 7) == 4)
    {
LABEL_77:
      int v50 = 1;
      goto LABEL_78;
    }
    unint64_t v32 = v25 >> 3;
    BOOL v33 = v55;
    if ((v54 & 1) == 0)
    {
      BOOL v34 = v19;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_95;
          }
          int v38 = objc_alloc_init(GEOPDVenueContainer);
          if (GEOPDVenueContainerReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v39 = 48;
            goto LABEL_65;
          }
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_95;
        }
        char v45 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_74;
      case 2:
        if (!v33) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_95;
          }
          char v45 = *(unsigned char *)(a1 + 68) << 6;
          goto LABEL_74;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_95;
        }
        int v38 = objc_alloc_init(GEOPDVenueBuilding);
        if (!GEOPDVenueBuildingReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1)) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        uint64_t v39 = 24;
        goto LABEL_65;
      case 3:
        if (!v33 || (*(unsigned char *)(a1 + 68) & 8) != 0) {
          goto LABEL_66;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_95;
        }
        int v38 = objc_alloc_init(GEOPDVenueLevel);
        if (!GEOPDVenueLevelReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1)) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        -[GEOPDFeaturePOI _addNoFlagsLevel:](a1, v38);

        goto LABEL_75;
      case 4:
        if (!v33) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_95;
          }
          char v45 = 32 * *(unsigned char *)(a1 + 68);
LABEL_74:
          v7 += v45 >> 7;
LABEL_75:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_76:
          if (!(v53 & 1 | (v7 != 0))) {
            goto LABEL_77;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_95;
        }
        int v38 = objc_alloc_init(GEOPDVenueDirectoryGroup);
        if (GEOPDVenueDirectoryGroupReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v39 = 32;
LABEL_65:
          int v43 = *(void **)(a1 + v39);
          *(void *)(a1 + v39) = v38;

          --v7;
          goto LABEL_75;
        }
LABEL_94:

LABEL_95:
        int v50 = 0;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_78:
        uint8x8_t v51 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
        if (v52) {
LABEL_79:
        }
          *(unsigned char *)(a1 + v51[182]) |= 1u;
        if (v55 || (v50 & 1) == 0)
        {
          *(unsigned char *)(a1 + v51[182]) |= 0x10u;
          *(unsigned char *)(a1 + v51[182]) |= 2u;
          *(unsigned char *)(a1 + v51[182]) |= 8u;
          *(unsigned char *)(a1 + v51[182]) |= 4u;
        }
        else if (v19)
        {
          while (1)
          {
            int v46 = *v19++;
            char v47 = 16;
            switch(v46)
            {
              case 0:
                goto LABEL_88;
              case 1:
                goto LABEL_87;
              case 2:
                char v47 = 2;
                goto LABEL_87;
              case 3:
                char v47 = 8;
                goto LABEL_87;
              case 4:
                char v47 = 4;
LABEL_87:
                *(unsigned char *)(a1 + v51[182]) |= v47;
                break;
              default:
                continue;
            }
          }
        }
LABEL_88:
        if (v50) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v55)
        {
          uint64_t v48 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v52 & 1) == 0 || (*(unsigned char *)(a1 + 68))
        {
LABEL_66:
          char v44 = PBReaderSkipValueWithTag();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v44 & 1) == 0)
          {
            int v50 = 0;
            goto LABEL_78;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v41 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v40;
          }
          int v42 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v42)
          {
            int v50 = 0;
            uint8x8_t v51 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
            goto LABEL_79;
          }
        }
        goto LABEL_76;
    }
  }
}

void sub_18937ECC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937EDBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDFeaturePOICallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  -[GEOPDVenueContainer readAll:](*(void *)(a1 + 48), 1);
  -[GEOPDVenueBuilding readAll:](*(void *)(a1 + 24), 1);
  long long v8 = 0u;
  long long v9 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  id v2 = *(id *)(a1 + 40);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v7;
    while (1)
    {
      if (*(void *)v7 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDFeaturePOIReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDFeaturePOIReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDFeaturePOIReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDFeaturePOIReadAllFrom_initialTag;
  }
  unint64_t v6 = GEOPDFeaturePOIReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDFeaturePOICallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v6;
}

void sub_18937F134(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18937F39C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDFeaturePOIIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEOPDVenueContainerIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  }
  if ((v2 & 2) != 0)
  {
    if (GEOPDVenueBuildingIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  }
  if ((v2 & 8) == 0) {
    return (v2 >> 2) & 1;
  }
  return 1;
}

void sub_18937F760(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDFeatureVenueReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v50 = v17;
        char v51 = v18 | v17;
        if ((v18 | v8)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        char v52 = (v19 == 0) | v18;
        BOOL v53 = v18;
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_69;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      unint64_t v27 = *(void *)(v3 + v26);
      if (v27 == -1 || v27 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v27 + 1;
      v25 |= (unint64_t)(v28 & 0x7F) << v23;
      if ((v28 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v30 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v30 || (v25 & 7) == 4)
    {
LABEL_69:
      int v48 = 1;
      goto LABEL_70;
    }
    unint64_t v32 = v25 >> 3;
    BOOL v33 = v53;
    if ((v52 & 1) == 0)
    {
      BOOL v34 = v19;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    if (v32 == 3)
    {
      if (!v33 || (*(unsigned char *)(a1 + 60) & 4) != 0)
      {
LABEL_63:
        char v43 = PBReaderSkipValueWithTag();
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        if ((v43 & 1) == 0)
        {
          int v48 = 0;
          goto LABEL_70;
        }
        goto LABEL_68;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_86;
      }
      int v38 = objc_alloc_init(GEOPDVenueLevel);
      if (!GEOPDVenueLevelReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1)) {
        goto LABEL_85;
      }
      PBReaderRecallMark();
      -[GEOPDFeatureVenue _addNoFlagsLevel:](a1, v38);
      goto LABEL_56;
    }
    if (v32 == 2) {
      break;
    }
    if (v32 == 1)
    {
      if (!v33) {
        goto LABEL_63;
      }
      if ((*(unsigned char *)(a1 + 60) & 8) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_86;
        }
        v7 += *(unsigned __int8 *)(a1 + 60) << 28 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        int v38 = objc_alloc_init(GEOPDVenueContainer);
        if (!GEOPDVenueContainerReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1)) {
          goto LABEL_85;
        }
        PBReaderRecallMark();
        uint64_t v39 = *(void **)(a1 + 40);
        *(void *)(a1 + 40) = v38;

        --v7;
      }
      goto LABEL_67;
    }
    if (v50 & 1) == 0 || (*(unsigned char *)(a1 + 60)) {
      goto LABEL_63;
    }
    if (!*(void *)(a1 + 16))
    {
      id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      id v41 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v40;
    }
    int v42 = PBUnknownFieldAdd();
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v42)
    {
      int v48 = 0;
      unsigned int v49 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
      goto LABEL_71;
    }
LABEL_68:
    if (!(v51 & 1 | (v7 != 0))) {
      goto LABEL_69;
    }
  }
  if (!v33 || (*(unsigned char *)(a1 + 60) & 2) != 0) {
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_86;
  }
  int v38 = objc_alloc_init(GEOPDVenueBuilding);
  if (GEOPDVenueBuildingReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDFeatureVenue _addNoFlagsBuilding:](a1, v38);
LABEL_56:

LABEL_67:
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_68;
  }
LABEL_85:

LABEL_86:
  int v48 = 0;
  BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_70:
  unsigned int v49 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
  if ((v50 & 1) == 0) {
    goto LABEL_72;
  }
LABEL_71:
  *(unsigned char *)(a1 + v49[192]) |= 1u;
LABEL_72:
  if (v53 || (v48 & 1) == 0)
  {
    *(unsigned char *)(a1 + v49[192]) |= 8u;
    *(unsigned char *)(a1 + v49[192]) |= 2u;
    *(unsigned char *)(a1 + v49[192]) |= 4u;
  }
  else if (v19)
  {
    while (1)
    {
      int v44 = *v19++;
      char v45 = 8;
      switch(v44)
      {
        case 0:
          goto LABEL_79;
        case 1:
          goto LABEL_78;
        case 2:
          char v45 = 2;
          goto LABEL_78;
        case 3:
          char v45 = 4;
LABEL_78:
          *(unsigned char *)(a1 + v49[192]) |= v45;
          break;
        default:
          continue;
      }
    }
  }
LABEL_79:
  if (v48) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v53)
  {
    int v46 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18938068C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938077C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDFeatureVenueCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  -[GEOPDVenueContainer readAll:](*(void *)(a1 + 40), 1);
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v15 objects:v20 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v16;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v16 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDVenueBuilding readAll:](*(void *)(*((void *)&v15 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v15 objects:v20 count:16];
    }
    while (v4);
  }

  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v7 = *(id *)(a1 + 32);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v11 objects:v19 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v12;
    while (1)
    {
      if (*(void *)v12 != v10) {
        objc_enumerationMutation(v7);
      }
      if (!--v9)
      {
        uint64_t v9 = [v7 countByEnumeratingWithState:&v11 objects:v19 count:16];
        if (!v9) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDFeatureVenueReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDFeatureVenueReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDFeatureVenueReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDFeatureVenueReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDFeatureVenueReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDFeatureVenueCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189380B84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189380E50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDFeatureVenueIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v2 = *(unsigned char *)(a1 + 60);
  if ((v2 & 0x10) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) != 0)
  {
    if (GEOPDVenueContainerIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 60);
  }
  if ((v2 & 6) != 0) {
    return 1;
  }
  if ((v2 & 2) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 24);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOPDVenueBuildingIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_20;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_20:

  return v3;
}

void sub_189381420(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938178C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDFilterElementInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v51 = v17;
        char v52 = v18 | v17;
        if ((v18 | v7)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        char v53 = (v19 == 0) | v18;
        BOOL v54 = v18;
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_62;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      unint64_t v27 = *(void *)(v3 + v26);
      if (v27 == -1 || v27 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v27 + 1;
      v25 |= (unint64_t)(v28 & 0x7F) << v23;
      if ((v28 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v30 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v30 || (v25 & 7) == 4)
    {
LABEL_62:
      int v49 = 1;
      goto LABEL_63;
    }
    unint64_t v32 = v25 >> 3;
    BOOL v33 = v54;
    if ((v53 & 1) == 0)
    {
      BOOL v34 = v19;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    if (v32 == 2) {
      break;
    }
    if (v32 == 1)
    {
      if (v33 && (*(unsigned char *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_83;
        }
        int v38 = objc_alloc_init(GEOPDVenueIdentifier);
        if (!GEOPDVenueIdentifierReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        -[GEOPDFilterElementInfo _addNoFlagsFilterId:](a1, v38);

        goto LABEL_60;
      }
    }
    else if ((v51 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        id v41 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v40;
      }
      int v42 = PBUnknownFieldAdd();
      uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v42)
      {
        int v49 = 0;
        char v50 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        goto LABEL_65;
      }
      goto LABEL_61;
    }
LABEL_56:
    char v43 = PBReaderSkipValueWithTag();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v43 & 1) == 0)
    {
      int v49 = 0;
LABEL_63:
      char v50 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v52 & 1 | (v8 != 0))) {
      goto LABEL_62;
    }
  }
  if (!v33) {
    goto LABEL_56;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_83;
    }
    v8 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
    goto LABEL_60;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_83;
  }
  int v38 = objc_alloc_init(GEOPDVenueLabel);
  if (GEOPDVenueLabelReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v39 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v38;

    --v8;
LABEL_60:
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_61;
  }
LABEL_82:

LABEL_83:
  int v49 = 0;
  char v50 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_64:
  if ((v51 & 1) == 0) {
    goto LABEL_66;
  }
LABEL_65:
  *(unsigned char *)(a1 + v50[22]) |= 1u;
LABEL_66:
  if (v54 || (v49 & 1) == 0)
  {
    *(unsigned char *)(a1 + v50[22]) |= 2u;
    *(unsigned char *)(a1 + v50[22]) |= 4u;
    goto LABEL_76;
  }
  if (v19)
  {
    while (1)
    {
      int v46 = *v19++;
      int v45 = v46;
      if (v46 == 1) {
        break;
      }
      if (v45 == 2)
      {
        char v44 = 4;
LABEL_72:
        *(unsigned char *)(a1 + v50[22]) |= v44;
      }
      else if (!v45)
      {
        goto LABEL_76;
      }
    }
    char v44 = 2;
    goto LABEL_72;
  }
LABEL_76:
  if (v49) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v54)
  {
    char v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189381F14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893823E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDFilterElementInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDVenueIdentifier readAll:](*(void *)(*((void *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }

  -[GEOPDVenueLabel readAll:](*(void *)(a1 + 32), 1);
}

unint64_t GEOPDFilterElementInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDFilterElementInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDFilterElementInfoReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDFilterElementInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDFilterElementInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDFilterElementInfoCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189382768(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189382998(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDFilterElementInfoIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 52);
  if ((v2 & 0xA) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if (GEOPDVenueLabelIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 52);
  }
  if ((v2 & 2) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 24);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOPDVenueIdentifierIsDirty(*(void *)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_19;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_19:

  return v3;
}

void sub_189382D48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLocatedInsideInfoReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          *(unsigned char *)(a1 + 28) |= 2u;
          while (1)
          {
            uint64_t v26 = *v4;
            unint64_t v27 = *(void *)&v3[v26];
            if (v27 == -1 || v27 >= *(void *)&v3[*v5]) {
              break;
            }
            char v28 = *(unsigned char *)(*(void *)&v3[*v7] + v27);
            *(void *)&v3[v26] = v27 + 1;
            v25 |= (unint64_t)(v28 & 0x7F) << v23;
            if ((v28 & 0x80) == 0) {
              goto LABEL_44;
            }
            v23 += 7;
            BOOL v14 = v24++ >= 9;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6]) {
            LODWORD(v25) = 0;
          }
LABEL_46:
          *(_DWORD *)(a1 + 24) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_40;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_42;
            }
          }
          v3[*v6] = 1;
LABEL_40:
          if (v3[*v6]) {
            uint64_t v19 = 0;
          }
LABEL_42:
          *(void *)(a1 + 16) = v19;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v29 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v30 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v29;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_49;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v31 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    BOOL v31 = 0;
  }
  objc_sync_exit(v3);

  return v31;
}

void sub_189383598(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVenueBuildingReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 108)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFDFFFCFFFBLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        char v18 = v16 | v11;
        if (((v16 | v11) | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v94 = 1;
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        char v22 = v16 & ~(_BYTE)v11 | v9;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_134;
        }
        char v92 = v17;
        char v95 = v18 | v17;
        char v96 = (v19 == 0) | v18;
        char v23 = (int *)MEMORY[0x1E4F940B8];
        char v93 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_132;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      unint64_t v28 = *(void *)(v3 + v27);
      if (v28 == -1 || v28 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v28 + 1;
      v26 |= (unint64_t)(v29 & 0x7F) << v24;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v30 = v25++ >= 9;
      if (v30)
      {
        unint64_t v26 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v32 = v26 & 7;
    if (v31 || v32 == 4)
    {
LABEL_132:
      int v94 = 1;
      goto LABEL_133;
    }
    BOOL v34 = v6;
    int v35 = v21;
    unint64_t v36 = v26 >> 3;
    BOOL v37 = v18;
    if ((v96 & 1) == 0)
    {
      int v38 = v19;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        unint64_t v21 = v35;
        if ((v8 & 1) == 0) {
          goto LABEL_98;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 108) |= 1u;
        uint64_t v6 = v34;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v23 = (int *)MEMORY[0x1E4F940B8];
        while (1)
        {
          uint64_t v45 = *v20;
          unint64_t v46 = *(void *)(v3 + v45);
          if (v46 == -1 || v46 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v47 = *(unsigned char *)(*(void *)(v3 + *v23) + v46);
          *(void *)(v3 + v45) = v46 + 1;
          v44 |= (unint64_t)(v47 & 0x7F) << v42;
          if ((v47 & 0x80) == 0) {
            goto LABEL_102;
          }
          v42 += 7;
          BOOL v30 = v43++ >= 9;
          if (v30)
          {
            uint64_t v44 = 0;
            goto LABEL_104;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_102:
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v44 = 0;
        }
LABEL_104:
        uint64_t v74 = 72;
        goto LABEL_109;
      case 2:
        unint64_t v21 = v35;
        if (!v37 || (*(unsigned char *)(a1 + 108) & 0x10) != 0) {
          goto LABEL_98;
        }
        uint64_t v6 = v34;
        if (v32 != 2)
        {
          char v76 = 0;
          unsigned int v77 = 0;
          uint64_t v78 = 0;
          uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
          char v23 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v79 = *v20;
            unint64_t v80 = *(void *)(v3 + v79);
            if (v80 == -1 || v80 >= *(void *)(v3 + *v6)) {
              goto LABEL_127;
            }
            char v81 = *(unsigned char *)(*(void *)(v3 + *v23) + v80);
            *(void *)(v3 + v79) = v80 + 1;
            v78 |= (unint64_t)(v81 & 0x7F) << v76;
            if (v81 < 0)
            {
              v76 += 7;
              BOOL v30 = v77++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_128;
          }
        }
        int v51 = PBReaderPlaceMark();
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        if (!v51) {
          goto LABEL_150;
        }
        char v23 = (int *)MEMORY[0x1E4F940B8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(v3 + *v6))
        {
          do
          {
            if (*(unsigned char *)(v3 + *v21)) {
              break;
            }
            char v52 = 0;
            unsigned int v53 = 0;
            uint64_t v54 = 0;
            while (1)
            {
              uint64_t v55 = *v20;
              unint64_t v56 = *(void *)(v3 + v55);
              if (v56 == -1 || v56 >= *(void *)(v3 + *v6)) {
                break;
              }
              char v57 = *(unsigned char *)(*(void *)(v3 + *v23) + v56);
              *(void *)(v3 + v55) = v56 + 1;
              v54 |= (unint64_t)(v57 & 0x7F) << v52;
              if (v57 < 0)
              {
                v52 += 7;
                BOOL v30 = v53++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_67;
            }
            *(unsigned char *)(v3 + *v21) = 1;
LABEL_67:
            PBRepeatedUInt64Add();
          }
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6));
        }
        goto LABEL_68;
      case 3:
        unint64_t v21 = v35;
        if (!v37) {
          goto LABEL_98;
        }
        uint64_t v6 = v34;
        if ((*(unsigned char *)(a1 + 108) & 0x20) != 0)
        {
          char v75 = PBReaderSkipValueWithTag();
          uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
          if ((v75 & 1) == 0) {
            goto LABEL_150;
          }
          v7 += *(unsigned __int8 *)(a1 + 108) << 26 >> 31;
          goto LABEL_112;
        }
        char v58 = PBReaderPlaceMark();
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        if ((v58 & 1) == 0) {
          goto LABEL_150;
        }
        unint64_t v59 = objc_alloc_init(GEOPDVenueLabel);
        if (GEOPDVenueLabelReadAllFrom((uint64_t)v59, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          unint64_t v60 = *(void **)(a1 + 80);
          *(void *)(a1 + 80) = v59;

          --v7;
LABEL_112:
          char v18 = v93;
          char v23 = (int *)MEMORY[0x1E4F940B8];
LABEL_130:
          if (!(v95 & 1 | (v7 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_132;
          }
          continue;
        }

LABEL_150:
        int v94 = 0;
        char v18 = v93;
LABEL_133:
        char v22 = v92;
LABEL_134:
        if (v22) {
LABEL_135:
        }
          *(unsigned char *)(a1 + 108) |= 4u;
        if (v18 & 1 | ((v94 & 1) == 0))
        {
          *(unsigned char *)(a1 + 108) |= 0x10u;
          *(unsigned char *)(a1 + 108) |= 0x20u;
          *(unsigned char *)(a1 + 108) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            int v88 = *v19++;
            char v89 = 16;
            switch(v88)
            {
              case 0:
                goto LABEL_143;
              case 2:
                goto LABEL_142;
              case 3:
                char v89 = 32;
                goto LABEL_142;
              case 5:
                char v89 = 8;
LABEL_142:
                *(unsigned char *)(a1 + 108) |= v89;
                break;
              default:
                continue;
            }
          }
        }
LABEL_143:
        if (v94)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_147:
          uint64_t v90 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v18) {
            goto LABEL_147;
          }
        }
        return v3;
      case 4:
        unint64_t v21 = v35;
        if ((v8 & 1) == 0) {
          goto LABEL_98;
        }
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 108) |= 2u;
        uint64_t v6 = v34;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v23 = (int *)MEMORY[0x1E4F940B8];
        while (2)
        {
          uint64_t v63 = *v20;
          unint64_t v64 = *(void *)(v3 + v63);
          if (v64 == -1 || v64 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(v3 + *v23) + v64);
            *(void *)(v3 + v63) = v64 + 1;
            v44 |= (unint64_t)(v65 & 0x7F) << v61;
            if (v65 < 0)
            {
              v61 += 7;
              BOOL v30 = v62++ >= 9;
              if (v30)
              {
                uint64_t v44 = 0;
                goto LABEL_108;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v44 = 0;
        }
LABEL_108:
        uint64_t v74 = 88;
LABEL_109:
        *(void *)(a1 + v74) = v44;
        goto LABEL_130;
      case 5:
        unint64_t v21 = v35;
        if (!v37 || (*(unsigned char *)(a1 + 108) & 8) != 0)
        {
LABEL_98:
          char v73 = PBReaderSkipValueWithTag();
          char v18 = v93;
          goto LABEL_99;
        }
        uint64_t v6 = v34;
        if (v32 == 2)
        {
          int v66 = PBReaderPlaceMark();
          uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
          char v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v66) {
            goto LABEL_150;
          }
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v21))
          {
            char v67 = 0;
            unsigned int v68 = 0;
            uint64_t v69 = 0;
            while (1)
            {
              uint64_t v70 = *v20;
              unint64_t v71 = *(void *)(v3 + v70);
              if (v71 == -1 || v71 >= *(void *)(v3 + *v6)) {
                break;
              }
              char v72 = *(unsigned char *)(*(void *)(v3 + *v23) + v71);
              *(void *)(v3 + v70) = v71 + 1;
              v69 |= (unint64_t)(v72 & 0x7F) << v67;
              if (v72 < 0)
              {
                v67 += 7;
                BOOL v30 = v68++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_96;
            }
            *(unsigned char *)(v3 + *v21) = 1;
LABEL_96:
            PBRepeatedUInt64Add();
          }
LABEL_68:
          PBReaderRecallMark();
        }
        else
        {
          char v82 = 0;
          unsigned int v83 = 0;
          uint64_t v84 = 0;
          uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
          char v23 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v85 = *v20;
            unint64_t v86 = *(void *)(v3 + v85);
            if (v86 == -1 || v86 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v87 = *(unsigned char *)(*(void *)(v3 + *v23) + v86);
            *(void *)(v3 + v85) = v86 + 1;
            v84 |= (unint64_t)(v87 & 0x7F) << v82;
            if (v87 < 0)
            {
              v82 += 7;
              BOOL v30 = v83++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_128;
          }
LABEL_127:
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_128:
          PBRepeatedUInt64Add();
        }
        char v18 = v93;
        goto LABEL_130;
      default:
        if ((v92 & 1) == 0 || (*(unsigned char *)(a1 + 108) & 4) != 0)
        {
          char v73 = PBReaderSkipValueWithTag();
          char v18 = v93;
          unint64_t v21 = v35;
LABEL_99:
          uint64_t v6 = v34;
          uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
          char v23 = (int *)MEMORY[0x1E4F940B8];
          if ((v73 & 1) == 0)
          {
            int v94 = 0;
            goto LABEL_133;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v48 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v49 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v48;
          }
          int v50 = PBUnknownFieldAdd();
          char v18 = v93;
          unint64_t v21 = v35;
          uint64_t v6 = v34;
          uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
          char v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v50)
          {
            int v94 = 0;
            goto LABEL_135;
          }
        }
        goto LABEL_130;
    }
  }
}

void sub_189384834(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189384928(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVenueBuildingReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDVenueBuildingReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = [v8 position];
  *(_DWORD *)(a1 + 100) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDVenueBuildingReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDVenueBuildingReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDVenueBuildingReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDVenueLabel readAll:](*(void *)(a1 + 80), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_189384BAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189384DEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDVenueBuildingIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 108);
  if ((v2 & 0x50) != 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOPDVenueLabelIsDirty(*(void *)(a1 + 80))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 108);
  }
  return (v2 >> 3) & 1;
}

os_unfair_lock_s *GEOPDVenueBuildingIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDVenueBuildingIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1893850A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVenueContainerReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 88) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 88) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 88) >> 3) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v7;
        char v18 = v16 | v11;
        uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        if (((v16 | v11) | v8)) {
          uint64_t v20 = 0;
        }
        else {
          uint64_t v20 = a3;
        }
        int v85 = 1;
        char v21 = v16 & ~(_BYTE)v11 | v7;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_122;
        }
        char v83 = v17;
        char v86 = v18 | v17;
        char v22 = (int *)MEMORY[0x1E4F940C8];
        char v87 = (v20 == 0) | v18;
        char v23 = (int *)MEMORY[0x1E4F940B8];
        char v84 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_120;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v19;
      unint64_t v28 = *(void *)(v3 + v27);
      if (v28 == -1 || v28 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v28 + 1;
      v26 |= (unint64_t)(v29 & 0x7F) << v24;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v30 = v25++ >= 9;
      if (v30)
      {
        unint64_t v26 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v32 = v26 & 7;
    if (v31 || v32 == 4)
    {
LABEL_120:
      int v85 = 1;
      goto LABEL_121;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v18;
    if ((v87 & 1) == 0)
    {
      unint64_t v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_89;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 88) |= 2u;
        while (1)
        {
          uint64_t v43 = *v19;
          unint64_t v44 = *(void *)(v3 + v43);
          if (v44 == -1 || v44 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v23) + v44);
          *(void *)(v3 + v43) = v44 + 1;
          v42 |= (unint64_t)(v45 & 0x7F) << v40;
          if ((v45 & 0x80) == 0) {
            goto LABEL_92;
          }
          v40 += 7;
          BOOL v30 = v41++ >= 9;
          if (v30)
          {
            uint64_t v42 = 0;
            goto LABEL_94;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_92:
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v42 = 0;
        }
LABEL_94:
        uint64_t v71 = 64;
        goto LABEL_103;
      case 2:
        if (!v35 || (*(unsigned char *)(a1 + 88) & 0x10) != 0) {
          goto LABEL_89;
        }
        if (v32 != 2)
        {
          char v72 = 0;
          unsigned int v73 = 0;
          uint64_t v74 = 0;
          while (1)
          {
            uint64_t v75 = *v19;
            unint64_t v76 = *(void *)(v3 + v75);
            if (v76 == -1 || v76 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v77 = *(unsigned char *)(*(void *)(v3 + *v23) + v76);
            *(void *)(v3 + v75) = v76 + 1;
            v74 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              BOOL v30 = v73++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_115;
          }
          *(unsigned char *)(v3 + *v22) = 1;
LABEL_115:
          PBRepeatedUInt64Add();
          goto LABEL_116;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_141;
        }
        while (1)
        {
          int v49 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v50 = 0;
          unsigned int v51 = 0;
          uint64_t v52 = 0;
          unsigned int v53 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v54 = *v19;
            unint64_t v55 = *(void *)(v3 + v54);
            if (v55 == -1 || v55 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v56 = *(unsigned char *)(*(void *)(v3 + *v53) + v55);
            *(void *)(v3 + v54) = v55 + 1;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              BOOL v30 = v51++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_67;
          }
          *(unsigned char *)(v3 + *v49) = 1;
LABEL_67:
          PBRepeatedUInt64Add();
        }
        PBReaderRecallMark();
        char v22 = (int *)MEMORY[0x1E4F940C8];
        char v18 = v84;
        goto LABEL_117;
      case 3:
        if (!v35) {
          goto LABEL_89;
        }
        if ((*(unsigned char *)(a1 + 88) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_141;
          }
          v9 += *(unsigned __int8 *)(a1 + 88) << 26 >> 31;
          goto LABEL_116;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_141;
        }
        char v57 = objc_alloc_init(GEOPDVenueLabel);
        if (GEOPDVenueLabelReadAllFrom((uint64_t)v57, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          char v58 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v57;

          --v9;
LABEL_116:
          char v18 = v84;
          char v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_117:
          char v23 = (int *)MEMORY[0x1E4F940B8];
LABEL_118:
          if (!(v86 & 1 | (v9 != 0)) || *(void *)(v3 + *v19) >= *(void *)(v3 + *v6)) {
            goto LABEL_120;
          }
          continue;
        }

LABEL_141:
        int v85 = 0;
        char v18 = v84;
LABEL_121:
        char v21 = v83;
LABEL_122:
        if (v21) {
LABEL_123:
        }
          *(unsigned char *)(a1 + 88) |= 8u;
        if (v18 & 1 | ((v85 & 1) == 0))
        {
          *(unsigned char *)(a1 + 88) |= 0x10u;
          *(unsigned char *)(a1 + 88) |= 0x20u;
          goto LABEL_134;
        }
        if (v20)
        {
          while (2)
          {
            while (1)
            {
              int v79 = *v20++;
              int v78 = v79;
              if (v79 == 2) {
                break;
              }
              if (v78 == 3)
              {
                char v80 = 32;
                goto LABEL_133;
              }
              if (!v78) {
                goto LABEL_134;
              }
            }
            char v80 = 16;
LABEL_133:
            *(unsigned char *)(a1 + 88) |= v80;
            continue;
          }
        }
LABEL_134:
        if (v85)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_138:
          char v81 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v18) {
            goto LABEL_138;
          }
        }
        return v3;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_89;
        }
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v61 = 0;
        *(unsigned char *)(a1 + 88) |= 4u;
        while (2)
        {
          uint64_t v62 = *v19;
          unint64_t v63 = *(void *)(v3 + v62);
          if (v63 == -1 || v63 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(v3 + *v23) + v63);
            *(void *)(v3 + v62) = v63 + 1;
            v61 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              BOOL v30 = v60++ >= 9;
              if (v30)
              {
                LODWORD(v61) = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v61) = 0;
        }
LABEL_98:
        *(_DWORD *)(a1 + 84) = v61;
        goto LABEL_118;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_89;
        }
        char v65 = 0;
        unsigned int v66 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 88) |= 1u;
        while (2)
        {
          uint64_t v67 = *v19;
          unint64_t v68 = *(void *)(v3 + v67);
          if (v68 == -1 || v68 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(v3 + *v23) + v68);
            *(void *)(v3 + v67) = v68 + 1;
            v42 |= (unint64_t)(v69 & 0x7F) << v65;
            if (v69 < 0)
            {
              v65 += 7;
              BOOL v30 = v66++ >= 9;
              if (v30)
              {
                uint64_t v42 = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v42 = 0;
        }
LABEL_102:
        uint64_t v71 = 56;
LABEL_103:
        *(void *)(a1 + v71) = v42;
        goto LABEL_118;
      default:
        if ((v83 & 1) == 0 || (*(unsigned char *)(a1 + 88) & 8) != 0)
        {
LABEL_89:
          char v70 = PBReaderSkipValueWithTag();
          char v23 = (int *)MEMORY[0x1E4F940B8];
          char v22 = (int *)MEMORY[0x1E4F940C8];
          char v18 = v84;
          if ((v70 & 1) == 0)
          {
            int v85 = 0;
            goto LABEL_121;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          char v18 = v84;
          char v22 = (int *)MEMORY[0x1E4F940C8];
          char v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v48)
          {
            int v85 = 0;
            goto LABEL_123;
          }
        }
        goto LABEL_118;
    }
  }
}

void sub_1893861A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938629C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVenueContainerReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDVenueContainerReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDVenueContainerReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDVenueContainerReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDVenueContainerReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDVenueLabel readAll:](*(void *)(a1 + 48), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189386520(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189386744(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDVenueContainerIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  if ((*(unsigned char *)(a1 + 88) & 0x50) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 88) & 0x20) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 48);

  return GEOPDVenueLabelIsDirty(v3);
}

os_unfair_lock_s *GEOPDVenueContainerIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOPDVenueContainerIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189386A14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDVenueDirectoryGroupReadAllFrom(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v5[*v8]) {
          goto LABEL_53;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          unint64_t v14 = *(void *)&v5[v13];
          if (v14 == -1 || v14 >= *(void *)&v5[*v7]) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v16 = v11++ >= 9;
          if (v16)
          {
            unint64_t v12 = 0;
            int v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v17 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v17 || (v12 & 7) == 4) {
          goto LABEL_53;
        }
        unint64_t v19 = v12 >> 3;
        if ((v12 >> 3) == 3) {
          break;
        }
        if (v19 == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_55;
          }
          int v31 = objc_alloc_init(GEOPDVenueLabel);
          if (!GEOPDVenueLabelReadAllFrom((uint64_t)v31, v5, a3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          int v32 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v31;
        }
        else
        {
          if (v19 == 1)
          {
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 40) |= 1u;
            while (1)
            {
              uint64_t v23 = *v6;
              unint64_t v24 = *(void *)&v5[v23];
              if (v24 == -1 || v24 >= *(void *)&v5[*v7]) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
              *(void *)&v5[v23] = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if ((v25 & 0x80) == 0) {
                goto LABEL_44;
              }
              v20 += 7;
              BOOL v16 = v21++ >= 9;
              if (v16)
              {
                uint64_t v22 = 0;
                goto LABEL_46;
              }
            }
            v5[*v8] = 1;
LABEL_44:
            if (v5[*v8]) {
              uint64_t v22 = 0;
            }
LABEL_46:
            uint64_t v35 = 16;
LABEL_51:
            *(void *)(a1 + v35) = v22;
            goto LABEL_52;
          }
          if (!*(void *)(a1 + 8))
          {
            id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v34 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v33;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_55;
          }
        }
LABEL_52:
        if (*(void *)&v5[*v6] >= *(void *)&v5[*v7]) {
          goto LABEL_53;
        }
      }
      char v26 = 0;
      unsigned int v27 = 0;
      uint64_t v22 = 0;
      *(unsigned char *)(a1 + 40) |= 2u;
      while (1)
      {
        uint64_t v28 = *v6;
        unint64_t v29 = *(void *)&v5[v28];
        if (v29 == -1 || v29 >= *(void *)&v5[*v7]) {
          break;
        }
        char v30 = *(unsigned char *)(*(void *)&v5[*v9] + v29);
        *(void *)&v5[v28] = v29 + 1;
        v22 |= (unint64_t)(v30 & 0x7F) << v26;
        if ((v30 & 0x80) == 0) {
          goto LABEL_48;
        }
        v26 += 7;
        BOOL v16 = v27++ >= 9;
        if (v16)
        {
          uint64_t v22 = 0;
          goto LABEL_50;
        }
      }
      v5[*v8] = 1;
LABEL_48:
      if (v5[*v8]) {
        uint64_t v22 = 0;
      }
LABEL_50:
      uint64_t v35 = 32;
      goto LABEL_51;
    }
LABEL_53:
    BOOL v36 = v5[*v8] == 0;
  }
  else
  {
LABEL_55:
    BOOL v36 = 0;
  }
  objc_sync_exit(v5);

  return v36;
}

void sub_189387128(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVenueFeatureValueReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v52 = v17;
        char v53 = v18 | v17;
        if ((v18 | v8)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        char v54 = (v19 == 0) | v18;
        BOOL v55 = v18;
        char v20 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_74;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      unint64_t v27 = *(void *)(v3 + v26);
      if (v27 == -1 || v27 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v27 + 1;
      v25 |= (unint64_t)(v28 & 0x7F) << v23;
      if ((v28 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v30 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v30 || (v25 & 7) == 4)
    {
LABEL_74:
      int v50 = 1;
      goto LABEL_75;
    }
    unint64_t v32 = v25 >> 3;
    BOOL v33 = v55;
    if ((v54 & 1) == 0)
    {
      unint64_t v34 = v19;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    if (v32 == 4)
    {
      if (!v33) {
        goto LABEL_63;
      }
      if ((*(unsigned char *)(a1 + 60) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_92;
        }
        char v45 = 32 * *(unsigned char *)(a1 + 60);
        goto LABEL_71;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_92;
      }
      int v38 = objc_alloc_init(GEOPDFeaturePOI);
      if (!GEOPDFeaturePOIReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1)) {
        goto LABEL_91;
      }
      PBReaderRecallMark();
      uint64_t v39 = 32;
LABEL_56:
      char v40 = *(void **)(a1 + v39);
      *(void *)(a1 + v39) = v38;

      --v7;
      goto LABEL_72;
    }
    if (v32 == 2) {
      break;
    }
    if (v32 == 1)
    {
      if (!v33) {
        goto LABEL_63;
      }
      if ((*(unsigned char *)(a1 + 60) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_92;
        }
        int v38 = objc_alloc_init(GEOPDFeatureVenue);
        if (!GEOPDFeatureVenueReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1)) {
          goto LABEL_91;
        }
        PBReaderRecallMark();
        uint64_t v39 = 40;
        goto LABEL_56;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_92;
      }
      char v45 = 16 * *(unsigned char *)(a1 + 60);
LABEL_71:
      v7 += v45 >> 7;
LABEL_72:
      unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_73;
    }
    if (v52 & 1) == 0 || (*(unsigned char *)(a1 + 60))
    {
LABEL_63:
      char v44 = PBReaderSkipValueWithTag();
      unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
      if ((v44 & 1) == 0)
      {
        int v50 = 0;
        goto LABEL_75;
      }
      goto LABEL_73;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      uint64_t v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    int v43 = PBUnknownFieldAdd();
    unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v43)
    {
      int v50 = 0;
      unsigned int v51 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
      goto LABEL_76;
    }
LABEL_73:
    if (!(v53 & 1 | (v7 != 0))) {
      goto LABEL_74;
    }
  }
  if (!v33) {
    goto LABEL_63;
  }
  if ((*(unsigned char *)(a1 + 60) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_92;
    }
    char v45 = *(unsigned char *)(a1 + 60) << 6;
    goto LABEL_71;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_92;
  }
  int v38 = objc_alloc_init(GEOPDFeatureBuilding);
  if (GEOPDFeatureBuildingReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v39 = 24;
    goto LABEL_56;
  }
LABEL_91:

LABEL_92:
  int v50 = 0;
  unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_75:
  unsigned int v51 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
  if ((v52 & 1) == 0) {
    goto LABEL_77;
  }
LABEL_76:
  *(unsigned char *)(a1 + v51[232]) |= 1u;
LABEL_77:
  if (v55 || (v50 & 1) == 0)
  {
    *(unsigned char *)(a1 + v51[232]) |= 8u;
    *(unsigned char *)(a1 + v51[232]) |= 2u;
    *(unsigned char *)(a1 + v51[232]) |= 4u;
  }
  else if (v19)
  {
    while (1)
    {
      int v47 = *v19++;
      char v46 = 8;
      switch(v47)
      {
        case 0:
          goto LABEL_85;
        case 1:
          goto LABEL_83;
        case 2:
          char v46 = 2;
          goto LABEL_83;
        case 4:
          char v46 = 4;
LABEL_83:
          *(unsigned char *)(a1 + v51[232]) |= v46;
          break;
        default:
          continue;
      }
    }
  }
LABEL_85:
  if (v50) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v55)
  {
    int v48 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189387FF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189388114(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVenueFeatureValueReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDVenueFeatureValueReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 48) = [v6 position];
      *(_DWORD *)(a1 + 52) = [v6 length];
      unint64_t Specified = GEOPDVenueFeatureValueReadSpecified(a1, (unint64_t)v6, (int *)&GEOPDVenueFeatureValueReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_18938836C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189388608(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189388790(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189388ADC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVenueInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFBFFFAFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 76) & 4) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v68 = v17;
        char v69 = v18 | v17;
        if ((v18 | v8)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        char v70 = (v19 == 0) | v18;
        BOOL v71 = v18;
        char v20 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_101;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      unint64_t v27 = *(void *)(v3 + v26);
      if (v27 == -1 || v27 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v27 + 1;
      v25 |= (unint64_t)(v28 & 0x7F) << v23;
      if ((v28 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v29 = v24++ >= 9;
      if (v29)
      {
        unint64_t v25 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v30 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v30 || (v25 & 7) == 4)
    {
LABEL_101:
      int v66 = 1;
LABEL_102:
      uint64_t v67 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
      goto LABEL_103;
    }
    unint64_t v32 = v25 >> 3;
    BOOL v33 = v71;
    if ((v70 & 1) == 0)
    {
      unint64_t v34 = v19;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33 || (*(unsigned char *)(a1 + 76) & 0x40) != 0) {
          goto LABEL_83;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        int v38 = objc_alloc_init(GEOPDVenueIdentifier);
        if (!GEOPDVenueIdentifierReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1)) {
          goto LABEL_120;
        }
        PBReaderRecallMark();
        -[GEOPDVenueInfo _addNoFlagsVenueFeatureId:](a1, v38);
        goto LABEL_74;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_83;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        id v6 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v42 = *v20;
          unint64_t v43 = *(void *)(v3 + v42);
          if (v43 == -1 || v43 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
            *(void *)(v3 + v42) = v43 + 1;
            v41 |= (unint64_t)(v44 & 0x7F) << v39;
            if (v44 < 0)
            {
              v39 += 7;
              BOOL v29 = v40++ >= 9;
              if (v29)
              {
                LODWORD(v41) = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_89:
        uint64_t v58 = 68;
        goto LABEL_94;
      case 4:
        if (!v33) {
          goto LABEL_83;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) != 0)
        {
          char v59 = PBReaderSkipValueWithTag();
          id v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v59 & 1) == 0) {
            goto LABEL_121;
          }
          char v60 = 8 * *(unsigned char *)(a1 + 76);
          goto LABEL_99;
        }
        char v48 = PBReaderPlaceMark();
        id v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v48 & 1) == 0) {
          goto LABEL_121;
        }
        int v38 = objc_alloc_init(GEOPDVenueItemList);
        if (!GEOPDVenueItemListReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1)) {
          goto LABEL_120;
        }
        PBReaderRecallMark();
        uint64_t v49 = 32;
        goto LABEL_68;
      case 6:
        if (!v33) {
          goto LABEL_83;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) != 0)
        {
          char v61 = PBReaderSkipValueWithTag();
          id v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v61 & 1) == 0) {
            goto LABEL_121;
          }
          char v60 = 4 * *(unsigned char *)(a1 + 76);
LABEL_99:
          v7 += v60 >> 7;
LABEL_100:
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_84;
        }
        char v50 = PBReaderPlaceMark();
        id v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v50 & 1) == 0) {
          goto LABEL_121;
        }
        int v38 = objc_alloc_init(GEOPDLocatedInsideInfo);
        if (GEOPDLocatedInsideInfoReadAllFrom((uint64_t)v38, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v49 = 40;
LABEL_68:
          unsigned int v51 = *(void **)(a1 + v49);
          *(void *)(a1 + v49) = v38;

          --v7;
          goto LABEL_100;
        }
LABEL_120:

LABEL_121:
        int v66 = 0;
        uint64_t v67 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_103:
        if (v68) {
LABEL_104:
        }
          *(unsigned char *)(a1 + v67[30]) |= 4u;
        if (v71 || (v66 & 1) == 0)
        {
          *(unsigned char *)(a1 + v67[30]) |= 0x40u;
          *(unsigned char *)(a1 + v67[30]) |= 0x10u;
          *(unsigned char *)(a1 + v67[30]) |= 0x20u;
          *(unsigned char *)(a1 + v67[30]) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            int v62 = *v19++;
            char v63 = 64;
            switch(v62)
            {
              case 0:
                goto LABEL_113;
              case 1:
                goto LABEL_112;
              case 4:
                char v63 = 16;
                goto LABEL_112;
              case 6:
                char v63 = 32;
                goto LABEL_112;
              case 7:
                char v63 = 8;
LABEL_112:
                *(unsigned char *)(a1 + v67[30]) |= v63;
                break;
              default:
                continue;
            }
          }
        }
LABEL_113:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v71)
        {
          char v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 7:
        if (!v33 || (*(unsigned char *)(a1 + 76) & 8) != 0) {
          goto LABEL_83;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        int v38 = objc_alloc_init(GEOPDFilterElementInfo);
        if (!GEOPDFilterElementInfoReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1)) {
          goto LABEL_120;
        }
        PBReaderRecallMark();
        -[GEOPDVenueInfo _addNoFlagsFilterElement:](a1, v38);
LABEL_74:

        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        id v6 = (int *)MEMORY[0x1E4F940E0];
        goto LABEL_84;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_83;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        id v6 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v54 = *v20;
          unint64_t v55 = *(void *)(v3 + v54);
          if (v55 == -1 || v55 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v22) + v55);
            *(void *)(v3 + v54) = v55 + 1;
            v41 |= (unint64_t)(v56 & 0x7F) << v52;
            if (v56 < 0)
            {
              v52 += 7;
              BOOL v29 = v53++ >= 9;
              if (v29)
              {
                LODWORD(v41) = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_93:
        uint64_t v58 = 72;
LABEL_94:
        *(_DWORD *)(a1 + v58) = v41;
        goto LABEL_84;
      default:
        if ((v68 & 1) == 0 || (*(unsigned char *)(a1 + 76) & 4) != 0)
        {
LABEL_83:
          char v57 = PBReaderSkipValueWithTag();
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          id v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v57 & 1) == 0)
          {
            int v66 = 0;
            goto LABEL_102;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v45 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v46 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v45;
          }
          int v47 = PBUnknownFieldAdd();
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          id v6 = (int *)MEMORY[0x1E4F940E0];
          if (!v47)
          {
            int v66 = 0;
            uint64_t v67 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
            goto LABEL_104;
          }
        }
LABEL_84:
        if (!(v69 & 1 | (v7 != 0))) {
          goto LABEL_101;
        }
        continue;
    }
  }
}

void sub_189389654(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893897E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189389974(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938A1BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDVenueInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 48);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDVenueIdentifier readAll:](*(void *)(*((void *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  -[GEOPDVenueItemList readAll:](*(void *)(a1 + 32), 1);
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 24);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        -[GEOPDFilterElementInfo readAll:](*(void *)(*((void *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDVenueInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDVenueInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDVenueInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDVenueInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDVenueInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDVenueInfoCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18938B24C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDVenueInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_175:
    BOOL v76 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v76;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_175;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      unint64_t v10 = *(void *)&a1[v9];
      if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
        break;
      }
      char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v10 + 1;
      v8 |= (unint64_t)(v11 & 0x7F) << v6;
      if ((v11 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v12 = v7++ >= 9;
      if (v12)
      {
        unint64_t v8 = 0;
        int v13 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v13 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v14 = v8 & 7;
    if (v13 || v14 == 4) {
      goto LABEL_175;
    }
    switch((v8 >> 3))
    {
      case 1u:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDVenueIdentifierIsValid(a1)) {
          goto LABEL_179;
        }
        goto LABEL_173;
      case 2u:
        if ((v8 & 7) != 0) {
          goto LABEL_179;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          unint64_t v18 = *(void *)&a1[v17];
          if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
            goto LABEL_171;
          }
          unint64_t v19 = v18 + 1;
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_174;
        }
      case 4u:
        if (v14 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_179;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          if (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
          {
            char v22 = 0;
            unsigned int v23 = 0;
            unint64_t v24 = 0;
            while (1)
            {
              uint64_t v25 = *v2;
              unint64_t v26 = *(void *)&a1[v25];
              if (v26 == -1 || v26 >= *(void *)&a1[*v3]) {
                break;
              }
              char v27 = *(unsigned char *)(*(void *)&a1[*v5] + v26);
              *(void *)&a1[v25] = v26 + 1;
              v24 |= (unint64_t)(v27 & 0x7F) << v22;
              if ((v27 & 0x80) == 0) {
                goto LABEL_46;
              }
              v22 += 7;
              BOOL v12 = v23++ >= 9;
              if (v12)
              {
                unint64_t v24 = 0;
                int v28 = a1[*v4];
                goto LABEL_48;
              }
            }
            a1[*v4] = 1;
LABEL_46:
            int v28 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v24 = 0;
            }
LABEL_48:
            int v29 = v24 & 7;
            if (!v28 && v29 != 4)
            {
              if ((v24 >> 3) == 2)
              {
                if (v29 != 2) {
                  goto LABEL_178;
                }
              }
              else
              {
                if ((v24 >> 3) != 1)
                {
                  if (!PBReaderSkipValueWithTag()) {
                    goto LABEL_178;
                  }
                  continue;
                }
                if (v29 != 2) {
                  goto LABEL_178;
                }
              }
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_178;
              }
              continue;
            }
          }
          goto LABEL_101;
        }
      case 6u:
        if (v14 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_179;
        }
        [a1 position];
        [a1 length];
LABEL_64:
        while (2)
        {
          if (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
          {
            char v31 = 0;
            unsigned int v32 = 0;
            unint64_t v33 = 0;
            while (1)
            {
              uint64_t v34 = *v2;
              unint64_t v35 = *(void *)&a1[v34];
              if (v35 == -1 || v35 >= *(void *)&a1[*v3]) {
                break;
              }
              char v36 = *(unsigned char *)(*(void *)&a1[*v5] + v35);
              *(void *)&a1[v34] = v35 + 1;
              v33 |= (unint64_t)(v36 & 0x7F) << v31;
              if ((v36 & 0x80) == 0) {
                goto LABEL_74;
              }
              v31 += 7;
              BOOL v12 = v32++ >= 9;
              if (v12)
              {
                unint64_t v33 = 0;
                int v37 = a1[*v4];
                goto LABEL_76;
              }
            }
            a1[*v4] = 1;
LABEL_74:
            int v37 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v33 = 0;
            }
LABEL_76:
            if (!v37 && (v33 & 7) != 4)
            {
              if ((v33 >> 3) == 2)
              {
                if ((v33 & 7) == 0)
                {
                  unsigned int v44 = 0;
                  while (1)
                  {
                    uint64_t v45 = *v2;
                    unint64_t v46 = *(void *)&a1[v45];
                    if (v46 == -1 || v46 >= *(void *)&a1[*v3]) {
                      break;
                    }
                    unint64_t v47 = v46 + 1;
                    int v48 = *(char *)(*(void *)&a1[*v5] + v46);
                    *(void *)&a1[v45] = v47;
                    if (v48 < 0)
                    {
                      BOOL v21 = v44++ > 8;
                      if (!v21) {
                        continue;
                      }
                    }
                    goto LABEL_64;
                  }
LABEL_98:
                  a1[*v4] = 1;
                  continue;
                }
              }
              else
              {
                if ((v33 >> 3) != 1)
                {
                  if ((PBReaderSkipValueWithTag() & 1) == 0) {
                    goto LABEL_178;
                  }
                  continue;
                }
                if ((v33 & 7) == 0)
                {
                  unsigned int v39 = 0;
                  while (1)
                  {
                    uint64_t v40 = *v2;
                    unint64_t v41 = *(void *)&a1[v40];
                    if (v41 == -1 || v41 >= *(void *)&a1[*v3]) {
                      goto LABEL_98;
                    }
                    unint64_t v42 = v41 + 1;
                    int v43 = *(char *)(*(void *)&a1[*v5] + v41);
                    *(void *)&a1[v40] = v42;
                    if (v43 < 0)
                    {
                      BOOL v21 = v39++ > 8;
                      if (!v21) {
                        continue;
                      }
                    }
                    goto LABEL_64;
                  }
                }
              }
              goto LABEL_178;
            }
          }
          break;
        }
LABEL_101:
        int v49 = a1[*v4];
        PBReaderRecallMark();
        if (v49) {
          goto LABEL_179;
        }
        goto LABEL_173;
      case 7u:
        if (v14 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_179;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_106:
        if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
          goto LABEL_172;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        unint64_t v52 = 0;
        while (1)
        {
          uint64_t v53 = *v2;
          unint64_t v54 = *(void *)&a1[v53];
          if (v54 == -1 || v54 >= *(void *)&a1[*v3]) {
            break;
          }
          char v55 = *(unsigned char *)(*(void *)&a1[*v5] + v54);
          *(void *)&a1[v53] = v54 + 1;
          v52 |= (unint64_t)(v55 & 0x7F) << v50;
          if ((v55 & 0x80) == 0) {
            goto LABEL_116;
          }
          v50 += 7;
          BOOL v12 = v51++ >= 9;
          if (v12)
          {
            unint64_t v52 = 0;
            int v56 = a1[*v4];
            goto LABEL_118;
          }
        }
        a1[*v4] = 1;
LABEL_116:
        int v56 = a1[*v4];
        if (a1[*v4]) {
          unint64_t v52 = 0;
        }
LABEL_118:
        int v57 = v52 & 7;
        if (v56 || v57 == 4)
        {
LABEL_172:
          int v75 = a1[*v4];
          PBReaderRecallMark();
          if (v75) {
            goto LABEL_179;
          }
LABEL_173:
          PBReaderRecallMark();
LABEL_174:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_175;
          }
          continue;
        }
        if ((v52 >> 3) != 2)
        {
          if ((v52 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_178;
            }
            goto LABEL_106;
          }
          if (v57 == 2 && PBReaderPlaceMark() && GEOPDVenueIdentifierIsValid(a1)) {
            goto LABEL_162;
          }
          goto LABEL_178;
        }
        if (v57 == 2 && PBReaderPlaceMark())
        {
          [a1 position];
          [a1 length];
          while (1)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_161;
            }
            char v59 = 0;
            unsigned int v60 = 0;
            unint64_t v61 = 0;
            while (1)
            {
              uint64_t v62 = *v2;
              unint64_t v63 = *(void *)&a1[v62];
              if (v63 == -1 || v63 >= *(void *)&a1[*v3]) {
                break;
              }
              char v64 = *(unsigned char *)(*(void *)&a1[*v5] + v63);
              *(void *)&a1[v62] = v63 + 1;
              v61 |= (unint64_t)(v64 & 0x7F) << v59;
              if ((v64 & 0x80) == 0) {
                goto LABEL_141;
              }
              v59 += 7;
              BOOL v12 = v60++ >= 9;
              if (v12)
              {
                unint64_t v61 = 0;
                int v65 = a1[*v4];
                goto LABEL_143;
              }
            }
            a1[*v4] = 1;
LABEL_141:
            int v65 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v61 = 0;
            }
LABEL_143:
            int v66 = v61 & 7;
            if (v65 || v66 == 4)
            {
LABEL_161:
              int v69 = a1[*v4];
              PBReaderRecallMark();
              if (v69) {
                goto LABEL_178;
              }
LABEL_162:
              PBReaderRecallMark();
              goto LABEL_106;
            }
            unint64_t v68 = v61 >> 3;
            if ((v61 >> 3) == 3) {
              break;
            }
            if (v68 == 2)
            {
              if (v66 != 2) {
                goto LABEL_177;
              }
              goto LABEL_155;
            }
            if (v68 == 1)
            {
              if (v66 != 2) {
                goto LABEL_177;
              }
LABEL_155:
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_177;
              }
            }
            else if (!PBReaderSkipValueWithTag())
            {
LABEL_177:
              PBReaderRecallMark();
              goto LABEL_178;
            }
          }
          if (v66 != 2) {
            goto LABEL_177;
          }
          goto LABEL_155;
        }
LABEL_178:
        PBReaderRecallMark();
LABEL_179:
        PBReaderRecallMark();
        return 0;
      case 8u:
        if ((v8 & 7) != 0) {
          goto LABEL_179;
        }
        unsigned int v70 = 0;
        while (1)
        {
          uint64_t v71 = *v2;
          unint64_t v72 = *(void *)&a1[v71];
          if (v72 == -1 || v72 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v73 = v72 + 1;
          int v74 = *(char *)(*(void *)&a1[*v5] + v72);
          *(void *)&a1[v71] = v73;
          if (v74 < 0)
          {
            BOOL v21 = v70++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_174;
        }
LABEL_171:
        a1[*v4] = 1;
        goto LABEL_174;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_179;
        }
        goto LABEL_174;
    }
  }
}

void sub_18938C09C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938C410(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDVenueInfoFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        unint64_t v13 = *(void *)&v3[v12];
        if (v13 == -1 || v13 >= *(void *)&v3[*v5]) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v13 + 1;
        v11 |= (unint64_t)(v14 & 0x7F) << v9;
        if ((v14 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v16 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v16 = 0;
      }
      else {
        char v16 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v17 = 1;
      }
      else {
        BOOL v17 = (v16 & 7) == 4;
      }
      if (v17) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v18 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v19 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v18;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v20 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_18938CFA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDVenueInfoFilterIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

void sub_18938D360(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVenueItemListReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        unsigned __int8 v15 = v14 | v7;
        unsigned __int8 v48 = v14 & ~(_BYTE)v7 | v8;
        if (((v14 | v7) | v9)) {
          char v16 = 0;
        }
        else {
          char v16 = a3;
        }
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        id v18 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_58;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_58:
      int v46 = 1;
      goto LABEL_59;
    }
    unint64_t v29 = v22 >> 3;
    BOOL v30 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      char v31 = v16;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 != 2) {
      break;
    }
    if (v30 && (*(unsigned char *)(a1 + 52) & 2) == 0)
    {
      int v37 = PBReaderReadString();
      if (v37) {
        -[GEOPDVenueItemList _addNoFlagsItem:](a1, v37);
      }

      goto LABEL_56;
    }
LABEL_52:
    char v41 = PBReaderSkipValueWithTag();
    id v18 = (int *)MEMORY[0x1E4F940C8];
    if ((v41 & 1) == 0)
    {
      int v46 = 0;
LABEL_59:
      unint64_t v47 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
      goto LABEL_60;
    }
LABEL_57:
    if (!((v15 | v48) & 1 | (v10 != 0))) {
      goto LABEL_58;
    }
  }
  if (v29 != 1)
  {
    if ((v48 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v38 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unsigned int v39 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v38;
      }
      int v40 = PBUnknownFieldAdd();
      id v18 = (int *)MEMORY[0x1E4F940C8];
      if (!v40)
      {
        int v46 = 0;
        unint64_t v47 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        goto LABEL_61;
      }
      goto LABEL_57;
    }
    goto LABEL_52;
  }
  if (!v30) {
    goto LABEL_52;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) == 0)
  {
    uint64_t v35 = PBReaderReadString();
    char v36 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v35;

    id v18 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_57;
  }
  if (PBReaderSkipValueWithTag())
  {
    v10 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
LABEL_56:
    id v18 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_57;
  }
  int v46 = 0;
  unint64_t v47 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  id v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_60:
  if ((v48 & 1) == 0) {
    goto LABEL_62;
  }
LABEL_61:
  *(unsigned char *)(a1 + v47[39]) |= 1u;
LABEL_62:
  if (v15 & 1 | ((v46 & 1) == 0))
  {
    *(unsigned char *)(a1 + v47[39]) |= 4u;
    *(unsigned char *)(a1 + v47[39]) |= 2u;
    goto LABEL_71;
  }
  if (v16)
  {
    while (1)
    {
      int v43 = *v16++;
      int v42 = v43;
      if (v43 == 1) {
        break;
      }
      if (v42 == 2)
      {
LABEL_67:
        *(unsigned char *)(a1 + v47[39]) |= v42;
      }
      else if (!v42)
      {
        goto LABEL_71;
      }
    }
    LOBYTE(v42) = 4;
    goto LABEL_67;
  }
LABEL_71:
  if (v46)
  {
    unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
    if ((v15 & 1) == 0) {
      return v3;
    }
LABEL_75:
    unsigned int v44 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v15) {
      goto LABEL_75;
    }
  }
  return v3;
}

void sub_18938D9D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938DE6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVenueItemListReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDVenueItemListReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDVenueItemListReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDVenueItemListReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDVenueItemListReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18938E0D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938E314(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938E560(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938E874(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVenueLabelReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v47 = v15 | v8;
        if ((v16 | v9)) {
          BOOL v17 = 0;
        }
        else {
          BOOL v17 = a3;
        }
        BOOL v50 = v16;
        char v48 = v16 | v15 | v8;
        char v49 = (v17 == 0) | v16;
        id v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        char v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_65;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_65:
      int v46 = 1;
      goto LABEL_66;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v50;
    if ((v49 & 1) == 0)
    {
      int v32 = v17;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 3)
    {
      if (!v31) {
        goto LABEL_55;
      }
      if ((*(unsigned char *)(a1 + 60) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_81;
        }
        char v41 = *(unsigned char *)(a1 + 60) << 6;
        goto LABEL_63;
      }
      uint64_t v36 = PBReaderReadString();
      uint64_t v37 = 24;
      goto LABEL_48;
    }
    if (v30 == 2) {
      break;
    }
    if (v30 == 1)
    {
      if (!v31) {
        goto LABEL_55;
      }
      if ((*(unsigned char *)(a1 + 60) & 8) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_81;
        }
        char v41 = 16 * *(unsigned char *)(a1 + 60);
        goto LABEL_63;
      }
      uint64_t v36 = PBReaderReadString();
      uint64_t v37 = 40;
      goto LABEL_48;
    }
    if (v47 & 1) == 0 || (*(unsigned char *)(a1 + 60))
    {
LABEL_55:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_81;
      }
      goto LABEL_64;
    }
    if (!*(void *)(a1 + 16))
    {
      id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      int v40 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v39;
    }
    if (!PBUnknownFieldAdd())
    {
      int v46 = 0;
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_67;
    }
LABEL_64:
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if (!(v48 & 1 | (v10 != 0))) {
      goto LABEL_65;
    }
  }
  if (!v31) {
    goto LABEL_55;
  }
  if ((*(unsigned char *)(a1 + 60) & 4) == 0)
  {
    uint64_t v36 = PBReaderReadString();
    uint64_t v37 = 32;
LABEL_48:
    id v38 = *(void **)(a1 + v37);
    *(void *)(a1 + v37) = v36;

    --v10;
    goto LABEL_64;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v41 = 32 * *(unsigned char *)(a1 + 60);
LABEL_63:
    v10 += v41 >> 7;
    goto LABEL_64;
  }
LABEL_81:
  int v46 = 0;
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
  if ((v47 & 1) == 0) {
    goto LABEL_68;
  }
LABEL_67:
  *(unsigned char *)(a1 + 60) |= 1u;
LABEL_68:
  if (v50 || (v46 & 1) == 0)
  {
    *(unsigned char *)(a1 + 60) |= 8u;
    *(unsigned char *)(a1 + 60) |= 4u;
    *(unsigned char *)(a1 + 60) |= 2u;
  }
  else if (v17)
  {
    while (1)
    {
      int v42 = *v17++;
      char v43 = 8;
      switch(v42)
      {
        case 0:
          goto LABEL_75;
        case 1:
          goto LABEL_74;
        case 2:
          char v43 = 4;
          goto LABEL_74;
        case 3:
          char v43 = 2;
LABEL_74:
          *(unsigned char *)(a1 + 60) |= v43;
          break;
        default:
          continue;
      }
    }
  }
LABEL_75:
  if (v46) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v50)
  {
    unsigned int v44 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18938EEF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938F004(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938F3B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVenueLabelReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDVenueLabelReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDVenueLabelReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDVenueLabelReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDVenueLabelReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18938F618(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18938F7D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDVenueLabelIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_18938F9E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDVenueLevelReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    int v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          unint64_t v14 = *(void *)&v5[v13];
          if (v14 == -1 || v14 >= *(void *)&v5[*v7]) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v16 = v11++ >= 9;
          if (v16)
          {
            unint64_t v12 = 0;
            int v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v17 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v17 || (v12 & 7) == 4) {
          break;
        }
        unint64_t v19 = v12 >> 3;
        if ((v12 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_54;
          }
          char v26 = objc_alloc_init(GEOPDVenueLabel);
          if (!GEOPDVenueLabelReadAllFrom((uint64_t)v26, v5, a3))
          {

            goto LABEL_54;
          }
          PBReaderRecallMark();
          int v27 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v26;
        }
        else if (v19 == 2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          *(unsigned char *)(a1 + 36) |= 2u;
          while (1)
          {
            uint64_t v31 = *v6;
            unint64_t v32 = *(void *)&v5[v31];
            if (v32 == -1 || v32 >= *(void *)&v5[*v7]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v5[*v9] + v32);
            *(void *)&v5[v31] = v32 + 1;
            v30 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0) {
              goto LABEL_48;
            }
            v28 += 7;
            BOOL v16 = v29++ >= 9;
            if (v16)
            {
              LODWORD(v30) = 0;
              goto LABEL_50;
            }
          }
          v5[*v8] = 1;
LABEL_48:
          if (v5[*v8]) {
            LODWORD(v30) = 0;
          }
LABEL_50:
          *(_DWORD *)(a1 + 32) = v30;
        }
        else if (v19 == 1)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 36) |= 1u;
          while (1)
          {
            uint64_t v23 = *v6;
            unint64_t v24 = *(void *)&v5[v23];
            if (v24 == -1 || v24 >= *(void *)&v5[*v7]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
            *(void *)&v5[v23] = v24 + 1;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if ((v25 & 0x80) == 0) {
              goto LABEL_44;
            }
            v20 += 7;
            BOOL v16 = v21++ >= 9;
            if (v16)
            {
              uint64_t v22 = 0;
              goto LABEL_46;
            }
          }
          v5[*v8] = 1;
LABEL_44:
          if (v5[*v8]) {
            uint64_t v22 = 0;
          }
LABEL_46:
          *(void *)(a1 + 24) = v22;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v34 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v35 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v34;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_54;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v36 = v5[*v8] == 0;
  }
  else
  {
LABEL_54:
    BOOL v36 = 0;
  }
  objc_sync_exit(v5);

  return v36;
}

void sub_189390318(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchLocationScopeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (const float *)(a1 + 112);
  uint32x4_t v12 = (uint32x4_t)vld1q_dup_f32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  unsigned int v14 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A62E2C0), v13));
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v17 = v14 > 2;
        char v18 = v10 | v17;
        if (((v10 | v17) | v8)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        char v109 = (v19 == 0) | v18;
        char v20 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        char v108 = v10 | v17;
        break;
      default:
        ++v14;
LABEL_6:
        uint64_t v15 = v9;
        uint64_t v16 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_184;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_23;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_23:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_25:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_184:
      if (v18)
      {
        char v102 = 1;
        goto LABEL_186;
      }
      if (v19)
      {
        while (1)
        {
          int v103 = *v19++;
          int v104 = 0x2000;
          switch(v103)
          {
            case 0:
              goto LABEL_195;
            case 1:
              goto LABEL_194;
            case 2:
              int v104 = 0x4000;
              goto LABEL_194;
            case 6:
              int v104 = 0x8000;
              goto LABEL_194;
            case 11:
              int v104 = 0x10000;
LABEL_194:
              *(_DWORD *)(a1 + 112) |= v104;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_195;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v18;
    if ((v109 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_131;
        }
        if ((*(unsigned char *)(a1 + 113) & 0x20) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_200;
          }
          uint64_t v107 = objc_alloc_init(GEOLatLng);
          if (GEOLatLngReadAllFrom((uint64_t)v107, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v39 = 16;
            goto LABEL_74;
          }
          goto LABEL_199;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_200;
        }
        int v99 = (int)(*(_DWORD *)(a1 + 112) << 18) >> 31;
        goto LABEL_163;
      case 2:
        if (!v34) {
          goto LABEL_131;
        }
        if ((*(unsigned char *)(a1 + 113) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_200;
          }
          int v99 = (int)(*(_DWORD *)(a1 + 112) << 17) >> 31;
          goto LABEL_163;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_200;
        }
        uint64_t v107 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v107, (void *)v3)) {
          goto LABEL_199;
        }
        PBReaderRecallMark();
        uint64_t v39 = 32;
        goto LABEL_74;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        *(_DWORD *)(a1 + 112) |= 2u;
        uint64_t v41 = *v20;
        unint64_t v42 = *(void *)(v3 + v41);
        if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v43 = *(void *)(*(void *)(v3 + *v22) + v42);
          *(void *)(v3 + v41) = v42 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          uint64_t v43 = 0;
        }
        uint64_t v100 = 48;
        goto LABEL_169;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 112) |= 8u;
        while (2)
        {
          uint64_t v47 = *v20;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v22) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v30 = v45++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_136;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_136:
        uint64_t v96 = 80;
        goto LABEL_141;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 112) |= 4u;
        while (2)
        {
          uint64_t v53 = *v20;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v22) + v54);
            *(void *)(v3 + v53) = v55;
            v46 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              BOOL v30 = v52++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_140;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_140:
        uint64_t v96 = 76;
LABEL_141:
        *(_DWORD *)(a1 + v96) = v46;
        goto LABEL_183;
      case 6:
        if (!v34) {
          goto LABEL_131;
        }
        if ((*(unsigned char *)(a1 + 113) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_200;
          }
          int v99 = (int)(*(_DWORD *)(a1 + 112) << 16) >> 31;
LABEL_163:
          v7 += v99;
LABEL_164:
          char v18 = v108;
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_183:
          if (!(v18 & 1 | (v7 != 0))) {
            goto LABEL_184;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_200;
        }
        uint64_t v107 = objc_alloc_init(GEOPDSearchMultiMapRegion);
        if (GEOPDSearchMultiMapRegionReadAllFrom((uint64_t)v107, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v39 = 40;
LABEL_74:
          int v57 = *(void **)(a1 + v39);
          *(void *)(a1 + v39) = v107;
LABEL_106:

          --v7;
          goto LABEL_164;
        }
LABEL_199:

LABEL_200:
        char v102 = 0;
        char v18 = v108;
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_186:
        *(_DWORD *)(a1 + 112) |= 0x2000u;
        *(_DWORD *)(a1 + 112) |= 0x4000u;
        *(_DWORD *)(a1 + 112) |= 0x8000u;
        *(_DWORD *)(a1 + 112) |= 0x10000u;
        if (v102)
        {
LABEL_195:
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if (v18) {
            goto LABEL_196;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v18 & 1) == 0) {
          return v3;
        }
LABEL_196:
        uint64_t v105 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        *(_DWORD *)(a1 + 112) |= 1u;
        uint64_t v58 = *v20;
        unint64_t v59 = *(void *)(v3 + v58);
        if (v59 <= 0xFFFFFFFFFFFFFFF7 && v59 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v43 = *(void *)(*(void *)(v3 + *v22) + v59);
          *(void *)(v3 + v58) = v59 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          uint64_t v43 = 0;
        }
        uint64_t v100 = 24;
LABEL_169:
        *(void *)(a1 + v100) = v43;
        goto LABEL_183;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v62 = 0;
        *(_DWORD *)(a1 + 112) |= 0x800u;
        while (2)
        {
          uint64_t v63 = *v20;
          uint64_t v64 = *(void *)(v3 + v63);
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(v3 + *v22) + v64);
            *(void *)(v3 + v63) = v65;
            v62 |= (unint64_t)(v66 & 0x7F) << v60;
            if (v66 < 0)
            {
              v60 += 7;
              BOOL v30 = v61++ >= 9;
              if (v30)
              {
                uint64_t v62 = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v62 = 0;
        }
LABEL_145:
        BOOL v97 = v62 != 0;
        uint64_t v98 = 109;
        goto LABEL_154;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v69 = 0;
        *(_DWORD *)(a1 + 112) |= 0x1000u;
        while (2)
        {
          uint64_t v70 = *v20;
          uint64_t v71 = *(void *)(v3 + v70);
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(v3 + *v22) + v71);
            *(void *)(v3 + v70) = v72;
            v69 |= (unint64_t)(v73 & 0x7F) << v67;
            if (v73 < 0)
            {
              v67 += 7;
              BOOL v30 = v68++ >= 9;
              if (v30)
              {
                uint64_t v69 = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v69 = 0;
        }
LABEL_149:
        BOOL v97 = v69 != 0;
        uint64_t v98 = 110;
        goto LABEL_154;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v76 = 0;
        *(_DWORD *)(a1 + 112) |= 0x400u;
        while (2)
        {
          uint64_t v77 = *v20;
          uint64_t v78 = *(void *)(v3 + v77);
          unint64_t v79 = v78 + 1;
          if (v78 == -1 || v79 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v80 = *(unsigned char *)(*(void *)(v3 + *v22) + v78);
            *(void *)(v3 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              BOOL v30 = v75++ >= 9;
              if (v30)
              {
                uint64_t v76 = 0;
                goto LABEL_153;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v76 = 0;
        }
LABEL_153:
        BOOL v97 = v76 != 0;
        uint64_t v98 = 108;
LABEL_154:
        *(unsigned char *)(a1 + v98) = v97;
        goto LABEL_183;
      case 11:
        if (!v34) {
          goto LABEL_131;
        }
        if ((*(unsigned char *)(a1 + 114) & 1) == 0)
        {
          uint64_t v81 = PBReaderReadString();
          int v57 = *(void **)(a1 + 56);
          *(void *)(a1 + 56) = v81;
          goto LABEL_106;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_200;
        }
        int v99 = (int)(*(_DWORD *)(a1 + 112) << 15) >> 31;
        goto LABEL_163;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        *(_DWORD *)(a1 + 112) |= 0x10u;
        uint64_t v82 = *v20;
        unint64_t v83 = *(void *)(v3 + v82);
        if (v83 <= 0xFFFFFFFFFFFFFFFBLL && v83 + 4 <= *(void *)(v3 + *v6))
        {
          int v84 = *(_DWORD *)(*(void *)(v3 + *v22) + v83);
          *(void *)(v3 + v82) = v83 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          int v84 = 0;
        }
        uint64_t v101 = 84;
        goto LABEL_182;
      case 13:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        *(_DWORD *)(a1 + 112) |= 0x20u;
        uint64_t v85 = *v20;
        unint64_t v86 = *(void *)(v3 + v85);
        if (v86 <= 0xFFFFFFFFFFFFFFFBLL && v86 + 4 <= *(void *)(v3 + *v6))
        {
          int v84 = *(_DWORD *)(*(void *)(v3 + *v22) + v86);
          *(void *)(v3 + v85) = v86 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          int v84 = 0;
        }
        uint64_t v101 = 88;
        goto LABEL_182;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        *(_DWORD *)(a1 + 112) |= 0x40u;
        uint64_t v87 = *v20;
        unint64_t v88 = *(void *)(v3 + v87);
        if (v88 <= 0xFFFFFFFFFFFFFFFBLL && v88 + 4 <= *(void *)(v3 + *v6))
        {
          int v84 = *(_DWORD *)(*(void *)(v3 + *v22) + v88);
          *(void *)(v3 + v87) = v88 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          int v84 = 0;
        }
        uint64_t v101 = 92;
        goto LABEL_182;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        *(_DWORD *)(a1 + 112) |= 0x80u;
        uint64_t v89 = *v20;
        unint64_t v90 = *(void *)(v3 + v89);
        if (v90 <= 0xFFFFFFFFFFFFFFFBLL && v90 + 4 <= *(void *)(v3 + *v6))
        {
          int v84 = *(_DWORD *)(*(void *)(v3 + *v22) + v90);
          *(void *)(v3 + v89) = v90 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          int v84 = 0;
        }
        uint64_t v101 = 96;
        goto LABEL_182;
      case 16:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        *(_DWORD *)(a1 + 112) |= 0x100u;
        uint64_t v91 = *v20;
        unint64_t v92 = *(void *)(v3 + v91);
        if (v92 <= 0xFFFFFFFFFFFFFFFBLL && v92 + 4 <= *(void *)(v3 + *v6))
        {
          int v84 = *(_DWORD *)(*(void *)(v3 + *v22) + v92);
          *(void *)(v3 + v91) = v92 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          int v84 = 0;
        }
        uint64_t v101 = 100;
        goto LABEL_182;
      case 17:
        if (v8)
        {
          *(_DWORD *)(a1 + 112) |= 0x200u;
          uint64_t v93 = *v20;
          unint64_t v94 = *(void *)(v3 + v93);
          if (v94 <= 0xFFFFFFFFFFFFFFFBLL && v94 + 4 <= *(void *)(v3 + *v6))
          {
            int v84 = *(_DWORD *)(*(void *)(v3 + *v22) + v94);
            *(void *)(v3 + v93) = v94 + 4;
          }
          else
          {
            *(unsigned char *)(v3 + *v21) = 1;
            int v84 = 0;
          }
          uint64_t v101 = 104;
LABEL_182:
          *(_DWORD *)(a1 + v101) = v84;
        }
        else
        {
LABEL_131:
          char v95 = PBReaderSkipValueWithTag();
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          char v18 = v108;
          if ((v95 & 1) == 0)
          {
LABEL_198:
            char v102 = 0;
            goto LABEL_186;
          }
        }
        goto LABEL_183;
      default:
        int v40 = PBReaderSkipValueWithTag();
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        char v18 = v108;
        if (!v40) {
          goto LABEL_198;
        }
        goto LABEL_183;
    }
  }
}

void sub_189391DE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189391EF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchLocationScopeReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchLocationScopeReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 64) = [v6 position];
      *(_DWORD *)(a1 + 68) = [v6 length];
      unint64_t Specified = GEOPDSearchLocationScopeReadSpecified(a1, (unint64_t)v6, (int *)&GEOPDSearchLocationScopeReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189392070(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189392404(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893927BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchMultiMapRegionReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          char v18 = objc_alloc_init(GEOMapRegion);
          if (!GEOMapRegionReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          -[GEOPDSearchMultiMapRegion addMapRegion:](a1, v18);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    BOOL v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_1893935E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchTaggedSpanReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    char v14 = 0;
  }
  else {
    char v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  int v16 = (int *)MEMORY[0x1E4F940E8];
  BOOL v17 = (int *)MEMORY[0x1E4F940C8];
  char v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_62;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_62:
      if (v13)
      {
        char v41 = 1;
        goto LABEL_72;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            int v43 = *v14++;
            int v42 = v43;
            if (v43 != 1 && v42 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_73;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v15)
    {
      int v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 != 2)
    {
      if (v29 != 1)
      {
        int v38 = PBReaderSkipValueWithTag();
        BOOL v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v38) {
          goto LABEL_70;
        }
        goto LABEL_58;
      }
      if (v30)
      {
        if ((*(unsigned char *)(a1 + 44) & 1) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 16;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_71;
        }
        v9 -= *(unsigned char *)(a1 + 44) & 1;
LABEL_57:
        BOOL v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_58:
        if (v9) {
          char v40 = 1;
        }
        else {
          char v40 = v13;
        }
        if ((v40 & 1) == 0) {
          goto LABEL_62;
        }
        continue;
      }
LABEL_51:
      char v39 = PBReaderSkipValueWithTag();
      BOOL v17 = (int *)MEMORY[0x1E4F940C8];
      if ((v39 & 1) == 0)
      {
LABEL_70:
        char v41 = 0;
        goto LABEL_72;
      }
      goto LABEL_58;
    }
    break;
  }
  if (!v30) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) == 0)
  {
    uint64_t v35 = PBReaderReadString();
    uint64_t v36 = 24;
LABEL_48:
    int v37 = *(void **)(a1 + v36);
    *(void *)(a1 + v36) = v35;

    BOOL v17 = (int *)MEMORY[0x1E4F940C8];
    --v9;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_57;
  }
LABEL_71:
  char v41 = 0;
  BOOL v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v41)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if (!v13) {
      return v3;
    }
    goto LABEL_74;
  }
  unint64_t v3 = 0;
  if (v13)
  {
LABEL_74:
    char v44 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189393FB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939408C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchTaggedSpanReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchTaggedSpanReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 32) = [v6 position];
      *(_DWORD *)(a1 + 36) = [v6 length];
      unint64_t Specified = GEOPDSearchTaggedSpanReadSpecified(a1, (unint64_t)v6, (int *)&GEOPDSearchTaggedSpanReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)char v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189394208(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939438C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893944E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189395430(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAccessPointCorrectionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        int v17 = v16 & ~v11 | v9;
        int v18 = v16 | v11;
        if (((v16 | v11) | v8)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = v7 != 0;
        int v22 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_68;
        }
        char v48 = v17;
        int v49 = v21 | v18 | v17;
        uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v24 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v23)) {
      goto LABEL_66;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v20;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      if (v26++ >= 9)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_66:
      int v22 = 1;
      goto LABEL_67;
    }
    unint64_t v35 = v27 >> 3;
    BOOL v36 = v18;
    if (!((v19 == 0) | v18 & 1))
    {
      int v37 = v19;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    if (v35 == 3)
    {
      if (!v36 || (*(unsigned char *)(a1 + 60) & 4) != 0)
      {
LABEL_64:
        int v22 = PBReaderSkipValueWithTag();
        if ((v22 & v49 & 1) == 0) {
          goto LABEL_67;
        }
        goto LABEL_65;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_84;
      }
      char v41 = objc_alloc_init(GEORPEditedAccessPoint);
      if (!GEORPEditedAccessPointReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
        goto LABEL_83;
      }
      PBReaderRecallMark();
      -[GEORPAccessPointCorrections _addNoFlagsEdited:](a1, v41);
      goto LABEL_56;
    }
    if (v35 == 2) {
      break;
    }
    if (v35 == 1)
    {
      if (!v36 || (*(unsigned char *)(a1 + 60) & 2) != 0) {
        goto LABEL_64;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_84;
      }
      char v41 = objc_alloc_init(GEORoadAccessPoint);
      if (!GEORoadAccessPointReadAllFrom((uint64_t)v41, (void *)v3)) {
        goto LABEL_83;
      }
      PBReaderRecallMark();
      -[GEORPAccessPointCorrections _addNoFlagsAdded:](a1, v41);
      goto LABEL_56;
    }
    if (v48 & 1) == 0 || (*(unsigned char *)(a1 + 60)) {
      goto LABEL_64;
    }
    if (!*(void *)(a1 + 16))
    {
      id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      int v43 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v42;
    }
    int v22 = PBUnknownFieldAdd();
    if (!v22) {
      goto LABEL_69;
    }
LABEL_62:
    if ((v49 & 1) == 0) {
      goto LABEL_66;
    }
LABEL_65:
    uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
      goto LABEL_66;
    }
  }
  if (!v36 || (*(unsigned char *)(a1 + 60) & 8) != 0) {
    goto LABEL_64;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_84;
  }
  char v41 = objc_alloc_init(GEORoadAccessPoint);
  if (GEORoadAccessPointReadAllFrom((uint64_t)v41, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEORPAccessPointCorrections _addNoFlagsRemoved:](a1, v41);
LABEL_56:

    goto LABEL_62;
  }
LABEL_83:

LABEL_84:
  int v22 = 0;
LABEL_67:
  LOBYTE(v17) = v48;
LABEL_68:
  if (v17) {
LABEL_69:
  }
    *(unsigned char *)(a1 + 60) |= 1u;
  if (v18 & 1 | ((v22 & 1) == 0))
  {
    *(unsigned char *)(a1 + 60) |= 2u;
    *(unsigned char *)(a1 + 60) |= 8u;
    *(unsigned char *)(a1 + 60) |= 4u;
  }
  else if (v19)
  {
    while (1)
    {
      int v44 = *v19++;
      char v45 = 2;
      switch(v44)
      {
        case 0:
          goto LABEL_77;
        case 1:
          goto LABEL_76;
        case 2:
          char v45 = 8;
          goto LABEL_76;
        case 3:
          char v45 = 4;
LABEL_76:
          *(unsigned char *)(a1 + 60) |= v45;
          break;
        default:
          continue;
      }
    }
  }
LABEL_77:
  if (v22)
  {
    unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
    if ((v18 & 1) == 0) {
      return v3;
    }
LABEL_81:
    uint64_t v46 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v18) {
      goto LABEL_81;
    }
  }
  return v3;
}

void sub_189395DC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189396188(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189396F78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPAccessPointCorrectionsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v2 = a1[3];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v26;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v26 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v25 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v4);
  }

  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v7 = a1[5];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v22;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v21 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
    }
    while (v9);
  }

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v12 = a1[4];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v18;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v18 != v15) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend(*(id *)(*((void *)&v17 + 1) + 8 * v16++), "readAll:", 1, (void)v17);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
    }
    while (v14);
  }
}

unint64_t GEORPAccessPointCorrectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPAccessPointCorrectionsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPAccessPointCorrectionsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPAccessPointCorrectionsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPAccessPointCorrectionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPAccessPointCorrectionsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189397340(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAccessPointCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPAccessPointCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893973A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAccessPointCorrectionsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_31;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_31;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2 || v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORoadAccessPointIsValid(a1)) {
          goto LABEL_32;
        }
LABEL_28:
        PBReaderRecallMark();
        goto LABEL_30;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_32;
      }
LABEL_30:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_31;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEORPEditedAccessPointIsValid(a1))
    {
LABEL_32:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_28;
  }
LABEL_31:
  BOOL v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

BOOL GEORPEditedAccessPointIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_31;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_31;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2 || v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORoadAccessPointIsValid(a1)) {
          goto LABEL_32;
        }
LABEL_28:
        PBReaderRecallMark();
        goto LABEL_30;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_32;
      }
LABEL_30:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_31;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCorrectedStringIsValid(a1))
    {
LABEL_32:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_28;
  }
LABEL_31:
  BOOL v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

void sub_189397B00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPAccessPointCorrectionsIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(unsigned char *)(a1 + 60) & 0x1E) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 4) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 32);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEORPEditedAccessPointIsDirty(*(os_unfair_lock_s **)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEORPAccessPointCorrectionsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPAccessPointCorrectionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189398440(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189398890(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAddToMapFeedbackReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_34:
          *(unsigned char *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            long long v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189399274(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAddToMapFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPAddToMapFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893992D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAddToMapFeedbackIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

void sub_1893999E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAddressCorrectionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 76)), (uint16x4_t)0xFFFFFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 76) & 1)+ ((*(unsigned char *)(a1 + 76) & 0x20) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v8)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        int v20 = (int *)MEMORY[0x1E4F940E8];
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_86;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_86:
      int v51 = 1;
      goto LABEL_87;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      unint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 2:
        if (!v34) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 76) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_105;
          }
          int v39 = objc_alloc_init(GEORPFeedbackAddressFields);
          if (GEORPFeedbackAddressFieldsReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v40 = 32;
            goto LABEL_70;
          }
          goto LABEL_104;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_105;
        }
        char v46 = 32 * *(unsigned char *)(a1 + 76);
        goto LABEL_83;
      case 3:
        if (!v34) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 76) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_105;
          }
          char v46 = 16 * *(unsigned char *)(a1 + 76);
          goto LABEL_83;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_105;
        }
        int v39 = objc_alloc_init(GEORPCorrectedCoordinate);
        if (!GEORPCorrectedCoordinateReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_104;
        }
        PBReaderRecallMark();
        uint64_t v40 = 40;
        goto LABEL_70;
      case 4:
        if (!v34) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_105;
          }
          char v46 = 8 * *(unsigned char *)(a1 + 76);
          goto LABEL_83;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_105;
        }
        int v39 = objc_alloc_init(GEORPMapLocation);
        if (!GEORPMapLocationReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_104;
        }
        PBReaderRecallMark();
        uint64_t v40 = 48;
        goto LABEL_70;
      case 5:
        if (!v34) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 76) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_105;
          }
          char v46 = *(unsigned char *)(a1 + 76) << 6;
          goto LABEL_83;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_105;
        }
        int v39 = objc_alloc_init(GEORPAccessPointCorrections);
        if (!GEORPAccessPointCorrectionsReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_104;
        }
        PBReaderRecallMark();
        uint64_t v40 = 24;
        goto LABEL_70;
      case 6:
        if (!v34) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_105;
          }
          char v46 = 4 * *(unsigned char *)(a1 + 76);
LABEL_83:
          v7 += v46 >> 7;
LABEL_84:
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
          if (!(v54 & 1 | (v7 != 0))) {
            goto LABEL_86;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_105;
        }
        int v39 = objc_alloc_init(GEORPFeedbackAddressFields);
        if (GEORPFeedbackAddressFieldsReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v40 = 56;
LABEL_70:
          int v44 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
          goto LABEL_84;
        }
LABEL_104:

LABEL_105:
        int v51 = 0;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_87:
        unsigned int v52 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
        if (v53) {
LABEL_88:
        }
          *(unsigned char *)(a1 + v52[303]) |= 1u;
        if (v56 || (v51 & 1) == 0)
        {
          *(unsigned char *)(a1 + v52[303]) |= 4u;
          *(unsigned char *)(a1 + v52[303]) |= 8u;
          *(unsigned char *)(a1 + v52[303]) |= 0x10u;
          *(unsigned char *)(a1 + v52[303]) |= 2u;
          *(unsigned char *)(a1 + v52[303]) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            int v47 = *v19++;
            char v48 = 4;
            switch(v47)
            {
              case 0:
                goto LABEL_98;
              case 2:
                goto LABEL_97;
              case 3:
                char v48 = 8;
                goto LABEL_97;
              case 4:
                char v48 = 16;
                goto LABEL_97;
              case 5:
                char v48 = 2;
                goto LABEL_97;
              case 6:
                char v48 = 32;
LABEL_97:
                *(unsigned char *)(a1 + v52[303]) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_98:
        if (v51) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v56)
        {
          int v49 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v53 & 1) == 0 || (*(unsigned char *)(a1 + 76))
        {
LABEL_71:
          char v45 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v45 & 1) == 0)
          {
            int v51 = 0;
            goto LABEL_87;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v51 = 0;
            unsigned int v52 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
            goto LABEL_88;
          }
        }
        goto LABEL_85;
    }
  }
}

void sub_18939A338(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939A4A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939A618(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939A788(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939B044(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPAddressCorrectionsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  uint64_t v2 = *(void **)(a1 + 56);

  return [v2 readAll:1];
}

unint64_t GEORPAddressCorrectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPAddressCorrectionsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPAddressCorrectionsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPAddressCorrectionsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPAddressCorrectionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPAddressCorrectionsCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18939B264(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAddressCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPAddressCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18939B2C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAddressCorrectionsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 2u:
        case 6u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPFeedbackAddressFieldsIsValid(a1)) {
            goto LABEL_36;
          }
          goto LABEL_39;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCorrectedCoordinateIsValid(a1)) {
            goto LABEL_39;
          }
          goto LABEL_36;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPMapLocationIsValid(a1)) {
            goto LABEL_39;
          }
          goto LABEL_36;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPAccessPointCorrectionsIsValid(a1)) {
            goto LABEL_39;
          }
LABEL_36:
          PBReaderRecallMark();
          goto LABEL_37;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_39:
            PBReaderRecallMark();
            return 0;
          }
LABEL_37:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_38;
          }
          break;
      }
    }
  }
LABEL_38:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_18939B744(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPAddressCorrectionsIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v2 = *(unsigned char *)(a1 + 76);
  if ((v2 & 0x40) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 76) & 4) != 0)
  {
    if (GEORPFeedbackAddressFieldsIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 76);
  }
  if ((v2 & 8) != 0)
  {
    if (GEORPCorrectedCoordinateIsDirty(*(void *)(a1 + 40))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 76);
  }
  if ((v2 & 0x10) == 0) {
    goto LABEL_11;
  }
  if (GEORPMapLocationIsDirty(*(void *)(a1 + 48))) {
    return 1;
  }
  char v2 = *(unsigned char *)(a1 + 76);
LABEL_11:
  if ((v2 & 2) != 0)
  {
    if (GEORPAccessPointCorrectionsIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 76);
  }
  if ((v2 & 0x20) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 56);

  return GEORPFeedbackAddressFieldsIsDirty(v4);
}

os_unfair_lock_s *GEORPAddressCorrectionsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEORPAddressCorrectionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18939BC34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939BFD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939C2B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAddressFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFDFFFEFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 72) & 2) != 0));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 2;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v61 = v18;
        char v62 = v19 | v18;
        if ((v19 | v9)) {
          int v20 = 0;
        }
        else {
          int v20 = a3;
        }
        uint64_t v21 = (int *)MEMORY[0x1E4F940E8];
        char v63 = (v20 == 0) | v19;
        BOOL v64 = v19;
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        char v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_91;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_91:
      int v59 = 1;
      goto LABEL_92;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v64;
    if ((v63 & 1) == 0)
    {
      int v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 72) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_109;
          }
          uint64_t v40 = objc_alloc_init(GEORPAddressCorrections);
          if (GEORPAddressCorrectionsReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
          {
            PBReaderRecallMark();
            uint64_t v41 = 24;
            goto LABEL_73;
          }
          goto LABEL_108;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_109;
        }
        char v54 = 32 * *(unsigned char *)(a1 + 72);
        goto LABEL_88;
      case 2:
        if (!v35) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_109;
          }
          char v54 = 4 * *(unsigned char *)(a1 + 72);
          goto LABEL_88;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_109;
        }
        uint64_t v40 = objc_alloc_init(GEOPDPlace);
        if (!GEOPDPlaceReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_108;
        }
        PBReaderRecallMark();
        uint64_t v41 = 48;
        goto LABEL_73;
      case 3:
        if ((v9 & 1) == 0) {
          goto LABEL_74;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        while (2)
        {
          uint64_t v48 = *v21;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v23) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v31 = v46++ >= 9;
              if (v31)
              {
                LODWORD(v47) = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v47) = 0;
        }
LABEL_79:
        *(_DWORD *)(a1 + 68) = v47;
        goto LABEL_90;
      case 4:
        if (!v35) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 72) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_109;
          }
          char v54 = 16 * *(unsigned char *)(a1 + 72);
          goto LABEL_88;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_109;
        }
        uint64_t v40 = objc_alloc_init(GEORPPersonalizedMapsContext);
        if (!GEORPPersonalizedMapsContextReadAllFrom((uint64_t)v40, (void *)v3)) {
          goto LABEL_108;
        }
        PBReaderRecallMark();
        uint64_t v41 = 32;
        goto LABEL_73;
      case 5:
        if (!v35) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_109;
          }
          char v54 = 8 * *(unsigned char *)(a1 + 72);
LABEL_88:
          v8 += v54 >> 7;
LABEL_89:
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_90:
          if (!(v62 & 1 | (v8 != 0))) {
            goto LABEL_91;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_109;
        }
        uint64_t v40 = objc_alloc_init(GEOPDPlaceRequest);
        if (GEOPDPlaceRequestReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v41 = 40;
LABEL_73:
          unsigned int v52 = *(void **)(a1 + v41);
          *(void *)(a1 + v41) = v40;

          --v8;
          goto LABEL_89;
        }
LABEL_108:

LABEL_109:
        int v59 = 0;
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_92:
        char v60 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
        if (v61) {
LABEL_93:
        }
          *(unsigned char *)(a1 + v60[314]) |= 2u;
        if (v64 || (v59 & 1) == 0)
        {
          *(unsigned char *)(a1 + v60[314]) |= 4u;
          *(unsigned char *)(a1 + v60[314]) |= 0x20u;
          *(unsigned char *)(a1 + v60[314]) |= 8u;
          *(unsigned char *)(a1 + v60[314]) |= 0x10u;
        }
        else if (v20)
        {
          while (1)
          {
            int v55 = *v20++;
            char v56 = 4;
            switch(v55)
            {
              case 0:
                goto LABEL_102;
              case 1:
                goto LABEL_101;
              case 2:
                char v56 = 32;
                goto LABEL_101;
              case 4:
                char v56 = 8;
                goto LABEL_101;
              case 5:
                char v56 = 16;
LABEL_101:
                *(unsigned char *)(a1 + v60[314]) |= v56;
                break;
              default:
                continue;
            }
          }
        }
LABEL_102:
        if (v59) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v64)
        {
          int v57 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v61 & 1) == 0 || (*(unsigned char *)(a1 + 72) & 2) != 0)
        {
LABEL_74:
          char v53 = PBReaderSkipValueWithTag();
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v59 = 0;
            goto LABEL_92;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v43 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v42;
          }
          int v44 = PBUnknownFieldAdd();
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v44)
          {
            int v59 = 0;
            char v60 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
            goto LABEL_93;
          }
        }
        goto LABEL_90;
    }
  }
}

void sub_18939CC2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939CF44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939D0B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939D9C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPAddressFeedbackCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  char v2 = *(void **)(a1 + 40);

  return [v2 readAll:1];
}

unint64_t GEORPAddressFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPAddressFeedbackReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPAddressFeedbackReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPAddressFeedbackReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPAddressFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPAddressFeedbackCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18939DBD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAddressFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPAddressFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18939DC34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAddressFeedbackIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPAddressCorrectionsIsValid(a1)) {
            goto LABEL_44;
          }
          goto LABEL_49;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1)) {
            goto LABEL_49;
          }
          goto LABEL_44;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_49;
          }
          unsigned int v17 = 0;
          break;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPersonalizedMapsContextIsValid(a1)) {
            goto LABEL_49;
          }
          goto LABEL_44;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRequestIsValid(a1)) {
            goto LABEL_49;
          }
LABEL_44:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_49:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_45;
      }
      a1[*v4] = 1;
LABEL_45:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEORPPersonalizedMapsContextIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_18939E354(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPAddressFeedbackIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v2 = *(unsigned char *)(a1 + 72);
  if ((v2 & 0x40) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 72) & 4) != 0)
  {
    if (GEORPAddressCorrectionsIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 72);
  }
  if ((v2 & 0x20) == 0) {
    goto LABEL_8;
  }
  if (GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
    return 1;
  }
  char v2 = *(unsigned char *)(a1 + 72);
LABEL_8:
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 0x10) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 40);

  return (uint64_t)GEOPDPlaceRequestIsDirty(v4);
}

os_unfair_lock_s *GEORPAddressFeedbackIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPAddressFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEORPAddressFeedbackClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasPlaceRequest]
    && ([a1 placeRequest],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    unsigned int v7 = [a1 placeRequest];
    id v8 = (id)[v7 copy];

    GEOPDPlaceRequestClearSensitiveFields(v8, a2, 0);
    [a1 setPlaceRequest:v8];
  }
  else
  {
    id v8 = [a1 placeRequest];
    [v8 clearSensitiveFields:a2];
  }
}

void *GEORPAddressFeedbackHasSensitiveFields(void *result, uint64_t a2)
{
  if (result)
  {
    id v3 = [result placeRequest];
    uint64_t HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_18939E958(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939ED30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939F038(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAppAttestInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFCFFFEFFFFFFFDLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 > 2;
        char v15 = v14 & ~(_BYTE)v10 | v7;
        unsigned __int8 v16 = v14 | v10;
        char v50 = v15;
        char v51 = v16 | v15;
        if ((v16 | v8)) {
          uint64_t v17 = 0;
        }
        else {
          uint64_t v17 = a3;
        }
        char v52 = (v17 == 0) | v16;
        BOOL v53 = v16;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_69;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_69:
      int v49 = 1;
      goto LABEL_70;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v53;
    if ((v52 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 24;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_87;
        }
        char v44 = *(unsigned char *)(a1 + 68) << 6;
        goto LABEL_67;
      case 2:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          uint64_t v37 = PBReaderReadData();
          uint64_t v38 = 40;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_87;
        }
        char v44 = 16 * *(unsigned char *)(a1 + 68);
        goto LABEL_67;
      case 3:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) == 0)
        {
          uint64_t v37 = PBReaderReadData();
          uint64_t v38 = 32;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_87;
        }
        char v44 = 32 * *(unsigned char *)(a1 + 68);
        goto LABEL_67;
      case 4:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 48;
LABEL_56:
          id v42 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          --v9;
LABEL_68:
          if (!(v51 & 1 | (v9 != 0))) {
            goto LABEL_69;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v44 = 8 * *(unsigned char *)(a1 + 68);
LABEL_67:
          v9 += v44 >> 7;
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_68;
        }
LABEL_87:
        int v49 = 0;
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_70:
        if (v50) {
LABEL_71:
        }
          *(unsigned char *)(a1 + 68) |= 1u;
        if (v53 || (v49 & 1) == 0)
        {
          *(unsigned char *)(a1 + 68) |= 2u;
          *(unsigned char *)(a1 + 68) |= 8u;
          *(unsigned char *)(a1 + 68) |= 4u;
          *(unsigned char *)(a1 + 68) |= 0x10u;
        }
        else if (v17)
        {
          while (1)
          {
            int v46 = *v17++;
            char v45 = 2;
            switch(v46)
            {
              case 0:
                goto LABEL_81;
              case 1:
                goto LABEL_79;
              case 2:
                char v45 = 8;
                goto LABEL_79;
              case 3:
                char v45 = 4;
                goto LABEL_79;
              case 4:
                char v45 = 16;
LABEL_79:
                *(unsigned char *)(a1 + 68) |= v45;
                break;
              default:
                continue;
            }
          }
        }
LABEL_81:
        if (v49) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v53)
        {
          uint64_t v47 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v50 & 1) == 0 || (*(unsigned char *)(a1 + 68))
        {
LABEL_57:
          char v43 = PBReaderSkipValueWithTag();
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v43 & 1) == 0)
          {
            int v49 = 0;
            goto LABEL_70;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v40 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v39;
          }
          int v41 = PBUnknownFieldAdd();
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v41)
          {
            int v49 = 0;
            goto LABEL_71;
          }
        }
        goto LABEL_68;
    }
  }
}

void sub_18939F7C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939F930(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18939FAA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A0200(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAppAttestInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPAppAttestInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPAppAttestInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPAppAttestInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPAppAttestInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1893A0390(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAppAttestInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPAppAttestInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893A03F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAppAttestInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_32;
          }
          goto LABEL_28;
        case 2u:
          if (v15 == 2) {
            goto LABEL_28;
          }
          goto LABEL_32;
        case 3u:
          if (v15 == 2) {
            goto LABEL_28;
          }
          goto LABEL_32;
        case 4u:
          if (v15 != 2) {
            goto LABEL_32;
          }
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_32:
            BOOL v17 = 0;
            goto LABEL_31;
          }
LABEL_29:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_30;
          }
          break;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_32;
          }
          goto LABEL_29;
      }
    }
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v17;
}

void sub_1893A07EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAppAttestInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0x3E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_1893A0B10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A0E00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A10C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCategoryCorrectionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        int v15 = v14 | v7;
        int v16 = v14 & ~v7 | v8;
        if (((v14 | v7) | v9)) {
          BOOL v17 = 0;
        }
        else {
          BOOL v17 = a3;
        }
        BOOL v18 = v10 != 0;
        unint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        int v20 = 1;
        char v21 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_58;
        }
        char v49 = v16;
        int v22 = v15 | v18 | v16;
        unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  do
  {
    if (*(unsigned char *)(v3 + *v21)) {
      break;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v19;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_23;
      }
      v24 += 7;
      if (v25++ >= 9)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_23:
    int v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v26 = 0;
    }
LABEL_25:
    if (v32 || (v26 & 7) == 4) {
      break;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v15;
    if (!((v17 == 0) | v15 & 1))
    {
      BOOL v36 = v17;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    if (v34 == 2)
    {
      if (!v35 || (*(unsigned char *)(a1 + 52) & 4) != 0)
      {
LABEL_54:
        int v20 = PBReaderSkipValueWithTag();
        char v21 = (int *)MEMORY[0x1E4F940C8];
        if ((v20 & v22 & 1) == 0) {
          goto LABEL_57;
        }
        continue;
      }
      uint64_t v40 = PBReaderReadString();
      if (v40) {
        -[GEORPCategoryCorrections _addNoFlagsRemoved:](a1, v40);
      }
      goto LABEL_46;
    }
    if (v34 == 1)
    {
      if (!v35 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
        goto LABEL_54;
      }
      uint64_t v40 = PBReaderReadString();
      if (v40) {
        -[GEORPCategoryCorrections _addNoFlagsAdded:](a1, v40);
      }
LABEL_46:

      char v21 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_52;
    }
    if (v49 & 1) == 0 || (*(unsigned char *)(a1 + 52)) {
      goto LABEL_54;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      id v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    char v43 = PBUnknownFieldAdd();
    char v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v43 & 1) == 0)
    {
      int v20 = 0;
      goto LABEL_59;
    }
LABEL_52:
    if ((v22 & 1) == 0) {
      break;
    }
  }
  while (*(void *)(v3 + *v19) < *(void *)(v3 + *v6));
  int v20 = 1;
LABEL_57:
  LOBYTE(v16) = v49;
LABEL_58:
  if (v16) {
LABEL_59:
  }
    *(unsigned char *)(a1 + 52) |= 1u;
  if (v15 & 1 | ((v20 & 1) == 0))
  {
    *(unsigned char *)(a1 + 52) |= 2u;
    *(unsigned char *)(a1 + 52) |= 4u;
    goto LABEL_70;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        int v45 = *v17++;
        int v44 = v45;
        if (v45 == 1) {
          break;
        }
        if (v44 == 2)
        {
          char v46 = 4;
          goto LABEL_69;
        }
        if (!v44) {
          goto LABEL_70;
        }
      }
      char v46 = 2;
LABEL_69:
      *(unsigned char *)(a1 + 52) |= v46;
      continue;
    }
  }
LABEL_70:
  if (v20)
  {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
    if ((v15 & 1) == 0) {
      return v3;
    }
LABEL_74:
    uint64_t v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v15) {
      goto LABEL_74;
    }
  }
  return v3;
}

void sub_1893A192C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A22B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCategoryCorrectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPCategoryCorrectionsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPCategoryCorrectionsReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPCategoryCorrectionsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPCategoryCorrectionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1893A2440(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCategoryCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPCategoryCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893A24A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCategoryCorrectionsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v15 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

void sub_1893A2928(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCategoryCorrectionsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1893A2DC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A3150(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A3460(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPContainmentCorrectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 108) >> 3) & 1)
      + (*(unsigned char *)(a1 + 108) & 1)
      + ((*(unsigned __int8 *)(a1 + 108) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 108) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 > 1;
        int v15 = v14 & ~v10 | v9;
        int v16 = v14 | v10;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        if (((v14 | v10) | v7)) {
          BOOL v18 = 0;
        }
        else {
          BOOL v18 = a3;
        }
        int v88 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_121;
        }
        char v87 = v15;
        int v89 = (v8 != 0) | v16 | v15;
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v9;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v19)) {
      goto LABEL_119;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v17;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    int v30 = v23 & 7;
    if (v29 || v30 == 4)
    {
LABEL_119:
      int v88 = 1;
      goto LABEL_120;
    }
    unint64_t v32 = v23 >> 3;
    BOOL v33 = v16;
    if (!((v18 == 0) | v16 & 1))
    {
      unint64_t v34 = v18;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    if (v32 != 3) {
      break;
    }
    if (v33 && (*(unsigned char *)(a1 + 108) & 4) == 0)
    {
      if (v30 == 2)
      {
        if (!PBReaderPlaceMark()) {
          goto LABEL_136;
        }
        while (*(void *)(v3 + *v17) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v19))
        {
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v47 = 0;
          while (1)
          {
            uint64_t v48 = *v17;
            uint64_t v49 = *(void *)(v3 + v48);
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)(v3 + *v6)) {
              break;
            }
            char v51 = *(unsigned char *)(*(void *)(v3 + *v20) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v28 = v46++ >= 9;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_69;
          }
          *(unsigned char *)(v3 + *v19) = 1;
LABEL_69:
          PBRepeatedUInt64Add();
        }
LABEL_93:
        PBReaderRecallMark();
LABEL_117:
        if ((v89 & 1) == 0) {
          goto LABEL_119;
        }
        goto LABEL_118;
      }
      char v69 = 0;
      unsigned int v70 = 0;
      uint64_t v71 = 0;
      while (1)
      {
        uint64_t v72 = *v17;
        uint64_t v73 = *(void *)(v3 + v72);
        unint64_t v74 = v73 + 1;
        if (v73 == -1 || v74 > *(void *)(v3 + *v6)) {
          break;
        }
        char v75 = *(unsigned char *)(*(void *)(v3 + *v20) + v73);
        *(void *)(v3 + v72) = v74;
        v71 |= (unint64_t)(v75 & 0x7F) << v69;
        if (v75 < 0)
        {
          v69 += 7;
          BOOL v28 = v70++ >= 9;
          if (!v28) {
            continue;
          }
        }
        goto LABEL_116;
      }
LABEL_115:
      *(unsigned char *)(v3 + *v19) = 1;
LABEL_116:
      PBRepeatedUInt64Add();
      goto LABEL_117;
    }
LABEL_91:
    int v61 = PBReaderSkipValueWithTag();
    if ((v61 & v89 & 1) == 0)
    {
      int v88 = v61;
      goto LABEL_120;
    }
LABEL_118:
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
      goto LABEL_119;
    }
  }
  if (v32 != 2)
  {
    if (v32 == 1)
    {
      if (v33 && (*(unsigned char *)(a1 + 108) & 2) == 0)
      {
        if (v30 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_136;
          }
          while (*(void *)(v3 + *v17) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v19))
          {
            char v38 = 0;
            unsigned int v39 = 0;
            uint64_t v40 = 0;
            while (1)
            {
              uint64_t v41 = *v17;
              uint64_t v42 = *(void *)(v3 + v41);
              unint64_t v43 = v42 + 1;
              if (v42 == -1 || v43 > *(void *)(v3 + *v6)) {
                break;
              }
              char v44 = *(unsigned char *)(*(void *)(v3 + *v20) + v42);
              *(void *)(v3 + v41) = v43;
              v40 |= (unint64_t)(v44 & 0x7F) << v38;
              if (v44 < 0)
              {
                v38 += 7;
                BOOL v28 = v39++ >= 9;
                if (!v28) {
                  continue;
                }
              }
              goto LABEL_54;
            }
            *(unsigned char *)(v3 + *v19) = 1;
LABEL_54:
            PBRepeatedUInt64Add();
          }
          goto LABEL_93;
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v64 = 0;
        while (1)
        {
          uint64_t v65 = *v17;
          uint64_t v66 = *(void *)(v3 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(v3 + *v6)) {
            goto LABEL_115;
          }
          char v68 = *(unsigned char *)(*(void *)(v3 + *v20) + v66);
          *(void *)(v3 + v65) = v67;
          v64 |= (unint64_t)(v68 & 0x7F) << v62;
          if (v68 < 0)
          {
            v62 += 7;
            BOOL v28 = v63++ >= 9;
            if (!v28) {
              continue;
            }
          }
          goto LABEL_116;
        }
      }
    }
    else if ((v87 & 1) != 0 && (*(unsigned char *)(a1 + 108) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v59 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v60 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v59;
      }
      if (!PBUnknownFieldAdd())
      {
        int v88 = 0;
LABEL_122:
        *(unsigned char *)(a1 + 108) |= 1u;
        goto LABEL_123;
      }
      goto LABEL_117;
    }
    goto LABEL_91;
  }
  if (!v33 || (*(unsigned char *)(a1 + 108) & 8) != 0) {
    goto LABEL_91;
  }
  if (v30 != 2)
  {
    char v76 = 0;
    unsigned int v77 = 0;
    uint64_t v78 = 0;
    while (1)
    {
      uint64_t v79 = *v17;
      uint64_t v80 = *(void *)(v3 + v79);
      unint64_t v81 = v80 + 1;
      if (v80 == -1 || v81 > *(void *)(v3 + *v6)) {
        goto LABEL_115;
      }
      char v82 = *(unsigned char *)(*(void *)(v3 + *v20) + v80);
      *(void *)(v3 + v79) = v81;
      v78 |= (unint64_t)(v82 & 0x7F) << v76;
      if (v82 < 0)
      {
        v76 += 7;
        BOOL v28 = v77++ >= 9;
        if (!v28) {
          continue;
        }
      }
      goto LABEL_116;
    }
  }
  if (PBReaderPlaceMark())
  {
    while (*(void *)(v3 + *v17) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v19))
    {
      char v52 = 0;
      unsigned int v53 = 0;
      uint64_t v54 = 0;
      while (1)
      {
        uint64_t v55 = *v17;
        uint64_t v56 = *(void *)(v3 + v55);
        unint64_t v57 = v56 + 1;
        if (v56 == -1 || v57 > *(void *)(v3 + *v6)) {
          break;
        }
        char v58 = *(unsigned char *)(*(void *)(v3 + *v20) + v56);
        *(void *)(v3 + v55) = v57;
        v54 |= (unint64_t)(v58 & 0x7F) << v52;
        if (v58 < 0)
        {
          v52 += 7;
          BOOL v28 = v53++ >= 9;
          if (!v28) {
            continue;
          }
        }
        goto LABEL_84;
      }
      *(unsigned char *)(v3 + *v19) = 1;
LABEL_84:
      PBRepeatedUInt64Add();
    }
    goto LABEL_93;
  }
LABEL_136:
  int v88 = 0;
LABEL_120:
  LOBYTE(v15) = v87;
LABEL_121:
  if (v15) {
    goto LABEL_122;
  }
LABEL_123:
  if (v16 & 1 | ((v88 & 1) == 0))
  {
    *(unsigned char *)(a1 + 108) |= 2u;
    *(unsigned char *)(a1 + 108) |= 8u;
    *(unsigned char *)(a1 + 108) |= 4u;
  }
  else if (v18)
  {
    while (1)
    {
      int v83 = *v18++;
      char v84 = 2;
      switch(v83)
      {
        case 0:
          goto LABEL_130;
        case 1:
          goto LABEL_129;
        case 2:
          char v84 = 8;
          goto LABEL_129;
        case 3:
          char v84 = 4;
LABEL_129:
          *(unsigned char *)(a1 + 108) |= v84;
          break;
        default:
          continue;
      }
    }
  }
LABEL_130:
  if (v88)
  {
    unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
    if ((v16 & 1) == 0) {
      return v3;
    }
LABEL_134:
    uint64_t v85 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v16) {
      goto LABEL_134;
    }
  }
  return v3;
}

void sub_1893A40D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A4460(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A4F30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPContainmentCorrectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPContainmentCorrectionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = [v8 position];
  *(_DWORD *)(a1 + 100) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPContainmentCorrectionReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPContainmentCorrectionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPContainmentCorrectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_1893A50C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPContainmentCorrectionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPContainmentCorrectionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893A5124(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPContainmentCorrectionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_77;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_77;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_79;
          }
LABEL_56:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v38 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v39 = *v2;
              uint64_t v40 = *(void *)&a1[v39];
              unint64_t v41 = v40 + 1;
              if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
                break;
              }
              int v42 = *(char *)(*(void *)&a1[*v5] + v40);
              *(void *)&a1[v39] = v41;
              if (v42 < 0)
              {
                BOOL v13 = v38++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_56;
            }
            a1[*v4] = 1;
          }
          goto LABEL_75;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_79;
        }
        while (1)
        {
          uint64_t v23 = *v2;
          uint64_t v24 = *(void *)&a1[v23];
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
            goto LABEL_44;
          }
          int v26 = *(char *)(*(void *)&a1[*v5] + v24);
          *(void *)&a1[v23] = v25;
          if (v26 < 0)
          {
            unsigned int v27 = v15++;
            if (v27 <= 8) {
              continue;
            }
          }
          goto LABEL_76;
        }
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_79;
          }
LABEL_46:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v33 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v34 = *v2;
              uint64_t v35 = *(void *)&a1[v34];
              unint64_t v36 = v35 + 1;
              if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
                break;
              }
              int v37 = *(char *)(*(void *)&a1[*v5] + v35);
              *(void *)&a1[v34] = v36;
              if (v37 < 0)
              {
                BOOL v13 = v33++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_46;
            }
            a1[*v4] = 1;
          }
LABEL_75:
          PBReaderRecallMark();
          goto LABEL_76;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_79;
        }
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            goto LABEL_44;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            unsigned int v22 = v15++;
            if (v22 <= 8) {
              continue;
            }
          }
          goto LABEL_76;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_79;
      }
LABEL_76:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_77;
      }
    }
    if (v15 == 2)
    {
      if (!PBReaderPlaceMark())
      {
LABEL_79:
        PBReaderRecallMark();
        return 0;
      }
LABEL_66:
      while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
      {
        unsigned int v43 = a1[*v4];
        if (a1[*v4]) {
          break;
        }
        while (1)
        {
          uint64_t v44 = *v2;
          uint64_t v45 = *(void *)&a1[v44];
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
            break;
          }
          int v47 = *(char *)(*(void *)&a1[*v5] + v45);
          *(void *)&a1[v44] = v46;
          if (v47 < 0)
          {
            BOOL v13 = v43++ >= 9;
            if (!v13) {
              continue;
            }
          }
          goto LABEL_66;
        }
        a1[*v4] = 1;
      }
      goto LABEL_75;
    }
    if ((v8 & 7) != 0) {
      goto LABEL_79;
    }
    while (1)
    {
      uint64_t v28 = *v2;
      uint64_t v29 = *(void *)&a1[v28];
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
        break;
      }
      int v31 = *(char *)(*(void *)&a1[*v5] + v29);
      *(void *)&a1[v28] = v30;
      if (v31 < 0)
      {
        unsigned int v32 = v15++;
        if (v32 <= 8) {
          continue;
        }
      }
      goto LABEL_76;
    }
LABEL_44:
    a1[*v4] = 1;
    goto LABEL_76;
  }
LABEL_77:
  BOOL v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

void sub_1893A57AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPContainmentCorrectionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  BOOL v2 = (*(unsigned char *)(a1 + 108) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return v2;
}

void sub_1893A5B1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A5DF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A6074(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedStringReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v50 = v15 | v8;
        if ((v16 | v9)) {
          unint64_t v17 = 0;
        }
        else {
          unint64_t v17 = a3;
        }
        BOOL v53 = v16;
        char v51 = v16 | v15 | v8;
        char v52 = (v17 == 0) | v16;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_59;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_59:
      int v49 = 1;
      goto LABEL_60;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v53;
    if ((v52 & 1) == 0)
    {
      unsigned int v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (!v32) {
        goto LABEL_51;
      }
      if ((*(unsigned char *)(a1 + 52) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_77;
        }
        char v44 = 32 * *(unsigned char *)(a1 + 52);
        goto LABEL_57;
      }
      uint64_t v37 = PBReaderReadString();
      uint64_t v38 = 32;
      goto LABEL_44;
    }
    if (v50 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_51:
      char v43 = PBReaderSkipValueWithTag();
      uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if ((v43 & 1) == 0)
      {
        int v49 = 0;
        goto LABEL_60;
      }
      goto LABEL_58;
    }
    if (!*(void *)(a1 + 16))
    {
      id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      unint64_t v41 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v40;
    }
    int v42 = PBUnknownFieldAdd();
    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if (!v42)
    {
      int v49 = 0;
      goto LABEL_61;
    }
LABEL_58:
    if (!(v51 & 1 | (v10 != 0))) {
      goto LABEL_59;
    }
  }
  if (!v32) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0)
  {
    uint64_t v37 = PBReaderReadString();
    uint64_t v38 = 24;
LABEL_44:
    uint64_t v39 = *(void **)(a1 + v38);
    *(void *)(a1 + v38) = v37;

    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v44 = *(unsigned char *)(a1 + 52) << 6;
LABEL_57:
    v10 += v44 >> 7;
    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_58;
  }
LABEL_77:
  int v49 = 0;
  uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_60:
  if ((v50 & 1) == 0) {
    goto LABEL_62;
  }
LABEL_61:
  *(unsigned char *)(a1 + 52) |= 1u;
LABEL_62:
  if (v53 || (v49 & 1) == 0)
  {
    *(unsigned char *)(a1 + 52) |= 4u;
    *(unsigned char *)(a1 + 52) |= 2u;
    goto LABEL_71;
  }
  if (v17)
  {
    while (1)
    {
      int v46 = *v17++;
      int v45 = v46;
      if (v46 == 1) {
        break;
      }
      if (v45 == 2)
      {
LABEL_67:
        *(unsigned char *)(a1 + 52) |= v45;
      }
      else if (!v45)
      {
        goto LABEL_71;
      }
    }
    LOBYTE(v45) = 4;
    goto LABEL_67;
  }
LABEL_71:
  if (v49) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v53)
  {
    int v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1893A66B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A6C98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedStringReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPCorrectedStringReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPCorrectedStringReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPCorrectedStringReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPCorrectedStringReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1893A6E28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCorrectedStringReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPCorrectedStringReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893A6E8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedStringIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v15 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

void sub_1893A71F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCorrectedStringIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1893A74A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A76F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A7A54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCuratedCollectionContextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 92);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 88)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 100)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFAFFFEFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 100) & 8) != 0)+ ((*(unsigned char *)(a1 + 100) & 2) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        char v18 = v16 | v11;
        if (((v16 | v11) | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v82 = 1;
        char v21 = (int *)MEMORY[0x1E4F940C8];
        char v22 = v16 & ~(_BYTE)v11 | v9;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_114;
        }
        char v81 = v17;
        char v84 = v18 | v17;
        char v85 = (v19 == 0) | v18;
        unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        char v83 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_112;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_112:
      int v82 = 1;
      goto LABEL_113;
    }
    int v35 = v6;
    BOOL v36 = v21;
    unint64_t v37 = v26 >> 3;
    BOOL v38 = v18;
    if ((v85 & 1) == 0)
    {
      uint64_t v39 = v19;
      do
      {
        int v41 = *v39++;
        int v40 = v41;
        BOOL v38 = v41 != 0;
        if (v41) {
          BOOL v42 = v40 == v37;
        }
        else {
          BOOL v42 = 1;
        }
      }
      while (!v42);
    }
    switch((int)v37)
    {
      case 1:
        char v21 = v36;
        if ((v8 & 1) == 0) {
          goto LABEL_85;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        *(unsigned char *)(a1 + 100) |= 1u;
        char v6 = v35;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        while (1)
        {
          uint64_t v46 = *v20;
          uint64_t v47 = *(void *)(v3 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(v3 + *v6)) {
            break;
          }
          char v49 = *(unsigned char *)(*(void *)(v3 + *v23) + v47);
          *(void *)(v3 + v46) = v48;
          v45 |= (unint64_t)(v49 & 0x7F) << v43;
          if ((v49 & 0x80) == 0) {
            goto LABEL_91;
          }
          v43 += 7;
          BOOL v31 = v44++ >= 9;
          if (v31)
          {
            uint64_t v45 = 0;
            goto LABEL_93;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_91:
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v45 = 0;
        }
LABEL_93:
        *(void *)(a1 + 48) = v45;
        goto LABEL_87;
      case 2:
        char v21 = v36;
        if (!v38 || (*(unsigned char *)(a1 + 100) & 4) != 0) {
          goto LABEL_85;
        }
        char v6 = v35;
        if (v33 == 2)
        {
          int v53 = PBReaderPlaceMark();
          unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
          unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v53) {
            goto LABEL_133;
          }
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v21))
          {
            char v54 = 0;
            unsigned int v55 = 0;
            uint64_t v56 = 0;
            while (1)
            {
              uint64_t v57 = *v20;
              uint64_t v58 = *(void *)(v3 + v57);
              unint64_t v59 = v58 + 1;
              if (v58 == -1 || v59 > *(void *)(v3 + *v6)) {
                break;
              }
              char v60 = *(unsigned char *)(*(void *)(v3 + *v23) + v58);
              *(void *)(v3 + v57) = v59;
              v56 |= (unint64_t)(v60 & 0x7F) << v54;
              if (v60 < 0)
              {
                v54 += 7;
                BOOL v31 = v55++ >= 9;
                if (!v31) {
                  continue;
                }
              }
              goto LABEL_67;
            }
            *(unsigned char *)(v3 + *v21) = 1;
LABEL_67:
            PBRepeatedUInt64Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v70 = 0;
          unsigned int v71 = 0;
          uint64_t v72 = 0;
          unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
          unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v73 = *v20;
            uint64_t v74 = *(void *)(v3 + v73);
            unint64_t v75 = v74 + 1;
            if (v74 == -1 || v75 > *(void *)(v3 + *v6)) {
              break;
            }
            char v76 = *(unsigned char *)(*(void *)(v3 + *v23) + v74);
            *(void *)(v3 + v73) = v75;
            v72 |= (unint64_t)(v76 & 0x7F) << v70;
            if (v76 < 0)
            {
              v70 += 7;
              BOOL v31 = v71++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_111;
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_111:
          PBRepeatedUInt64Add();
        }
        goto LABEL_101;
      case 3:
        char v21 = v36;
        if (!v38) {
          goto LABEL_85;
        }
        char v6 = v35;
        if ((*(unsigned char *)(a1 + 100) & 0x20) == 0)
        {
          uint64_t v61 = PBReaderReadString();
          uint64_t v62 = 72;
          goto LABEL_77;
        }
        char v66 = PBReaderSkipValueWithTag();
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        if ((v66 & 1) == 0) {
          goto LABEL_133;
        }
        char v67 = 4 * *(unsigned char *)(a1 + 100);
        goto LABEL_100;
      case 4:
        char v21 = v36;
        if (!v38) {
          goto LABEL_85;
        }
        char v6 = v35;
        if ((*(unsigned char *)(a1 + 100) & 0x40) == 0)
        {
          uint64_t v61 = PBReaderReadString();
          uint64_t v62 = 80;
          goto LABEL_77;
        }
        char v68 = PBReaderSkipValueWithTag();
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        if ((v68 & 1) == 0) {
          goto LABEL_133;
        }
        char v67 = 2 * *(unsigned char *)(a1 + 100);
        goto LABEL_100;
      case 5:
        char v21 = v36;
        if (!v38) {
          goto LABEL_85;
        }
        char v6 = v35;
        if ((*(unsigned char *)(a1 + 100) & 0x10) == 0)
        {
          uint64_t v61 = PBReaderReadString();
          uint64_t v62 = 64;
LABEL_77:
          unsigned int v63 = *(void **)(a1 + v62);
          *(void *)(a1 + v62) = v61;

          --v7;
          goto LABEL_83;
        }
        char v69 = PBReaderSkipValueWithTag();
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        if ((v69 & 1) == 0) {
          goto LABEL_133;
        }
        char v67 = 8 * *(unsigned char *)(a1 + 100);
LABEL_100:
        v7 += v67 >> 7;
LABEL_101:
        char v18 = v83;
        goto LABEL_87;
      case 6:
        char v21 = v36;
        if (!v38 || (*(unsigned char *)(a1 + 100) & 8) != 0)
        {
LABEL_85:
          char v65 = PBReaderSkipValueWithTag();
          char v18 = v83;
LABEL_86:
          char v6 = v35;
          unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
          unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          if ((v65 & 1) == 0)
          {
            int v82 = 0;
            goto LABEL_113;
          }
LABEL_87:
          if (!(v84 & 1 | (v7 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_112;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_133;
        }
        uint64_t v64 = objc_alloc_init(GEORPFeedbackClientImageInfo);
        if (GEORPFeedbackClientImageInfoReadAllFrom((uint64_t)v64, (void *)v3, v10 & 1))
        {
          char v6 = v35;
          PBReaderRecallMark();
          -[GEORPCuratedCollectionContext _addNoFlagsImageInfo:](a1, v64);

LABEL_83:
          char v18 = v83;
          unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
          unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_87;
        }

LABEL_133:
        int v82 = 0;
        char v18 = v83;
LABEL_113:
        char v22 = v81;
LABEL_114:
        if (v22) {
LABEL_115:
        }
          *(unsigned char *)(a1 + 100) |= 2u;
        if (v18 & 1 | ((v82 & 1) == 0))
        {
          *(unsigned char *)(a1 + 100) |= 4u;
          *(unsigned char *)(a1 + 100) |= 0x20u;
          *(unsigned char *)(a1 + 100) |= 0x40u;
          *(unsigned char *)(a1 + 100) |= 0x10u;
          *(unsigned char *)(a1 + 100) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            int v77 = *v19++;
            char v78 = 4;
            switch(v77)
            {
              case 0:
                goto LABEL_125;
              case 2:
                goto LABEL_124;
              case 3:
                char v78 = 32;
                goto LABEL_124;
              case 4:
                char v78 = 64;
                goto LABEL_124;
              case 5:
                char v78 = 16;
                goto LABEL_124;
              case 6:
                char v78 = 8;
LABEL_124:
                *(unsigned char *)(a1 + 100) |= v78;
                break;
              default:
                continue;
            }
          }
        }
LABEL_125:
        if (v82)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_129:
          uint64_t v79 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v18) {
            goto LABEL_129;
          }
        }
        return v3;
      default:
        if ((v81 & 1) == 0 || (*(unsigned char *)(a1 + 100) & 2) != 0)
        {
          char v65 = PBReaderSkipValueWithTag();
          char v18 = v83;
          char v21 = v36;
          goto LABEL_86;
        }
        if (!*(void *)(a1 + 16))
        {
          id v50 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          char v51 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v50;
        }
        int v52 = PBUnknownFieldAdd();
        char v18 = v83;
        char v21 = v36;
        char v6 = v35;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        if (!v52)
        {
          int v82 = 0;
          goto LABEL_115;
        }
        goto LABEL_87;
    }
  }
}

void sub_1893A87E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A8954(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A8AC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A8C30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893A99C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPCuratedCollectionContextCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 56);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEORPCuratedCollectionContextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 92))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPCuratedCollectionContextReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = [v8 position];
  *(_DWORD *)(a1 + 92) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORPCuratedCollectionContextReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORPCuratedCollectionContextReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPCuratedCollectionContextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPCuratedCollectionContextCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_1893A9C58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCuratedCollectionContextReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPCuratedCollectionContextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893A9CBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCuratedCollectionContextIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_60;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0 && v17++ <= 8) {
              continue;
            }
            goto LABEL_46;
          }
        case 2u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_60:
              PBReaderRecallMark();
              return 0;
            }
LABEL_49:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v28 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v29 = *v2;
                uint64_t v30 = *(void *)&a1[v29];
                unint64_t v31 = v30 + 1;
                if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
                  break;
                }
                int v32 = *(char *)(*(void *)&a1[*v5] + v30);
                *(void *)&a1[v29] = v31;
                if (v32 < 0)
                {
                  BOOL v13 = v28++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_49;
              }
              a1[*v4] = 1;
            }
LABEL_44:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_60;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              uint64_t v24 = *(void *)&a1[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                break;
              }
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                unsigned int v27 = v15++;
                if (v27 <= 8) {
                  continue;
                }
              }
              goto LABEL_46;
            }
LABEL_45:
            a1[*v4] = 1;
          }
LABEL_46:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_58;
          }
          break;
        case 3u:
          if (v15 == 2) {
            goto LABEL_39;
          }
          goto LABEL_60;
        case 4u:
          if (v15 == 2) {
            goto LABEL_39;
          }
          goto LABEL_60;
        case 5u:
          if (v15 == 2) {
            goto LABEL_39;
          }
          goto LABEL_60;
        case 6u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPFeedbackClientImageInfoIsValid(a1)) {
            goto LABEL_44;
          }
          goto LABEL_60;
        default:
LABEL_39:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_60;
          }
          goto LABEL_46;
      }
    }
  }
LABEL_58:
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEORPFeedbackClientImageInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v15 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

void sub_1893AA4D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCuratedCollectionContextIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  BOOL v2 = *(unsigned __int8 *)(a1 + 100) > 3u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return v2;
}

void sub_1893AA9E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893AAE70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCuratedCollectionCorrectionsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1893AB910(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCuratedCollectionCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPCuratedCollectionCorrectionsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893AB974(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCuratedCollectionCorrectionsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

void sub_1893AC078(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCuratedCollectionFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v7)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        int v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_66;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_66:
      int v52 = 1;
      goto LABEL_67;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_57;
      }
      if ((*(unsigned char *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        uint64_t v39 = objc_alloc_init(GEORPCuratedCollectionContext);
        if (!GEORPCuratedCollectionContextReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_85;
        }
        PBReaderRecallMark();
        uint64_t v40 = 24;
LABEL_50:
        int v41 = *(void **)(a1 + v40);
        *(void *)(a1 + v40) = v39;

        --v8;
LABEL_64:
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_86;
      }
      char v46 = *(unsigned char *)(a1 + 52) << 6;
LABEL_63:
      v8 += v46 >> 7;
      goto LABEL_64;
    }
    if (v54 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_57:
      char v45 = PBReaderSkipValueWithTag();
      uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if ((v45 & 1) == 0)
      {
        int v52 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(void *)(a1 + 16))
    {
      id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      char v43 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v42;
    }
    int v44 = PBUnknownFieldAdd();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v44)
    {
      int v52 = 0;
      int v53 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v55 & 1 | (v8 != 0))) {
      goto LABEL_66;
    }
  }
  if (!v34) {
    goto LABEL_57;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_86;
    }
    char v46 = 32 * *(unsigned char *)(a1 + 52);
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_86;
  }
  uint64_t v39 = objc_alloc_init(GEORPCuratedCollectionCorrections);
  if (GEORPCuratedCollectionCorrectionsReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v40 = 32;
    goto LABEL_50;
  }
LABEL_85:

LABEL_86:
  int v52 = 0;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_67:
  int v53 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
  if ((v54 & 1) == 0) {
    goto LABEL_69;
  }
LABEL_68:
  *(unsigned char *)(a1 + v53[375]) |= 1u;
LABEL_69:
  if (v57 || (v52 & 1) == 0)
  {
    *(unsigned char *)(a1 + v53[375]) |= 2u;
    *(unsigned char *)(a1 + v53[375]) |= 4u;
    goto LABEL_79;
  }
  if (v19)
  {
    while (1)
    {
      int v49 = *v19++;
      int v48 = v49;
      if (v49 == 1) {
        break;
      }
      if (v48 == 2)
      {
        char v47 = 4;
LABEL_75:
        *(unsigned char *)(a1 + v53[375]) |= v47;
      }
      else if (!v48)
      {
        goto LABEL_79;
      }
    }
    char v47 = 2;
    goto LABEL_75;
  }
LABEL_79:
  if (v52) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v57)
  {
    id v50 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1893AC754(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893ACDCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCuratedCollectionFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPCuratedCollectionFeedbackReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPCuratedCollectionFeedbackReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPCuratedCollectionFeedbackReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPCuratedCollectionFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1893ACF88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCuratedCollectionFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPCuratedCollectionFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893ACFEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCuratedCollectionFeedbackIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCuratedCollectionContextIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCuratedCollectionCorrectionsIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1893AD380(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPCuratedCollectionFeedbackIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 2) != 0)
  {
    if (GEORPCuratedCollectionContextIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEORPCuratedCollectionFeedbackIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPCuratedCollectionFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1893AD698(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893AD914(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893ADB68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsCorrectionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFCFFFDFFFALL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 80) & 4) != 0)+ ((*(unsigned char *)(a1 + 80) & 2) != 0));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 3;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v62 = v18;
        char v63 = v19 | v18;
        if ((v19 | v9)) {
          int v20 = 0;
        }
        else {
          int v20 = a3;
        }
        char v64 = (v20 == 0) | v19;
        BOOL v65 = v19;
        uint64_t v21 = (int *)MEMORY[0x1E4F940E8];
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        char v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_92;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_92:
      int v60 = 1;
      goto LABEL_93;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v65;
    if ((v64 & 1) == 0)
    {
      int v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 80) & 8) == 0)
        {
          uint64_t v40 = PBReaderReadData();
          uint64_t v41 = 32;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        char v55 = 16 * *(unsigned char *)(a1 + 80);
        goto LABEL_89;
      case 2:
        if (!v35 || (*(unsigned char *)(a1 + 80) & 0x40) != 0) {
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_111;
        }
        char v45 = objc_alloc_init(GEORPSuggestedRouteIndex);
        if (!GEORPSuggestedRouteIndexReadAllFrom((uint64_t)v45, (void *)v3)) {
          goto LABEL_110;
        }
        PBReaderRecallMark();
        -[GEORPDirectionsCorrections _addNoFlagsProblematicRouteIndex:](a1, v45);
        goto LABEL_58;
      case 3:
        if (!v35 || (*(unsigned char *)(a1 + 80) & 0x10) != 0) {
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_111;
        }
        char v45 = objc_alloc_init(GEORPInstructionCorrection);
        if (!GEORPInstructionCorrectionReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1)) {
          goto LABEL_110;
        }
        PBReaderRecallMark();
        -[GEORPDirectionsCorrections _addNoFlagsInstructionCorrection:](a1, v45);
LABEL_58:

        goto LABEL_90;
      case 4:
        if (!v35) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x20) == 0)
        {
          uint64_t v40 = PBReaderReadString();
          uint64_t v41 = 48;
LABEL_62:
          char v46 = *(void **)(a1 + v41);
          *(void *)(a1 + v41) = v40;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        char v55 = 4 * *(unsigned char *)(a1 + 80);
        goto LABEL_89;
      case 5:
        if (!v35) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 80) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_111;
          }
          char v55 = 32 * *(unsigned char *)(a1 + 80);
LABEL_89:
          v8 += v55 >> 7;
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_111;
        }
        char v45 = objc_alloc_init(GEORPCorrectedCoordinate);
        if (GEORPCorrectedCoordinateReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          char v46 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v45;
LABEL_68:

          --v8;
LABEL_90:
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_91:
          if (!(v63 & 1 | (v8 != 0))) {
            goto LABEL_92;
          }
          continue;
        }
LABEL_110:

LABEL_111:
        int v60 = 0;
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_93:
        uint64_t v61 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
        if (v62) {
LABEL_94:
        }
          *(unsigned char *)(a1 + v61[383]) |= 2u;
        if (v65 || (v60 & 1) == 0)
        {
          *(unsigned char *)(a1 + v61[383]) |= 8u;
          *(unsigned char *)(a1 + v61[383]) |= 0x40u;
          *(unsigned char *)(a1 + v61[383]) |= 0x10u;
          *(unsigned char *)(a1 + v61[383]) |= 0x20u;
          *(unsigned char *)(a1 + v61[383]) |= 4u;
        }
        else if (v20)
        {
          while (1)
          {
            int v56 = *v20++;
            char v57 = 8;
            switch(v56)
            {
              case 0:
                goto LABEL_104;
              case 1:
                goto LABEL_103;
              case 2:
                char v57 = 64;
                goto LABEL_103;
              case 3:
                char v57 = 16;
                goto LABEL_103;
              case 4:
                char v57 = 32;
                goto LABEL_103;
              case 5:
                char v57 = 4;
LABEL_103:
                *(unsigned char *)(a1 + v61[383]) |= v57;
                break;
              default:
                continue;
            }
          }
        }
LABEL_104:
        if (v60) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v65)
        {
          uint64_t v58 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 6:
        if ((v9 & 1) == 0) {
          goto LABEL_77;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        *(unsigned char *)(a1 + 80) |= 1u;
        while (2)
        {
          uint64_t v50 = *v21;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v23) + v51);
            *(void *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v31 = v48++ >= 9;
              if (v31)
              {
                uint64_t v49 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v49 = 0;
        }
LABEL_82:
        *(unsigned char *)(a1 + 76) = v49 != 0;
        goto LABEL_91;
      default:
        if ((v62 & 1) == 0 || (*(unsigned char *)(a1 + 80) & 2) != 0)
        {
LABEL_77:
          char v54 = PBReaderSkipValueWithTag();
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v54 & 1) == 0)
          {
            int v60 = 0;
            goto LABEL_93;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v43 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v42;
          }
          int v44 = PBUnknownFieldAdd();
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v44)
          {
            int v60 = 0;
            uint64_t v61 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
            goto LABEL_94;
          }
        }
        goto LABEL_91;
    }
  }
}

void sub_1893AE4F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893AE8BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893AEC80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893AEDF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893AFB0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPDirectionsCorrectionsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v2 = a1[7];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v17 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v4);
  }

  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = a1[5];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * v11++), "readAll:", 1, (void)v13);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v9);
  }

  return [a1[3] readAll:1];
}

unint64_t GEORPDirectionsCorrectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPDirectionsCorrectionsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPDirectionsCorrectionsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPDirectionsCorrectionsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPDirectionsCorrectionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPDirectionsCorrectionsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1893AFE50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPDirectionsCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893AFEB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDirectionsCorrectionsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_48;
          }
          goto LABEL_30;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPSuggestedRouteIndexIsValid(a1)) {
            goto LABEL_48;
          }
          goto LABEL_35;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPInstructionCorrectionIsValid(a1)) {
            goto LABEL_48;
          }
          goto LABEL_35;
        case 4u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_48;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCorrectedCoordinateIsValid(a1)) {
            goto LABEL_48;
          }
LABEL_35:
          PBReaderRecallMark();
          continue;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_48;
          }
          unsigned int v17 = 0;
          break;
        default:
LABEL_30:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_48:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_36;
      }
      a1[*v4] = 1;
LABEL_36:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_1893B04CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPDirectionsCorrectionsIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 80);
  if (v2 > 7) {
    return 1;
  }
  if ((v2 & 4) != 0)
  {
    if (GEORPCorrectedCoordinateIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 80);
  }
  if ((v2 & 0x10) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v4 = *(id *)(a1 + 40);
  uint64_t v3 = [v4 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v5 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v4);
        }
        if (GEORPInstructionCorrectionIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_18;
        }
      }
      uint64_t v3 = [v4 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_18:

  return v3;
}

os_unfair_lock_s *GEORPDirectionsCorrectionsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPDirectionsCorrectionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1893B0D10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B1238(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B1508(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v6 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v15 = v11 != 0;
        char v16 = v15 & ~(_BYTE)v10 | v8;
        unsigned __int8 v17 = v15 | v10;
        char v61 = v16;
        char v62 = v17 | v16;
        if ((v17 | v6)) {
          uint64_t v18 = 0;
        }
        else {
          uint64_t v18 = a3;
        }
        uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        char v63 = (v18 == 0) | v17;
        BOOL v64 = v17;
        int v21 = (int *)MEMORY[0x1E4F940B8];
        BOOL v22 = (int *)MEMORY[0x1E4F940E0];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v8;
LABEL_8:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_10:
        ++v7;
        uint64_t v8 = v12;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v22) || *(unsigned char *)(v3 + *v20)) {
      goto LABEL_79;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v19;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v22)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v21) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_79:
      int v59 = 1;
      goto LABEL_80;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v64;
    if ((v63 & 1) == 0)
    {
      BOOL v35 = v18;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if ((v6 & 1) == 0) {
        goto LABEL_66;
      }
      char v41 = 0;
      unsigned int v42 = 0;
      uint64_t v43 = 0;
      *(unsigned char *)(a1 + 56) |= 1u;
      while (1)
      {
        uint64_t v44 = *v19;
        uint64_t v45 = *(void *)(v3 + v44);
        unint64_t v46 = v45 + 1;
        if (v45 == -1 || v46 > *(void *)(v3 + *v22)) {
          break;
        }
        char v47 = *(unsigned char *)(*(void *)(v3 + *v21) + v45);
        *(void *)(v3 + v44) = v46;
        v43 |= (unint64_t)(v47 & 0x7F) << v41;
        if ((v47 & 0x80) == 0) {
          goto LABEL_69;
        }
        v41 += 7;
        BOOL v30 = v42++ >= 9;
        if (v30)
        {
          LODWORD(v43) = 0;
          goto LABEL_71;
        }
      }
      *(unsigned char *)(v3 + *v20) = 1;
LABEL_69:
      if (*(unsigned char *)(v3 + *v20)) {
        LODWORD(v43) = 0;
      }
LABEL_71:
      *(_DWORD *)(a1 + 52) = v43;
      goto LABEL_78;
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_66;
      }
      if ((*(unsigned char *)(a1 + 56) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_99;
        }
        BOOL v39 = objc_alloc_init(GEORPDirectionsFeedbackContext);
        if (!GEORPDirectionsFeedbackContextReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1)) {
          goto LABEL_98;
        }
        PBReaderRecallMark();
        uint64_t v40 = 24;
LABEL_59:
        unsigned int v48 = *(void **)(a1 + v40);
        *(void *)(a1 + v40) = v39;

        --v7;
LABEL_77:
        unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940E0];
        goto LABEL_78;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_99;
      }
      char v53 = 32 * *(unsigned char *)(a1 + 56);
LABEL_76:
      v7 += v53 >> 7;
      goto LABEL_77;
    }
    if ((v61 & 1) == 0 || (*(unsigned char *)(a1 + 56) & 2) != 0)
    {
LABEL_66:
      char v52 = PBReaderSkipValueWithTag();
      BOOL v22 = (int *)MEMORY[0x1E4F940E0];
      unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
      if ((v52 & 1) == 0)
      {
        int v59 = 0;
        goto LABEL_80;
      }
      goto LABEL_78;
    }
    if (!*(void *)(a1 + 16))
    {
      id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      uint64_t v50 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v49;
    }
    int v51 = PBUnknownFieldAdd();
    unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
    BOOL v22 = (int *)MEMORY[0x1E4F940E0];
    if (!v51)
    {
      int v59 = 0;
      int v60 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
      goto LABEL_81;
    }
LABEL_78:
    if (!(v62 & 1 | (v7 != 0))) {
      goto LABEL_79;
    }
  }
  if (!v34) {
    goto LABEL_66;
  }
  if ((*(unsigned char *)(a1 + 56) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_99;
    }
    char v53 = 16 * *(unsigned char *)(a1 + 56);
    goto LABEL_76;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_99;
  }
  BOOL v39 = objc_alloc_init(GEORPDirectionsCorrections);
  if (GEORPDirectionsCorrectionsReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = 32;
    goto LABEL_59;
  }
LABEL_98:

LABEL_99:
  int v59 = 0;
  unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_80:
  int v60 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
  if ((v61 & 1) == 0) {
    goto LABEL_82;
  }
LABEL_81:
  *(unsigned char *)(a1 + v60[395]) |= 2u;
LABEL_82:
  if (v64 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[395]) |= 4u;
    *(unsigned char *)(a1 + v60[395]) |= 8u;
    goto LABEL_92;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v18++;
        int v54 = v55;
        if (v55 == 1) {
          break;
        }
        if (v54 == 2)
        {
          char v56 = 8;
          goto LABEL_91;
        }
        if (!v54) {
          goto LABEL_92;
        }
      }
      char v56 = 4;
LABEL_91:
      *(unsigned char *)(a1 + v60[395]) |= v56;
      continue;
    }
  }
LABEL_92:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v64)
  {
    char v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1893B1CC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B26E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPDirectionsFeedbackReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPDirectionsFeedbackReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPDirectionsFeedbackReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPDirectionsFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1893B28A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPDirectionsFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893B2908(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDirectionsFeedbackIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_43;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else
      {
        if (v17 == 2)
        {
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPDirectionsCorrectionsIsValid(a1))
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
          goto LABEL_36;
        }
        if (v17 == 1)
        {
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPDirectionsFeedbackContextIsValid(a1)) {
            goto LABEL_43;
          }
LABEL_36:
          PBReaderRecallMark();
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_43;
        }
      }
LABEL_40:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEORPDirectionsFeedbackContextIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEODirectionsRequestIsValid(a1)) {
            goto LABEL_44;
          }
          goto LABEL_57;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEODirectionsResponseIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_44;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPlaceRequestResponseIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_44;
        case 4u:
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPUserSearchInputIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_44;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWaypointRouteIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_44;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_57;
          }
LABEL_44:
          PBReaderRecallMark();
          continue;
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v17 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_45;
      }
      a1[*v4] = 1;
LABEL_45:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_1893B3078(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPDirectionsFeedbackIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 56);
  if ((v2 & 0x10) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) != 0)
  {
    if (GEORPDirectionsFeedbackContextIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 56);
  }
  if ((v2 & 8) == 0) {
    return 0;
  }
  id v4 = *(os_unfair_lock_s **)(a1 + 32);

  return (uint64_t)GEORPDirectionsCorrectionsIsDirty(v4);
}

os_unfair_lock_s *GEORPDirectionsFeedbackIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPDirectionsFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEORPDirectionsFeedbackClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasDirectionsContext]
    && ([a1 directionsContext],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEORPDirectionsFeedbackContextHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    unsigned int v7 = [a1 directionsContext];
    unint64_t v8 = (id *)[v7 copy];

    GEORPDirectionsFeedbackContextClearSensitiveFields(v8, a2, 0);
    [a1 setDirectionsContext:v8];
  }
  else
  {
    unint64_t v8 = [a1 directionsContext];
    [v8 clearSensitiveFields:a2];
  }
}

void *GEORPDirectionsFeedbackHasSensitiveFields(void *result, uint64_t a2)
{
  if (result)
  {
    id v3 = [result directionsContext];
    uint64_t HasSensitiveFields = GEORPDirectionsFeedbackContextHasSensitiveFields(v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

uint64_t GEORPDirectionsFeedbackContextHasSensitiveFields(void *a1, uint64_t a2)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v4 = [a1 directionsRequests];
  uint64_t v5 = [v4 countByEnumeratingWithState:&v27 objects:v33 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v28;
LABEL_4:
    uint64_t v8 = 0;
    while (1)
    {
      if (*(void *)v28 != v7) {
        objc_enumerationMutation(v4);
      }
      if (GEODirectionsRequestHasSensitiveFields(*(void *)(*((void *)&v27 + 1) + 8 * v8))) {
        goto LABEL_27;
      }
      if (v6 == ++v8)
      {
        uint64_t v6 = [v4 countByEnumeratingWithState:&v27 objects:v33 count:16];
        if (v6) {
          goto LABEL_4;
        }
        break;
      }
    }
  }

  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v4 = [a1 directionsResponses];
  uint64_t v9 = [v4 countByEnumeratingWithState:&v23 objects:v32 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v24;
LABEL_12:
    uint64_t v12 = 0;
    while (1)
    {
      if (*(void *)v24 != v11) {
        objc_enumerationMutation(v4);
      }
      if (GEODirectionsResponseHasSensitiveFields(*(void **)(*((void *)&v23 + 1) + 8 * v12))) {
        goto LABEL_27;
      }
      if (v10 == ++v12)
      {
        uint64_t v10 = [v4 countByEnumeratingWithState:&v23 objects:v32 count:16];
        if (v10) {
          goto LABEL_12;
        }
        break;
      }
    }
  }

  long long v21 = 0u;
  long long v22 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v4 = objc_msgSend(a1, "directionsWaypointPlaceInfos", 0);
  uint64_t v13 = [v4 countByEnumeratingWithState:&v19 objects:v31 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v20;
LABEL_20:
    uint64_t v16 = 0;
    while (1)
    {
      if (*(void *)v20 != v15) {
        objc_enumerationMutation(v4);
      }
      if (GEORPPlaceRequestResponseHasSensitiveFields(*(void **)(*((void *)&v19 + 1) + 8 * v16), a2))break; {
      if (v14 == ++v16)
      }
      {
        uint64_t v14 = [v4 countByEnumeratingWithState:&v19 objects:v31 count:16];
        if (v14) {
          goto LABEL_20;
        }
        goto LABEL_26;
      }
    }
LABEL_27:
    uint64_t v17 = 1;
    goto LABEL_28;
  }
LABEL_26:
  uint64_t v17 = 0;
LABEL_28:

  return v17;
}

unint64_t GEORPDirectionsFeedbackContextClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  -[GEORPDirectionsFeedbackContext _readDirectionsRequests]((uint64_t)a1);
  if ([a1[3] count])
  {
    unint64_t v6 = 0;
    do
    {
      uint64_t v7 = [a1[3] objectAtIndexedSubscript:v6];
      uint64_t v8 = (void *)v7;
      if (a3 && GEODirectionsRequestHasSensitiveFields(v7))
      {
        uint64_t v9 = (id *)[v8 copy];
        GEODirectionsRequestClearSensitiveFields(v9, a2, 0);
        [a1[3] replaceObjectAtIndex:v6 withObject:v9];
      }
      else
      {
        [v8 clearSensitiveFields:a2];
      }

      ++v6;
    }
    while (v6 < [a1[3] count]);
  }
  -[GEORPDirectionsFeedbackContext _readDirectionsResponses]((uint64_t)a1);
  if ([a1[4] count])
  {
    unint64_t v10 = 0;
    do
    {
      uint64_t v11 = [a1[4] objectAtIndexedSubscript:v10];
      uint64_t v12 = v11;
      if (a3 && GEODirectionsResponseHasSensitiveFields(v11))
      {
        uint64_t v13 = (void *)[v12 copy];
        GEODirectionsResponseClearSensitiveFields((uint64_t)v13, a2, 0);
        [a1[4] replaceObjectAtIndex:v10 withObject:v13];
      }
      else
      {
        [v12 clearSensitiveFields:a2];
      }

      ++v10;
    }
    while (v10 < [a1[4] count]);
  }
  -[GEORPDirectionsFeedbackContext _readDirectionsWaypointPlaceInfos]((uint64_t)a1);
  unint64_t result = [a1[5] count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      uint64_t v16 = [a1[5] objectAtIndexedSubscript:i];
      uint64_t v17 = v16;
      if (a3 && GEORPPlaceRequestResponseHasSensitiveFields(v16, a2))
      {
        uint64_t v18 = (void *)[v17 copy];
        long long v19 = [v18 placeRequest];
        [v19 clearSensitiveFields:a2];

        [a1[5] replaceObjectAtIndex:i withObject:v18];
      }
      else
      {
        [v17 clearSensitiveFields:a2];
      }

      unint64_t result = [a1[5] count];
    }
  }
  return result;
}

void sub_1893B3A50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B3D64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B402C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsFeedbackContextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = ((*(unsigned __int16 *)(a1 + 96) >> 1) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 96)), (uint16x4_t)0xFFF8FFFCFFFEFFFDLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 96) >> 5) & 1)+ ((*(_WORD *)(a1 + 96) >> 7) & 1)+ ((*(_WORD *)(a1 + 96) >> 6) & 1));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 4;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v60 = v18;
        char v61 = v19 | v18;
        if ((v19 | v9)) {
          long long v20 = 0;
        }
        else {
          long long v20 = a3;
        }
        long long v21 = (int *)MEMORY[0x1E4F940E8];
        char v62 = (v20 == 0) | v19;
        BOOL v63 = v19;
        long long v22 = (int *)MEMORY[0x1E4F940C8];
        long long v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_103;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_103:
      int v59 = 1;
      goto LABEL_104;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v63;
    if ((v62 & 1) == 0)
    {
      int v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35 || (*(_WORD *)(a1 + 96) & 4) != 0) {
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_124;
        }
        uint64_t v40 = objc_alloc_init(GEODirectionsRequest);
        if (!GEODirectionsRequestReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_123;
        }
        PBReaderRecallMark();
        -[GEORPDirectionsFeedbackContext _addNoFlagsDirectionsRequest:](a1, v40);
        goto LABEL_81;
      case 2:
        if (!v35 || (*(_WORD *)(a1 + 96) & 8) != 0) {
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_124;
        }
        uint64_t v40 = objc_alloc_init(GEODirectionsResponse);
        if (!GEODirectionsResponseReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_123;
        }
        PBReaderRecallMark();
        -[GEORPDirectionsFeedbackContext _addNoFlagsDirectionsResponse:](a1, v40);
        goto LABEL_81;
      case 3:
        if (!v35 || (*(_WORD *)(a1 + 96) & 0x10) != 0) {
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_124;
        }
        uint64_t v40 = objc_alloc_init(GEORPPlaceRequestResponse);
        if (!GEORPPlaceRequestResponseReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_123;
        }
        PBReaderRecallMark();
        -[GEORPDirectionsFeedbackContext _addNoFlagsDirectionsWaypointPlaceInfo:](a1, v40);
        goto LABEL_81;
      case 4:
        if (!v35) {
          goto LABEL_90;
        }
        if ((*(_WORD *)(a1 + 96) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_124;
          }
          __int16 v54 = *(_WORD *)(a1 + 96) << 7;
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_124;
        }
        uint64_t v40 = objc_alloc_init(GEORPUserSearchInput);
        if (!GEORPUserSearchInputReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_123;
        }
        PBReaderRecallMark();
        uint64_t v41 = 72;
        goto LABEL_64;
      case 5:
        if (!v35) {
          goto LABEL_90;
        }
        if ((*(_WORD *)(a1 + 96) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_124;
          }
          __int16 v54 = *(_WORD *)(a1 + 96) << 10;
LABEL_100:
          v8 += v54 >> 15;
LABEL_101:
          long long v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          long long v23 = (int *)MEMORY[0x1E4F940B8];
LABEL_102:
          if (!(v61 & 1 | (v8 != 0))) {
            goto LABEL_103;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_124;
        }
        uint64_t v40 = objc_alloc_init(GEORPUserSearchInput);
        if (GEORPUserSearchInputReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v41 = 48;
LABEL_64:
          unsigned int v42 = *(void **)(a1 + v41);
          *(void *)(a1 + v41) = v40;

          --v8;
          goto LABEL_101;
        }
LABEL_123:

LABEL_124:
        int v59 = 0;
        long long v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_104:
        if (v60) {
LABEL_105:
        }
          *(_WORD *)(a1 + 96) |= 2u;
        if (v63 || (v59 & 1) == 0)
        {
          *(_WORD *)(a1 + 96) |= 4u;
          *(_WORD *)(a1 + 96) |= 8u;
          *(_WORD *)(a1 + 96) |= 0x10u;
          *(_WORD *)(a1 + 96) |= 0x100u;
          *(_WORD *)(a1 + 96) |= 0x20u;
          *(_WORD *)(a1 + 96) |= 0x80u;
          *(_WORD *)(a1 + 96) |= 0x40u;
        }
        else if (v20)
        {
          while (1)
          {
            int v55 = *v20++;
            __int16 v56 = 4;
            switch(v55)
            {
              case 0:
                goto LABEL_117;
              case 1:
                goto LABEL_116;
              case 2:
                __int16 v56 = 8;
                goto LABEL_116;
              case 3:
                __int16 v56 = 16;
                goto LABEL_116;
              case 4:
                __int16 v56 = 256;
                goto LABEL_116;
              case 5:
                __int16 v56 = 32;
                goto LABEL_116;
              case 7:
                __int16 v56 = 128;
                goto LABEL_116;
              case 8:
                __int16 v56 = 64;
LABEL_116:
                *(_WORD *)(a1 + 96) |= v56;
                break;
              default:
                continue;
            }
          }
        }
LABEL_117:
        if (v59) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v63)
        {
          char v57 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 7:
        if (!v35 || (*(_WORD *)(a1 + 96) & 0x80) != 0) {
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_124;
        }
        uint64_t v40 = objc_alloc_init(GEOWaypointRoute);
        if (!GEOWaypointRouteReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_123;
        }
        PBReaderRecallMark();
        -[GEORPDirectionsFeedbackContext _addNoFlagsRoute:](a1, v40);
        goto LABEL_81;
      case 8:
        if (!v35 || (*(_WORD *)(a1 + 96) & 0x40) != 0) {
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_124;
        }
        uint64_t v40 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v40, (void *)v3)) {
          goto LABEL_123;
        }
        PBReaderRecallMark();
        -[GEORPDirectionsFeedbackContext _addNoFlagsRerouteLocation:](a1, v40);
LABEL_81:

        goto LABEL_101;
      case 9:
        if ((v9 & 1) == 0) {
          goto LABEL_90;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 96) |= 1u;
        while (2)
        {
          uint64_t v49 = *v21;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v23) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v31 = v47++ >= 9;
              if (v31)
              {
                uint64_t v48 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v48 = 0;
        }
LABEL_95:
        *(unsigned char *)(a1 + 92) = v48 != 0;
        goto LABEL_102;
      default:
        if ((v60 & 1) == 0 || (*(_WORD *)(a1 + 96) & 2) != 0)
        {
LABEL_90:
          char v53 = PBReaderSkipValueWithTag();
          long long v23 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          long long v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v59 = 0;
            goto LABEL_104;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v44 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v43;
          }
          int v45 = PBUnknownFieldAdd();
          long long v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          long long v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v45)
          {
            int v59 = 0;
            goto LABEL_105;
          }
        }
        goto LABEL_102;
    }
  }
}

void sub_1893B4D6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B5130(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B54F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B5660(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B57D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B5B94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B70DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPDirectionsFeedbackContextCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  long long v43 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  id v2 = a1[3];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v43 objects:v51 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v44;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v44 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v43 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v43 objects:v51 count:16];
    }
    while (v4);
  }

  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  id v7 = a1[4];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v39 objects:v50 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v40;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v40 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v39 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v39 objects:v50 count:16];
    }
    while (v9);
  }

  long long v37 = 0u;
  long long v38 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  id v12 = a1[5];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v35 objects:v49 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v36;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v36 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v35 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v35 objects:v49 count:16];
    }
    while (v14);
  }

  [a1[9] readAll:1];
  [a1[6] readAll:1];
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  id v17 = a1[8];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v31 objects:v48 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v32;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v32 != v20) {
          objc_enumerationMutation(v17);
        }
        [*(id *)(*((void *)&v31 + 1) + 8 * v21++) readAll:1];
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v31 objects:v48 count:16];
    }
    while (v19);
  }

  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v22 = a1[7];
  uint64_t v23 = [v22 countByEnumeratingWithState:&v27 objects:v47 count:16];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)v28;
    do
    {
      uint64_t v26 = 0;
      do
      {
        if (*(void *)v28 != v25) {
          objc_enumerationMutation(v22);
        }
        objc_msgSend(*(id *)(*((void *)&v27 + 1) + 8 * v26++), "readAll:", 1, (void)v27);
      }
      while (v24 != v26);
      uint64_t v24 = [v22 countByEnumeratingWithState:&v27 objects:v47 count:16];
    }
    while (v24);
  }
}

unint64_t GEORPDirectionsFeedbackContextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPDirectionsFeedbackContextReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPDirectionsFeedbackContextReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPDirectionsFeedbackContextReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPDirectionsFeedbackContextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPDirectionsFeedbackContextCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_1893B75F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDirectionsFeedbackContextReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPDirectionsFeedbackContextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893B765C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPlaceRequestResponseIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRequestIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceResponseIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1893B7D44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPDirectionsFeedbackContextIsDirty(uint64_t a1)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  __int16 v2 = *(_WORD *)(a1 + 96);
  if ((v2 & 0x21C) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 96) & 0x100) != 0)
  {
    if (GEORPUserSearchInputIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 96);
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEORPUserSearchInputIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 96);
  }
  if ((v2 & 0xC0) == 0)
  {
    if ((v2 & 4) != 0)
    {
      long long v34 = 0u;
      long long v35 = 0u;
      long long v32 = 0u;
      long long v33 = 0u;
      id v5 = *(id *)(a1 + 24);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v32 objects:v39 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v33;
LABEL_14:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v33 != v8) {
            objc_enumerationMutation(v5);
          }
          if (GEODirectionsRequestIsDirty(*(os_unfair_lock_s **)(*((void *)&v32 + 1) + 8 * v9))) {
            goto LABEL_52;
          }
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v32 objects:v39 count:16];
            if (v7) {
              goto LABEL_14;
            }
            break;
          }
        }
      }

      __int16 v2 = *(_WORD *)(a1 + 96);
    }
    if ((v2 & 8) != 0)
    {
      long long v30 = 0u;
      long long v31 = 0u;
      long long v28 = 0u;
      long long v29 = 0u;
      id v5 = *(id *)(a1 + 32);
      uint64_t v10 = [v5 countByEnumeratingWithState:&v28 objects:v38 count:16];
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = *(void *)v29;
LABEL_24:
        uint64_t v13 = 0;
        while (1)
        {
          if (*(void *)v29 != v12) {
            objc_enumerationMutation(v5);
          }
          if (GEODirectionsResponseIsDirty(*(os_unfair_lock_s **)(*((void *)&v28 + 1) + 8 * v13))) {
            goto LABEL_52;
          }
          if (v11 == ++v13)
          {
            uint64_t v11 = [v5 countByEnumeratingWithState:&v28 objects:v38 count:16];
            if (v11) {
              goto LABEL_24;
            }
            break;
          }
        }
      }

      __int16 v2 = *(_WORD *)(a1 + 96);
    }
    if ((v2 & 0x10) != 0)
    {
      long long v26 = 0u;
      long long v27 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      id v5 = *(id *)(a1 + 40);
      uint64_t v14 = [v5 countByEnumeratingWithState:&v24 objects:v37 count:16];
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v16 = *(void *)v25;
LABEL_34:
        uint64_t v17 = 0;
        while (1)
        {
          if (*(void *)v25 != v16) {
            objc_enumerationMutation(v5);
          }
          if (GEORPPlaceRequestResponseIsDirty(*(os_unfair_lock_s **)(*((void *)&v24 + 1) + 8 * v17))) {
            goto LABEL_52;
          }
          if (v15 == ++v17)
          {
            uint64_t v15 = [v5 countByEnumeratingWithState:&v24 objects:v37 count:16];
            if (v15) {
              goto LABEL_34;
            }
            break;
          }
        }
      }

      __int16 v2 = *(_WORD *)(a1 + 96);
    }
    if ((v2 & 0x80) == 0) {
      return 0;
    }
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id v5 = *(id *)(a1 + 64);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v20 objects:v36 count:16];
    if (!v3)
    {
LABEL_53:

      return v3;
    }
    uint64_t v18 = *(void *)v21;
LABEL_45:
    uint64_t v19 = 0;
    while (1)
    {
      if (*(void *)v21 != v18) {
        objc_enumerationMutation(v5);
      }
      if (GEOWaypointRouteIsDirty(*(os_unfair_lock_s **)(*((void *)&v20 + 1) + 8 * v19))) {
        break;
      }
      if (v3 == ++v19)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v20 objects:v36 count:16];
        if (v3) {
          goto LABEL_45;
        }
        goto LABEL_53;
      }
    }
LABEL_52:
    uint64_t v3 = 1;
    goto LABEL_53;
  }
  return 1;
}

os_unfair_lock_s *GEORPDirectionsFeedbackContextIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPDirectionsFeedbackContextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void *GEORPPlaceRequestResponseHasSensitiveFields(void *result, uint64_t a2)
{
  if (result)
  {
    uint64_t v3 = [result placeRequest];
    uint64_t HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void GEORPPlaceRequestResponseClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasPlaceRequest]
    && ([a1 placeRequest],
        id v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    uint64_t v7 = [a1 placeRequest];
    id v8 = (id)[v7 copy];

    GEOPDPlaceRequestClearSensitiveFields(v8, a2, 0);
    [a1 setPlaceRequest:v8];
  }
  else
  {
    id v8 = [a1 placeRequest];
    [v8 clearSensitiveFields:a2];
  }
}

void sub_1893B8E50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B95AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893B9BB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPEditedAccessPointReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        long long v20 = (int *)MEMORY[0x1E4F940E8];
        long long v21 = (int *)MEMORY[0x1E4F940C8];
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        long long v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_74;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_74:
      int v51 = 1;
      goto LABEL_75;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      long long v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if (!v34) {
        goto LABEL_63;
      }
      if ((*(unsigned char *)(a1 + 60) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_92;
        }
        char v46 = 32 * *(unsigned char *)(a1 + 60);
        goto LABEL_71;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_92;
      }
      long long v39 = objc_alloc_init(GEORPCorrectedString);
      if (!GEORPCorrectedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
        goto LABEL_91;
      }
      PBReaderRecallMark();
      uint64_t v40 = 32;
LABEL_56:
      long long v41 = *(void **)(a1 + v40);
      *(void *)(a1 + v40) = v39;

      --v7;
      goto LABEL_72;
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_63;
      }
      if ((*(unsigned char *)(a1 + 60) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_92;
        }
        long long v39 = objc_alloc_init(GEORoadAccessPoint);
        if (!GEORoadAccessPointReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_91;
        }
        PBReaderRecallMark();
        uint64_t v40 = 40;
        goto LABEL_56;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_92;
      }
      char v46 = 16 * *(unsigned char *)(a1 + 60);
LABEL_71:
      v7 += v46 >> 7;
LABEL_72:
      long long v21 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_73;
    }
    if (v53 & 1) == 0 || (*(unsigned char *)(a1 + 60))
    {
LABEL_63:
      char v45 = PBReaderSkipValueWithTag();
      long long v21 = (int *)MEMORY[0x1E4F940C8];
      if ((v45 & 1) == 0)
      {
        int v51 = 0;
        goto LABEL_75;
      }
      goto LABEL_73;
    }
    if (!*(void *)(a1 + 16))
    {
      id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      long long v43 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v42;
    }
    int v44 = PBUnknownFieldAdd();
    long long v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v44)
    {
      int v51 = 0;
      uint64_t v52 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
      goto LABEL_76;
    }
LABEL_73:
    if (!(v54 & 1 | (v7 != 0))) {
      goto LABEL_74;
    }
  }
  if (!v34) {
    goto LABEL_63;
  }
  if ((*(unsigned char *)(a1 + 60) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_92;
    }
    char v46 = *(unsigned char *)(a1 + 60) << 6;
    goto LABEL_71;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_92;
  }
  long long v39 = objc_alloc_init(GEORoadAccessPoint);
  if (GEORoadAccessPointReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v40 = 24;
    goto LABEL_56;
  }
LABEL_91:

LABEL_92:
  int v51 = 0;
  long long v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_75:
  uint64_t v52 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
  if ((v53 & 1) == 0) {
    goto LABEL_77;
  }
LABEL_76:
  *(unsigned char *)(a1 + v52[418]) |= 1u;
LABEL_77:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[418]) |= 8u;
    *(unsigned char *)(a1 + v52[418]) |= 2u;
    *(unsigned char *)(a1 + v52[418]) |= 4u;
  }
  else if (v19)
  {
    while (1)
    {
      int v48 = *v19++;
      char v47 = 8;
      switch(v48)
      {
        case 0:
          goto LABEL_85;
        case 1:
          goto LABEL_83;
        case 2:
          char v47 = 2;
          goto LABEL_83;
        case 3:
          char v47 = 4;
LABEL_83:
          *(unsigned char *)(a1 + v52[418]) |= v47;
          break;
        default:
          continue;
      }
    }
  }
LABEL_85:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    uint64_t v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1893BA364(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893BA4D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893BABE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPEditedAccessPointReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPEditedAccessPointReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPEditedAccessPointReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPEditedAccessPointReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPEditedAccessPointReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 40) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1893BADB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPEditedAccessPointReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPEditedAccessPointReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893BAE14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893BAFCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPEditedAccessPointIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(unsigned char *)(a1 + 60) & 0x1A) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 4) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 32);

  return GEORPCorrectedStringIsDirty(v3);
}

os_unfair_lock_s *GEORPEditedAccessPointIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEORPEditedAccessPointIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1893BB3A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893BB680(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893BB964(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackClientImageInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v50 = v15 | v8;
        if ((v16 | v9)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        BOOL v53 = v16;
        char v51 = v16 | v15 | v8;
        char v52 = (v17 == 0) | v16;
        unsigned __int8 v18 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        long long v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_59;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_59:
      int v49 = 1;
      goto LABEL_60;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v53;
    if ((v52 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (!v32) {
        goto LABEL_51;
      }
      if ((*(unsigned char *)(a1 + 52) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_77;
        }
        char v44 = 32 * *(unsigned char *)(a1 + 52);
        goto LABEL_57;
      }
      uint64_t v37 = PBReaderReadString();
      uint64_t v38 = 32;
      goto LABEL_44;
    }
    if (v50 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_51:
      char v43 = PBReaderSkipValueWithTag();
      uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if ((v43 & 1) == 0)
      {
        int v49 = 0;
        goto LABEL_60;
      }
      goto LABEL_58;
    }
    if (!*(void *)(a1 + 16))
    {
      id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      long long v41 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v40;
    }
    int v42 = PBUnknownFieldAdd();
    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if (!v42)
    {
      int v49 = 0;
      goto LABEL_61;
    }
LABEL_58:
    if (!(v51 & 1 | (v10 != 0))) {
      goto LABEL_59;
    }
  }
  if (!v32) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0)
  {
    uint64_t v37 = PBReaderReadString();
    uint64_t v38 = 24;
LABEL_44:
    long long v39 = *(void **)(a1 + v38);
    *(void *)(a1 + v38) = v37;

    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v44 = *(unsigned char *)(a1 + 52) << 6;
LABEL_57:
    v10 += v44 >> 7;
    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_58;
  }
LABEL_77:
  int v49 = 0;
  uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_60:
  if ((v50 & 1) == 0) {
    goto LABEL_62;
  }
LABEL_61:
  *(unsigned char *)(a1 + 52) |= 1u;
LABEL_62:
  if (v53 || (v49 & 1) == 0)
  {
    *(unsigned char *)(a1 + 52) |= 4u;
    *(unsigned char *)(a1 + 52) |= 2u;
    goto LABEL_71;
  }
  if (v17)
  {
    while (1)
    {
      int v46 = *v17++;
      int v45 = v46;
      if (v46 == 1) {
        break;
      }
      if (v45 == 2)
      {
LABEL_67:
        *(unsigned char *)(a1 + 52) |= v45;
      }
      else if (!v45)
      {
        goto LABEL_71;
      }
    }
    LOBYTE(v45) = 4;
    goto LABEL_67;
  }
LABEL_71:
  if (v49) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v53)
  {
    char v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1893BBFA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893BC588(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackClientImageInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackClientImageInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPFeedbackClientImageInfoReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPFeedbackClientImageInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackClientImageInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1893BC718(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackClientImageInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackClientImageInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893BC77C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893BC924(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackClientImageInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1893BCBD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893BCE2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893BD3C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackCommonContextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 144));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 140);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 136)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = *(_DWORD *)(a1 + 160);
  uint32x4_t v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  unsigned int v15 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62E3D0), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62E3E0), v14)))+ ((v12 >> 9) & 1)+ ((v12 >> 8) & 1)+ ((v12 >> 5) & 1);
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 7;
        char v20 = v19 & ~(_BYTE)v11 | v9;
        char v21 = v19 | v11;
        if (((v19 | v11) | v8)) {
          unsigned int v22 = 0;
        }
        else {
          unsigned int v22 = a3;
        }
        unint64_t v23 = (int *)MEMORY[0x1E4F940E8];
        int v107 = 1;
        uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
        char v25 = v20;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_201;
        }
        char v105 = v20;
        char v108 = v21 | v20;
        char v109 = (v22 == 0) | v21;
        unint64_t v26 = (int *)MEMORY[0x1E4F940B8];
        char v106 = v21;
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v9;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v24)) {
      goto LABEL_199;
    }
    char v27 = 0;
    unsigned int v28 = 0;
    unint64_t v29 = 0;
    while (1)
    {
      uint64_t v30 = *v23;
      uint64_t v31 = *(void *)(v3 + v30);
      unint64_t v32 = v31 + 1;
      if (v31 == -1 || v32 > *(void *)(v3 + *v6)) {
        break;
      }
      char v33 = *(unsigned char *)(*(void *)(v3 + *v26) + v31);
      *(void *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0) {
        goto LABEL_25;
      }
      v27 += 7;
      BOOL v34 = v28++ >= 9;
      if (v34)
      {
        unint64_t v29 = 0;
        int v35 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v24) = 1;
LABEL_25:
    int v35 = *(unsigned __int8 *)(v3 + *v24);
    if (*(unsigned char *)(v3 + *v24)) {
      unint64_t v29 = 0;
    }
LABEL_27:
    int v36 = v29 & 7;
    if (v35 || v36 == 4)
    {
LABEL_199:
      int v107 = 1;
      goto LABEL_200;
    }
    unint64_t v38 = v29 >> 3;
    BOOL v39 = v21;
    if ((v109 & 1) == 0)
    {
      id v40 = v22;
      do
      {
        int v42 = *v40++;
        int v41 = v42;
        BOOL v39 = v42 != 0;
        if (v42) {
          BOOL v43 = v41 == v38;
        }
        else {
          BOOL v43 = 1;
        }
      }
      while (!v43);
    }
    switch((int)v38)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_149;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 160) |= 8u;
        while (1)
        {
          uint64_t v47 = *v23;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6)) {
            break;
          }
          char v50 = *(unsigned char *)(*(void *)(v3 + *v26) + v48);
          *(void *)(v3 + v47) = v49;
          v46 |= (unint64_t)(v50 & 0x7F) << v44;
          if ((v50 & 0x80) == 0) {
            goto LABEL_152;
          }
          v44 += 7;
          BOOL v34 = v45++ >= 9;
          if (v34)
          {
            LODWORD(v46) = 0;
            goto LABEL_154;
          }
        }
        *(unsigned char *)(v3 + *v24) = 1;
LABEL_152:
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v46) = 0;
        }
LABEL_154:
        *(_DWORD *)(a1 + 152) = v46;
        goto LABEL_184;
      case 2:
        if (!v39) {
          goto LABEL_149;
        }
        if ((*(unsigned char *)(a1 + 161) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v92 = (int)(*(_DWORD *)(a1 + 160) << 20) >> 31;
          goto LABEL_181;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        char v54 = objc_alloc_init(GEORPMapLocation);
        if (!GEORPMapLocationReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v55 = 88;
        goto LABEL_142;
      case 3:
        if (!v39 || (*(unsigned char *)(a1 + 161) & 0x80) != 0) {
          goto LABEL_146;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        char v54 = objc_alloc_init(GEORPVisibleTileSet);
        if (!GEORPVisibleTileSetReadAllFrom((uint64_t)v54, (void *)v3)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        -[GEORPFeedbackCommonContext _addNoFlagsVisibleTileSet:](a1, v54);
        goto LABEL_87;
      case 4:
        if (!v39 || (*(unsigned char *)(a1 + 160) & 0x40) != 0)
        {
          char v90 = PBReaderSkipValueWithTag();
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          char v21 = v106;
          goto LABEL_147;
        }
        if (v36 != 2)
        {
          char v93 = 0;
          unsigned int v94 = 0;
          uint64_t v95 = 0;
          uint64_t v96 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v97 = *v23;
            uint64_t v98 = *(void *)(v3 + v97);
            unint64_t v99 = v98 + 1;
            if (v98 == -1 || v99 > *(void *)(v3 + *v6)) {
              break;
            }
            char v100 = *(unsigned char *)(*(void *)(v3 + *v96) + v98);
            *(void *)(v3 + v97) = v99;
            v95 |= (unint64_t)(v100 & 0x7F) << v93;
            if (v100 < 0)
            {
              v93 += 7;
              BOOL v34 = v94++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_198;
          }
          *(unsigned char *)(v3 + *v24) = 1;
LABEL_198:
          PBRepeatedInt32Add();
          goto LABEL_182;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_225;
        }
        while (1)
        {
          BOOL v56 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v23) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v59 = 0;
          char v60 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v61 = *v23;
            uint64_t v62 = *(void *)(v3 + v61);
            unint64_t v63 = v62 + 1;
            if (v62 == -1 || v63 > *(void *)(v3 + *v6)) {
              break;
            }
            char v64 = *(unsigned char *)(*(void *)(v3 + *v60) + v62);
            *(void *)(v3 + v61) = v63;
            v59 |= (unint64_t)(v64 & 0x7F) << v57;
            if (v64 < 0)
            {
              v57 += 7;
              BOOL v34 = v58++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_77;
          }
          *(unsigned char *)(v3 + *v56) = 1;
LABEL_77:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
        uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
        char v21 = v106;
        goto LABEL_183;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_149;
        }
        *(_DWORD *)(a1 + 160) |= 1u;
        uint64_t v65 = *v23;
        unint64_t v66 = *(void *)(v3 + v65);
        if (v66 <= 0xFFFFFFFFFFFFFFF7 && v66 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v67 = *(void *)(*(void *)(v3 + *v26) + v66);
          *(void *)(v3 + v65) = v66 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v24) = 1;
          uint64_t v67 = 0;
        }
        *(void *)(a1 + 56) = v67;
        goto LABEL_184;
      case 6:
        if (!v39 || (*(unsigned char *)(a1 + 160) & 0x80) != 0)
        {
LABEL_146:
          char v90 = PBReaderSkipValueWithTag();
          char v21 = v106;
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_147:
          unint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          if ((v90 & 1) == 0) {
            goto LABEL_223;
          }
          goto LABEL_184;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        char v54 = objc_alloc_init(GEORPAuxiliaryControl);
        if (!GEORPAuxiliaryControlReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        -[GEORPFeedbackCommonContext _addNoFlagsAuxiliaryControl:](a1, v54);
LABEL_87:

        goto LABEL_182;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_149;
        }
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v70 = 0;
        *(_DWORD *)(a1 + 160) |= 2u;
        while (2)
        {
          uint64_t v71 = *v23;
          uint64_t v72 = *(void *)(v3 + v71);
          unint64_t v73 = v72 + 1;
          if (v72 == -1 || v73 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v74 = *(unsigned char *)(*(void *)(v3 + *v26) + v72);
            *(void *)(v3 + v71) = v73;
            v70 |= (unint64_t)(v74 & 0x7F) << v68;
            if (v74 < 0)
            {
              v68 += 7;
              BOOL v34 = v69++ >= 9;
              if (v34)
              {
                uint64_t v70 = 0;
                goto LABEL_158;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v70 = 0;
        }
LABEL_158:
        *(void *)(a1 + 104) = v70;
        goto LABEL_184;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_149;
        }
        char v75 = 0;
        unsigned int v76 = 0;
        uint64_t v77 = 0;
        *(_DWORD *)(a1 + 160) |= 4u;
        while (2)
        {
          uint64_t v78 = *v23;
          uint64_t v79 = *(void *)(v3 + v78);
          unint64_t v80 = v79 + 1;
          if (v79 == -1 || v80 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v81 = *(unsigned char *)(*(void *)(v3 + *v26) + v79);
            *(void *)(v3 + v78) = v80;
            v77 |= (unint64_t)(v81 & 0x7F) << v75;
            if (v81 < 0)
            {
              v75 += 7;
              BOOL v34 = v76++ >= 9;
              if (v34)
              {
                LODWORD(v77) = 0;
                goto LABEL_162;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v77) = 0;
        }
LABEL_162:
        *(_DWORD *)(a1 + 148) = -(v77 & 1) ^ ((int)v77 >> 1);
        goto LABEL_184;
      case 9:
        if (!v39) {
          goto LABEL_149;
        }
        if ((*(unsigned char *)(a1 + 161) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v92 = (int)(*(_DWORD *)(a1 + 160) << 21) >> 31;
          goto LABEL_181;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        char v54 = objc_alloc_init(GEORPCurrentEnvironmentManifestURLs);
        if (!GEORPCurrentEnvironmentManifestURLsReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v55 = 80;
        goto LABEL_142;
      case 10:
        if (!v39) {
          goto LABEL_149;
        }
        if ((*(unsigned char *)(a1 + 161) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v92 = (int)(*(_DWORD *)(a1 + 160) << 19) >> 31;
          goto LABEL_181;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        char v54 = objc_alloc_init(GEORPNavigationSettings);
        if (!GEORPNavigationSettingsReadAllFrom((uint64_t)v54, (void *)v3)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v55 = 96;
        goto LABEL_142;
      case 11:
        if (!v39) {
          goto LABEL_149;
        }
        if ((*(unsigned char *)(a1 + 161) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v92 = (int)(*(_DWORD *)(a1 + 160) << 17) >> 31;
          goto LABEL_181;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        char v54 = objc_alloc_init(GEORPSourceInfo);
        if (!GEORPSourceInfoReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v55 = 120;
        goto LABEL_142;
      case 12:
        if (!v39) {
          goto LABEL_149;
        }
        if ((*(unsigned char *)(a1 + 161) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v92 = (int)(*(_DWORD *)(a1 + 160) << 18) >> 31;
          goto LABEL_181;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        char v54 = objc_alloc_init(GEORPSearchCommonContext);
        if (!GEORPSearchCommonContextReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v55 = 112;
        goto LABEL_142;
      case 13:
        if (!v39) {
          goto LABEL_149;
        }
        if ((*(unsigned char *)(a1 + 161) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v92 = (int)(*(_DWORD *)(a1 + 160) << 22) >> 31;
          goto LABEL_181;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        char v54 = objc_alloc_init(GEOABAssignmentResponse);
        if (!GEOABAssignmentResponseReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v55 = 72;
        goto LABEL_142;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_149;
        }
        char v82 = 0;
        unsigned int v83 = 0;
        uint64_t v84 = 0;
        *(_DWORD *)(a1 + 160) |= 0x10u;
        while (2)
        {
          uint64_t v85 = *v23;
          uint64_t v86 = *(void *)(v3 + v85);
          unint64_t v87 = v86 + 1;
          if (v86 == -1 || v87 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v88 = *(unsigned char *)(*(void *)(v3 + *v26) + v86);
            *(void *)(v3 + v85) = v87;
            v84 |= (unint64_t)(v88 & 0x7F) << v82;
            if (v88 < 0)
            {
              v82 += 7;
              BOOL v34 = v83++ >= 9;
              if (v34)
              {
                uint64_t v84 = 0;
                goto LABEL_166;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v84 = 0;
        }
LABEL_166:
        *(unsigned char *)(a1 + 156) = v84 != 0;
        goto LABEL_184;
      case 15:
        if (!v39) {
          goto LABEL_149;
        }
        if (*(unsigned char *)(a1 + 161))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v92 = (int)(*(_DWORD *)(a1 + 160) << 23) >> 31;
LABEL_181:
          v7 += v92;
LABEL_182:
          char v21 = v106;
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_183:
          unint64_t v26 = (int *)MEMORY[0x1E4F940B8];
LABEL_184:
          if (!(v108 & 1 | (v7 != 0)) || *(void *)(v3 + *v23) >= *(void *)(v3 + *v6)) {
            goto LABEL_199;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        char v54 = objc_alloc_init(GEORPUserPath);
        if (GEORPUserPathReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v55 = 64;
LABEL_142:
          int v89 = *(void **)(a1 + v55);
          *(void *)(a1 + v55) = v54;

          --v7;
          goto LABEL_182;
        }
LABEL_224:

LABEL_225:
        int v107 = 0;
        char v21 = v106;
        uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_200:
        char v25 = v105;
LABEL_201:
        if (v25) {
LABEL_202:
        }
          *(_DWORD *)(a1 + 160) |= 0x20u;
        if (v21 & 1 | ((v107 & 1) == 0))
        {
          *(_DWORD *)(a1 + 160) |= 0x800u;
          *(_DWORD *)(a1 + 160) |= 0x8000u;
          *(_DWORD *)(a1 + 160) |= 0x40u;
          *(_DWORD *)(a1 + 160) |= 0x80u;
          *(_DWORD *)(a1 + 160) |= 0x400u;
          *(_DWORD *)(a1 + 160) |= 0x1000u;
          *(_DWORD *)(a1 + 160) |= 0x4000u;
          *(_DWORD *)(a1 + 160) |= 0x2000u;
          *(_DWORD *)(a1 + 160) |= 0x200u;
          *(_DWORD *)(a1 + 160) |= 0x100u;
        }
        else if (v22)
        {
          while (1)
          {
            int v101 = *v22++;
            int v102 = 2048;
            switch(v101)
            {
              case 0:
                goto LABEL_217;
              case 2:
                goto LABEL_216;
              case 3:
                int v102 = 0x8000;
                goto LABEL_216;
              case 4:
                int v102 = 64;
                goto LABEL_216;
              case 6:
                int v102 = 128;
                goto LABEL_216;
              case 9:
                int v102 = 1024;
                goto LABEL_216;
              case 10:
                int v102 = 4096;
                goto LABEL_216;
              case 11:
                int v102 = 0x4000;
                goto LABEL_216;
              case 12:
                int v102 = 0x2000;
                goto LABEL_216;
              case 13:
                int v102 = 512;
                goto LABEL_216;
              case 15:
                int v102 = 256;
LABEL_216:
                *(_DWORD *)(a1 + 160) |= v102;
                break;
              default:
                continue;
            }
          }
        }
LABEL_217:
        if (v107)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v24) == 0;
          if ((v21 & 1) == 0) {
            return v3;
          }
LABEL_221:
          int v103 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v21) {
            goto LABEL_221;
          }
        }
        return v3;
      default:
        if ((v105 & 1) == 0 || (*(unsigned char *)(a1 + 160) & 0x20) != 0)
        {
LABEL_149:
          char v91 = PBReaderSkipValueWithTag();
          unint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          char v21 = v106;
          if ((v91 & 1) == 0)
          {
LABEL_223:
            int v107 = 0;
            goto LABEL_200;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v51 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v52 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v51;
          }
          int v53 = PBUnknownFieldAdd();
          char v21 = v106;
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          if (!v53)
          {
            int v107 = 0;
            goto LABEL_202;
          }
        }
        goto LABEL_184;
    }
  }
}

void sub_1893BE600(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893BE9C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893BF45C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893BF924(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893BFA9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893BFC14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893BFD8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893BFF04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C00FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C1D9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackCommonContextCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  [a1[11] readAll:1];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = a1[16];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v17 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v4);
  }

  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = a1[6];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * v11++), "readAll:", 1, (void)v13);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v9);
  }

  [a1[10] readAll:1];
  [a1[12] readAll:1];
  [a1[15] readAll:1];
  [a1[14] readAll:1];
  [a1[9] readAll:1];
  return [a1[8] readAll:1];
}

unint64_t GEORPFeedbackCommonContextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 140))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackCommonContextReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 144));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 136) = [v8 position];
  *(_DWORD *)(a1 + 140) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackCommonContextReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackCommonContextReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackCommonContextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPFeedbackCommonContextCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 144));
  return Specified;
}

void sub_1893C2148(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackCommonContextReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackCommonContextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893C21AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackCommonContextIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_115;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_96;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_102;
          }
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPMapLocationIsValid(a1)) {
            goto LABEL_115;
          }
          goto LABEL_101;
        case 3u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPVisibleTileSetIsValid(a1)) {
            goto LABEL_115;
          }
          goto LABEL_101;
        case 4u:
          if (v16 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_115:
              PBReaderRecallMark();
              return 0;
            }
LABEL_105:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v47 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v48 = *v2;
                uint64_t v49 = *(void *)&a1[v48];
                unint64_t v50 = v49 + 1;
                if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
                  break;
                }
                int v51 = *(char *)(*(void *)&a1[*v5] + v49);
                *(void *)&a1[v48] = v50;
                if (v51 < 0)
                {
                  BOOL v13 = v47++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_105;
              }
              a1[*v4] = 1;
            }
LABEL_101:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_115;
            }
            while (1)
            {
              uint64_t v24 = *v2;
              uint64_t v25 = *(void *)&a1[v24];
              unint64_t v26 = v25 + 1;
              if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
                break;
              }
              int v27 = *(char *)(*(void *)&a1[*v5] + v25);
              *(void *)&a1[v24] = v26;
              if (v27 < 0)
              {
                unsigned int v28 = v16++;
                if (v28 <= 8) {
                  continue;
                }
              }
              goto LABEL_102;
            }
LABEL_96:
            uint64_t v14 = *v4;
LABEL_97:
            a1[v14] = 1;
          }
LABEL_102:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_114;
          }
          break;
        case 5u:
          if (v16 != 1) {
            goto LABEL_115;
          }
          uint64_t v29 = *v2;
          unint64_t v30 = *(void *)&a1[v29];
          if (v30 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_97;
          }
          unint64_t v31 = v30 + 8;
          if (v31 > *(void *)&a1[*v3]) {
            goto LABEL_97;
          }
          *(void *)&a1[v29] = v31;
          goto LABEL_102;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPAuxiliaryControlIsValid(a1)) {
            goto LABEL_115;
          }
          goto LABEL_101;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_115;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_96;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v23 = v32++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_102;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_115;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_96;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v23 = v37++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_102;
          }
        case 9u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPCurrentEnvironmentManifestURLsIsValid(a1)) {
            goto LABEL_115;
          }
          goto LABEL_101;
        case 0xAu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPNavigationSettingsIsValid(a1)) {
            goto LABEL_115;
          }
          goto LABEL_101;
        case 0xBu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPSourceInfoIsValid(a1)) {
            goto LABEL_115;
          }
          goto LABEL_101;
        case 0xCu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORPSearchCommonContextIsValid(a1)) {
            goto LABEL_115;
          }
          goto LABEL_101;
        case 0xDu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOABAssignmentResponseIsValid(a1)) {
            goto LABEL_115;
          }
          goto LABEL_101;
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_115;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_96;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v23 = v42++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_102;
          }
        case 0xFu:
          if (v16 == 2 && PBReaderPlaceMark() && GEORPUserPathIsValid(a1)) {
            goto LABEL_101;
          }
          goto LABEL_115;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_115;
          }
          goto LABEL_102;
      }
    }
  }
LABEL_114:
  BOOL v52 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v52;
}

BOOL GEORPSourceInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v15 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPSearchCommonContextIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v15 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPUserPathIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_43;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_43;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) != 1) {
        goto LABEL_28;
      }
      if (v15 == 2)
      {
        if (!PBReaderPlaceMark())
        {
LABEL_45:
          PBReaderRecallMark();
          return 0;
        }
LABEL_31:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v22 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              break;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v13 = v22++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_31;
          }
          a1[*v4] = 1;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((v8 & 7) != 0) {
          goto LABEL_45;
        }
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            unsigned int v21 = v15++;
            if (v21 <= 8) {
              continue;
            }
          }
          goto LABEL_42;
        }
        a1[*v4] = 1;
      }
LABEL_42:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_43;
      }
    }
    if (v15 != 2) {
      goto LABEL_45;
    }
LABEL_28:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_45;
    }
    goto LABEL_42;
  }
LABEL_43:
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_1893C3218(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackCommonContextIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 144));
  int v2 = *(_DWORD *)(a1 + 160);
  if ((v2 & 0x10000) != 0) {
    return 1;
  }
  if ((v2 & 0x800) != 0)
  {
    if (GEORPMapLocationIsDirty(*(void *)(a1 + 88))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 160);
  }
  if ((v2 & 0x80C0) != 0) {
    return 1;
  }
  if ((v2 & 0x400) != 0)
  {
    if (GEORPCurrentEnvironmentManifestURLsIsDirty(*(os_unfair_lock_s **)(a1 + 80))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 160);
  }
  if ((v2 & 0x1000) != 0) {
    return 1;
  }
  if ((v2 & 0x4000) != 0)
  {
    if (GEORPSourceInfoIsDirty(*(void *)(a1 + 120))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 160);
  }
  if ((v2 & 0x2000) != 0)
  {
    if (GEORPSearchCommonContextIsDirty(*(void *)(a1 + 112))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 160);
  }
  if ((v2 & 0x200) != 0)
  {
    if (GEOABAssignmentResponseIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 160);
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEORPUserPathIsDirty(*(void *)(a1 + 64))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 160);
  }
  if ((v2 & 0x80) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 48);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEORPAuxiliaryControlIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_36;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_36:

  return v3;
}

os_unfair_lock_s *GEORPFeedbackCommonContextIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPFeedbackCommonContextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 36);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1893C3CAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C4668(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C49C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackCommonCorrectionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v50 = v15 | v8;
        if ((v16 | v9)) {
          uint64_t v17 = 0;
        }
        else {
          uint64_t v17 = a3;
        }
        BOOL v53 = v16;
        char v51 = v16 | v15 | v8;
        char v52 = (v17 == 0) | v16;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_58;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_58:
      int v49 = 1;
      goto LABEL_59;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v53;
    if ((v52 & 1) == 0)
    {
      uint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2)
    {
      if (!v32 || (*(unsigned char *)(a1 + 52) & 4) != 0)
      {
LABEL_52:
        char v43 = PBReaderSkipValueWithTag();
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if ((v43 & 1) == 0)
        {
          int v49 = 0;
          goto LABEL_59;
        }
        goto LABEL_57;
      }
      uint64_t v39 = PBReaderReadString();
      if (v39) {
        -[GEORPFeedbackCommonCorrections _addNoFlagsImageId:](a1, v39);
      }

      goto LABEL_56;
    }
    if (v31 == 1) {
      break;
    }
    if (v50 & 1) == 0 || (*(unsigned char *)(a1 + 52)) {
      goto LABEL_52;
    }
    if (!*(void *)(a1 + 16))
    {
      id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      int v41 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v40;
    }
    int v42 = PBUnknownFieldAdd();
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if (!v42)
    {
      int v49 = 0;
      goto LABEL_60;
    }
LABEL_57:
    if (!(v51 & 1 | (v10 != 0))) {
      goto LABEL_58;
    }
  }
  if (!v32) {
    goto LABEL_52;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0)
  {
    uint64_t v37 = PBReaderReadString();
    uint64_t v38 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v37;

    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_57;
  }
  if (PBReaderSkipValueWithTag())
  {
    v10 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
LABEL_56:
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_57;
  }
  int v49 = 0;
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_59:
  if ((v50 & 1) == 0) {
    goto LABEL_61;
  }
LABEL_60:
  *(unsigned char *)(a1 + 52) |= 1u;
LABEL_61:
  if (v53 || (v49 & 1) == 0)
  {
    *(unsigned char *)(a1 + 52) |= 2u;
    *(unsigned char *)(a1 + 52) |= 4u;
    goto LABEL_71;
  }
  if (v17)
  {
    while (1)
    {
      int v46 = *v17++;
      int v45 = v46;
      if (v46 == 1) {
        break;
      }
      if (v45 == 2)
      {
        char v44 = 4;
LABEL_67:
        *(unsigned char *)(a1 + 52) |= v44;
      }
      else if (!v45)
      {
        goto LABEL_71;
      }
    }
    char v44 = 2;
    goto LABEL_67;
  }
LABEL_71:
  if (v49) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v53)
  {
    unsigned int v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1893C5000(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C5904(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackCommonCorrectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackCommonCorrectionsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPFeedbackCommonCorrectionsReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPFeedbackCommonCorrectionsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackCommonCorrectionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1893C5A94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackCommonCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackCommonCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893C5AF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackCommonCorrectionsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v15 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

void sub_1893C5EFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackCommonCorrectionsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1893C62CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C65D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C6878(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 192));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 188);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 184)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint32x4_t v12 = (uint32x4_t)vdupq_n_s32(*(_DWORD *)(a1 + 196));
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  unsigned int v14 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A62E410), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A62E420), v13)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A62E3F0), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A62E400), v13))), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A62E430), v13)))+ (*(_DWORD *)(a1 + 196) & 1);
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v16 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v18 = v14 > 0xF;
        char v19 = v18 & ~(_BYTE)v11 | v9;
        unsigned __int8 v20 = v18 | v11;
        char v54 = v19;
        char v55 = v20 | v19;
        if ((v20 | v8)) {
          char v21 = 0;
        }
        else {
          char v21 = a3;
        }
        char v56 = (v21 == 0) | v20;
        BOOL v57 = v20;
        unsigned int v22 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v14;
LABEL_7:
        uint64_t v15 = v9;
LABEL_8:
        uint64_t v16 = v10;
        uint64_t v17 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        uint64_t v11 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v23)) {
      goto LABEL_191;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v22;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      if (v26++ >= 9)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_191:
      int v53 = 1;
      goto LABEL_192;
    }
    unint64_t v35 = v27 >> 3;
    BOOL v36 = v57;
    if ((v56 & 1) == 0)
    {
      uint64_t v37 = v21;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 197) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_225;
          }
          int v41 = objc_alloc_init(GEORPPoiFeedback);
          if (GEORPPoiFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v42 = 112;
            goto LABEL_145;
          }
          goto LABEL_224;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_225;
        }
        int v48 = (int)(*(_DWORD *)(a1 + 196) << 19) >> 31;
        goto LABEL_188;
      case 2:
        if (!v36) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 198) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v48 = (int)(*(_DWORD *)(a1 + 196) << 11) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        int v41 = objc_alloc_init(GEORPTransitPoiFeedback);
        if (!GEORPTransitPoiFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v42 = 176;
        goto LABEL_145;
      case 3:
        if (!v36) {
          goto LABEL_146;
        }
        if (*(unsigned char *)(a1 + 198))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v48 = (int)(*(_DWORD *)(a1 + 196) << 15) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        int v41 = objc_alloc_init(GEORPSearchFeedback);
        if (!GEORPSearchFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v42 = 144;
        goto LABEL_145;
      case 4:
        if (!v36) {
          goto LABEL_146;
        }
        if (*(unsigned char *)(a1 + 197))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v48 = (int)(*(_DWORD *)(a1 + 196) << 23) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        int v41 = objc_alloc_init(GEORPMerchantLookupFeedback);
        if (!GEORPMerchantLookupFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v42 = 80;
        goto LABEL_145;
      case 5:
        if (!v36) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 196) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v48 = (int)(*(_DWORD *)(a1 + 196) << 27) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        int v41 = objc_alloc_init(GEORPDirectionsFeedback);
        if (!GEORPDirectionsFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v42 = 48;
        goto LABEL_145;
      case 6:
        if (!v36) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 196) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v48 = (int)(*(_DWORD *)(a1 + 196) << 29) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        int v41 = objc_alloc_init(GEORPAddressFeedback);
        if (!GEORPAddressFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v42 = 32;
        goto LABEL_145;
      case 7:
        if (!v36) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 198) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v48 = (int)(*(_DWORD *)(a1 + 196) << 12) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        int v41 = objc_alloc_init(GEORPTileFeedback);
        if (!GEORPTileFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v42 = 168;
        goto LABEL_145;
      case 8:
        if (!v36) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 196) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v48 = (int)(*(_DWORD *)(a1 + 196) << 26) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        int v41 = objc_alloc_init(GEORPGroundViewFeedback);
        if (!GEORPGroundViewFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v42 = 56;
        goto LABEL_145;
      case 9:
        if (!v36) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 197) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v48 = (int)(*(_DWORD *)(a1 + 196) << 20) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        int v41 = objc_alloc_init(GEORPPoiEnrichmentUpdate);
        if (!GEORPPoiEnrichmentUpdateReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v42 = 104;
        goto LABEL_145;
      case 10:
        if (!v36) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 196) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v48 = (int)(*(_DWORD *)(a1 + 196) << 25) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        int v41 = objc_alloc_init(GEORPIncidentFeedback);
        if (!GEORPIncidentFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v42 = 64;
        goto LABEL_145;
      case 11:
        if (!v36) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 197) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v48 = (int)(*(_DWORD *)(a1 + 196) << 18) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        int v41 = objc_alloc_init(GEORPPoiImageFeedback);
        if (!GEORPPoiImageFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v42 = 120;
        goto LABEL_145;
      case 12:
        if (!v36) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 196) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v48 = (int)(*(_DWORD *)(a1 + 196) << 28) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        int v41 = objc_alloc_init(GEORPCuratedCollectionFeedback);
        if (!GEORPCuratedCollectionFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v42 = 40;
        goto LABEL_145;
      case 13:
        if (!v36) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 197) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v48 = (int)(*(_DWORD *)(a1 + 196) << 21) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        int v41 = objc_alloc_init(GEORPPoiActivityFeedback);
        if (!GEORPPoiActivityFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v42 = 96;
        goto LABEL_145;
      case 14:
        if (!v36) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 196) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v48 = (int)(*(_DWORD *)(a1 + 196) << 30) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        int v41 = objc_alloc_init(GEORPAddToMapFeedback);
        if (!GEORPAddToMapFeedbackReadAllFrom((uint64_t)v41, (void *)v3)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v42 = 24;
        goto LABEL_145;
      case 15:
        if (!v36) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 196) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v48 = (int)(*(_DWORD *)(a1 + 196) << 24) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        int v41 = objc_alloc_init(GEORPLocalityFeedback);
        if (!GEORPLocalityFeedbackReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v42 = 72;
        goto LABEL_145;
      case 16:
        if (!v36) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 198) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v48 = (int)(*(_DWORD *)(a1 + 196) << 14) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        int v41 = objc_alloc_init(GEORPStreetFeedback);
        if (!GEORPStreetFeedbackReadAllFrom((uint64_t)v41, (void *)v3)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v42 = 152;
        goto LABEL_145;
      case 17:
        if (!v36) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 198) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v48 = (int)(*(_DWORD *)(a1 + 196) << 13) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        int v41 = objc_alloc_init(GEORPThirdPartyPhotoSharingPreferenceUpdate);
        if (!GEORPThirdPartyPhotoSharingPreferenceUpdateReadAllFrom((uint64_t)v41, (void *)v3)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v42 = 160;
        goto LABEL_145;
      case 18:
        if (!v36) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 197) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v48 = (int)(*(_DWORD *)(a1 + 196) << 22) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        int v41 = objc_alloc_init(GEORPPhotoAttributionPreferencesUpdate);
        if (!GEORPPhotoAttributionPreferencesUpdateReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v42 = 88;
        goto LABEL_145;
      case 19:
        if (!v36) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 197) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v48 = (int)(*(_DWORD *)(a1 + 196) << 16) >> 31;
          goto LABEL_188;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        int v41 = objc_alloc_init(GEORPRunningTrackFeedback);
        if (!GEORPRunningTrackFeedbackReadAllFrom((uint64_t)v41, (void *)v3)) {
          goto LABEL_224;
        }
        PBReaderRecallMark();
        uint64_t v42 = 136;
        goto LABEL_145;
      case 20:
        if (!v36) {
          goto LABEL_146;
        }
        if ((*(unsigned char *)(a1 + 197) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_225;
          }
          int v48 = (int)(*(_DWORD *)(a1 + 196) << 17) >> 31;
LABEL_188:
          v7 += v48;
LABEL_189:
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_190:
          uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
          if (!(v55 & 1 | (v7 != 0))) {
            goto LABEL_191;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_225;
        }
        int v41 = objc_alloc_init(GEORPRapUserResponseFeedback);
        if (GEORPRapUserResponseFeedbackReadAllFrom((uint64_t)v41, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v42 = 128;
LABEL_145:
          int v46 = *(void **)(a1 + v42);
          *(void *)(a1 + v42) = v41;

          --v7;
          goto LABEL_189;
        }
LABEL_224:

LABEL_225:
        int v53 = 0;
        unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_192:
        if (v54) {
LABEL_193:
        }
          *(_DWORD *)(a1 + 196) |= 1u;
        if (v57 || (v53 & 1) == 0)
        {
          *(_DWORD *)(a1 + 196) |= 0x1000u;
          *(_DWORD *)(a1 + 196) |= 0x100000u;
          *(_DWORD *)(a1 + 196) |= 0x10000u;
          *(_DWORD *)(a1 + 196) |= 0x100u;
          *(_DWORD *)(a1 + 196) |= 0x10u;
          *(_DWORD *)(a1 + 196) |= 4u;
          *(_DWORD *)(a1 + 196) |= 0x80000u;
          *(_DWORD *)(a1 + 196) |= 0x20u;
          *(_DWORD *)(a1 + 196) |= 0x800u;
          *(_DWORD *)(a1 + 196) |= 0x40u;
          *(_DWORD *)(a1 + 196) |= 0x2000u;
          *(_DWORD *)(a1 + 196) |= 8u;
          *(_DWORD *)(a1 + 196) |= 0x400u;
          *(_DWORD *)(a1 + 196) |= 2u;
          *(_DWORD *)(a1 + 196) |= 0x80u;
          *(_DWORD *)(a1 + 196) |= 0x20000u;
          *(_DWORD *)(a1 + 196) |= 0x40000u;
          *(_DWORD *)(a1 + 196) |= 0x200u;
          *(_DWORD *)(a1 + 196) |= 0x8000u;
          *(_DWORD *)(a1 + 196) |= 0x4000u;
        }
        else if (v21)
        {
          while (1)
          {
            int v49 = *v21++;
            int v50 = 4096;
            switch(v49)
            {
              case 0:
                goto LABEL_218;
              case 1:
                goto LABEL_217;
              case 2:
                int v50 = 0x100000;
                goto LABEL_217;
              case 3:
                int v50 = 0x10000;
                goto LABEL_217;
              case 4:
                int v50 = 256;
                goto LABEL_217;
              case 5:
                int v50 = 16;
                goto LABEL_217;
              case 6:
                int v50 = 4;
                goto LABEL_217;
              case 7:
                int v50 = 0x80000;
                goto LABEL_217;
              case 8:
                int v50 = 32;
                goto LABEL_217;
              case 9:
                int v50 = 2048;
                goto LABEL_217;
              case 10:
                int v50 = 64;
                goto LABEL_217;
              case 11:
                int v50 = 0x2000;
                goto LABEL_217;
              case 12:
                int v50 = 8;
                goto LABEL_217;
              case 13:
                int v50 = 1024;
                goto LABEL_217;
              case 14:
                int v50 = 2;
                goto LABEL_217;
              case 15:
                int v50 = 128;
                goto LABEL_217;
              case 16:
                int v50 = 0x20000;
                goto LABEL_217;
              case 17:
                int v50 = 0x40000;
                goto LABEL_217;
              case 18:
                int v50 = 512;
                goto LABEL_217;
              case 19:
                int v50 = 0x8000;
                goto LABEL_217;
              case 20:
                int v50 = 0x4000;
LABEL_217:
                *(_DWORD *)(a1 + 196) |= v50;
                break;
              default:
                continue;
            }
          }
        }
LABEL_218:
        if (v53) {
          unint64_t v3 = *(unsigned char *)(v3 + *v23) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v57)
        {
          char v51 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v54 & 1) == 0 || (*(unsigned char *)(a1 + 196))
        {
LABEL_146:
          char v47 = PBReaderSkipValueWithTag();
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          if ((v47 & 1) == 0)
          {
            int v53 = 0;
            goto LABEL_192;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v44 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v43;
          }
          int v45 = PBUnknownFieldAdd();
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          if (!v45)
          {
            int v53 = 0;
            goto LABEL_193;
          }
        }
        goto LABEL_190;
    }
  }
}

void sub_1893C7C38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C7DA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C7F1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C8090(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C8204(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C837C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C84EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C865C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C87D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C8948(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C8ABC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C8C34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C8DA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C8F1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C9094(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C9208(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C937C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C94F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893C966C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893CABC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackDetailsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 112) readAll:1];
  [*(id *)(a1 + 176) readAll:1];
  [*(id *)(a1 + 144) readAll:1];
  [*(id *)(a1 + 80) readAll:1];
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 168) readAll:1];
  [*(id *)(a1 + 56) readAll:1];
  [*(id *)(a1 + 104) readAll:1];
  [*(id *)(a1 + 64) readAll:1];
  [*(id *)(a1 + 120) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 96) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 72) readAll:1];
  [*(id *)(a1 + 152) readAll:1];
  [*(id *)(a1 + 160) readAll:1];
  [*(id *)(a1 + 88) readAll:1];
  [*(id *)(a1 + 136) readAll:1];
  BOOL v2 = *(void **)(a1 + 128);

  return [v2 readAll:1];
}

unint64_t GEORPFeedbackDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 188))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackDetailsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 192));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 184) = [v8 position];
  *(_DWORD *)(a1 + 188) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackDetailsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackDetailsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPFeedbackDetailsCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 192));
  return Specified;
}

void sub_1893CAED0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893CAF34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackDetailsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPPoiFeedbackIsValid(a1)) {
            goto LABEL_100;
          }
          goto LABEL_103;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPTransitPoiFeedbackIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_100;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPSearchFeedbackIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_100;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPMerchantLookupFeedbackIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_100;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPDirectionsFeedbackIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_100;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPAddressFeedbackIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_100;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPTileFeedbackIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_100;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPGroundViewFeedbackIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_100;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPoiEnrichmentUpdateIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_100;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPIncidentFeedbackIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_100;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPoiImageFeedbackIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_100;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCuratedCollectionFeedbackIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_100;
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPoiActivityFeedbackIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_100;
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPAddToMapFeedbackIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_100;
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPLocalityFeedbackIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_100;
        case 0x10u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPStreetFeedbackIsValid((unsigned __int8 *)a1)) {
            goto LABEL_103;
          }
          goto LABEL_100;
        case 0x11u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPThirdPartyPhotoSharingPreferenceUpdateIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_100;
        case 0x12u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPhotoAttributionPreferencesUpdateIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_100;
        case 0x13u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPRunningTrackFeedbackIsValid(a1)) {
            goto LABEL_103;
          }
          goto LABEL_100;
        case 0x14u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPRapUserResponseFeedbackIsValid(a1)) {
            goto LABEL_103;
          }
LABEL_100:
          PBReaderRecallMark();
          goto LABEL_101;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_103:
            PBReaderRecallMark();
            return 0;
          }
LABEL_101:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_102;
          }
          break;
      }
    }
  }
LABEL_102:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPPoiFeedbackIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPoiCorrectionsIsValid(a1)) {
            goto LABEL_56;
          }
          goto LABEL_53;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1)) {
            goto LABEL_56;
          }
          goto LABEL_53;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRequestIsValid(a1)) {
            goto LABEL_56;
          }
          goto LABEL_53;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v23 = 0;
          break;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCuratedCollectionContextIsValid(a1)) {
            goto LABEL_56;
          }
LABEL_53:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_56:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_49:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEORPTileFeedbackIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_43;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else
      {
        if (v17 == 2)
        {
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCorrectedCoordinateIsValid(a1))
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
          goto LABEL_36;
        }
        if (v17 == 1)
        {
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCorrectedLabelIsValid(a1)) {
            goto LABEL_43;
          }
LABEL_36:
          PBReaderRecallMark();
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_43;
        }
      }
LABEL_40:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEORPPoiActivityFeedbackIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_71;
          }
          goto LABEL_22;
        case 2u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_71:
              PBReaderRecallMark();
              return 0;
            }
LABEL_60:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v38 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v39 = *v2;
                uint64_t v40 = *(void *)&a1[v39];
                unint64_t v41 = v40 + 1;
                if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
                  break;
                }
                int v42 = *(char *)(*(void *)&a1[*v5] + v40);
                *(void *)&a1[v39] = v41;
                if (v42 < 0)
                {
                  BOOL v13 = v38++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_60;
              }
              a1[*v4] = 1;
            }
LABEL_22:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_71;
            }
            while (1)
            {
              uint64_t v17 = *v2;
              uint64_t v18 = *(void *)&a1[v17];
              unint64_t v19 = v18 + 1;
              if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
                break;
              }
              int v20 = *(char *)(*(void *)&a1[*v5] + v18);
              *(void *)&a1[v17] = v19;
              if (v20 < 0)
              {
                unsigned int v21 = v15++;
                if (v21 <= 8) {
                  continue;
                }
              }
              goto LABEL_57;
            }
LABEL_56:
            a1[*v4] = 1;
          }
LABEL_57:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_69;
          }
          break;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_71;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_56;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v27 = v22++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_57;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_71;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_56;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v27 = v28++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_57;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_71;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_56;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v27 = v33++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_57;
          }
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_71;
          }
          goto LABEL_57;
      }
    }
  }
LABEL_69:
  BOOL v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

BOOL GEORPLocalityFeedbackIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRequestIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPStreetFeedbackIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  id v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      uint64_t v11 = *(void *)&a1[v10];
      unint64_t v12 = v11 + 1;
      if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v9 & 7) == 4;
    }
    if (v15) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v16 = 0;
      goto LABEL_22;
    }
  }
  BOOL v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

void sub_1893CC578(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackDetailsIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 192));
  unsigned int v2 = *(_DWORD *)(a1 + 196);
  if ((v2 & 0x200000) != 0) {
    return 1;
  }
  if ((v2 & 0x1000) != 0)
  {
    if (GEORPPoiFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 112))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x100000) != 0)
  {
    if (GEORPTransitPoiFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 176))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x10000) != 0)
  {
    if (GEORPSearchFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 144))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEORPMerchantLookupFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 80))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEORPDirectionsFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 4) != 0)
  {
    if (GEORPAddressFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x80000) != 0)
  {
    if (GEORPTileFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 168))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEORPGroundViewFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x800) != 0)
  {
    if (GEORPPoiEnrichmentUpdateIsDirty(*(os_unfair_lock_s **)(a1 + 104))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEORPIncidentFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 64))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x2000) != 0)
  {
    if (GEORPPoiImageFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 120))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 8) != 0)
  {
    if (GEORPCuratedCollectionFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 0x400) != 0)
  {
    if (GEORPPoiActivityFeedbackIsDirty(*(void *)(a1 + 96))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 196);
  }
  if ((v2 & 2) != 0) {
    return 1;
  }
  if ((v2 & 0x80) == 0) {
    goto LABEL_45;
  }
  if (GEORPLocalityFeedbackIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
    return 1;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 196);
LABEL_45:
  if ((v2 & 0x68200) != 0) {
    return 1;
  }
  return (v2 >> 14) & 1;
}

os_unfair_lock_s *GEORPFeedbackDetailsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPFeedbackDetailsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 48);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

uint64_t GEORPFeedbackDetailsHasSensitiveFields(void *a1, uint64_t a2)
{
  if (!a1) {
    return 0;
  }
  uint64_t v4 = [a1 poiFeedback];
  if (GEORPPoiFeedbackHasSensitiveFields(v4, a2))
  {
    uint64_t v5 = 1;
  }
  else
  {
    int v6 = [a1 transitPoiFeedback];
    if (GEORPTransitPoiFeedbackHasSensitiveFields(v6, a2))
    {
      uint64_t v5 = 1;
    }
    else
    {
      char v7 = [a1 searchFeedback];
      if (GEORPSearchFeedbackHasSensitiveFields(v7, a2))
      {
        uint64_t v5 = 1;
      }
      else
      {
        unsigned int v8 = [a1 merchantLookupFeedback];
        if (GEORPMerchantLookupFeedbackHasSensitiveFields(v8))
        {
          uint64_t v5 = 1;
        }
        else
        {
          uint64_t v9 = [a1 directionsFeedback];
          if (GEORPDirectionsFeedbackHasSensitiveFields(v9, a2))
          {
            uint64_t v5 = 1;
          }
          else
          {
            uint64_t v10 = [a1 addressPointFeedback];
            if (GEORPAddressFeedbackHasSensitiveFields(v10, a2))
            {
              uint64_t v5 = 1;
            }
            else
            {
              uint64_t v11 = [a1 poiEnrichmentUpdate];
              if (GEORPPoiEnrichmentUpdateHasSensitiveFields(v11))
              {
                uint64_t v5 = 1;
              }
              else
              {
                unint64_t v12 = [a1 incidentFeedback];
                if (GEORPIncidentFeedbackHasSensitiveFields(v12))
                {
                  uint64_t v5 = 1;
                }
                else
                {
                  char v13 = [a1 localityFeedback];
                  uint64_t v5 = (uint64_t)GEORPLocalityFeedbackHasSensitiveFields(v13, a2);
                }
              }
            }
          }
        }
      }
    }
  }

  return v5;
}

void *GEORPPoiFeedbackHasSensitiveFields(void *result, uint64_t a2)
{
  if (result)
  {
    id v3 = [result placeRequest];
    uint64_t HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

uint64_t GEORPTransitPoiFeedbackHasSensitiveFields(void *a1, uint64_t a2)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  uint64_t v4 = [a1 placeRequest];
  char HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v4, a2);

  if ((HasSensitiveFields & 1) == 0)
  {
    long long v23 = 0u;
    long long v24 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    char v7 = [a1 directionsRequests];
    uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v26 count:16];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(void *)v22;
LABEL_7:
      uint64_t v11 = 0;
      while (1)
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        if (GEODirectionsRequestHasSensitiveFields(*(void *)(*((void *)&v21 + 1) + 8 * v11))) {
          break;
        }
        if (v9 == ++v11)
        {
          uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v26 count:16];
          if (v9) {
            goto LABEL_7;
          }
          goto LABEL_13;
        }
      }
    }
    else
    {
LABEL_13:

      long long v19 = 0u;
      long long v20 = 0u;
      long long v17 = 0u;
      long long v18 = 0u;
      char v7 = objc_msgSend(a1, "directionsResponses", 0);
      uint64_t v12 = [v7 countByEnumeratingWithState:&v17 objects:v25 count:16];
      if (!v12)
      {
LABEL_21:
        uint64_t v6 = 0;
LABEL_23:

        return v6;
      }
      uint64_t v13 = v12;
      uint64_t v14 = *(void *)v18;
LABEL_15:
      uint64_t v15 = 0;
      while (1)
      {
        if (*(void *)v18 != v14) {
          objc_enumerationMutation(v7);
        }
        if (GEODirectionsResponseHasSensitiveFields(*(void **)(*((void *)&v17 + 1) + 8 * v15))) {
          break;
        }
        if (v13 == ++v15)
        {
          uint64_t v13 = [v7 countByEnumeratingWithState:&v17 objects:v25 count:16];
          if (v13) {
            goto LABEL_15;
          }
          goto LABEL_21;
        }
      }
    }
    uint64_t v6 = 1;
    goto LABEL_23;
  }
  return 1;
}

void *GEORPSearchFeedbackHasSensitiveFields(void *result, uint64_t a2)
{
  if (result)
  {
    id v3 = [result context];
    uint64_t HasSensitiveFields = GEORPSearchFeedbackContextHasSensitiveFields(v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void *GEORPMerchantLookupFeedbackHasSensitiveFields(void *result)
{
  if (result)
  {
    id v1 = [result context];
    uint64_t HasSensitiveFields = GEORPMerchantLookupContextHasSensitiveFields(v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void *GEORPLocalityFeedbackHasSensitiveFields(void *result, uint64_t a2)
{
  if (result)
  {
    id v3 = [result placeRequest];
    uint64_t HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void GEORPPoiFeedbackClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasPlaceRequest]
    && ([a1 placeRequest],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    char v7 = [a1 placeRequest];
    id v8 = (id)[v7 copy];

    GEOPDPlaceRequestClearSensitiveFields(v8, a2, 0);
    [a1 setPlaceRequest:v8];
  }
  else
  {
    id v8 = [a1 placeRequest];
    [v8 clearSensitiveFields:a2];
  }
}

unint64_t GEORPTransitPoiFeedbackClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasPlaceRequest]
    && ([a1 placeRequest],
        uint64_t v6 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v6, a2),
        v6,
        HasSensitiveFields))
  {
    id v8 = [a1 placeRequest];
    uint64_t v9 = (void *)[v8 copy];

    GEOPDPlaceRequestClearSensitiveFields(v9, a2, 0);
    [a1 setPlaceRequest:v9];
  }
  else
  {
    uint64_t v9 = [a1 placeRequest];
    [v9 clearSensitiveFields:a2];
  }

  -[GEORPTransitPoiFeedback _readDirectionsRequests]((uint64_t)a1);
  if ([a1[4] count])
  {
    unint64_t v10 = 0;
    do
    {
      uint64_t v11 = [a1[4] objectAtIndexedSubscript:v10];
      uint64_t v12 = (void *)v11;
      if (a3 && GEODirectionsRequestHasSensitiveFields(v11))
      {
        uint64_t v13 = (id *)[v12 copy];
        GEODirectionsRequestClearSensitiveFields(v13, a2, 0);
        [a1[4] replaceObjectAtIndex:v10 withObject:v13];
      }
      else
      {
        [v12 clearSensitiveFields:a2];
      }

      ++v10;
    }
    while (v10 < [a1[4] count]);
  }
  -[GEORPTransitPoiFeedback _readDirectionsResponses]((uint64_t)a1);
  unint64_t result = [a1[5] count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      BOOL v16 = [a1[5] objectAtIndexedSubscript:i];
      long long v17 = v16;
      if (a3 && GEODirectionsResponseHasSensitiveFields(v16))
      {
        long long v18 = (void *)[v17 copy];
        GEODirectionsResponseClearSensitiveFields((uint64_t)v18, a2, 0);
        [a1[5] replaceObjectAtIndex:i withObject:v18];
      }
      else
      {
        [v17 clearSensitiveFields:a2];
      }

      unint64_t result = [a1[5] count];
    }
  }
  return result;
}

void GEORPSearchFeedbackClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasContext]
    && ([a1 context],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEORPSearchFeedbackContextHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    char v7 = [a1 context];
    id v8 = (id *)[v7 copy];

    GEORPSearchFeedbackContextClearSensitiveFields(v8, a2, 0);
    [a1 setContext:v8];
  }
  else
  {
    id v8 = [a1 context];
    [v8 clearSensitiveFields:a2];
  }
}

void GEORPMerchantLookupFeedbackClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasContext]
    && ([a1 context],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEORPMerchantLookupContextHasSensitiveFields(v5),
        v5,
        HasSensitiveFields))
  {
    char v7 = [a1 context];
    id v8 = (id)[v7 copy];

    GEORPMerchantLookupContextClearSensitiveFields(v8, a2, 0);
    [a1 setContext:v8];
  }
  else
  {
    id v8 = [a1 context];
    [v8 clearSensitiveFields:a2];
  }
}

void GEORPLocalityFeedbackClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasPlaceRequest]
    && ([a1 placeRequest],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    char v7 = [a1 placeRequest];
    id v8 = (id)[v7 copy];

    GEOPDPlaceRequestClearSensitiveFields(v8, a2, 0);
    [a1 setPlaceRequest:v8];
  }
  else
  {
    id v8 = [a1 placeRequest];
    [v8 clearSensitiveFields:a2];
  }
}

void sub_1893CDA40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893CDB00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackImageIdMapEntryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackImageIdMapEntryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackImageIdMapEntryReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackImageIdMapEntryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackImageIdMapEntryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1893CE0D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackImageIdMapEntryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackImageIdMapEntryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893CE138(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893CE2E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackImageIdMapEntryIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1893CE594(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893CE7E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893CEA88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackImageUploadInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFDFFFCFFFEFFFFLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 > 2;
        char v15 = v14 & ~(_BYTE)v10 | v7;
        unsigned __int8 v16 = v14 | v10;
        char v50 = v15;
        char v51 = v16 | v15;
        if ((v16 | v8)) {
          long long v17 = 0;
        }
        else {
          long long v17 = a3;
        }
        char v52 = (v17 == 0) | v16;
        BOOL v53 = v16;
        long long v18 = (int *)MEMORY[0x1E4F940E8];
        long long v19 = (int *)MEMORY[0x1E4F940C8];
        long long v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_69;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_69:
      int v49 = 1;
      goto LABEL_70;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v53;
    if ((v52 & 1) == 0)
    {
      unsigned int v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 32;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_87;
        }
        char v44 = 32 * *(unsigned char *)(a1 + 68);
        goto LABEL_67;
      case 2:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 24;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_87;
        }
        char v44 = *(unsigned char *)(a1 + 68) << 6;
        goto LABEL_67;
      case 3:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 48;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_87;
        }
        char v44 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_67;
      case 4:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 40;
LABEL_56:
          int v42 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          long long v19 = (int *)MEMORY[0x1E4F940C8];
          --v9;
LABEL_68:
          if (!(v51 & 1 | (v9 != 0))) {
            goto LABEL_69;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v44 = 16 * *(unsigned char *)(a1 + 68);
LABEL_67:
          v9 += v44 >> 7;
          long long v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_68;
        }
LABEL_87:
        int v49 = 0;
        long long v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_70:
        if (v50) {
LABEL_71:
        }
          *(unsigned char *)(a1 + 68) |= 1u;
        if (v53 || (v49 & 1) == 0)
        {
          *(unsigned char *)(a1 + 68) |= 4u;
          *(unsigned char *)(a1 + 68) |= 2u;
          *(unsigned char *)(a1 + 68) |= 0x10u;
          *(unsigned char *)(a1 + 68) |= 8u;
        }
        else if (v17)
        {
          while (1)
          {
            int v46 = *v17++;
            char v45 = 4;
            switch(v46)
            {
              case 0:
                goto LABEL_81;
              case 1:
                goto LABEL_79;
              case 2:
                char v45 = 2;
                goto LABEL_79;
              case 3:
                char v45 = 16;
                goto LABEL_79;
              case 4:
                char v45 = 8;
LABEL_79:
                *(unsigned char *)(a1 + 68) |= v45;
                break;
              default:
                continue;
            }
          }
        }
LABEL_81:
        if (v49) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v53)
        {
          char v47 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v50 & 1) == 0 || (*(unsigned char *)(a1 + 68))
        {
LABEL_57:
          char v43 = PBReaderSkipValueWithTag();
          long long v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v43 & 1) == 0)
          {
            int v49 = 0;
            goto LABEL_70;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v40 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v39;
          }
          int v41 = PBUnknownFieldAdd();
          long long v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v41)
          {
            int v49 = 0;
            goto LABEL_71;
          }
        }
        goto LABEL_68;
    }
  }
}

void sub_1893CF214(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893CF380(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893CF4EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893CFC14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackImageUploadInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackImageUploadInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackImageUploadInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackImageUploadInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackImageUploadInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1893CFDA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackImageUploadInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackImageUploadInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893CFE08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackImageUploadInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_32;
          }
          goto LABEL_28;
        case 2u:
          if (v15 == 2) {
            goto LABEL_28;
          }
          goto LABEL_32;
        case 3u:
          if (v15 == 2) {
            goto LABEL_28;
          }
          goto LABEL_32;
        case 4u:
          if (v15 != 2) {
            goto LABEL_32;
          }
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_32:
            BOOL v17 = 0;
            goto LABEL_31;
          }
LABEL_29:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_30;
          }
          break;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_32;
          }
          goto LABEL_29;
      }
    }
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackImageUploadInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0x3E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_1893D034C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893D063C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackImageUploadParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v24 = *v6;
            uint64_t v25 = *(void *)&v5[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&v5[*v7]) {
              break;
            }
            char v27 = *(unsigned char *)(*(void *)&v5[*v9] + v25);
            *(void *)&v5[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0) {
              goto LABEL_36;
            }
            v21 += 7;
            BOOL v17 = v22++ >= 9;
            if (v17)
            {
              uint64_t v23 = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            uint64_t v23 = 0;
          }
LABEL_38:
          *(unsigned char *)(a1 + 24) = v23 != 0;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          long long v20 = objc_alloc_init(GEORPPhotoMetadata);
          if (!GEORPPhotoMetadataReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addImage:", v20, 0, 0);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v28 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v29 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v28;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v30 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v30 = 0;
  }
  objc_sync_exit(v5);

  return v30;
}

void sub_1893D124C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackImageUploadParametersReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackImageUploadParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893D12B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackImageUploadParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPhotoMetadataIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

unint64_t GEORPFeedbackImageUploadParametersClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result = [*(id *)(a1 + 16) count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      unint64_t v8 = [*(id *)(a1 + 16) objectAtIndexedSubscript:i];
      uint64_t v9 = v8;
      if (a3 && GEORPPhotoMetadataHasSensitiveFields(v8))
      {
        uint64_t v10 = (void *)[v9 copy];
        unint64_t v11 = [v10 geotag];
        [v11 clearSensitiveFields:a2];

        [*(id *)(a1 + 16) replaceObjectAtIndex:i withObject:v10];
      }
      else
      {
        [v9 clearSensitiveFields:a2];
      }

      unint64_t result = [*(id *)(a1 + 16) count];
    }
  }
  return result;
}

uint64_t GEORPFeedbackImageUploadParametersHasSensitiveFields(void *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = objc_msgSend(a1, "images", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v9;
    while (2)
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v9 != v4) {
          objc_enumerationMutation(v1);
        }
        if (GEORPPhotoMetadataHasSensitiveFields(*(void **)(*((void *)&v8 + 1) + 8 * v5)))
        {
          uint64_t v6 = 1;
          goto LABEL_12;
        }
        ++v5;
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v6 = 0;
LABEL_12:

  return v6;
}

BOOL GEORPFeedbackImageUploadResultReadAllFrom(void *a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    long long v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v20 = objc_alloc_init(GEORPFeedbackImageUploadInfo);
          if (!GEORPFeedbackImageUploadInfoReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addImageUploadInfo:", v20, 0, 0);
        }
        else
        {
          if (!a1[1])
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v22 = (void *)a1[1];
            a1[1] = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1893D282C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackImageUploadResultReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackImageUploadResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893D2890(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackImageUploadResultIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackImageUploadInfoIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackLogEventDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v20 = objc_alloc_init(GEORPRapNotificationLogEvent);
          if (!GEORPRapNotificationLogEventReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          id v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v22 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v23 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v22;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_1893D37A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLogEventDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackLogEventDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893D380C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLogEventDetailsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPRapNotificationLogEventIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPRapNotificationLogEventIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_44;
          }
          goto LABEL_22;
        case 2u:
          if (v15 == 2) {
            goto LABEL_22;
          }
          goto LABEL_44;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_40;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_41;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_22:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_44:
          BOOL v28 = 0;
          goto LABEL_43;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_41;
      }
LABEL_40:
      a1[*v4] = 1;
LABEL_41:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v28;
}

void sub_1893D41C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackLogEventParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 1;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v62 = v18;
        char v63 = v19 | v18;
        if ((v19 | v9)) {
          unint64_t v20 = 0;
        }
        else {
          unint64_t v20 = a3;
        }
        char v64 = (v20 == 0) | v19;
        BOOL v65 = v19;
        int v21 = (int *)MEMORY[0x1E4F940E8];
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_83;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_83:
      int v60 = 1;
      goto LABEL_84;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v65;
    if ((v64 & 1) == 0)
    {
      BOOL v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 64) & 4) == 0)
        {
          uint64_t v40 = PBReaderReadString();
          int v41 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v40;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_100;
        }
        char v55 = 32 * *(unsigned char *)(a1 + 64);
        goto LABEL_80;
      case 2:
        if (!v35) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 64) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_100;
          }
          char v55 = 16 * *(unsigned char *)(a1 + 64);
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_100;
        }
        char v45 = objc_alloc_init(GEORPTimestamp);
        if (!GEORPTimestampReadAllFrom((uint64_t)v45, (void *)v3)) {
          goto LABEL_99;
        }
        PBReaderRecallMark();
        uint64_t v46 = 32;
        goto LABEL_66;
      case 3:
        if ((v9 & 1) == 0) {
          goto LABEL_68;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (2)
        {
          uint64_t v50 = *v21;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v23) + v51);
            *(void *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v31 = v48++ >= 9;
              if (v31)
              {
                LODWORD(v49) = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v49) = 0;
        }
LABEL_73:
        *(_DWORD *)(a1 + 60) = v49;
        goto LABEL_82;
      case 4:
        if (!v35) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 64) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_100;
          }
          char v55 = 8 * *(unsigned char *)(a1 + 64);
LABEL_80:
          v8 += v55 >> 7;
LABEL_81:
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_82:
          if (!(v63 & 1 | (v8 != 0))) {
            goto LABEL_83;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_100;
        }
        char v45 = objc_alloc_init(GEORPFeedbackLogEventDetails);
        if (GEORPFeedbackLogEventDetailsReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v46 = 40;
LABEL_66:
          int v41 = *(void **)(a1 + v46);
          *(void *)(a1 + v46) = v45;
LABEL_67:

          --v8;
          goto LABEL_81;
        }
LABEL_99:

LABEL_100:
        int v60 = 0;
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_84:
        uint64_t v61 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
        if (v62) {
LABEL_85:
        }
          *(unsigned char *)(a1 + v61[516]) |= 2u;
        if (v65 || (v60 & 1) == 0)
        {
          *(unsigned char *)(a1 + v61[516]) |= 4u;
          *(unsigned char *)(a1 + v61[516]) |= 8u;
          *(unsigned char *)(a1 + v61[516]) |= 0x10u;
        }
        else if (v20)
        {
          while (1)
          {
            int v56 = *v20++;
            char v57 = 4;
            switch(v56)
            {
              case 0:
                goto LABEL_93;
              case 1:
                goto LABEL_92;
              case 2:
                char v57 = 8;
                goto LABEL_92;
              case 4:
                char v57 = 16;
LABEL_92:
                *(unsigned char *)(a1 + v61[516]) |= v57;
                break;
              default:
                continue;
            }
          }
        }
LABEL_93:
        if (v60) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v65)
        {
          unsigned int v58 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v62 & 1) == 0 || (*(unsigned char *)(a1 + 64) & 2) != 0)
        {
LABEL_68:
          char v54 = PBReaderSkipValueWithTag();
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v54 & 1) == 0)
          {
            int v60 = 0;
            goto LABEL_84;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v43 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v42;
          }
          int v44 = PBUnknownFieldAdd();
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v44)
          {
            int v60 = 0;
            uint64_t v61 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
            goto LABEL_85;
          }
        }
        goto LABEL_82;
    }
  }
}

void sub_1893D4A50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893D4D64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893D52E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackLogEventParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackLogEventParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPFeedbackLogEventParametersReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPFeedbackLogEventParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackLogEventParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1893D549C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackLogEventParametersReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackLogEventParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893D5500(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLogEventParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_41;
          }
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPTimestampIsValid(a1)) {
            goto LABEL_41;
          }
          goto LABEL_37;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_41;
          }
          unsigned int v17 = 0;
          break;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackLogEventDetailsIsValid(a1)) {
            goto LABEL_41;
          }
LABEL_37:
          PBReaderRecallMark();
          continue;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_41:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_39;
      }
      a1[*v4] = 1;
LABEL_39:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_1893D5988(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLogEventParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 64) & 0x3C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1893D5CE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893D6040(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLogEventResultReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1893D6604(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLogEventResultReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackLogEventResultReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893D6668(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLogEventResultIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      uint64_t v11 = *(void *)&a1[v10];
      unint64_t v12 = v11 + 1;
      if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v9 & 7) == 4;
    }
    if (v15) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v16 = 0;
      goto LABEL_22;
    }
  }
  BOOL v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

void sub_1893D6D78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 116);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 112)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = *(unsigned __int16 *)(a1 + 128);
  unsigned int v13 = ((v12 >> 7) & 1)
      + ((v12 >> 2) & 1)
      + ((v12 >> 1) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v12), (uint16x4_t)0xFFFAFFFCFFF7FFF6), (int8x8_t)0x1000100010001))+ ((v12 >> 5) & 1)+ ((v12 >> 8) & 1)+ ((v12 >> 3) & 1));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 6;
        char v18 = v17 & ~(_BYTE)v11 | v9;
        char v19 = v17 | v11;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        if (((v17 | v11) | v8)) {
          BOOL v21 = 0;
        }
        else {
          BOOL v21 = a3;
        }
        int v81 = 1;
        char v22 = v18;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_156;
        }
        char v80 = v18;
        char v83 = v19 | v18;
        char v84 = (v21 == 0) | v19;
        BOOL v23 = (int *)MEMORY[0x1E4F940C8];
        char v24 = (int *)MEMORY[0x1E4F940B8];
        char v82 = v19;
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v9;
LABEL_8:
        uint64_t v15 = v10;
        uint64_t v16 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v14;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v23)) {
      goto LABEL_154;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v20;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v32 = v26++ >= 9;
      if (v32)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    int v34 = v27 & 7;
    if (v33 || v34 == 4)
    {
LABEL_154:
      int v81 = 1;
      goto LABEL_155;
    }
    BOOL v36 = v23;
    unint64_t v37 = v27 >> 3;
    BOOL v38 = v19;
    if ((v84 & 1) == 0)
    {
      BOOL v39 = v21;
      do
      {
        int v41 = *v39++;
        int v40 = v41;
        BOOL v38 = v41 != 0;
        if (v41) {
          BOOL v42 = v40 == v37;
        }
        else {
          BOOL v42 = 1;
        }
      }
      while (!v42);
    }
    int v43 = v37 - 1;
    BOOL v23 = v36;
    switch(v43)
    {
      case 0:
        if ((v8 & 1) == 0) {
          goto LABEL_116;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 128) |= 1u;
        int v6 = (int *)MEMORY[0x1E4F940E0];
        char v24 = (int *)MEMORY[0x1E4F940B8];
        while (1)
        {
          uint64_t v47 = *v20;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6)) {
            break;
          }
          char v50 = *(unsigned char *)(*(void *)(v3 + *v24) + v48);
          *(void *)(v3 + v47) = v49;
          v46 |= (unint64_t)(v50 & 0x7F) << v44;
          if ((v50 & 0x80) == 0) {
            goto LABEL_120;
          }
          v44 += 7;
          BOOL v32 = v45++ >= 9;
          if (v32)
          {
            LODWORD(v46) = 0;
            goto LABEL_122;
          }
        }
        *(unsigned char *)(v3 + *v23) = 1;
LABEL_120:
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v46) = 0;
        }
LABEL_122:
        *(_DWORD *)(a1 + 124) = v46;
        goto LABEL_141;
      case 1:
        if (!v38) {
          goto LABEL_116;
        }
        if ((*(_WORD *)(a1 + 128) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_179;
          }
          __int16 v67 = *(_WORD *)(a1 + 128) << 6;
          goto LABEL_138;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_179;
        }
        uint64_t v51 = objc_alloc_init(GEORPFeedbackRequestParameters);
        if (!GEORPFeedbackRequestParametersReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1)) {
          goto LABEL_178;
        }
        PBReaderRecallMark();
        uint64_t v53 = 96;
        goto LABEL_88;
      case 2:
        if (!v38) {
          goto LABEL_116;
        }
        if ((*(_WORD *)(a1 + 128) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_179;
          }
          __int16 v67 = 32 * *(_WORD *)(a1 + 128);
          goto LABEL_138;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_179;
        }
        uint64_t v51 = objc_alloc_init(GEORPFeedbackUserInfo);
        if (!GEORPFeedbackUserInfoReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1)) {
          goto LABEL_178;
        }
        PBReaderRecallMark();
        uint64_t v53 = 104;
        goto LABEL_88;
      case 3:
        if (!v38) {
          goto LABEL_116;
        }
        if ((*(_WORD *)(a1 + 128) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_179;
          }
          __int16 v67 = *(_WORD *)(a1 + 128) << 11;
          goto LABEL_138;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_179;
        }
        uint64_t v51 = objc_alloc_init(GEOPDAnalyticMetadata);
        if (!GEOPDAnalyticMetadataReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1)) {
          goto LABEL_178;
        }
        PBReaderRecallMark();
        uint64_t v53 = 56;
        goto LABEL_88;
      case 4:
        if (!v38) {
          goto LABEL_116;
        }
        if ((*(_WORD *)(a1 + 128) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_179;
          }
          __int16 v67 = *(_WORD *)(a1 + 128) << 9;
          goto LABEL_138;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_179;
        }
        uint64_t v51 = objc_alloc_init(GEOPDClientMetadata);
        if (!GEOPDClientMetadataReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1)) {
          goto LABEL_178;
        }
        PBReaderRecallMark();
        uint64_t v53 = 72;
        goto LABEL_88;
      case 5:
        if (!v38) {
          goto LABEL_116;
        }
        if ((*(_WORD *)(a1 + 128) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_179;
          }
          __int16 v67 = *(_WORD *)(a1 + 128) << 10;
          goto LABEL_138;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_179;
        }
        uint64_t v51 = objc_alloc_init(GEORPClientCapabilities);
        if (!GEORPClientCapabilitiesReadAllFrom((uint64_t)v51, (void *)v3)) {
          goto LABEL_178;
        }
        PBReaderRecallMark();
        uint64_t v53 = 64;
        goto LABEL_88;
      case 6:
        if (!v38 || (*(_WORD *)(a1 + 128) & 0x100) != 0) {
          goto LABEL_116;
        }
        char v54 = PBReaderReadString();
        if (v54) {
          -[GEORPFeedbackRequest _addNoFlagsDisplayLanguage:](a1, v54);
        }

        goto LABEL_139;
      case 7:
        if (!v38) {
          goto LABEL_116;
        }
        if ((*(_WORD *)(a1 + 128) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_179;
          }
          __int16 v67 = *(_WORD *)(a1 + 128) << 12;
LABEL_138:
          v7 += v67 >> 15;
          goto LABEL_139;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_179;
        }
        uint64_t v51 = objc_alloc_init(GEOABSecondPartyPlaceRequestClientMetaData);
        if (GEOABSecondPartyPlaceRequestClientMetaDataReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v53 = 48;
LABEL_88:
          char v55 = *(void **)(a1 + v53);
          *(void *)(a1 + v53) = v51;

          --v7;
LABEL_139:
          char v19 = v82;
LABEL_140:
          int v6 = (int *)MEMORY[0x1E4F940E0];
          char v24 = (int *)MEMORY[0x1E4F940B8];
LABEL_141:
          if (!(v83 & 1 | (v7 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_154;
          }
          continue;
        }
LABEL_178:

LABEL_179:
        int v81 = 0;
        char v19 = v82;
LABEL_155:
        char v22 = v80;
LABEL_156:
        if (v22) {
LABEL_157:
        }
          *(_WORD *)(a1 + 128) |= 2u;
        if (v19 & 1 | ((v81 & 1) == 0))
        {
          *(_WORD *)(a1 + 128) |= 0x200u;
          *(_WORD *)(a1 + 128) |= 0x400u;
          *(_WORD *)(a1 + 128) |= 0x10u;
          *(_WORD *)(a1 + 128) |= 0x40u;
          *(_WORD *)(a1 + 128) |= 0x20u;
          *(_WORD *)(a1 + 128) |= 0x100u;
          *(_WORD *)(a1 + 128) |= 8u;
          *(_WORD *)(a1 + 128) |= 4u;
          *(_WORD *)(a1 + 128) |= 0x80u;
        }
        else if (v21)
        {
          while (1)
          {
            int v76 = *v21++;
            int v75 = v76;
            __int16 v77 = 512;
            switch(v76)
            {
              case 0:
                goto LABEL_172;
              case 1:
                continue;
              case 2:
                goto LABEL_171;
              case 3:
                __int16 v77 = 1024;
                goto LABEL_171;
              case 4:
                __int16 v77 = 16;
                goto LABEL_171;
              case 5:
                __int16 v77 = 64;
                goto LABEL_171;
              case 6:
                __int16 v77 = 32;
                goto LABEL_171;
              case 7:
                __int16 v77 = 256;
                goto LABEL_171;
              case 8:
                __int16 v77 = 8;
                goto LABEL_171;
              case 9:
                __int16 v77 = 4;
                goto LABEL_171;
              default:
                if (v75 != 201) {
                  continue;
                }
                __int16 v77 = 128;
LABEL_171:
                *(_WORD *)(a1 + 128) |= v77;
                break;
            }
          }
        }
LABEL_172:
        if (v81)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v19 & 1) == 0) {
            return v3;
          }
LABEL_176:
          uint64_t v78 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v19) {
            goto LABEL_176;
          }
        }
        return v3;
      case 8:
        if (!v38 || (*(_WORD *)(a1 + 128) & 4) != 0)
        {
LABEL_116:
          char v66 = PBReaderSkipValueWithTag();
          char v19 = v82;
          goto LABEL_117;
        }
        if (v34 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_179;
          }
          int v6 = (int *)MEMORY[0x1E4F940E0];
          char v24 = (int *)MEMORY[0x1E4F940B8];
          if (*(void *)(v3 + *v20) < *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]))
          {
            do
            {
              if (*(unsigned char *)(v3 + *v23)) {
                break;
              }
              char v56 = 0;
              unsigned int v57 = 0;
              uint64_t v58 = 0;
              while (1)
              {
                uint64_t v59 = *v20;
                uint64_t v60 = *(void *)(v3 + v59);
                unint64_t v61 = v60 + 1;
                if (v60 == -1 || v61 > *(void *)(v3 + *v6)) {
                  break;
                }
                char v62 = *(unsigned char *)(*(void *)(v3 + *v24) + v60);
                *(void *)(v3 + v59) = v61;
                v58 |= (unint64_t)(v62 & 0x7F) << v56;
                if (v62 < 0)
                {
                  v56 += 7;
                  BOOL v32 = v57++ >= 9;
                  if (!v32) {
                    continue;
                  }
                }
                goto LABEL_103;
              }
              *(unsigned char *)(v3 + *v23) = 1;
LABEL_103:
              PBRepeatedInt32Add();
            }
            while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6));
          }
          PBReaderRecallMark();
        }
        else
        {
          char v68 = 0;
          unsigned int v69 = 0;
          uint64_t v70 = 0;
          int v6 = (int *)MEMORY[0x1E4F940E0];
          char v24 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v71 = *v20;
            uint64_t v72 = *(void *)(v3 + v71);
            unint64_t v73 = v72 + 1;
            if (v72 == -1 || v73 > *(void *)(v3 + *v6)) {
              break;
            }
            char v74 = *(unsigned char *)(*(void *)(v3 + *v24) + v72);
            *(void *)(v3 + v71) = v73;
            v70 |= (unint64_t)(v74 & 0x7F) << v68;
            if (v74 < 0)
            {
              v68 += 7;
              BOOL v32 = v69++ >= 9;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_152;
          }
          *(unsigned char *)(v3 + *v23) = 1;
LABEL_152:
          PBRepeatedInt32Add();
        }
        char v19 = v82;
        goto LABEL_141;
      default:
        if (v36 == 201)
        {
          if (v38)
          {
            if ((*(_WORD *)(a1 + 128) & 0x80) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_179;
              }
              v7 += *(unsigned __int16 *)(a1 + 128) << 24 >> 31;
            }
            else
            {
              if ((PBReaderPlaceMark() & 1) == 0) {
                goto LABEL_179;
              }
              uint64_t v51 = objc_alloc_init(GEORPDebugSettings);
              if (!GEORPDebugSettingsReadAllFrom((uint64_t)v51, (void *)v3)) {
                goto LABEL_178;
              }
              PBReaderRecallMark();
              unint64_t v52 = *(void **)(a1 + 80);
              *(void *)(a1 + 80) = v51;

              --v7;
            }
            char v19 = v82;
            BOOL v23 = v36;
            goto LABEL_140;
          }
LABEL_115:
          char v66 = PBReaderSkipValueWithTag();
          char v19 = v82;
          BOOL v23 = v36;
LABEL_117:
          int v6 = (int *)MEMORY[0x1E4F940E0];
          char v24 = (int *)MEMORY[0x1E4F940B8];
          if ((v66 & 1) == 0)
          {
            int v81 = 0;
            goto LABEL_155;
          }
          goto LABEL_141;
        }
        if ((v80 & 1) == 0 || (*(_WORD *)(a1 + 128) & 2) != 0) {
          goto LABEL_115;
        }
        if (!*(void *)(a1 + 16))
        {
          id v63 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          char v64 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v63;
        }
        int v65 = PBUnknownFieldAdd();
        char v19 = v82;
        BOOL v23 = v36;
        int v6 = (int *)MEMORY[0x1E4F940E0];
        char v24 = (int *)MEMORY[0x1E4F940B8];
        if (!v65)
        {
          int v81 = 0;
          goto LABEL_157;
        }
        goto LABEL_141;
    }
  }
}

void sub_1893D7C30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893D7D9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893D7F0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893D807C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893D81EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893D85B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893D871C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893D8B84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893D9BFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackRequestCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 96) readAll:1];
  [*(id *)(a1 + 104) readAll:1];
  [*(id *)(a1 + 56) readAll:1];
  [*(id *)(a1 + 72) readAll:1];
  [*(id *)(a1 + 64) readAll:1];
  [*(id *)(a1 + 48) readAll:1];
  BOOL v2 = *(void **)(a1 + 80);

  return [v2 readAll:1];
}

unint64_t GEORPFeedbackRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 116))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackRequestReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 120));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 112) = [v8 position];
  *(_DWORD *)(a1 + 116) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackRequestReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackRequestReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackRequestReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPFeedbackRequestCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 120));
  return Specified;
}

void sub_1893D9E3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackRequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893D9EA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackRequestIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_81;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_67;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0 && v17++ <= 8) {
              continue;
            }
            goto LABEL_68;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackRequestParametersIsValid(a1)) {
            goto LABEL_81;
          }
          goto LABEL_57;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackUserInfoIsValid(a1)) {
            goto LABEL_81;
          }
          goto LABEL_57;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAnalyticMetadataIsValid(a1)) {
            goto LABEL_81;
          }
          goto LABEL_57;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDClientMetadataIsValid(a1)) {
            goto LABEL_81;
          }
          goto LABEL_57;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPClientCapabilitiesIsValid(a1)) {
            goto LABEL_81;
          }
          goto LABEL_57;
        case 7u:
          if (v15 == 2) {
            goto LABEL_65;
          }
          goto LABEL_81;
        case 8u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOABSecondPartyPlaceRequestClientMetaDataIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_81;
        case 9u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_81;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              uint64_t v24 = *(void *)&a1[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                break;
              }
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                unsigned int v27 = v15++;
                if (v27 <= 8) {
                  continue;
                }
              }
              goto LABEL_68;
            }
LABEL_67:
            a1[*v4] = 1;
            goto LABEL_68;
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_81;
          }
LABEL_71:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v28 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v29 = *v2;
              uint64_t v30 = *(void *)&a1[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
                break;
              }
              int v32 = *(char *)(*(void *)&a1[*v5] + v30);
              *(void *)&a1[v29] = v31;
              if (v32 < 0)
              {
                BOOL v13 = v28++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_71;
            }
            a1[*v4] = 1;
          }
          goto LABEL_57;
        default:
          if ((v8 >> 3) == 201)
          {
            if (v15 != 2 || !PBReaderPlaceMark() || !GEORPDebugSettingsIsValid(a1))
            {
LABEL_81:
              PBReaderRecallMark();
              return 0;
            }
LABEL_57:
            PBReaderRecallMark();
          }
          else
          {
LABEL_65:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_81;
            }
          }
LABEL_68:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_80;
          }
          break;
      }
    }
  }
LABEL_80:
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEORPFeedbackRequestParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPFeedbackSubmissionParametersIsValid(a1)) {
            goto LABEL_48;
          }
          goto LABEL_51;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackIdLookupParametersIsValid(a1)) {
            goto LABEL_51;
          }
          goto LABEL_48;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackQueryParametersIsValid(a1)) {
            goto LABEL_51;
          }
          goto LABEL_48;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackImageUploadParametersIsValid(a1)) {
            goto LABEL_51;
          }
          goto LABEL_48;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackLayoutConfigParametersIsValid(a1)) {
            goto LABEL_51;
          }
          goto LABEL_48;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPTdmFraudNotificationParametersIsValid(a1)) {
            goto LABEL_51;
          }
          goto LABEL_48;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackLogEventParametersIsValid(a1)) {
            goto LABEL_51;
          }
LABEL_48:
          PBReaderRecallMark();
          goto LABEL_49;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_51:
            PBReaderRecallMark();
            return 0;
          }
LABEL_49:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_50;
          }
          break;
      }
    }
  }
LABEL_50:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackUserInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPUserCredentialsIsValid(a1)) {
            goto LABEL_39;
          }
          goto LABEL_42;
        case 2u:
          if (v15 == 2) {
            goto LABEL_34;
          }
          goto LABEL_42;
        case 3u:
          if (v15 == 2) {
            goto LABEL_34;
          }
          goto LABEL_42;
        case 4u:
          if (v15 == 2) {
            goto LABEL_34;
          }
          goto LABEL_42;
        case 5u:
          if (v15 == 2) {
            goto LABEL_34;
          }
          goto LABEL_42;
        case 6u:
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPAppAttestInfoIsValid(a1)) {
            goto LABEL_42;
          }
          goto LABEL_39;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPTdmInfoIsValid(a1)) {
            goto LABEL_42;
          }
LABEL_39:
          PBReaderRecallMark();
          goto LABEL_40;
        default:
LABEL_34:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_42:
            PBReaderRecallMark();
            return 0;
          }
LABEL_40:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_41;
          }
          break;
      }
    }
  }
LABEL_41:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1893DAC44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackRequestIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 128);
  if ((v2 & 0x800) != 0) {
    return 1;
  }
  if ((v2 & 0x200) != 0)
  {
    if (GEORPFeedbackRequestParametersIsDirty(*(os_unfair_lock_s **)(a1 + 96))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 128);
  }
  if ((v2 & 0x400) != 0)
  {
    if (GEORPFeedbackUserInfoIsDirty(*(os_unfair_lock_s **)(a1 + 104))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 128);
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEOPDAnalyticMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 128);
  }
  if ((v2 & 0x40) == 0) {
    goto LABEL_14;
  }
  if (GEOPDClientMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
    return 1;
  }
  unsigned int v2 = *(unsigned __int16 *)(a1 + 128);
LABEL_14:
  if ((v2 & 0x120) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEOABSecondPartyPlaceRequestClientMetaDataIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 128);
  }
  if ((v2 & 4) != 0) {
    return 1;
  }
  return (v2 >> 7) & 1;
}

os_unfair_lock_s *GEORPFeedbackRequestIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPFeedbackRequestIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 30);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEORPFeedbackRequestClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3)
  {
    if ([a1 hasFeedbackRequestParameters]
      && ([a1 feedbackRequestParameters],
          uint64_t v5 = objc_claimAutoreleasedReturnValue(),
          int HasSensitiveFields = GEORPFeedbackRequestParametersHasSensitiveFields(v5, a2),
          v5,
          HasSensitiveFields))
    {
      unsigned int v7 = [a1 feedbackRequestParameters];
      unint64_t v8 = (void *)[v7 copy];

      GEORPFeedbackRequestParametersClearSensitiveFields(v8, a2, 0);
      [a1 setFeedbackRequestParameters:v8];
    }
    else
    {
      unint64_t v8 = [a1 feedbackRequestParameters];
      [v8 clearSensitiveFields:a2];
    }

    if ([a1 hasClientMetadata])
    {
      uint64_t v10 = [a1 clientMetadata];
      int v11 = GEOPDClientMetadataHasSensitiveFields(v10);

      if (v11)
      {
        char v12 = [a1 clientMetadata];
        BOOL v13 = (id *)[v12 copy];

        GEOPDClientMetadataClearSensitiveFields(v13, a2, 0);
        [a1 setClientMetadata:v13];
        goto LABEL_11;
      }
    }
  }
  else
  {
    uint64_t v9 = [a1 feedbackRequestParameters];
    [v9 clearSensitiveFields:a2];
  }
  BOOL v13 = [a1 clientMetadata];
  [v13 clearSensitiveFields:a2];
LABEL_11:
}

uint64_t GEORPFeedbackRequestHasSensitiveFields(void *a1, uint64_t a2)
{
  if (!a1) {
    return 0;
  }
  uint64_t v4 = [a1 feedbackRequestParameters];
  if (GEORPFeedbackRequestParametersHasSensitiveFields(v4, a2))
  {
    uint64_t HasSensitiveFields = 1;
  }
  else
  {
    char v6 = [a1 clientMetadata];
    uint64_t HasSensitiveFields = GEOPDClientMetadataHasSensitiveFields(v6);
  }
  return HasSensitiveFields;
}

uint64_t GEORPFeedbackRequestParametersHasSensitiveFields(void *a1, uint64_t a2)
{
  if (!a1) {
    return 0;
  }
  uint64_t v4 = [a1 submissionParameters];
  if (GEORPFeedbackSubmissionParametersHasSensitiveFields(v4, a2))
  {
    uint64_t HasSensitiveFields = 1;
  }
  else
  {
    char v6 = [a1 imageUploadParameters];
    uint64_t HasSensitiveFields = GEORPFeedbackImageUploadParametersHasSensitiveFields(v6);
  }
  return HasSensitiveFields;
}

void GEORPFeedbackRequestParametersClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3)
  {
    if ([a1 hasSubmissionParameters]
      && ([a1 submissionParameters],
          uint64_t v5 = objc_claimAutoreleasedReturnValue(),
          unsigned int v6 = GEORPFeedbackSubmissionParametersHasSensitiveFields(v5, a2),
          v5,
          v6))
    {
      unsigned int v7 = [a1 submissionParameters];
      unint64_t v8 = (void *)[v7 copy];

      uint64_t v9 = [v8 details];
      [v9 clearSensitiveFields:a2];

      [a1 setSubmissionParameters:v8];
    }
    else
    {
      unint64_t v8 = [a1 submissionParameters];
      [v8 clearSensitiveFields:a2];
    }

    if ([a1 hasImageUploadParameters])
    {
      int v11 = [a1 imageUploadParameters];
      int HasSensitiveFields = GEORPFeedbackImageUploadParametersHasSensitiveFields(v11);

      if (HasSensitiveFields)
      {
        BOOL v13 = [a1 imageUploadParameters];
        id v14 = (id)[v13 copy];

        GEORPFeedbackImageUploadParametersClearSensitiveFields((uint64_t)v14, a2, 0);
        [a1 setImageUploadParameters:v14];
        goto LABEL_11;
      }
    }
  }
  else
  {
    uint64_t v10 = [a1 submissionParameters];
    [v10 clearSensitiveFields:a2];
  }
  id v14 = [a1 imageUploadParameters];
  [v14 clearSensitiveFields:a2];
LABEL_11:
}

void sub_1893DB7A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893DBDE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893DC140(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackRequestParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v6 = 0;
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (*(_WORD *)(a1 + 92) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFFEFFFBFFFAFFFFLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 92) >> 3) & 1)+ ((*(_WORD *)(a1 + 92) >> 7) & 1)+ ((*(_WORD *)(a1 + 92) >> 4) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v15 = v11 > 4;
        char v16 = v15 & ~(_BYTE)v10 | v8;
        unsigned __int8 v17 = v15 | v10;
        char v52 = v16;
        char v53 = v17 | v16;
        if ((v17 | v7)) {
          uint64_t v18 = 0;
        }
        else {
          uint64_t v18 = a3;
        }
        char v54 = (v18 == 0) | v17;
        BOOL v55 = v17;
        uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        int v21 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v8;
LABEL_8:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_10:
        ++v6;
        uint64_t v8 = v12;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    char v22 = (int *)MEMORY[0x1E4F940E0];
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) || *(unsigned char *)(v3 + *v20)) {
      goto LABEL_100;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v19;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v22)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v21) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_100:
      int v51 = 1;
      goto LABEL_101;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v55;
    if ((v54 & 1) == 0)
    {
      BOOL v35 = v18;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 92) & 0x40) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_121;
          }
          BOOL v39 = objc_alloc_init(GEORPFeedbackSubmissionParameters);
          if (GEORPFeedbackSubmissionParametersReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            uint64_t v40 = 64;
            goto LABEL_80;
          }
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_121;
        }
        __int16 v46 = *(_WORD *)(a1 + 92) << 9;
        goto LABEL_97;
      case 2:
        if (!v34) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 92) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_121;
          }
          __int16 v46 = *(_WORD *)(a1 + 92) << 14;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        BOOL v39 = objc_alloc_init(GEORPFeedbackIdLookupParameters);
        if (!GEORPFeedbackIdLookupParametersReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1)) {
          goto LABEL_120;
        }
        PBReaderRecallMark();
        uint64_t v40 = 24;
        goto LABEL_80;
      case 3:
        if (!v34) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 92) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_121;
          }
          __int16 v46 = *(_WORD *)(a1 + 92) << 10;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        BOOL v39 = objc_alloc_init(GEORPFeedbackQueryParameters);
        if (!GEORPFeedbackQueryParametersReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1)) {
          goto LABEL_120;
        }
        PBReaderRecallMark();
        uint64_t v40 = 56;
        goto LABEL_80;
      case 4:
        if (!v34) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 92) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_121;
          }
          __int16 v46 = *(_WORD *)(a1 + 92) << 13;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        BOOL v39 = objc_alloc_init(GEORPFeedbackImageUploadParameters);
        if (!GEORPFeedbackImageUploadParametersReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1)) {
          goto LABEL_120;
        }
        PBReaderRecallMark();
        uint64_t v40 = 32;
        goto LABEL_80;
      case 5:
        if (!v34) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 92) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_121;
          }
          __int16 v46 = *(_WORD *)(a1 + 92) << 12;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        BOOL v39 = objc_alloc_init(GEORPFeedbackLayoutConfigParameters);
        if (!GEORPFeedbackLayoutConfigParametersReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1)) {
          goto LABEL_120;
        }
        PBReaderRecallMark();
        uint64_t v40 = 40;
        goto LABEL_80;
      case 6:
        if (!v34) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 92) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_121;
          }
          __int16 v46 = *(_WORD *)(a1 + 92) << 8;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        BOOL v39 = objc_alloc_init(GEORPTdmFraudNotificationParameters);
        if (!GEORPTdmFraudNotificationParametersReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1)) {
          goto LABEL_120;
        }
        PBReaderRecallMark();
        uint64_t v40 = 72;
        goto LABEL_80;
      case 7:
        if (!v34) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 92) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_121;
          }
          __int16 v46 = *(_WORD *)(a1 + 92) << 11;
LABEL_97:
          v6 += v46 >> 15;
LABEL_98:
          unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_99:
          if (!(v53 & 1 | (v6 != 0))) {
            goto LABEL_100;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        BOOL v39 = objc_alloc_init(GEORPFeedbackLogEventParameters);
        if (GEORPFeedbackLogEventParametersReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v40 = 48;
LABEL_80:
          char v44 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v6;
          goto LABEL_98;
        }
LABEL_120:

LABEL_121:
        int v51 = 0;
        unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_101:
        if (v52) {
LABEL_102:
        }
          *(_WORD *)(a1 + 92) |= 1u;
        if (v55 || (v51 & 1) == 0)
        {
          *(_WORD *)(a1 + 92) |= 0x40u;
          *(_WORD *)(a1 + 92) |= 2u;
          *(_WORD *)(a1 + 92) |= 0x20u;
          *(_WORD *)(a1 + 92) |= 4u;
          *(_WORD *)(a1 + 92) |= 8u;
          *(_WORD *)(a1 + 92) |= 0x80u;
          *(_WORD *)(a1 + 92) |= 0x10u;
        }
        else if (v18)
        {
          while (1)
          {
            int v47 = *v18++;
            __int16 v48 = 64;
            switch(v47)
            {
              case 0:
                goto LABEL_114;
              case 1:
                goto LABEL_113;
              case 2:
                __int16 v48 = 2;
                goto LABEL_113;
              case 3:
                __int16 v48 = 32;
                goto LABEL_113;
              case 4:
                __int16 v48 = 4;
                goto LABEL_113;
              case 5:
                __int16 v48 = 8;
                goto LABEL_113;
              case 6:
                __int16 v48 = 128;
                goto LABEL_113;
              case 7:
                __int16 v48 = 16;
LABEL_113:
                *(_WORD *)(a1 + 92) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_114:
        if (v51) {
          unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v55)
        {
          unint64_t v49 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v52 & 1) == 0 || (*(_WORD *)(a1 + 92))
        {
LABEL_81:
          char v45 = PBReaderSkipValueWithTag();
          unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
          if ((v45 & 1) == 0)
          {
            int v51 = 0;
            goto LABEL_101;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v51 = 0;
            goto LABEL_102;
          }
        }
        goto LABEL_99;
    }
  }
}

void sub_1893DCBD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893DCD44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893DCEB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893DD024(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893DD194(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893DD300(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893DDD80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackRequestParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 64) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 56) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 72) readAll:1];
  unsigned int v2 = *(void **)(a1 + 48);

  return [v2 readAll:1];
}

unint64_t GEORPFeedbackRequestParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackRequestParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackRequestParametersReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackRequestParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackRequestParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPFeedbackRequestParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_1893DDFC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackRequestParametersReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackRequestParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893DE024(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackSubmissionParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_52;
          }
          goto LABEL_42;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          unsigned int v17 = 0;
          break;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackDetailsIsValid(a1)) {
            goto LABEL_52;
          }
          goto LABEL_47;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackCommonContextIsValid(a1)) {
            goto LABEL_52;
          }
          goto LABEL_47;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackCommonCorrectionsIsValid(a1)) {
            goto LABEL_52;
          }
          goto LABEL_47;
        case 6u:
          if (v15 == 2) {
            goto LABEL_42;
          }
          goto LABEL_52;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackDynamicFormIsValid(a1)) {
            goto LABEL_52;
          }
LABEL_47:
          PBReaderRecallMark();
          continue;
        default:
LABEL_42:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_52:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_48;
      }
      a1[*v4] = 1;
LABEL_48:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEORPTdmFraudNotificationParametersIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_33;
          }
          goto LABEL_30;
        case 2u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_33;
        case 3u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_33;
        case 4u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_33;
        case 5u:
          if (v15 != 2) {
            goto LABEL_33;
          }
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_33:
            BOOL v17 = 0;
            goto LABEL_34;
          }
LABEL_31:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_32;
          }
          break;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_33;
          }
          goto LABEL_31;
      }
    }
  }
LABEL_32:
  BOOL v17 = a1[*v4] == 0;
LABEL_34:
  PBReaderRecallMark();
  return v17;
}

void sub_1893DE798(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPFeedbackRequestParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  __int16 v2 = *(_WORD *)(a1 + 92);
  if ((v2 & 0x100) != 0) {
    return 1;
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEORPFeedbackSubmissionParametersIsDirty(*(os_unfair_lock_s **)(a1 + 64))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 92);
  }
  if ((v2 & 2) != 0)
  {
    if (GEORPFeedbackIdLookupParametersIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 92);
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEORPFeedbackQueryParametersIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 92);
  }
  if ((v2 & 4) != 0) {
    return 1;
  }
  if ((v2 & 8) == 0) {
    goto LABEL_15;
  }
  if (GEORPFeedbackLayoutConfigParametersIsDirty(*(void *)(a1 + 40))) {
    return 1;
  }
  __int16 v2 = *(_WORD *)(a1 + 92);
LABEL_15:
  if ((v2 & 0x80) != 0)
  {
    if (GEORPTdmFraudNotificationParametersIsDirty(*(void *)(a1 + 72))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 92);
  }
  if ((v2 & 0x10) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 48);

  return GEORPFeedbackLogEventParametersIsDirty(v4);
}

os_unfair_lock_s *GEORPFeedbackRequestParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEORPFeedbackRequestParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void *GEORPFeedbackSubmissionParametersHasSensitiveFields(void *result, uint64_t a2)
{
  if (result)
  {
    id v3 = [result details];
    uint64_t HasSensitiveFields = GEORPFeedbackDetailsHasSensitiveFields(v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void GEORPFeedbackSubmissionParametersClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasDetails]
    && ([a1 details],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEORPFeedbackDetailsHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    unsigned int v7 = [a1 details];
    id v8 = (id)[v7 copy];

    GEORPFeedbackDetailsClearSensitiveFields(v8, a2, 0);
    [a1 setDetails:v8];
  }
  else
  {
    id v8 = [a1 details];
    [v8 clearSensitiveFields:a2];
  }
}

void sub_1893DEE44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893DF2A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      while (!v5[*v8])
      {
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        switch((v12 >> 3))
        {
          case 1u:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 36) |= 2u;
            while (1)
            {
              uint64_t v23 = *v6;
              uint64_t v24 = *(void *)&v5[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
              *(void *)&v5[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0) {
                goto LABEL_56;
              }
              v20 += 7;
              BOOL v17 = v21++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_58;
              }
            }
            v5[*v8] = 1;
LABEL_56:
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_58:
            uint64_t v51 = 28;
            goto LABEL_63;
          case 2u:
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 36) |= 1u;
            while (2)
            {
              uint64_t v31 = *v6;
              uint64_t v32 = *(void *)&v5[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v34 = *(unsigned char *)(*(void *)&v5[*v9] + v32);
                *(void *)&v5[v31] = v33;
                v22 |= (unint64_t)(v34 & 0x7F) << v29;
                if (v34 < 0)
                {
                  v29 += 7;
                  BOOL v17 = v30++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_62;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_62:
            uint64_t v51 = 24;
LABEL_63:
            *(_DWORD *)(a1 + v51) = v22;
            goto LABEL_73;
          case 3u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_76;
            }
            BOOL v35 = objc_alloc_init(GEORPFeedbackResult);
            if (!GEORPFeedbackResultReadAllFrom((uint64_t)v35, v5, a3))
            {

              goto LABEL_76;
            }
            PBReaderRecallMark();
            int v36 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v35;

LABEL_73:
            if (*(void *)&v5[*v6] >= *(void *)&v5[*v7]) {
              goto LABEL_74;
            }
            break;
          case 4u:
            char v37 = 0;
            unsigned int v38 = 0;
            uint64_t v39 = 0;
            *(unsigned char *)(a1 + 36) |= 8u;
            while (2)
            {
              uint64_t v40 = *v6;
              uint64_t v41 = *(void *)&v5[v40];
              unint64_t v42 = v41 + 1;
              if (v41 == -1 || v42 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v43 = *(unsigned char *)(*(void *)&v5[*v9] + v41);
                *(void *)&v5[v40] = v42;
                v39 |= (unint64_t)(v43 & 0x7F) << v37;
                if (v43 < 0)
                {
                  v37 += 7;
                  BOOL v17 = v38++ >= 9;
                  if (v17)
                  {
                    uint64_t v39 = 0;
                    goto LABEL_67;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              uint64_t v39 = 0;
            }
LABEL_67:
            BOOL v52 = v39 != 0;
            uint64_t v53 = 33;
            goto LABEL_72;
          case 5u:
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v46 = 0;
            *(unsigned char *)(a1 + 36) |= 4u;
            while (2)
            {
              uint64_t v47 = *v6;
              uint64_t v48 = *(void *)&v5[v47];
              unint64_t v49 = v48 + 1;
              if (v48 == -1 || v49 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v50 = *(unsigned char *)(*(void *)&v5[*v9] + v48);
                *(void *)&v5[v47] = v49;
                v46 |= (unint64_t)(v50 & 0x7F) << v44;
                if (v50 < 0)
                {
                  v44 += 7;
                  BOOL v17 = v45++ >= 9;
                  if (v17)
                  {
                    uint64_t v46 = 0;
                    goto LABEL_71;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              uint64_t v46 = 0;
            }
LABEL_71:
            BOOL v52 = v46 != 0;
            uint64_t v53 = 32;
LABEL_72:
            *(unsigned char *)(a1 + v53) = v52;
            goto LABEL_73;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              unint64_t v28 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v27;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_76;
            }
            goto LABEL_73;
        }
      }
    }
LABEL_74:
    BOOL v54 = v5[*v8] == 0;
  }
  else
  {
LABEL_76:
    BOOL v54 = 0;
  }
  objc_sync_exit(v5);

  return v54;
}

void sub_1893E09CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackResponseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893E0A44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackResponseIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackResultIsValid(a1)) {
            goto LABEL_61;
          }
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v33 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_61:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v34 = *v2;
        uint64_t v35 = *(void *)&a1[v34];
        unint64_t v36 = v35 + 1;
        if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
          break;
        }
        int v37 = *(char *)(*(void *)&a1[*v5] + v35);
        *(void *)&a1[v34] = v36;
        if (v37 < 0)
        {
          BOOL v22 = v33++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_58;
      }
LABEL_57:
      a1[*v4] = 1;
LABEL_58:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEORPFeedbackResultIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPFeedbackSubmissionResultIsValid(a1)) {
            goto LABEL_48;
          }
          goto LABEL_51;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackIdLookupResultIsValid(a1)) {
            goto LABEL_51;
          }
          goto LABEL_48;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackQueryResultIsValid(a1)) {
            goto LABEL_51;
          }
          goto LABEL_48;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackImageUploadResultIsValid(a1)) {
            goto LABEL_51;
          }
          goto LABEL_48;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackLayoutConfigResultIsValid(a1)) {
            goto LABEL_51;
          }
          goto LABEL_48;
        case 6u:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEORPFeedbackTdmFraudNotificationResultIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_51;
          }
          goto LABEL_48;
        case 7u:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEORPFeedbackLogEventResultIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_51;
          }
LABEL_48:
          PBReaderRecallMark();
          goto LABEL_49;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_51:
            PBReaderRecallMark();
            return 0;
          }
LABEL_49:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_50;
          }
          break;
      }
    }
  }
LABEL_50:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1893E1998(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E1B58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E1D2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E1E9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E200C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E2178(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E2BF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 64) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 56) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 72) readAll:1];
  __int16 v2 = *(void **)(a1 + 48);

  return [v2 readAll:1];
}

unint64_t GEORPFeedbackResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackResultReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPFeedbackResultCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_1893E2E38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackResultReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893E2E9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackSubmissionResultIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_44;
          }
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackImageIdMapEntryIsValid(a1)) {
            goto LABEL_44;
          }
          goto LABEL_41;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPRapProfileInfoIsValid(a1)) {
            goto LABEL_44;
          }
          goto LABEL_41;
        case 4u:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEORPThirdPartyPhotoSharingPreferenceUpdateResultIsValid(a1))
          {
            goto LABEL_44;
          }
          goto LABEL_41;
        case 5u:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEORPPhotoAttributionPreferencesUpdateResultIsValid(a1))
          {
            goto LABEL_44;
          }
          goto LABEL_41;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPTdmFraudRequestInfoIsValid(a1)) {
            goto LABEL_44;
          }
LABEL_41:
          PBReaderRecallMark();
          goto LABEL_42;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_44:
            PBReaderRecallMark();
            return 0;
          }
LABEL_42:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_43;
          }
          break;
      }
    }
  }
LABEL_43:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPFeedbackTdmFraudNotificationResultIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      uint64_t v11 = *(void *)&a1[v10];
      unint64_t v12 = v11 + 1;
      if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v9 & 7) == 4;
    }
    if (v15) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v16 = 0;
      goto LABEL_22;
    }
  }
  BOOL v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

void sub_1893E3548(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E3A78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackSubmissionParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  char v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFFCFFFDFFFEFFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 7) & 1)+ ((*(_WORD *)(a1 + 88) >> 6) & 1)+ ((*(_WORD *)(a1 + 88) >> 1) & 1));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 3;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v63 = v18;
        char v64 = v19 | v18;
        if ((v19 | v9)) {
          unint64_t v20 = 0;
        }
        else {
          unint64_t v20 = a3;
        }
        int v21 = (int *)MEMORY[0x1E4F940E8];
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        char v65 = (v20 == 0) | v19;
        BOOL v66 = v19;
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_103;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_103:
      int v61 = 1;
      goto LABEL_104;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v66;
    if ((v65 & 1) == 0)
    {
      unint64_t v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_82;
        }
        if ((*(_WORD *)(a1 + 88) & 4) == 0)
        {
          uint64_t v40 = PBReaderReadString();
          uint64_t v41 = 24;
          goto LABEL_74;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_123;
        }
        __int16 v56 = *(_WORD *)(a1 + 88) << 13;
        goto LABEL_100;
      case 2:
        if ((v9 & 1) == 0) {
          goto LABEL_82;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (2)
        {
          uint64_t v48 = *v21;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v23) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v31 = v46++ >= 9;
              if (v31)
              {
                LODWORD(v47) = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v47) = 0;
        }
LABEL_87:
        *(_DWORD *)(a1 + 84) = v47;
        goto LABEL_102;
      case 3:
        if (!v35) {
          goto LABEL_82;
        }
        if ((*(_WORD *)(a1 + 88) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_123;
          }
          __int16 v56 = *(_WORD *)(a1 + 88) << 10;
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_123;
        }
        BOOL v52 = objc_alloc_init(GEORPFeedbackDetails);
        if (!GEORPFeedbackDetailsReadAllFrom((uint64_t)v52, (void *)v3, v11 & 1)) {
          goto LABEL_122;
        }
        PBReaderRecallMark();
        uint64_t v53 = 48;
        goto LABEL_80;
      case 4:
        if (!v35) {
          goto LABEL_82;
        }
        if ((*(_WORD *)(a1 + 88) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_123;
          }
          __int16 v56 = *(_WORD *)(a1 + 88) << 12;
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_123;
        }
        BOOL v52 = objc_alloc_init(GEORPFeedbackCommonContext);
        if (!GEORPFeedbackCommonContextReadAllFrom((uint64_t)v52, (void *)v3, v11 & 1)) {
          goto LABEL_122;
        }
        PBReaderRecallMark();
        uint64_t v53 = 32;
        goto LABEL_80;
      case 5:
        if (!v35) {
          goto LABEL_82;
        }
        if ((*(_WORD *)(a1 + 88) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_123;
          }
          __int16 v56 = *(_WORD *)(a1 + 88) << 11;
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_123;
        }
        BOOL v52 = objc_alloc_init(GEORPFeedbackCommonCorrections);
        if (!GEORPFeedbackCommonCorrectionsReadAllFrom((uint64_t)v52, (void *)v3, v11 & 1)) {
          goto LABEL_122;
        }
        PBReaderRecallMark();
        uint64_t v53 = 40;
        goto LABEL_80;
      case 6:
        if (!v35) {
          goto LABEL_82;
        }
        if ((*(_WORD *)(a1 + 88) & 0x80) == 0)
        {
          uint64_t v40 = PBReaderReadString();
          uint64_t v41 = 64;
LABEL_74:
          BOOL v54 = *(void **)(a1 + v41);
          *(void *)(a1 + v41) = v40;
          goto LABEL_81;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_123;
        }
        __int16 v56 = *(_WORD *)(a1 + 88) << 8;
        goto LABEL_100;
      case 7:
        if (!v35) {
          goto LABEL_82;
        }
        if ((*(_WORD *)(a1 + 88) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_123;
          }
          __int16 v56 = *(_WORD *)(a1 + 88) << 9;
LABEL_100:
          v8 += v56 >> 15;
LABEL_101:
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          char v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_102:
          if (!(v64 & 1 | (v8 != 0))) {
            goto LABEL_103;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_123;
        }
        BOOL v52 = objc_alloc_init(GEORPFeedbackDynamicForm);
        if (GEORPFeedbackDynamicFormReadAllFrom((uint64_t)v52, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v53 = 56;
LABEL_80:
          BOOL v54 = *(void **)(a1 + v53);
          *(void *)(a1 + v53) = v52;
LABEL_81:

          --v8;
          goto LABEL_101;
        }
LABEL_122:

LABEL_123:
        int v61 = 0;
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_104:
        char v62 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
        if (v63) {
LABEL_105:
        }
          *(_WORD *)(a1 + v62[575]) |= 2u;
        if (v66 || (v61 & 1) == 0)
        {
          *(_WORD *)(a1 + v62[575]) |= 4u;
          *(_WORD *)(a1 + v62[575]) |= 0x20u;
          *(_WORD *)(a1 + v62[575]) |= 8u;
          *(_WORD *)(a1 + v62[575]) |= 0x10u;
          *(_WORD *)(a1 + v62[575]) |= 0x80u;
          *(_WORD *)(a1 + v62[575]) |= 0x40u;
        }
        else if (v20)
        {
          while (1)
          {
            int v57 = *v20++;
            __int16 v58 = 4;
            switch(v57)
            {
              case 0:
                goto LABEL_116;
              case 1:
                goto LABEL_115;
              case 3:
                __int16 v58 = 32;
                goto LABEL_115;
              case 4:
                __int16 v58 = 8;
                goto LABEL_115;
              case 5:
                __int16 v58 = 16;
                goto LABEL_115;
              case 6:
                __int16 v58 = 128;
                goto LABEL_115;
              case 7:
                __int16 v58 = 64;
LABEL_115:
                *(_WORD *)(a1 + v62[575]) |= v58;
                break;
              default:
                continue;
            }
          }
        }
LABEL_116:
        if (v61) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v66)
        {
          uint64_t v59 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v63 & 1) == 0 || (*(_WORD *)(a1 + 88) & 2) != 0)
        {
LABEL_82:
          char v55 = PBReaderSkipValueWithTag();
          char v7 = (int *)MEMORY[0x1E4F940E0];
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v55 & 1) == 0)
          {
            int v61 = 0;
            goto LABEL_104;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v43 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v42;
          }
          int v44 = PBUnknownFieldAdd();
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          char v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v44)
          {
            int v61 = 0;
            char v62 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
            goto LABEL_105;
          }
        }
        goto LABEL_102;
    }
  }
}

void sub_1893E48C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E4A34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E4BA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E4D14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E4E80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E5AF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackSubmissionParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  __int16 v2 = *(void **)(a1 + 56);

  return [v2 readAll:1];
}

unint64_t GEORPFeedbackSubmissionParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackSubmissionParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPFeedbackSubmissionParametersReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPFeedbackSubmissionParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackSubmissionParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPFeedbackSubmissionParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1893E5D04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackSubmissionParametersReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackSubmissionParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893E5D68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E5FAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPFeedbackSubmissionParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  __int16 v2 = *(_WORD *)(a1 + 88);
  if ((v2 & 0x104) != 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEORPFeedbackDetailsIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 8) != 0)
  {
    if (GEORPFeedbackCommonContextIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 0x10) == 0) {
    goto LABEL_12;
  }
  if (GEORPFeedbackCommonCorrectionsIsDirty(*(void *)(a1 + 40))) {
    return 1;
  }
  __int16 v2 = *(_WORD *)(a1 + 88);
LABEL_12:
  if ((v2 & 0x80) != 0) {
    return 1;
  }
  if ((v2 & 0x40) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 56);

  return GEORPFeedbackDynamicFormIsDirty(v4);
}

os_unfair_lock_s *GEORPFeedbackSubmissionParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEORPFeedbackSubmissionParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1893E6538(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E69AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E6CC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackSubmissionResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFAFFFCFFFFFFFELL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 84) & 1)+ ((*(unsigned char *)(a1 + 84) & 8) != 0)+ ((*(unsigned char *)(a1 + 84) & 0x20) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v8)) {
          unsigned __int8 v19 = 0;
        }
        else {
          unsigned __int8 v19 = a3;
        }
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_90;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_90:
      int v52 = 1;
      goto LABEL_91;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 84) & 2) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;
          goto LABEL_74;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_110;
        }
        char v47 = *(unsigned char *)(a1 + 84) << 6;
        goto LABEL_87;
      case 2:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 4) != 0) {
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_110;
        }
        int v44 = objc_alloc_init(GEORPFeedbackImageIdMapEntry);
        if (!GEORPFeedbackImageIdMapEntryReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1)) {
          goto LABEL_109;
        }
        PBReaderRecallMark();
        -[GEORPFeedbackSubmissionResult _addNoFlagsImageIdMapEntry:](a1, v44);

        goto LABEL_88;
      case 3:
        if (!v34) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_110;
          }
          char v47 = 8 * *(unsigned char *)(a1 + 84);
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_110;
        }
        int v44 = objc_alloc_init(GEORPRapProfileInfo);
        if (!GEORPRapProfileInfoReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1)) {
          goto LABEL_109;
        }
        PBReaderRecallMark();
        uint64_t v45 = 48;
        goto LABEL_73;
      case 4:
        if (!v34) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_110;
          }
          char v47 = 2 * *(unsigned char *)(a1 + 84);
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_110;
        }
        int v44 = objc_alloc_init(GEORPThirdPartyPhotoSharingPreferenceUpdateResult);
        if (!GEORPThirdPartyPhotoSharingPreferenceUpdateResultReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1))goto LABEL_109; {
        PBReaderRecallMark();
        }
        uint64_t v45 = 64;
        goto LABEL_73;
      case 5:
        if (!v34) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_110;
          }
          char v47 = 16 * *(unsigned char *)(a1 + 84);
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_110;
        }
        int v44 = objc_alloc_init(GEORPPhotoAttributionPreferencesUpdateResult);
        if (!GEORPPhotoAttributionPreferencesUpdateResultReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1)) {
          goto LABEL_109;
        }
        PBReaderRecallMark();
        uint64_t v45 = 40;
        goto LABEL_73;
      case 6:
        if (!v34) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_110;
          }
          char v47 = 4 * *(unsigned char *)(a1 + 84);
LABEL_87:
          v7 += v47 >> 7;
LABEL_88:
          int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_89:
          if (!(v55 & 1 | (v7 != 0))) {
            goto LABEL_90;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_110;
        }
        int v44 = objc_alloc_init(GEORPTdmFraudRequestInfo);
        if (GEORPTdmFraudRequestInfoReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v45 = 56;
LABEL_73:
          uint64_t v40 = *(void **)(a1 + v45);
          *(void *)(a1 + v45) = v44;
LABEL_74:

          --v7;
          goto LABEL_88;
        }
LABEL_109:

LABEL_110:
        int v52 = 0;
        int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_91:
        uint64_t v53 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
        if (v54) {
LABEL_92:
        }
          *(unsigned char *)(a1 + v53[588]) |= 1u;
        if (v57 || (v52 & 1) == 0)
        {
          *(unsigned char *)(a1 + v53[588]) |= 2u;
          *(unsigned char *)(a1 + v53[588]) |= 4u;
          *(unsigned char *)(a1 + v53[588]) |= 0x10u;
          *(unsigned char *)(a1 + v53[588]) |= 0x40u;
          *(unsigned char *)(a1 + v53[588]) |= 8u;
          *(unsigned char *)(a1 + v53[588]) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            int v48 = *v19++;
            char v49 = 2;
            switch(v48)
            {
              case 0:
                goto LABEL_103;
              case 1:
                goto LABEL_102;
              case 2:
                char v49 = 4;
                goto LABEL_102;
              case 3:
                char v49 = 16;
                goto LABEL_102;
              case 4:
                char v49 = 64;
                goto LABEL_102;
              case 5:
                char v49 = 8;
                goto LABEL_102;
              case 6:
                char v49 = 32;
LABEL_102:
                *(unsigned char *)(a1 + v53[588]) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_103:
        if (v52) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v57)
        {
          unint64_t v50 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v54 & 1) == 0 || (*(unsigned char *)(a1 + 84))
        {
LABEL_75:
          char v46 = PBReaderSkipValueWithTag();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v46 & 1) == 0)
          {
            int v52 = 0;
            goto LABEL_91;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v52 = 0;
            uint64_t v53 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
            goto LABEL_92;
          }
        }
        goto LABEL_89;
    }
  }
}

void sub_1893E7688(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E7A4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E7BBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E7D28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E7E94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E89F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackSubmissionResultCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = a1[4];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  [a1[6] readAll:1];
  [a1[8] readAll:1];
  [a1[5] readAll:1];
  return [a1[7] readAll:1];
}

unint64_t GEORPFeedbackSubmissionResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackSubmissionResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORPFeedbackSubmissionResultReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORPFeedbackSubmissionResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackSubmissionResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPFeedbackSubmissionResultCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1893E8CD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackSubmissionResultReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackSubmissionResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893E8D3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRapProfileInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPTdmFraudRequestInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_37;
          }
          goto LABEL_28;
        case 2u:
          if (v15 == 2) {
            goto LABEL_28;
          }
          goto LABEL_37;
        case 3u:
          if (v15 == 2) {
            goto LABEL_28;
          }
          goto LABEL_37;
        case 4u:
          if (v15 == 2) {
            goto LABEL_28;
          }
          goto LABEL_37;
        case 5u:
          if (v15 == 2) {
            goto LABEL_28;
          }
          goto LABEL_37;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPTdmUserMapsStatusIsValid(a1)) {
            goto LABEL_37;
          }
          PBReaderRecallMark();
          goto LABEL_29;
        default:
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_37:
            PBReaderRecallMark();
            return 0;
          }
LABEL_29:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_35;
          }
          break;
      }
    }
  }
LABEL_35:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1893E9420(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackSubmissionResultIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v2 = *(unsigned char *)(a1 + 84);
  if ((v2 & 0x86) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 84) & 0x10) != 0)
  {
    if (GEORPRapProfileInfoIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEORPThirdPartyPhotoSharingPreferenceUpdateResultIsDirty(*(void *)(a1 + 64))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 8) != 0)
  {
    if (GEORPPhotoAttributionPreferencesUpdateResultIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 0x20) == 0) {
    goto LABEL_16;
  }
  if (GEORPTdmFraudRequestInfoIsDirty(*(void *)(a1 + 56))) {
    return 1;
  }
  char v2 = *(unsigned char *)(a1 + 84);
LABEL_16:
  if ((v2 & 4) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 32);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEORPFeedbackImageIdMapEntryIsDirty(*(void *)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_28;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_28:

  return v3;
}

void sub_1893E9A44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893E9EC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackTdmFraudNotificationResultReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1893EA584(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackTdmFraudNotificationResultReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackTdmFraudNotificationResultReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893EA5E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893EA90C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893EAAD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893EAC44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893EADB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893EAF20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893EB090(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893EB1FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893EB36C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893EBE1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackUserInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 72) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 48) readAll:1];
  char v2 = *(void **)(a1 + 56);

  return [v2 readAll:1];
}

unint64_t GEORPFeedbackUserInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 92))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackUserInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = [v8 position];
  *(_DWORD *)(a1 + 92) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPFeedbackUserInfoReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPFeedbackUserInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackUserInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPFeedbackUserInfoCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_1893EC02C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackUserInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackUserInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893EC090(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTdmInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_46;
          }
          goto LABEL_32;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_42;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_43;
          }
        case 3u:
          if (v15 == 2) {
            goto LABEL_32;
          }
          goto LABEL_46;
        case 4u:
          if (v15 == 2) {
            goto LABEL_32;
          }
          goto LABEL_46;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_32:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_46:
          BOOL v28 = 0;
          goto LABEL_45;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
LABEL_45:
  PBReaderRecallMark();
  return v28;
}

void sub_1893EC58C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPFeedbackUserInfoIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  __int16 v2 = *(_WORD *)(a1 + 100);
  if ((v2 & 0x200) != 0) {
    return 1;
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEORPUserCredentialsIsDirty(*(void *)(a1 + 72))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 100);
  }
  if ((v2 & 0x14C) != 0) {
    return 1;
  }
  if ((v2 & 2) != 0)
  {
    if (GEORPAppAttestInfoIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 100);
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEORPAppAttestInfoIsDirty(*(void *)(a1 + 48))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 100);
  }
  if ((v2 & 0x20) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 56);

  return GEORPTdmInfoIsDirty(v4);
}

os_unfair_lock_s *GEORPFeedbackUserInfoIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEORPFeedbackUserInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 24);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1893ECA74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893ECEE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPGroundViewCorrectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          int v27 = objc_alloc_init(GEORPFeedbackAddressFields);
          if (!GEORPFeedbackAddressFieldsReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          BOOL v28 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v27;
        }
        else if ((v12 >> 3) == 1)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v23 = *v6;
            uint64_t v24 = *(void *)&v5[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
            *(void *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_36;
            }
            v20 += 7;
            BOOL v17 = v21++ >= 9;
            if (v17)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            LODWORD(v22) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v29 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v30 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v29;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_1893EDB7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPGroundViewCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPGroundViewCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893EDBE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893EE210(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPGroundViewFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v7)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        char v20 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_66;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_66:
      int v52 = 1;
      goto LABEL_67;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_57;
      }
      if ((*(unsigned char *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        uint64_t v39 = objc_alloc_init(GEORPGroundViewFeedbackContext);
        if (!GEORPGroundViewFeedbackContextReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_85;
        }
        PBReaderRecallMark();
        uint64_t v40 = 24;
LABEL_50:
        id v41 = *(void **)(a1 + v40);
        *(void *)(a1 + v40) = v39;

        --v8;
LABEL_64:
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_86;
      }
      char v46 = *(unsigned char *)(a1 + 52) << 6;
LABEL_63:
      v8 += v46 >> 7;
      goto LABEL_64;
    }
    if (v54 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_57:
      char v45 = PBReaderSkipValueWithTag();
      unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
      if ((v45 & 1) == 0)
      {
        int v52 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(void *)(a1 + 16))
    {
      id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      int v43 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v42;
    }
    int v44 = PBUnknownFieldAdd();
    unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v44)
    {
      int v52 = 0;
      uint64_t v53 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v55 & 1 | (v8 != 0))) {
      goto LABEL_66;
    }
  }
  if (!v34) {
    goto LABEL_57;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_86;
    }
    char v46 = 32 * *(unsigned char *)(a1 + 52);
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_86;
  }
  uint64_t v39 = objc_alloc_init(GEORPGroundViewCorrections);
  if (GEORPGroundViewCorrectionsReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = 32;
    goto LABEL_50;
  }
LABEL_85:

LABEL_86:
  int v52 = 0;
  unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_67:
  uint64_t v53 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
  if ((v54 & 1) == 0) {
    goto LABEL_69;
  }
LABEL_68:
  *(unsigned char *)(a1 + v53[618]) |= 1u;
LABEL_69:
  if (v57 || (v52 & 1) == 0)
  {
    *(unsigned char *)(a1 + v53[618]) |= 2u;
    *(unsigned char *)(a1 + v53[618]) |= 4u;
    goto LABEL_79;
  }
  if (v19)
  {
    while (1)
    {
      int v49 = *v19++;
      int v48 = v49;
      if (v49 == 1) {
        break;
      }
      if (v48 == 2)
      {
        char v47 = 4;
LABEL_75:
        *(unsigned char *)(a1 + v53[618]) |= v47;
      }
      else if (!v48)
      {
        goto LABEL_79;
      }
    }
    char v47 = 2;
    goto LABEL_75;
  }
LABEL_79:
  if (v52) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v57)
  {
    unint64_t v50 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1893EE8EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893EEF64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPGroundViewFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPGroundViewFeedbackReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPGroundViewFeedbackReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPGroundViewFeedbackReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPGroundViewFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1893EF120(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPGroundViewFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPGroundViewFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893EF184(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPGroundViewFeedbackContextIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 2u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDMuninViewStateIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_71;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_71;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_50;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPGroundViewImageResourceIsValid(a1)) {
            goto LABEL_71;
          }
          goto LABEL_57;
        case 6u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_71:
              PBReaderRecallMark();
              return 0;
            }
LABEL_61:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v33 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v34 = *v2;
                uint64_t v35 = *(void *)&a1[v34];
                unint64_t v36 = v35 + 1;
                if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
                  break;
                }
                int v37 = *(char *)(*(void *)&a1[*v5] + v35);
                *(void *)&a1[v34] = v36;
                if (v37 < 0)
                {
                  BOOL v13 = v33++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_61;
              }
              a1[*v4] = 1;
            }
LABEL_57:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_71;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              uint64_t v24 = *(void *)&a1[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                break;
              }
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                unsigned int v27 = v15++;
                if (v27 <= 8) {
                  continue;
                }
              }
              goto LABEL_58;
            }
LABEL_50:
            a1[*v4] = 1;
          }
LABEL_58:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_70;
          }
          break;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_71;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_50;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 8u:
          if (v15 == 2) {
            goto LABEL_52;
          }
          goto LABEL_71;
        case 0xAu:
          if (v15 == 2 && PBReaderPlaceMark() && GEORPFeatureHandleIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_71;
        default:
LABEL_52:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_71;
          }
          goto LABEL_58;
      }
    }
  }
LABEL_70:
  BOOL v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

void sub_1893EF728(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPGroundViewFeedbackIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 2) != 0)
  {
    if (GEORPGroundViewFeedbackContextIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEORPGroundViewFeedbackIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPGroundViewFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1893EFA40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893EFCBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893EFFD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPGroundViewFeedbackContextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 92);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 88)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 104)), (uint16x4_t)0xFFFCFFFDFFFAFFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 104) >> 7) & 1)+ ((*(_WORD *)(a1 + 104) >> 2) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        char v18 = v16 | v11;
        uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        if (((v16 | v11) | v8)) {
          unint64_t v20 = 0;
        }
        else {
          unint64_t v20 = a3;
        }
        int v85 = 1;
        char v21 = v16 & ~(_BYTE)v11 | v9;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_128;
        }
        char v83 = v17;
        char v86 = v18 | v17;
        char v87 = (v20 == 0) | v18;
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        char v84 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_126;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v19;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_126:
      int v85 = 1;
      goto LABEL_127;
    }
    unint64_t v35 = v26 >> 3;
    BOOL v36 = v18;
    if ((v87 & 1) == 0)
    {
      int v37 = v20;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 2:
        if (!v36) {
          goto LABEL_96;
        }
        if ((*(_WORD *)(a1 + 104) & 0x40) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_146;
          }
          id v41 = objc_alloc_init(GEOPDMuninViewState);
          if (GEOPDMuninViewStateReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            id v42 = *(void **)(a1 + 72);
            *(void *)(a1 + 72) = v41;

            --v7;
            goto LABEL_111;
          }
          goto LABEL_145;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_146;
        }
        __int16 v71 = *(_WORD *)(a1 + 104) << 9;
        goto LABEL_110;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_96;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 104) |= 2u;
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        while (2)
        {
          uint64_t v49 = *v19;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v23) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v31 = v47++ >= 9;
              if (v31)
              {
                LODWORD(v48) = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v48) = 0;
        }
LABEL_101:
        *(_DWORD *)(a1 + 100) = v48;
        goto LABEL_113;
      case 5:
        if (!v36 || (*(_WORD *)(a1 + 104) & 0x20) != 0) {
          goto LABEL_96;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_146;
        }
        id v41 = objc_alloc_init(GEORPGroundViewImageResource);
        if (!GEORPGroundViewImageResourceReadAllFrom((uint64_t)v41, (void *)v3)) {
          goto LABEL_145;
        }
        PBReaderRecallMark();
        -[GEORPGroundViewFeedbackContext _addNoFlagsOnscreenImageResource:](a1, v41);
        goto LABEL_95;
      case 6:
        if (!v36 || (*(_WORD *)(a1 + 104) & 8) != 0) {
          goto LABEL_96;
        }
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_146;
          }
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          while (*(void *)(v3 + *v19) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v22)) {
              break;
            }
            char v53 = 0;
            unsigned int v54 = 0;
            uint64_t v55 = 0;
            char v56 = (int *)MEMORY[0x1E4F940B8];
            while (1)
            {
              uint64_t v57 = *v19;
              uint64_t v58 = *(void *)(v3 + v57);
              unint64_t v59 = v58 + 1;
              if (v58 == -1 || v59 > *(void *)(v3 + *v6)) {
                break;
              }
              char v60 = *(unsigned char *)(*(void *)(v3 + *v56) + v58);
              *(void *)(v3 + v57) = v59;
              v55 |= (unint64_t)(v60 & 0x7F) << v53;
              if (v60 < 0)
              {
                v53 += 7;
                BOOL v31 = v54++ >= 9;
                if (!v31) {
                  continue;
                }
              }
              goto LABEL_77;
            }
            *(unsigned char *)(v3 + *v22) = 1;
LABEL_77:
            PBRepeatedUInt64Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v72 = 0;
          unsigned int v73 = 0;
          uint64_t v74 = 0;
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          while (1)
          {
            uint64_t v75 = *v19;
            uint64_t v76 = *(void *)(v3 + v75);
            unint64_t v77 = v76 + 1;
            if (v76 == -1 || v77 > *(void *)(v3 + *v6)) {
              break;
            }
            char v78 = *(unsigned char *)(*(void *)(v3 + *v23) + v76);
            *(void *)(v3 + v75) = v77;
            v74 |= (unint64_t)(v78 & 0x7F) << v72;
            if (v78 < 0)
            {
              v72 += 7;
              BOOL v31 = v73++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_124;
          }
          *(unsigned char *)(v3 + *v22) = 1;
LABEL_124:
          PBRepeatedUInt64Add();
        }
        char v18 = v84;
        goto LABEL_112;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_96;
        }
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v63 = 0;
        *(_WORD *)(a1 + 104) |= 1u;
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        while (2)
        {
          uint64_t v64 = *v19;
          uint64_t v65 = *(void *)(v3 + v64);
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(v3 + *v23) + v65);
            *(void *)(v3 + v64) = v66;
            v63 |= (unint64_t)(v67 & 0x7F) << v61;
            if (v67 < 0)
            {
              v61 += 7;
              BOOL v31 = v62++ >= 9;
              if (v31)
              {
                uint64_t v63 = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v63 = 0;
        }
LABEL_105:
        *(void *)(a1 + 56) = v63;
        goto LABEL_113;
      case 8:
        if (!v36) {
          goto LABEL_96;
        }
        if ((*(_WORD *)(a1 + 104) & 0x10) == 0)
        {
          uint64_t v68 = PBReaderReadString();
          unsigned int v69 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v68;

          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          char v18 = v84;
          --v7;
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_113;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_146;
        }
        __int16 v71 = *(_WORD *)(a1 + 104) << 11;
LABEL_110:
        v7 += v71 >> 15;
        goto LABEL_111;
      case 10:
        if (!v36 || (*(_WORD *)(a1 + 104) & 0x80) != 0) {
          goto LABEL_96;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_146;
        }
        id v41 = objc_alloc_init(GEORPFeatureHandle);
        if (GEORPFeatureHandleReadAllFrom((uint64_t)v41, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEORPGroundViewFeedbackContext _addNoFlagsVisibleFeatureHandle:](a1, v41);
LABEL_95:

LABEL_111:
          char v18 = v84;
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_112:
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
LABEL_113:
          if (!(v86 & 1 | (v7 != 0)) || *(void *)(v3 + *v19) >= *(void *)(v3 + *v6)) {
            goto LABEL_126;
          }
          continue;
        }
LABEL_145:

LABEL_146:
        int v85 = 0;
        char v18 = v84;
LABEL_127:
        char v21 = v83;
LABEL_128:
        if (v21) {
LABEL_129:
        }
          *(_WORD *)(a1 + 104) |= 4u;
        if (v18 & 1 | ((v85 & 1) == 0))
        {
          *(_WORD *)(a1 + 104) |= 0x40u;
          *(_WORD *)(a1 + 104) |= 0x20u;
          *(_WORD *)(a1 + 104) |= 8u;
          *(_WORD *)(a1 + 104) |= 0x10u;
          *(_WORD *)(a1 + 104) |= 0x80u;
        }
        else if (v20)
        {
          while (1)
          {
            int v79 = *v20++;
            __int16 v80 = 64;
            switch(v79)
            {
              case 0:
                goto LABEL_139;
              case 2:
                goto LABEL_138;
              case 5:
                __int16 v80 = 32;
                goto LABEL_138;
              case 6:
                __int16 v80 = 8;
                goto LABEL_138;
              case 8:
                __int16 v80 = 16;
                goto LABEL_138;
              case 10:
                __int16 v80 = 128;
LABEL_138:
                *(_WORD *)(a1 + 104) |= v80;
                break;
              default:
                continue;
            }
          }
        }
LABEL_139:
        if (v85)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_143:
          int v81 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v18) {
            goto LABEL_143;
          }
        }
        return v3;
      default:
        if ((v83 & 1) == 0 || (*(_WORD *)(a1 + 104) & 4) != 0)
        {
LABEL_96:
          char v70 = PBReaderSkipValueWithTag();
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          char v18 = v84;
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v70 & 1) == 0)
          {
            int v85 = 0;
            goto LABEL_127;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v44 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v43;
          }
          int v45 = PBUnknownFieldAdd();
          char v18 = v84;
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v45)
          {
            int v85 = 0;
            goto LABEL_129;
          }
        }
        goto LABEL_113;
    }
  }
}

void sub_1893F0C9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893F1060(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893F1454(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893F15C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893F25EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPGroundViewFeedbackContextCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  [a1[9] readAll:1];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = a1[8];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = a1[10];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEORPGroundViewFeedbackContextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 92))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPGroundViewFeedbackContextReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = [v8 position];
  *(_DWORD *)(a1 + 92) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPGroundViewFeedbackContextReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPGroundViewFeedbackContextReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPGroundViewFeedbackContextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPGroundViewFeedbackContextCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_1893F2930(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPGroundViewFeedbackContextReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPGroundViewFeedbackContextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893F2994(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPGroundViewImageResourceIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_1893F2F98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPGroundViewFeedbackContextIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 104);
  if ((v2 & 0x100) != 0) {
    return 1;
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEOPDMuninViewStateIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 104);
  }
  if ((v2 & 0x38) != 0) {
    return 1;
  }
  return (v2 >> 7) & 1;
}

os_unfair_lock_s *GEORPGroundViewFeedbackContextIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPGroundViewFeedbackContextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 24);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1893F3630(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893F3BF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPGroundViewImageResourceReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_59;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_59;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 2u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              int v27 = &OBJC_IVAR___GEORPGroundViewImageResource__loadStatus;
              goto LABEL_51;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              int v27 = &OBJC_IVAR___GEORPGroundViewImageResource__loadStatus;
              goto LABEL_53;
            }
          }
          int v27 = &OBJC_IVAR___GEORPGroundViewImageResource__loadStatus;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if (v18 == 2) {
          break;
        }
        if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              int v27 = &OBJC_IVAR___GEORPGroundViewImageResource__cameraNumber;
              goto LABEL_50;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              int v27 = &OBJC_IVAR___GEORPGroundViewImageResource__cameraNumber;
              goto LABEL_53;
            }
          }
          int v27 = &OBJC_IVAR___GEORPGroundViewImageResource__cameraNumber;
          goto LABEL_51;
        }
        if (!*(void *)(a1 + 8))
        {
          id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          id v41 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v40;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_60;
        }
LABEL_54:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_59;
        }
      }
      char v34 = 0;
      unsigned int v35 = 0;
      uint64_t v21 = 0;
      *(unsigned char *)(a1 + 28) |= 4u;
      while (1)
      {
        uint64_t v36 = *v4;
        uint64_t v37 = *(void *)&v3[v36];
        unint64_t v38 = v37 + 1;
        if (v37 == -1 || v38 > *(void *)&v3[*v5])
        {
          int v27 = &OBJC_IVAR___GEORPGroundViewImageResource__lod;
          goto LABEL_50;
        }
        char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
        *(void *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0) {
          break;
        }
        v34 += 7;
        BOOL v26 = v35++ > 8;
        if (v26)
        {
          LODWORD(v21) = 0;
          int v27 = &OBJC_IVAR___GEORPGroundViewImageResource__lod;
          goto LABEL_53;
        }
      }
      int v27 = &OBJC_IVAR___GEORPGroundViewImageResource__lod;
LABEL_51:
      if (v3[*v6]) {
        LODWORD(v21) = 0;
      }
LABEL_53:
      *(_DWORD *)(a1 + *v27) = v21;
      goto LABEL_54;
    }
LABEL_59:
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_1893F49F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPGroundViewImageResourceReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPGroundViewImageResourceReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893F4A54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893F514C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPLocalityFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v7)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_66;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_66:
      int v51 = 1;
      goto LABEL_67;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      unsigned int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_57;
      }
      if ((*(unsigned char *)(a1 + 52) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_85;
        }
        char v39 = objc_alloc_init(GEOPDPlace);
        if (!GEOPDPlaceReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_84;
        }
        PBReaderRecallMark();
        uint64_t v40 = 32;
LABEL_50:
        id v41 = *(void **)(a1 + v40);
        *(void *)(a1 + v40) = v39;

        --v8;
LABEL_64:
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_85;
      }
      char v46 = 32 * *(unsigned char *)(a1 + 52);
LABEL_63:
      v8 += v46 >> 7;
      goto LABEL_64;
    }
    if (v53 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_57:
      char v45 = PBReaderSkipValueWithTag();
      uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if ((v45 & 1) == 0)
      {
        int v51 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(void *)(a1 + 16))
    {
      id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      id v43 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v42;
    }
    int v44 = PBUnknownFieldAdd();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v44)
    {
      int v51 = 0;
      char v52 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v54 & 1 | (v8 != 0))) {
      goto LABEL_66;
    }
  }
  if (!v34) {
    goto LABEL_57;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_85;
    }
    char v46 = *(unsigned char *)(a1 + 52) << 6;
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_85;
  }
  char v39 = objc_alloc_init(GEOPDPlaceRequest);
  if (GEOPDPlaceRequestReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = 24;
    goto LABEL_50;
  }
LABEL_84:

LABEL_85:
  int v51 = 0;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_67:
  char v52 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
  if ((v53 & 1) == 0) {
    goto LABEL_69;
  }
LABEL_68:
  *(unsigned char *)(a1 + v52[644]) |= 1u;
LABEL_69:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[644]) |= 4u;
    *(unsigned char *)(a1 + v52[644]) |= 2u;
    goto LABEL_78;
  }
  if (v19)
  {
    while (1)
    {
      int v48 = *v19++;
      int v47 = v48;
      if (v48 == 1) {
        break;
      }
      if (v47 == 2)
      {
LABEL_74:
        *(unsigned char *)(a1 + v52[644]) |= v47;
      }
      else if (!v47)
      {
        goto LABEL_78;
      }
    }
    LOBYTE(v47) = 4;
    goto LABEL_74;
  }
LABEL_78:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    uint64_t v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1893F581C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893F5E7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPLocalityFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPLocalityFeedbackReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPLocalityFeedbackReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPLocalityFeedbackReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPLocalityFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1893F6038(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPLocalityFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPLocalityFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893F609C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893F6234(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPLocalityFeedbackIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if (GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 52);
  }
  if ((v2 & 2) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 24);

  return (uint64_t)GEOPDPlaceRequestIsDirty(v4);
}

os_unfair_lock_s *GEORPLocalityFeedbackIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPLocalityFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1893F65FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893F6878(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893F6B40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPMerchantLookupFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v7)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_66;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_66:
      int v52 = 1;
      goto LABEL_67;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      unsigned int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_57;
      }
      if ((*(unsigned char *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        char v39 = objc_alloc_init(GEORPMerchantLookupContext);
        if (!GEORPMerchantLookupContextReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_85;
        }
        PBReaderRecallMark();
        uint64_t v40 = 24;
LABEL_50:
        id v41 = *(void **)(a1 + v40);
        *(void *)(a1 + v40) = v39;

        --v8;
LABEL_64:
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_86;
      }
      char v46 = *(unsigned char *)(a1 + 52) << 6;
LABEL_63:
      v8 += v46 >> 7;
      goto LABEL_64;
    }
    if (v54 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_57:
      char v45 = PBReaderSkipValueWithTag();
      uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if ((v45 & 1) == 0)
      {
        int v52 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(void *)(a1 + 16))
    {
      id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      id v43 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v42;
    }
    int v44 = PBUnknownFieldAdd();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v44)
    {
      int v52 = 0;
      char v53 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v55 & 1 | (v8 != 0))) {
      goto LABEL_66;
    }
  }
  if (!v34) {
    goto LABEL_57;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_86;
    }
    char v46 = 32 * *(unsigned char *)(a1 + 52);
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_86;
  }
  char v39 = objc_alloc_init(GEORPMerchantLookupCorrections);
  if (GEORPMerchantLookupCorrectionsReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v40 = 32;
    goto LABEL_50;
  }
LABEL_85:

LABEL_86:
  int v52 = 0;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_67:
  char v53 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
  if ((v54 & 1) == 0) {
    goto LABEL_69;
  }
LABEL_68:
  *(unsigned char *)(a1 + v53[652]) |= 1u;
LABEL_69:
  if (v57 || (v52 & 1) == 0)
  {
    *(unsigned char *)(a1 + v53[652]) |= 2u;
    *(unsigned char *)(a1 + v53[652]) |= 4u;
    goto LABEL_79;
  }
  if (v19)
  {
    while (1)
    {
      int v49 = *v19++;
      int v48 = v49;
      if (v49 == 1) {
        break;
      }
      if (v48 == 2)
      {
        char v47 = 4;
LABEL_75:
        *(unsigned char *)(a1 + v53[652]) |= v47;
      }
      else if (!v48)
      {
        goto LABEL_79;
      }
    }
    char v47 = 2;
    goto LABEL_75;
  }
LABEL_79:
  if (v52) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v57)
  {
    uint64_t v50 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1893F721C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893F785C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPMerchantLookupFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPMerchantLookupFeedbackReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPMerchantLookupFeedbackReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPMerchantLookupFeedbackReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPMerchantLookupFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1893F7A18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPMerchantLookupFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPMerchantLookupFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893F7A7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893F7C14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPMerchantLookupFeedbackIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 2) != 0)
  {
    if (GEORPMerchantLookupContextIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEORPMerchantLookupFeedbackIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPMerchantLookupFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1893F7F80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893F81FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPersonalizedMapsContextReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              uint64_t v26 = &OBJC_IVAR___GEORPPersonalizedMapsContext__addressType;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              uint64_t v26 = &OBJC_IVAR___GEORPPersonalizedMapsContext__addressType;
              goto LABEL_44;
            }
          }
          uint64_t v26 = &OBJC_IVAR___GEORPPersonalizedMapsContext__addressType;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          BOOL v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 2u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          uint64_t v26 = &OBJC_IVAR___GEORPPersonalizedMapsContext__placeType;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          uint64_t v26 = &OBJC_IVAR___GEORPPersonalizedMapsContext__placeType;
          goto LABEL_44;
        }
      }
      uint64_t v26 = &OBJC_IVAR___GEORPPersonalizedMapsContext__placeType;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1893F8DE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPersonalizedMapsContextReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPPersonalizedMapsContextReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893F8E44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893F93D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPlaceContainmentCorrectionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v7)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_66;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_66:
      int v51 = 1;
      goto LABEL_67;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_57;
      }
      if ((*(unsigned char *)(a1 + 52) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_85;
        }
        char v39 = objc_alloc_init(GEORPContainmentCorrection);
        if (!GEORPContainmentCorrectionReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_84;
        }
        PBReaderRecallMark();
        uint64_t v40 = 32;
LABEL_50:
        id v41 = *(void **)(a1 + v40);
        *(void *)(a1 + v40) = v39;

        --v8;
LABEL_64:
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_85;
      }
      char v46 = 32 * *(unsigned char *)(a1 + 52);
LABEL_63:
      v8 += v46 >> 7;
      goto LABEL_64;
    }
    if (v53 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_57:
      char v45 = PBReaderSkipValueWithTag();
      uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if ((v45 & 1) == 0)
      {
        int v51 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(void *)(a1 + 16))
    {
      id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      id v43 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v42;
    }
    int v44 = PBUnknownFieldAdd();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v44)
    {
      int v51 = 0;
      int v52 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v54 & 1 | (v8 != 0))) {
      goto LABEL_66;
    }
  }
  if (!v34) {
    goto LABEL_57;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_85;
    }
    char v46 = *(unsigned char *)(a1 + 52) << 6;
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_85;
  }
  char v39 = objc_alloc_init(GEORPContainmentCorrection);
  if (GEORPContainmentCorrectionReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = 24;
    goto LABEL_50;
  }
LABEL_84:

LABEL_85:
  int v51 = 0;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_67:
  int v52 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
  if ((v53 & 1) == 0) {
    goto LABEL_69;
  }
LABEL_68:
  *(unsigned char *)(a1 + v52[664]) |= 1u;
LABEL_69:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[664]) |= 4u;
    *(unsigned char *)(a1 + v52[664]) |= 2u;
    goto LABEL_78;
  }
  if (v19)
  {
    while (1)
    {
      int v48 = *v19++;
      int v47 = v48;
      if (v48 == 1) {
        break;
      }
      if (v47 == 2)
      {
LABEL_74:
        *(unsigned char *)(a1 + v52[664]) |= v47;
      }
      else if (!v47)
      {
        goto LABEL_78;
      }
    }
    LOBYTE(v47) = 4;
    goto LABEL_74;
  }
LABEL_78:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    int v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1893F9AA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893FA0F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPlaceContainmentCorrectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPPlaceContainmentCorrectionsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPPlaceContainmentCorrectionsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPPlaceContainmentCorrectionsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPPlaceContainmentCorrectionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1893FA2AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPlaceContainmentCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPPlaceContainmentCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893FA310(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPlaceContainmentCorrectionsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPContainmentCorrectionIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1893FA678(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPPlaceContainmentCorrectionsIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if (GEORPContainmentCorrectionIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 52);
  }
  if ((v2 & 2) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 24);

  return GEORPContainmentCorrectionIsDirty(v4);
}

os_unfair_lock_s *GEORPPlaceContainmentCorrectionsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEORPPlaceContainmentCorrectionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1893FA9BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893FAC38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893FAF00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPlaceRequestResponseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v7)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_66;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_66:
      int v52 = 1;
      goto LABEL_67;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_57;
      }
      if ((*(unsigned char *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        char v39 = objc_alloc_init(GEOPDPlaceRequest);
        if (!GEOPDPlaceRequestReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_85;
        }
        PBReaderRecallMark();
        uint64_t v40 = 24;
LABEL_50:
        id v41 = *(void **)(a1 + v40);
        *(void *)(a1 + v40) = v39;

        --v8;
LABEL_64:
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_86;
      }
      char v46 = *(unsigned char *)(a1 + 52) << 6;
LABEL_63:
      v8 += v46 >> 7;
      goto LABEL_64;
    }
    if (v54 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_57:
      char v45 = PBReaderSkipValueWithTag();
      uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if ((v45 & 1) == 0)
      {
        int v52 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(void *)(a1 + 16))
    {
      id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      id v43 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v42;
    }
    int v44 = PBUnknownFieldAdd();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v44)
    {
      int v52 = 0;
      char v53 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v55 & 1 | (v8 != 0))) {
      goto LABEL_66;
    }
  }
  if (!v34) {
    goto LABEL_57;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_86;
    }
    char v46 = 32 * *(unsigned char *)(a1 + 52);
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_86;
  }
  char v39 = objc_alloc_init(GEOPDPlaceResponse);
  if (GEOPDPlaceResponseReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = 32;
    goto LABEL_50;
  }
LABEL_85:

LABEL_86:
  int v52 = 0;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_67:
  char v53 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
  if ((v54 & 1) == 0) {
    goto LABEL_69;
  }
LABEL_68:
  *(unsigned char *)(a1 + v53[672]) |= 1u;
LABEL_69:
  if (v57 || (v52 & 1) == 0)
  {
    *(unsigned char *)(a1 + v53[672]) |= 2u;
    *(unsigned char *)(a1 + v53[672]) |= 4u;
    goto LABEL_79;
  }
  if (v19)
  {
    while (1)
    {
      int v49 = *v19++;
      int v48 = v49;
      if (v49 == 1) {
        break;
      }
      if (v48 == 2)
      {
        char v47 = 4;
LABEL_75:
        *(unsigned char *)(a1 + v53[672]) |= v47;
      }
      else if (!v48)
      {
        goto LABEL_79;
      }
    }
    char v47 = 2;
    goto LABEL_75;
  }
LABEL_79:
  if (v52) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v57)
  {
    uint64_t v50 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1893FB5DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893FBC54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPlaceRequestResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPPlaceRequestResponseReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPPlaceRequestResponseReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPPlaceRequestResponseReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPPlaceRequestResponseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1893FBE10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPlaceRequestResponseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPPlaceRequestResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893FBE74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893FC00C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPlaceRequestResponseIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if (GEOPDPlaceRequestIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 52);
  }
  if ((v2 & 4) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 32);

  return (uint64_t)GEOPDPlaceResponseIsDirty(v4);
}

os_unfair_lock_s *GEORPPlaceRequestResponseIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPPlaceRequestResponseIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1893FC3D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893FC650(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893FC96C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiActivityFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 72) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 72) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 72) >> 3) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v7;
        char v18 = v16 | v11;
        unsigned int v19 = (int *)MEMORY[0x1E4F940E8];
        if (((v16 | v11) | v8)) {
          uint64_t v20 = 0;
        }
        else {
          uint64_t v20 = a3;
        }
        int v93 = 1;
        char v21 = v16 & ~(_BYTE)v11 | v7;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_122;
        }
        char v91 = v17;
        char v94 = v18 | v17;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        char v95 = (v20 == 0) | v18;
        char v23 = (int *)MEMORY[0x1E4F940B8];
        char v92 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_120;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v19;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_120:
      int v93 = 1;
      goto LABEL_121;
    }
    unint64_t v35 = v26 >> 3;
    BOOL v36 = v18;
    if ((v95 & 1) == 0)
    {
      int v37 = v20;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36) {
          goto LABEL_89;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x20) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_141;
          }
          id v41 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v41, (void *)v3))
          {
            PBReaderRecallMark();
            id v42 = *(void **)(a1 + 48);
            *(void *)(a1 + 48) = v41;

            --v9;
            goto LABEL_116;
          }

          goto LABEL_141;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_141;
        }
        v9 += *(unsigned __int8 *)(a1 + 72) << 26 >> 31;
        goto LABEL_116;
      case 2:
        if (!v36 || (*(unsigned char *)(a1 + 72) & 0x10) != 0) {
          goto LABEL_89;
        }
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark())
          {
LABEL_141:
            int v93 = 0;
            char v18 = v92;
            goto LABEL_121;
          }
          while (1)
          {
            char v46 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
              break;
            }
            char v47 = 0;
            unsigned int v48 = 0;
            uint64_t v49 = 0;
            uint64_t v50 = (int *)MEMORY[0x1E4F940B8];
            while (1)
            {
              uint64_t v51 = *v19;
              uint64_t v52 = *(void *)(v3 + v51);
              unint64_t v53 = v52 + 1;
              if (v52 == -1 || v53 > *(void *)(v3 + *v6)) {
                break;
              }
              char v54 = *(unsigned char *)(*(void *)(v3 + *v50) + v52);
              *(void *)(v3 + v51) = v53;
              v49 |= (unint64_t)(v54 & 0x7F) << v47;
              if (v54 < 0)
              {
                v47 += 7;
                BOOL v31 = v48++ >= 9;
                if (!v31) {
                  continue;
                }
              }
              goto LABEL_64;
            }
            *(unsigned char *)(v3 + *v46) = 1;
LABEL_64:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          char v18 = v92;
        }
        else
        {
          char v79 = 0;
          unsigned int v80 = 0;
          uint64_t v81 = 0;
          while (1)
          {
            uint64_t v82 = *v19;
            uint64_t v83 = *(void *)(v3 + v82);
            unint64_t v84 = v83 + 1;
            if (v83 == -1 || v84 > *(void *)(v3 + *v6)) {
              break;
            }
            char v85 = *(unsigned char *)(*(void *)(v3 + *v23) + v83);
            *(void *)(v3 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              BOOL v31 = v80++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_115;
          }
          *(unsigned char *)(v3 + *v22) = 1;
LABEL_115:
          PBRepeatedUInt32Add();
LABEL_116:
          char v18 = v92;
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        }
        char v23 = (int *)MEMORY[0x1E4F940B8];
        goto LABEL_118;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_89;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v57 = 0;
        *(unsigned char *)(a1 + 72) |= 2u;
        while (2)
        {
          uint64_t v58 = *v19;
          uint64_t v59 = *(void *)(v3 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(v3 + *v23) + v59);
            *(void *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              BOOL v31 = v56++ >= 9;
              if (v31)
              {
                uint64_t v57 = 0;
                goto LABEL_94;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v57 = 0;
        }
LABEL_94:
        BOOL v77 = v57 != 0;
        uint64_t v78 = 69;
        goto LABEL_103;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_89;
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v64 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        while (2)
        {
          uint64_t v65 = *v19;
          uint64_t v66 = *(void *)(v3 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(v3 + *v23) + v66);
            *(void *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              BOOL v31 = v63++ >= 9;
              if (v31)
              {
                uint64_t v64 = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v64 = 0;
        }
LABEL_98:
        BOOL v77 = v64 != 0;
        uint64_t v78 = 68;
        goto LABEL_103;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_89;
        }
        char v69 = 0;
        unsigned int v70 = 0;
        uint64_t v71 = 0;
        *(unsigned char *)(a1 + 72) |= 4u;
        while (2)
        {
          uint64_t v72 = *v19;
          uint64_t v73 = *(void *)(v3 + v72);
          unint64_t v74 = v73 + 1;
          if (v73 == -1 || v74 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v75 = *(unsigned char *)(*(void *)(v3 + *v23) + v73);
            *(void *)(v3 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              BOOL v31 = v70++ >= 9;
              if (v31)
              {
                uint64_t v71 = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v71 = 0;
        }
LABEL_102:
        BOOL v77 = v71 != 0;
        uint64_t v78 = 70;
LABEL_103:
        *(unsigned char *)(a1 + v78) = v77;
        goto LABEL_118;
      default:
        if ((v91 & 1) != 0 && (*(unsigned char *)(a1 + 72) & 8) == 0)
        {
          if (!*(void *)(a1 + 16))
          {
            id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v44 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v43;
          }
          int v45 = PBUnknownFieldAdd();
          char v18 = v92;
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          char v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v45)
          {
            int v93 = 0;
            goto LABEL_123;
          }
LABEL_118:
          if (!(v94 & 1 | (v9 != 0)) || *(void *)(v3 + *v19) >= *(void *)(v3 + *v6)) {
            goto LABEL_120;
          }
          continue;
        }
LABEL_89:
        char v76 = PBReaderSkipValueWithTag();
        char v23 = (int *)MEMORY[0x1E4F940B8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        char v18 = v92;
        if (v76) {
          goto LABEL_118;
        }
        int v93 = 0;
LABEL_121:
        char v21 = v91;
LABEL_122:
        if (v21) {
LABEL_123:
        }
          *(unsigned char *)(a1 + 72) |= 8u;
        if (v18 & 1 | ((v93 & 1) == 0))
        {
          *(unsigned char *)(a1 + 72) |= 0x20u;
          *(unsigned char *)(a1 + 72) |= 0x10u;
          goto LABEL_134;
        }
        if (v20)
        {
          while (2)
          {
            while (1)
            {
              int v87 = *v20++;
              int v86 = v87;
              if (v87 == 1) {
                break;
              }
              if (v86 == 2)
              {
                char v88 = 16;
                goto LABEL_133;
              }
              if (!v86) {
                goto LABEL_134;
              }
            }
            char v88 = 32;
LABEL_133:
            *(unsigned char *)(a1 + 72) |= v88;
            continue;
          }
        }
LABEL_134:
        if (v93)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_138:
          int v89 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v18) {
            goto LABEL_138;
          }
        }
        return v3;
    }
  }
}

void sub_1893FD43C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893FE0E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiActivityFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPPoiActivityFeedbackReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPPoiActivityFeedbackReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPPoiActivityFeedbackReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPPoiActivityFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 48) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1893FE290(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiActivityFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPPoiActivityFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1893FE2F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893FE538(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiActivityFeedbackIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 72) & 0x70) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_1893FE978(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893FED90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1893FF038(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiCorrectionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 124);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 120)];
  uint64_t v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = *(_DWORD *)(a1 + 136);
  uint32x4_t v14 = (uint32x4_t)vdupq_n_s32(v13);
  v15.i64[0] = 0x100000001;
  v15.i64[1] = 0x100000001;
  unsigned int v16 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_18A62E440), v15), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_18A62E450), v15)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_18A62E460), v15)))+ ((v13 >> 4) & 1);
  while (2)
  {
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    uint64_t v19 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v16;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v18 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v20 = v16 > 8;
        char v21 = v20 & ~(_BYTE)v12 | v10;
        unsigned __int8 v22 = v20 | v12;
        char v88 = v21;
        char v89 = v22 | v21;
        if ((v22 | v9)) {
          char v23 = 0;
        }
        else {
          char v23 = a3;
        }
        char v90 = (v23 == 0) | v22;
        BOOL v91 = v22;
        char v24 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v25 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v26 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v16;
LABEL_7:
        uint64_t v17 = v10;
LABEL_8:
        uint64_t v18 = v11;
        uint64_t v19 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        uint64_t v12 = v19;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v24) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v25)) {
      goto LABEL_170;
    }
    char v27 = 0;
    unsigned int v28 = 0;
    unint64_t v29 = 0;
    while (1)
    {
      uint64_t v30 = *v24;
      uint64_t v31 = *(void *)(v3 + v30);
      unint64_t v32 = v31 + 1;
      if (v31 == -1 || v32 > *(void *)(v3 + *v7)) {
        break;
      }
      char v33 = *(unsigned char *)(*(void *)(v3 + *v26) + v31);
      *(void *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0) {
        goto LABEL_25;
      }
      v27 += 7;
      BOOL v34 = v28++ >= 9;
      if (v34)
      {
        unint64_t v29 = 0;
        int v35 = *(unsigned __int8 *)(v3 + *v25);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v25) = 1;
LABEL_25:
    int v35 = *(unsigned __int8 *)(v3 + *v25);
    if (*(unsigned char *)(v3 + *v25)) {
      unint64_t v29 = 0;
    }
LABEL_27:
    if (v35 || (v29 & 7) == 4)
    {
LABEL_170:
      int v87 = 1;
      goto LABEL_171;
    }
    unint64_t v37 = v29 >> 3;
    BOOL v38 = v91;
    if ((v90 & 1) == 0)
    {
      int v39 = v23;
      do
      {
        int v41 = *v39++;
        int v40 = v41;
        BOOL v38 = v41 != 0;
        if (v41) {
          BOOL v42 = v40 == v37;
        }
        else {
          BOOL v42 = 1;
        }
      }
      while (!v42);
    }
    switch((int)v37)
    {
      case 1:
        if (!v38) {
          goto LABEL_126;
        }
        if ((*(unsigned char *)(a1 + 137) & 8) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 72;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_197;
        }
        int v82 = (int)(*(_DWORD *)(a1 + 136) << 20) >> 31;
        goto LABEL_167;
      case 2:
        if (!v38) {
          goto LABEL_126;
        }
        if ((*(unsigned char *)(a1 + 137) & 0x80) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 104;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_197;
        }
        int v82 = (int)(*(_DWORD *)(a1 + 136) << 16) >> 31;
        goto LABEL_167;
      case 3:
        if (!v38) {
          goto LABEL_126;
        }
        if ((*(unsigned char *)(a1 + 136) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_197;
          }
          int v82 = (int)(*(_DWORD *)(a1 + 136) << 26) >> 31;
          goto LABEL_167;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_197;
        }
        int v45 = objc_alloc_init(GEORPAddressCorrections);
        if (!GEORPAddressCorrectionsReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1)) {
          goto LABEL_196;
        }
        PBReaderRecallMark();
        uint64_t v46 = 24;
        goto LABEL_102;
      case 4:
        if (!v38 || (*(unsigned char *)(a1 + 136) & 0x80) != 0) {
          goto LABEL_126;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_197;
        }
        int v45 = objc_alloc_init(GEORPFeedbackBusinessHours);
        if (!GEORPFeedbackBusinessHoursReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1)) {
          goto LABEL_196;
        }
        PBReaderRecallMark();
        -[GEORPPoiCorrections _addNoFlagsBusinessHours:](a1, v45);

        goto LABEL_168;
      case 5:
        if (!v38) {
          goto LABEL_126;
        }
        if ((*(unsigned char *)(a1 + 138) & 1) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 112;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_197;
        }
        int v82 = (int)(*(_DWORD *)(a1 + 136) << 15) >> 31;
        goto LABEL_167;
      case 6:
        if (!v38) {
          goto LABEL_126;
        }
        if (*(unsigned char *)(a1 + 137))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_197;
          }
          int v82 = (int)(*(_DWORD *)(a1 + 136) << 23) >> 31;
          goto LABEL_167;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_197;
        }
        int v45 = objc_alloc_init(GEORPCategoryCorrections);
        if (!GEORPCategoryCorrectionsReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1)) {
          goto LABEL_196;
        }
        PBReaderRecallMark();
        uint64_t v46 = 48;
        goto LABEL_102;
      case 7:
        if (!v38) {
          goto LABEL_126;
        }
        if ((*(unsigned char *)(a1 + 136) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_197;
          }
          int v82 = (int)(*(_DWORD *)(a1 + 136) << 25) >> 31;
          goto LABEL_167;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_197;
        }
        int v45 = objc_alloc_init(GEORPAmenityCorrections);
        if (!GEORPAmenityCorrectionsReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1)) {
          goto LABEL_196;
        }
        PBReaderRecallMark();
        uint64_t v46 = 32;
        goto LABEL_102;
      case 8:
        if ((v9 & 1) == 0) {
          goto LABEL_126;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        *(_DWORD *)(a1 + 136) |= 4u;
        while (2)
        {
          uint64_t v50 = *v24;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v26) + v51);
            *(void *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v34 = v48++ >= 9;
              if (v34)
              {
                uint64_t v49 = 0;
                goto LABEL_131;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v49 = 0;
        }
LABEL_131:
        BOOL v80 = v49 != 0;
        uint64_t v81 = 134;
        goto LABEL_144;
      case 9:
        if ((v9 & 1) == 0) {
          goto LABEL_126;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v56 = 0;
        *(_DWORD *)(a1 + 136) |= 8u;
        while (2)
        {
          uint64_t v57 = *v24;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v26) + v58);
            *(void *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              BOOL v34 = v55++ >= 9;
              if (v34)
              {
                uint64_t v56 = 0;
                goto LABEL_135;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v56 = 0;
        }
LABEL_135:
        BOOL v80 = v56 != 0;
        uint64_t v81 = 135;
        goto LABEL_144;
      case 10:
        if (!v38) {
          goto LABEL_126;
        }
        if ((*(unsigned char *)(a1 + 137) & 0x10) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 80;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_197;
        }
        int v82 = (int)(*(_DWORD *)(a1 + 136) << 19) >> 31;
        goto LABEL_167;
      case 11:
        if (!v38) {
          goto LABEL_126;
        }
        if ((*(unsigned char *)(a1 + 137) & 0x20) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 88;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_197;
        }
        int v82 = (int)(*(_DWORD *)(a1 + 136) << 18) >> 31;
        goto LABEL_167;
      case 12:
        if (!v38) {
          goto LABEL_126;
        }
        if ((*(unsigned char *)(a1 + 137) & 0x40) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 96;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_197;
        }
        int v82 = (int)(*(_DWORD *)(a1 + 136) << 17) >> 31;
        goto LABEL_167;
      case 13:
        if (!v38) {
          goto LABEL_126;
        }
        if ((*(unsigned char *)(a1 + 137) & 4) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 64;
LABEL_96:
          char v61 = *(void **)(a1 + v44);
          *(void *)(a1 + v44) = v43;
          goto LABEL_103;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_197;
        }
        int v82 = (int)(*(_DWORD *)(a1 + 136) << 21) >> 31;
        goto LABEL_167;
      case 14:
        if (!v38) {
          goto LABEL_126;
        }
        if ((*(unsigned char *)(a1 + 137) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_197;
          }
          int v82 = (int)(*(_DWORD *)(a1 + 136) << 22) >> 31;
LABEL_167:
          v8 += v82;
LABEL_168:
          unsigned int v25 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          unint64_t v26 = (int *)MEMORY[0x1E4F940B8];
LABEL_169:
          if (!(v89 & 1 | (v8 != 0))) {
            goto LABEL_170;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_197;
        }
        int v45 = objc_alloc_init(GEORPPlaceContainmentCorrections);
        if (GEORPPlaceContainmentCorrectionsReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v46 = 56;
LABEL_102:
          char v61 = *(void **)(a1 + v46);
          *(void *)(a1 + v46) = v45;
LABEL_103:

          --v8;
          goto LABEL_168;
        }
LABEL_196:

LABEL_197:
        int v87 = 0;
        unsigned int v25 = (int *)MEMORY[0x1E4F940C8];
LABEL_171:
        if (v88) {
LABEL_172:
        }
          *(_DWORD *)(a1 + 136) |= 0x10u;
        if (v91 || (v87 & 1) == 0)
        {
          *(_DWORD *)(a1 + 136) |= 0x800u;
          *(_DWORD *)(a1 + 136) |= 0x8000u;
          *(_DWORD *)(a1 + 136) |= 0x20u;
          *(_DWORD *)(a1 + 136) |= 0x80u;
          *(_DWORD *)(a1 + 136) |= 0x10000u;
          *(_DWORD *)(a1 + 136) |= 0x100u;
          *(_DWORD *)(a1 + 136) |= 0x40u;
          *(_DWORD *)(a1 + 136) |= 0x1000u;
          *(_DWORD *)(a1 + 136) |= 0x2000u;
          *(_DWORD *)(a1 + 136) |= 0x4000u;
          *(_DWORD *)(a1 + 136) |= 0x400u;
          *(_DWORD *)(a1 + 136) |= 0x200u;
        }
        else if (v23)
        {
          while (1)
          {
            int v84 = *v23++;
            int v83 = 2048;
            switch(v84)
            {
              case 0:
                goto LABEL_190;
              case 1:
                goto LABEL_188;
              case 2:
                int v83 = 0x8000;
                goto LABEL_188;
              case 3:
                int v83 = 32;
                goto LABEL_188;
              case 4:
                int v83 = 128;
                goto LABEL_188;
              case 5:
                int v83 = 0x10000;
                goto LABEL_188;
              case 6:
                int v83 = 256;
                goto LABEL_188;
              case 7:
                int v83 = 64;
                goto LABEL_188;
              case 10:
                int v83 = 4096;
                goto LABEL_188;
              case 11:
                int v83 = 0x2000;
                goto LABEL_188;
              case 12:
                int v83 = 0x4000;
                goto LABEL_188;
              case 13:
                int v83 = 1024;
                goto LABEL_188;
              case 14:
                int v83 = 512;
LABEL_188:
                *(_DWORD *)(a1 + 136) |= v83;
                break;
              default:
                continue;
            }
          }
        }
LABEL_190:
        if (v87) {
          unint64_t v3 = *(unsigned char *)(v3 + *v25) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v91)
        {
          char v85 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 15:
        if ((v9 & 1) == 0) {
          goto LABEL_126;
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v64 = 0;
        *(_DWORD *)(a1 + 136) |= 2u;
        while (2)
        {
          uint64_t v65 = *v24;
          uint64_t v66 = *(void *)(v3 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(v3 + *v26) + v66);
            *(void *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              BOOL v34 = v63++ >= 9;
              if (v34)
              {
                uint64_t v64 = 0;
                goto LABEL_139;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v64 = 0;
        }
LABEL_139:
        BOOL v80 = v64 != 0;
        uint64_t v81 = 133;
        goto LABEL_144;
      case 16:
        if ((v9 & 1) == 0) {
          goto LABEL_126;
        }
        char v69 = 0;
        unsigned int v70 = 0;
        uint64_t v71 = 0;
        *(_DWORD *)(a1 + 136) |= 1u;
        while (2)
        {
          uint64_t v72 = *v24;
          uint64_t v73 = *(void *)(v3 + v72);
          unint64_t v74 = v73 + 1;
          if (v73 == -1 || v74 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v75 = *(unsigned char *)(*(void *)(v3 + *v26) + v73);
            *(void *)(v3 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              BOOL v34 = v70++ >= 9;
              if (v34)
              {
                uint64_t v71 = 0;
                goto LABEL_143;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v71 = 0;
        }
LABEL_143:
        BOOL v80 = v71 != 0;
        uint64_t v81 = 132;
LABEL_144:
        *(unsigned char *)(a1 + v81) = v80;
        goto LABEL_169;
      default:
        if ((v88 & 1) == 0 || (*(unsigned char *)(a1 + 136) & 0x10) != 0)
        {
LABEL_126:
          char v79 = PBReaderSkipValueWithTag();
          unint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          unsigned int v25 = (int *)MEMORY[0x1E4F940C8];
          if ((v79 & 1) == 0)
          {
            int v87 = 0;
            goto LABEL_171;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v76 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v77 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v76;
          }
          int v78 = PBUnknownFieldAdd();
          unsigned int v25 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          unint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          if (!v78)
          {
            int v87 = 0;
            goto LABEL_172;
          }
        }
        goto LABEL_169;
    }
  }
}

void sub_189400008(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18940017C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894002F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894006B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189400828(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18940099C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189400C14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189400D8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189400F04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18940107C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894011F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189401C98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPoiCorrectionsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  [a1[3] readAll:1];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v2 = a1[5];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  [a1[6] readAll:1];
  [a1[4] readAll:1];
  return [a1[7] readAll:1];
}

unint64_t GEORPPoiCorrectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 124))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPPoiCorrectionsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 128));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 120) = [v8 position];
  *(_DWORD *)(a1 + 124) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORPPoiCorrectionsReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORPPoiCorrectionsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPPoiCorrectionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPPoiCorrectionsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 128));
  return Specified;
}

void sub_189401F7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPPoiCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189401FE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiCorrectionsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_90;
          }
          goto LABEL_64;
        case 2u:
          if (v15 == 2) {
            goto LABEL_64;
          }
          goto LABEL_90;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPAddressCorrectionsIsValid(a1)) {
            goto LABEL_90;
          }
          goto LABEL_69;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackBusinessHoursIsValid(a1)) {
            goto LABEL_90;
          }
          goto LABEL_69;
        case 5u:
          if (v15 == 2) {
            goto LABEL_64;
          }
          goto LABEL_90;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCategoryCorrectionsIsValid(a1)) {
            goto LABEL_90;
          }
          goto LABEL_69;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPAmenityCorrectionsIsValid(a1)) {
            goto LABEL_90;
          }
          goto LABEL_69;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_86;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_86;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 0xAu:
          if (v15 == 2) {
            goto LABEL_64;
          }
          goto LABEL_90;
        case 0xBu:
          if (v15 == 2) {
            goto LABEL_64;
          }
          goto LABEL_90;
        case 0xCu:
          if (v15 == 2) {
            goto LABEL_64;
          }
          goto LABEL_90;
        case 0xDu:
          if (v15 == 2) {
            goto LABEL_64;
          }
          goto LABEL_90;
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPlaceContainmentCorrectionsIsValid(a1)) {
            goto LABEL_90;
          }
LABEL_69:
          PBReaderRecallMark();
          continue;
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_86;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 0x10u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v33 = 0;
          break;
        default:
LABEL_64:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_90:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v34 = *v2;
        uint64_t v35 = *(void *)&a1[v34];
        unint64_t v36 = v35 + 1;
        if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
          break;
        }
        int v37 = *(char *)(*(void *)&a1[*v5] + v35);
        *(void *)&a1[v34] = v36;
        if (v37 < 0)
        {
          BOOL v22 = v33++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_87;
      }
LABEL_86:
      a1[*v4] = 1;
LABEL_87:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

void sub_18940286C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPoiCorrectionsIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  int v2 = *(_DWORD *)(a1 + 136);
  if ((v2 & 0x28800) != 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEORPAddressCorrectionsIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 136);
  }
  if ((v2 & 0x10080) != 0) {
    return 1;
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEORPCategoryCorrectionsIsDirty(*(void *)(a1 + 48))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 136);
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEORPAmenityCorrectionsIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 136);
  }
  if ((v2 & 0x7400) != 0) {
    return 1;
  }
  if ((v2 & 0x200) != 0)
  {
    if (GEORPPlaceContainmentCorrectionsIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 136);
  }
  if ((v2 & 0x80) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 40);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEORPFeedbackBusinessHoursIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_30;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_30:

  return v3;
}

os_unfair_lock_s *GEORPPoiCorrectionsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPPoiCorrectionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 32);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1894031F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189403A8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189403FCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFAFFFCFFFDFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 76) & 4) != 0));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 2;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v68 = v18;
        char v69 = v19 | v18;
        if ((v19 | v9)) {
          unint64_t v20 = 0;
        }
        else {
          unint64_t v20 = a3;
        }
        char v70 = (v20 == 0) | v19;
        BOOL v71 = v19;
        int v21 = (int *)MEMORY[0x1E4F940E8];
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_103;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_103:
      int v66 = 1;
      goto LABEL_104;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v71;
    if ((v70 & 1) == 0)
    {
      unint64_t v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v9 & 1) == 0) {
          goto LABEL_82;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        while (1)
        {
          uint64_t v43 = *v21;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v7)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v23) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_85;
          }
          v40 += 7;
          BOOL v31 = v41++ >= 9;
          if (v31)
          {
            LODWORD(v42) = 0;
            goto LABEL_87;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_85:
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v42) = 0;
        }
LABEL_87:
        *(_DWORD *)(a1 + 68) = v42;
        goto LABEL_102;
      case 2:
        if (!v35) {
          goto LABEL_82;
        }
        if ((*(unsigned char *)(a1 + 76) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_121;
          }
          char v61 = 16 * *(unsigned char *)(a1 + 76);
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        uint64_t v50 = objc_alloc_init(GEORPPoiCorrections);
        if (!GEORPPoiCorrectionsReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_120;
        }
        PBReaderRecallMark();
        uint64_t v51 = 24;
        goto LABEL_81;
      case 3:
        if (!v35) {
          goto LABEL_82;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_121;
          }
          char v61 = 4 * *(unsigned char *)(a1 + 76);
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        uint64_t v50 = objc_alloc_init(GEOPDPlace);
        if (!GEOPDPlaceReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_120;
        }
        PBReaderRecallMark();
        uint64_t v51 = 40;
        goto LABEL_81;
      case 4:
        if (!v35) {
          goto LABEL_82;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_121;
          }
          char v61 = 8 * *(unsigned char *)(a1 + 76);
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        uint64_t v50 = objc_alloc_init(GEOPDPlaceRequest);
        if (!GEOPDPlaceRequestReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_120;
        }
        PBReaderRecallMark();
        uint64_t v51 = 32;
        goto LABEL_81;
      case 5:
        if ((v9 & 1) == 0) {
          goto LABEL_82;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        while (2)
        {
          uint64_t v55 = *v21;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v23) + v56);
            *(void *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              BOOL v31 = v53++ >= 9;
              if (v31)
              {
                uint64_t v54 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v54 = 0;
        }
LABEL_91:
        *(unsigned char *)(a1 + 72) = v54 != 0;
        goto LABEL_102;
      case 6:
        if (!v35) {
          goto LABEL_82;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_121;
          }
          char v61 = 2 * *(unsigned char *)(a1 + 76);
LABEL_100:
          v8 += v61 >> 7;
LABEL_101:
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_102:
          if (!(v69 & 1 | (v8 != 0))) {
            goto LABEL_103;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        uint64_t v50 = objc_alloc_init(GEORPCuratedCollectionContext);
        if (GEORPCuratedCollectionContextReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v51 = 48;
LABEL_81:
          unint64_t v59 = *(void **)(a1 + v51);
          *(void *)(a1 + v51) = v50;

          --v8;
          goto LABEL_101;
        }
LABEL_120:

LABEL_121:
        int v66 = 0;
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_104:
        unint64_t v67 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
        if (v68) {
LABEL_105:
        }
          *(unsigned char *)(a1 + v67[713]) |= 4u;
        if (v71 || (v66 & 1) == 0)
        {
          *(unsigned char *)(a1 + v67[713]) |= 8u;
          *(unsigned char *)(a1 + v67[713]) |= 0x20u;
          *(unsigned char *)(a1 + v67[713]) |= 0x10u;
          *(unsigned char *)(a1 + v67[713]) |= 0x40u;
        }
        else if (v20)
        {
          while (1)
          {
            int v62 = *v20++;
            char v63 = 8;
            switch(v62)
            {
              case 0:
                goto LABEL_114;
              case 2:
                goto LABEL_113;
              case 3:
                char v63 = 32;
                goto LABEL_113;
              case 4:
                char v63 = 16;
                goto LABEL_113;
              case 6:
                char v63 = 64;
LABEL_113:
                *(unsigned char *)(a1 + v67[713]) |= v63;
                break;
              default:
                continue;
            }
          }
        }
LABEL_114:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v71)
        {
          uint64_t v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v68 & 1) == 0 || (*(unsigned char *)(a1 + 76) & 4) != 0)
        {
LABEL_82:
          char v60 = PBReaderSkipValueWithTag();
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v60 & 1) == 0)
          {
            int v66 = 0;
            goto LABEL_104;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v48 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v47;
          }
          int v49 = PBUnknownFieldAdd();
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v49)
          {
            int v66 = 0;
            unint64_t v67 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
            goto LABEL_105;
          }
        }
        goto LABEL_102;
    }
  }
}

void sub_189404A08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189404B78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189404D38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189405730(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPoiFeedbackCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  int v2 = *(void **)(a1 + 48);

  return [v2 readAll:1];
}

unint64_t GEORPPoiFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPPoiFeedbackReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPPoiFeedbackReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPPoiFeedbackReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPPoiFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPPoiFeedbackCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189405940(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPPoiFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1894059A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189405BCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPPoiFeedbackIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  int v2 = *(char *)(a1 + 76);
  if (v2 < 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEORPPoiCorrectionsIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 76);
  }
  if ((v2 & 0x20) == 0) {
    goto LABEL_8;
  }
  if (GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
    return 1;
  }
  LOBYTE(v2) = *(unsigned char *)(a1 + 76);
LABEL_8:
  if ((v2 & 0x10) != 0)
  {
    if (GEOPDPlaceRequestIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 76);
  }
  if ((v2 & 0x40) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 48);

  return GEORPCuratedCollectionContextIsDirty(v4);
}

os_unfair_lock_s *GEORPPoiFeedbackIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEORPPoiFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189406134(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894065A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894068B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiImageFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v7)) {
          unsigned __int8 v19 = 0;
        }
        else {
          unsigned __int8 v19 = a3;
        }
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_66;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_66:
      int v52 = 1;
      goto LABEL_67;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_57;
      }
      if ((*(unsigned char *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        BOOL v39 = objc_alloc_init(GEORPPoiImageFeedbackContext);
        if (!GEORPPoiImageFeedbackContextReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_85;
        }
        PBReaderRecallMark();
        uint64_t v40 = 24;
LABEL_50:
        unsigned int v41 = *(void **)(a1 + v40);
        *(void *)(a1 + v40) = v39;

        --v8;
LABEL_64:
        int v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_86;
      }
      char v46 = *(unsigned char *)(a1 + 52) << 6;
LABEL_63:
      v8 += v46 >> 7;
      goto LABEL_64;
    }
    if (v54 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_57:
      char v45 = PBReaderSkipValueWithTag();
      int v21 = (int *)MEMORY[0x1E4F940C8];
      if ((v45 & 1) == 0)
      {
        int v52 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(void *)(a1 + 16))
    {
      id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      uint64_t v43 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v42;
    }
    int v44 = PBUnknownFieldAdd();
    int v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v44)
    {
      int v52 = 0;
      unsigned int v53 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v55 & 1 | (v8 != 0))) {
      goto LABEL_66;
    }
  }
  if (!v34) {
    goto LABEL_57;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_86;
    }
    char v46 = 32 * *(unsigned char *)(a1 + 52);
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_86;
  }
  BOOL v39 = objc_alloc_init(GEORPPoiImageFeedbackCorrections);
  if (GEORPPoiImageFeedbackCorrectionsReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v40 = 32;
    goto LABEL_50;
  }
LABEL_85:

LABEL_86:
  int v52 = 0;
  int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_67:
  unsigned int v53 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
  if ((v54 & 1) == 0) {
    goto LABEL_69;
  }
LABEL_68:
  *(unsigned char *)(a1 + v53[725]) |= 1u;
LABEL_69:
  if (v57 || (v52 & 1) == 0)
  {
    *(unsigned char *)(a1 + v53[725]) |= 2u;
    *(unsigned char *)(a1 + v53[725]) |= 4u;
    goto LABEL_79;
  }
  if (v19)
  {
    while (1)
    {
      int v49 = *v19++;
      int v48 = v49;
      if (v49 == 1) {
        break;
      }
      if (v48 == 2)
      {
        char v47 = 4;
LABEL_75:
        *(unsigned char *)(a1 + v53[725]) |= v47;
      }
      else if (!v48)
      {
        goto LABEL_79;
      }
    }
    char v47 = 2;
    goto LABEL_75;
  }
LABEL_79:
  if (v52) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v57)
  {
    uint64_t v50 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189406F8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189407604(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiImageFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPPoiImageFeedbackReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPPoiImageFeedbackReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPPoiImageFeedbackReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPPoiImageFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1894077C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiImageFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPPoiImageFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189407824(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiImageFeedbackContextIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDPlaceIsValid(a1)) {
            goto LABEL_31;
          }
          goto LABEL_34;
        case 2u:
          if (v15 == 2) {
            goto LABEL_26;
          }
          goto LABEL_34;
        case 3u:
          if (v15 == 2) {
            goto LABEL_26;
          }
          goto LABEL_34;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackClientImageInfoIsValid(a1)) {
            goto LABEL_34;
          }
LABEL_31:
          PBReaderRecallMark();
          goto LABEL_32;
        default:
LABEL_26:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_34:
            PBReaderRecallMark();
            return 0;
          }
LABEL_32:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_33;
          }
          break;
      }
    }
  }
LABEL_33:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPPoiImageFeedbackCorrectionsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          BOOL v23 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

void sub_189407E10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPoiImageFeedbackIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 2) != 0)
  {
    if (GEORPPoiImageFeedbackContextIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEORPPoiImageFeedbackIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPPoiImageFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189408170(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894083EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894086B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiImageFeedbackContextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFFFFFEFFFDFFFCLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v55 = v17;
        char v56 = v18 | v17;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v57 = (v19 == 0) | v18;
        BOOL v58 = v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_77;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_77:
      int v53 = 1;
      goto LABEL_78;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v58;
    if ((v57 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_64;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_96;
          }
          BOOL v39 = objc_alloc_init(GEOPDPlace);
          if (GEOPDPlaceReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v40 = 40;
            goto LABEL_62;
          }
          goto LABEL_95;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_96;
        }
        char v48 = 16 * *(unsigned char *)(a1 + 68);
        goto LABEL_74;
      case 2:
        if (!v34) {
          goto LABEL_64;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 48;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_96;
        }
        char v48 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_74;
      case 3:
        if (!v34) {
          goto LABEL_64;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 32;
LABEL_56:
          char v46 = *(void **)(a1 + v45);
          *(void *)(a1 + v45) = v44;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_96;
        }
        char v48 = 32 * *(unsigned char *)(a1 + 68);
        goto LABEL_74;
      case 4:
        if (!v34) {
          goto LABEL_64;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_96;
          }
          char v48 = *(unsigned char *)(a1 + 68) << 6;
LABEL_74:
          v7 += v48 >> 7;
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_96;
        }
        BOOL v39 = objc_alloc_init(GEORPFeedbackClientImageInfo);
        if (GEORPFeedbackClientImageInfoReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v40 = 24;
LABEL_62:
          char v46 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
LABEL_63:

          --v7;
LABEL_75:
          int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_76:
          if (!(v56 & 1 | (v7 != 0))) {
            goto LABEL_77;
          }
          continue;
        }
LABEL_95:

LABEL_96:
        int v53 = 0;
        int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_78:
        char v54 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
        if (v55) {
LABEL_79:
        }
          *(unsigned char *)(a1 + v54[733]) |= 1u;
        if (v58 || (v53 & 1) == 0)
        {
          *(unsigned char *)(a1 + v54[733]) |= 8u;
          *(unsigned char *)(a1 + v54[733]) |= 0x10u;
          *(unsigned char *)(a1 + v54[733]) |= 4u;
          *(unsigned char *)(a1 + v54[733]) |= 2u;
        }
        else if (v19)
        {
          while (1)
          {
            int v50 = *v19++;
            char v49 = 8;
            switch(v50)
            {
              case 0:
                goto LABEL_89;
              case 1:
                goto LABEL_87;
              case 2:
                char v49 = 16;
                goto LABEL_87;
              case 3:
                char v49 = 4;
                goto LABEL_87;
              case 4:
                char v49 = 2;
LABEL_87:
                *(unsigned char *)(a1 + v54[733]) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_89:
        if (v53) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v58)
        {
          uint64_t v51 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v55 & 1) == 0 || (*(unsigned char *)(a1 + 68))
        {
LABEL_64:
          char v47 = PBReaderSkipValueWithTag();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v47 & 1) == 0)
          {
            int v53 = 0;
            goto LABEL_78;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v53 = 0;
            char v54 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
            goto LABEL_79;
          }
        }
        goto LABEL_76;
    }
  }
}

void sub_189408EEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189409058(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894091C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189409968(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiImageFeedbackContextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPPoiImageFeedbackContextReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPPoiImageFeedbackContextReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPPoiImageFeedbackContextReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPPoiImageFeedbackContextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 40) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189409B24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiImageFeedbackContextReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPPoiImageFeedbackContextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189409B88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189409D60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPPoiImageFeedbackContextIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v2 = *(unsigned char *)(a1 + 68);
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 68) & 8) != 0)
  {
    if (GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 68);
  }
  if ((v2 & 0x14) != 0) {
    return 1;
  }
  if ((v2 & 2) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 24);

  return GEORPFeedbackClientImageInfoIsDirty(v4);
}

os_unfair_lock_s *GEORPPoiImageFeedbackContextIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEORPPoiImageFeedbackContextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18940A168(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18940A480(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiImageFeedbackCorrectionsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          uint64_t v25 = PBReaderReadString();
          uint64_t v26 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_34;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 24) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v28 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v27;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_39;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_39:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_18940B08C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiImageFeedbackCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPPoiImageFeedbackCorrectionsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18940B0F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18940B70C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapNotificationLogEventReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v68 = v15 | v8;
        char v69 = v16 | v15 | v8;
        if ((v16 | v9)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        char v70 = (v17 == 0) | v16;
        BOOL v71 = v16;
        char v18 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_83;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_83:
      int v66 = 1;
      goto LABEL_84;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v71;
    if ((v70 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 56) & 8) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 24;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_102;
        }
        char v60 = 16 * *(unsigned char *)(a1 + 56);
        goto LABEL_81;
      case 2:
        if (!v32) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 56) & 0x10) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 32;
LABEL_49:
          id v42 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          --v10;
LABEL_82:
          if (!(v69 & 1 | (v10 != 0))) {
            goto LABEL_83;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v60 = 8 * *(unsigned char *)(a1 + 56);
LABEL_81:
          v10 += v60 >> 7;
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_82;
        }
LABEL_102:
        int v66 = 0;
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_84:
        unint64_t v67 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
        if (v68) {
LABEL_85:
        }
          *(unsigned char *)(a1 + v67[747]) |= 4u;
        if (v71 || (v66 & 1) == 0)
        {
          *(unsigned char *)(a1 + v67[747]) |= 8u;
          *(unsigned char *)(a1 + v67[747]) |= 0x10u;
          goto LABEL_96;
        }
        if (v17)
        {
          while (1)
          {
            int v63 = *v17++;
            int v62 = v63;
            if (v63 == 1) {
              break;
            }
            if (v62 == 2)
            {
              char v61 = 16;
LABEL_92:
              *(unsigned char *)(a1 + v67[747]) |= v61;
            }
            else if (!v62)
            {
              goto LABEL_96;
            }
          }
          char v61 = 8;
          goto LABEL_92;
        }
LABEL_96:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v71)
        {
          uint64_t v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if ((v9 & 1) == 0) {
          goto LABEL_66;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        *(unsigned char *)(a1 + 56) |= 2u;
        while (2)
        {
          uint64_t v46 = *v18;
          uint64_t v47 = *(void *)(v3 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v20) + v47);
            *(void *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              BOOL v28 = v44++ >= 9;
              if (v28)
              {
                uint64_t v45 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v45 = 0;
        }
LABEL_71:
        BOOL v58 = v45 != 0;
        uint64_t v59 = 53;
        goto LABEL_76;
      case 4:
        if ((v9 & 1) == 0) {
          goto LABEL_66;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v52 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        while (2)
        {
          uint64_t v53 = *v18;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v20) + v54);
            *(void *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              BOOL v28 = v51++ >= 9;
              if (v28)
              {
                uint64_t v52 = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v52 = 0;
        }
LABEL_75:
        BOOL v58 = v52 != 0;
        uint64_t v59 = 52;
LABEL_76:
        *(unsigned char *)(a1 + v59) = v58;
        goto LABEL_82;
      default:
        if ((v68 & 1) == 0 || (*(unsigned char *)(a1 + 56) & 4) != 0)
        {
LABEL_66:
          char v57 = PBReaderSkipValueWithTag();
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v57 & 1) == 0)
          {
            int v66 = 0;
            goto LABEL_84;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v40 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v39;
          }
          int v41 = PBUnknownFieldAdd();
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v41)
          {
            int v66 = 0;
            unint64_t v67 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
            goto LABEL_85;
          }
        }
        goto LABEL_82;
    }
  }
}

void sub_18940BF1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18940C73C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapNotificationLogEventReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPRapNotificationLogEventReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPRapNotificationLogEventReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPRapNotificationLogEventReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPRapNotificationLogEventReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18940C8CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapNotificationLogEventReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPRapNotificationLogEventReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18940C930(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18940CB24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRapNotificationLogEventIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18940CE88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18940D1F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18940D490(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18940D610(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18940DC58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapProfileInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPRapProfileInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPRapProfileInfoReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPRapProfileInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPRapProfileInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18940DE14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapProfileInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPRapProfileInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18940DE78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPRapProfileInfoIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if (GEOLocalizedStringIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 52);
  }
  if ((v2 & 2) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 24);

  return GEOLocalizedStringIsDirty(v4);
}

os_unfair_lock_s *GEORPRapProfileInfoIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEORPRapProfileInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18940E1CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18940E448(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRapUserResponseFeedbackReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          unsigned int v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_26;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_18940E774(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRapUserResponseFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPRapUserResponseFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18940E7D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRunningTrackFeedbackReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          unsigned int v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_26;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_18940F17C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRunningTrackFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPRunningTrackFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18940F1E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18940F6FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18940FB1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPSearchCommonContextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPSearchCommonContextReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    unsigned int v9 = (int *)&GEORPSearchCommonContextReadAllFrom_recursiveTag;
  }
  else {
    unsigned int v9 = (int *)&GEORPSearchCommonContextReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPSearchCommonContextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18940FCAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPSearchCommonContextReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPSearchCommonContextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18940FD10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18940FEB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPSearchCommonContextIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18941016C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18941033C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189410508(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189410B24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPSearchFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPSearchFeedbackReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    unsigned int v9 = (int *)&GEORPSearchFeedbackReadAllFrom_recursiveTag;
  }
  else {
    unsigned int v9 = (int *)&GEORPSearchFeedbackReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPSearchFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189410CE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPSearchFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPSearchFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189410D44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPSearchFeedbackContextIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORPSuggestionListIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPlaceRequestResponseIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORPSearchFeedbackCorrectionsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

void sub_1894112B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPSearchFeedbackIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 2) != 0)
  {
    if (GEORPSearchFeedbackContextIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 2) & 1;
}

void GEORPSearchFeedbackContextClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  -[GEORPSearchFeedbackContext _readAutocompleteSuggestionLists]((uint64_t)a1);
  if ([a1[3] count])
  {
    unint64_t v6 = 0;
    do
    {
      unsigned int v7 = [a1[3] objectAtIndexedSubscript:v6];
      unint64_t v8 = v7;
      if (a3 && GEORPSuggestionListHasSensitiveFields(v7, a2))
      {
        uint64_t v9 = (void *)[v8 copy];
        uint64_t v10 = [v9 autocompleteRequest];
        [v10 clearSensitiveFields:a2];

        [a1[3] replaceObjectAtIndex:v6 withObject:v9];
      }
      else
      {
        [v8 clearSensitiveFields:a2];
      }

      ++v6;
    }
    while (v6 < [a1[3] count]);
  }
  if ((a3 & 1) != 0
    && [a1 hasRequestContext]
    && ([a1 requestContext],
        unint64_t v11 = objc_claimAutoreleasedReturnValue(),
        unsigned int v12 = GEORPPlaceRequestResponseHasSensitiveFields(v11, a2),
        v11,
        v12))
  {
    unint64_t v13 = [a1 requestContext];
    id v15 = (id)[v13 copy];

    int v14 = [v15 placeRequest];
    [v14 clearSensitiveFields:a2];

    [a1 setRequestContext:v15];
  }
  else
  {
    id v15 = [a1 requestContext];
    [v15 clearSensitiveFields:a2];
  }
}

void sub_189411764(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894119E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189411CA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPSearchFeedbackContextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v52 = v17;
        char v53 = v18 | v17;
        if ((v18 | v7)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        int v20 = (int *)MEMORY[0x1E4F940E8];
        char v54 = (v19 == 0) | v18;
        BOOL v55 = v18;
        char v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_62;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_62:
      int v50 = 1;
      goto LABEL_63;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v55;
    if ((v54 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
        goto LABEL_56;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_82;
      }
      id v39 = objc_alloc_init(GEORPSuggestionList);
      if (!GEORPSuggestionListReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
        goto LABEL_81;
      }
      PBReaderRecallMark();
      -[GEORPSearchFeedbackContext _addNoFlagsAutocompleteSuggestionList:](a1, v39);

      goto LABEL_60;
    }
    if (v52 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_56:
      char v44 = PBReaderSkipValueWithTag();
      char v21 = (int *)MEMORY[0x1E4F940C8];
      if ((v44 & 1) == 0)
      {
        int v50 = 0;
        goto LABEL_63;
      }
      goto LABEL_61;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      id v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    int v43 = PBUnknownFieldAdd();
    char v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v43)
    {
      int v50 = 0;
      unsigned int v51 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v53 & 1 | (v8 != 0))) {
      goto LABEL_62;
    }
  }
  if (!v34) {
    goto LABEL_56;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_82;
    }
    v8 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
    goto LABEL_60;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_82;
  }
  id v39 = objc_alloc_init(GEORPPlaceRequestResponse);
  if (GEORPPlaceRequestResponseReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v39;

    --v8;
LABEL_60:
    char v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_61;
  }
LABEL_81:

LABEL_82:
  int v50 = 0;
  char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_63:
  unsigned int v51 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
  if ((v52 & 1) == 0) {
    goto LABEL_65;
  }
LABEL_64:
  *(unsigned char *)(a1 + v51[785]) |= 1u;
LABEL_65:
  if (v55 || (v50 & 1) == 0)
  {
    *(unsigned char *)(a1 + v51[785]) |= 2u;
    *(unsigned char *)(a1 + v51[785]) |= 4u;
    goto LABEL_75;
  }
  if (v19)
  {
    while (1)
    {
      int v47 = *v19++;
      int v46 = v47;
      if (v47 == 1) {
        break;
      }
      if (v46 == 2)
      {
        char v45 = 4;
LABEL_71:
        *(unsigned char *)(a1 + v51[785]) |= v45;
      }
      else if (!v46)
      {
        goto LABEL_75;
      }
    }
    char v45 = 2;
    goto LABEL_71;
  }
LABEL_75:
  if (v50) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v55)
  {
    unint64_t v48 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1894125B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189412B00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPSearchFeedbackContextCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  return [*(id *)(a1 + 32) readAll:1];
}

uint64_t _GEORPSearchFeedbackContextIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 52);
  if ((v2 & 0xA) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if (GEORPPlaceRequestResponseIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 52);
  }
  if ((v2 & 2) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 24);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEORPSuggestionListIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_19;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_19:

  return v3;
}

os_unfair_lock_s *GEORPSearchFeedbackContextIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPSearchFeedbackContextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189413244(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPSearchFeedbackCorrectionsReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189413D00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPSearchFeedbackCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPSearchFeedbackCorrectionsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189413D64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189414288(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPSourceInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v51 = v15 | v8;
        if ((v16 | v9)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        BOOL v54 = v16;
        char v52 = v16 | v15 | v8;
        char v53 = (v17 == 0) | v16;
        char v18 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_59;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_59:
      int v50 = 1;
      goto LABEL_60;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v54;
    if ((v53 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (!v32) {
        goto LABEL_51;
      }
      if ((*(unsigned char *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_78;
        }
        char v44 = *(unsigned char *)(a1 + 52) << 6;
        goto LABEL_57;
      }
      uint64_t v37 = PBReaderReadString();
      uint64_t v38 = 24;
      goto LABEL_44;
    }
    if (v51 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_51:
      char v43 = PBReaderSkipValueWithTag();
      unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
      if ((v43 & 1) == 0)
      {
        int v50 = 0;
        goto LABEL_60;
      }
      goto LABEL_58;
    }
    if (!*(void *)(a1 + 16))
    {
      id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      id v41 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v40;
    }
    int v42 = PBUnknownFieldAdd();
    unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
    if (!v42)
    {
      int v50 = 0;
      goto LABEL_61;
    }
LABEL_58:
    if (!(v52 & 1 | (v10 != 0))) {
      goto LABEL_59;
    }
  }
  if (!v32) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) == 0)
  {
    uint64_t v37 = PBReaderReadString();
    uint64_t v38 = 32;
LABEL_44:
    id v39 = *(void **)(a1 + v38);
    *(void *)(a1 + v38) = v37;

    unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v44 = 32 * *(unsigned char *)(a1 + 52);
LABEL_57:
    v10 += v44 >> 7;
    unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_58;
  }
LABEL_78:
  int v50 = 0;
  unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_60:
  if ((v51 & 1) == 0) {
    goto LABEL_62;
  }
LABEL_61:
  *(unsigned char *)(a1 + 52) |= 1u;
LABEL_62:
  if (v54 || (v50 & 1) == 0)
  {
    *(unsigned char *)(a1 + 52) |= 2u;
    *(unsigned char *)(a1 + 52) |= 4u;
    goto LABEL_72;
  }
  if (v17)
  {
    while (1)
    {
      int v47 = *v17++;
      int v46 = v47;
      if (v47 == 1) {
        break;
      }
      if (v46 == 2)
      {
        char v45 = 4;
LABEL_68:
        *(unsigned char *)(a1 + 52) |= v45;
      }
      else if (!v46)
      {
        goto LABEL_72;
      }
    }
    char v45 = 2;
    goto LABEL_68;
  }
LABEL_72:
  if (v50) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v54)
  {
    unint64_t v48 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1894148D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189414EB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPSourceInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPSourceInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPSourceInfoReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPSourceInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPSourceInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189415044(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPSourceInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPSourceInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1894150A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189415250(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPSourceInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189415504(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189415758(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPStreetFeedbackReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189415CFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPStreetFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPStreetFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189415D60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189416084(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189416234(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894163A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189416514(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189416680(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189416E10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTdmFraudNotificationParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPTdmFraudNotificationParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPTdmFraudNotificationParametersReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPTdmFraudNotificationParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPTdmFraudNotificationParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189416FA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTdmFraudNotificationParametersReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPTdmFraudNotificationParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189417004(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18941720C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTdmFraudNotificationParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(unsigned char *)(a1 + 76) & 0x7E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_189417568(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894178A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189417B14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189417CCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189417E38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189417FA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894180D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189418244(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189418564(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTdmFraudRequestInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPTdmFraudRequestInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPTdmFraudRequestInfoReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPTdmFraudRequestInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPTdmFraudRequestInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 56) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_18941870C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTdmFraudRequestInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPTdmFraudRequestInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189418770(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTdmUserMapsStatusIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_189418C28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189418F50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894192F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894195E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTdmInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFBFFFDFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v68 = v15 | v8;
        char v69 = v16 | v15 | v8;
        if ((v16 | v9)) {
          unsigned int v17 = 0;
        }
        else {
          unsigned int v17 = a3;
        }
        char v70 = (v17 == 0) | v16;
        BOOL v71 = v16;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_89;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_89:
      int v66 = 1;
      goto LABEL_90;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v71;
    if ((v70 & 1) == 0)
    {
      BOOL v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 64) & 8) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 24;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_106;
        }
        char v61 = 16 * *(unsigned char *)(a1 + 64);
        goto LABEL_86;
      case 2:
        if ((v9 & 1) == 0) {
          goto LABEL_71;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (2)
        {
          uint64_t v45 = *v18;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v20) + v46);
            *(void *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v28 = v43++ >= 9;
              if (v28)
              {
                uint64_t v44 = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v44 = 0;
        }
LABEL_76:
        BOOL v59 = v44 != 0;
        uint64_t v60 = 60;
        goto LABEL_81;
      case 3:
        if (!v32 || (*(unsigned char *)(a1 + 64) & 0x10) != 0) {
          goto LABEL_71;
        }
        char v49 = PBReaderReadData();
        if (v49) {
          -[GEORPTdmInfo _addNoFlagsBaaCertificates:](a1, v49);
        }

        goto LABEL_87;
      case 4:
        if (!v32) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 64) & 0x20) == 0)
        {
          uint64_t v37 = PBReaderReadData();
          uint64_t v38 = 40;
LABEL_62:
          int v50 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          --v10;
LABEL_87:
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_88:
          if (!(v69 & 1 | (v10 != 0))) {
            goto LABEL_89;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v61 = 4 * *(unsigned char *)(a1 + 64);
LABEL_86:
          v10 += v61 >> 7;
          goto LABEL_87;
        }
LABEL_106:
        int v66 = 0;
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_90:
        unint64_t v67 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
        if (v68) {
LABEL_91:
        }
          *(unsigned char *)(a1 + v67[827]) |= 4u;
        if (v71 || (v66 & 1) == 0)
        {
          *(unsigned char *)(a1 + v67[827]) |= 8u;
          *(unsigned char *)(a1 + v67[827]) |= 0x10u;
          *(unsigned char *)(a1 + v67[827]) |= 0x20u;
        }
        else if (v17)
        {
          while (1)
          {
            int v63 = *v17++;
            char v62 = 8;
            switch(v63)
            {
              case 0:
                goto LABEL_100;
              case 1:
                goto LABEL_98;
              case 3:
                char v62 = 16;
                goto LABEL_98;
              case 4:
                char v62 = 32;
LABEL_98:
                *(unsigned char *)(a1 + v67[827]) |= v62;
                break;
              default:
                continue;
            }
          }
        }
LABEL_100:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v71)
        {
          uint64_t v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 5:
        if ((v9 & 1) == 0) {
          goto LABEL_71;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v53 = 0;
        *(unsigned char *)(a1 + 64) |= 2u;
        while (2)
        {
          uint64_t v54 = *v18;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v20) + v55);
            *(void *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              BOOL v28 = v52++ >= 9;
              if (v28)
              {
                uint64_t v53 = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v53 = 0;
        }
LABEL_80:
        BOOL v59 = v53 != 0;
        uint64_t v60 = 61;
LABEL_81:
        *(unsigned char *)(a1 + v60) = v59;
        goto LABEL_88;
      default:
        if ((v68 & 1) == 0 || (*(unsigned char *)(a1 + 64) & 4) != 0)
        {
LABEL_71:
          char v58 = PBReaderSkipValueWithTag();
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v58 & 1) == 0)
          {
            int v66 = 0;
            goto LABEL_90;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v40 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v39;
          }
          int v41 = PBUnknownFieldAdd();
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v41)
          {
            int v66 = 0;
            unint64_t v67 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
            goto LABEL_91;
          }
        }
        goto LABEL_88;
    }
  }
}

void sub_189419EEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18941A230(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18941A5AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTdmInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPTdmInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPTdmInfoReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPTdmInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPTdmInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18941A73C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTdmInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPTdmInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18941A7A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18941AA48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTdmInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 64) & 0x78) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_18941AFF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTdmUserMapsStatusReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPTdmUserMapsStatusReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18941B808(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18941BF10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTileFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v6 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v15 = v11 != 0;
        char v16 = v15 & ~(_BYTE)v10 | v8;
        unsigned __int8 v17 = v15 | v10;
        char v61 = v16;
        char v62 = v17 | v16;
        if ((v17 | v6)) {
          uint64_t v18 = 0;
        }
        else {
          uint64_t v18 = a3;
        }
        uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        char v63 = (v18 == 0) | v17;
        BOOL v64 = v17;
        char v21 = (int *)MEMORY[0x1E4F940B8];
        unsigned int v22 = (int *)MEMORY[0x1E4F940E0];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v8;
LABEL_8:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_10:
        ++v7;
        uint64_t v8 = v12;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v22) || *(unsigned char *)(v3 + *v20)) {
      goto LABEL_79;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v19;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v22)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v21) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_79:
      int v59 = 1;
      goto LABEL_80;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v64;
    if ((v63 & 1) == 0)
    {
      int v35 = v18;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if ((v6 & 1) == 0) {
        goto LABEL_66;
      }
      char v41 = 0;
      unsigned int v42 = 0;
      uint64_t v43 = 0;
      *(unsigned char *)(a1 + 56) |= 1u;
      while (1)
      {
        uint64_t v44 = *v19;
        uint64_t v45 = *(void *)(v3 + v44);
        unint64_t v46 = v45 + 1;
        if (v45 == -1 || v46 > *(void *)(v3 + *v22)) {
          break;
        }
        char v47 = *(unsigned char *)(*(void *)(v3 + *v21) + v45);
        *(void *)(v3 + v44) = v46;
        v43 |= (unint64_t)(v47 & 0x7F) << v41;
        if ((v47 & 0x80) == 0) {
          goto LABEL_69;
        }
        v41 += 7;
        BOOL v30 = v42++ >= 9;
        if (v30)
        {
          LODWORD(v43) = 0;
          goto LABEL_71;
        }
      }
      *(unsigned char *)(v3 + *v20) = 1;
LABEL_69:
      if (*(unsigned char *)(v3 + *v20)) {
        LODWORD(v43) = 0;
      }
LABEL_71:
      *(_DWORD *)(a1 + 52) = v43;
      goto LABEL_78;
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_66;
      }
      if ((*(unsigned char *)(a1 + 56) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_99;
        }
        id v39 = objc_alloc_init(GEORPCorrectedLabel);
        if (!GEORPCorrectedLabelReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1)) {
          goto LABEL_98;
        }
        PBReaderRecallMark();
        uint64_t v40 = 32;
LABEL_59:
        char v48 = *(void **)(a1 + v40);
        *(void *)(a1 + v40) = v39;

        --v7;
LABEL_77:
        unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v22 = (int *)MEMORY[0x1E4F940E0];
        goto LABEL_78;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_99;
      }
      char v53 = 16 * *(unsigned char *)(a1 + 56);
LABEL_76:
      v7 += v53 >> 7;
      goto LABEL_77;
    }
    if ((v61 & 1) == 0 || (*(unsigned char *)(a1 + 56) & 2) != 0)
    {
LABEL_66:
      char v52 = PBReaderSkipValueWithTag();
      unsigned int v22 = (int *)MEMORY[0x1E4F940E0];
      unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
      if ((v52 & 1) == 0)
      {
        int v59 = 0;
        goto LABEL_80;
      }
      goto LABEL_78;
    }
    if (!*(void *)(a1 + 16))
    {
      id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      int v50 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v49;
    }
    int v51 = PBUnknownFieldAdd();
    unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v22 = (int *)MEMORY[0x1E4F940E0];
    if (!v51)
    {
      int v59 = 0;
      uint64_t v60 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
      goto LABEL_81;
    }
LABEL_78:
    if (!(v62 & 1 | (v7 != 0))) {
      goto LABEL_79;
    }
  }
  if (!v34) {
    goto LABEL_66;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_99;
    }
    char v53 = 32 * *(unsigned char *)(a1 + 56);
    goto LABEL_76;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_99;
  }
  id v39 = objc_alloc_init(GEORPCorrectedCoordinate);
  if (GEORPCorrectedCoordinateReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = 24;
    goto LABEL_59;
  }
LABEL_98:

LABEL_99:
  int v59 = 0;
  unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_80:
  uint64_t v60 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
  if ((v61 & 1) == 0) {
    goto LABEL_82;
  }
LABEL_81:
  *(unsigned char *)(a1 + v60[843]) |= 2u;
LABEL_82:
  if (v64 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[843]) |= 8u;
    *(unsigned char *)(a1 + v60[843]) |= 4u;
    goto LABEL_92;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v18++;
        int v54 = v55;
        if (v55 == 1) {
          break;
        }
        if (v54 == 2)
        {
          char v56 = 4;
          goto LABEL_91;
        }
        if (!v54) {
          goto LABEL_92;
        }
      }
      char v56 = 8;
LABEL_91:
      *(unsigned char *)(a1 + v60[843]) |= v56;
      continue;
    }
  }
LABEL_92:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v64)
  {
    char v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18941C6CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18941CFF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTileFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPTileFeedbackReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPTileFeedbackReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPTileFeedbackReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPTileFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18941D1AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTileFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPTileFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18941D210(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPTileFeedbackIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 56);
  if ((v2 & 0x10) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 56) & 8) != 0)
  {
    if (GEORPCorrectedLabelIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 56);
  }
  if ((v2 & 4) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 24);

  return GEORPCorrectedCoordinateIsDirty(v4);
}

os_unfair_lock_s *GEORPTileFeedbackIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEORPTileFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18941D644(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18941D958(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18941DBF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTransitPoiCorrectionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 92);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 88)];
  uint64_t v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = *(unsigned __int16 *)(a1 + 104);
  unsigned int v14 = ((v13 >> 2) & 1)
      + ((v13 >> 6) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v13), (uint16x4_t)0xFFF9FFFBFFF7FFFCLL), (int8x8_t)0x1000100010001))+ ((v13 >> 8) & 1)+ ((v13 >> 3) & 1)+ ((v13 >> 10) & 1));
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v16 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v18 = v14 > 5;
        char v19 = v18 & ~(_BYTE)v12 | v10;
        unsigned __int8 v20 = v18 | v12;
        char v72 = v19;
        char v73 = v20 | v19;
        if ((v20 | v9)) {
          char v21 = 0;
        }
        else {
          char v21 = a3;
        }
        unsigned int v22 = (int *)MEMORY[0x1E4F940E8];
        char v74 = (v21 == 0) | v20;
        BOOL v75 = v20;
        char v23 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v24 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v14;
LABEL_7:
        uint64_t v15 = v10;
LABEL_8:
        uint64_t v16 = v11;
        uint64_t v17 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        uint64_t v12 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v23)) {
      goto LABEL_128;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v22;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v7)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v32 = v26++ >= 9;
      if (v32)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_128:
      int v71 = 1;
      goto LABEL_129;
    }
    unint64_t v35 = v27 >> 3;
    BOOL v36 = v75;
    if ((v74 & 1) == 0)
    {
      int v37 = v21;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36) {
          goto LABEL_100;
        }
        if ((*(_WORD *)(a1 + 104) & 0x200) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 72;
          goto LABEL_92;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_151;
        }
        __int16 v66 = *(_WORD *)(a1 + 104) << 6;
        goto LABEL_125;
      case 2:
        if (!v36) {
          goto LABEL_100;
        }
        if ((*(_WORD *)(a1 + 104) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_151;
          }
          __int16 v66 = *(_WORD *)(a1 + 104) << 11;
          goto LABEL_125;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_151;
        }
        unint64_t v46 = objc_alloc_init(GEORPAmenityCorrections);
        if (!GEORPAmenityCorrectionsReadAllFrom((uint64_t)v46, (void *)v3, v11 & 1)) {
          goto LABEL_150;
        }
        PBReaderRecallMark();
        uint64_t v47 = 32;
        goto LABEL_98;
      case 3:
        if (!v36 || (*(_WORD *)(a1 + 104) & 0x20) != 0) {
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_151;
        }
        unint64_t v46 = objc_alloc_init(GEORPFeedbackBusinessHours);
        if (!GEORPFeedbackBusinessHoursReadAllFrom((uint64_t)v46, (void *)v3, v11 & 1)) {
          goto LABEL_150;
        }
        PBReaderRecallMark();
        -[GEORPTransitPoiCorrections _addNoFlagsBusinessHours:](a1, v46);

        goto LABEL_126;
      case 4:
        if (!v36) {
          goto LABEL_100;
        }
        if ((*(_WORD *)(a1 + 104) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_151;
          }
          __int16 v66 = *(_WORD *)(a1 + 104) << 8;
          goto LABEL_125;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_151;
        }
        unint64_t v46 = objc_alloc_init(GEORPCorrectedCoordinate);
        if (!GEORPCorrectedCoordinateReadAllFrom((uint64_t)v46, (void *)v3, v11 & 1)) {
          goto LABEL_150;
        }
        PBReaderRecallMark();
        uint64_t v47 = 56;
        goto LABEL_98;
      case 5:
        if (!v36) {
          goto LABEL_100;
        }
        if ((*(_WORD *)(a1 + 104) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_151;
          }
          __int16 v66 = *(_WORD *)(a1 + 104) << 7;
          goto LABEL_125;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_151;
        }
        unint64_t v46 = objc_alloc_init(GEORPMapLocation);
        if (!GEORPMapLocationReadAllFrom((uint64_t)v46, (void *)v3, v11 & 1)) {
          goto LABEL_150;
        }
        PBReaderRecallMark();
        uint64_t v47 = 64;
        goto LABEL_98;
      case 6:
        if ((v9 & 1) == 0) {
          goto LABEL_100;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        *(_WORD *)(a1 + 104) |= 2u;
        while (2)
        {
          uint64_t v51 = *v22;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v24) + v52);
            *(void *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              BOOL v32 = v49++ >= 9;
              if (v32)
              {
                uint64_t v50 = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v50 = 0;
        }
LABEL_105:
        BOOL v64 = v50 != 0;
        uint64_t v65 = 101;
        goto LABEL_110;
      case 7:
        if ((v9 & 1) == 0) {
          goto LABEL_100;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v57 = 0;
        *(_WORD *)(a1 + 104) |= 1u;
        while (2)
        {
          uint64_t v58 = *v22;
          uint64_t v59 = *(void *)(v3 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(v3 + *v24) + v59);
            *(void *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              BOOL v32 = v56++ >= 9;
              if (v32)
              {
                uint64_t v57 = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v57 = 0;
        }
LABEL_109:
        BOOL v64 = v57 != 0;
        uint64_t v65 = 100;
LABEL_110:
        *(unsigned char *)(a1 + v65) = v64;
        goto LABEL_127;
      case 8:
        if (!v36) {
          goto LABEL_100;
        }
        if ((*(_WORD *)(a1 + 104) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_151;
          }
          __int16 v66 = *(_WORD *)(a1 + 104) << 12;
          goto LABEL_125;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_151;
        }
        unint64_t v46 = objc_alloc_init(GEORPAccessPointCorrections);
        if (!GEORPAccessPointCorrectionsReadAllFrom((uint64_t)v46, (void *)v3, v11 & 1)) {
          goto LABEL_150;
        }
        PBReaderRecallMark();
        uint64_t v47 = 24;
        goto LABEL_98;
      case 9:
        if (!v36) {
          goto LABEL_100;
        }
        if ((*(_WORD *)(a1 + 104) & 0x400) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 80;
LABEL_92:
          char v62 = *(void **)(a1 + v42);
          *(void *)(a1 + v42) = v41;
          goto LABEL_99;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_151;
        }
        __int16 v66 = 32 * *(_WORD *)(a1 + 104);
        goto LABEL_125;
      case 10:
        if (!v36) {
          goto LABEL_100;
        }
        if ((*(_WORD *)(a1 + 104) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_151;
          }
          __int16 v66 = *(_WORD *)(a1 + 104) << 9;
LABEL_125:
          v8 += v66 >> 15;
LABEL_126:
          char v23 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          unsigned int v24 = (int *)MEMORY[0x1E4F940B8];
LABEL_127:
          if (!(v73 & 1 | (v8 != 0))) {
            goto LABEL_128;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_151;
        }
        unint64_t v46 = objc_alloc_init(GEORPPlaceContainmentCorrections);
        if (GEORPPlaceContainmentCorrectionsReadAllFrom((uint64_t)v46, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v47 = 48;
LABEL_98:
          char v62 = *(void **)(a1 + v47);
          *(void *)(a1 + v47) = v46;
LABEL_99:

          --v8;
          goto LABEL_126;
        }
LABEL_150:

LABEL_151:
        int v71 = 0;
        char v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_129:
        if (v72) {
LABEL_130:
        }
          *(_WORD *)(a1 + 104) |= 4u;
        if (v75 || (v71 & 1) == 0)
        {
          *(_WORD *)(a1 + 104) |= 0x200u;
          *(_WORD *)(a1 + 104) |= 0x10u;
          *(_WORD *)(a1 + 104) |= 0x20u;
          *(_WORD *)(a1 + 104) |= 0x80u;
          *(_WORD *)(a1 + 104) |= 0x100u;
          *(_WORD *)(a1 + 104) |= 8u;
          *(_WORD *)(a1 + 104) |= 0x400u;
          *(_WORD *)(a1 + 104) |= 0x40u;
        }
        else if (v21)
        {
          while (1)
          {
            int v68 = *v21++;
            __int16 v67 = 512;
            switch(v68)
            {
              case 0:
                goto LABEL_144;
              case 1:
                goto LABEL_142;
              case 2:
                __int16 v67 = 16;
                goto LABEL_142;
              case 3:
                __int16 v67 = 32;
                goto LABEL_142;
              case 4:
                __int16 v67 = 128;
                goto LABEL_142;
              case 5:
                __int16 v67 = 256;
                goto LABEL_142;
              case 8:
                __int16 v67 = 8;
                goto LABEL_142;
              case 9:
                __int16 v67 = 1024;
                goto LABEL_142;
              case 10:
                __int16 v67 = 64;
LABEL_142:
                *(_WORD *)(a1 + 104) |= v67;
                break;
              default:
                continue;
            }
          }
        }
LABEL_144:
        if (v71) {
          unint64_t v3 = *(unsigned char *)(v3 + *v23) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v75)
        {
          char v69 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v72 & 1) == 0 || (*(_WORD *)(a1 + 104) & 4) != 0)
        {
LABEL_100:
          char v63 = PBReaderSkipValueWithTag();
          unsigned int v24 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          char v23 = (int *)MEMORY[0x1E4F940C8];
          if ((v63 & 1) == 0)
          {
            int v71 = 0;
            goto LABEL_129;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v44 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v43;
          }
          int v45 = PBUnknownFieldAdd();
          char v23 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          unsigned int v24 = (int *)MEMORY[0x1E4F940B8];
          if (!v45)
          {
            int v71 = 0;
            goto LABEL_130;
          }
        }
        goto LABEL_127;
    }
  }
}

void sub_18941E874(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18941E9E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18941ED3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18941EF90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18941F0FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18941F268(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18941F57C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPTransitPoiCorrectionsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  [a1[4] readAll:1];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v2 = a1[5];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  [a1[7] readAll:1];
  [a1[8] readAll:1];
  [a1[3] readAll:1];
  return [a1[6] readAll:1];
}

unint64_t GEORPTransitPoiCorrectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 92))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPTransitPoiCorrectionsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = [v8 position];
  *(_DWORD *)(a1 + 92) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORPTransitPoiCorrectionsReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORPTransitPoiCorrectionsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPTransitPoiCorrectionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPTransitPoiCorrectionsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_18941F870(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTransitPoiCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPTransitPoiCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18941F8D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTransitPoiCorrectionsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_67;
          }
          goto LABEL_59;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPAmenityCorrectionsIsValid(a1)) {
            goto LABEL_67;
          }
          goto LABEL_64;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackBusinessHoursIsValid(a1)) {
            goto LABEL_67;
          }
          goto LABEL_64;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPCorrectedCoordinateIsValid(a1)) {
            goto LABEL_67;
          }
          goto LABEL_64;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPMapLocationIsValid(a1)) {
            goto LABEL_67;
          }
          goto LABEL_64;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_67;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_65;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_67;
          }
          unsigned int v23 = 0;
          break;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPAccessPointCorrectionsIsValid(a1)) {
            goto LABEL_67;
          }
          goto LABEL_64;
        case 9u:
          if (v15 == 2) {
            goto LABEL_59;
          }
          goto LABEL_67;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORPPlaceContainmentCorrectionsIsValid(a1)) {
            goto LABEL_67;
          }
LABEL_64:
          PBReaderRecallMark();
          continue;
        default:
LABEL_59:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_67:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_65;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_65:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_18941FFC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPTransitPoiCorrectionsIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  __int16 v2 = *(_WORD *)(a1 + 104);
  if ((v2 & 0xA00) != 0) {
    return 1;
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEORPAmenityCorrectionsIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEORPCorrectedCoordinateIsDirty(*(void *)(a1 + 56))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEORPMapLocationIsDirty(*(void *)(a1 + 64))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 8) != 0)
  {
    if (GEORPAccessPointCorrectionsIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x400) != 0) {
    return 1;
  }
  if ((v2 & 0x40) == 0) {
    goto LABEL_21;
  }
  if (GEORPPlaceContainmentCorrectionsIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
    return 1;
  }
  __int16 v2 = *(_WORD *)(a1 + 104);
LABEL_21:
  if ((v2 & 0x20) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 40);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEORPFeedbackBusinessHoursIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_33;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_33:

  return v3;
}

os_unfair_lock_s *GEORPTransitPoiCorrectionsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPTransitPoiCorrectionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 24);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189420824(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189420E78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189421364(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTransitPoiFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFFBFFF9FFFEFFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 3) & 1)+ ((*(_WORD *)(a1 + 88) >> 4) & 1)+ ((*(_WORD *)(a1 + 88) >> 1) & 1));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 3;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v61 = v18;
        char v62 = v19 | v18;
        if ((v19 | v9)) {
          unint64_t v20 = 0;
        }
        else {
          unint64_t v20 = a3;
        }
        int v21 = (int *)MEMORY[0x1E4F940E8];
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        char v63 = (v20 == 0) | v19;
        BOOL v64 = v19;
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_102;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_102:
      int v59 = 1;
      goto LABEL_103;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v64;
    if ((v63 & 1) == 0)
    {
      BOOL v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v9 & 1) == 0) {
          goto LABEL_85;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (1)
        {
          uint64_t v43 = *v21;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v7)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v23) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_88;
          }
          v40 += 7;
          BOOL v31 = v41++ >= 9;
          if (v31)
          {
            LODWORD(v42) = 0;
            goto LABEL_90;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_88:
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v42) = 0;
        }
LABEL_90:
        *(_DWORD *)(a1 + 84) = v42;
        goto LABEL_101;
      case 2:
        if (!v35) {
          goto LABEL_85;
        }
        if ((*(_WORD *)(a1 + 88) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_123;
          }
          __int16 v54 = *(_WORD *)(a1 + 88) << 13;
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_123;
        }
        uint64_t v50 = objc_alloc_init(GEORPTransitPoiCorrections);
        if (!GEORPTransitPoiCorrectionsReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_122;
        }
        PBReaderRecallMark();
        uint64_t v51 = 24;
        goto LABEL_73;
      case 3:
        if (!v35) {
          goto LABEL_85;
        }
        if ((*(_WORD *)(a1 + 88) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_123;
          }
          __int16 v54 = *(_WORD *)(a1 + 88) << 9;
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_123;
        }
        uint64_t v50 = objc_alloc_init(GEOPDPlace);
        if (!GEOPDPlaceReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_122;
        }
        PBReaderRecallMark();
        uint64_t v51 = 56;
        goto LABEL_73;
      case 4:
        if (!v35) {
          goto LABEL_85;
        }
        if ((*(_WORD *)(a1 + 88) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_123;
          }
          __int16 v54 = *(_WORD *)(a1 + 88) << 8;
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_123;
        }
        uint64_t v50 = objc_alloc_init(GEORPTransitLineTileInfo);
        if (!GEORPTransitLineTileInfoReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_122;
        }
        PBReaderRecallMark();
        uint64_t v51 = 64;
        goto LABEL_73;
      case 5:
        if (!v35) {
          goto LABEL_85;
        }
        if ((*(_WORD *)(a1 + 88) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_123;
          }
          __int16 v54 = *(_WORD *)(a1 + 88) << 10;
LABEL_99:
          v8 += v54 >> 15;
LABEL_100:
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_101:
          if (!(v62 & 1 | (v8 != 0))) {
            goto LABEL_102;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_123;
        }
        uint64_t v50 = objc_alloc_init(GEOPDPlaceRequest);
        if (GEOPDPlaceRequestReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v51 = 48;
LABEL_73:
          uint64_t v52 = *(void **)(a1 + v51);
          *(void *)(a1 + v51) = v50;

          --v8;
          goto LABEL_100;
        }
LABEL_122:

LABEL_123:
        int v59 = 0;
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_103:
        unint64_t v60 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
        if (v61) {
LABEL_104:
        }
          *(_WORD *)(a1 + v60[868]) |= 2u;
        if (v64 || (v59 & 1) == 0)
        {
          *(_WORD *)(a1 + v60[868]) |= 4u;
          *(_WORD *)(a1 + v60[868]) |= 0x40u;
          *(_WORD *)(a1 + v60[868]) |= 0x80u;
          *(_WORD *)(a1 + v60[868]) |= 0x20u;
          *(_WORD *)(a1 + v60[868]) |= 8u;
          *(_WORD *)(a1 + v60[868]) |= 0x10u;
        }
        else if (v20)
        {
          while (1)
          {
            int v56 = *v20++;
            __int16 v55 = 4;
            switch(v56)
            {
              case 0:
                goto LABEL_116;
              case 2:
                goto LABEL_114;
              case 3:
                __int16 v55 = 64;
                goto LABEL_114;
              case 4:
                __int16 v55 = 128;
                goto LABEL_114;
              case 5:
                __int16 v55 = 32;
                goto LABEL_114;
              case 6:
                __int16 v55 = 8;
                goto LABEL_114;
              case 7:
                __int16 v55 = 16;
LABEL_114:
                *(_WORD *)(a1 + v60[868]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_116:
        if (v59) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v64)
        {
          uint64_t v57 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 6:
        if (!v35 || (*(_WORD *)(a1 + 88) & 8) != 0) {
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_123;
        }
        uint64_t v50 = objc_alloc_init(GEODirectionsRequest);
        if (!GEODirectionsRequestReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_122;
        }
        PBReaderRecallMark();
        -[GEORPTransitPoiFeedback _addNoFlagsDirectionsRequest:](a1, v50);
        goto LABEL_84;
      case 7:
        if (!v35 || (*(_WORD *)(a1 + 88) & 0x10) != 0) {
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_123;
        }
        uint64_t v50 = objc_alloc_init(GEODirectionsResponse);
        if (!GEODirectionsResponseReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_122;
        }
        PBReaderRecallMark();
        -[GEORPTransitPoiFeedback _addNoFlagsDirectionsResponse:](a1, v50);
LABEL_84:

        goto LABEL_100;
      default:
        if ((v61 & 1) == 0 || (*(_WORD *)(a1 + 88) & 2) != 0)
        {
LABEL_85:
          char v53 = PBReaderSkipValueWithTag();
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v59 = 0;
            goto LABEL_103;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v48 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v47;
          }
          int v49 = PBUnknownFieldAdd();
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v49)
          {
            int v59 = 0;
            unint64_t v60 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
            goto LABEL_104;
          }
        }
        goto LABEL_101;
    }
  }
}

void sub_189421E10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189421F80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894220EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18942225C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189422620(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894236B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPTransitPoiFeedbackCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  [a1[3] readAll:1];
  [a1[7] readAll:1];
  [a1[8] readAll:1];
  [a1[6] readAll:1];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = a1[4];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = a1[5];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEORPTransitPoiFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPTransitPoiFeedbackReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPTransitPoiFeedbackReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPTransitPoiFeedbackReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPTransitPoiFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPTransitPoiFeedbackCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189423A28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPTransitPoiFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPTransitPoiFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189423A8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189423DDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPTransitPoiFeedbackIsDirty(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  __int16 v2 = *(_WORD *)(a1 + 88);
  if ((v2 & 0x100) != 0) {
    return 1;
  }
  if ((v2 & 4) != 0)
  {
    if (GEORPTransitPoiCorrectionsIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEORPTransitLineTileInfoIsDirty(*(void *)(a1 + 64))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 0x20) == 0) {
    goto LABEL_14;
  }
  if ((GEOPDPlaceRequestIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) == 0)
  {
    __int16 v2 = *(_WORD *)(a1 + 88);
LABEL_14:
    if ((v2 & 0x18) != 0) {
      return 1;
    }
    if ((v2 & 8) != 0)
    {
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      id v5 = *(id *)(a1 + 32);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v17;
LABEL_20:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v17 != v8) {
            objc_enumerationMutation(v5);
          }
          if (GEODirectionsRequestIsDirty(*(os_unfair_lock_s **)(*((void *)&v16 + 1) + 8 * v9))) {
            goto LABEL_38;
          }
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
            if (v7) {
              goto LABEL_20;
            }
            break;
          }
        }
      }

      __int16 v2 = *(_WORD *)(a1 + 88);
    }
    if ((v2 & 0x10) == 0) {
      return 0;
    }
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v5 = *(id *)(a1 + 40);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
    if (!v3)
    {
LABEL_39:

      return v3;
    }
    uint64_t v10 = *(void *)v13;
LABEL_31:
    uint64_t v11 = 0;
    while (1)
    {
      if (*(void *)v13 != v10) {
        objc_enumerationMutation(v5);
      }
      if (GEODirectionsResponseIsDirty(*(os_unfair_lock_s **)(*((void *)&v12 + 1) + 8 * v11))) {
        break;
      }
      if (v3 == ++v11)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
        if (v3) {
          goto LABEL_31;
        }
        goto LABEL_39;
      }
    }
LABEL_38:
    uint64_t v3 = 1;
    goto LABEL_39;
  }
  return 1;
}

os_unfair_lock_s *GEORPTransitPoiFeedbackIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPTransitPoiFeedbackIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18942484C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189424DE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189425298(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18942682C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189427CFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPUserPathReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPUserPathReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPUserPathReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPUserPathReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPUserPathReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189427E8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPUserPathReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPUserPathReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189427EF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189428158(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPUserPathIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189428560(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189428880(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189428B40(_Unwind_Exception *exception_object)
{
}

void sub_189428E48(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_189429004(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_18942975C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18942A7E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
}

void sub_18942AA60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18942AC60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18942C0B8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_18942C668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose((const void *)(v29 - 144), 8);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_18942CAFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
}

void sub_18942D348(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_18942D8C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose(&a43, 8);
  _Block_object_dispose(&a47, 8);
  _Block_object_dispose(&a51, 8);
  _Block_object_dispose((const void *)(v51 - 232), 8);
  _Block_object_dispose((const void *)(v51 - 200), 8);
  _Block_object_dispose((const void *)(v51 - 168), 8);
  _Block_object_dispose((const void *)(v51 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_18942E4B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_18942E8F0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_18942EFB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
}

void sub_18942F8B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

GEOPBOfflineTileMetadata *_getOfflineTileMetadata(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = [a2 objectForKeyedSubscript:&unk_1ED73D870];
  id v5 = v4;
  if (v4)
  {
    uint64_t v6 = [v4 unsignedLongLongValue];
    int v16 = -1;
    uint64_t v7 = [GEOOfflineDataKey alloc];
    id v8 = [MEMORY[0x1E4F1C9B8] dataWithBytes:&v16 length:4];
    uint64_t v9 = [(GEOOfflineDataKey *)v7 initWithLayer:9 serviceKey:v8];

    uint64_t v10 = [v3 dataForOfflineKey:v9 version:v6 associatedWithFullyLoadedSubscription:0 error:0];
    uint64_t v11 = v10;
    if (v10)
    {
      uint64_t v12 = [v10 readDataWithError:0];
      if (v12)
      {
        long long v13 = [[GEOPBOfflineTileMetadata alloc] initWithData:v12];
      }
      else
      {
        if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)uint64_t v15 = 0;
          _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Assertion failed: serializedConfig != ((void *)0)", v15, 2u);
        }
        long long v13 = 0;
      }
    }
    else
    {
      long long v13 = 0;
    }
  }
  else
  {
    long long v13 = 0;
  }

  return v13;
}

void sub_189430A60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
}

void sub_189431074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
}

void sub_1894318B4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_189432788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
}

void sub_189432C6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1894331F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
}

void sub_189433768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
}

void __GEOGetSubscriptionsDownloadManagerLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "SubscriptionsDownloadManager");
  uint64_t v1 = (void *)_MergedGlobals_200;
  _MergedGlobals_200 = (uint64_t)v0;
}

void _configureBackgroundTaskDisallowingCellular(void *a1)
{
  id v4 = a1;
  if (GEOConfigGetBOOL(GeoOfflineConfig_ResumeOnNonCellRequireInexpensiveNetwork, (uint64_t)off_1E91159E8))
  {
    [v4 setRequiresInexpensiveNetworkConnectivity:1];
  }
  else
  {
    uint64_t v1 = nw_parameters_create();
    nw_parameters_prohibit_interface_type(v1, nw_interface_type_cellular);
    [v4 setNetworkParametersPrimitive:v1];
    _GEOGetURLWithSource(64, 0, 1, 0);
    id v2 = objc_claimAutoreleasedReturnValue();
    nw_endpoint_t url = nw_endpoint_create_url((const char *)[v2 UTF8String]);
    if (url) {
      [v4 setNetworkEndpointPrimitive:url];
    }
  }
}

void sub_1894344C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189434AC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAddressObjectGeocodingParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189434E1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOPDAddressRecommendationParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 52) & 0xC) != 0) {
    return (os_unfair_lock_s *)1;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
    return 0;
  }
  id v3 = *(os_unfair_lock_s **)(a1 + 24);

  return GEOPDAddressWithComponentsIsDirty(v3);
}

os_unfair_lock_s *GEOPDAddressRecommendationParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL v2 = _GEOPDAddressRecommendationParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return v2;
  }
  return result;
}

void sub_189435568(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAddressRecommendationResultReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189435B60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAirportEntityPlaceLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v48 = v15 | v8;
        if ((v16 | v9)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        BOOL v51 = v16;
        char v49 = v16 | v15 | v8;
        char v50 = (v17 == 0) | v16;
        BOOL v18 = (int *)MEMORY[0x1E4F940E8];
        id v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_65;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_65:
      int v47 = 1;
      goto LABEL_66;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v51;
    if ((v50 & 1) == 0)
    {
      int v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 6)
    {
      if (!v32) {
        goto LABEL_55;
      }
      if ((*(unsigned char *)(a1 + 60) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_81;
        }
        char v42 = 32 * *(unsigned char *)(a1 + 60);
        goto LABEL_63;
      }
      uint64_t v37 = PBReaderReadString();
      uint64_t v38 = 32;
      goto LABEL_48;
    }
    if (v31 == 5) {
      break;
    }
    if (v31 == 4)
    {
      if (!v32) {
        goto LABEL_55;
      }
      if ((*(unsigned char *)(a1 + 60) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_81;
        }
        char v42 = *(unsigned char *)(a1 + 60) << 6;
        goto LABEL_63;
      }
      uint64_t v37 = PBReaderReadString();
      uint64_t v38 = 24;
      goto LABEL_48;
    }
    if (v48 & 1) == 0 || (*(unsigned char *)(a1 + 60))
    {
LABEL_55:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_81;
      }
      goto LABEL_64;
    }
    if (!*(void *)(a1 + 16))
    {
      id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      unsigned int v41 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v40;
    }
    if (!PBUnknownFieldAdd())
    {
      int v47 = 0;
      id v19 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_67;
    }
LABEL_64:
    id v19 = (int *)MEMORY[0x1E4F940C8];
    if (!(v49 & 1 | (v10 != 0))) {
      goto LABEL_65;
    }
  }
  if (!v32) {
    goto LABEL_55;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) == 0)
  {
    uint64_t v37 = PBReaderReadString();
    uint64_t v38 = 40;
LABEL_48:
    BOOL v39 = *(void **)(a1 + v38);
    *(void *)(a1 + v38) = v37;

    --v10;
    goto LABEL_64;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v42 = 16 * *(unsigned char *)(a1 + 60);
LABEL_63:
    v10 += v42 >> 7;
    goto LABEL_64;
  }
LABEL_81:
  int v47 = 0;
  id v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
  if ((v48 & 1) == 0) {
    goto LABEL_68;
  }
LABEL_67:
  *(unsigned char *)(a1 + 60) |= 1u;
LABEL_68:
  if (v51 || (v47 & 1) == 0)
  {
    *(unsigned char *)(a1 + 60) |= 2u;
    *(unsigned char *)(a1 + 60) |= 8u;
    *(unsigned char *)(a1 + 60) |= 4u;
  }
  else if (v17)
  {
    while (1)
    {
      int v43 = *v17++;
      char v44 = 2;
      switch(v43)
      {
        case 0:
          goto LABEL_75;
        case 4:
          goto LABEL_74;
        case 5:
          char v44 = 8;
          goto LABEL_74;
        case 6:
          char v44 = 4;
LABEL_74:
          *(unsigned char *)(a1 + 60) |= v44;
          break;
        default:
          continue;
      }
    }
  }
LABEL_75:
  if (v47) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v51)
  {
    unint64_t v45 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1894367EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAirportEntityPlaceLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAirportEntityPlaceLookupParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDAirportEntityPlaceLookupParametersReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDAirportEntityPlaceLookupParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAirportEntityPlaceLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189436A68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189436C28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAirportEntityPlaceLookupParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_189436E34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAirportEntityPlaceLookupResultReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189437474(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189437654(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894377C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894378F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPublisherSuggestionParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v16 != 1) {
          goto LABEL_34;
        }
        uint64_t v18 = *v2;
        unint64_t v19 = *(void *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v20 = v19 + 8, v20 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v18] = v20;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1))
        {
LABEL_34:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_34;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDAllCollectionsViewResultFilterIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_87;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_87;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_89;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
        {
          char v34 = 0;
          unsigned int v35 = 0;
          unint64_t v36 = 0;
          while (1)
          {
            uint64_t v37 = *v2;
            uint64_t v38 = *(void *)&a1[v37];
            unint64_t v39 = v38 + 1;
            if (v38 == -1 || v39 > *(void *)&a1[*v3]) {
              break;
            }
            char v40 = *(unsigned char *)(*(void *)&a1[*v5] + v38);
            *(void *)&a1[v37] = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if ((v40 & 0x80) == 0) {
              goto LABEL_68;
            }
            v34 += 7;
            BOOL v13 = v35++ >= 9;
            if (v13)
            {
              unint64_t v36 = 0;
              int v41 = a1[*v4];
              goto LABEL_70;
            }
          }
          a1[*v4] = 1;
LABEL_68:
          int v41 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v36 = 0;
          }
LABEL_70:
          int v42 = v36 & 7;
          if (v41 || v42 == 4) {
            break;
          }
          if ((v36 >> 3) == 1)
          {
            if (v42 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
              goto LABEL_88;
            }
            PBReaderRecallMark();
          }
          else if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
            goto LABEL_88;
          }
        }
LABEL_81:
        int v44 = a1[*v4];
        PBReaderRecallMark();
        if (v44) {
          goto LABEL_89;
        }
        PBReaderRecallMark();
        goto LABEL_86;
      }
      if (v17 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_89;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_86;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_89;
      }
LABEL_86:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_87;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark())
    {
LABEL_89:
      PBReaderRecallMark();
      return 0;
    }
    objc_msgSend(a1, "position", 0, 0);
    [a1 length];
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
    {
      char v24 = 0;
      unsigned int v25 = 0;
      unint64_t v26 = 0;
      while (1)
      {
        uint64_t v27 = *v2;
        uint64_t v28 = *(void *)&a1[v27];
        unint64_t v29 = v28 + 1;
        if (v28 == -1 || v29 > *(void *)&a1[*v3]) {
          break;
        }
        char v30 = *(unsigned char *)(*(void *)&a1[*v5] + v28);
        *(void *)&a1[v27] = v29;
        v26 |= (unint64_t)(v30 & 0x7F) << v24;
        if ((v30 & 0x80) == 0) {
          goto LABEL_42;
        }
        v24 += 7;
        BOOL v13 = v25++ >= 9;
        if (v13)
        {
          unint64_t v26 = 0;
          int v31 = a1[*v4];
          goto LABEL_44;
        }
      }
      a1[*v4] = 1;
LABEL_42:
      int v31 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v26 = 0;
      }
LABEL_44:
      int v32 = v26 & 7;
      if (v31 || v32 == 4) {
        break;
      }
      if ((v26 >> 3) == 1)
      {
        if (v32 != 2 || !PBReaderPlaceMark() || !GEOPDWarsawMerchantIdentifierIsValid(a1))
        {
LABEL_88:
          PBReaderRecallMark();
          goto LABEL_89;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_88;
      }
    }
    goto LABEL_81;
  }
LABEL_87:
  BOOL v45 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v45;
}

os_unfair_lock_s *GEOPDAllCollectionsViewParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDAllCollectionsViewParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189438C80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAllCollectionsViewResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAllCollectionsViewResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDAllCollectionsViewResultReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDAllCollectionsViewResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAllCollectionsViewResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDAllCollectionsViewResultCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189438E70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPublisherSuggestionResultIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDAllCollectionsViewResultIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1894395C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAllCollectionsViewResultFilterReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v62 = v17;
        char v63 = v18 | v17;
        char v61 = v7;
        if ((v18 | v7)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v64 = (v19 == 0) | v18;
        BOOL v65 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_79;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_79:
      int v59 = 1;
      goto LABEL_80;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v65;
    if ((v64 & 1) == 0)
    {
      unsigned int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if (!v34) {
        goto LABEL_66;
      }
      if ((*(unsigned char *)(a1 + 56) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_100;
        }
        char v46 = objc_alloc_init(GEOPDAllCollectionsViewResultFilterTypeKeyword);
        if (!GEOPDAllCollectionsViewResultFilterTypeKeywordReadAllFrom((uint64_t)v46, (void *)v3, v10 & 1)) {
          goto LABEL_99;
        }
        PBReaderRecallMark();
        uint64_t v47 = 32;
LABEL_59:
        char v48 = *(void **)(a1 + v47);
        *(void *)(a1 + v47) = v46;

        --v8;
LABEL_77:
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_78;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_100;
      }
      char v53 = 16 * *(unsigned char *)(a1 + 56);
LABEL_76:
      v8 += v53 >> 7;
      goto LABEL_77;
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v61)
      {
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_69;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_71;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_69:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_71:
        *(_DWORD *)(a1 + 52) = v41;
        goto LABEL_78;
      }
    }
    else if ((v62 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v51 = PBUnknownFieldAdd();
      unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v51)
      {
        int v59 = 0;
        unint64_t v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        goto LABEL_82;
      }
      goto LABEL_78;
    }
LABEL_66:
    char v52 = PBReaderSkipValueWithTag();
    unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v52 & 1) == 0)
    {
      int v59 = 0;
LABEL_80:
      unint64_t v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
      goto LABEL_81;
    }
LABEL_78:
    if (!(v63 & 1 | (v8 != 0))) {
      goto LABEL_79;
    }
  }
  if (!v34) {
    goto LABEL_66;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_100;
    }
    char v53 = 32 * *(unsigned char *)(a1 + 56);
    goto LABEL_76;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_100;
  }
  char v46 = objc_alloc_init(GEOPDAllCollectionsViewResultFilterTypeAddress);
  if (GEOPDAllCollectionsViewResultFilterTypeAddressReadAllFrom((uint64_t)v46, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v47 = 24;
    goto LABEL_59;
  }
LABEL_99:

LABEL_100:
  int v59 = 0;
  unint64_t v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_81:
  if ((v62 & 1) == 0) {
    goto LABEL_83;
  }
LABEL_82:
  *(unsigned char *)(a1 + v60[120]) |= 2u;
LABEL_83:
  if (v65 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[120]) |= 4u;
    *(unsigned char *)(a1 + v60[120]) |= 8u;
    goto LABEL_93;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v19++;
        int v54 = v55;
        if (v55 == 2) {
          break;
        }
        if (v54 == 3)
        {
          char v56 = 8;
          goto LABEL_92;
        }
        if (!v54) {
          goto LABEL_93;
        }
      }
      char v56 = 4;
LABEL_92:
      *(unsigned char *)(a1 + v60[120]) |= v56;
      continue;
    }
  }
LABEL_93:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v65)
  {
    uint64_t v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189439D9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189439FF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAllCollectionsViewResultFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAllCollectionsViewResultFilterReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDAllCollectionsViewResultFilterReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDAllCollectionsViewResultFilterReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAllCollectionsViewResultFilterReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18943A180(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18943A348(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18943A4FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAllCollectionsViewResultFilterTypeAddressReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unsigned __int8 v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          uint64_t v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_18943ACE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAllCollectionsViewResultFilterTypeKeywordReadAllFrom(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    char v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          id v20 = objc_alloc_init(GEOPDRelatedSearchSuggestion);
          if (!GEOPDRelatedSearchSuggestionReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          unint64_t v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v22 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v23 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v22;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_18943B250(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18943B5B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAllGuidesLocationsSectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v51 = v17;
        char v52 = v18 | v17;
        if ((v18 | v7)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v53 = (v19 == 0) | v18;
        BOOL v54 = v18;
        id v20 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        id v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_62;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_62:
      int v49 = 1;
      goto LABEL_63;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v54;
    if ((v53 & 1) == 0)
    {
      unsigned int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 52) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_82;
          }
          v8 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_82;
          }
          char v39 = objc_alloc_init(GEOPDAllGuidesLocationsSectionHeader);
          if (!GEOPDAllGuidesLocationsSectionHeaderReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
            goto LABEL_81;
          }
          PBReaderRecallMark();
          unsigned int v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v39;

          --v8;
        }
        goto LABEL_60;
      }
    }
    else if ((v51 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v42 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v41;
      }
      int v43 = PBUnknownFieldAdd();
      unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v43)
      {
        int v49 = 0;
        char v50 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        goto LABEL_65;
      }
      goto LABEL_61;
    }
LABEL_56:
    char v44 = PBReaderSkipValueWithTag();
    unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v44 & 1) == 0)
    {
      int v49 = 0;
LABEL_63:
      char v50 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v52 & 1 | (v8 != 0))) {
      goto LABEL_62;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
    goto LABEL_56;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_82;
  }
  char v39 = objc_alloc_init(GEOPDGuidesLocationEntry);
  if (GEOPDGuidesLocationEntryReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDAllGuidesLocationsSection _addNoFlagsEntry:](a1, v39);

LABEL_60:
    unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_61;
  }
LABEL_81:

LABEL_82:
  int v49 = 0;
  char v50 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_64:
  if ((v51 & 1) == 0) {
    goto LABEL_66;
  }
LABEL_65:
  *(unsigned char *)(a1 + v50[128]) |= 1u;
LABEL_66:
  if (v54 || (v49 & 1) == 0)
  {
    *(unsigned char *)(a1 + v50[128]) |= 4u;
    *(unsigned char *)(a1 + v50[128]) |= 2u;
    goto LABEL_75;
  }
  if (v19)
  {
    while (1)
    {
      int v46 = *v19++;
      int v45 = v46;
      if (v46 == 1) {
        break;
      }
      if (v45 == 2)
      {
LABEL_71:
        *(unsigned char *)(a1 + v50[128]) |= v45;
      }
      else if (!v45)
      {
        goto LABEL_75;
      }
    }
    LOBYTE(v45) = 4;
    goto LABEL_71;
  }
LABEL_75:
  if (v49) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v54)
  {
    uint64_t v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18943BC18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18943C200(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAllGuidesLocationsSectionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  -[GEOPDAllGuidesLocationsSectionHeader readAll:](*(void *)(a1 + 32), 1);
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDGuidesLocationEntry readAll:](*(void *)(*((void *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPDAllGuidesLocationsSectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAllGuidesLocationsSectionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDAllGuidesLocationsSectionReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDAllGuidesLocationsSectionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAllGuidesLocationsSectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDAllGuidesLocationsSectionCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18943C584(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18943C7B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAllGuidesLocationsSectionIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 4) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v3 + 48));
      int v4 = *(unsigned char *)(v3 + 56) & 0x1C;
      os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 48));
      if (v4) {
        return 1;
      }
      unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
    }
  }
  return (v2 >> 1) & 1;
}

void sub_18943CAB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18943CE40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAllGuidesLocationsSectionHeaderReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v62 = v17;
        char v63 = v18 | v17;
        char v61 = v9;
        if ((v18 | v9)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        id v20 = (int *)MEMORY[0x1E4F940E8];
        char v64 = (v19 == 0) | v18;
        BOOL v65 = v18;
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        id v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_77;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_77:
      int v59 = 1;
      goto LABEL_78;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v65;
    if ((v64 & 1) == 0)
    {
      unsigned int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3) {
      break;
    }
    if (v33 == 2)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 56) & 4) == 0)
        {
          uint64_t v48 = PBReaderReadString();
          uint64_t v47 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v48;
LABEL_57:

          --v10;
LABEL_75:
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_76;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_98;
        }
        char v53 = 32 * *(unsigned char *)(a1 + 56);
LABEL_74:
        v10 += v53 >> 7;
        goto LABEL_75;
      }
    }
    else if (v33 == 1)
    {
      if (v61)
      {
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_67;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_69;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_67:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_69:
        *(_DWORD *)(a1 + 52) = v41;
        goto LABEL_76;
      }
    }
    else if ((v62 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v51 = PBUnknownFieldAdd();
      unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v51)
      {
        int v59 = 0;
        unint64_t v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        goto LABEL_80;
      }
      goto LABEL_76;
    }
LABEL_64:
    char v52 = PBReaderSkipValueWithTag();
    unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v52 & 1) == 0)
    {
      int v59 = 0;
LABEL_78:
      unint64_t v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
      goto LABEL_79;
    }
LABEL_76:
    if (!(v63 & 1 | (v10 != 0))) {
      goto LABEL_77;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }
  if ((*(unsigned char *)(a1 + 56) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_98;
    }
    char v53 = 16 * *(unsigned char *)(a1 + 56);
    goto LABEL_74;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_98;
  }
  int v46 = objc_alloc_init(GEOPDMapsIdentifier);
  if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v46, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v47 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v46;
    goto LABEL_57;
  }

LABEL_98:
  int v59 = 0;
  unint64_t v60 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_79:
  if ((v62 & 1) == 0) {
    goto LABEL_81;
  }
LABEL_80:
  *(unsigned char *)(a1 + v60[133]) |= 2u;
LABEL_81:
  if (v65 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[133]) |= 4u;
    *(unsigned char *)(a1 + v60[133]) |= 8u;
    goto LABEL_91;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v19++;
        int v54 = v55;
        if (v55 == 2) {
          break;
        }
        if (v54 == 3)
        {
          char v56 = 8;
          goto LABEL_90;
        }
        if (!v54) {
          goto LABEL_91;
        }
      }
      char v56 = 4;
LABEL_90:
      *(unsigned char *)(a1 + v60[133]) |= v56;
      continue;
    }
  }
LABEL_91:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v65)
  {
    uint64_t v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18943D56C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18943D9B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAllGuidesLocationsSectionHeaderReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAllGuidesLocationsSectionHeaderReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDAllGuidesLocationsSectionHeaderReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDAllGuidesLocationsSectionHeaderReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAllGuidesLocationsSectionHeaderReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18943DC30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18943DDF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18943DFAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAllGuidesLocationsViewParametersReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_36;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            LODWORD(v22) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          unsigned __int8 v18 = objc_alloc_init(GEOPDViewportInfo);
          if (!GEOPDViewportInfoReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          uint64_t v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v28 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v27;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_18943E870(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18943ECC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAllGuidesLocationsViewResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v52 = v17;
        char v53 = v18 | v17;
        if ((v18 | v9)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v54 = (v19 == 0) | v18;
        BOOL v55 = v18;
        char v20 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_60;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_60:
      int v50 = 1;
      goto LABEL_61;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v55;
    if ((v54 & 1) == 0)
    {
      unsigned int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 52) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_80;
          }
          v10 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
        }
        else
        {
          uint64_t v39 = PBReaderReadString();
          unsigned int v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v39;

          --v10;
        }
        goto LABEL_58;
      }
    }
    else if ((v52 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v43 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v42;
      }
      int v44 = PBUnknownFieldAdd();
      unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v44)
      {
        int v50 = 0;
        int v51 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
        goto LABEL_63;
      }
      goto LABEL_59;
    }
LABEL_54:
    char v45 = PBReaderSkipValueWithTag();
    unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
      int v50 = 0;
LABEL_61:
      int v51 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
      goto LABEL_62;
    }
LABEL_59:
    if (!(v53 & 1 | (v10 != 0))) {
      goto LABEL_60;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
    goto LABEL_54;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_80;
  }
  uint64_t v41 = objc_alloc_init(GEOPDAllGuidesLocationsSection);
  if (GEOPDAllGuidesLocationsSectionReadAllFrom((uint64_t)v41, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDAllGuidesLocationsViewResult _addNoFlagsAllGuidesLocationsSection:](a1, v41);

LABEL_58:
    unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_59;
  }

LABEL_80:
  int v50 = 0;
  int v51 = &OBJC_IVAR___GEOMapDataSubscriptionDownloadGroup__completedSubscriptions;
  unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_62:
  if ((v52 & 1) == 0) {
    goto LABEL_64;
  }
LABEL_63:
  *(unsigned char *)(a1 + v51[142]) |= 1u;
LABEL_64:
  if (v55 || (v50 & 1) == 0)
  {
    *(unsigned char *)(a1 + v51[142]) |= 4u;
    *(unsigned char *)(a1 + v51[142]) |= 2u;
    goto LABEL_73;
  }
  if (v19)
  {
    while (1)
    {
      int v47 = *v19++;
      int v46 = v47;
      if (v47 == 1) {
        break;
      }
      if (v46 == 2)
      {
LABEL_69:
        *(unsigned char *)(a1 + v51[142]) |= v46;
      }
      else if (!v46)
      {
        goto LABEL_73;
      }
    }
    LOBYTE(v46) = 4;
    goto LABEL_69;
  }
LABEL_73:
  if (v50) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v55)
  {
    uint64_t v48 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18943F370(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18943F938(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAllGuidesLocationsViewResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        -[GEOPDAllGuidesLocationsSection readAll:](*(void *)(*((void *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDAllGuidesLocationsViewResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAllGuidesLocationsViewResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDAllGuidesLocationsViewResultReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDAllGuidesLocationsViewResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAllGuidesLocationsViewResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDAllGuidesLocationsViewResultCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18943FCA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18943FED4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAllGuidesLocationsViewResultIsDirty(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 52) & 0xE) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
    return 0;
  }
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v3 = *(id *)(a1 + 24);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v3);
        }
        long long v6 = *(os_unfair_lock_s **)(*((void *)&v9 + 1) + 8 * i);
        if (v6)
        {
          os_unfair_lock_lock_with_options();
          char IsDirty = _GEOPDAllGuidesLocationsSectionIsDirty((uint64_t)v6);
          os_unfair_lock_unlock(v6 + 12);
          if (IsDirty)
          {
            uint64_t v2 = 1;
            goto LABEL_16;
          }
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_16:

  return v2;
}

os_unfair_lock_s *GEOPDAllGuidesLocationsViewResultIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDAllGuidesLocationsViewResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1894402F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18944067C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteFilterReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 116);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 112)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 128)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFEFFFDFFFALL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 128) & 0x20) != 0)+ ((*(unsigned char *)(a1 + 128) & 2) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        char v18 = v16 | v11;
        uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        if (((v16 | v11) | v8)) {
          char v20 = 0;
        }
        else {
          char v20 = a3;
        }
        int v111 = 1;
        char v21 = v16 & ~(_BYTE)v11 | v9;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_151;
        }
        char v110 = v17;
        char v113 = v18 | v17;
        char v114 = (v20 == 0) | v18;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        char v23 = (int *)MEMORY[0x1E4F940B8];
        char v112 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_149;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v19;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_149:
      int v111 = 1;
      goto LABEL_150;
    }
    unsigned int v35 = v22;
    unint64_t v36 = v26 >> 3;
    BOOL v37 = v18;
    if ((v114 & 1) == 0)
    {
      BOOL v38 = v20;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37 || (*(unsigned char *)(a1 + 128) & 8) != 0) {
          goto LABEL_111;
        }
        uint64_t v22 = v35;
        if (v33 == 2)
        {
          int v42 = PBReaderPlaceMark();
          long long v6 = (int *)MEMORY[0x1E4F940E0];
          if (!v42) {
            goto LABEL_170;
          }
          char v23 = (int *)MEMORY[0x1E4F940B8];
          if (*(void *)(v3 + *v19) < *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]))
          {
            while (1)
            {
              if (*(unsigned char *)(v3 + *v22)) {
                goto LABEL_75;
              }
              char v43 = 0;
              unsigned int v44 = 0;
              uint64_t v45 = 0;
              while (1)
              {
                uint64_t v46 = *v19;
                uint64_t v47 = *(void *)(v3 + v46);
                unint64_t v48 = v47 + 1;
                if (v47 == -1 || v48 > *(void *)(v3 + *v6)) {
                  break;
                }
                char v49 = *(unsigned char *)(*(void *)(v3 + *v23) + v47);
                *(void *)(v3 + v46) = v48;
                v45 |= (unint64_t)(v49 & 0x7F) << v43;
                if (v49 < 0)
                {
                  v43 += 7;
                  BOOL v31 = v44++ >= 9;
                  if (!v31) {
                    continue;
                  }
                }
                goto LABEL_53;
              }
              *(unsigned char *)(v3 + *v22) = 1;
LABEL_53:
              PBRepeatedInt32Add();
              if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v6)) {
                goto LABEL_75;
              }
            }
          }
          goto LABEL_75;
        }
        char v85 = 0;
        unsigned int v86 = 0;
        uint64_t v87 = 0;
        long long v6 = (int *)MEMORY[0x1E4F940E0];
        char v23 = (int *)MEMORY[0x1E4F940B8];
        while (1)
        {
          uint64_t v88 = *v19;
          uint64_t v89 = *(void *)(v3 + v88);
          unint64_t v90 = v89 + 1;
          if (v89 == -1 || v90 > *(void *)(v3 + *v6)) {
            goto LABEL_146;
          }
          char v91 = *(unsigned char *)(*(void *)(v3 + *v23) + v89);
          *(void *)(v3 + v88) = v90;
          v87 |= (unint64_t)(v91 & 0x7F) << v85;
          if (v91 < 0)
          {
            v85 += 7;
            BOOL v31 = v86++ >= 9;
            if (!v31) {
              continue;
            }
          }
          goto LABEL_147;
        }
      case 2:
        if (!v37) {
          goto LABEL_111;
        }
        uint64_t v22 = v35;
        if ((*(unsigned char *)(a1 + 128) & 0x40) != 0)
        {
          char v82 = PBReaderSkipValueWithTag();
          long long v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v82 & 1) == 0) {
            goto LABEL_170;
          }
          char v83 = 2 * *(unsigned char *)(a1 + 128);
          goto LABEL_123;
        }
        char v50 = PBReaderPlaceMark();
        long long v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v50 & 1) == 0) {
          goto LABEL_170;
        }
        int v51 = objc_alloc_init(GEOPDPoiIconCategoryFilter);
        if (!GEOPDPoiIconCategoryFilterReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1)) {
          goto LABEL_169;
        }
        PBReaderRecallMark();
        uint64_t v52 = 104;
        goto LABEL_110;
      case 3:
        if (!v37 || (*(unsigned char *)(a1 + 128) & 4) != 0) {
          goto LABEL_111;
        }
        uint64_t v22 = v35;
        if (v33 != 2)
        {
          char v92 = 0;
          unsigned int v93 = 0;
          uint64_t v94 = 0;
          long long v6 = (int *)MEMORY[0x1E4F940E0];
          char v23 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v95 = *v19;
            uint64_t v96 = *(void *)(v3 + v95);
            unint64_t v97 = v96 + 1;
            if (v96 == -1 || v97 > *(void *)(v3 + *v6)) {
              goto LABEL_146;
            }
            char v98 = *(unsigned char *)(*(void *)(v3 + *v23) + v96);
            *(void *)(v3 + v95) = v97;
            v94 |= (unint64_t)(v98 & 0x7F) << v92;
            if (v98 < 0)
            {
              v92 += 7;
              BOOL v31 = v93++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_147;
          }
        }
        int v53 = PBReaderPlaceMark();
        long long v6 = (int *)MEMORY[0x1E4F940E0];
        if (!v53) {
          goto LABEL_170;
        }
        char v23 = (int *)MEMORY[0x1E4F940B8];
        if (*(void *)(v3 + *v19) < *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]))
        {
          do
          {
            if (*(unsigned char *)(v3 + *v22)) {
              break;
            }
            char v54 = 0;
            unsigned int v55 = 0;
            uint64_t v56 = 0;
            while (1)
            {
              uint64_t v57 = *v19;
              uint64_t v58 = *(void *)(v3 + v57);
              unint64_t v59 = v58 + 1;
              if (v58 == -1 || v59 > *(void *)(v3 + *v6)) {
                break;
              }
              char v60 = *(unsigned char *)(*(void *)(v3 + *v23) + v58);
              *(void *)(v3 + v57) = v59;
              v56 |= (unint64_t)(v60 & 0x7F) << v54;
              if (v60 < 0)
              {
                v54 += 7;
                BOOL v31 = v55++ >= 9;
                if (!v31) {
                  continue;
                }
              }
              goto LABEL_74;
            }
            *(unsigned char *)(v3 + *v22) = 1;
LABEL_74:
            PBRepeatedInt32Add();
          }
          while (*(void *)(v3 + *v19) < *(void *)(v3 + *v6));
        }
        goto LABEL_75;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_111;
        }
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v63 = 0;
        *(unsigned char *)(a1 + 128) |= 1u;
        uint64_t v22 = v35;
        long long v6 = (int *)MEMORY[0x1E4F940E0];
        char v23 = (int *)MEMORY[0x1E4F940B8];
        while (2)
        {
          uint64_t v64 = *v19;
          uint64_t v65 = *(void *)(v3 + v64);
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(v3 + *v23) + v65);
            *(void *)(v3 + v64) = v66;
            v63 |= (unint64_t)(v67 & 0x7F) << v61;
            if (v67 < 0)
            {
              v61 += 7;
              BOOL v31 = v62++ >= 9;
              if (v31)
              {
                uint64_t v63 = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v63 = 0;
        }
LABEL_118:
        *(unsigned char *)(a1 + 124) = v63 != 0;
        goto LABEL_112;
      case 8:
        if (!v37 || (*(unsigned char *)(a1 + 128) & 0x10) != 0) {
          goto LABEL_111;
        }
        uint64_t v22 = v35;
        if (v33 == 2)
        {
          int v71 = PBReaderPlaceMark();
          long long v6 = (int *)MEMORY[0x1E4F940E0];
          char v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v71) {
            goto LABEL_170;
          }
          while (*(void *)(v3 + *v19) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v22))
          {
            char v72 = 0;
            unsigned int v73 = 0;
            uint64_t v74 = 0;
            while (1)
            {
              uint64_t v75 = *v19;
              uint64_t v76 = *(void *)(v3 + v75);
              unint64_t v77 = v76 + 1;
              if (v76 == -1 || v77 > *(void *)(v3 + *v6)) {
                break;
              }
              char v78 = *(unsigned char *)(*(void *)(v3 + *v23) + v76);
              *(void *)(v3 + v75) = v77;
              v74 |= (unint64_t)(v78 & 0x7F) << v72;
              if (v78 < 0)
              {
                v72 += 7;
                BOOL v31 = v73++ >= 9;
                if (!v31) {
                  continue;
                }
              }
              goto LABEL_104;
            }
            *(unsigned char *)(v3 + *v22) = 1;
LABEL_104:
            PBRepeatedInt32Add();
          }
LABEL_75:
          PBReaderRecallMark();
        }
        else
        {
          char v99 = 0;
          unsigned int v100 = 0;
          uint64_t v101 = 0;
          long long v6 = (int *)MEMORY[0x1E4F940E0];
          char v23 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v102 = *v19;
            uint64_t v103 = *(void *)(v3 + v102);
            unint64_t v104 = v103 + 1;
            if (v103 == -1 || v104 > *(void *)(v3 + *v6)) {
              break;
            }
            char v105 = *(unsigned char *)(*(void *)(v3 + *v23) + v103);
            *(void *)(v3 + v102) = v104;
            v101 |= (unint64_t)(v105 & 0x7F) << v99;
            if (v105 < 0)
            {
              v99 += 7;
              BOOL v31 = v100++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_147;
          }
LABEL_146:
          *(unsigned char *)(v3 + *v22) = 1;
LABEL_147:
          PBRepeatedInt32Add();
        }
        char v18 = v112;
        goto LABEL_112;
      case 9:
        if (!v37) {
          goto LABEL_111;
        }
        uint64_t v22 = v35;
        if ((*(unsigned char *)(a1 + 128) & 0x20) != 0)
        {
          char v84 = PBReaderSkipValueWithTag();
          long long v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v84 & 1) == 0) {
            goto LABEL_170;
          }
          char v83 = 4 * *(unsigned char *)(a1 + 128);
LABEL_123:
          v7 += v83 >> 7;
LABEL_124:
          char v18 = v112;
          char v23 = (int *)MEMORY[0x1E4F940B8];
LABEL_112:
          if (!(v113 & 1 | (v7 != 0)) || *(void *)(v3 + *v19) >= *(void *)(v3 + *v6)) {
            goto LABEL_149;
          }
          continue;
        }
        char v79 = PBReaderPlaceMark();
        long long v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v79 & 1) == 0) {
          goto LABEL_170;
        }
        int v51 = objc_alloc_init(GEOPDAddressResultSubTypeFilter);
        if (GEOPDAddressResultSubTypeFilterReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v52 = 96;
LABEL_110:
          BOOL v80 = *(void **)(a1 + v52);
          *(void *)(a1 + v52) = v51;

          --v7;
          goto LABEL_124;
        }
LABEL_169:

LABEL_170:
        int v111 = 0;
        char v18 = v112;
LABEL_150:
        char v21 = v110;
LABEL_151:
        if (v21) {
LABEL_152:
        }
          *(unsigned char *)(a1 + 128) |= 2u;
        if (v18 & 1 | ((v111 & 1) == 0))
        {
          *(unsigned char *)(a1 + 128) |= 8u;
          *(unsigned char *)(a1 + 128) |= 0x40u;
          *(unsigned char *)(a1 + 128) |= 4u;
          *(unsigned char *)(a1 + 128) |= 0x10u;
          *(unsigned char *)(a1 + 128) |= 0x20u;
        }
        else if (v20)
        {
          while (1)
          {
            int v106 = *v20++;
            char v107 = 8;
            switch(v106)
            {
              case 0:
                goto LABEL_162;
              case 1:
                goto LABEL_161;
              case 2:
                char v107 = 64;
                goto LABEL_161;
              case 3:
                char v107 = 4;
                goto LABEL_161;
              case 8:
                char v107 = 16;
                goto LABEL_161;
              case 9:
                char v107 = 32;
LABEL_161:
                *(unsigned char *)(a1 + 128) |= v107;
                break;
              default:
                continue;
            }
          }
        }
LABEL_162:
        if (v111)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_166:
          char v108 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v18) {
            goto LABEL_166;
          }
        }
        return v3;
      default:
        if ((v110 & 1) == 0 || (*(unsigned char *)(a1 + 128) & 2) != 0)
        {
LABEL_111:
          char v81 = PBReaderSkipValueWithTag();
          char v18 = v112;
          uint64_t v22 = v35;
          long long v6 = (int *)MEMORY[0x1E4F940E0];
          char v23 = (int *)MEMORY[0x1E4F940B8];
          if ((v81 & 1) == 0)
          {
            int v111 = 0;
            goto LABEL_150;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v68 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v69 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v68;
          }
          int v70 = PBUnknownFieldAdd();
          char v18 = v112;
          uint64_t v22 = v35;
          long long v6 = (int *)MEMORY[0x1E4F940E0];
          char v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v70)
          {
            int v111 = 0;
            goto LABEL_152;
          }
        }
        goto LABEL_112;
    }
  }
}

void sub_189441870(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894419DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894423A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189442848(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189443BF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 116))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAutocompleteFilterReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 120));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 112) = [v8 position];
  *(_DWORD *)(a1 + 116) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDAutocompleteFilterReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDAutocompleteFilterReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAutocompleteFilterReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    -[GEOPDPoiIconCategoryFilter readAll:](*(void *)(a1 + 104), 1);
    -[GEOPDAddressResultSubTypeFilter readAll:](*(void *)(a1 + 96), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 120));
  return Specified;
}

void sub_189443DAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteFilterReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAutocompleteFilterReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189443E10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteFilterIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_93;
            }
            while (1)
            {
LABEL_62:
              if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
                goto LABEL_58;
              }
              unsigned int v38 = a1[*v4];
              if (a1[*v4]) {
                goto LABEL_58;
              }
              while (1)
              {
                uint64_t v39 = *v2;
                uint64_t v40 = *(void *)&a1[v39];
                unint64_t v41 = v40 + 1;
                if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
                  break;
                }
                int v42 = *(char *)(*(void *)&a1[*v5] + v40);
                *(void *)&a1[v39] = v41;
                if (v42 < 0)
                {
                  BOOL v13 = v38++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_62;
              }
              a1[*v4] = 1;
            }
          }
          if ((v8 & 7) != 0) {
            goto LABEL_93;
          }
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_54;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              unsigned int v21 = v15++;
              if (v21 <= 8) {
                continue;
              }
            }
            goto LABEL_59;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAddressResultSubTypeFilterIsValid(a1)) {
            goto LABEL_93;
          }
          goto LABEL_58;
        case 3u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_93;
            }
            while (1)
            {
              uint64_t v22 = *v2;
              uint64_t v23 = *(void *)&a1[v22];
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
                goto LABEL_54;
              }
              int v25 = *(char *)(*(void *)&a1[*v5] + v23);
              *(void *)&a1[v22] = v24;
              if (v25 < 0)
              {
                unsigned int v26 = v15++;
                if (v26 <= 8) {
                  continue;
                }
              }
              goto LABEL_59;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_93;
          }
LABEL_72:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v43 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v44 = *v2;
              uint64_t v45 = *(void *)&a1[v44];
              unint64_t v46 = v45 + 1;
              if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
                break;
              }
              int v47 = *(char *)(*(void *)&a1[*v5] + v45);
              *(void *)&a1[v44] = v46;
              if (v47 < 0)
              {
                BOOL v13 = v43++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_72;
            }
            a1[*v4] = 1;
          }
          goto LABEL_58;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_93;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_54;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0 && v27++ <= 8) {
              continue;
            }
            goto LABEL_59;
          }
        case 8u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_93:
              PBReaderRecallMark();
              return 0;
            }
LABEL_82:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v48 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v49 = *v2;
                uint64_t v50 = *(void *)&a1[v49];
                unint64_t v51 = v50 + 1;
                if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
                  break;
                }
                int v52 = *(char *)(*(void *)&a1[*v5] + v50);
                *(void *)&a1[v49] = v51;
                if (v52 < 0)
                {
                  BOOL v13 = v48++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_82;
              }
              a1[*v4] = 1;
            }
LABEL_58:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_93;
            }
            while (1)
            {
              uint64_t v33 = *v2;
              uint64_t v34 = *(void *)&a1[v33];
              unint64_t v35 = v34 + 1;
              if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
                break;
              }
              int v36 = *(char *)(*(void *)&a1[*v5] + v34);
              *(void *)&a1[v33] = v35;
              if (v36 < 0)
              {
                unsigned int v37 = v15++;
                if (v37 <= 8) {
                  continue;
                }
              }
              goto LABEL_59;
            }
LABEL_54:
            a1[*v4] = 1;
          }
LABEL_59:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_91;
          }
          break;
        case 9u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDAddressResultSubTypeFilterIsValid(a1)) {
            goto LABEL_58;
          }
          goto LABEL_93;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_93;
          }
          goto LABEL_59;
      }
    }
  }
LABEL_91:
  BOOL v53 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v53;
}

void sub_1894445D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDAutocompleteFilterIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  int v2 = *(unsigned __int8 *)(a1 + 128);
  if ((v2 & 0x88888888) != 0) {
    return 1;
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEOPDPoiIconCategoryFilterIsDirty(*(void *)(a1 + 104))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 128);
  }
  if ((v2 & 0x14) != 0) {
    return 1;
  }
  if ((v2 & 0x20) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 96);

  return GEOPDAddressResultSubTypeFilterIsDirty(v4);
}

os_unfair_lock_s *GEOPDAutocompleteFilterIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOPDAutocompleteFilterIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 30);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189444AB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189444F08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteOriginationInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_53;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_53;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3) {
          break;
        }
        if (v18 == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_55;
          }
          int v32 = objc_alloc_init(GEOPDAutocompleteOriginationRoutePlanningParameters);
          if (!GEOPDAutocompleteOriginationRoutePlanningParametersReadAllFrom((uint64_t)v32, v3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          uint64_t v33 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v32;
        }
        else
        {
          if (v18 == 1)
          {
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (1)
            {
              uint64_t v22 = *v4;
              uint64_t v23 = *(void *)&v3[v22];
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
              *(void *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_44;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_46;
              }
            }
            v3[*v6] = 1;
LABEL_44:
            if (v3[*v6]) {
              LODWORD(v21) = 0;
            }
LABEL_46:
            uint64_t v36 = 24;
LABEL_51:
            *(_DWORD *)(a1 + v36) = v21;
            goto LABEL_52;
          }
          if (!*(void *)(a1 + 8))
          {
            id v34 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v35 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v34;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_55;
          }
        }
LABEL_52:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_53;
        }
      }
      char v26 = 0;
      unsigned int v27 = 0;
      uint64_t v21 = 0;
      *(unsigned char *)(a1 + 32) |= 2u;
      while (1)
      {
        uint64_t v28 = *v4;
        uint64_t v29 = *(void *)&v3[v28];
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)&v3[*v5]) {
          break;
        }
        char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
        *(void *)&v3[v28] = v30;
        v21 |= (unint64_t)(v31 & 0x7F) << v26;
        if ((v31 & 0x80) == 0) {
          goto LABEL_48;
        }
        v26 += 7;
        BOOL v15 = v27++ >= 9;
        if (v15)
        {
          LODWORD(v21) = 0;
          goto LABEL_50;
        }
      }
      v3[*v6] = 1;
LABEL_48:
      if (v3[*v6]) {
        LODWORD(v21) = 0;
      }
LABEL_50:
      uint64_t v36 = 28;
      goto LABEL_51;
    }
LABEL_53:
    BOOL v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_55:
    BOOL v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_189445EA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteOriginationInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDAutocompleteOriginationInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189445F04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteOriginationInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_44;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_44;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2
          || !PBReaderPlaceMark()
          || !GEOPDAutocompleteOriginationRoutePlanningParametersIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
LABEL_37:
          a1[*v4] = 1;
          goto LABEL_43;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_46;
        }
      }
LABEL_43:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_44;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_46;
    }
    unsigned int v24 = 0;
    while (1)
    {
      uint64_t v25 = *v2;
      uint64_t v26 = *(void *)&a1[v25];
      unint64_t v27 = v26 + 1;
      if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
        goto LABEL_37;
      }
      int v28 = *(char *)(*(void *)&a1[*v5] + v26);
      *(void *)&a1[v25] = v27;
      if (v28 < 0)
      {
        BOOL v23 = v24++ > 8;
        if (!v23) {
          continue;
        }
      }
      goto LABEL_43;
    }
  }
LABEL_44:
  BOOL v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEOPDAutocompleteOriginationRoutePlanningParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_44;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_44;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_46;
        }
        unsigned int v24 = 0;
        while (1)
        {
          uint64_t v25 = *v2;
          uint64_t v26 = *(void *)&a1[v25];
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
            goto LABEL_41;
          }
          int v28 = *(char *)(*(void *)&a1[*v5] + v26);
          *(void *)&a1[v25] = v27;
          if (v28 < 0)
          {
            BOOL v23 = v24++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_43;
        }
      }
      if (v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_46;
      }
LABEL_43:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_44;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_46;
    }
    unsigned int v18 = 0;
    while (1)
    {
      uint64_t v19 = *v2;
      uint64_t v20 = *(void *)&a1[v19];
      unint64_t v21 = v20 + 1;
      if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
        break;
      }
      int v22 = *(char *)(*(void *)&a1[*v5] + v20);
      *(void *)&a1[v19] = v21;
      if (v22 < 0)
      {
        BOOL v23 = v18++ > 8;
        if (!v23) {
          continue;
        }
      }
      goto LABEL_43;
    }
LABEL_41:
    a1[*v4] = 1;
    goto LABEL_43;
  }
LABEL_44:
  BOOL v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEOPDAutocompleteOriginationRoutePlanningParametersReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_53;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_53;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3) {
          break;
        }
        if (v18 == 2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v31 = *v4;
            uint64_t v32 = *(void *)&v3[v31];
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)&v3[*v5]) {
              break;
            }
            char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
            *(void *)&v3[v31] = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if ((v34 & 0x80) == 0) {
              goto LABEL_48;
            }
            v28 += 7;
            BOOL v15 = v29++ >= 9;
            if (v15)
            {
              uint64_t v30 = 0;
              goto LABEL_50;
            }
          }
          v3[*v6] = 1;
LABEL_48:
          if (v3[*v6]) {
            uint64_t v30 = 0;
          }
LABEL_50:
          BOOL v37 = v30 != 0;
          uint64_t v38 = 24;
LABEL_51:
          *(unsigned char *)(a1 + v38) = v37;
          goto LABEL_52;
        }
        if (v18 == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_55;
          }
          uint64_t v19 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v19, v3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          uint64_t v20 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v19;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v35 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v36 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v35;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_55;
          }
        }
LABEL_52:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_53;
        }
      }
      char v21 = 0;
      unsigned int v22 = 0;
      uint64_t v23 = 0;
      *(unsigned char *)(a1 + 28) |= 2u;
      while (1)
      {
        uint64_t v24 = *v4;
        uint64_t v25 = *(void *)&v3[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&v3[*v5]) {
          break;
        }
        char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v25);
        *(void *)&v3[v24] = v26;
        v23 |= (unint64_t)(v27 & 0x7F) << v21;
        if ((v27 & 0x80) == 0) {
          goto LABEL_44;
        }
        v21 += 7;
        BOOL v15 = v22++ >= 9;
        if (v15)
        {
          uint64_t v23 = 0;
          goto LABEL_46;
        }
      }
      v3[*v6] = 1;
LABEL_44:
      if (v3[*v6]) {
        uint64_t v23 = 0;
      }
LABEL_46:
      BOOL v37 = v23 != 0;
      uint64_t v38 = 25;
      goto LABEL_51;
    }
LABEL_53:
    BOOL v39 = v3[*v6] == 0;
  }
  else
  {
LABEL_55:
    BOOL v39 = 0;
  }
  objc_sync_exit(v3);

  return v39;
}

void sub_189447270(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteOriginationRoutePlanningParametersReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDAutocompleteOriginationRoutePlanningParametersReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1894472D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189447D00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 156);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 152)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = *(_DWORD *)(a1 + 172);
  uint32x4_t v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  unsigned int v15 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62F4E0), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62F4F0), v14)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62F500), v14)))+ ((v12 >> 11) & 1)+ ((v12 >> 4) & 1)+ ((v12 >> 3) & 1);
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 0xA;
        char v20 = v19 & ~(_BYTE)v11 | v9;
        char v21 = v19 | v11;
        if (((v19 | v11) | v8)) {
          unsigned int v22 = 0;
        }
        else {
          unsigned int v22 = a3;
        }
        uint64_t v23 = (int *)MEMORY[0x1E4F940E8];
        int v97 = 1;
        uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
        char v25 = v20;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_209;
        }
        char v95 = v20;
        char v98 = v21 | v20;
        char v99 = (v22 == 0) | v21;
        unint64_t v26 = (int *)MEMORY[0x1E4F940B8];
        char v96 = v21;
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v9;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v24)) {
      goto LABEL_207;
    }
    char v27 = 0;
    unsigned int v28 = 0;
    unint64_t v29 = 0;
    while (1)
    {
      uint64_t v30 = *v23;
      uint64_t v31 = *(void *)(v3 + v30);
      unint64_t v32 = v31 + 1;
      if (v31 == -1 || v32 > *(void *)(v3 + *v6)) {
        break;
      }
      char v33 = *(unsigned char *)(*(void *)(v3 + *v26) + v31);
      *(void *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0) {
        goto LABEL_25;
      }
      v27 += 7;
      BOOL v34 = v28++ >= 9;
      if (v34)
      {
        unint64_t v29 = 0;
        int v35 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v24) = 1;
LABEL_25:
    int v35 = *(unsigned __int8 *)(v3 + *v24);
    if (*(unsigned char *)(v3 + *v24)) {
      unint64_t v29 = 0;
    }
LABEL_27:
    int v36 = v29 & 7;
    if (v35 || v36 == 4)
    {
LABEL_207:
      int v97 = 1;
      goto LABEL_208;
    }
    unint64_t v38 = v29 >> 3;
    BOOL v39 = v21;
    if ((v99 & 1) == 0)
    {
      uint64_t v40 = v22;
      do
      {
        int v42 = *v40++;
        int v41 = v42;
        BOOL v39 = v42 != 0;
        if (v42) {
          BOOL v43 = v41 == v38;
        }
        else {
          BOOL v43 = 1;
        }
      }
      while (!v43);
    }
    switch((int)v38)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_150;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 172) |= 1u;
        while (1)
        {
          uint64_t v47 = *v23;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6)) {
            break;
          }
          char v50 = *(unsigned char *)(*(void *)(v3 + *v26) + v48);
          *(void *)(v3 + v47) = v49;
          v46 |= (unint64_t)(v50 & 0x7F) << v44;
          if ((v50 & 0x80) == 0) {
            goto LABEL_153;
          }
          v44 += 7;
          BOOL v34 = v45++ >= 9;
          if (v34)
          {
            LODWORD(v46) = 0;
            goto LABEL_155;
          }
        }
        *(unsigned char *)(v3 + *v24) = 1;
LABEL_153:
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v46) = 0;
        }
LABEL_155:
        *(_DWORD *)(a1 + 164) = v46;
        goto LABEL_194;
      case 2:
        if (!v39) {
          goto LABEL_150;
        }
        if ((*(unsigned char *)(a1 + 173) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_236;
          }
          int v83 = (int)(*(_DWORD *)(a1 + 172) << 19) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_236;
        }
        char v54 = objc_alloc_init(GEOPDAutocompleteParametersFullEntriesOnly);
        if (!GEOPDAutocompleteParametersFullEntriesOnlyReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_235;
        }
        PBReaderRecallMark();
        uint64_t v55 = 104;
        goto LABEL_134;
      case 3:
        if (!v39) {
          goto LABEL_150;
        }
        if ((*(unsigned char *)(a1 + 172) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_236;
          }
          int v83 = (int)(*(_DWORD *)(a1 + 172) << 24) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_236;
        }
        char v54 = objc_alloc_init(GEOPDAutocompleteParametersAllEntries);
        if (!GEOPDAutocompleteParametersAllEntriesReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_235;
        }
        PBReaderRecallMark();
        uint64_t v55 = 64;
        goto LABEL_134;
      case 4:
        if (!v39) {
          goto LABEL_150;
        }
        if ((*(unsigned char *)(a1 + 173) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_236;
          }
          int v83 = (int)(*(_DWORD *)(a1 + 172) << 18) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_236;
        }
        char v54 = objc_alloc_init(GEOPDAutocompleteParametersLocalitiesAndLandmarks);
        if (!GEOPDAutocompleteParametersLocalitiesAndLandmarksReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))goto LABEL_235; {
        PBReaderRecallMark();
        }
        uint64_t v55 = 112;
        goto LABEL_134;
      case 5:
        if (!v39) {
          goto LABEL_150;
        }
        if ((*(unsigned char *)(a1 + 172) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_236;
          }
          int v83 = (int)(*(_DWORD *)(a1 + 172) << 25) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_236;
        }
        char v54 = objc_alloc_init(GEOPDAutocompleteParametersAllEntriesWithBrowse);
        if (!GEOPDAutocompleteParametersAllEntriesWithBrowseReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))goto LABEL_235; {
        PBReaderRecallMark();
        }
        uint64_t v55 = 56;
        goto LABEL_134;
      case 6:
        if (!v39) {
          goto LABEL_150;
        }
        if (*(unsigned char *)(a1 + 174))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_236;
          }
          int v83 = (int)(*(_DWORD *)(a1 + 172) << 15) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_236;
        }
        char v54 = objc_alloc_init(GEOPDAutocompleteParametersSiriSearch);
        if (!GEOPDAutocompleteParametersSiriSearchReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_235;
        }
        PBReaderRecallMark();
        uint64_t v55 = 136;
        goto LABEL_134;
      case 7:
        if (!v39) {
          goto LABEL_150;
        }
        if ((*(unsigned char *)(a1 + 172) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_236;
          }
          int v83 = (int)(*(_DWORD *)(a1 + 172) << 26) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_236;
        }
        char v54 = objc_alloc_init(GEOPDAutocompleteParametersAddressOnly);
        if (!GEOPDAutocompleteParametersAddressOnlyReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_235;
        }
        PBReaderRecallMark();
        uint64_t v55 = 48;
        goto LABEL_134;
      case 8:
        if (!v39) {
          goto LABEL_150;
        }
        if ((*(unsigned char *)(a1 + 174) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_236;
          }
          int v83 = (int)(*(_DWORD *)(a1 + 172) << 14) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_236;
        }
        char v54 = objc_alloc_init(GEOPDAutocompleteParametersVenueSearch);
        if (!GEOPDAutocompleteParametersVenueSearchReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_235;
        }
        PBReaderRecallMark();
        uint64_t v55 = 144;
        goto LABEL_134;
      case 9:
        if (!v39) {
          goto LABEL_150;
        }
        if ((*(unsigned char *)(a1 + 173) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_236;
          }
          int v83 = (int)(*(_DWORD *)(a1 + 172) << 21) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_236;
        }
        char v54 = objc_alloc_init(GEOPDAutocompleteParametersBrandProfileSearch);
        if (!GEOPDAutocompleteParametersBrandProfileSearchReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_235;
        }
        PBReaderRecallMark();
        uint64_t v55 = 88;
        goto LABEL_134;
      case 10:
        if (!v39) {
          goto LABEL_150;
        }
        if ((*(unsigned char *)(a1 + 173) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_236;
          }
          int v83 = (int)(*(_DWORD *)(a1 + 172) << 17) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_236;
        }
        char v54 = objc_alloc_init(GEOPDAutocompleteParametersOfflineRegionSearch);
        if (!GEOPDAutocompleteParametersOfflineRegionSearchReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_235;
        }
        PBReaderRecallMark();
        uint64_t v55 = 120;
        goto LABEL_134;
      case 11:
        if (!v39) {
          goto LABEL_150;
        }
        if ((*(unsigned char *)(a1 + 173) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_236;
          }
          int v83 = (int)(*(_DWORD *)(a1 + 172) << 16) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_236;
        }
        char v54 = objc_alloc_init(GEOPDAutocompleteParametersPoiAddressOnly);
        if (!GEOPDAutocompleteParametersPoiAddressOnlyReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_235;
        }
        PBReaderRecallMark();
        uint64_t v55 = 128;
        goto LABEL_134;
      case 12:
        if (!v39) {
          goto LABEL_150;
        }
        if (*(unsigned char *)(a1 + 173))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_236;
          }
          int v83 = (int)(*(_DWORD *)(a1 + 172) << 23) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_236;
        }
        char v54 = objc_alloc_init(GEOPDAutocompleteFilter);
        if (!GEOPDAutocompleteFilterReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_235;
        }
        PBReaderRecallMark();
        uint64_t v55 = 72;
        goto LABEL_134;
      case 13:
        if ((v8 & 1) == 0) {
          goto LABEL_150;
        }
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v58 = 0;
        *(_DWORD *)(a1 + 172) |= 2u;
        while (2)
        {
          uint64_t v59 = *v23;
          uint64_t v60 = *(void *)(v3 + v59);
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(v3 + *v26) + v60);
            *(void *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              BOOL v34 = v57++ >= 9;
              if (v34)
              {
                uint64_t v58 = 0;
                goto LABEL_159;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v58 = 0;
        }
LABEL_159:
        BOOL v81 = v58 != 0;
        uint64_t v82 = 168;
        goto LABEL_164;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_150;
        }
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v65 = 0;
        *(_DWORD *)(a1 + 172) |= 4u;
        while (2)
        {
          uint64_t v66 = *v23;
          uint64_t v67 = *(void *)(v3 + v66);
          unint64_t v68 = v67 + 1;
          if (v67 == -1 || v68 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(v3 + *v26) + v67);
            *(void *)(v3 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              BOOL v34 = v64++ >= 9;
              if (v34)
              {
                uint64_t v65 = 0;
                goto LABEL_163;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v65 = 0;
        }
LABEL_163:
        BOOL v81 = v65 != 0;
        uint64_t v82 = 169;
LABEL_164:
        *(unsigned char *)(a1 + v82) = v81;
        goto LABEL_194;
      case 15:
        if (!v39) {
          goto LABEL_150;
        }
        if ((*(unsigned char *)(a1 + 173) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_236;
          }
          int v83 = (int)(*(_DWORD *)(a1 + 172) << 22) >> 31;
          goto LABEL_191;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_236;
        }
        char v54 = objc_alloc_init(GEOPDAutocompleteSessionData);
        if (!GEOPDAutocompleteSessionDataReadAllFrom((uint64_t)v54, (void *)v3)) {
          goto LABEL_235;
        }
        PBReaderRecallMark();
        uint64_t v55 = 80;
        goto LABEL_134;
      case 16:
        if (!v39) {
          goto LABEL_150;
        }
        if ((*(unsigned char *)(a1 + 173) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_236;
          }
          int v83 = (int)(*(_DWORD *)(a1 + 172) << 20) >> 31;
LABEL_191:
          v7 += v83;
LABEL_192:
          char v21 = v96;
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_193:
          unint64_t v26 = (int *)MEMORY[0x1E4F940B8];
LABEL_194:
          if (!(v98 & 1 | (v7 != 0)) || *(void *)(v3 + *v23) >= *(void *)(v3 + *v6)) {
            goto LABEL_207;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_236;
        }
        char v54 = objc_alloc_init(GEOPDAutocompleteParametersCollectionOnly);
        if (GEOPDAutocompleteParametersCollectionOnlyReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v55 = 96;
LABEL_134:
          int v70 = *(void **)(a1 + v55);
          *(void *)(a1 + v55) = v54;

          --v7;
          goto LABEL_192;
        }
LABEL_235:

LABEL_236:
        int v97 = 0;
        char v21 = v96;
        uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_208:
        char v25 = v95;
LABEL_209:
        if (v25) {
LABEL_210:
        }
          *(_DWORD *)(a1 + 172) |= 8u;
        if (v21 & 1 | ((v97 & 1) == 0))
        {
          *(_DWORD *)(a1 + 172) |= 0x1000u;
          *(_DWORD *)(a1 + 172) |= 0x80u;
          *(_DWORD *)(a1 + 172) |= 0x2000u;
          *(_DWORD *)(a1 + 172) |= 0x40u;
          *(_DWORD *)(a1 + 172) |= 0x10000u;
          *(_DWORD *)(a1 + 172) |= 0x20u;
          *(_DWORD *)(a1 + 172) |= 0x20000u;
          *(_DWORD *)(a1 + 172) |= 0x400u;
          *(_DWORD *)(a1 + 172) |= 0x4000u;
          *(_DWORD *)(a1 + 172) |= 0x8000u;
          *(_DWORD *)(a1 + 172) |= 0x100u;
          *(_DWORD *)(a1 + 172) |= 0x200u;
          *(_DWORD *)(a1 + 172) |= 0x800u;
          *(_DWORD *)(a1 + 172) |= 0x10u;
        }
        else if (v22)
        {
          while (1)
          {
            int v91 = *v22++;
            int v92 = 4096;
            switch(v91)
            {
              case 0:
                goto LABEL_229;
              case 2:
                goto LABEL_228;
              case 3:
                int v92 = 128;
                goto LABEL_228;
              case 4:
                int v92 = 0x2000;
                goto LABEL_228;
              case 5:
                int v92 = 64;
                goto LABEL_228;
              case 6:
                int v92 = 0x10000;
                goto LABEL_228;
              case 7:
                int v92 = 32;
                goto LABEL_228;
              case 8:
                int v92 = 0x20000;
                goto LABEL_228;
              case 9:
                int v92 = 1024;
                goto LABEL_228;
              case 10:
                int v92 = 0x4000;
                goto LABEL_228;
              case 11:
                int v92 = 0x8000;
                goto LABEL_228;
              case 12:
                int v92 = 256;
                goto LABEL_228;
              case 15:
                int v92 = 512;
                goto LABEL_228;
              case 16:
                int v92 = 2048;
                goto LABEL_228;
              case 17:
                int v92 = 16;
LABEL_228:
                *(_DWORD *)(a1 + 172) |= v92;
                break;
              default:
                continue;
            }
          }
        }
LABEL_229:
        if (v97)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v24) == 0;
          if ((v21 & 1) == 0) {
            return v3;
          }
LABEL_233:
          unsigned int v93 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v21) {
            goto LABEL_233;
          }
        }
        return v3;
      case 17:
        if (!v39 || (*(unsigned char *)(a1 + 172) & 0x10) != 0) {
          goto LABEL_150;
        }
        if (v36 != 2)
        {
          char v84 = 0;
          unsigned int v85 = 0;
          uint64_t v86 = 0;
          while (1)
          {
            uint64_t v87 = *v23;
            uint64_t v88 = *(void *)(v3 + v87);
            unint64_t v89 = v88 + 1;
            if (v88 == -1 || v89 > *(void *)(v3 + *v6)) {
              break;
            }
            char v90 = *(unsigned char *)(*(void *)(v3 + *v26) + v88);
            *(void *)(v3 + v87) = v89;
            v86 |= (unint64_t)(v90 & 0x7F) << v84;
            if (v90 < 0)
            {
              v84 += 7;
              BOOL v34 = v85++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_206;
          }
          *(unsigned char *)(v3 + *v24) = 1;
LABEL_206:
          PBRepeatedInt32Add();
          goto LABEL_192;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_236;
        }
        while (1)
        {
          int v71 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v23) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v72 = 0;
          unsigned int v73 = 0;
          uint64_t v74 = 0;
          uint64_t v75 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v76 = *v23;
            uint64_t v77 = *(void *)(v3 + v76);
            unint64_t v78 = v77 + 1;
            if (v77 == -1 || v78 > *(void *)(v3 + *v6)) {
              break;
            }
            char v79 = *(unsigned char *)(*(void *)(v3 + *v75) + v77);
            *(void *)(v3 + v76) = v78;
            v74 |= (unint64_t)(v79 & 0x7F) << v72;
            if (v79 < 0)
            {
              v72 += 7;
              BOOL v34 = v73++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_149;
          }
          *(unsigned char *)(v3 + *v71) = 1;
LABEL_149:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
        uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
        char v21 = v96;
        goto LABEL_193;
      default:
        if ((v95 & 1) == 0 || (*(unsigned char *)(a1 + 172) & 8) != 0)
        {
LABEL_150:
          char v80 = PBReaderSkipValueWithTag();
          unint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          char v21 = v96;
          if ((v80 & 1) == 0)
          {
            int v97 = 0;
            goto LABEL_208;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v51 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v52 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v51;
          }
          int v53 = PBUnknownFieldAdd();
          char v21 = v96;
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          if (!v53)
          {
            int v97 = 0;
            goto LABEL_210;
          }
        }
        goto LABEL_194;
    }
  }
}

void sub_1894490DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189449254(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894493C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189449540(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894496B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189449828(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189449998(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189449B10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189449C88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189449E00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18944A06C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18944A1E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18944A358(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18944BCF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAutocompleteParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 104) readAll:1];
  [*(id *)(a1 + 64) readAll:1];
  [*(id *)(a1 + 112) readAll:1];
  [*(id *)(a1 + 56) readAll:1];
  [*(id *)(a1 + 136) readAll:1];
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 144) readAll:1];
  [*(id *)(a1 + 88) readAll:1];
  [*(id *)(a1 + 120) readAll:1];
  [*(id *)(a1 + 128) readAll:1];
  [*(id *)(a1 + 72) readAll:1];
  [*(id *)(a1 + 80) readAll:1];
  int v2 = *(void **)(a1 + 96);

  return [v2 readAll:1];
}

unint64_t GEOPDAutocompleteParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 156))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAutocompleteParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 160));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 152) = [v8 position];
  *(_DWORD *)(a1 + 156) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDAutocompleteParametersReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDAutocompleteParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAutocompleteParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDAutocompleteParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 160));
  return Specified;
}

void sub_18944BF98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAutocompleteParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18944BFFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_118;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_106;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_97;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteParametersFullEntriesOnlyIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_96;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteParametersAllEntriesIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_96;
        case 4u:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEOPDAutocompleteParametersLocalitiesAndLandmarksIsValid(a1))
          {
            goto LABEL_118;
          }
          goto LABEL_96;
        case 5u:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEOPDAutocompleteParametersAllEntriesWithBrowseIsValid(a1))
          {
            goto LABEL_118;
          }
          goto LABEL_96;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteParametersSiriSearchIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_96;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteParametersAddressOnlyIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_96;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteParametersVenueSearchIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_96;
        case 9u:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEOPDAutocompleteParametersBrandProfileSearchIsValid(a1))
          {
            goto LABEL_118;
          }
          goto LABEL_96;
        case 0xAu:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEOPDAutocompleteParametersOfflineRegionSearchIsValid(a1))
          {
            goto LABEL_118;
          }
          goto LABEL_96;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteParametersPoiAddressOnlyIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_96;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteFilterIsValid(a1)) {
            goto LABEL_118;
          }
          goto LABEL_96;
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_118;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_106;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_97;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_118;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_106;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_97;
          }
        case 0xFu:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEOPDAutocompleteSessionDataIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_118;
          }
          goto LABEL_96;
        case 0x10u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDAutocompleteParametersCollectionOnlyIsValid(a1)) {
            goto LABEL_96;
          }
          goto LABEL_118;
        case 0x11u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_118:
              PBReaderRecallMark();
              return 0;
            }
LABEL_108:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v38 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v39 = *v2;
                uint64_t v40 = *(void *)&a1[v39];
                unint64_t v41 = v40 + 1;
                if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
                  break;
                }
                int v42 = *(char *)(*(void *)&a1[*v5] + v40);
                *(void *)&a1[v39] = v41;
                if (v42 < 0)
                {
                  BOOL v13 = v38++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_108;
              }
              a1[*v4] = 1;
            }
LABEL_96:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_118;
            }
            while (1)
            {
              uint64_t v33 = *v2;
              uint64_t v34 = *(void *)&a1[v33];
              unint64_t v35 = v34 + 1;
              if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
                break;
              }
              int v36 = *(char *)(*(void *)&a1[*v5] + v34);
              *(void *)&a1[v33] = v35;
              if (v36 < 0)
              {
                unsigned int v37 = v15++;
                if (v37 <= 8) {
                  continue;
                }
              }
              goto LABEL_97;
            }
LABEL_106:
            a1[*v4] = 1;
          }
LABEL_97:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_117;
          }
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_118;
          }
          goto LABEL_97;
      }
    }
  }
LABEL_117:
  BOOL v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

BOOL GEOPDAutocompleteParametersFullEntriesOnlyIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_46;
          }
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
            goto LABEL_46;
          }
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_42;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_43;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDAutocompleteParametersAllEntriesIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_46;
          }
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
            goto LABEL_46;
          }
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_42;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_43;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDAutocompleteParametersLocalitiesAndLandmarksIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_46;
          }
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
            goto LABEL_46;
          }
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_42;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_43;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDAutocompleteParametersAllEntriesWithBrowseIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_235;
          }
          goto LABEL_59;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
            goto LABEL_235;
          }
          goto LABEL_163;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_235;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_180;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_181;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_235;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_180;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_181;
          }
        case 5u:
          if (v15 == 2) {
            goto LABEL_59;
          }
          goto LABEL_235;
        case 6u:
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteEntryIsValid(a1)) {
            goto LABEL_235;
          }
          goto LABEL_163;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_235;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_180;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_181;
          }
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDVenueIdentifierIsValid(a1)) {
            goto LABEL_235;
          }
          goto LABEL_163;
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_235;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_180;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_181;
          }
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDRetainedSearchMetadataIsValid(a1)) {
            goto LABEL_235;
          }
          goto LABEL_163;
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_235;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_180;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_181;
          }
        case 0xDu:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_235;
            }
            while (1)
            {
              uint64_t v43 = *v2;
              uint64_t v44 = *(void *)&a1[v43];
              unint64_t v45 = v44 + 1;
              if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
                goto LABEL_180;
              }
              int v46 = *(char *)(*(void *)&a1[*v5] + v44);
              *(void *)&a1[v43] = v45;
              if (v46 < 0)
              {
                unsigned int v47 = v15++;
                if (v47 <= 8) {
                  continue;
                }
              }
              goto LABEL_181;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_235;
          }
LABEL_184:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v103 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v104 = *v2;
              uint64_t v105 = *(void *)&a1[v104];
              unint64_t v106 = v105 + 1;
              if (v105 == -1 || v106 > *(void *)&a1[*v3]) {
                break;
              }
              int v107 = *(char *)(*(void *)&a1[*v5] + v105);
              *(void *)&a1[v104] = v106;
              if (v107 < 0)
              {
                BOOL v13 = v103++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_184;
            }
            a1[*v4] = 1;
          }
          goto LABEL_163;
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_235;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_180;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_181;
          }
        case 0x10u:
          if ((v8 & 7) != 0) {
            goto LABEL_235;
          }
          unsigned int v53 = 0;
          while (1)
          {
            uint64_t v54 = *v2;
            uint64_t v55 = *(void *)&a1[v54];
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
              goto LABEL_180;
            }
            int v57 = *(char *)(*(void *)&a1[*v5] + v55);
            *(void *)&a1[v54] = v56;
            if (v57 < 0)
            {
              BOOL v22 = v53++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_181;
          }
        case 0x11u:
          if ((v8 & 7) != 0) {
            goto LABEL_235;
          }
          unsigned int v58 = 0;
          while (1)
          {
            uint64_t v59 = *v2;
            uint64_t v60 = *(void *)&a1[v59];
            unint64_t v61 = v60 + 1;
            if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
              goto LABEL_180;
            }
            int v62 = *(char *)(*(void *)&a1[*v5] + v60);
            *(void *)&a1[v59] = v61;
            if (v62 < 0)
            {
              BOOL v22 = v58++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_181;
          }
        case 0x12u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_235;
            }
            while (1)
            {
              uint64_t v63 = *v2;
              uint64_t v64 = *(void *)&a1[v63];
              unint64_t v65 = v64 + 1;
              if (v64 == -1 || v65 > *(void *)&a1[*v3]) {
                goto LABEL_180;
              }
              int v66 = *(char *)(*(void *)&a1[*v5] + v64);
              *(void *)&a1[v63] = v65;
              if (v66 < 0)
              {
                unsigned int v67 = v15++;
                if (v67 <= 8) {
                  continue;
                }
              }
              goto LABEL_181;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_235;
          }
LABEL_194:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v108 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v109 = *v2;
              uint64_t v110 = *(void *)&a1[v109];
              unint64_t v111 = v110 + 1;
              if (v110 == -1 || v111 > *(void *)&a1[*v3]) {
                break;
              }
              int v112 = *(char *)(*(void *)&a1[*v5] + v110);
              *(void *)&a1[v109] = v111;
              if (v112 < 0)
              {
                BOOL v13 = v108++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_194;
            }
            a1[*v4] = 1;
          }
          goto LABEL_163;
        case 0x13u:
          if ((v8 & 7) != 0) {
            goto LABEL_235;
          }
          unsigned int v68 = 0;
          while (1)
          {
            uint64_t v69 = *v2;
            uint64_t v70 = *(void *)&a1[v69];
            unint64_t v71 = v70 + 1;
            if (v70 == -1 || v71 > *(void *)&a1[*v3]) {
              goto LABEL_180;
            }
            int v72 = *(char *)(*(void *)&a1[*v5] + v70);
            *(void *)&a1[v69] = v71;
            if (v72 < 0)
            {
              BOOL v22 = v68++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_181;
          }
        case 0x14u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_235;
            }
            while (1)
            {
              uint64_t v73 = *v2;
              uint64_t v74 = *(void *)&a1[v73];
              unint64_t v75 = v74 + 1;
              if (v74 == -1 || v75 > *(void *)&a1[*v3]) {
                goto LABEL_180;
              }
              int v76 = *(char *)(*(void *)&a1[*v5] + v74);
              *(void *)&a1[v73] = v75;
              if (v76 < 0)
              {
                unsigned int v77 = v15++;
                if (v77 <= 8) {
                  continue;
                }
              }
              goto LABEL_181;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_235;
          }
LABEL_204:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v113 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v114 = *v2;
              uint64_t v115 = *(void *)&a1[v114];
              unint64_t v116 = v115 + 1;
              if (v115 == -1 || v116 > *(void *)&a1[*v3]) {
                break;
              }
              int v117 = *(char *)(*(void *)&a1[*v5] + v115);
              *(void *)&a1[v114] = v116;
              if (v117 < 0)
              {
                BOOL v13 = v113++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_204;
            }
            a1[*v4] = 1;
          }
          goto LABEL_163;
        case 0x15u:
          if ((v8 & 7) != 0) {
            goto LABEL_235;
          }
          unsigned int v78 = 0;
          while (1)
          {
            uint64_t v79 = *v2;
            uint64_t v80 = *(void *)&a1[v79];
            unint64_t v81 = v80 + 1;
            if (v80 == -1 || v81 > *(void *)&a1[*v3]) {
              goto LABEL_180;
            }
            int v82 = *(char *)(*(void *)&a1[*v5] + v80);
            *(void *)&a1[v79] = v81;
            if (v82 < 0)
            {
              BOOL v22 = v78++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_181;
          }
        case 0x16u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_235;
            }
            while (1)
            {
              uint64_t v83 = *v2;
              uint64_t v84 = *(void *)&a1[v83];
              unint64_t v85 = v84 + 1;
              if (v84 == -1 || v85 > *(void *)&a1[*v3]) {
                goto LABEL_180;
              }
              int v86 = *(char *)(*(void *)&a1[*v5] + v84);
              *(void *)&a1[v83] = v85;
              if (v86 < 0)
              {
                unsigned int v87 = v15++;
                if (v87 <= 8) {
                  continue;
                }
              }
              goto LABEL_181;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_235;
          }
LABEL_214:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v118 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v119 = *v2;
              uint64_t v120 = *(void *)&a1[v119];
              unint64_t v121 = v120 + 1;
              if (v120 == -1 || v121 > *(void *)&a1[*v3]) {
                break;
              }
              int v122 = *(char *)(*(void *)&a1[*v5] + v120);
              *(void *)&a1[v119] = v121;
              if (v122 < 0)
              {
                BOOL v13 = v118++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_214;
            }
            a1[*v4] = 1;
          }
          goto LABEL_163;
        case 0x17u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSSearchEvChargingParametersIsValid(a1)) {
            goto LABEL_235;
          }
          goto LABEL_163;
        case 0x18u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_235:
              PBReaderRecallMark();
              return 0;
            }
LABEL_224:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v123 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v124 = *v2;
                uint64_t v125 = *(void *)&a1[v124];
                unint64_t v126 = v125 + 1;
                if (v125 == -1 || v126 > *(void *)&a1[*v3]) {
                  break;
                }
                int v127 = *(char *)(*(void *)&a1[*v5] + v125);
                *(void *)&a1[v124] = v126;
                if (v127 < 0)
                {
                  BOOL v13 = v123++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_224;
              }
              a1[*v4] = 1;
            }
LABEL_163:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_235;
            }
            while (1)
            {
              uint64_t v88 = *v2;
              uint64_t v89 = *(void *)&a1[v88];
              unint64_t v90 = v89 + 1;
              if (v89 == -1 || v90 > *(void *)&a1[*v3]) {
                break;
              }
              int v91 = *(char *)(*(void *)&a1[*v5] + v89);
              *(void *)&a1[v88] = v90;
              if (v91 < 0)
              {
                unsigned int v92 = v15++;
                if (v92 <= 8) {
                  continue;
                }
              }
              goto LABEL_181;
            }
LABEL_180:
            a1[*v4] = 1;
          }
LABEL_181:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_233;
          }
          break;
        case 0x19u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDAutocompleteOriginationInfoIsValid(a1)) {
            goto LABEL_163;
          }
          goto LABEL_235;
        case 0x1Au:
          if ((v8 & 7) != 0) {
            goto LABEL_235;
          }
          unsigned int v93 = 0;
          while (1)
          {
            uint64_t v94 = *v2;
            uint64_t v95 = *(void *)&a1[v94];
            unint64_t v96 = v95 + 1;
            if (v95 == -1 || v96 > *(void *)&a1[*v3]) {
              goto LABEL_180;
            }
            int v97 = *(char *)(*(void *)&a1[*v5] + v95);
            *(void *)&a1[v94] = v96;
            if (v97 < 0)
            {
              BOOL v22 = v93++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_181;
          }
        case 0x1Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_235;
          }
          unsigned int v98 = 0;
          while (1)
          {
            uint64_t v99 = *v2;
            uint64_t v100 = *(void *)&a1[v99];
            unint64_t v101 = v100 + 1;
            if (v100 == -1 || v101 > *(void *)&a1[*v3]) {
              goto LABEL_180;
            }
            int v102 = *(char *)(*(void *)&a1[*v5] + v100);
            *(void *)&a1[v99] = v101;
            if (v102 < 0)
            {
              BOOL v22 = v98++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_181;
          }
        default:
LABEL_59:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_235;
          }
          goto LABEL_181;
      }
    }
  }
LABEL_233:
  BOOL v128 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v128;
}

BOOL GEOPDAutocompleteParametersSiriSearchIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_56;
          }
          goto LABEL_42;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
            goto LABEL_56;
          }
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_52;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_53;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_52;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_53;
          }
        case 5u:
          if (v15 == 2) {
            goto LABEL_42;
          }
          goto LABEL_56;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v28 = 0;
          break;
        default:
LABEL_42:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_56:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_53;
      }
LABEL_52:
      a1[*v4] = 1;
LABEL_53:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOPDAutocompleteParametersAddressOnlyIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_46;
          }
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
            goto LABEL_46;
          }
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_42;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_43;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDAutocompleteParametersVenueSearchIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_79;
          }
          goto LABEL_75;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
            goto LABEL_79;
          }
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_79;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_73;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_76;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_79;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_73;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_76;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_79;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_73;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_76;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_79;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_73;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_76;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_79;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_73;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_76;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_79;
          }
          unsigned int v43 = 0;
          break;
        case 9u:
          if (v15 == 2) {
            goto LABEL_75;
          }
          goto LABEL_79;
        default:
LABEL_75:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_79:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v44 = *v2;
        uint64_t v45 = *(void *)&a1[v44];
        unint64_t v46 = v45 + 1;
        if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
          break;
        }
        int v47 = *(char *)(*(void *)&a1[*v5] + v45);
        *(void *)&a1[v44] = v46;
        if (v47 < 0)
        {
          BOOL v22 = v43++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_76;
      }
LABEL_73:
      a1[*v4] = 1;
LABEL_76:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

BOOL GEOPDAutocompleteParametersBrandProfileSearchIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_46;
          }
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
            goto LABEL_46;
          }
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_42;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_43;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDAutocompleteParametersOfflineRegionSearchIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_46;
          }
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
            goto LABEL_46;
          }
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_42;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_43;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDAutocompleteParametersPoiAddressOnlyIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_46;
          }
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
            goto LABEL_46;
          }
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_42;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_43;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDAutocompleteParametersCollectionOnlyIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_33;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_33;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDViewportInfoIsValid(a1)) {
          goto LABEL_34;
        }
LABEL_30:
        PBReaderRecallMark();
        goto LABEL_32;
      }
      if (v17 == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_34:
        PBReaderRecallMark();
        return 0;
      }
LABEL_32:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_33;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
      goto LABEL_34;
    }
    goto LABEL_30;
  }
LABEL_33:
  BOOL v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

void sub_18944F1F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAutocompleteParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  unsigned int v2 = *(_DWORD *)(a1 + 172);
  if ((v2 & 0x40000) != 0) {
    return 1;
  }
  if ((v2 & 0x1000) != 0)
  {
    if (GEOPDAutocompleteParametersFullEntriesOnlyIsDirty(*(void *)(a1 + 104))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEOPDAutocompleteParametersAllEntriesIsDirty(*(void *)(a1 + 64))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x2000) != 0)
  {
    if (GEOPDAutocompleteParametersLocalitiesAndLandmarksIsDirty(*(void *)(a1 + 112))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEOPDAutocompleteParametersAllEntriesWithBrowseIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x10000) != 0)
  {
    if (GEOPDAutocompleteParametersSiriSearchIsDirty(*(void *)(a1 + 136))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOPDAutocompleteParametersAddressOnlyIsDirty(*(void *)(a1 + 48))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x20000) != 0)
  {
    if (GEOPDAutocompleteParametersVenueSearchIsDirty(*(void *)(a1 + 144))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x400) != 0)
  {
    if (GEOPDAutocompleteParametersBrandProfileSearchIsDirty(*(void *)(a1 + 88))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x4000) != 0)
  {
    if (GEOPDAutocompleteParametersOfflineRegionSearchIsDirty(*(void *)(a1 + 120))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x8000) != 0)
  {
    if (GEOPDAutocompleteParametersPoiAddressOnlyIsDirty(*(void *)(a1 + 128))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x100) == 0) {
    goto LABEL_35;
  }
  if (GEOPDAutocompleteFilterIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
    return 1;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 172);
LABEL_35:
  if ((v2 & 0x200) != 0) {
    return 1;
  }
  if ((v2 & 0x800) != 0)
  {
    if (GEOPDAutocompleteParametersCollectionOnlyIsDirty(*(void *)(a1 + 96))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 172);
  }
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEOPDAutocompleteParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDAutocompleteParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 40);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOPDAutocompleteParametersClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasAllEntriesWithBrowse]
    && ([a1 allEntriesWithBrowse],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOPDAutocompleteParametersAllEntriesWithBrowseHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    unsigned int v7 = [a1 allEntriesWithBrowse];
    id v8 = (id)[v7 copy];

    GEOPDAutocompleteParametersAllEntriesWithBrowseClearSensitiveFields(v8, a2, 0);
    [a1 setAllEntriesWithBrowse:v8];
  }
  else
  {
    id v8 = [a1 allEntriesWithBrowse];
    [v8 clearSensitiveFields:a2];
  }
}

uint64_t GEOPDAutocompleteParametersAllEntriesWithBrowseHasSensitiveFields(void *a1, uint64_t a2)
{
  if (!a1) {
    return 0;
  }
  uint64_t v4 = [a1 categorySuggestionEntry];
  if (GEOPDAutocompleteEntryHasSensitiveFields(v4, a2))
  {
    uint64_t v5 = 1;
  }
  else
  {
    char v6 = [a1 querySuggestionEntry];
    uint64_t v5 = (uint64_t)GEOPDAutocompleteEntryHasSensitiveFields(v6, a2);
  }
  return v5;
}

void GEOPDAutocompleteParametersAllEntriesWithBrowseClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3)
  {
    if ([a1 hasCategorySuggestionEntry]
      && ([a1 categorySuggestionEntry],
          uint64_t v5 = objc_claimAutoreleasedReturnValue(),
          unsigned int v6 = GEOPDAutocompleteEntryHasSensitiveFields(v5, a2),
          v5,
          v6))
    {
      unsigned int v7 = [a1 categorySuggestionEntry];
      id v8 = (void *)[v7 copy];

      uint64_t v9 = [v8 business];
      [v9 clearSensitiveFields:a2];

      [a1 setCategorySuggestionEntry:v8];
    }
    else
    {
      id v8 = [a1 categorySuggestionEntry];
      [v8 clearSensitiveFields:a2];
    }

    if ([a1 hasQuerySuggestionEntry])
    {
      unint64_t v11 = [a1 querySuggestionEntry];
      unsigned int v12 = GEOPDAutocompleteEntryHasSensitiveFields(v11, a2);

      if (v12)
      {
        BOOL v13 = [a1 querySuggestionEntry];
        id v15 = (id)[v13 copy];

        int v14 = [v15 business];
        [v14 clearSensitiveFields:a2];

        [a1 setQuerySuggestionEntry:v15];
        goto LABEL_11;
      }
    }
  }
  else
  {
    uint64_t v10 = [a1 categorySuggestionEntry];
    [v10 clearSensitiveFields:a2];
  }
  id v15 = [a1 querySuggestionEntry];
  [v15 clearSensitiveFields:a2];
LABEL_11:
}

void sub_18944FEE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894507E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189450C10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersAddressOnlyReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v68 = v17;
        char v69 = v9;
        char v70 = v18 | v17;
        if ((v18 | v9)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        char v71 = (v19 == 0) | v18;
        BOOL v72 = v18;
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_87;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_87:
      int v66 = 1;
      goto LABEL_88;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v72;
    if ((v71 & 1) == 0)
    {
      uint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_107;
        }
        char v60 = 16 * *(unsigned char *)(a1 + 60);
        goto LABEL_84;
      case 2:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_107;
          }
          char v60 = 8 * *(unsigned char *)(a1 + 60);
LABEL_84:
          v10 += v60 >> 7;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_107;
        }
        uint64_t v44 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v44, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v44;
LABEL_53:

          --v10;
LABEL_85:
          int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_86:
          if (!(v70 & 1 | (v10 != 0))) {
            goto LABEL_87;
          }
          continue;
        }

LABEL_107:
        int v66 = 0;
        int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_88:
        unsigned int v67 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
        if (v68) {
LABEL_89:
        }
          *(unsigned char *)(a1 + v67[986]) |= 4u;
        if (v72 || (v66 & 1) == 0)
        {
          *(unsigned char *)(a1 + v67[986]) |= 8u;
          *(unsigned char *)(a1 + v67[986]) |= 0x10u;
          goto LABEL_100;
        }
        if (v19)
        {
          while (2)
          {
            while (1)
            {
              int v62 = *v19++;
              int v61 = v62;
              if (v62 == 1) {
                break;
              }
              if (v61 == 2)
              {
                char v63 = 16;
                goto LABEL_99;
              }
              if (!v61) {
                goto LABEL_100;
              }
            }
            char v63 = 8;
LABEL_99:
            *(unsigned char *)(a1 + v67[986]) |= v63;
            continue;
          }
        }
LABEL_100:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v72)
        {
          uint64_t v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if ((v69 & 1) == 0) {
          goto LABEL_70;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v48 = *v20;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v22) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v30 = v46++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_75:
        *(_DWORD *)(a1 + 52) = v47;
        goto LABEL_86;
      case 4:
        if ((v69 & 1) == 0) {
          goto LABEL_70;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v55 = *v20;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v22) + v56);
            *(void *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              BOOL v30 = v53++ >= 9;
              if (v30)
              {
                uint64_t v54 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v54 = 0;
        }
LABEL_79:
        *(unsigned char *)(a1 + 56) = v54 != 0;
        goto LABEL_86;
      default:
        if ((v68 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          char v59 = PBReaderSkipValueWithTag();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v59 & 1) == 0)
          {
            int v66 = 0;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v66 = 0;
            unsigned int v67 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
            goto LABEL_89;
          }
        }
        goto LABEL_86;
    }
  }
}

void sub_189451478(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189451D8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersAddressOnlyReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAutocompleteParametersAddressOnlyReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDAutocompleteParametersAddressOnlyReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDAutocompleteParametersAddressOnlyReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAutocompleteParametersAddressOnlyReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189451F34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersAddressOnlyReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAutocompleteParametersAddressOnlyReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189451F98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18945218C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersAddressOnlyIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189452538(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894528AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189452B60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersAllEntriesReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v68 = v17;
        char v69 = v9;
        char v70 = v18 | v17;
        if ((v18 | v9)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        char v71 = (v19 == 0) | v18;
        BOOL v72 = v18;
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_87;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_87:
      int v66 = 1;
      goto LABEL_88;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v72;
    if ((v71 & 1) == 0)
    {
      uint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_107;
        }
        char v60 = 16 * *(unsigned char *)(a1 + 60);
        goto LABEL_84;
      case 2:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_107;
          }
          char v60 = 8 * *(unsigned char *)(a1 + 60);
LABEL_84:
          v10 += v60 >> 7;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_107;
        }
        uint64_t v44 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v44, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v44;
LABEL_53:

          --v10;
LABEL_85:
          int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_86:
          if (!(v70 & 1 | (v10 != 0))) {
            goto LABEL_87;
          }
          continue;
        }

LABEL_107:
        int v66 = 0;
        int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_88:
        unsigned int v67 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
        if (v68) {
LABEL_89:
        }
          *(unsigned char *)(a1 + v67[996]) |= 4u;
        if (v72 || (v66 & 1) == 0)
        {
          *(unsigned char *)(a1 + v67[996]) |= 8u;
          *(unsigned char *)(a1 + v67[996]) |= 0x10u;
          goto LABEL_100;
        }
        if (v19)
        {
          while (2)
          {
            while (1)
            {
              int v62 = *v19++;
              int v61 = v62;
              if (v62 == 1) {
                break;
              }
              if (v61 == 2)
              {
                char v63 = 16;
                goto LABEL_99;
              }
              if (!v61) {
                goto LABEL_100;
              }
            }
            char v63 = 8;
LABEL_99:
            *(unsigned char *)(a1 + v67[996]) |= v63;
            continue;
          }
        }
LABEL_100:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v72)
        {
          uint64_t v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if ((v69 & 1) == 0) {
          goto LABEL_70;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v48 = *v20;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v22) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v30 = v46++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_75:
        *(_DWORD *)(a1 + 52) = v47;
        goto LABEL_86;
      case 4:
        if ((v69 & 1) == 0) {
          goto LABEL_70;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v55 = *v20;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v22) + v56);
            *(void *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              BOOL v30 = v53++ >= 9;
              if (v30)
              {
                uint64_t v54 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v54 = 0;
        }
LABEL_79:
        *(unsigned char *)(a1 + 56) = v54 != 0;
        goto LABEL_86;
      default:
        if ((v68 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          char v59 = PBReaderSkipValueWithTag();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v59 & 1) == 0)
          {
            int v66 = 0;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v66 = 0;
            unsigned int v67 = &OBJC_IVAR___GEOTransitSectionOption__defaultSectionIndex;
            goto LABEL_89;
          }
        }
        goto LABEL_86;
    }
  }
}

void sub_1894533C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189453B00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersAllEntriesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAutocompleteParametersAllEntriesReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDAutocompleteParametersAllEntriesReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDAutocompleteParametersAllEntriesReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAutocompleteParametersAllEntriesReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189453CA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersAllEntriesReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAutocompleteParametersAllEntriesReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189453D0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189453F00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersAllEntriesIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1894542AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189454620(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189454960(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersAllEntriesWithBrowseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 224));
  unsigned int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 220);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 216)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = *(_DWORD *)(a1 + 252);
  uint32x4_t v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  unsigned int v15 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62F510), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62F520), v14)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A62F530), v14)))+ ((v12 >> 15) & 1)+ ((v12 >> 18) & 1)+ ((v12 >> 12) & 1);
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 0xA;
        char v20 = v19 & ~(_BYTE)v11 | v9;
        char v21 = v19 | v11;
        BOOL v22 = (int *)MEMORY[0x1E4F940E8];
        if (((v19 | v11) | v8)) {
          char v23 = 0;
        }
        else {
          char v23 = a3;
        }
        int v24 = 1;
        char v25 = v20;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_381;
        }
        char v224 = v20;
        char v226 = v21 | v20;
        uint64_t v26 = (int *)MEMORY[0x1E4F940C8];
        char v227 = (v23 == 0) | v21;
        uint64_t v27 = (int *)MEMORY[0x1E4F940B8];
        char v225 = v21;
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v9;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v26)) {
      goto LABEL_379;
    }
    char v28 = 0;
    unsigned int v29 = 0;
    unint64_t v30 = 0;
    while (1)
    {
      uint64_t v31 = *v22;
      uint64_t v32 = *(void *)(v3 + v31);
      unint64_t v33 = v32 + 1;
      if (v32 == -1 || v33 > *(void *)(v3 + *v6)) {
        break;
      }
      char v34 = *(unsigned char *)(*(void *)(v3 + *v27) + v32);
      *(void *)(v3 + v31) = v33;
      v30 |= (unint64_t)(v34 & 0x7F) << v28;
      if ((v34 & 0x80) == 0) {
        goto LABEL_25;
      }
      v28 += 7;
      BOOL v35 = v29++ >= 9;
      if (v35)
      {
        unint64_t v30 = 0;
        int v36 = *(unsigned __int8 *)(v3 + *v26);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v26) = 1;
LABEL_25:
    int v36 = *(unsigned __int8 *)(v3 + *v26);
    if (*(unsigned char *)(v3 + *v26)) {
      unint64_t v30 = 0;
    }
LABEL_27:
    int v37 = v30 & 7;
    if (v36 || v37 == 4)
    {
LABEL_379:
      int v24 = 1;
      goto LABEL_380;
    }
    unint64_t v39 = v30 >> 3;
    BOOL v40 = v21;
    if ((v227 & 1) == 0)
    {
      id v41 = v23;
      do
      {
        int v43 = *v41++;
        int v42 = v43;
        BOOL v40 = v43 != 0;
        if (v43) {
          BOOL v44 = v42 == v39;
        }
        else {
          BOOL v44 = 1;
        }
      }
      while (!v44);
    }
    switch((int)v39)
    {
      case 1:
        if (!v40) {
          goto LABEL_267;
        }
        if ((*(unsigned char *)(a1 + 254) & 0x80) == 0)
        {
          uint64_t v45 = PBReaderReadString();
          uint64_t v46 = 184;
          goto LABEL_66;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_408;
        }
        int v184 = (int)(*(_DWORD *)(a1 + 252) << 8) >> 31;
        goto LABEL_337;
      case 2:
        if (!v40) {
          goto LABEL_267;
        }
        if ((*(unsigned char *)(a1 + 255) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_408;
          }
          int v184 = (32 * *(_DWORD *)(a1 + 252)) >> 31;
          goto LABEL_337;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_408;
        }
        uint64_t v47 = objc_alloc_init(GEOPDViewportInfo);
        if (!GEOPDViewportInfoReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_407;
        }
        PBReaderRecallMark();
        uint64_t v48 = 208;
        goto LABEL_242;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_267;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        *(_DWORD *)(a1 + 252) |= 2u;
        while (2)
        {
          uint64_t v52 = *v22;
          uint64_t v53 = *(void *)(v3 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(v3 + *v27) + v53);
            *(void *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v35 = v50++ >= 9;
              if (v35)
              {
                LODWORD(v51) = 0;
                goto LABEL_272;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          LODWORD(v51) = 0;
        }
LABEL_272:
        uint64_t v181 = 232;
        goto LABEL_309;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_267;
        }
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v58 = 0;
        *(_DWORD *)(a1 + 252) |= 8u;
        while (2)
        {
          uint64_t v59 = *v22;
          uint64_t v60 = *(void *)(v3 + v59);
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(v3 + *v27) + v60);
            *(void *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              BOOL v35 = v57++ >= 9;
              if (v35)
              {
                uint64_t v58 = 0;
                goto LABEL_276;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          uint64_t v58 = 0;
        }
LABEL_276:
        BOOL v182 = v58 != 0;
        uint64_t v183 = 240;
        goto LABEL_318;
      case 5:
        if (!v40) {
          goto LABEL_267;
        }
        if ((*(unsigned char *)(a1 + 254) & 8) == 0)
        {
          uint64_t v45 = PBReaderReadData();
          uint64_t v46 = 152;
LABEL_66:
          char v63 = *(void **)(a1 + v46);
          *(void *)(a1 + v46) = v45;
          goto LABEL_243;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_408;
        }
        int v184 = (int)(*(_DWORD *)(a1 + 252) << 12) >> 31;
        goto LABEL_337;
      case 6:
        if (!v40) {
          goto LABEL_267;
        }
        if ((*(unsigned char *)(a1 + 254) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_408;
          }
          int v184 = (int)(*(_DWORD *)(a1 + 252) << 11) >> 31;
          goto LABEL_337;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_408;
        }
        uint64_t v47 = objc_alloc_init(GEOPDAutocompleteEntry);
        if (!GEOPDAutocompleteEntryReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1)) {
          goto LABEL_407;
        }
        PBReaderRecallMark();
        uint64_t v48 = 160;
        goto LABEL_242;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_267;
        }
        char v64 = 0;
        unsigned int v65 = 0;
        uint64_t v66 = 0;
        *(_DWORD *)(a1 + 252) |= 0x10u;
        while (2)
        {
          uint64_t v67 = *v22;
          uint64_t v68 = *(void *)(v3 + v67);
          unint64_t v69 = v68 + 1;
          if (v68 == -1 || v69 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v70 = *(unsigned char *)(*(void *)(v3 + *v27) + v68);
            *(void *)(v3 + v67) = v69;
            v66 |= (unint64_t)(v70 & 0x7F) << v64;
            if (v70 < 0)
            {
              v64 += 7;
              BOOL v35 = v65++ >= 9;
              if (v35)
              {
                uint64_t v66 = 0;
                goto LABEL_280;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          uint64_t v66 = 0;
        }
LABEL_280:
        BOOL v182 = v66 != 0;
        uint64_t v183 = 241;
        goto LABEL_318;
      case 8:
        if (!v40) {
          goto LABEL_267;
        }
        if ((*(unsigned char *)(a1 + 255) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_408;
          }
          int v184 = (int)(*(_DWORD *)(a1 + 252) << 6) >> 31;
          goto LABEL_337;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_408;
        }
        uint64_t v47 = objc_alloc_init(GEOPDVenueIdentifier);
        if (!GEOPDVenueIdentifierReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1)) {
          goto LABEL_407;
        }
        PBReaderRecallMark();
        uint64_t v48 = 200;
        goto LABEL_242;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_267;
        }
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v76 = 0;
        *(_DWORD *)(a1 + 252) |= 0x80u;
        while (2)
        {
          uint64_t v77 = *v22;
          uint64_t v78 = *(void *)(v3 + v77);
          unint64_t v79 = v78 + 1;
          if (v78 == -1 || v79 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v80 = *(unsigned char *)(*(void *)(v3 + *v27) + v78);
            *(void *)(v3 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              BOOL v35 = v75++ >= 9;
              if (v35)
              {
                uint64_t v76 = 0;
                goto LABEL_284;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          uint64_t v76 = 0;
        }
LABEL_284:
        BOOL v182 = v76 != 0;
        uint64_t v183 = 244;
        goto LABEL_318;
      case 11:
        if (!v40) {
          goto LABEL_267;
        }
        if (*(unsigned char *)(a1 + 255))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_408;
          }
          int v184 = (int)(*(_DWORD *)(a1 + 252) << 7) >> 31;
          goto LABEL_337;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_408;
        }
        uint64_t v47 = objc_alloc_init(GEOPDRetainedSearchMetadata);
        if (!GEOPDRetainedSearchMetadataReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1)) {
          goto LABEL_407;
        }
        PBReaderRecallMark();
        uint64_t v48 = 192;
        goto LABEL_242;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_267;
        }
        char v81 = 0;
        unsigned int v82 = 0;
        uint64_t v83 = 0;
        *(_DWORD *)(a1 + 252) |= 0x800u;
        while (2)
        {
          uint64_t v84 = *v22;
          uint64_t v85 = *(void *)(v3 + v84);
          unint64_t v86 = v85 + 1;
          if (v85 == -1 || v86 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v87 = *(unsigned char *)(*(void *)(v3 + *v27) + v85);
            *(void *)(v3 + v84) = v86;
            v83 |= (unint64_t)(v87 & 0x7F) << v81;
            if (v87 < 0)
            {
              v81 += 7;
              BOOL v35 = v82++ >= 9;
              if (v35)
              {
                uint64_t v83 = 0;
                goto LABEL_288;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          uint64_t v83 = 0;
        }
LABEL_288:
        BOOL v182 = v83 != 0;
        uint64_t v183 = 248;
        goto LABEL_318;
      case 13:
        if (!v40 || (*(unsigned char *)(a1 + 254) & 1) != 0) {
          goto LABEL_267;
        }
        if (v37 != 2)
        {
          char v185 = 0;
          unsigned int v186 = 0;
          uint64_t v187 = 0;
          while (1)
          {
            uint64_t v188 = *v22;
            uint64_t v189 = *(void *)(v3 + v188);
            unint64_t v190 = v189 + 1;
            if (v189 == -1 || v190 > *(void *)(v3 + *v6)) {
              goto LABEL_373;
            }
            char v191 = *(unsigned char *)(*(void *)(v3 + *v27) + v189);
            *(void *)(v3 + v188) = v190;
            v187 |= (unint64_t)(v191 & 0x7F) << v185;
            if (v191 < 0)
            {
              v185 += 7;
              BOOL v35 = v186++ >= 9;
              if (!v35) {
                continue;
              }
            }
            goto LABEL_374;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_408;
        }
        while (1)
        {
          uint64_t v88 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_266;
          }
          char v89 = 0;
          unsigned int v90 = 0;
          uint64_t v91 = 0;
          unsigned int v92 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v93 = *v22;
            uint64_t v94 = *(void *)(v3 + v93);
            unint64_t v95 = v94 + 1;
            if (v94 == -1 || v95 > *(void *)(v3 + *v6)) {
              break;
            }
            char v96 = *(unsigned char *)(*(void *)(v3 + *v92) + v94);
            *(void *)(v3 + v93) = v95;
            v91 |= (unint64_t)(v96 & 0x7F) << v89;
            if (v96 < 0)
            {
              v89 += 7;
              BOOL v35 = v90++ >= 9;
              if (!v35) {
                continue;
              }
            }
            goto LABEL_126;
          }
          *(unsigned char *)(v3 + *v88) = 1;
LABEL_126:
          PBRepeatedInt32Add();
        }
      case 14:
        if (!v40) {
          goto LABEL_267;
        }
        if ((*(unsigned char *)(a1 + 254) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_408;
          }
          int v184 = (int)(*(_DWORD *)(a1 + 252) << 9) >> 31;
          goto LABEL_337;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_408;
        }
        uint64_t v47 = objc_alloc_init(GEOPDAutocompleteEntry);
        if (!GEOPDAutocompleteEntryReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1)) {
          goto LABEL_407;
        }
        PBReaderRecallMark();
        uint64_t v48 = 176;
        goto LABEL_242;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_267;
        }
        char v97 = 0;
        unsigned int v98 = 0;
        uint64_t v99 = 0;
        *(_DWORD *)(a1 + 252) |= 0x40u;
        while (2)
        {
          uint64_t v100 = *v22;
          uint64_t v101 = *(void *)(v3 + v100);
          unint64_t v102 = v101 + 1;
          if (v101 == -1 || v102 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v103 = *(unsigned char *)(*(void *)(v3 + *v27) + v101);
            *(void *)(v3 + v100) = v102;
            v99 |= (unint64_t)(v103 & 0x7F) << v97;
            if (v103 < 0)
            {
              v97 += 7;
              BOOL v35 = v98++ >= 9;
              if (v35)
              {
                uint64_t v99 = 0;
                goto LABEL_292;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          uint64_t v99 = 0;
        }
LABEL_292:
        BOOL v182 = v99 != 0;
        uint64_t v183 = 243;
        goto LABEL_318;
      case 16:
        if ((v8 & 1) == 0) {
          goto LABEL_267;
        }
        char v104 = 0;
        unsigned int v105 = 0;
        uint64_t v51 = 0;
        *(_DWORD *)(a1 + 252) |= 1u;
        while (2)
        {
          uint64_t v106 = *v22;
          uint64_t v107 = *(void *)(v3 + v106);
          unint64_t v108 = v107 + 1;
          if (v107 == -1 || v108 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v109 = *(unsigned char *)(*(void *)(v3 + *v27) + v107);
            *(void *)(v3 + v106) = v108;
            v51 |= (unint64_t)(v109 & 0x7F) << v104;
            if (v109 < 0)
            {
              v104 += 7;
              BOOL v35 = v105++ >= 9;
              if (v35)
              {
                LODWORD(v51) = 0;
                goto LABEL_296;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          LODWORD(v51) = 0;
        }
LABEL_296:
        uint64_t v181 = 228;
        goto LABEL_309;
      case 17:
        if ((v8 & 1) == 0) {
          goto LABEL_267;
        }
        char v110 = 0;
        unsigned int v111 = 0;
        uint64_t v112 = 0;
        *(_DWORD *)(a1 + 252) |= 0x200u;
        while (2)
        {
          uint64_t v113 = *v22;
          uint64_t v114 = *(void *)(v3 + v113);
          unint64_t v115 = v114 + 1;
          if (v114 == -1 || v115 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v116 = *(unsigned char *)(*(void *)(v3 + *v27) + v114);
            *(void *)(v3 + v113) = v115;
            v112 |= (unint64_t)(v116 & 0x7F) << v110;
            if (v116 < 0)
            {
              v110 += 7;
              BOOL v35 = v111++ >= 9;
              if (v35)
              {
                uint64_t v112 = 0;
                goto LABEL_300;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          uint64_t v112 = 0;
        }
LABEL_300:
        BOOL v182 = v112 != 0;
        uint64_t v183 = 246;
        goto LABEL_318;
      case 18:
        if (!v40 || (*(unsigned char *)(a1 + 253) & 0x40) != 0) {
          goto LABEL_267;
        }
        if (v37 != 2)
        {
          char v192 = 0;
          unsigned int v193 = 0;
          uint64_t v194 = 0;
          while (1)
          {
            uint64_t v195 = *v22;
            uint64_t v196 = *(void *)(v3 + v195);
            unint64_t v197 = v196 + 1;
            if (v196 == -1 || v197 > *(void *)(v3 + *v6)) {
              goto LABEL_373;
            }
            char v198 = *(unsigned char *)(*(void *)(v3 + *v27) + v196);
            *(void *)(v3 + v195) = v197;
            v194 |= (unint64_t)(v198 & 0x7F) << v192;
            if (v198 < 0)
            {
              v192 += 7;
              BOOL v35 = v193++ >= 9;
              if (!v35) {
                continue;
              }
            }
            goto LABEL_374;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_408;
        }
        while (1)
        {
          int v117 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_266;
          }
          char v118 = 0;
          unsigned int v119 = 0;
          uint64_t v120 = 0;
          unint64_t v121 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v122 = *v22;
            uint64_t v123 = *(void *)(v3 + v122);
            unint64_t v124 = v123 + 1;
            if (v123 == -1 || v124 > *(void *)(v3 + *v6)) {
              break;
            }
            char v125 = *(unsigned char *)(*(void *)(v3 + *v121) + v123);
            *(void *)(v3 + v122) = v124;
            v120 |= (unint64_t)(v125 & 0x7F) << v118;
            if (v125 < 0)
            {
              v118 += 7;
              BOOL v35 = v119++ >= 9;
              if (!v35) {
                continue;
              }
            }
            goto LABEL_170;
          }
          *(unsigned char *)(v3 + *v117) = 1;
LABEL_170:
          PBRepeatedInt32Add();
        }
      case 19:
        if ((v8 & 1) == 0) {
          goto LABEL_267;
        }
        char v126 = 0;
        unsigned int v127 = 0;
        uint64_t v128 = 0;
        *(_DWORD *)(a1 + 252) |= 0x100u;
        while (2)
        {
          uint64_t v129 = *v22;
          uint64_t v130 = *(void *)(v3 + v129);
          unint64_t v131 = v130 + 1;
          if (v130 == -1 || v131 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v132 = *(unsigned char *)(*(void *)(v3 + *v27) + v130);
            *(void *)(v3 + v129) = v131;
            v128 |= (unint64_t)(v132 & 0x7F) << v126;
            if (v132 < 0)
            {
              v126 += 7;
              BOOL v35 = v127++ >= 9;
              if (v35)
              {
                uint64_t v128 = 0;
                goto LABEL_304;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          uint64_t v128 = 0;
        }
LABEL_304:
        BOOL v182 = v128 != 0;
        uint64_t v183 = 245;
        goto LABEL_318;
      case 20:
        if (!v40 || (*(unsigned char *)(a1 + 253) & 0x20) != 0) {
          goto LABEL_267;
        }
        if (v37 != 2)
        {
          char v199 = 0;
          unsigned int v200 = 0;
          uint64_t v201 = 0;
          while (1)
          {
            uint64_t v202 = *v22;
            uint64_t v203 = *(void *)(v3 + v202);
            unint64_t v204 = v203 + 1;
            if (v203 == -1 || v204 > *(void *)(v3 + *v6)) {
              goto LABEL_373;
            }
            char v205 = *(unsigned char *)(*(void *)(v3 + *v27) + v203);
            *(void *)(v3 + v202) = v204;
            v201 |= (unint64_t)(v205 & 0x7F) << v199;
            if (v205 < 0)
            {
              v199 += 7;
              BOOL v35 = v200++ >= 9;
              if (!v35) {
                continue;
              }
            }
            goto LABEL_374;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_408;
        }
        while (1)
        {
          uint64_t v133 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_266;
          }
          char v134 = 0;
          unsigned int v135 = 0;
          uint64_t v136 = 0;
          unsigned int v137 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v138 = *v22;
            uint64_t v139 = *(void *)(v3 + v138);
            unint64_t v140 = v139 + 1;
            if (v139 == -1 || v140 > *(void *)(v3 + *v6)) {
              break;
            }
            char v141 = *(unsigned char *)(*(void *)(v3 + *v137) + v139);
            *(void *)(v3 + v138) = v140;
            v136 |= (unint64_t)(v141 & 0x7F) << v134;
            if (v141 < 0)
            {
              v134 += 7;
              BOOL v35 = v135++ >= 9;
              if (!v35) {
                continue;
              }
            }
            goto LABEL_193;
          }
          *(unsigned char *)(v3 + *v133) = 1;
LABEL_193:
          PBRepeatedInt32Add();
        }
      case 21:
        if ((v8 & 1) == 0) {
          goto LABEL_267;
        }
        char v142 = 0;
        unsigned int v143 = 0;
        uint64_t v51 = 0;
        *(_DWORD *)(a1 + 252) |= 4u;
        while (2)
        {
          uint64_t v144 = *v22;
          uint64_t v145 = *(void *)(v3 + v144);
          unint64_t v146 = v145 + 1;
          if (v145 == -1 || v146 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v147 = *(unsigned char *)(*(void *)(v3 + *v27) + v145);
            *(void *)(v3 + v144) = v146;
            v51 |= (unint64_t)(v147 & 0x7F) << v142;
            if (v147 < 0)
            {
              v142 += 7;
              BOOL v35 = v143++ >= 9;
              if (v35)
              {
                LODWORD(v51) = 0;
                goto LABEL_308;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          LODWORD(v51) = 0;
        }
LABEL_308:
        uint64_t v181 = 236;
LABEL_309:
        *(_DWORD *)(a1 + v181) = v51;
        goto LABEL_377;
      case 22:
        if (!v40 || (*(unsigned char *)(a1 + 254) & 2) != 0) {
          goto LABEL_267;
        }
        if (v37 != 2)
        {
          char v206 = 0;
          unsigned int v207 = 0;
          uint64_t v208 = 0;
          while (1)
          {
            uint64_t v209 = *v22;
            uint64_t v210 = *(void *)(v3 + v209);
            unint64_t v211 = v210 + 1;
            if (v210 == -1 || v211 > *(void *)(v3 + *v6)) {
              goto LABEL_373;
            }
            char v212 = *(unsigned char *)(*(void *)(v3 + *v27) + v210);
            *(void *)(v3 + v209) = v211;
            v208 |= (unint64_t)(v212 & 0x7F) << v206;
            if (v212 < 0)
            {
              v206 += 7;
              BOOL v35 = v207++ >= 9;
              if (!v35) {
                continue;
              }
            }
            goto LABEL_374;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_408;
        }
        while (1)
        {
          char v148 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_266;
          }
          char v149 = 0;
          unsigned int v150 = 0;
          uint64_t v151 = 0;
          unint64_t v152 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v153 = *v22;
            uint64_t v154 = *(void *)(v3 + v153);
            unint64_t v155 = v154 + 1;
            if (v154 == -1 || v155 > *(void *)(v3 + *v6)) {
              break;
            }
            char v156 = *(unsigned char *)(*(void *)(v3 + *v152) + v154);
            *(void *)(v3 + v153) = v155;
            v151 |= (unint64_t)(v156 & 0x7F) << v149;
            if (v156 < 0)
            {
              v149 += 7;
              BOOL v35 = v150++ >= 9;
              if (!v35) {
                continue;
              }
            }
            goto LABEL_216;
          }
          *(unsigned char *)(v3 + *v148) = 1;
LABEL_216:
          PBRepeatedInt32Add();
        }
      case 23:
        if (!v40) {
          goto LABEL_267;
        }
        if ((*(unsigned char *)(a1 + 254) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_408;
          }
          int v184 = (int)(*(_DWORD *)(a1 + 252) << 10) >> 31;
          goto LABEL_337;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_408;
        }
        uint64_t v47 = objc_alloc_init(GEOPDSSearchEvChargingParameters);
        if (!GEOPDSSearchEvChargingParametersReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1)) {
          goto LABEL_407;
        }
        PBReaderRecallMark();
        uint64_t v48 = 168;
        goto LABEL_242;
      case 24:
        if (!v40 || (*(unsigned char *)(a1 + 253) & 0x80) != 0) {
          goto LABEL_267;
        }
        if (v37 != 2)
        {
          char v213 = 0;
          unsigned int v214 = 0;
          uint64_t v215 = 0;
          while (1)
          {
            uint64_t v216 = *v22;
            uint64_t v217 = *(void *)(v3 + v216);
            unint64_t v218 = v217 + 1;
            if (v217 == -1 || v218 > *(void *)(v3 + *v6)) {
              break;
            }
            char v219 = *(unsigned char *)(*(void *)(v3 + *v27) + v217);
            *(void *)(v3 + v216) = v218;
            v215 |= (unint64_t)(v219 & 0x7F) << v213;
            if (v219 < 0)
            {
              v213 += 7;
              BOOL v35 = v214++ >= 9;
              if (!v35) {
                continue;
              }
            }
            goto LABEL_374;
          }
LABEL_373:
          *(unsigned char *)(v3 + *v26) = 1;
LABEL_374:
          PBRepeatedInt32Add();
          goto LABEL_375;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_408;
        }
        while (1)
        {
          uint64_t v157 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v158 = 0;
          unsigned int v159 = 0;
          uint64_t v160 = 0;
          v161 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v162 = *v22;
            uint64_t v163 = *(void *)(v3 + v162);
            unint64_t v164 = v163 + 1;
            if (v163 == -1 || v164 > *(void *)(v3 + *v6)) {
              break;
            }
            char v165 = *(unsigned char *)(*(void *)(v3 + *v161) + v163);
            *(void *)(v3 + v162) = v164;
            v160 |= (unint64_t)(v165 & 0x7F) << v158;
            if (v165 < 0)
            {
              v158 += 7;
              BOOL v35 = v159++ >= 9;
              if (!v35) {
                continue;
              }
            }
            goto LABEL_236;
          }
          *(unsigned char *)(v3 + *v157) = 1;
LABEL_236:
          PBRepeatedInt32Add();
        }
LABEL_266:
        PBReaderRecallMark();
        uint64_t v26 = (int *)MEMORY[0x1E4F940C8];
        char v21 = v225;
        goto LABEL_376;
      case 25:
        if (!v40) {
          goto LABEL_267;
        }
        if ((*(unsigned char *)(a1 + 254) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_408;
          }
          int v184 = (int)(*(_DWORD *)(a1 + 252) << 13) >> 31;
LABEL_337:
          v7 += v184;
LABEL_375:
          char v21 = v225;
          uint64_t v26 = (int *)MEMORY[0x1E4F940C8];
LABEL_376:
          uint64_t v27 = (int *)MEMORY[0x1E4F940B8];
LABEL_377:
          if (!(v226 & 1 | (v7 != 0)) || *(void *)(v3 + *v22) >= *(void *)(v3 + *v6)) {
            goto LABEL_379;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_408;
        }
        uint64_t v47 = objc_alloc_init(GEOPDAutocompleteOriginationInfo);
        if (GEOPDAutocompleteOriginationInfoReadAllFrom((uint64_t)v47, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v48 = 144;
LABEL_242:
          char v63 = *(void **)(a1 + v48);
          *(void *)(a1 + v48) = v47;
LABEL_243:

          --v7;
          goto LABEL_375;
        }
LABEL_407:

LABEL_408:
        int v24 = 0;
        char v21 = v225;
LABEL_380:
        char v25 = v224;
LABEL_381:
        if (v25) {
LABEL_382:
        }
          *(_DWORD *)(a1 + 252) |= 0x1000u;
        if (v21 & 1 | ((v24 & 1) == 0))
        {
          *(_DWORD *)(a1 + 252) |= 0x800000u;
          *(_DWORD *)(a1 + 252) |= 0x4000000u;
          *(_DWORD *)(a1 + 252) |= 0x80000u;
          *(_DWORD *)(a1 + 252) |= 0x100000u;
          *(_DWORD *)(a1 + 252) |= 0x2000000u;
          *(_DWORD *)(a1 + 252) |= 0x1000000u;
          *(_DWORD *)(a1 + 252) |= 0x10000u;
          *(_DWORD *)(a1 + 252) |= 0x400000u;
          *(_DWORD *)(a1 + 252) |= 0x4000u;
          *(_DWORD *)(a1 + 252) |= 0x2000u;
          *(_DWORD *)(a1 + 252) |= 0x20000u;
          *(_DWORD *)(a1 + 252) |= 0x200000u;
          *(_DWORD *)(a1 + 252) |= 0x8000u;
          *(_DWORD *)(a1 + 252) |= 0x40000u;
        }
        else if (v23)
        {
          while (1)
          {
            int v220 = *v23++;
            int v221 = 0x800000;
            switch(v220)
            {
              case 0:
                goto LABEL_401;
              case 1:
                goto LABEL_400;
              case 2:
                int v221 = 0x4000000;
                goto LABEL_400;
              case 5:
                int v221 = 0x80000;
                goto LABEL_400;
              case 6:
                int v221 = 0x100000;
                goto LABEL_400;
              case 8:
                int v221 = 0x2000000;
                goto LABEL_400;
              case 11:
                int v221 = 0x1000000;
                goto LABEL_400;
              case 13:
                int v221 = 0x10000;
                goto LABEL_400;
              case 14:
                int v221 = 0x400000;
                goto LABEL_400;
              case 18:
                int v221 = 0x4000;
                goto LABEL_400;
              case 20:
                int v221 = 0x2000;
                goto LABEL_400;
              case 22:
                int v221 = 0x20000;
                goto LABEL_400;
              case 23:
                int v221 = 0x200000;
                goto LABEL_400;
              case 24:
                int v221 = 0x8000;
                goto LABEL_400;
              case 25:
                int v221 = 0x40000;
LABEL_400:
                *(_DWORD *)(a1 + 252) |= v221;
                break;
              default:
                continue;
            }
          }
        }
LABEL_401:
        if (v24)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v21 & 1) == 0) {
            return v3;
          }
LABEL_405:
          v222 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v21) {
            goto LABEL_405;
          }
        }
        return v3;
      case 26:
        if ((v8 & 1) == 0) {
          goto LABEL_267;
        }
        char v166 = 0;
        unsigned int v167 = 0;
        uint64_t v168 = 0;
        *(_DWORD *)(a1 + 252) |= 0x20u;
        while (2)
        {
          uint64_t v169 = *v22;
          uint64_t v170 = *(void *)(v3 + v169);
          unint64_t v171 = v170 + 1;
          if (v170 == -1 || v171 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v172 = *(unsigned char *)(*(void *)(v3 + *v27) + v170);
            *(void *)(v3 + v169) = v171;
            v168 |= (unint64_t)(v172 & 0x7F) << v166;
            if (v172 < 0)
            {
              v166 += 7;
              BOOL v35 = v167++ >= 9;
              if (v35)
              {
                uint64_t v168 = 0;
                goto LABEL_313;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          uint64_t v168 = 0;
        }
LABEL_313:
        BOOL v182 = v168 != 0;
        uint64_t v183 = 242;
        goto LABEL_318;
      case 27:
        if ((v8 & 1) == 0) {
          goto LABEL_267;
        }
        char v173 = 0;
        unsigned int v174 = 0;
        uint64_t v175 = 0;
        *(_DWORD *)(a1 + 252) |= 0x400u;
        while (2)
        {
          uint64_t v176 = *v22;
          uint64_t v177 = *(void *)(v3 + v176);
          unint64_t v178 = v177 + 1;
          if (v177 == -1 || v178 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v26) = 1;
          }
          else
          {
            char v179 = *(unsigned char *)(*(void *)(v3 + *v27) + v177);
            *(void *)(v3 + v176) = v178;
            v175 |= (unint64_t)(v179 & 0x7F) << v173;
            if (v179 < 0)
            {
              v173 += 7;
              BOOL v35 = v174++ >= 9;
              if (v35)
              {
                uint64_t v175 = 0;
                goto LABEL_317;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v26)) {
          uint64_t v175 = 0;
        }
LABEL_317:
        BOOL v182 = v175 != 0;
        uint64_t v183 = 247;
LABEL_318:
        *(unsigned char *)(a1 + v183) = v182;
        goto LABEL_377;
      default:
        if ((v224 & 1) == 0 || (*(unsigned char *)(a1 + 253) & 0x10) != 0)
        {
LABEL_267:
          char v180 = PBReaderSkipValueWithTag();
          uint64_t v27 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v26 = (int *)MEMORY[0x1E4F940C8];
          char v21 = v225;
          if ((v180 & 1) == 0)
          {
            int v24 = 0;
            goto LABEL_380;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v71 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v72 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v71;
          }
          int v73 = PBUnknownFieldAdd();
          char v21 = v225;
          uint64_t v26 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v27 = (int *)MEMORY[0x1E4F940B8];
          if (!v73)
          {
            int v24 = 0;
            goto LABEL_382;
          }
        }
        goto LABEL_377;
    }
  }
}

void sub_189456738(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189456A68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189456BDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189456DD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189456FC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894571B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189457624(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189457968(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189457E98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894588D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189458D84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189458EF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18945936C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18945BA88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAutocompleteParametersAllEntriesWithBrowseCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 208) readAll:1];
  [*(id *)(a1 + 160) readAll:1];
  -[GEOPDVenueIdentifier readAll:](*(void *)(a1 + 200), 1);
  -[GEOPDRetainedSearchMetadata readAll:](*(void *)(a1 + 192), 1);
  [*(id *)(a1 + 176) readAll:1];
  -[GEOPDSSearchEvChargingParameters readAll:](*(void *)(a1 + 168), 1);
  BOOL v2 = *(void **)(a1 + 144);

  return [v2 readAll:1];
}

unint64_t GEOPDAutocompleteParametersAllEntriesWithBrowseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAutocompleteParametersAllEntriesWithBrowseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18945BB90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18945C114(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAutocompleteParametersAllEntriesWithBrowseIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 224));
  unsigned int v2 = *(_DWORD *)(a1 + 252);
  if ((v2 & 0xC880000) != 0) {
    return 1;
  }
  if ((v2 & 0x100000) != 0)
  {
    if (GEOPDAutocompleteEntryIsDirty(*(os_unfair_lock_s **)(a1 + 160))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 252);
  }
  if ((v2 & 0x2000000) != 0)
  {
    if (GEOPDVenueIdentifierIsDirty(*(void *)(a1 + 200))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 252);
  }
  if ((v2 & 0x1000000) != 0)
  {
    if (GEOPDRetainedSearchMetadataIsDirty(*(void *)(a1 + 192))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 252);
  }
  if ((v2 & 0x10000) != 0) {
    return 1;
  }
  if ((v2 & 0x400000) != 0)
  {
    if (GEOPDAutocompleteEntryIsDirty(*(os_unfair_lock_s **)(a1 + 176))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 252);
  }
  if ((v2 & 0x26000) != 0) {
    return 1;
  }
  if ((v2 & 0x200000) == 0) {
    goto LABEL_20;
  }
  if (GEOPDSSearchEvChargingParametersIsDirty(*(void *)(a1 + 168))) {
    return 1;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 252);
LABEL_20:
  if ((v2 & 0x8000) != 0) {
    return 1;
  }
  return (v2 >> 18) & 1;
}

os_unfair_lock_s *GEOPDAutocompleteParametersAllEntriesWithBrowseIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDAutocompleteParametersAllEntriesWithBrowseIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 56);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18945C7E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18945D5B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18945D93C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersBrandProfileSearchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v68 = v17;
        char v69 = v9;
        char v70 = v18 | v17;
        if ((v18 | v9)) {
          BOOL v19 = 0;
        }
        else {
          BOOL v19 = a3;
        }
        char v20 = (int *)MEMORY[0x1E4F940E8];
        char v21 = (int *)MEMORY[0x1E4F940C8];
        char v71 = (v19 == 0) | v18;
        BOOL v72 = v18;
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_87;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_87:
      int v66 = 1;
      goto LABEL_88;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v72;
    if ((v71 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          BOOL v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_107;
        }
        char v60 = 16 * *(unsigned char *)(a1 + 60);
        goto LABEL_84;
      case 2:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_107;
          }
          char v60 = 8 * *(unsigned char *)(a1 + 60);
LABEL_84:
          v10 += v60 >> 7;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_107;
        }
        BOOL v44 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v44, (void *)v3))
        {
          PBReaderRecallMark();
          BOOL v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v44;
LABEL_53:

          --v10;
LABEL_85:
          char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_86:
          if (!(v70 & 1 | (v10 != 0))) {
            goto LABEL_87;
          }
          continue;
        }

LABEL_107:
        int v66 = 0;
        char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_88:
        uint64_t v67 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
        if (v68) {
LABEL_89:
        }
          *(unsigned char *)(a1 + v67[14]) |= 4u;
        if (v72 || (v66 & 1) == 0)
        {
          *(unsigned char *)(a1 + v67[14]) |= 8u;
          *(unsigned char *)(a1 + v67[14]) |= 0x10u;
          goto LABEL_100;
        }
        if (v19)
        {
          while (2)
          {
            while (1)
            {
              int v62 = *v19++;
              int v61 = v62;
              if (v62 == 1) {
                break;
              }
              if (v61 == 2)
              {
                char v63 = 16;
                goto LABEL_99;
              }
              if (!v61) {
                goto LABEL_100;
              }
            }
            char v63 = 8;
LABEL_99:
            *(unsigned char *)(a1 + v67[14]) |= v63;
            continue;
          }
        }
LABEL_100:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v72)
        {
          char v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if ((v69 & 1) == 0) {
          goto LABEL_70;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v48 = *v20;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v22) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v30 = v46++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_75:
        *(_DWORD *)(a1 + 52) = v47;
        goto LABEL_86;
      case 4:
        if ((v69 & 1) == 0) {
          goto LABEL_70;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v55 = *v20;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v22) + v56);
            *(void *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              BOOL v30 = v53++ >= 9;
              if (v30)
              {
                uint64_t v54 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v54 = 0;
        }
LABEL_79:
        *(unsigned char *)(a1 + 56) = v54 != 0;
        goto LABEL_86;
      default:
        if ((v68 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          char v59 = PBReaderSkipValueWithTag();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v59 & 1) == 0)
          {
            int v66 = 0;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v66 = 0;
            uint64_t v67 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
            goto LABEL_89;
          }
        }
        goto LABEL_86;
    }
  }
}

void sub_18945E1A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18945E8DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersBrandProfileSearchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAutocompleteParametersBrandProfileSearchReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDAutocompleteParametersBrandProfileSearchReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDAutocompleteParametersBrandProfileSearchReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAutocompleteParametersBrandProfileSearchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18945EA84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersBrandProfileSearchReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAutocompleteParametersBrandProfileSearchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18945EAE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18945ECDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersBrandProfileSearchIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18945F088(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18945F3FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18945F6B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersCollectionOnlyReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v8)) {
          BOOL v19 = 0;
        }
        else {
          BOOL v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        char v20 = (int *)MEMORY[0x1E4F940E8];
        char v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_70;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_70:
      int v51 = 1;
      goto LABEL_71;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if (!v34 || (*(unsigned char *)(a1 + 60) & 2) != 0)
      {
LABEL_61:
        char v45 = PBReaderSkipValueWithTag();
        char v21 = (int *)MEMORY[0x1E4F940C8];
        if ((v45 & 1) == 0)
        {
          int v51 = 0;
          goto LABEL_71;
        }
        goto LABEL_69;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_87;
      }
      id v41 = objc_alloc_init(GEOPDMapsIdentifier);
      if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v41, (void *)v3)) {
        goto LABEL_86;
      }
      PBReaderRecallMark();
      -[GEOPDAutocompleteParametersCollectionOnly _addNoFlagsPublisherId:](a1, v41);

      goto LABEL_68;
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_61;
      }
      if ((*(unsigned char *)(a1 + 60) & 4) == 0)
      {
        uint64_t v39 = PBReaderReadString();
        BOOL v40 = *(void **)(a1 + 32);
        *(void *)(a1 + 32) = v39;
        goto LABEL_54;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_87;
      }
      char v46 = 32 * *(unsigned char *)(a1 + 60);
LABEL_67:
      v7 += v46 >> 7;
LABEL_68:
      char v21 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_69;
    }
    if (v53 & 1) == 0 || (*(unsigned char *)(a1 + 60)) {
      goto LABEL_61;
    }
    if (!*(void *)(a1 + 16))
    {
      id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      int v43 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v42;
    }
    int v44 = PBUnknownFieldAdd();
    char v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v44)
    {
      int v51 = 0;
      char v52 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
      goto LABEL_72;
    }
LABEL_69:
    if (!(v54 & 1 | (v7 != 0))) {
      goto LABEL_70;
    }
  }
  if (!v34) {
    goto LABEL_61;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_87;
    }
    char v46 = 16 * *(unsigned char *)(a1 + 60);
    goto LABEL_67;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_87;
  }
  id v41 = objc_alloc_init(GEOPDViewportInfo);
  if (GEOPDViewportInfoReadAllFrom((uint64_t)v41, (void *)v3))
  {
    PBReaderRecallMark();
    BOOL v40 = *(void **)(a1 + 40);
    *(void *)(a1 + 40) = v41;
LABEL_54:

    --v7;
    goto LABEL_68;
  }
LABEL_86:

LABEL_87:
  int v51 = 0;
  char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_71:
  char v52 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
  if ((v53 & 1) == 0) {
    goto LABEL_73;
  }
LABEL_72:
  *(unsigned char *)(a1 + v52[24]) |= 1u;
LABEL_73:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[24]) |= 4u;
    *(unsigned char *)(a1 + v52[24]) |= 8u;
    *(unsigned char *)(a1 + v52[24]) |= 2u;
  }
  else if (v19)
  {
    while (1)
    {
      int v47 = *v19++;
      char v48 = 4;
      switch(v47)
      {
        case 0:
          goto LABEL_80;
        case 1:
          goto LABEL_79;
        case 2:
          char v48 = 8;
          goto LABEL_79;
        case 3:
          char v48 = 2;
LABEL_79:
          *(unsigned char *)(a1 + v52[24]) |= v48;
          break;
        default:
          continue;
      }
    }
  }
LABEL_80:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    uint64_t v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18945FE1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18945FF88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894606A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAutocompleteParametersCollectionOnlyCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 40) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPDAutocompleteParametersCollectionOnlyReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAutocompleteParametersCollectionOnlyReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDAutocompleteParametersCollectionOnlyReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDAutocompleteParametersCollectionOnlyReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAutocompleteParametersCollectionOnlyReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDAutocompleteParametersCollectionOnlyCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18946094C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersCollectionOnlyReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAutocompleteParametersCollectionOnlyReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1894609B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189460C14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersCollectionOnlyIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_189461150(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894614B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18946182C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersFullEntriesOnlyReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v68 = v17;
        char v69 = v9;
        char v70 = v18 | v17;
        if ((v18 | v9)) {
          BOOL v19 = 0;
        }
        else {
          BOOL v19 = a3;
        }
        char v20 = (int *)MEMORY[0x1E4F940E8];
        char v21 = (int *)MEMORY[0x1E4F940C8];
        char v71 = (v19 == 0) | v18;
        BOOL v72 = v18;
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_87;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_87:
      int v66 = 1;
      goto LABEL_88;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v72;
    if ((v71 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          BOOL v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_107;
        }
        char v60 = 16 * *(unsigned char *)(a1 + 60);
        goto LABEL_84;
      case 2:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_107;
          }
          char v60 = 8 * *(unsigned char *)(a1 + 60);
LABEL_84:
          v10 += v60 >> 7;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_107;
        }
        int v44 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v44, (void *)v3))
        {
          PBReaderRecallMark();
          BOOL v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v44;
LABEL_53:

          --v10;
LABEL_85:
          char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_86:
          if (!(v70 & 1 | (v10 != 0))) {
            goto LABEL_87;
          }
          continue;
        }

LABEL_107:
        int v66 = 0;
        char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_88:
        uint64_t v67 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
        if (v68) {
LABEL_89:
        }
          *(unsigned char *)(a1 + v67[33]) |= 4u;
        if (v72 || (v66 & 1) == 0)
        {
          *(unsigned char *)(a1 + v67[33]) |= 8u;
          *(unsigned char *)(a1 + v67[33]) |= 0x10u;
          goto LABEL_100;
        }
        if (v19)
        {
          while (2)
          {
            while (1)
            {
              int v62 = *v19++;
              int v61 = v62;
              if (v62 == 1) {
                break;
              }
              if (v61 == 2)
              {
                char v63 = 16;
                goto LABEL_99;
              }
              if (!v61) {
                goto LABEL_100;
              }
            }
            char v63 = 8;
LABEL_99:
            *(unsigned char *)(a1 + v67[33]) |= v63;
            continue;
          }
        }
LABEL_100:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v72)
        {
          char v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if ((v69 & 1) == 0) {
          goto LABEL_70;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v48 = *v20;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v22) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v30 = v46++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_75:
        *(_DWORD *)(a1 + 52) = v47;
        goto LABEL_86;
      case 4:
        if ((v69 & 1) == 0) {
          goto LABEL_70;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v55 = *v20;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v22) + v56);
            *(void *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              BOOL v30 = v53++ >= 9;
              if (v30)
              {
                uint64_t v54 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v54 = 0;
        }
LABEL_79:
        *(unsigned char *)(a1 + 56) = v54 != 0;
        goto LABEL_86;
      default:
        if ((v68 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          char v59 = PBReaderSkipValueWithTag();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v59 & 1) == 0)
          {
            int v66 = 0;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v66 = 0;
            uint64_t v67 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
            goto LABEL_89;
          }
        }
        goto LABEL_86;
    }
  }
}

void sub_189462094(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894627CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersFullEntriesOnlyReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAutocompleteParametersFullEntriesOnlyReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDAutocompleteParametersFullEntriesOnlyReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDAutocompleteParametersFullEntriesOnlyReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAutocompleteParametersFullEntriesOnlyReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189462974(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersFullEntriesOnlyReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAutocompleteParametersFullEntriesOnlyReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1894629D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189462BCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersFullEntriesOnlyIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189462F78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894632EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1894635A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersLocalitiesAndLandmarksReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v68 = v17;
        char v69 = v9;
        char v70 = v18 | v17;
        if ((v18 | v9)) {
          BOOL v19 = 0;
        }
        else {
          BOOL v19 = a3;
        }
        char v20 = (int *)MEMORY[0x1E4F940E8];
        char v21 = (int *)MEMORY[0x1E4F940C8];
        char v71 = (v19 == 0) | v18;
        BOOL v72 = v18;
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_87;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_87:
      int v66 = 1;
      goto LABEL_88;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v72;
    if ((v71 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          BOOL v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_107;
        }
        char v60 = 16 * *(unsigned char *)(a1 + 60);
        goto LABEL_84;
      case 2:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_107;
          }
          char v60 = 8 * *(unsigned char *)(a1 + 60);
LABEL_84:
          v10 += v60 >> 7;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_107;
        }
        int v44 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v44, (void *)v3))
        {
          PBReaderRecallMark();
          BOOL v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v44;
LABEL_53:

          --v10;
LABEL_85:
          char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_86:
          if (!(v70 & 1 | (v10 != 0))) {
            goto LABEL_87;
          }
          continue;
        }

LABEL_107:
        int v66 = 0;
        char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_88:
        uint64_t v67 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
        if (v68) {
LABEL_89:
        }
          *(unsigned char *)(a1 + v67[43]) |= 4u;
        if (v72 || (v66 & 1) == 0)
        {
          *(unsigned char *)(a1 + v67[43]) |= 8u;
          *(unsigned char *)(a1 + v67[43]) |= 0x10u;
          goto LABEL_100;
        }
        if (v19)
        {
          while (2)
          {
            while (1)
            {
              int v62 = *v19++;
              int v61 = v62;
              if (v62 == 1) {
                break;
              }
              if (v61 == 2)
              {
                char v63 = 16;
                goto LABEL_99;
              }
              if (!v61) {
                goto LABEL_100;
              }
            }
            char v63 = 8;
LABEL_99:
            *(unsigned char *)(a1 + v67[43]) |= v63;
            continue;
          }
        }
LABEL_100:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v72)
        {
          char v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if ((v69 & 1) == 0) {
          goto LABEL_70;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v48 = *v20;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v22) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v30 = v46++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_75:
        *(_DWORD *)(a1 + 52) = v47;
        goto LABEL_86;
      case 4:
        if ((v69 & 1) == 0) {
          goto LABEL_70;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v55 = *v20;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v22) + v56);
            *(void *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              BOOL v30 = v53++ >= 9;
              if (v30)
              {
                uint64_t v54 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v54 = 0;
        }
LABEL_79:
        *(unsigned char *)(a1 + 56) = v54 != 0;
        goto LABEL_86;
      default:
        if ((v68 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          char v59 = PBReaderSkipValueWithTag();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v59 & 1) == 0)
          {
            int v66 = 0;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v66 = 0;
            uint64_t v67 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
            goto LABEL_89;
          }
        }
        goto LABEL_86;
    }
  }
}

void sub_189463E08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189464540(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersLocalitiesAndLandmarksReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAutocompleteParametersLocalitiesAndLandmarksReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDAutocompleteParametersLocalitiesAndLandmarksReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDAutocompleteParametersLocalitiesAndLandmarksReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAutocompleteParametersLocalitiesAndLandmarksReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1894646E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersLocalitiesAndLandmarksReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAutocompleteParametersLocalitiesAndLandmarksReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18946474C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189464940(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAutocompleteParametersLocalitiesAndLandmarksIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189464CEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189465060(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189465314(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompleteParametersOfflineRegionSearchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v68 = v17;
        char v69 = v9;
        char v70 = v18 | v17;
        if ((v18 | v9)) {
          BOOL v19 = 0;
        }
        else {
          BOOL v19 = a3;
        }
        char v20 = (int *)MEMORY[0x1E4F940E8];
        char v21 = (int *)MEMORY[0x1E4F940C8];
        char v71 = (v19 == 0) | v18;
        BOOL v72 = v18;
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_87;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_87:
      int v66 = 1;
      goto LABEL_88;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v72;
    if ((v71 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          BOOL v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_107;
        }
        char v60 = 16 * *(unsigned char *)(a1 + 60);
        goto LABEL_84;
      case 2:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_107;
          }
          char v60 = 8 * *(unsigned char *)(a1 + 60);
LABEL_84:
          v10 += v60 >> 7;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_107;
        }
        int v44 = objc_alloc_init(GEOPDViewportInfo);
        if (GEOPDViewportInfoReadAllFrom((uint64_t)v44, (void *)v3))
        {
          PBReaderRecallMark();
          BOOL v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v44;
LABEL_53:

          --v10;
LABEL_85:
          char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_86:
          if (!(v70 & 1 | (v10 != 0))) {
            goto LABEL_87;
          }
          continue;
        }

LABEL_107:
        int v66 = 0;
        char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_88:
        uint64_t v67 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
        if (v68) {
LABEL_89:
        }
          *(unsigned char *)(a1 + v67[53]) |= 4u;
        if (v72 || (v66 & 1) == 0)
        {
          *(unsigned char *)(a1 + v67[53]) |= 8u;
          *(unsigned char *)(a1 + v67[53]) |= 0x10u;
          goto LABEL_100;
        }
        if (v19)
        {
          while (2)
          {
            while (1)
            {
              int v62 = *v19++;
              int v61 = v62;
              if (v62 == 1) {
                break;
              }
              if (v61 == 2)
              {
                char v63 = 16;
                goto LABEL_99;
              }
              if (!v61) {
                goto LABEL_100;
              }
            }
            char v63 = 8;
LABEL_99:
            *(unsigned char *)(a1 + v67[53]) |= v63;
            continue;
          }
        }
LABEL_100:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v72)
        {
          char v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if ((v69 & 1) == 0) {
          goto LABEL_70;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v48 = *v20;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v22) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v30 = v46++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_75:
        *(_DWORD *)(a1 + 52) = v47;
        goto LABEL_86;
      case 4:
        if ((v69 & 1) == 0) {
          goto LABEL_70;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v55 = *v20;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v22) + v56);
            *(void *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              BOOL v30 = v53++ >= 9;
              if (v30)
              {
                uint64_t v54 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v54 = 0;
        }
LABEL_79:
        *(unsigned char *)(a1 + 56) = v54 != 0;
        goto LABEL_86;
      default:
        if ((v68 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          char v59 = PBReaderSkipValueWithTag();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v59 & 1) == 0)
          {
            int v66 = 0;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v66 = 0;
            uint64_t v67 = &OBJC_IVAR___GEOPDAutocompleteParametersAllEntriesWithBrowse__querySuggestionEntry;
            goto LABEL_89;
          }
        }
        goto LABEL_86;
    }
  }
}