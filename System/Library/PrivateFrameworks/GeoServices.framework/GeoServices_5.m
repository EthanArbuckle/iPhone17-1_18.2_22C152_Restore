void sub_1891952E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  uint64_t v37;

  if (a37 < 0) {
    operator delete(__p);
  }
  std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy(v37 - 128, *(char **)(v37 - 120));
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::ValidateServiceOptions(AddrObjGoogle::protobuf::DescriptorBuilder *this, AddrObjGoogle::protobuf::ServiceDescriptor *a2, const AddrObjGoogle::protobuf::ServiceDescriptorProto *a3)
{
  uint64_t v3 = *((void *)a2 + 2);
  if (v3)
  {
    uint64_t v7 = *(void *)(v3 + 136);
    if (v7 != AddrObjGoogle::protobuf::FileOptions::default_instance(this)
      && *(_DWORD *)(*(void *)(v3 + 136) + 56) == 3)
    {
      uint64_t v8 = *(void *)(*((void *)a2 + 2) + 136);
      if (*(unsigned char *)(v8 + 62) || *(unsigned char *)(v8 + 63))
      {
        v9 = (const std::string::value_type *)*((void *)a2 + 1);
        std::string::basic_string[abi:ne180100]<0>(__p, "Files with optimize_for = LITE_RUNTIME cannot define services unless you set both options cc_generic_services and java_generic_sevices to false.");
        AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v9, (uint64_t)a3, 0, (const std::string::value_type *)__p);
        if (v11 < 0) {
          operator delete(__p[0]);
        }
      }
    }
  }
}

void sub_189195434(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::ValidateFieldOptions(AddrObjGoogle::protobuf::DescriptorBuilder *this, AddrObjGoogle::protobuf::FieldDescriptor *a2, const AddrObjGoogle::protobuf::FieldDescriptorProto *a3)
{
  v5 = this;
  v6 = (unsigned char *)*((void *)a2 + 12);
  if ((v6[84] & 0x10) != 0)
  {
    AddrObjGoogle::protobuf::DescriptorBuilder::ValidateMapKey(this, a2, a3);
    v6 = (unsigned char *)*((void *)a2 + 12);
  }
  if (v6[45] && *((_DWORD *)a2 + 11) != 11)
  {
    uint64_t v7 = (const std::string::value_type *)*((void *)a2 + 1);
    std::string::basic_string[abi:ne180100]<0>(__p, "[lazy = true] can only be specified for submessage fields.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)v5, v7, (uint64_t)a3, 2, (const std::string::value_type *)__p);
    if (v21 < 0) {
      operator delete(__p[0]);
    }
    v6 = (unsigned char *)*((void *)a2 + 12);
  }
  if (v6[44] && (*((_DWORD *)a2 + 12) != 3 || (*((_DWORD *)a2 + 11) - 13) >= 0xFFFFFFFC))
  {
    uint64_t v8 = (const std::string::value_type *)*((void *)a2 + 1);
    std::string::basic_string[abi:ne180100]<0>(__p, "[packed = true] can only be specified for repeated primitive fields.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)v5, v8, (uint64_t)a3, 2, (const std::string::value_type *)__p);
    if (v21 < 0) {
      operator delete(__p[0]);
    }
  }
  uint64_t v9 = *((void *)a2 + 7);
  if (v9)
  {
    v10 = *(AddrObjGoogle::protobuf::DescriptorBuilder **)(v9 + 32);
    this = (AddrObjGoogle::protobuf::DescriptorBuilder *)AddrObjGoogle::protobuf::MessageOptions::default_instance(this);
    if (v10 != this)
    {
      if (*(unsigned char *)(*(void *)(*((void *)a2 + 7) + 32) + 64))
      {
        if (*((unsigned char *)a2 + 52))
        {
          if (*((_DWORD *)a2 + 12) == 1 && *((_DWORD *)a2 + 11) == 11) {
            goto LABEL_23;
          }
          char v11 = (const std::string::value_type *)*((void *)a2 + 1);
          std::string::basic_string[abi:ne180100]<0>(__p, "Extensions of MessageSets must be optional messages.");
          AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)v5, v11, (uint64_t)a3, 2, (const std::string::value_type *)__p);
        }
        else
        {
          v12 = (const std::string::value_type *)*((void *)a2 + 1);
          std::string::basic_string[abi:ne180100]<0>(__p, "MessageSets cannot have fields, only extensions.");
          AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)v5, v12, (uint64_t)a3, 0, (const std::string::value_type *)__p);
        }
        if (v21 < 0) {
          operator delete(__p[0]);
        }
      }
    }
  }
LABEL_23:
  uint64_t v13 = *((void *)a2 + 4);
  if (v13)
  {
    v14 = *(AddrObjGoogle::protobuf::FileOptions **)(v13 + 136);
    v15 = (AddrObjGoogle::protobuf::FileOptions *)AddrObjGoogle::protobuf::FileOptions::default_instance(this);
    if (v14 != v15 && *(_DWORD *)(*(void *)(v13 + 136) + 56) == 3)
    {
      uint64_t v16 = *((void *)a2 + 7);
      if (v16)
      {
        uint64_t v17 = *(void *)(v16 + 16);
        if (!v17
          || (uint64_t v18 = *(void *)(v17 + 136), v18 == AddrObjGoogle::protobuf::FileOptions::default_instance(v15))
          || *(_DWORD *)(*(void *)(v17 + 136) + 56) != 3)
        {
          v19 = (const std::string::value_type *)*((void *)a2 + 1);
          std::string::basic_string[abi:ne180100]<0>(__p, "Extensions to non-lite types can only be declared in non-lite files.  Note that you cannot extend a non-lite type to contain a lite type, but the reverse is allowed.");
          AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)v5, v19, (uint64_t)a3, 3, (const std::string::value_type *)__p);
          if (v21 < 0) {
            operator delete(__p[0]);
          }
        }
      }
    }
  }
}

void sub_1891956AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::ValidateMapKey(AddrObjGoogle::protobuf::DescriptorBuilder *this, AddrObjGoogle::protobuf::FieldDescriptor *a2, const AddrObjGoogle::protobuf::FieldDescriptorProto *a3)
{
  if (*((_DWORD *)a2 + 12) != 3)
  {
    v19 = (const std::string::value_type *)*((void *)a2 + 1);
    std::string::basic_string[abi:ne180100]<0>(&__p, "map type is only allowed for repeated fields.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v19, (uint64_t)a3, 2, (const std::string::value_type *)&__p);
    goto LABEL_28;
  }
  if ((*((_DWORD *)a2 + 11) & 0xFFFFFFFE) != 0xA)
  {
    v20 = (const std::string::value_type *)*((void *)a2 + 1);
    std::string::basic_string[abi:ne180100]<0>(&__p, "map type is only allowed for fields with a message type.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v20, (uint64_t)a3, 2, (const std::string::value_type *)&__p);
    goto LABEL_28;
  }
  uint64_t v6 = *((void *)a2 + 9);
  if (!v6)
  {
    char v21 = (const std::string::value_type *)*((void *)a2 + 1);
    std::string::basic_string[abi:ne180100]<0>(&__p, "Could not find field type.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v21, (uint64_t)a3, 2, (const std::string::value_type *)&__p);
    goto LABEL_28;
  }
  uint64_t v7 = *(void *)(*((void *)a2 + 12) + 48);
  uint64_t v8 = *(const void ***)(v6 + 8);
  if (*((char *)v8 + 23) >= 0) {
    size_t v9 = *((unsigned __int8 *)v8 + 23);
  }
  else {
    size_t v9 = (size_t)v8[1];
  }
  v10 = &v38;
  std::string::basic_string[abi:ne180100]((uint64_t)&v38, v9 + 1);
  if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    v10 = (std::string *)v38.__r_.__value_.__r.__words[0];
  }
  if (v9)
  {
    if (*((char *)v8 + 23) >= 0) {
      char v11 = v8;
    }
    else {
      char v11 = *v8;
    }
    memmove(v10, v11, v9);
  }
  *(_WORD *)((char *)&v10->__r_.__value_.__l.__data_ + v9) = 46;
  int v12 = *(char *)(v7 + 23);
  if (v12 >= 0) {
    uint64_t v13 = (const std::string::value_type *)v7;
  }
  else {
    uint64_t v13 = *(const std::string::value_type **)v7;
  }
  if (v12 >= 0) {
    std::string::size_type v14 = *(unsigned __int8 *)(v7 + 23);
  }
  else {
    std::string::size_type v14 = *(void *)(v7 + 8);
  }
  v15 = std::string::append(&v38, v13, v14);
  std::string __p = *v15;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  int v16 = sub_189194368((uint64_t)this, v7, (uint64_t)&__p, 0, 0);
  uint64_t v18 = v17;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v38.__r_.__value_.__l.__data_);
    if (!v16) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v16)
  {
LABEL_33:
    if (*(unsigned char *)(v18 + 52)) {
      goto LABEL_34;
    }
    if (*(_DWORD *)(v18 + 48) == 3)
    {
      v34 = (const std::string::value_type *)*((void *)a2 + 1);
      std::string::basic_string[abi:ne180100]<0>(&__p, "map_key must not name a repeated field.");
      AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v34, (uint64_t)a3, 2, (const std::string::value_type *)&__p);
    }
    else
    {
      if ((*(_DWORD *)(v18 + 44) & 0xFFFFFFFE) != 0xA)
      {
        *((void *)a2 + 11) = v18;
        return;
      }
      v35 = (const std::string::value_type *)*((void *)a2 + 1);
      std::string::basic_string[abi:ne180100]<0>(&__p, "map key must name a scalar or string field.");
      AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v35, (uint64_t)a3, 2, (const std::string::value_type *)&__p);
    }
LABEL_28:
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
    v22 = (void *)__p.__r_.__value_.__r.__words[0];
    goto LABEL_30;
  }
LABEL_34:
  v23 = (const std::string::value_type *)*((void *)a2 + 1);
  std::operator+<char>();
  v24 = std::string::append(&v36, "\" in type \"");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  uint64_t v26 = *(void *)(v6 + 8);
  int v27 = *(char *)(v26 + 23);
  if (v27 >= 0) {
    v28 = *(const std::string::value_type **)(v6 + 8);
  }
  else {
    v28 = *(const std::string::value_type **)v26;
  }
  if (v27 >= 0) {
    std::string::size_type v29 = *(unsigned __int8 *)(v26 + 23);
  }
  else {
    std::string::size_type v29 = *(void *)(v26 + 8);
  }
  v30 = std::string::append(&v37, v28, v29);
  long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v31;
  v30->__r_.__value_.__l.__size_ = 0;
  v30->__r_.__value_.__r.__words[2] = 0;
  v30->__r_.__value_.__r.__words[0] = 0;
  v32 = std::string::append(&v38, "\".");
  long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v33;
  v32->__r_.__value_.__l.__size_ = 0;
  v32->__r_.__value_.__r.__words[2] = 0;
  v32->__r_.__value_.__r.__words[0] = 0;
  AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v23, (uint64_t)a3, 2, (const std::string::value_type *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0)
  {
    v22 = (void *)v36.__r_.__value_.__r.__words[0];
LABEL_30:
    operator delete(v22);
  }
}

void sub_189195A58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a35 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::OptionInterpreter(AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *this, AddrObjGoogle::protobuf::DescriptorBuilder *a2)
{
  *(void *)this = a2;
  AddrObjGoogle::protobuf::DynamicMessageFactory::DynamicMessageFactory((AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *)((char *)this + 24));
  if (!*(void *)this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4252);
    uint64_t v3 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: builder_: ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v5, (AddrObjGoogle::protobuf::internal::LogMessage *)v3);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
  }
  return this;
}

void sub_189195B8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  AddrObjGoogle::protobuf::DynamicMessageFactory::~DynamicMessageFactory(v3);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::InterpretSingleOption(AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *this, AddrObjGoogle::protobuf::Message *a2)
{
  uint64_t v3 = *((void *)this + 2);
  if (!*(_DWORD *)(v3 + 24))
  {
    std::string::basic_string[abi:ne180100]<0>(&v74, "Option must have a name.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 7, (const std::string::value_type *)&v74);
LABEL_75:
    if (SHIBYTE(v75) < 0) {
      operator delete((void *)v74);
    }
    return 0;
  }
  char v5 = *(uint64_t **)(**(void **)(v3 + 16) + 16);
  int v6 = *((char *)v5 + 23);
  if (v6 < 0)
  {
    if (v5[1] != 20) {
      goto LABEL_15;
    }
    char v5 = (uint64_t *)*v5;
  }
  else if (v6 != 20)
  {
    goto LABEL_15;
  }
  uint64_t v7 = (uint64_t *)*v5;
  uint64_t v8 = v5[1];
  int v9 = *((_DWORD *)v5 + 4);
  if (v7 == (uint64_t *)0x707265746E696E75 && v8 == 0x706F5F6465746572 && v9 == 1852795252)
  {
    std::string::basic_string[abi:ne180100]<0>(&v74, "Option must not use reserved name \"uninterpreted_option\".");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 7, (const std::string::value_type *)&v74);
    goto LABEL_75;
  }
LABEL_15:
  int v12 = *(pthread_mutex_t *****)this;
  uint64_t v13 = (*(uint64_t (**)(AddrObjGoogle::protobuf::Message *))(*(void *)a2 + 152))(a2);
  if (sub_189198EDC(v12, *v12, *(void *)(v13 + 8)) == 1)
  {
    v15 = v14;
    if (!v14) {
      goto LABEL_19;
    }
  }
  else
  {
    v15 = (const std::string::value_type **)(*(uint64_t (**)(AddrObjGoogle::protobuf::Message *))(*(void *)a2 + 152))(a2);
    if (!v15)
    {
LABEL_19:
      int v16 = (std::string *)AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)&v74, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4351);
      uint64_t v17 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: options_descriptor: ");
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v67, (AddrObjGoogle::protobuf::internal::LogMessage *)v17);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v74);
    }
  }
  std::string __p = 0;
  v72 = 0;
  v73 = 0;
  std::string::basic_string[abi:ne180100]<0>(&v70, "");
  uint64_t v18 = *((void *)this + 2);
  if (*(int *)(v18 + 24) < 1)
  {
    uint64_t v20 = 0;
LABEL_72:
    v45 = __p;
    uint64_t v46 = (uint64_t)v72;
    uint64_t v47 = (*(uint64_t (**)(AddrObjGoogle::protobuf::Message *))(*(void *)a2 + 144))(a2);
    v48 = (uint64_t **)(*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::Message *))(*(void *)v47 + 16))(v47, a2);
    if (AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet((uint64_t *)this, (uint64_t)v45, v46, v20, (uint64_t)&v70, v48))operator new(); {
  }
    }
  else
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = *(void *)(*(void *)(v18 + 16) + 8 * v19);
      uint64_t v22 = *(void *)(v21 + 16);
      std::string::size_type size = HIBYTE(v70.__r_.__value_.__r.__words[2]);
      if ((v70.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type size = v70.__r_.__value_.__l.__size_;
      }
      if (size)
      {
        std::string::append(&v70, ".");
        uint64_t v21 = *(void *)(*(void *)(*((void *)this + 2) + 16) + 8 * v19);
      }
      if (*(unsigned char *)(v21 + 24))
      {
        std::operator+<char>();
        v24 = std::string::append(&v67, ")");
        long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
        int64_t v75 = v24->__r_.__value_.__r.__words[2];
        long long v74 = v25;
        v24->__r_.__value_.__l.__size_ = 0;
        v24->__r_.__value_.__r.__words[2] = 0;
        v24->__r_.__value_.__r.__words[0] = 0;
        if (v75 >= 0) {
          uint64_t v26 = (const std::string::value_type *)&v74;
        }
        else {
          uint64_t v26 = (const std::string::value_type *)v74;
        }
        if (v75 >= 0) {
          std::string::size_type v27 = HIBYTE(v75);
        }
        else {
          std::string::size_type v27 = *((void *)&v74 + 1);
        }
        std::string::append(&v70, v26, v27);
        if (SHIBYTE(v75) < 0) {
          operator delete((void *)v74);
        }
        if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v67.__r_.__value_.__l.__data_);
        }
        FieldByName = (AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *)sub_189194368(*(void *)this, v22, *((void *)this + 1), 0, 0);
        if (FieldByName == 2) {
          uint64_t v20 = v29;
        }
        if (!v20)
        {
LABEL_78:
          if (!*(unsigned char *)(**(void **)this + 41))
          {
            std::operator+<char>();
            v50 = std::string::append(&v67, "\" unknown.");
            long long v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
            int64_t v75 = v50->__r_.__value_.__r.__words[2];
            long long v74 = v51;
            v50->__r_.__value_.__l.__size_ = 0;
            v50->__r_.__value_.__r.__words[2] = 0;
            v50->__r_.__value_.__r.__words[0] = 0;
            AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 7, (const std::string::value_type *)&v74);
            goto LABEL_84;
          }
LABEL_81:
          AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::AddWithoutInterpreting(FieldByName, *((const AddrObjGoogle::protobuf::UninterpretedOption **)this + 2), a2);
          uint64_t v49 = 1;
          goto LABEL_103;
        }
      }
      else
      {
        int v30 = *(char *)(v22 + 23);
        if (v30 >= 0) {
          long long v31 = (const std::string::value_type *)v22;
        }
        else {
          long long v31 = *(const std::string::value_type **)v22;
        }
        if (v30 >= 0) {
          std::string::size_type v32 = *(unsigned __int8 *)(v22 + 23);
        }
        else {
          std::string::size_type v32 = *(void *)(v22 + 8);
        }
        std::string::append(&v70, v31, v32);
        FieldByName = (AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *)AddrObjGoogle::protobuf::Descriptor::FindFieldByName((uint64_t)v15, v22);
        uint64_t v20 = (uint64_t)FieldByName;
        if (!FieldByName) {
          goto LABEL_78;
        }
      }
      uint64_t v33 = *(void *)(v20 + 56);
      if ((const std::string::value_type **)v33 != v15) {
        break;
      }
      if (*(_DWORD *)(v20 + 48) == 3)
      {
        std::operator+<char>();
        v52 = std::string::append(&v67, "\" is repeated. Repeated options are not supported.");
        long long v53 = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
        int64_t v75 = v52->__r_.__value_.__r.__words[2];
        long long v74 = v53;
        v52->__r_.__value_.__l.__size_ = 0;
        v52->__r_.__value_.__r.__words[2] = 0;
        v52->__r_.__value_.__r.__words[0] = 0;
        AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 7, (const std::string::value_type *)&v74);
        goto LABEL_84;
      }
      uint64_t v18 = *((void *)this + 2);
      uint64_t v34 = *(int *)(v18 + 24);
      if (v19 < v34 - 1)
      {
        if ((*(_DWORD *)(v20 + 44) & 0xFFFFFFFE) != 0xA)
        {
          std::operator+<char>();
          v54 = std::string::append(&v67, "\" is an atomic type, not a message.");
          long long v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
          int64_t v75 = v54->__r_.__value_.__r.__words[2];
          long long v74 = v55;
          v54->__r_.__value_.__l.__size_ = 0;
          v54->__r_.__value_.__r.__words[2] = 0;
          v54->__r_.__value_.__r.__words[0] = 0;
          AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 7, (const std::string::value_type *)&v74);
LABEL_84:
          if (SHIBYTE(v75) < 0) {
            operator delete((void *)v74);
          }
          if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0)
          {
            v56 = (void *)v67.__r_.__value_.__r.__words[0];
LABEL_88:
            operator delete(v56);
            goto LABEL_102;
          }
          goto LABEL_102;
        }
        v35 = v72;
        if (v72 >= v73)
        {
          uint64_t v37 = ((char *)v72 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v37 + 1) >> 61) {
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          }
          unint64_t v38 = ((char *)v73 - (unsigned char *)__p) >> 2;
          if (v38 <= v37 + 1) {
            unint64_t v38 = v37 + 1;
          }
          if ((unint64_t)((char *)v73 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v39 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v39 = v38;
          }
          if (v39) {
            v40 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)&v73, v39);
          }
          else {
            v40 = 0;
          }
          v41 = (uint64_t *)&v40[8 * v37];
          uint64_t *v41 = v20;
          std::string v36 = v41 + 1;
          v42 = (char *)v72;
          v43 = (char *)__p;
          if (v72 != __p)
          {
            do
            {
              uint64_t v44 = *((void *)v42 - 1);
              v42 -= 8;
              *--v41 = v44;
            }
            while (v42 != v43);
            v42 = (char *)__p;
          }
          std::string __p = v41;
          v72 = v36;
          v73 = (uint64_t *)&v40[8 * v39];
          if (v42) {
            operator delete(v42);
          }
        }
        else
        {
          uint64_t *v72 = v20;
          std::string v36 = v35 + 1;
        }
        v72 = v36;
        v15 = *(const std::string::value_type ***)(v20 + 72);
        uint64_t v18 = *((void *)this + 2);
        LODWORD(v34) = *(_DWORD *)(v18 + 24);
      }
      if (++v19 >= (int)v34) {
        goto LABEL_72;
      }
    }
    if (*(unsigned char *)(v33 + 40)) {
      goto LABEL_81;
    }
    std::operator+<char>();
    v57 = std::string::append(&v68, "\" is not a field or extension of message \"");
    long long v58 = *(_OWORD *)&v57->__r_.__value_.__l.__data_;
    v69.__r_.__value_.__r.__words[2] = v57->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v69.__r_.__value_.__l.__data_ = v58;
    v57->__r_.__value_.__l.__size_ = 0;
    v57->__r_.__value_.__r.__words[2] = 0;
    v57->__r_.__value_.__r.__words[0] = 0;
    int v59 = (*v15)[23];
    if (v59 >= 0) {
      v60 = *v15;
    }
    else {
      v60 = *(const std::string::value_type **)*v15;
    }
    if (v59 >= 0) {
      std::string::size_type v61 = *((unsigned __int8 *)*v15 + 23);
    }
    else {
      std::string::size_type v61 = *((void *)*v15 + 1);
    }
    v62 = std::string::append(&v69, v60, v61);
    long long v63 = *(_OWORD *)&v62->__r_.__value_.__l.__data_;
    v67.__r_.__value_.__r.__words[2] = v62->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v67.__r_.__value_.__l.__data_ = v63;
    v62->__r_.__value_.__l.__size_ = 0;
    v62->__r_.__value_.__r.__words[2] = 0;
    v62->__r_.__value_.__r.__words[0] = 0;
    v64 = std::string::append(&v67, "\".");
    long long v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
    int64_t v75 = v64->__r_.__value_.__r.__words[2];
    long long v74 = v65;
    v64->__r_.__value_.__l.__size_ = 0;
    v64->__r_.__value_.__r.__words[2] = 0;
    v64->__r_.__value_.__r.__words[0] = 0;
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 7, (const std::string::value_type *)&v74);
    if (SHIBYTE(v75) < 0) {
      operator delete((void *)v74);
    }
    if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v67.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v69.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0)
    {
      v56 = (void *)v68.__r_.__value_.__r.__words[0];
      goto LABEL_88;
    }
  }
LABEL_102:
  uint64_t v49 = 0;
LABEL_103:
  if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v70.__r_.__value_.__l.__data_);
  }
  if (__p)
  {
    v72 = (uint64_t *)__p;
    operator delete(__p);
  }
  return v49;
}

void sub_189196540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, AddrObjGoogle::protobuf::UnknownFieldSet *a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *a38)
{
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)(v39 - 144));
  AddrObjGoogle::protobuf::internal::scoped_ptr<AddrObjGoogle::protobuf::UnknownFieldSet>::~scoped_ptr(&a18);
  AddrObjGoogle::protobuf::internal::scoped_ptr<AddrObjGoogle::protobuf::UnknownFieldSet>::~scoped_ptr((AddrObjGoogle::protobuf::UnknownFieldSet **)&a19);
  if (a37 < 0) {
    operator delete(__p);
  }
  v41 = a38;
  if (a38)
  {
    *(void *)(v38 + 8) = a38;
    operator delete(v41);
  }
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::AddWithoutInterpreting(AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *this, const AddrObjGoogle::protobuf::UninterpretedOption *a2, AddrObjGoogle::protobuf::Message *a3)
{
  uint64_t v5 = (*(uint64_t (**)(AddrObjGoogle::protobuf::Message *))(*(void *)a3 + 152))(a3);
  std::string::basic_string[abi:ne180100]<0>(__p, "uninterpreted_option");
  uint64_t FieldByName = AddrObjGoogle::protobuf::Descriptor::FindFieldByName(v5, (uint64_t)__p);
  uint64_t v7 = FieldByName;
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p[0].__r_.__value_.__l.__data_);
    if (!v7)
    {
LABEL_5:
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4501);
      uint64_t v8 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: field != NULL: ");
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (AddrObjGoogle::protobuf::internal::LogMessage *)v8);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
    }
  }
  else if (!FieldByName)
  {
    goto LABEL_5;
  }
  uint64_t v9 = (*(uint64_t (**)(AddrObjGoogle::protobuf::Message *))(*(void *)a3 + 144))(a3);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::Message *, uint64_t, void))(*(void *)v9 + 520))(v9, a3, v7, 0);
  return (*(uint64_t (**)(uint64_t, const AddrObjGoogle::protobuf::UninterpretedOption *))(*(void *)v10
                                                                                                  + 104))(v10, a2);
}

void sub_189196880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t **a6)
{
  if (a2 == a3)
  {
    uint64_t v23 = 0;
    v24 = *a6;
    uint64_t v25 = -1;
    do
    {
      if (v24) {
        unint64_t v26 = (unint64_t)(v24[1] - *v24) >> 4;
      }
      else {
        LODWORD(v26) = 0;
      }
      if (++v25 >= (int)v26) {
        return 1;
      }
      int v27 = *(_DWORD *)(*v24 + v23);
      v23 += 16;
    }
    while ((v27 & 0x1FFFFFFF) != *(_DWORD *)(a4 + 40));
    std::operator+<char>();
    v28 = std::string::append(&v36, "\" was already set.");
    long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*a1, (const std::string::value_type *)(a1[1] + 24), a1[2], 7, (const std::string::value_type *)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v36.__r_.__value_.__l.__data_);
    }
    return 0;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = a2 + 8;
    while (1)
    {
      uint64_t v13 = *a6;
      if (*a6) {
        unint64_t v14 = (unint64_t)(v13[1] - *v13) >> 4;
      }
      else {
        LODWORD(v14) = 0;
      }
      BOOL v15 = v11 >= (int)v14;
      if (v11 >= (int)v14) {
        break;
      }
      uint64_t v16 = *v13;
      unsigned int v17 = *(_DWORD *)(*v13 + v10);
      if ((v17 & 0x1FFFFFFF) == *(_DWORD *)(*(void *)a2 + 40))
      {
        int v18 = *(_DWORD *)(*(void *)a2 + 44);
        if (v18 == 10)
        {
          if (v17 >> 29 == 4
            && (AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(a1, v12, a3, a4, a5, *(void *)(v16 + v10 + 8)) & 1) == 0)
          {
            return v15;
          }
        }
        else
        {
          if (v18 != 11)
          {
            AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4560);
            int v30 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(__p, "Invalid wire type for CPPTYPE_MESSAGE: ");
            long long v31 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v30, v18);
            AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v36, (AddrObjGoogle::protobuf::internal::LogMessage *)v31);
            AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
            return 0;
          }
          if (v17 >> 29 == 3)
          {
            AddrObjGoogle::protobuf::UnknownFieldSet::UnknownFieldSet(__p);
            uint64_t v19 = *(void *)(v16 + v10 + 8);
            int v20 = *(char *)(v19 + 23);
            if (v20 >= 0) {
              uint64_t v21 = *(const void **)(v16 + v10 + 8);
            }
            else {
              uint64_t v21 = *(const void **)v19;
            }
            if (v20 >= 0) {
              int v22 = *(unsigned __int8 *)(v19 + 23);
            }
            else {
              int v22 = *(_DWORD *)(v19 + 8);
            }
            if (AddrObjGoogle::protobuf::UnknownFieldSet::ParseFromArray((AddrObjGoogle::protobuf::UnknownFieldSet *)__p, v21, v22)&& (AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(a1, v12, a3, a4, a5, __p) & 1) == 0)
            {
              AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::UnknownFieldSet *)__p);
              return 0;
            }
            AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::UnknownFieldSet *)__p);
          }
        }
      }
      ++v11;
      v10 += 16;
    }
  }
  return v15;
}

void sub_189196B28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
}

uint64_t AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetOptionValue(AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *this, const AddrObjGoogle::protobuf::FieldDescriptor *a2, void ***a3)
{
  int v3 = *((_DWORD *)a2 + 11);
  switch(v3)
  {
    case 1:
      uint64_t v13 = *((void *)this + 2);
      int v14 = *(_DWORD *)(v13 + 92);
      if ((v14 & 0x10) != 0)
      {
        double v24 = *(double *)(v13 + 64);
      }
      else if ((v14 & 4) != 0)
      {
        double v24 = (double)*(unint64_t *)(v13 + 48);
      }
      else
      {
        if ((v14 & 8) == 0) {
          goto LABEL_140;
        }
        double v24 = (double)*(uint64_t *)(v13 + 56);
      }
      AddrObjGoogle::protobuf::UnknownFieldSet::AddFixed64(a3, *((_DWORD *)a2 + 10), *(uint64_t *)&v24);
      return 1;
    case 2:
      uint64_t v15 = *((void *)this + 2);
      int v16 = *(_DWORD *)(v15 + 92);
      if ((v16 & 0x10) != 0)
      {
        float v25 = *(double *)(v15 + 64);
      }
      else if ((v16 & 4) != 0)
      {
        float v25 = (float)*(unint64_t *)(v15 + 48);
      }
      else
      {
        if ((v16 & 8) == 0) {
          goto LABEL_140;
        }
        float v25 = (float)*(uint64_t *)(v15 + 56);
      }
      AddrObjGoogle::protobuf::UnknownFieldSet::AddFixed32(a3, *((_DWORD *)a2 + 10), SLODWORD(v25));
      return 1;
    case 3:
    case 16:
    case 18:
      uint64_t v9 = *((void *)this + 2);
      int v10 = *(_DWORD *)(v9 + 92);
      if ((v10 & 4) != 0)
      {
        uint64_t v21 = *(void *)(v9 + 48);
        if (v21 < 0) {
          goto LABEL_140;
        }
        int v22 = *((_DWORD *)a2 + 10);
      }
      else
      {
        if ((v10 & 8) == 0) {
          goto LABEL_140;
        }
        int v22 = *((_DWORD *)a2 + 10);
        uint64_t v21 = *(void *)(v9 + 56);
      }
      AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetInt64((int)this, v22, v21, v3, a3);
      return 1;
    case 4:
    case 6:
      uint64_t v12 = *((void *)this + 2);
      if ((*(unsigned char *)(v12 + 92) & 4) == 0) {
        goto LABEL_140;
      }
      AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt64((int)this, *((_DWORD *)a2 + 10), *(void *)(v12 + 48), v3, a3);
      return 1;
    case 5:
    case 15:
    case 17:
      uint64_t v7 = *((void *)this + 2);
      int v8 = *(_DWORD *)(v7 + 92);
      if ((v8 & 4) != 0)
      {
        uint64_t v20 = *(void *)(v7 + 48);
        if ((unint64_t)v20 >> 31) {
          goto LABEL_140;
        }
        goto LABEL_46;
      }
      if ((v8 & 8) != 0)
      {
        uint64_t v20 = *(void *)(v7 + 56);
        if (v20 > (uint64_t)0xFFFFFFFF7FFFFFFFLL)
        {
LABEL_46:
          AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetInt32((int)this, *((_DWORD *)a2 + 10), v20, v3, a3);
          return 1;
        }
      }
      goto LABEL_140;
    case 7:
    case 13:
      uint64_t v11 = *((void *)this + 2);
      if ((*(unsigned char *)(v11 + 92) & 4) == 0) {
        goto LABEL_140;
      }
      unint64_t v23 = *(void *)(v11 + 48);
      if (HIDWORD(v23)) {
        goto LABEL_140;
      }
      AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt32((int)this, *((_DWORD *)a2 + 10), v23, v3, a3);
      return 1;
    case 8:
      uint64_t v17 = *((void *)this + 2);
      if ((*(unsigned char *)(v17 + 92) & 2) == 0) {
        goto LABEL_140;
      }
      unint64_t v26 = *(_DWORD **)(v17 + 40);
      if (*((char *)v26 + 23) < 0)
      {
        uint64_t v33 = *((void *)v26 + 1);
        if (v33 != 4 || **(_DWORD **)v26 != 1702195828)
        {
          if (v33 != 5) {
            goto LABEL_140;
          }
          unint64_t v26 = *(_DWORD **)v26;
          goto LABEL_57;
        }
      }
      else
      {
        int v27 = *((unsigned __int8 *)v26 + 23);
        if (v27 != 4)
        {
          if (v27 != 5) {
            goto LABEL_140;
          }
LABEL_57:
          int v34 = *v26;
          int v35 = *((unsigned __int8 *)v26 + 4);
          if (v34 != 1936482662 || v35 != 101)
          {
LABEL_140:
            std::operator+<char>();
            v83 = std::string::append(&v90, "\".");
            long long v84 = *(_OWORD *)&v83->__r_.__value_.__l.__data_;
            v91.__r_.__value_.__r.__words[2] = v83->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v91.__r_.__value_.__l.__data_ = v84;
            v83->__r_.__value_.__l.__size_ = 0;
            v83->__r_.__value_.__r.__words[2] = 0;
            v83->__r_.__value_.__r.__words[0] = 0;
            AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 8, (const std::string::value_type *)&v91);
            if (SHIBYTE(v91.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v91.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0)
            {
              v82 = (void *)v90.__r_.__value_.__r.__words[0];
LABEL_144:
              operator delete(v82);
            }
            return 0;
          }
          uint64_t v37 = 0;
LABEL_147:
          int v64 = *((_DWORD *)a2 + 10);
          goto LABEL_148;
        }
        if (*v26 != 1702195828) {
          goto LABEL_140;
        }
      }
      uint64_t v37 = 1;
      goto LABEL_147;
    case 9:
    case 12:
      if ((*(unsigned char *)(*((void *)this + 2) + 92) & 0x20) != 0) {
        AddrObjGoogle::protobuf::UnknownFieldSet::AddLengthDelimited((AddrObjGoogle::protobuf::UnknownFieldSet *)a3);
      }
      goto LABEL_140;
    case 10:
    case 11:
      uint64_t result = AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetAggregateOption(this, (const AddrObjGoogle::protobuf::Descriptor **)a2, (AddrObjGoogle::protobuf::UnknownFieldSet *)a3);
      if (!result) {
        return result;
      }
      return 1;
    case 14:
      uint64_t v18 = *((void *)this + 2);
      if ((*(unsigned char *)(v18 + 92) & 2) == 0) {
        goto LABEL_140;
      }
      v28 = (void *)*((void *)a2 + 10);
      uint64_t v29 = *(void *)(v18 + 40);
      uint64_t v30 = *(void *)(v28[2] + 16);
      if (v30 != AddrObjGoogle::protobuf::DescriptorPool::generated_pool(this))
      {
        long long v31 = (long long *)v28[1];
        if (*((char *)v31 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(&v91, *(const std::string::value_type **)v31, *((void *)v31 + 1));
        }
        else
        {
          long long v32 = *v31;
          v91.__r_.__value_.__r.__words[2] = *((void *)v31 + 2);
          *(_OWORD *)&v91.__r_.__value_.__l.__data_ = v32;
        }
        std::string::size_type size = HIBYTE(v91.__r_.__value_.__r.__words[2]);
        if ((v91.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type size = v91.__r_.__value_.__l.__size_;
        }
        if (*(char *)(*v28 + 23) < 0) {
          uint64_t v41 = *(void *)(*v28 + 8);
        }
        else {
          uint64_t v41 = *(unsigned __int8 *)(*v28 + 23);
        }
        std::string::resize(&v91, size - v41, 0);
        int v42 = *(char *)(v29 + 23);
        if (v42 >= 0) {
          v43 = (const std::string::value_type *)v29;
        }
        else {
          v43 = *(const std::string::value_type **)v29;
        }
        if (v42 >= 0) {
          std::string::size_type v44 = *(unsigned __int8 *)(v29 + 23);
        }
        else {
          std::string::size_type v44 = *(void *)(v29 + 8);
        }
        std::string::append(&v91, v43, v44);
        if (sub_189198EDC(*(pthread_mutex_t *****)this, **(pthread_mutex_t *****)this, (uint64_t)&v91) == 4)
        {
          uint64_t v39 = v45;
          if (*(void **)(v45 + 24) != v28)
          {
            std::operator+<char>();
            uint64_t v46 = std::string::append(&v85, "\" has no value named \"");
            long long v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
            v86.__r_.__value_.__r.__words[2] = v46->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v86.__r_.__value_.__l.__data_ = v47;
            v46->__r_.__value_.__l.__size_ = 0;
            v46->__r_.__value_.__r.__words[2] = 0;
            v46->__r_.__value_.__r.__words[0] = 0;
            int v48 = *(char *)(v29 + 23);
            if (v48 >= 0) {
              uint64_t v49 = (const std::string::value_type *)v29;
            }
            else {
              uint64_t v49 = *(const std::string::value_type **)v29;
            }
            if (v48 >= 0) {
              std::string::size_type v50 = *(unsigned __int8 *)(v29 + 23);
            }
            else {
              std::string::size_type v50 = *(void *)(v29 + 8);
            }
            long long v51 = std::string::append(&v86, v49, v50);
            long long v52 = *(_OWORD *)&v51->__r_.__value_.__l.__data_;
            v87.__r_.__value_.__r.__words[2] = v51->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v87.__r_.__value_.__l.__data_ = v52;
            v51->__r_.__value_.__l.__size_ = 0;
            v51->__r_.__value_.__r.__words[2] = 0;
            v51->__r_.__value_.__r.__words[0] = 0;
            long long v53 = std::string::append(&v87, "\" for option \"");
            long long v54 = *(_OWORD *)&v53->__r_.__value_.__l.__data_;
            v88.__r_.__value_.__r.__words[2] = v53->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v54;
            v53->__r_.__value_.__l.__size_ = 0;
            v53->__r_.__value_.__r.__words[2] = 0;
            v53->__r_.__value_.__r.__words[0] = 0;
            uint64_t v55 = *((void *)a2 + 1);
            int v56 = *(char *)(v55 + 23);
            if (v56 >= 0) {
              v57 = (const std::string::value_type *)*((void *)a2 + 1);
            }
            else {
              v57 = *(const std::string::value_type **)v55;
            }
            if (v56 >= 0) {
              std::string::size_type v58 = *(unsigned __int8 *)(v55 + 23);
            }
            else {
              std::string::size_type v58 = *(void *)(v55 + 8);
            }
            int v59 = std::string::append(&v88, v57, v58);
            long long v60 = *(_OWORD *)&v59->__r_.__value_.__l.__data_;
            v89.__r_.__value_.__r.__words[2] = v59->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v60;
            v59->__r_.__value_.__l.__size_ = 0;
            v59->__r_.__value_.__r.__words[2] = 0;
            v59->__r_.__value_.__r.__words[0] = 0;
            std::string::size_type v61 = std::string::append(&v89, "\". This appears to be a value from a sibling type.");
            long long v62 = *(_OWORD *)&v61->__r_.__value_.__l.__data_;
            v90.__r_.__value_.__r.__words[2] = v61->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v90.__r_.__value_.__l.__data_ = v62;
            v61->__r_.__value_.__l.__size_ = 0;
            v61->__r_.__value_.__r.__words[2] = 0;
            v61->__r_.__value_.__r.__words[0] = 0;
            AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 8, (const std::string::value_type *)&v90);
            if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v90.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v89.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v88.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v87.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v86.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v85.__r_.__value_.__l.__data_);
            }
            char v63 = 0;
            uint64_t v39 = 0;
LABEL_110:
            if (SHIBYTE(v91.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v91.__r_.__value_.__l.__data_);
            }
            if ((v63 & 1) == 0) {
              return 0;
            }
            goto LABEL_113;
          }
        }
        else
        {
          uint64_t v39 = 0;
        }
        char v63 = 1;
        goto LABEL_110;
      }
      if (!sub_18918AF00(*(void **)(v28[2] + 144), (uint64_t)v28, v29, 4)) {
        goto LABEL_115;
      }
      uint64_t v39 = v38;
LABEL_113:
      if (v39)
      {
        int v64 = *((_DWORD *)a2 + 10);
        uint64_t v37 = *(int *)(v39 + 16);
LABEL_148:
        AddrObjGoogle::protobuf::UnknownFieldSet::AddVarint(a3, v64, v37);
        return 1;
      }
LABEL_115:
      std::operator+<char>();
      long long v65 = std::string::append(&v86, "\" has no value named \"");
      long long v66 = *(_OWORD *)&v65->__r_.__value_.__l.__data_;
      v87.__r_.__value_.__r.__words[2] = v65->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v87.__r_.__value_.__l.__data_ = v66;
      v65->__r_.__value_.__l.__size_ = 0;
      v65->__r_.__value_.__r.__words[2] = 0;
      v65->__r_.__value_.__r.__words[0] = 0;
      int v67 = *(char *)(v29 + 23);
      if (v67 >= 0) {
        std::string v68 = (const std::string::value_type *)v29;
      }
      else {
        std::string v68 = *(const std::string::value_type **)v29;
      }
      if (v67 >= 0) {
        std::string::size_type v69 = *(unsigned __int8 *)(v29 + 23);
      }
      else {
        std::string::size_type v69 = *(void *)(v29 + 8);
      }
      std::string v70 = std::string::append(&v87, v68, v69);
      long long v71 = *(_OWORD *)&v70->__r_.__value_.__l.__data_;
      v88.__r_.__value_.__r.__words[2] = v70->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v71;
      v70->__r_.__value_.__l.__size_ = 0;
      v70->__r_.__value_.__r.__words[2] = 0;
      v70->__r_.__value_.__r.__words[0] = 0;
      v72 = std::string::append(&v88, "\" for option \"");
      long long v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
      v89.__r_.__value_.__r.__words[2] = v72->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v73;
      v72->__r_.__value_.__l.__size_ = 0;
      v72->__r_.__value_.__r.__words[2] = 0;
      v72->__r_.__value_.__r.__words[0] = 0;
      uint64_t v74 = *((void *)a2 + 1);
      int v75 = *(char *)(v74 + 23);
      if (v75 >= 0) {
        v76 = (const std::string::value_type *)*((void *)a2 + 1);
      }
      else {
        v76 = *(const std::string::value_type **)v74;
      }
      if (v75 >= 0) {
        std::string::size_type v77 = *(unsigned __int8 *)(v74 + 23);
      }
      else {
        std::string::size_type v77 = *(void *)(v74 + 8);
      }
      v78 = std::string::append(&v89, v76, v77);
      long long v79 = *(_OWORD *)&v78->__r_.__value_.__l.__data_;
      v90.__r_.__value_.__r.__words[2] = v78->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v90.__r_.__value_.__l.__data_ = v79;
      v78->__r_.__value_.__l.__size_ = 0;
      v78->__r_.__value_.__r.__words[2] = 0;
      v78->__r_.__value_.__r.__words[0] = 0;
      v80 = std::string::append(&v90, "\".");
      long long v81 = *(_OWORD *)&v80->__r_.__value_.__l.__data_;
      v91.__r_.__value_.__r.__words[2] = v80->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v91.__r_.__value_.__l.__data_ = v81;
      v80->__r_.__value_.__l.__size_ = 0;
      v80->__r_.__value_.__r.__words[2] = 0;
      v80->__r_.__value_.__r.__words[0] = 0;
      AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 8, (const std::string::value_type *)&v91);
      if (SHIBYTE(v91.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v91.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v90.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v89.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v88.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v87.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
      {
        v82 = (void *)v86.__r_.__value_.__r.__words[0];
        goto LABEL_144;
      }
      return 0;
    default:
      return 1;
  }
}

void sub_189197758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (*(char *)(v42 - 105) < 0) {
    operator delete(*(void **)(v42 - 128));
  }
  if (a42 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (*(char *)(v42 - 73) < 0) {
    operator delete(*(void **)(v42 - 96));
  }
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::internal::scoped_ptr<AddrObjGoogle::protobuf::UnknownFieldSet>::reset(AddrObjGoogle::protobuf::UnknownFieldSet **a1, AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  uint64_t result = *a1;
  if (result != a2)
  {
    if (result)
    {
      AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet(result);
      uint64_t result = (AddrObjGoogle::protobuf::UnknownFieldSet *)MEMORY[0x18C11F580]();
    }
    *a1 = a2;
  }
  return result;
}

void AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetInt32(int a1, int a2, uint64_t a3, int a4, void ***this)
{
  if (a4 == 17)
  {
    a3 = (2 * a3) ^ ((int)a3 >> 31);
LABEL_6:
    AddrObjGoogle::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
    return;
  }
  if (a4 != 15)
  {
    if (a4 != 5)
    {
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4893);
      int v6 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v9, "Invalid wire type for CPPTYPE_INT32: ");
      uint64_t v7 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v6, a4);
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, (AddrObjGoogle::protobuf::internal::LogMessage *)v7);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
      return;
    }
    a3 = (int)a3;
    goto LABEL_6;
  }

  AddrObjGoogle::protobuf::UnknownFieldSet::AddFixed32(this, a2, a3);
}

void sub_189197A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetInt64(int a1, int a2, uint64_t a3, int a4, void ***this)
{
  if (a4 == 18)
  {
    a3 = (2 * a3) ^ (a3 >> 63);
LABEL_6:
    AddrObjGoogle::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
    return;
  }
  if (a4 != 16)
  {
    if (a4 != 3)
    {
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4915);
      int v6 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v9, "Invalid wire type for CPPTYPE_INT64: ");
      uint64_t v7 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v6, a4);
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, (AddrObjGoogle::protobuf::internal::LogMessage *)v7);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
      return;
    }
    goto LABEL_6;
  }

  AddrObjGoogle::protobuf::UnknownFieldSet::AddFixed64(this, a2, a3);
}

void sub_189197B6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt32(int a1, int a2, unsigned int a3, int a4, void ***this)
{
  if (a4 == 7)
  {
    AddrObjGoogle::protobuf::UnknownFieldSet::AddFixed32(this, a2, a3);
  }
  else if (a4 == 13)
  {
    AddrObjGoogle::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
  }
  else
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4932);
    int v6 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v9, "Invalid wire type for CPPTYPE_UINT32: ");
    uint64_t v7 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v6, a4);
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, (AddrObjGoogle::protobuf::internal::LogMessage *)v7);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
}

void sub_189197C4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt64(int a1, int a2, uint64_t a3, int a4, void ***this)
{
  if (a4 == 6)
  {
    AddrObjGoogle::protobuf::UnknownFieldSet::AddFixed64(this, a2, a3);
  }
  else if (a4 == 4)
  {
    AddrObjGoogle::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
  }
  else
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4949);
    int v6 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v9, "Invalid wire type for CPPTYPE_UINT64: ");
    uint64_t v7 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v6, a4);
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, (AddrObjGoogle::protobuf::internal::LogMessage *)v7);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
}

void sub_189197D28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetAggregateOption(AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *this, const AddrObjGoogle::protobuf::Descriptor **a2, AddrObjGoogle::protobuf::UnknownFieldSet *a3)
{
  if ((*(unsigned char *)(*((void *)this + 2) + 92) & 0x40) != 0)
  {
    uint64_t Prototype = AddrObjGoogle::protobuf::DynamicMessageFactory::GetPrototype((pthread_mutex_t **)this + 3, a2[9]);
    double v24 = (AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(uint64_t))(*(void *)Prototype + 24))(Prototype);
    if (!v24)
    {
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4847);
      float v25 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: dynamic.get() != NULL: ");
      unint64_t v26 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v25, "Could not create an instance of ");
      AddrObjGoogle::protobuf::FieldDescriptor::DebugString((AddrObjGoogle::protobuf::FieldDescriptor *)a2, &v39);
      int v27 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v26, (const std::string::value_type *)&v39);
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v38, (AddrObjGoogle::protobuf::internal::LogMessage *)v27);
      if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v39.__r_.__value_.__l.__data_);
      }
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
    }
    v39.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_1ED51C148;
    *(_OWORD *)&v39.__r_.__value_.__r.__words[1] = 0uLL;
    uint64_t v40 = 0;
    v28 = *(pthread_mutex_t **)this;
    v42.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_1ED5129A0;
    v42.__r_.__value_.__l.__size_ = (std::string::size_type)v28;
    AddrObjGoogle::protobuf::TextFormat::Parser::Parser((uint64_t)&v38);
    v38.__r_.__value_.__r.__words[0] = (std::string::size_type)&v39;
    v38.__r_.__value_.__l.__size_ = (std::string::size_type)&v42;
    uint64_t v21 = AddrObjGoogle::protobuf::TextFormat::Parser::ParseFromString((uint64_t)&v38, *(_DWORD **)(*((void *)this + 2) + 80), v24);
    if (v21)
    {
      memset(&__str, 0, sizeof(__str));
      AddrObjGoogle::protobuf::MessageLite::SerializeToString((uint64_t)v24, (uint64_t)&__str);
      int v29 = *((_DWORD *)a2 + 11);
      if (v29 == 11) {
        AddrObjGoogle::protobuf::UnknownFieldSet::AddLengthDelimited(a3);
      }
      if (v29 != 10)
      {
        AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4867);
        std::string v36 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (option_field->type()) == (FieldDescriptor::TYPE_GROUP): ");
        AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v43, (AddrObjGoogle::protobuf::internal::LogMessage *)v36);
        AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
      }
      AddrObjGoogle::protobuf::UnknownFieldSet::AddGroup(a3);
    }
    std::operator+<char>();
    uint64_t v30 = std::string::append(&v43, "\": ");
    long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v31;
    v30->__r_.__value_.__l.__size_ = 0;
    v30->__r_.__value_.__r.__words[2] = 0;
    v30->__r_.__value_.__r.__words[0] = 0;
    if (v40 >= 0) {
      std::string::size_type size = &v39.__r_.__value_.__s.__data_[8];
    }
    else {
      std::string::size_type size = (const std::string::value_type *)v39.__r_.__value_.__l.__size_;
    }
    if (v40 >= 0) {
      std::string::size_type v33 = HIBYTE(v40);
    }
    else {
      std::string::size_type v33 = v39.__r_.__value_.__r.__words[2];
    }
    int v34 = std::string::append(&__str, size, v33);
    long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v35;
    v34->__r_.__value_.__l.__size_ = 0;
    v34->__r_.__value_.__r.__words[2] = 0;
    v34->__r_.__value_.__r.__words[0] = 0;
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 8, (const std::string::value_type *)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v43.__r_.__value_.__l.__data_);
    }
    addr_obj::Localization::getDisplayLanguage((addr_obj::Localization *)&v38);
    addr_obj::Localization::getDisplayLanguage((addr_obj::Localization *)&v42);
    v39.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_1ED51C148;
    if (SHIBYTE(v40) < 0) {
      operator delete((void *)v39.__r_.__value_.__l.__size_);
    }
    addr_obj::Localization::getDisplayLanguage((addr_obj::Localization *)&v39);
    if (v24) {
      (*(void (**)(AddrObjGoogle::protobuf::Message *))(*(void *)v24 + 8))(v24);
    }
  }
  else
  {
    std::operator+<char>();
    uint64_t v5 = std::string::append(&v42, "\" is a message. To set the entire message, use syntax like \"");
    long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    v43.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v6;
    v5->__r_.__value_.__l.__size_ = 0;
    v5->__r_.__value_.__r.__words[2] = 0;
    v5->__r_.__value_.__r.__words[0] = 0;
    int v7 = *((char *)*a2 + 23);
    if (v7 >= 0) {
      char v8 = *a2;
    }
    else {
      char v8 = *(const AddrObjGoogle::protobuf::Descriptor **)*a2;
    }
    if (v7 >= 0) {
      std::string::size_type v9 = *((unsigned __int8 *)*a2 + 23);
    }
    else {
      std::string::size_type v9 = *((void *)*a2 + 1);
    }
    int v10 = std::string::append(&v43, (const std::string::value_type *)v8, v9);
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    uint64_t v12 = std::string::append(&__str, " = { <proto text format> }\". To set fields within it, use syntax like \"");
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v38.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    int v14 = *((char *)*a2 + 23);
    if (v14 >= 0) {
      uint64_t v15 = *a2;
    }
    else {
      uint64_t v15 = *(const AddrObjGoogle::protobuf::Descriptor **)*a2;
    }
    if (v14 >= 0) {
      std::string::size_type v16 = *((unsigned __int8 *)*a2 + 23);
    }
    else {
      std::string::size_type v16 = *((void *)*a2 + 1);
    }
    uint64_t v17 = std::string::append(&v38, (const std::string::value_type *)v15, v16);
    long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v39.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    uint64_t v19 = std::string::append(&v39, ".foo = value\".");
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 8, (const std::string::value_type *)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v39.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v38.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v43.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v42.__r_.__value_.__l.__data_);
    }
    return 0;
  }
  return v21;
}

void sub_189198210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage(&a23);
  if (*(char *)(v39 - 73) < 0) {
    operator delete(*(void **)(v39 - 96));
  }
  addr_obj::Localization::getDisplayLanguage((addr_obj::Localization *)&a9);
  addr_obj::Localization::getDisplayLanguage((addr_obj::Localization *)&a33);
  sub_1891983B0(&__p);
  if (v38) {
    (*(void (**)(uint64_t))(*(void *)v38 + 8))(v38);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1891983B0(void **this)
{
  *this = &unk_1ED51C148;
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  return addr_obj::Localization::getDisplayLanguage((addr_obj::Localization *)this);
}

uint64_t std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(uint64_t a1)
{
  std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__deallocate_node(a1, *(void ***)(a1 + 16));
  v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__deallocate_node(int a1, void **__p)
{
  if (__p)
  {
    v2 = __p;
    do
    {
      int v3 = (void **)*v2;
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

_DWORD *AddrObjGoogle::protobuf::DescriptorPool::Tables::CheckPoint::CheckPoint(_DWORD *result, void *a2)
{
  uint64_t v2 = (a2[17] - a2[16]) >> 3;
  *uint64_t result = (a2[14] - a2[13]) >> 3;
  result[1] = v2;
  uint64_t v3 = (a2[23] - a2[22]) >> 3;
  result[2] = (a2[20] - a2[19]) >> 3;
  result[3] = v3;
  uint64_t v4 = (a2[45] - a2[44]) >> 3;
  result[4] = (a2[42] - a2[41]) >> 3;
  result[5] = v4;
  result[6] = (a2[48] - a2[47]) >> 4;
  return result;
}

void AddrObjGoogle::protobuf::internal::MutexLockMaybe::~MutexLockMaybe(pthread_mutex_t ***this)
{
  v1 = *this;
  if (v1) {
    AddrObjGoogle::protobuf::internal::Mutex::Unlock(v1);
  }
}

void sub_189198534()
{
}

void sub_1891985C8(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F580](v1, 0x1060C4032DA966FLL);
  _Unwind_Resume(a1);
}

uint64_t sub_189198608()
{
  if (qword_1E9117668) {
    (*(void (**)(uint64_t))(*(void *)qword_1E9117668 + 8))(qword_1E9117668);
  }
  qword_1E9117668 = 0;
  uint64_t result = qword_1E9117660;
  if (qword_1E9117660)
  {
    AddrObjGoogle::protobuf::DescriptorPool::~DescriptorPool((AddrObjGoogle::protobuf::DescriptorPool::Tables **)qword_1E9117660);
    uint64_t result = MEMORY[0x18C11F580]();
  }
  qword_1E9117660 = 0;
  return result;
}

void sub_189198680()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1E9117688, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1E9117688))
  {
    LODWORD(qword_1E9117678) = 0;
    qword_1E9117680 = 0;
    __cxa_guard_release(&qword_1E9117688);
  }
}

uint64_t *std::__tree<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::less<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>>>::find<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>(uint64_t a1, unint64_t *a2)
{
  uint64_t v4 = *(uint64_t **)(a1 + 8);
  uint64_t v2 = (uint64_t *)(a1 + 8);
  uint64_t v3 = v4;
  if (!v4) {
    return v2;
  }
  unint64_t v5 = *a2;
  int v6 = *((_DWORD *)a2 + 2);
  int v7 = v2;
  do
  {
    unint64_t v8 = v3[4];
    if (v8 >= v5)
    {
      if (v5 >= v8)
      {
        if (*((_DWORD *)v3 + 10) < v6) {
          ++v3;
        }
        else {
          int v7 = v3;
        }
      }
      else
      {
        int v7 = v3;
      }
    }
    else
    {
      ++v3;
    }
    uint64_t v3 = (uint64_t *)*v3;
  }
  while (v3);
  if (v7 == v2) {
    return v2;
  }
  unint64_t v9 = v7[4];
  if (v5 < v9 || v9 >= v5 && v6 < *((_DWORD *)v7 + 10)) {
    return v2;
  }
  return v7;
}

BOOL sub_189198774(int a1, uint64_t a2, uint64_t a3)
{
  v54[2] = *MEMORY[0x1E4F143B8];
  std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)a3);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 144))(a2);
  uint64_t v49 = 0;
  std::string::size_type v50 = 0;
  uint64_t v51 = 0;
  uint64_t v44 = v6;
  uint64_t v7 = a2;
  (*(void (**)(uint64_t, uint64_t, void **))(*(void *)v6 + 96))(v6, a2, &v49);
  unint64_t v8 = v50;
  if (v50 != v49)
  {
    unint64_t v9 = 0;
    int v46 = a1 + 1;
    std::string::size_type __n = 2 * a1;
    unint64_t v8 = v49;
    while (1)
    {
      int v10 = *(_DWORD *)(v8[v9] + 48);
      if (v10 != 3) {
        break;
      }
      int v11 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v44 + 48))(v44, v7);
      if (v11 >= 1) {
        goto LABEL_7;
      }
LABEL_66:
      ++v9;
      unint64_t v8 = v49;
      if (v9 >= v50 - v49) {
        goto LABEL_67;
      }
    }
    int v11 = 1;
LABEL_7:
    for (unsigned int i = 0; i != v11; ++i)
    {
      memset(&v48, 0, sizeof(v48));
      uint64_t v13 = v49[v9];
      if ((*(_DWORD *)(v13 + 44) & 0xFFFFFFFE) == 0xA)
      {
        memset(&__p, 0, 24);
        AddrObjGoogle::protobuf::TextFormat::Printer::Printer(&v47);
        LODWORD(v47.__r_.__value_.__l.__data_) = v46;
        if (v10 == 3) {
          uint64_t v14 = i;
        }
        else {
          uint64_t v14 = 0xFFFFFFFFLL;
        }
        AddrObjGoogle::protobuf::TextFormat::Printer::PrintFieldValueToString((int *)&v47, v7, v49[v9], v14, (uint64_t)&__p);
        std::string::append(&v48, "{\n");
        if (SHIBYTE(__p.__end_) >= 0) {
          std::__split_buffer<std::string>::pointer p_p = (std::__split_buffer<std::string>::pointer)&__p;
        }
        else {
          std::__split_buffer<std::string>::pointer p_p = __p.__first_;
        }
        if (SHIBYTE(__p.__end_) >= 0) {
          std::string::size_type end_high = HIBYTE(__p.__end_);
        }
        else {
          std::string::size_type end_high = (std::string::size_type)__p.__begin_;
        }
        std::string::append(&v48, (const std::string::value_type *)p_p, end_high);
        std::string::append(&v48, __n, 32);
        std::string::append(&v48, "}");
        addr_obj::Localization::getDisplayLanguage((addr_obj::Localization *)&v47);
        if (SHIBYTE(__p.__end_) < 0) {
          operator delete(__p.__first_);
        }
      }
      else
      {
        if (v10 == 3) {
          uint64_t v17 = i;
        }
        else {
          uint64_t v17 = 0xFFFFFFFFLL;
        }
        AddrObjGoogle::protobuf::TextFormat::PrintFieldValueToString(v7, v13, v17, (uint64_t)&v48);
      }
      memset(&v47, 0, sizeof(v47));
      uint64_t v18 = v49[v9];
      if (*(unsigned char *)(v18 + 52))
      {
        std::operator+<char>();
        uint64_t v19 = std::string::append((std::string *)&__p, ")");
        std::string::size_type v20 = v19->__r_.__value_.__r.__words[0];
        v53.__r_.__value_.__r.__words[0] = v19->__r_.__value_.__l.__size_;
        *(std::string::size_type *)((char *)v53.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v19->__r_.__value_.__r.__words[1] + 7);
        char v21 = HIBYTE(v19->__r_.__value_.__r.__words[2]);
        v19->__r_.__value_.__l.__size_ = 0;
        v19->__r_.__value_.__r.__words[2] = 0;
        v19->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v47.__r_.__value_.__l.__data_);
        }
        v47.__r_.__value_.__r.__words[0] = v20;
        v47.__r_.__value_.__l.__size_ = v53.__r_.__value_.__r.__words[0];
        *(std::string::size_type *)((char *)&v47.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v53.__r_.__value_.__r.__words + 7);
        *((unsigned char *)&v47.__r_.__value_.__s + 23) = v21;
        if (SHIBYTE(__p.__end_) < 0) {
          operator delete(__p.__first_);
        }
      }
      else
      {
        std::string::operator=(&v47, *(const std::string **)v18);
      }
      if ((v47.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v47.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v47.__r_.__value_.__l.__size_;
      }
      std::string::basic_string[abi:ne180100]((uint64_t)&v53, size + 3);
      if ((v53.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unint64_t v23 = &v53;
      }
      else {
        unint64_t v23 = (std::string *)v53.__r_.__value_.__r.__words[0];
      }
      if (size)
      {
        if ((v47.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          double v24 = &v47;
        }
        else {
          double v24 = (std::string *)v47.__r_.__value_.__r.__words[0];
        }
        memmove(v23, v24, size);
      }
      *(_DWORD *)((char *)&v23->__r_.__value_.__l.__data_ + size) = 2112800;
      if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        float v25 = &v48;
      }
      else {
        float v25 = (std::string *)v48.__r_.__value_.__r.__words[0];
      }
      if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v26 = HIBYTE(v48.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v26 = v48.__r_.__value_.__l.__size_;
      }
      int v27 = std::string::append(&v53, (const std::string::value_type *)v25, v26);
      std::string::size_type v28 = v27->__r_.__value_.__r.__words[0];
      v54[0] = v27->__r_.__value_.__l.__size_;
      *(void *)((char *)v54 + 7) = *(std::string::size_type *)((char *)&v27->__r_.__value_.__r.__words[1] + 7);
      char v29 = HIBYTE(v27->__r_.__value_.__r.__words[2]);
      v27->__r_.__value_.__l.__size_ = 0;
      v27->__r_.__value_.__r.__words[2] = 0;
      v27->__r_.__value_.__r.__words[0] = 0;
      unint64_t v30 = *(void *)(a3 + 8);
      unint64_t v31 = *(void *)(a3 + 16);
      if (v30 >= v31)
      {
        unint64_t v34 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v30 - *(void *)a3) >> 3);
        unint64_t v35 = v34 + 1;
        if (v34 + 1 > 0xAAAAAAAAAAAAAAALL) {
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        }
        unint64_t v36 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v31 - *(void *)a3) >> 3);
        if (2 * v36 > v35) {
          unint64_t v35 = 2 * v36;
        }
        if (v36 >= 0x555555555555555) {
          unint64_t v37 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v37 = v35;
        }
        __p.__end_cap_.__value_ = (std::allocator<std::string> *)(a3 + 16);
        if (v37) {
          uint64_t v38 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::TrafficDynamicTile::Flow>>(a3 + 16, v37);
        }
        else {
          uint64_t v38 = 0;
        }
        uint64_t v39 = v38 + v34;
        __p.__first_ = v38;
        __p.__begin_ = v39;
        __p.__end_cap_.__value_ = &v38[v37];
        std::string::size_type v40 = v54[0];
        v39->__r_.__value_.__r.__words[0] = v28;
        v39->__r_.__value_.__l.__size_ = v40;
        *(std::string::size_type *)((char *)&v39->__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v54 + 7);
        *((unsigned char *)&v39->__r_.__value_.__s + 23) = v29;
        __p.__end_ = v39 + 1;
        std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)a3, &__p);
        unint64_t v33 = *(void *)(a3 + 8);
        std::__split_buffer<std::string>::~__split_buffer(&__p);
      }
      else
      {
        uint64_t v32 = v54[0];
        *(void *)unint64_t v30 = v28;
        *(void *)(v30 + 8) = v32;
        *(void *)(v30 + 15) = *(void *)((char *)v54 + 7);
        *(unsigned char *)(v30 + 23) = v29;
        unint64_t v33 = v30 + 24;
        *(void *)(a3 + 8) = v30 + 24;
      }
      *(void *)(a3 + 8) = v33;
      if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v53.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v47.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v48.__r_.__value_.__l.__data_);
      }
    }
    goto LABEL_66;
  }
LABEL_67:
  uint64_t v42 = *(void *)a3;
  uint64_t v41 = *(void *)(a3 + 8);
  if (v8)
  {
    std::string::size_type v50 = v8;
    operator delete(v8);
  }
  return v42 != v41;
}

void sub_189198C68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *__p,uint64_t a27,uint64_t a28,std::__split_buffer<std::string> *a29)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_189198D38(uint64_t a1, std::string *a2)
{
  unint64_t v4 = sub_189198EDC((pthread_mutex_t ****)a1, *(pthread_mutex_t ****)a1, (uint64_t)a2);
  unint64_t v6 = v4;
  if (v4 && *(unsigned char *)(*(void *)a1 + 40))
  {
    uint64_t v7 = v5;
    switch((int)v4)
    {
      case 1:
      case 3:
      case 5:
        unint64_t v8 = v5 + 2;
        goto LABEL_10;
      case 2:
        unint64_t v8 = v5 + 4;
        goto LABEL_10;
      case 4:
        uint64_t v9 = v5[3];
        goto LABEL_9;
      case 6:
        uint64_t v9 = v5[2];
LABEL_9:
        unint64_t v8 = (void *)(v9 + 16);
LABEL_10:
        uint64_t v7 = (void *)*v8;
        break;
      case 7:
        break;
      default:
        uint64_t v7 = 0;
        break;
    }
    uint64_t v10 = *(void *)(a1 + 80);
    if (v7 != (void *)v10)
    {
      uint64_t v12 = (void *)(a1 + 104);
      for (unsigned int i = *(void **)(a1 + 104); i; unsigned int i = (void *)*i)
      {
        unint64_t v13 = i[4];
        if ((unint64_t)v7 >= v13)
        {
          if (v13 >= (unint64_t)v7) {
            return v6;
          }
          ++i;
        }
      }
      if (v4 != 7) {
        goto LABEL_28;
      }
      BOOL v14 = AddrObjGoogle::protobuf::DescriptorBuilder::IsInPackage(v4, v10, (const void **)&a2->__r_.__value_.__l.__data_);
      if (v14) {
        return v6;
      }
      uint64_t v15 = *(void **)(a1 + 96);
      if (v15 == v12)
      {
LABEL_28:
        *(void *)(a1 + 120) = v7;
        std::string::operator=((std::string *)(a1 + 128), a2);
        sub_189198680();
        return qword_1E9117678;
      }
      while (1)
      {
        uint64_t v16 = v15[4];
        if (v16)
        {
          LOBYTE(v14) = AddrObjGoogle::protobuf::DescriptorBuilder::IsInPackage(v14, v16, (const void **)&a2->__r_.__value_.__l.__data_);
          if (v14) {
            break;
          }
        }
        uint64_t v17 = (void *)v15[1];
        if (v17)
        {
          do
          {
            uint64_t v18 = v17;
            uint64_t v17 = (void *)*v17;
          }
          while (v17);
        }
        else
        {
          do
          {
            uint64_t v18 = (void *)v15[2];
            BOOL v19 = *v18 == (void)v15;
            uint64_t v15 = v18;
          }
          while (!v19);
        }
        uint64_t v15 = v18;
        if (v18 == v12) {
          goto LABEL_28;
        }
      }
    }
  }
  return v6;
}

unint64_t sub_189198EDC(pthread_mutex_t ****a1, pthread_mutex_t ***a2, uint64_t a3)
{
  if (*a1 == a2)
  {
    uint64_t v39 = 0;
  }
  else
  {
    unint64_t v6 = *a2;
    uint64_t v39 = v6;
    if (v6) {
      AddrObjGoogle::protobuf::internal::Mutex::Lock(v6);
    }
  }
  uint64_t v7 = (int8x8_t *)a2[4];
  if (*(char *)(a3 + 23) >= 0) {
    unint64_t v8 = (const char *)a3;
  }
  else {
    unint64_t v8 = *(const char **)a3;
  }
  char v9 = *v8;
  if (*v8)
  {
    unint64_t v10 = 0;
    int v11 = (unsigned __int8 *)(v8 + 1);
    do
    {
      unint64_t v10 = 5 * v10 + v9;
      int v12 = *v11++;
      char v9 = v12;
    }
    while (v12);
  }
  else
  {
    unint64_t v10 = 0;
  }
  int8x8_t v13 = v7[26];
  if (!*(void *)&v13) {
    goto LABEL_29;
  }
  uint8x8_t v14 = (uint8x8_t)vcnt_s8(v13);
  v14.i16[0] = vaddlv_u8(v14);
  unint64_t v15 = v14.u32[0];
  if (v14.u32[0] > 1uLL)
  {
    unint64_t v16 = v10;
    if (v10 >= *(void *)&v13) {
      unint64_t v16 = v10 % *(void *)&v13;
    }
  }
  else
  {
    unint64_t v16 = (*(void *)&v13 - 1) & v10;
  }
  uint64_t v17 = *(uint64_t ***)(*(void *)&v7[25] + 8 * v16);
  if (!v17 || (uint64_t v18 = *v17) == 0)
  {
LABEL_29:
    sub_189198680();
    unint64_t v31 = &qword_1E9117678;
    unint64_t v30 = &qword_1E9117678;
    goto LABEL_30;
  }
  while (1)
  {
    unint64_t v19 = v18[1];
    if (v10 == v19) {
      break;
    }
    if (v15 > 1)
    {
      if (v19 >= *(void *)&v13) {
        v19 %= *(void *)&v13;
      }
    }
    else
    {
      v19 &= *(void *)&v13 - 1;
    }
    if (v19 != v16) {
      goto LABEL_29;
    }
LABEL_28:
    uint64_t v18 = (uint64_t *)*v18;
    if (!v18) {
      goto LABEL_29;
    }
  }
  if (strcmp((const char *)v18[2], v8)) {
    goto LABEL_28;
  }
  unint64_t v30 = v18 + 3;
  unint64_t v31 = &qword_1E9117678;
LABEL_30:
  uint64_t v20 = *v30;
  unint64_t v21 = HIDWORD(*v30);
  if (!*v30)
  {
    unint64_t v23 = a2[3];
    if (!v23 || (v24 = sub_189198EDC(a1, v23, a3), LODWORD(v20) = v24, unint64_t v21 = HIDWORD(v24), !v24))
    {
      if (AddrObjGoogle::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase((AddrObjGoogle::protobuf::DescriptorPool *)a2, a3))
      {
        float v25 = (int8x8_t *)a2[4];
        if (*(char *)(a3 + 23) < 0) {
          a3 = *(void *)a3;
        }
        char v26 = *(unsigned char *)a3;
        if (*(unsigned char *)a3)
        {
          unint64_t v27 = 0;
          std::string::size_type v28 = (unsigned __int8 *)(a3 + 1);
          do
          {
            unint64_t v27 = 5 * v27 + v26;
            int v29 = *v28++;
            char v26 = v29;
          }
          while (v29);
        }
        else
        {
          unint64_t v27 = 0;
        }
        int8x8_t v32 = v25[26];
        if (v32)
        {
          uint8x8_t v33 = (uint8x8_t)vcnt_s8(v32);
          v33.i16[0] = vaddlv_u8(v33);
          unint64_t v34 = v33.u32[0];
          if (v33.u32[0] > 1uLL)
          {
            unint64_t v35 = v27;
            if (v27 >= *(void *)&v32) {
              unint64_t v35 = v27 % *(void *)&v32;
            }
          }
          else
          {
            unint64_t v35 = (*(void *)&v32 - 1) & v27;
          }
          unint64_t v36 = *(uint64_t ***)(*(void *)&v25[25] + 8 * v35);
          if (v36)
          {
            for (unsigned int i = *v36; i; unsigned int i = (uint64_t *)*i)
            {
              unint64_t v38 = i[1];
              if (v27 == v38)
              {
                if (!strcmp((const char *)i[2], (const char *)a3))
                {
                  unint64_t v31 = i + 3;
                  goto LABEL_60;
                }
              }
              else
              {
                if (v34 > 1)
                {
                  if (v38 >= *(void *)&v32) {
                    v38 %= *(void *)&v32;
                  }
                }
                else
                {
                  v38 &= *(void *)&v32 - 1;
                }
                if (v38 != v35) {
                  break;
                }
              }
            }
          }
        }
        sub_189198680();
LABEL_60:
        uint64_t v20 = *v31;
        unint64_t v21 = HIDWORD(*v31);
      }
      else
      {
        LODWORD(v20) = 0;
      }
    }
  }
  AddrObjGoogle::protobuf::internal::MutexLockMaybe::~MutexLockMaybe(&v39);
  return v20 | ((unint64_t)v21 << 32);
}

void sub_1891991C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::MutexLockMaybe::~MutexLockMaybe((pthread_mutex_t ***)va);
  _Unwind_Resume(a1);
}

void sub_1891991DC(void **this)
{
  *this = &unk_1ED51C148;
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  addr_obj::Localization::getDisplayLanguage((addr_obj::Localization *)this);

  JUMPOUT(0x18C11F580);
}

std::string *sub_189199250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (std::string *)(a1 + 8);
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(a1 + 31)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*(void *)(a1 + 16)) {
LABEL_3:
  }
    std::string::append((std::string *)(a1 + 8), "; ");
LABEL_4:
  int v6 = *(char *)(a4 + 23);
  if (v6 >= 0) {
    uint64_t v7 = (const std::string::value_type *)a4;
  }
  else {
    uint64_t v7 = *(const std::string::value_type **)a4;
  }
  if (v6 >= 0) {
    std::string::size_type v8 = *(unsigned __int8 *)(a4 + 23);
  }
  else {
    std::string::size_type v8 = *(void *)(a4 + 8);
  }

  return std::string::append(v5, v7, v8);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder::~AggregateOptionFinder(AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder *this)
{
  addr_obj::Localization::getDisplayLanguage(this);

  JUMPOUT(0x18C11F580);
}

uint64_t AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder::FindExtension(uint64_t a1, uint64_t a2, std::string *a3)
{
  int v6 = ***(addr_obj::Localization ****)(a1 + 8);
  if (v6) {
    addr_obj::Localization::getDisplayLanguage(v6);
  }
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 152))(a2);
  int v8 = sub_189194878(*(void *)(a1 + 8), a3, *(void *)(v7 + 8), 0);
  if (v8 == 1)
  {
    if (!*(unsigned char *)(*(void *)(v7 + 32) + 64)) {
      return 0;
    }
    uint64_t v11 = *(unsigned int *)(v9 + 104);
    if ((int)v11 < 1) {
      return 0;
    }
    for (uint64_t result = *(void *)(v9 + 112);
          *(void *)(result + 56) != v7
       || *(_DWORD *)(result + 44) != 11
       || *(_DWORD *)(result + 48) != 1
       || *(void *)(result + 72) != v9;
          result += 120)
    {
      if (!--v11) {
        return 0;
      }
    }
  }
  else
  {
    if (v8 != 2) {
      return 0;
    }
    uint64_t result = v9;
    if (!*(unsigned char *)(v9 + 52)) {
      return 0;
    }
  }
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<AddrObjGoogle::protobuf::DescriptorPool::Tables::CheckPoint>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x924924924924925) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(28 * a2);
}

uint64_t *std::__hash_table<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>>>::__erase_unique<char const*>(void *a1, const char **a2)
{
  uint64_t result = (uint64_t *)std::__hash_table<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>>>::find<char const*>(a1, a2);
  if (result)
  {
    std::__hash_table<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>>>::erase(a1, result);
    return (uint64_t *)1;
  }
  return result;
}

uint64_t **std::__hash_table<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>>>::find<char const*>(void *a1, const char **a2)
{
  uint64_t v2 = *a2;
  char v3 = **a2;
  if (v3)
  {
    unint64_t v4 = 0;
    unint64_t v5 = (unsigned __int8 *)(v2 + 1);
    do
    {
      unint64_t v4 = 5 * v4 + v3;
      int v6 = *v5++;
      char v3 = v6;
    }
    while (v6);
  }
  else
  {
    unint64_t v4 = 0;
  }
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
  uint8x8_t v8 = (uint8x8_t)vcnt_s8(v7);
  v8.i16[0] = vaddlv_u8(v8);
  unint64_t v9 = v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    unint64_t v10 = v4;
    if (v4 >= *(void *)&v7) {
      unint64_t v10 = v4 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v7 - 1) & v4;
  }
  uint64_t v11 = *(uint64_t ****)(*a1 + 8 * v10);
  if (!v11) {
    return 0;
  }
  for (unsigned int i = *v11; i; unsigned int i = (uint64_t **)*i)
  {
    unint64_t v13 = (unint64_t)i[1];
    if (v13 == v4)
    {
      if (!strcmp((const char *)i[2], v2)) {
        return i;
      }
    }
    else
    {
      if (v9 > 1)
      {
        if (v13 >= *(void *)&v7) {
          v13 %= *(void *)&v7;
        }
      }
      else
      {
        v13 &= *(void *)&v7 - 1;
      }
      if (v13 != v10) {
        return 0;
      }
    }
  }
  return i;
}

uint64_t std::__hash_table<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>>>::erase(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  std::__hash_table<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>>>::remove(a1, a2, (uint64_t)&__p);
  char v3 = __p;
  std::__split_buffer<std::string> __p = 0;
  if (v3) {
    operator delete(v3);
  }
  return v2;
}

void *std::__hash_table<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>>>::remove@<X0>(void *result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3 = (int8x8_t)result[1];
  unint64_t v4 = a2[1];
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v3) {
      v4 %= *(void *)&v3;
    }
  }
  else
  {
    v4 &= *(void *)&v3 - 1;
  }
  int v6 = *(void **)(*result + 8 * v4);
  do
  {
    int8x8_t v7 = v6;
    int v6 = (void *)*v6;
  }
  while (v6 != a2);
  if (v7 == result + 2) {
    goto LABEL_18;
  }
  unint64_t v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(void *)&v3) {
      v8 %= *(void *)&v3;
    }
  }
  else
  {
    v8 &= *(void *)&v3 - 1;
  }
  if (v8 != v4)
  {
LABEL_18:
    if (!*a2) {
      goto LABEL_19;
    }
    unint64_t v9 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(void *)&v3) {
        v9 %= *(void *)&v3;
      }
    }
    else
    {
      v9 &= *(void *)&v3 - 1;
    }
    if (v9 != v4) {
LABEL_19:
    }
      *(void *)(*result + 8 * v4) = 0;
  }
  uint64_t v10 = *a2;
  if (*a2)
  {
    unint64_t v11 = *(void *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(void *)&v3) {
        v11 %= *(void *)&v3;
      }
    }
    else
    {
      v11 &= *(void *)&v3 - 1;
    }
    if (v11 != v4)
    {
      *(void *)(*result + 8 * v11) = v7;
      uint64_t v10 = *a2;
    }
  }
  *int8x8_t v7 = v10;
  *a2 = 0;
  --result[3];
  *(void *)a3 = a2;
  *(void *)(a3 + 8) = result + 2;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

uint64_t std::__tree<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::less<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>>>::__erase_unique<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>(uint64_t **a1, unint64_t *a2)
{
  int8x8_t v3 = std::__tree<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::less<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>>>::find<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  unint64_t v4 = v3;
  std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__remove_node_pointer(a1, v3);
  operator delete(v4);
  return 1;
}

void std::vector<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>::__append(void **a1, unint64_t a2)
{
  int v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint8x8_t v5 = v6;
  int8x8_t v7 = *(_DWORD **)(v4 - 8);
  if (a2 <= (v6 - (unsigned char *)v7) >> 4)
  {
    if (a2)
    {
      uint8x8_t v14 = &v7[4 * a2];
      do
      {
        *(void *)int8x8_t v7 = 0;
        v7[2] = 0;
        v7 += 4;
      }
      while (v7 != v14);
      int8x8_t v7 = v14;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = (char *)v7 - (unsigned char *)*a1;
    unint64_t v9 = a2 + (v8 >> 4);
    if (v9 >> 60) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v8 >> 4;
    uint64_t v11 = v5 - (unsigned char *)*a1;
    if (v11 >> 3 > v9) {
      unint64_t v9 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    if (v12) {
      unint64_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>(v4, v12);
    }
    else {
      unint64_t v13 = 0;
    }
    unint64_t v15 = &v13[16 * v10];
    unint64_t v16 = &v15[16 * a2];
    uint64_t v17 = v15;
    do
    {
      *(void *)uint64_t v17 = 0;
      *((_DWORD *)v17 + 2) = 0;
      v17 += 16;
    }
    while (v17 != v16);
    uint64_t v18 = &v13[16 * v12];
    uint64_t v20 = (char *)*a1;
    unint64_t v19 = (char *)a1[1];
    if (v19 != *a1)
    {
      do
      {
        *((_OWORD *)v15 - 1) = *((_OWORD *)v19 - 1);
        v15 -= 16;
        v19 -= 16;
      }
      while (v19 != v20);
      unint64_t v19 = (char *)*a1;
    }
    *a1 = v15;
    a1[1] = v16;
    a1[2] = v18;
    if (v19)
    {
      operator delete(v19);
    }
  }
}

void *std::__hash_table<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>>>::__emplace_unique_key_args<char const*,std::pair<char const* const,AddrObjGoogle::protobuf::FileDescriptor const*>>(uint64_t a1, const char **a2, _OWORD *a3)
{
  int v6 = *a2;
  char v7 = **a2;
  if (v7)
  {
    unint64_t v8 = 0;
    unint64_t v9 = (unsigned __int8 *)(v6 + 1);
    do
    {
      unint64_t v8 = 5 * v8 + v7;
      int v10 = *v9++;
      char v7 = v10;
    }
    while (v10);
  }
  else
  {
    unint64_t v8 = 0;
  }
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v11) {
        unint64_t v3 = v8 % v11;
      }
    }
    else
    {
      unint64_t v3 = (v11 - 1) & v8;
    }
    uint8x8_t v14 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v14)
    {
      for (unsigned int i = *v14; i; unsigned int i = *(void **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v8)
        {
          if (!strcmp(*((const char **)i + 2), v6)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v3) {
            break;
          }
        }
      }
    }
  }
  unsigned int i = operator new(0x20uLL);
  *(void *)unsigned int i = 0;
  *((void *)i + 1) = v8;
  *((_OWORD *)i + 1) = *a3;
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    BOOL v19 = 1;
    if (v11 >= 3) {
      BOOL v19 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v11);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::__rehash<true>(a1, v22);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v8 >= v11) {
        unint64_t v3 = v8 % v11;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v11 - 1) & v8;
    }
  }
  uint64_t v23 = *(void *)a1;
  unint64_t v24 = *(void **)(*(void *)a1 + 8 * v3);
  if (v24)
  {
    *(void *)unsigned int i = *v24;
LABEL_43:
    void *v24 = i;
    goto LABEL_44;
  }
  *(void *)unsigned int i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v23 + 8 * v3) = a1 + 16;
  if (*(void *)i)
  {
    unint64_t v25 = *(void *)(*(void *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v25 >= v11) {
        v25 %= v11;
      }
    }
    else
    {
      v25 &= v11 - 1;
    }
    unint64_t v24 = (void *)(*(void *)a1 + 8 * v25);
    goto LABEL_43;
  }
LABEL_44:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_189199AE4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

_OWORD *std::__tree<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::less<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>>>::__emplace_unique_key_args<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,std::pair<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int> const,AddrObjGoogle::protobuf::FieldDescriptor const*>>(uint64_t **a1, unint64_t *a2, uint64_t a3)
{
  uint8x8_t v5 = std::__tree<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::less<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>>>::__find_equal<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>((uint64_t)a1, &v9, a2);
  int v6 = (_OWORD *)*v5;
  if (!*v5)
  {
    char v7 = (uint64_t **)v5;
    int v6 = operator new(0x38uLL);
    std::string v6[2] = *(_OWORD *)a3;
    *((void *)v6 + 6) = *(void *)(a3 + 16);
    std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::__insert_node_at(a1, v9, v7, (uint64_t *)v6);
  }
  return v6;
}

uint64_t *std::__tree<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::less<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>>>::__find_equal<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>(uint64_t a1, void *a2, unint64_t *a3)
{
  uint8x8_t v5 = *(uint64_t **)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  uint64_t v4 = v5;
  if (v5)
  {
    unint64_t v6 = *a3;
    int v7 = *((_DWORD *)a3 + 2);
    while (1)
    {
      while (1)
      {
        unint64_t v8 = v4;
        unint64_t v9 = v4[4];
        if (v6 >= v9) {
          break;
        }
LABEL_4:
        uint64_t v4 = (uint64_t *)*v8;
        uint64_t result = v8;
        if (!*v8) {
          goto LABEL_12;
        }
      }
      if (v9 >= v6)
      {
        int v10 = *((_DWORD *)v8 + 10);
        if (v7 < v10) {
          goto LABEL_4;
        }
        if (v10 >= v7) {
          goto LABEL_12;
        }
      }
      uint64_t result = v8 + 1;
      uint64_t v4 = (uint64_t *)v8[1];
      if (!v4) {
        goto LABEL_12;
      }
    }
  }
  unint64_t v8 = result;
LABEL_12:
  *a2 = v8;
  return result;
}

AddrObjGoogle::protobuf::DescriptorPool::Tables **AddrObjGoogle::protobuf::internal::scoped_ptr<AddrObjGoogle::protobuf::DescriptorPool::Tables>::~scoped_ptr(AddrObjGoogle::protobuf::DescriptorPool::Tables **a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    AddrObjGoogle::protobuf::DescriptorPool::Tables::~Tables(v2);
    MEMORY[0x18C11F580]();
  }
  return a1;
}

unsigned __int8 *std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>(void *a1, unsigned char *a2)
{
  unint64_t v3 = *(unsigned char **)a2;
  if ((char)a2[23] >= 0) {
    unint64_t v3 = a2;
  }
  char v4 = *v3;
  if (*v3)
  {
    unint64_t v5 = 0;
    unint64_t v6 = v3 + 1;
    do
    {
      unint64_t v5 = 5 * v5 + v4;
      int v7 = *v6++;
      char v4 = v7;
    }
    while (v7);
  }
  else
  {
    unint64_t v5 = 0;
  }
  int8x8_t v8 = (int8x8_t)a1[1];
  if (!*(void *)&v8) {
    return 0;
  }
  uint8x8_t v9 = (uint8x8_t)vcnt_s8(v8);
  v9.i16[0] = vaddlv_u8(v9);
  unint64_t v10 = v9.u32[0];
  if (v9.u32[0] > 1uLL)
  {
    unint64_t v11 = v5;
    if (v5 >= *(void *)&v8) {
      unint64_t v11 = v5 % *(void *)&v8;
    }
  }
  else
  {
    unint64_t v11 = (*(void *)&v8 - 1) & v5;
  }
  uint8x8_t v12 = *(unsigned __int8 ***)(*a1 + 8 * v11);
  if (!v12) {
    return 0;
  }
  unint64_t v13 = *v12;
  if (*v12)
  {
    uint64_t v14 = (uint64_t)(a1 + 4);
    do
    {
      unint64_t v15 = *((void *)v13 + 1);
      if (v5 == v15)
      {
        if (std::equal_to<std::string>::operator()[abi:ne180100](v14, v13 + 16, a2)) {
          return v13;
        }
      }
      else
      {
        if (v10 > 1)
        {
          if (v15 >= *(void *)&v8) {
            v15 %= *(void *)&v8;
          }
        }
        else
        {
          v15 &= *(void *)&v8 - 1;
        }
        if (v15 != v11) {
          return 0;
        }
      }
      unint64_t v13 = *(unsigned __int8 **)v13;
    }
    while (v13);
  }
  return v13;
}

unsigned __int8 *std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  int v7 = *(unsigned char **)a2;
  if ((char)a2[23] >= 0) {
    int v7 = a2;
  }
  char v8 = *v7;
  if (*v7)
  {
    unint64_t v9 = 0;
    unint64_t v10 = v7 + 1;
    do
    {
      unint64_t v9 = 5 * v9 + v8;
      int v11 = *v10++;
      char v8 = v11;
    }
    while (v11);
  }
  else
  {
    unint64_t v9 = 0;
  }
  unint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    unint64_t v14 = v13.u32[0];
    if (v13.u32[0] > 1uLL)
    {
      unint64_t v3 = v9;
      if (v9 >= v12) {
        unint64_t v3 = v9 % v12;
      }
    }
    else
    {
      unint64_t v3 = (v12 - 1) & v9;
    }
    unint64_t v15 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v15)
    {
      for (unsigned int i = *v15; i; unsigned int i = *(unsigned __int8 **)i)
      {
        unint64_t v17 = *((void *)i + 1);
        if (v17 == v9)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v14 > 1)
          {
            if (v17 >= v12) {
              v17 %= v12;
            }
          }
          else
          {
            v17 &= v12 - 1;
          }
          if (v17 != v3) {
            break;
          }
        }
      }
    }
  }
  std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__construct_node_hash<std::string const&>(a1, v9, a3, (uint64_t)v27);
  float v18 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v19 = *(float *)(a1 + 32);
  if (!v12 || (float)(v19 * (float)v12) < v18)
  {
    BOOL v20 = 1;
    if (v12 >= 3) {
      BOOL v20 = (v12 & (v12 - 1)) != 0;
    }
    unint64_t v21 = v20 | (2 * v12);
    unint64_t v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22) {
      size_t v23 = v22;
    }
    else {
      size_t v23 = v21;
    }
    std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::__rehash<true>(a1, v23);
    unint64_t v12 = *(void *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v9 >= v12) {
        unint64_t v3 = v9 % v12;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v12 - 1) & v9;
    }
  }
  unint64_t v24 = *(void **)(*(void *)a1 + 8 * v3);
  if (v24)
  {
    *(void *)v27[0] = *v24;
    void *v24 = v27[0];
  }
  else
  {
    *(void *)v27[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v27[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v27[0])
    {
      unint64_t v25 = *(void *)(*(void *)v27[0] + 8);
      if ((v12 & (v12 - 1)) != 0)
      {
        if (v25 >= v12) {
          v25 %= v12;
        }
      }
      else
      {
        v25 &= v12 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v25) = v27[0];
    }
  }
  unsigned int i = (unsigned __int8 *)v27[0];
  ++*(void *)(a1 + 24);
  return i;
}

void sub_189199FD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **__p, uint64_t a11)
{
  if (__p) {
    std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100]((uint64_t)&a11, __p);
  }
  _Unwind_Resume(exception_object);
}

void std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__construct_node_hash<std::string const&>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  char v8 = operator new(0x28uLL);
  *(void *)(a4 + 8) = v7;
  *(void *)a4 = v8;
  *(unsigned char *)(a4 + 16) = 0;
  *char v8 = 0;
  v8[1] = a2;
  unint64_t v9 = (std::string *)(v8 + 2);
  if (*(char *)(a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v9, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)&v9->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
    v9->__r_.__value_.__r.__words[2] = *(void *)(a3 + 16);
  }
  *(unsigned char *)(a4 + 16) = 1;
}

void sub_18919A084(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

void std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 39) < 0) {
      operator delete(__p[2]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void sub_18919A100(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

uint64_t std::pair<std::string,std::string>::~pair(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::FileOptions>()
{
}

void sub_18919A29C(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F580](v1, 0x10A1C4072609925);
  _Unwind_Resume(a1);
}

void sub_18919A2C0(void **a1, long long *a2)
{
  char v4 = (char *)a1[1];
  unint64_t v5 = (char *)a1[2];
  if (v4 >= v5)
  {
    uint64_t v9 = (v4 - (unsigned char *)*a1) >> 6;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 58) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v11 = v5 - (unsigned char *)*a1;
    if (v11 >> 5 > v10) {
      unint64_t v10 = v11 >> 5;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFC0) {
      unint64_t v12 = 0x3FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      if (v12 >> 58) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      uint8x8_t v13 = (char *)operator new(v12 << 6);
    }
    else
    {
      uint8x8_t v13 = 0;
    }
    unint64_t v14 = &v13[64 * v9];
    *(_OWORD *)unint64_t v14 = *a2;
    *((void *)v14 + 2) = *((void *)a2 + 2);
    long long v15 = *(long long *)((char *)a2 + 24);
    *((void *)a2 + 2) = 0;
    *((void *)a2 + 3) = 0;
    *(void *)a2 = 0;
    *((void *)a2 + 1) = 0;
    *(_OWORD *)(v14 + 24) = v15;
    *((void *)v14 + 5) = *((void *)a2 + 5);
    *((void *)a2 + 4) = 0;
    *((void *)a2 + 5) = 0;
    *((_OWORD *)v14 + 3) = a2[3];
    unint64_t v16 = (char *)*a1;
    unint64_t v17 = (char *)a1[1];
    if (v17 == *a1)
    {
      char v8 = v14 + 64;
      *a1 = v14;
      a1[1] = v14 + 64;
      a1[2] = &v13[64 * v12];
    }
    else
    {
      float v18 = &v13[64 * v9];
      do
      {
        long long v19 = *((_OWORD *)v17 - 4);
        *((void *)v18 - 6) = *((void *)v17 - 6);
        *((_OWORD *)v18 - 4) = v19;
        *((void *)v17 - 7) = 0;
        *((void *)v17 - 6) = 0;
        *((void *)v17 - 8) = 0;
        long long v20 = *(_OWORD *)(v17 - 40);
        *((void *)v18 - 3) = *((void *)v17 - 3);
        *(_OWORD *)(v18 - 40) = v20;
        *((void *)v17 - 4) = 0;
        *((void *)v17 - 3) = 0;
        *((void *)v17 - 5) = 0;
        *((_OWORD *)v18 - 1) = *((_OWORD *)v17 - 1);
        v18 -= 64;
        v17 -= 64;
      }
      while (v17 != v16);
      unint64_t v17 = (char *)*a1;
      uint64_t v21 = (uint64_t)a1[1];
      char v8 = v14 + 64;
      *a1 = v18;
      a1[1] = v14 + 64;
      a1[2] = &v13[64 * v12];
      while ((char *)v21 != v17)
      {
        v21 -= 64;
        sub_18919A100(v21);
      }
    }
    if (v17) {
      operator delete(v17);
    }
  }
  else
  {
    long long v6 = *a2;
    *((void *)v4 + 2) = *((void *)a2 + 2);
    *(_OWORD *)char v4 = v6;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    long long v7 = *(long long *)((char *)a2 + 24);
    *((void *)v4 + 5) = *((void *)a2 + 5);
    *(_OWORD *)(v4 + 24) = v7;
    *((void *)a2 + 4) = 0;
    *((void *)a2 + 5) = 0;
    *((void *)a2 + 3) = 0;
    *((_OWORD *)v4 + 3) = a2[3];
    char v8 = v4 + 64;
  }
  a1[1] = v8;
}

std::string *sub_18919A47C(std::string *this, long long *a2, long long *a3, std::string::size_type a4, std::string::size_type a5)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v9 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v9;
  }
  unint64_t v10 = this + 1;
  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v10, *(const std::string::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v11 = *a3;
    this[1].__r_.__value_.__r.__words[2] = *((void *)a3 + 2);
    *(_OWORD *)&v10->__r_.__value_.__l.__data_ = v11;
  }
  this[2].__r_.__value_.__r.__words[0] = a4;
  this[2].__r_.__value_.__l.__size_ = a5;
  return this;
}

void sub_18919A50C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>(uint64_t a1, long long *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(*(std::string **)(a1 + 8), *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *(void *)(v3 + 16) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v3 = v4;
  }
  *(void *)(a1 + 8) = v3 + 24;
}

void sub_18919A580(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string const&>(uint64_t **a1, const void **a2, uint64_t a3)
{
  unint64_t v5 = (uint64_t **)std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::__find_equal<std::string>((uint64_t)a1, &v8, a2);
  uint64_t result = *v5;
  if (!*v5)
  {
    std::__tree<std::string>::__construct_node<std::string const&>((uint64_t)a1, a3, (uint64_t)&v7);
    std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::__insert_node_at(a1, v8, v5, v7);
    return v7;
  }
  return result;
}

void std::__tree<std::string>::__construct_node<std::string const&>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  long long v6 = (char *)operator new(0x38uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  long long v7 = (std::string *)(v6 + 32);
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
    v7->__r_.__value_.__r.__words[2] = *(void *)(a2 + 16);
  }
  *(unsigned char *)(a3 + 16) = 1;
}

void sub_18919A68C(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::pair<void const*,int>>,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::Descriptor>()
{
}

void sub_18919A780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::MessageOptions>()
{
}

void sub_18919A8AC(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F580](v1, 0x10A1C40ABAA5818);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::FieldDescriptor>()
{
}

void sub_18919A9A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::FieldOptions>()
{
}

void sub_18919AAD4(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F580](v1, 0x10A1C409A5D65B8);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::EnumDescriptor>()
{
}

void sub_18919ABD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::EnumOptions>()
{
}

void sub_18919ACFC(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F580](v1, 0x10A1C40FFAE3E5BLL);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::EnumValueDescriptor>()
{
}

void sub_18919ADF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::EnumValueOptions>()
{
}

void sub_18919AF24(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F580](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::ServiceDescriptor>()
{
}

void sub_18919B020(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::ServiceOptions>()
{
}

void sub_18919B14C(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F580](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::MethodDescriptor>()
{
}

void sub_18919B248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::MethodOptions>()
{
}

void sub_18919B374(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F580](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

uint64_t **std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int &&>,std::tuple<>>(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  long long v7 = a1 + 1;
  long long v6 = a1[1];
  if (v6)
  {
    int v8 = *a2;
    while (1)
    {
      while (1)
      {
        long long v9 = (uint64_t **)v6;
        int v10 = *((_DWORD *)v6 + 8);
        if (v8 >= v10) {
          break;
        }
        long long v6 = *v9;
        long long v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }
      if (v10 >= v8) {
        break;
      }
      long long v6 = v9[1];
      if (!v6)
      {
        long long v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    long long v9 = a1 + 1;
LABEL_10:
    long long v11 = operator new(0x40uLL);
    v11[8] = **a4;
    *((void *)v11 + 6) = 0;
    *((void *)v11 + 7) = 0;
    *((void *)v11 + 5) = 0;
    std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::__insert_node_at(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }
  return v9;
}

AddrObjGoogle::protobuf::UnknownFieldSet **AddrObjGoogle::protobuf::internal::scoped_ptr<AddrObjGoogle::protobuf::UnknownFieldSet>::~scoped_ptr(AddrObjGoogle::protobuf::UnknownFieldSet **a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
    MEMORY[0x18C11F580]();
  }
  return a1;
}

AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(AddrObjGoogle::protobuf::UnknownFieldSet *this)
{
  uint64_t v1 = *(uint64_t **)this;
  uint64_t v2 = *(void *)(*(void *)this + 8);
  if (v2 != **(void **)this)
  {
    uint64_t v3 = this;
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    uint64_t v2 = **(void **)this;
    do
    {
      this = AddrObjGoogle::protobuf::UnknownField::Delete((AddrObjGoogle::protobuf::UnknownFieldSet *)(v2 + v4));
      ++v5;
      uint64_t v1 = *(uint64_t **)v3;
      uint64_t v2 = **(void **)v3;
      v4 += 16;
    }
    while (v5 < (*(void *)(*(void *)v3 + 8) - v2) >> 4);
  }
  v1[1] = v2;
  return this;
}

AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::UnknownField::Delete(AddrObjGoogle::protobuf::UnknownFieldSet *this)
{
  int v1 = *(_DWORD *)this >> 29;
  if (v1 == 4)
  {
    this = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((void *)this + 1);
    if (this)
    {
      AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet(this);
      goto LABEL_9;
    }
  }
  else if (v1 == 3)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      if (*(char *)(v2 + 23) < 0) {
        operator delete(*(void **)v2);
      }
LABEL_9:
      JUMPOUT(0x18C11F580);
    }
  }
  return this;
}

_DWORD *AddrObjGoogle::protobuf::UnknownFieldSet::AddField(void ***this, const AddrObjGoogle::protobuf::UnknownField *a2)
{
  uint64_t v4 = *this;
  if (!*this) {
    operator new();
  }
  unint64_t v5 = (unint64_t)v4[2];
  long long v6 = v4[1];
  if ((unint64_t)v6 >= v5)
  {
    uint64_t v8 = ((char *)v6 - (unsigned char *)*v4) >> 4;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 60) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v5 - (void)*v4;
    if (v10 >> 3 > v9) {
      unint64_t v9 = v10 >> 3;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v11 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11) {
      unint64_t v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>((uint64_t)(v4 + 2), v11);
    }
    else {
      unint64_t v12 = 0;
    }
    uint8x8_t v13 = &v12[16 * v8];
    unint64_t v14 = &v12[16 * v11];
    *(_OWORD *)uint8x8_t v13 = *(_OWORD *)a2;
    long long v7 = v13 + 16;
    unint64_t v16 = (char *)*v4;
    long long v15 = (char *)v4[1];
    if (v15 != *v4)
    {
      do
      {
        *((_OWORD *)v13 - 1) = *((_OWORD *)v15 - 1);
        v13 -= 16;
        v15 -= 16;
      }
      while (v15 != v16);
      long long v15 = (char *)*v4;
    }
    *uint64_t v4 = v13;
    v4[1] = v7;
    v4[2] = v14;
    if (v15) {
      operator delete(v15);
    }
  }
  else
  {
    _OWORD *v6 = *(_OWORD *)a2;
    long long v7 = v6 + 1;
  }
  v4[1] = v7;
  unint64_t v17 = (char *)(*this)[1] - 16;

  return AddrObjGoogle::protobuf::UnknownField::DeepCopy(v17);
}

uint64_t AddrObjGoogle::protobuf::UnknownFieldSet::SpaceUsedExcludingSelf(uint64_t **this)
{
  if (!*this) {
    return 0;
  }
  uint64_t v1 = **this;
  uint64_t v2 = (*this)[1];
  uint64_t v3 = ((v2 - v1) & 0xFFFFFFF0) + 24;
  if (v2 != v1)
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0;
    do
    {
      int v7 = *(_DWORD *)(v1 + v5) >> 29;
      if (v7 == 4)
      {
        uint64_t v3 = v3
           + AddrObjGoogle::protobuf::UnknownFieldSet::SpaceUsedExcludingSelf(*(AddrObjGoogle::protobuf::UnknownFieldSet **)(v1 + v5 + 8))
           + 8;
      }
      else if (v7 == 3)
      {
        uint64_t v3 = v3
           + AddrObjGoogle::protobuf::internal::StringSpaceUsedExcludingSelf(*(void *)(v1 + v5 + 8))
           + 24;
      }
      ++v6;
      uint64_t v1 = **this;
      v5 += 16;
    }
    while (v6 < ((*this)[1] - v1) >> 4);
  }
  return v3;
}

void AddrObjGoogle::protobuf::UnknownFieldSet::AddVarint(void ***this, int a2, uint64_t a3)
{
  uint64_t v4 = *this;
  if (!*this) {
    operator new();
  }
  int v5 = a2 & 0x1FFFFFFF;
  unint64_t v6 = (char *)v4[2];
  int v7 = (char *)v4[1];
  if (v7 >= v6)
  {
    uint64_t v9 = (v7 - (unsigned char *)*v4) >> 4;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 60) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v11 = v6 - (unsigned char *)*v4;
    if (v11 >> 3 > v10) {
      unint64_t v10 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12) {
      uint8x8_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>((uint64_t)(v4 + 2), v12);
    }
    else {
      uint8x8_t v13 = 0;
    }
    unint64_t v14 = &v13[16 * v9];
    long long v15 = &v13[16 * v12];
    *(_DWORD *)unint64_t v14 = v5;
    *((void *)v14 + 1) = a3;
    uint64_t v8 = v14 + 16;
    unint64_t v17 = (char *)*v4;
    unint64_t v16 = (char *)v4[1];
    if (v16 != *v4)
    {
      do
      {
        *((_OWORD *)v14 - 1) = *((_OWORD *)v16 - 1);
        v14 -= 16;
        v16 -= 16;
      }
      while (v16 != v17);
      unint64_t v16 = (char *)*v4;
    }
    *uint64_t v4 = v14;
    v4[1] = v8;
    v4[2] = v15;
    if (v16) {
      operator delete(v16);
    }
  }
  else
  {
    *(_DWORD *)int v7 = v5;
    *((void *)v7 + 1) = a3;
    uint64_t v8 = v7 + 16;
  }
  v4[1] = v8;
}

void AddrObjGoogle::protobuf::UnknownFieldSet::AddFixed32(void ***this, int a2, int a3)
{
  uint64_t v4 = *this;
  if (!*this) {
    operator new();
  }
  int v5 = a2 & 0x1FFFFFFF | 0x20000000;
  unint64_t v6 = (unint64_t)v4[2];
  int v7 = (int *)v4[1];
  if ((unint64_t)v7 >= v6)
  {
    uint64_t v9 = ((char *)v7 - (unsigned char *)*v4) >> 4;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 60) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v11 = v6 - (void)*v4;
    if (v11 >> 3 > v10) {
      unint64_t v10 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12) {
      uint8x8_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>((uint64_t)(v4 + 2), v12);
    }
    else {
      uint8x8_t v13 = 0;
    }
    unint64_t v14 = (int *)&v13[16 * v9];
    long long v15 = &v13[16 * v12];
    int *v14 = v5;
    v14[2] = a3;
    uint64_t v8 = v14 + 4;
    unint64_t v17 = (char *)*v4;
    unint64_t v16 = (char *)v4[1];
    if (v16 != *v4)
    {
      do
      {
        *((_OWORD *)v14 - 1) = *((_OWORD *)v16 - 1);
        v14 -= 4;
        v16 -= 16;
      }
      while (v16 != v17);
      unint64_t v16 = (char *)*v4;
    }
    *uint64_t v4 = v14;
    v4[1] = v8;
    v4[2] = v15;
    if (v16) {
      operator delete(v16);
    }
  }
  else
  {
    *int v7 = v5;
    v7[2] = a3;
    uint64_t v8 = v7 + 4;
  }
  v4[1] = v8;
}

void AddrObjGoogle::protobuf::UnknownFieldSet::AddFixed64(void ***this, int a2, uint64_t a3)
{
  uint64_t v4 = *this;
  if (!*this) {
    operator new();
  }
  int v5 = a2 & 0x1FFFFFFF | 0x40000000;
  unint64_t v6 = (char *)v4[2];
  int v7 = (char *)v4[1];
  if (v7 >= v6)
  {
    uint64_t v9 = (v7 - (unsigned char *)*v4) >> 4;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 60) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v11 = v6 - (unsigned char *)*v4;
    if (v11 >> 3 > v10) {
      unint64_t v10 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12) {
      uint8x8_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>((uint64_t)(v4 + 2), v12);
    }
    else {
      uint8x8_t v13 = 0;
    }
    unint64_t v14 = &v13[16 * v9];
    long long v15 = &v13[16 * v12];
    *(_DWORD *)unint64_t v14 = v5;
    *((void *)v14 + 1) = a3;
    uint64_t v8 = v14 + 16;
    unint64_t v17 = (char *)*v4;
    unint64_t v16 = (char *)v4[1];
    if (v16 != *v4)
    {
      do
      {
        *((_OWORD *)v14 - 1) = *((_OWORD *)v16 - 1);
        v14 -= 16;
        v16 -= 16;
      }
      while (v16 != v17);
      unint64_t v16 = (char *)*v4;
    }
    *uint64_t v4 = v14;
    v4[1] = v8;
    v4[2] = v15;
    if (v16) {
      operator delete(v16);
    }
  }
  else
  {
    *(_DWORD *)int v7 = v5;
    *((void *)v7 + 1) = a3;
    uint64_t v8 = v7 + 16;
  }
  v4[1] = v8;
}

void AddrObjGoogle::protobuf::UnknownFieldSet::AddLengthDelimited(AddrObjGoogle::protobuf::UnknownFieldSet *this)
{
  if (!*(void *)this) {
    operator new();
  }
  operator new();
}

void AddrObjGoogle::protobuf::UnknownFieldSet::AddGroup(AddrObjGoogle::protobuf::UnknownFieldSet *this)
{
  if (!*(void *)this) {
    operator new();
  }
  operator new();
}

_DWORD *AddrObjGoogle::protobuf::UnknownField::DeepCopy(_DWORD *this)
{
  int v1 = *this >> 29;
  if (v1 == 4) {
    operator new();
  }
  if (v1 == 3) {
    operator new();
  }
  return this;
}

void sub_18919BE88(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F580](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::UnknownFieldSet::MergeFromCodedStream(void ***this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, AddrObjGoogle::protobuf::UnknownFieldSet *a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  uint64_t v8 = 0;
  if (AddrObjGoogle::protobuf::internal::WireFormat::SkipMessage(a2, &v8, a3, a4) && *((unsigned char *)a2 + 36))
  {
    AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom(this, (const AddrObjGoogle::protobuf::UnknownFieldSet *)&v8);
    uint64_t v6 = 1;
  }
  else
  {
    uint64_t v6 = 0;
  }
  AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::UnknownFieldSet *)&v8);
  return v6;
}

void sub_18919BF18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::UnknownFieldSet *)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::UnknownFieldSet::ParseFromCodedStream(AddrObjGoogle::protobuf::UnknownFieldSet *this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, AddrObjGoogle::protobuf::UnknownFieldSet *a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  if (*(void *)this) {
    AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(this);
  }

  return AddrObjGoogle::protobuf::UnknownFieldSet::MergeFromCodedStream((void ***)this, a2, a3, a4);
}

uint64_t AddrObjGoogle::protobuf::UnknownFieldSet::ParseFromZeroCopyStream(AddrObjGoogle::protobuf::UnknownFieldSet *a1, uint64_t a2)
{
  v8[0] = a2;
  memset(&v8[1], 0, 30);
  long long v9 = xmmword_18A5CA110;
  int v10 = 0;
  int v11 = AddrObjGoogle::protobuf::io::CodedInputStream::default_recursion_limit_;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  AddrObjGoogle::protobuf::io::CodedInputStream::Refresh((AddrObjGoogle::protobuf::io::CodedInputStream *)v8);
  unsigned int v5 = AddrObjGoogle::protobuf::UnknownFieldSet::ParseFromCodedStream(a1, (AddrObjGoogle::protobuf::io::CodedInputStream *)v8, v3, v4);
  if (BYTE4(v8[4])) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  AddrObjGoogle::protobuf::io::CodedInputStream::~CodedInputStream((AddrObjGoogle::protobuf::io::CodedInputStream *)v8);
  return v6;
}

void sub_18919BFF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t AddrObjGoogle::protobuf::UnknownFieldSet::ParseFromArray(AddrObjGoogle::protobuf::UnknownFieldSet *this, const void *a2, int a3)
{
  AddrObjGoogle::protobuf::io::ArrayInputStream::ArrayInputStream((uint64_t)v6, a2, a3, -1);
  uint64_t v4 = AddrObjGoogle::protobuf::UnknownFieldSet::ParseFromZeroCopyStream(this, (uint64_t)v6);
  AddrObjGoogle::protobuf::io::ArrayInputStream::~ArrayInputStream((AddrObjGoogle::protobuf::io::ArrayInputStream *)v6);
  return v4;
}

void sub_18919C05C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t AddrObjGoogle::protobuf::UnknownField::SerializeLengthDelimitedNoTag(AddrObjGoogle::protobuf::UnknownField *this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = *((void *)this + 1);
  if (*(char *)(v3 + 23) < 0) {
    uint64_t v4 = *(void *)(v3 + 8);
  }
  else {
    LODWORD(v4) = *(unsigned __int8 *)(v3 + 23);
  }
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, v4);
  int v5 = *(char *)(v3 + 23);
  if (v5 >= 0) {
    uint64_t v6 = (char *)v3;
  }
  else {
    uint64_t v6 = *(char **)v3;
  }
  if (v5 >= 0) {
    int v7 = *(unsigned __int8 *)(v3 + 23);
  }
  else {
    int v7 = *(_DWORD *)(v3 + 8);
  }

  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(AddrObjGoogle::protobuf::io::CodedInputStream *this, unsigned int (*a2)(uint64_t), uint64_t a3)
{
  unsigned int v14 = 0;
  uint64_t v6 = (char *)*((void *)this + 1);
  if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
  {
    uint64_t result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v14);
    if (!result) {
      return result;
    }
    unsigned int v7 = v14;
  }
  else
  {
    unsigned int v7 = *v6;
    unsigned int v14 = v7;
    *((void *)this + 1) = v6 + 1;
  }
  int v9 = AddrObjGoogle::protobuf::io::CodedInputStream::PushLimit(this, v7);
  if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      unsigned int v15 = 0;
      int v10 = (char *)*((void *)this + 1);
      if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
      {
        uint64_t result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v15);
        if (!result) {
          return result;
        }
        uint64_t v11 = v15;
      }
      else
      {
        uint64_t v11 = *v10;
        *((void *)this + 1) = v10 + 1;
      }
      if (a2(v11))
      {
        int v12 = *(_DWORD *)(a3 + 8);
        if (v12 == *(_DWORD *)(a3 + 12))
        {
          AddrObjGoogle::protobuf::RepeatedField<int>::Reserve(a3, v12 + 1);
          int v12 = *(_DWORD *)(a3 + 8);
        }
        uint64_t v13 = *(void *)a3;
        *(_DWORD *)(a3 + 8) = v12 + 1;
        *(_DWORD *)(v13 + 4 * v12) = v11;
      }
    }
    while ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  AddrObjGoogle::protobuf::io::CodedInputStream::PopLimit((uint64_t)this, v9);
  return 1;
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt32(AddrObjGoogle::protobuf::internal::WireFormatLite *this, signed int a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * this);
  if (a2 < 0)
  {
    return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, a2);
  }
  else
  {
    return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, a2);
  }
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt64(AddrObjGoogle::protobuf::internal::WireFormatLite *this, unint64_t a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * this);

  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, a2);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteUInt32(AddrObjGoogle::protobuf::internal::WireFormatLite *this, unsigned int a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * this);

  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, a2);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteSInt32(AddrObjGoogle::protobuf::internal::WireFormatLite *this, int a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * this);

  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, (2 * a2) ^ (a2 >> 31));
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteSInt64(AddrObjGoogle::protobuf::internal::WireFormatLite *this, uint64_t a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * this);

  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, (2 * a2) ^ (a2 >> 63));
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteFixed32(AddrObjGoogle::protobuf::internal::WireFormatLite *this, int a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, (8 * this) | 5);

  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian32((uint64_t)a3, a2);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteFixed64(AddrObjGoogle::protobuf::internal::WireFormatLite *this, uint64_t a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, (8 * this) | 1);

  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian64((uint64_t)a3, a2);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteFloat(AddrObjGoogle::protobuf::internal::WireFormatLite *this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, float a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, (8 * this) | 5);

  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian32((uint64_t)a2, SLODWORD(a3));
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteDouble(AddrObjGoogle::protobuf::internal::WireFormatLite *this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, double a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, (8 * this) | 1);

  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian64((uint64_t)a2, *(uint64_t *)&a3);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(int a1, uint64_t a2, AddrObjGoogle::protobuf::io::CodedOutputStream *this)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  int v5 = *(char *)(a2 + 23);
  if (v5 < 0 && *(void *)(a2 + 8) >> 31)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/wire_format_lite.cc", 285);
    uint64_t v6 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: value.size() <= kint32max: ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (AddrObjGoogle::protobuf::internal::LogMessage *)v6);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    LOBYTE(v5) = *(unsigned char *)(a2 + 23);
  }
  if ((v5 & 0x80u) == 0) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = *(_DWORD *)(a2 + 8);
  }
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v7);
  int v8 = *(char *)(a2 + 23);
  if (v8 >= 0) {
    int v9 = (char *)a2;
  }
  else {
    int v9 = *(char **)a2;
  }
  if (v8 >= 0) {
    int v10 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    int v10 = *(_DWORD *)(a2 + 8);
  }
  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRaw(this, v9, v10);
}

void sub_18919C5B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteBytes(int a1, uint64_t a2, AddrObjGoogle::protobuf::io::CodedOutputStream *this)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  int v5 = *(char *)(a2 + 23);
  if (v5 < 0 && *(void *)(a2 + 8) >> 31)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/wire_format_lite.cc", 292);
    uint64_t v6 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: value.size() <= kint32max: ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (AddrObjGoogle::protobuf::internal::LogMessage *)v6);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    LOBYTE(v5) = *(unsigned char *)(a2 + 23);
  }
  if ((v5 & 0x80u) == 0) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = *(_DWORD *)(a2 + 8);
  }
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v7);
  int v8 = *(char *)(a2 + 23);
  if (v8 >= 0) {
    int v9 = (char *)a2;
  }
  else {
    int v9 = *(char **)a2;
  }
  if (v8 >= 0) {
    int v10 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    int v10 = *(_DWORD *)(a2 + 8);
  }
  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRaw(this, v9, v10);
}

void sub_18919C6A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteGroup(int a1, uint64_t a2, AddrObjGoogle::protobuf::io::CodedOutputStream *this)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 3);
  (*(void (**)(uint64_t, AddrObjGoogle::protobuf::io::CodedOutputStream *))(*(void *)a2 + 80))(a2, this);

  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 4u);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessage(int a1, uint64_t a2, AddrObjGoogle::protobuf::io::CodedOutputStream *this)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  unsigned int v5 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 96))(a2);
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v5);
  uint64_t v6 = *(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::io::CodedOutputStream *))(*(void *)a2 + 80);

  return v6(a2, this);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(int a1, uint64_t a2, AddrObjGoogle::protobuf::io::CodedOutputStream *this)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  signed int v5 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 96))(a2);
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v5);
  int v6 = *((_DWORD *)this + 4);
  BOOL v7 = __OFSUB__(v6, v5);
  int v8 = v6 - v5;
  if (v8 < 0 != v7 || (uint64_t v9 = *((void *)this + 1), *((void *)this + 1) = v9 + v5, *((_DWORD *)this + 4) = v8, !v9))
  {
    char v12 = *(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::io::CodedOutputStream *))(*(void *)a2 + 80);
    return v12(a2, this);
  }
  else
  {
    int v10 = *(uint64_t (**)(uint64_t))(*(void *)a2 + 88);
    return v10(a2);
  }
}

uint64_t AddrObjGoogle::protobuf::io::ArrayInputStream::ArrayInputStream(uint64_t this, const void *a2, int a3, int a4)
{
  *(void *)this = &unk_1ED513110;
  *(void *)(this + 8) = a2;
  if (a4 <= 0) {
    int v4 = a3;
  }
  else {
    int v4 = a4;
  }
  *(_DWORD *)(this + 16) = a3;
  *(_DWORD *)(this + 20) = v4;
  *(void *)(this + 24) = 0;
  return this;
}

void AddrObjGoogle::protobuf::io::ArrayInputStream::~ArrayInputStream(AddrObjGoogle::protobuf::io::ArrayInputStream *this)
{
  addr_obj::Localization::getDisplayLanguage(this);

  JUMPOUT(0x18C11F580);
}

BOOL AddrObjGoogle::protobuf::io::ArrayInputStream::Next(AddrObjGoogle::protobuf::io::ArrayInputStream *this, const void **a2, int *a3)
{
  uint64_t v3 = *((int *)this + 6);
  int v4 = *((_DWORD *)this + 4);
  if ((int)v3 >= v4)
  {
    *((_DWORD *)this + 7) = 0;
  }
  else
  {
    int v5 = v4 - v3;
    if (v4 - (int)v3 >= *((_DWORD *)this + 5)) {
      int v5 = *((_DWORD *)this + 5);
    }
    *((_DWORD *)this + 7) = v5;
    *a2 = (const void *)(*((void *)this + 1) + v3);
    *a3 = v5;
    *((_DWORD *)this + 6) += *((_DWORD *)this + 7);
  }
  return (int)v3 < v4;
}

void AddrObjGoogle::protobuf::io::ArrayInputStream::BackUp(AddrObjGoogle::protobuf::io::ArrayInputStream *this, int a2)
{
  int v4 = *((_DWORD *)this + 7);
  if (v4 <= 0)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/zero_copy_stream_impl_lite.cc", 80);
    int v5 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (last_returned_size_) > (0): ");
    int v6 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v5, "BackUp() can only be called after a successful Next().");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (AddrObjGoogle::protobuf::internal::LogMessage *)v6);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    int v4 = *((_DWORD *)this + 7);
  }
  if (v4 < a2)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/zero_copy_stream_impl_lite.cc", 82);
    BOOL v7 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) <= (last_returned_size_): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (AddrObjGoogle::protobuf::internal::LogMessage *)v7);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (a2 < 0)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/zero_copy_stream_impl_lite.cc", 83);
    int v8 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) >= (0): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (AddrObjGoogle::protobuf::internal::LogMessage *)v8);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  *((void *)this + 3) = (*((_DWORD *)this + 6) - a2);
}

void sub_18919CAC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL AddrObjGoogle::protobuf::io::ArrayInputStream::Skip(AddrObjGoogle::protobuf::io::ArrayInputStream *this, int a2)
{
  if (a2 < 0)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/zero_copy_stream_impl_lite.cc", 89);
    int v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (count) >= (0): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  int v5 = *((_DWORD *)this + 4);
  int v6 = *((_DWORD *)this + 6);
  int v7 = v5 - v6;
  BOOL result = v5 - v6 >= a2;
  int v9 = v6 + a2;
  if (v7 >= a2) {
    int v5 = v9;
  }
  *((_DWORD *)this + 6) = v5;
  *((_DWORD *)this + 7) = 0;
  return result;
}

void sub_18919CB78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::io::ArrayInputStream::ByteCount(AddrObjGoogle::protobuf::io::ArrayInputStream *this)
{
  return *((int *)this + 6);
}

uint64_t AddrObjGoogle::protobuf::io::ArrayOutputStream::ArrayOutputStream(uint64_t this, void *a2, int a3, int a4)
{
  *(void *)this = &unk_1ED513150;
  *(void *)(this + 8) = a2;
  if (a4 <= 0) {
    int v4 = a3;
  }
  else {
    int v4 = a4;
  }
  *(_DWORD *)(this + 16) = a3;
  *(_DWORD *)(this + 20) = v4;
  *(void *)(this + 24) = 0;
  return this;
}

void AddrObjGoogle::protobuf::io::ArrayOutputStream::~ArrayOutputStream(AddrObjGoogle::protobuf::io::ArrayOutputStream *this)
{
  addr_obj::Localization::getDisplayLanguage(this);

  JUMPOUT(0x18C11F580);
}

BOOL AddrObjGoogle::protobuf::io::ArrayOutputStream::Next(AddrObjGoogle::protobuf::io::ArrayOutputStream *this, void **a2, int *a3)
{
  uint64_t v3 = *((int *)this + 6);
  int v4 = *((_DWORD *)this + 4);
  if ((int)v3 >= v4)
  {
    *((_DWORD *)this + 7) = 0;
  }
  else
  {
    int v5 = v4 - v3;
    if (v4 - (int)v3 >= *((_DWORD *)this + 5)) {
      int v5 = *((_DWORD *)this + 5);
    }
    *((_DWORD *)this + 7) = v5;
    *a2 = (void *)(*((void *)this + 1) + v3);
    *a3 = v5;
    *((_DWORD *)this + 6) += *((_DWORD *)this + 7);
  }
  return (int)v3 < v4;
}

void AddrObjGoogle::protobuf::io::ArrayOutputStream::BackUp(AddrObjGoogle::protobuf::io::ArrayOutputStream *this, int a2)
{
  int v4 = *((_DWORD *)this + 7);
  if (v4 <= 0)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/zero_copy_stream_impl_lite.cc", 133);
    int v5 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (last_returned_size_) > (0): ");
    int v6 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v5, "BackUp() can only be called after a successful Next().");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (AddrObjGoogle::protobuf::internal::LogMessage *)v6);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    int v4 = *((_DWORD *)this + 7);
  }
  if (v4 < a2)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/zero_copy_stream_impl_lite.cc", 135);
    int v7 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) <= (last_returned_size_): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (AddrObjGoogle::protobuf::internal::LogMessage *)v7);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (a2 < 0)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/zero_copy_stream_impl_lite.cc", 136);
    int v8 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) >= (0): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (AddrObjGoogle::protobuf::internal::LogMessage *)v8);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  *((void *)this + 3) = (*((_DWORD *)this + 6) - a2);
}

void sub_18919CD6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::io::ArrayOutputStream::ByteCount(AddrObjGoogle::protobuf::io::ArrayOutputStream *this)
{
  return *((int *)this + 6);
}

void *AddrObjGoogle::protobuf::io::StringOutputStream::StringOutputStream(void *result, uint64_t a2)
{
  *BOOL result = &unk_1ED513188;
  result[1] = a2;
  return result;
}

void AddrObjGoogle::protobuf::io::StringOutputStream::~StringOutputStream(AddrObjGoogle::protobuf::io::StringOutputStream *this)
{
  addr_obj::Localization::getDisplayLanguage(this);

  JUMPOUT(0x18C11F580);
}

uint64_t AddrObjGoogle::protobuf::io::StringOutputStream::Next(AddrObjGoogle::protobuf::io::StringOutputStream *this, void **a2, int *a3)
{
  uint64_t v6 = *((void *)this + 1);
  if (*(char *)(v6 + 23) < 0)
  {
    uint64_t v7 = *(void *)(v6 + 8);
    uint64_t v9 = (int)v7;
    std::string::size_type v8 = (*(void *)(v6 + 16) & 0x7FFFFFFFFFFFFFFFLL) - 1;
    if ((int)v7 < v8) {
      goto LABEL_10;
    }
  }
  else
  {
    LODWORD(v7) = *(unsigned __int8 *)(v6 + 23);
    if (v7 < 0x16)
    {
      std::string::size_type v8 = 22;
      uint64_t v9 = *(unsigned __int8 *)(v6 + 23);
      goto LABEL_10;
    }
    uint64_t v9 = *(unsigned __int8 *)(v6 + 23);
  }
  if (2 * (int)v7 <= 16) {
    std::string::size_type v8 = 16;
  }
  else {
    std::string::size_type v8 = (2 * v7);
  }
LABEL_10:
  std::string::resize((std::string *)v6, v8, 0);
  char v10 = (uint64_t *)*((void *)this + 1);
  if (*((char *)v10 + 23) < 0)
  {
    if (v10[1])
    {
      char v10 = (uint64_t *)*v10;
      goto LABEL_16;
    }
  }
  else if (*((unsigned char *)v10 + 23))
  {
    goto LABEL_16;
  }
  char v10 = 0;
LABEL_16:
  *a2 = (char *)v10 + v9;
  uint64_t v11 = *((void *)this + 1);
  if (*(char *)(v11 + 23) < 0) {
    uint64_t v11 = *(void *)(v11 + 8);
  }
  else {
    LODWORD(v11) = *(unsigned __int8 *)(v11 + 23);
  }
  *a3 = v11 - v7;
  return 1;
}

void AddrObjGoogle::protobuf::io::StringOutputStream::BackUp(AddrObjGoogle::protobuf::io::StringOutputStream *this, int a2)
{
  if (a2 < 0)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/zero_copy_stream_impl_lite.cc", 177);
    int v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) >= (0): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)this + 1);
  LODWORD(v6) = *(char *)(v5 + 23);
  if ((v6 & 0x80000000) != 0) {
    unint64_t v7 = *(void *)(v5 + 8);
  }
  else {
    unint64_t v7 = *(unsigned __int8 *)(v5 + 23);
  }
  if (v7 < a2)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/zero_copy_stream_impl_lite.cc", 178);
    std::string::size_type v8 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) <= (target_->size()): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (AddrObjGoogle::protobuf::internal::LogMessage *)v8);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    uint64_t v5 = *((void *)this + 1);
    LOBYTE(v6) = *(unsigned char *)(v5 + 23);
  }
  if ((v6 & 0x80) != 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = v6;
  }
  std::string::resize((std::string *)v5, v6 - a2, 0);
}

void sub_18919CFD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::io::StringOutputStream::ByteCount(AddrObjGoogle::protobuf::io::StringOutputStream *this)
{
  uint64_t v1 = *((void *)this + 1);
  if (*(char *)(v1 + 23) < 0) {
    return *(void *)(v1 + 8);
  }
  else {
    return *(unsigned __int8 *)(v1 + 23);
  }
}

uint64_t addr_obj::venue::Formatter::fromPattern(uint64_t result, int *a2, int a3)
{
  uint64_t v4 = result;
  switch(a3)
  {
    case 0:
      uint64_t v5 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 8, a2);
      unint64_t v6 = *(void *)(v4 + 8);
      if (v6 >= *(void *)(v4 + 16))
      {
        uint64_t v7 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v5);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v5);
        uint64_t v7 = v6 + 96;
        *(void *)(v4 + 8) = v6 + 96;
      }
      *(void *)(v4 + 8) = v7;
      long long v20 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 7, a2);
      unint64_t v21 = *(void *)(v4 + 8);
      if (v21 >= *(void *)(v4 + 16)) {
        goto LABEL_64;
      }
      goto LABEL_63;
    case 1:
      uint64_t v11 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 10, a2);
      unint64_t v12 = *(void *)(v4 + 8);
      if (v12 >= *(void *)(v4 + 16))
      {
        uint64_t v13 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v11);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v11);
        uint64_t v13 = v12 + 96;
        *(void *)(v4 + 8) = v12 + 96;
      }
      *(void *)(v4 + 8) = v13;
      unint64_t v22 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 9, a2);
      unint64_t v23 = *(void *)(v4 + 8);
      if (v23 >= *(void *)(v4 + 16))
      {
        uint64_t v24 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v22);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v22);
        uint64_t v24 = v23 + 96;
        *(void *)(v4 + 8) = v23 + 96;
      }
      *(void *)(v4 + 8) = v24;
      unint64_t v31 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 11, a2);
      unint64_t v32 = *(void *)(v4 + 8);
      if (v32 >= *(void *)(v4 + 16))
      {
        uint64_t v33 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v31);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v31);
        uint64_t v33 = v32 + 96;
        *(void *)(v4 + 8) = v32 + 96;
      }
      *(void *)(v4 + 8) = v33;
      std::string::size_type v40 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 3, a2);
      unint64_t v41 = *(void *)(v4 + 8);
      if (v41 >= *(void *)(v4 + 16))
      {
        uint64_t v42 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v40);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v40);
        uint64_t v42 = v41 + 96;
        *(void *)(v4 + 8) = v41 + 96;
      }
      *(void *)(v4 + 8) = v42;
      long long v20 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 0, a2);
      unint64_t v21 = *(void *)(v4 + 8);
      if (v21 < *(void *)(v4 + 16)) {
        goto LABEL_63;
      }
      goto LABEL_64;
    case 2:
      std::string::size_type v8 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 12, a2);
      unint64_t v9 = *(void *)(v4 + 8);
      if (v9 >= *(void *)(v4 + 16))
      {
        uint64_t v10 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v8);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v8);
        uint64_t v10 = v9 + 96;
        *(void *)(v4 + 8) = v9 + 96;
      }
      *(void *)(v4 + 8) = v10;
      unint64_t v17 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 6, a2);
      unint64_t v18 = *(void *)(v4 + 8);
      if (v18 >= *(void *)(v4 + 16))
      {
        uint64_t v19 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v17);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v17);
        uint64_t v19 = v18 + 96;
        *(void *)(v4 + 8) = v18 + 96;
      }
      *(void *)(v4 + 8) = v19;
      std::string::size_type v28 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 4, a2);
      unint64_t v29 = *(void *)(v4 + 8);
      if (v29 >= *(void *)(v4 + 16))
      {
        uint64_t v30 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v28);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v28);
        uint64_t v30 = v29 + 96;
        *(void *)(v4 + 8) = v29 + 96;
      }
      *(void *)(v4 + 8) = v30;
      unint64_t v37 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 5, a2);
      unint64_t v38 = *(void *)(v4 + 8);
      if (v38 >= *(void *)(v4 + 16))
      {
        uint64_t v39 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v37);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v37);
        uint64_t v39 = v38 + 96;
        *(void *)(v4 + 8) = v38 + 96;
      }
      *(void *)(v4 + 8) = v39;
      int v46 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 2, a2);
      unint64_t v47 = *(void *)(v4 + 8);
      if (v47 >= *(void *)(v4 + 16))
      {
        uint64_t v48 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v46);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v46);
        uint64_t v48 = v47 + 96;
        *(void *)(v4 + 8) = v47 + 96;
      }
      *(void *)(v4 + 8) = v48;
      long long v52 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 1, a2);
      unint64_t v53 = *(void *)(v4 + 8);
      if (v53 >= *(void *)(v4 + 16))
      {
        uint64_t v54 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v52);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v52);
        uint64_t v54 = v53 + 96;
        *(void *)(v4 + 8) = v53 + 96;
      }
      *(void *)(v4 + 8) = v54;
      uint64_t v55 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 3, a2);
      unint64_t v56 = *(void *)(v4 + 8);
      if (v56 >= *(void *)(v4 + 16))
      {
        uint64_t v57 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v55);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v55);
        uint64_t v57 = v56 + 96;
        *(void *)(v4 + 8) = v56 + 96;
      }
      *(void *)(v4 + 8) = v57;
      std::string::size_type v58 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 0, a2);
      unint64_t v59 = *(void *)(v4 + 8);
      if (v59 >= *(void *)(v4 + 16))
      {
        uint64_t v60 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v58);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v58);
        uint64_t v60 = v59 + 96;
        *(void *)(v4 + 8) = v59 + 96;
      }
      *(void *)(v4 + 8) = v60;
      long long v20 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 13, a2);
      unint64_t v21 = *(void *)(v4 + 8);
      if (v21 < *(void *)(v4 + 16)) {
        goto LABEL_63;
      }
      goto LABEL_64;
    case 3:
      unsigned int v14 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 0, a2);
      unint64_t v15 = *(void *)(v4 + 8);
      if (v15 >= *(void *)(v4 + 16))
      {
        uint64_t v16 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v14);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v14);
        uint64_t v16 = v15 + 96;
        *(void *)(v4 + 8) = v15 + 96;
      }
      *(void *)(v4 + 8) = v16;
      unint64_t v25 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 1, a2);
      unint64_t v26 = *(void *)(v4 + 8);
      if (v26 >= *(void *)(v4 + 16))
      {
        uint64_t v27 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v25);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v25);
        uint64_t v27 = v26 + 96;
        *(void *)(v4 + 8) = v26 + 96;
      }
      *(void *)(v4 + 8) = v27;
      unint64_t v34 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 2, a2);
      unint64_t v35 = *(void *)(v4 + 8);
      if (v35 >= *(void *)(v4 + 16))
      {
        uint64_t v36 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v34);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v34);
        uint64_t v36 = v35 + 96;
        *(void *)(v4 + 8) = v35 + 96;
      }
      *(void *)(v4 + 8) = v36;
      std::string v43 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 12, a2);
      unint64_t v44 = *(void *)(v4 + 8);
      if (v44 >= *(void *)(v4 + 16))
      {
        uint64_t v45 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v43);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v43);
        uint64_t v45 = v44 + 96;
        *(void *)(v4 + 8) = v44 + 96;
      }
      *(void *)(v4 + 8) = v45;
      uint64_t v49 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 13, a2);
      unint64_t v50 = *(void *)(v4 + 8);
      if (v50 >= *(void *)(v4 + 16))
      {
        uint64_t v51 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v49);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v49);
        uint64_t v51 = v50 + 96;
        *(void *)(v4 + 8) = v50 + 96;
      }
      *(void *)(v4 + 8) = v51;
      long long v20 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_18A5CA4D5, 3, a2);
      unint64_t v21 = *(void *)(v4 + 8);
      if (v21 >= *(void *)(v4 + 16))
      {
LABEL_64:
        BOOL result = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v20);
      }
      else
      {
LABEL_63:
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v20);
        BOOL result = v21 + 96;
        *(void *)(v4 + 8) = v21 + 96;
      }
      *(void *)(v4 + 8) = result;
      break;
    default:
      return result;
  }
  return result;
}

void sub_18919D600(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_18919D658(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void *addr_obj::venue::Formatter::Formatter(void *a1, int *a2, int a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  addr_obj::venue::Formatter::fromPattern((uint64_t)a1, a2, a3);
  return a1;
}

void sub_18919D6A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::vector<addr_obj::venue::Template>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

addr_obj::venue::Formatter *addr_obj::venue::Formatter::Formatter(addr_obj::venue::Formatter *this, const addr_obj::VenueFormatterProto *a2)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  addr_obj::venue::Formatter::fromProto(this, a2);
  return this;
}

void sub_18919D6F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::vector<addr_obj::venue::Template>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void addr_obj::venue::Formatter::fromProto(addr_obj::venue::Formatter *this, const addr_obj::VenueFormatterProto *a2)
{
  uint64_t v5 = *(void *)this;
  uint64_t v4 = *((void *)this + 1);
  if (v4 != *(void *)this)
  {
    do
    {
      v4 -= 96;
      std::allocator<addr_obj::venue::Template>::destroy[abi:ne180100]((uint64_t)this + 16, v4);
    }
    while (v4 != v5);
  }
  *((void *)this + 1) = v5;
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      addr_obj::venue::Template::Template((addr_obj::venue::Template *)v9, *(const addr_obj::VenueTemplateProto **)(*((void *)a2 + 2) + 8 * v6));
      unint64_t v7 = *((void *)this + 1);
      if (v7 >= *((void *)this + 2))
      {
        uint64_t v8 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)this, (const addr_obj::venue::Template *)v9);
      }
      else
      {
        addr_obj::venue::Template::Template(*((std::string **)this + 1), (const addr_obj::venue::Template *)v9);
        uint64_t v8 = v7 + 96;
        *((void *)this + 1) = v7 + 96;
      }
      *((void *)this + 1) = v8;
      unint64_t v15 = (void **)&v14;
      std::vector<addr_obj::venue::Decorator>::__destroy_vector::operator()[abi:ne180100](&v15);
      if (__p)
      {
        uint64_t v13 = __p;
        operator delete(__p);
      }
      if (v10)
      {
        uint64_t v11 = v10;
        operator delete(v10);
      }
      if (v9[0])
      {
        v9[1] = v9[0];
        operator delete(v9[0]);
      }
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
}

void sub_18919D820(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  addr_obj::venue::Template::~Template((addr_obj::venue::Template *)va);
  _Unwind_Resume(a1);
}

std::string *addr_obj::venue::Formatter::Formatter(std::string *this, addr_obj::venue::Template **a2)
{
  this->__r_.__value_.__r.__words[0] = 0;
  this->__r_.__value_.__l.__size_ = 0;
  this->__r_.__value_.__r.__words[2] = 0;
  std::vector<addr_obj::venue::Template>::__init_with_size[abi:ne180100]<addr_obj::venue::Template*,addr_obj::venue::Template*>(this, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 5));
  return this;
}

void addr_obj::venue::Formatter::toProto(int ***this, addr_obj::VenueFormatterProto *a2)
{
  uint64_t v2 = *this;
  if (*this != this[1])
  {
    uint64_t v5 = (char *)a2 + 16;
    do
    {
      int v6 = *((_DWORD *)a2 + 7);
      uint64_t v7 = *((int *)a2 + 6);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)a2 + 8))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)v5, v6 + 1);
          int v6 = *((_DWORD *)a2 + 7);
        }
        *((_DWORD *)a2 + 7) = v6 + 1;
        AddrObjGoogle::protobuf::internal::GenericTypeHandler<addr_obj::VenueTemplateProto>::New();
      }
      uint64_t v8 = *((void *)a2 + 2);
      *((_DWORD *)a2 + 6) = v7 + 1;
      addr_obj::venue::Template::toProto(v2, *(addr_obj::VenueTemplateProto **)(v8 + 8 * v7));
      v2 += 12;
    }
    while (v2 != this[1]);
  }
}

addr_obj::Logger *addr_obj::venue::Formatter::find(addr_obj::venue::Formatter *a1, uint64_t *a2)
{
  BOOL result = *(addr_obj::Logger **)a1;
  uint64_t v5 = (addr_obj::Logger *)*((void *)a1 + 1);
  if (result != v5)
  {
    uint64_t v6 = *a2;
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3);
    while (2)
    {
      for (unsigned int i = *(unint64_t **)result; ; ++i)
      {
        if (i == *((unint64_t **)result + 1))
        {
          for (j = (unint64_t *)*((void *)result + 3); j != *((unint64_t **)result + 4); ++j)
          {
            if (*j < v7)
            {
              unint64_t v11 = v6 + 24 * *j;
              if (*(char *)(v11 + 23) < 0)
              {
                if (*(void *)(v11 + 8)) {
                  goto LABEL_19;
                }
              }
              else if (*(unsigned char *)(v11 + 23))
              {
                goto LABEL_19;
              }
            }
          }
          return result;
        }
        if (*i >= v7) {
          break;
        }
        unint64_t v9 = v6 + 24 * *i;
        if (*(char *)(v9 + 23) < 0)
        {
          if (!*(void *)(v9 + 8)) {
            break;
          }
        }
        else if (!*(unsigned char *)(v9 + 23))
        {
          break;
        }
      }
LABEL_19:
      BOOL result = (addr_obj::Logger *)((char *)result + 96);
      if (result != v5) {
        continue;
      }
      break;
    }
  }
  if (addr_obj::Logger::isInitialized(result))
  {
    std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v26);
    unint64_t v12 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v26, (uint64_t)"could not find matching template for venue fields ", 50);
    uint64_t v13 = *a2;
    uint64_t v29 = a2[1];
    uint64_t v30 = v13;
    uint64_t v14 = addr_obj::stream_container<std::__wrap_iter<std::string const*>>(v12, &v30, &v29);
    unint64_t v15 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v14, (uint64_t)";", 1);
    uint64_t v16 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v15, (uint64_t)" only following are available: ", 31);
    unint64_t v17 = addr_obj::venue::operator<<(v16, a1);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v17, (uint64_t)"; the label will be empty",
      25);
    std::string::basic_string[abi:ne180100]<0>(v24, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/venue_Formatter.cpp");
    std::string::basic_string[abi:ne180100]<0>(v22, "find");
    std::stringbuf::str();
    std::string::basic_string[abi:ne180100]<0>(__p, "");
    addr_obj::Logger::log(16, (uint64_t)v24, 130, (uint64_t)v22, (uint64_t)&v20, (uint64_t)__p);
    if (v19 < 0) {
      operator delete(__p[0]);
    }
    if (v21 < 0) {
      operator delete(v20);
    }
    if (v23 < 0) {
      operator delete(v22[0]);
    }
    if (v25 < 0) {
      operator delete(v24[0]);
    }
    v26[0] = *MEMORY[0x1E4FBA418];
    *(void *)((char *)v26 + *(void *)(v26[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
    v26[1] = MEMORY[0x1E4FBA470] + 16;
    if (v27 < 0) {
      operator delete((void *)v26[9]);
    }
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    MEMORY[0x18C11F4F0](&v28);
  }
  return 0;
}

void sub_18919DC20(void *__p, int a2, int a3, __int16 a4, char a5, char a6, std::string *a7, void *a8, void *__pa, int a10, __int16 a11, char a12, char a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,long long a21,std::string::size_type a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (SHIBYTE(a14) < 0) {
    operator delete(__pa);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (SHIBYTE(a22) < 0) {
    operator delete((void *)a21);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  std::ostringstream::~ostringstream((uint64_t)&a30);
  unint64_t v37 = __cxa_begin_catch(__p);
  if (a2 == 2)
  {
    unint64_t v38 = v37;
    std::string::basic_string[abi:ne180100]<0>(&a30, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/venue_Formatter.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a24, "find");
    std::string::basic_string[abi:ne180100]<0>(&a15, "Exception caught during formatting of the log line: ");
    uint64_t v39 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(void *)v38 + 16))(v38);
    std::string::size_type v40 = std::string::append((std::string *)&a15, v39);
    long long v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
    a22 = v40->__r_.__value_.__r.__words[2];
    a21 = v41;
    v40->__r_.__value_.__l.__size_ = 0;
    v40->__r_.__value_.__r.__words[2] = 0;
    v40->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string[abi:ne180100]<0>(&__pa, "");
    addr_obj::Logger::log(16, (uint64_t)&a30, 130, (uint64_t)&a24, (uint64_t)&a21, (uint64_t)&__pa);
    if (SHIBYTE(a14) < 0) {
      operator delete(__pa);
    }
    if (SHIBYTE(a22) < 0) {
      operator delete((void *)a21);
    }
    if (a20 < 0)
    {
      uint64_t v42 = a15;
LABEL_20:
      operator delete(v42);
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&a30, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/venue_Formatter.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a24, "find");
    std::string::basic_string[abi:ne180100]<0>(&a21, "Unexpected exception caught during formatting of the log line");
    std::string::basic_string[abi:ne180100]<0>(&a15, "");
    addr_obj::Logger::log(16, (uint64_t)&a30, 130, (uint64_t)&a24, (uint64_t)&a21, (uint64_t)&a15);
    if (a20 < 0) {
      operator delete(a15);
    }
    if (SHIBYTE(a22) < 0)
    {
      uint64_t v42 = (void *)a21;
      goto LABEL_20;
    }
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  __cxa_end_catch();
  JUMPOUT(0x18919DC08);
}

void sub_18919DE44(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (a39 < 0) {
    operator delete(a34);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18919DE3CLL);
}

void sub_18919DF50()
{
}

void *addr_obj::venue::operator<<(void *a1, addr_obj::venue::Formatter *this)
{
  addr_obj::venue::Formatter::str((uint64_t *)__p, this);
  if ((v8 & 0x80u) == 0) {
    uint64_t v3 = __p;
  }
  else {
    uint64_t v3 = (void **)__p[0];
  }
  if ((v8 & 0x80u) == 0) {
    uint64_t v4 = v8;
  }
  else {
    uint64_t v4 = (uint64_t)__p[1];
  }
  uint64_t v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)v3, v4);
  if ((char)v8 < 0) {
    operator delete(__p[0]);
  }
  return v5;
}

void sub_18919DFD4(void *a1, std::string *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

void addr_obj::venue::Formatter::label(addr_obj::Logger *a1@<X0>, uint64_t *a2@<X1>, std::string *a3@<X8>)
{
  uint64_t v47 = *MEMORY[0x1E4F143B8];
  if (*a2 == a2[1])
  {
    isInitialized = (addr_obj *)addr_obj::Logger::isInitialized(a1);
    if (isInitialized)
    {
      std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&v39);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v39, (uint64_t)"cannot format an empty venue ; returning empty",
        46);
      std::string::basic_string[abi:ne180100]<0>(v44, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/venue_Formatter.cpp");
      std::string::basic_string[abi:ne180100]<0>(&v38, "label");
      std::stringbuf::str();
      std::string::basic_string[abi:ne180100]<0>(v34, "");
      addr_obj::Logger::log(16, (uint64_t)v44, 138, (uint64_t)&v38, (uint64_t)&v36, (uint64_t)v34);
      if (v35 < 0) {
        operator delete(v34[0]);
      }
      if (v37 < 0) {
        operator delete(v36);
      }
      if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v38.__r_.__value_.__l.__data_);
      }
      if (v45 < 0) {
        operator delete(v44[0]);
      }
      uint64_t v39 = *MEMORY[0x1E4FBA418];
      *(uint64_t *)((char *)&v39 + *(void *)(v39 - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
      uint64_t v40 = MEMORY[0x1E4FBA470] + 16;
      if (v42 < 0) {
        operator delete(__p);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      isInitialized = (addr_obj *)MEMORY[0x18C11F4F0](v43);
    }
    uint64_t v30 = addr_obj::emptyString(isInitialized);
    if (*((char *)v30 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(a3, *(const std::string::value_type **)v30, *((void *)v30 + 1));
      return;
    }
    goto LABEL_70;
  }
  uint64_t v5 = addr_obj::venue::Formatter::find(a1, a2);
  if (!v5)
  {
    uint64_t v30 = addr_obj::emptyString(0);
    if (*((char *)v30 + 23) < 0)
    {
      unint64_t v32 = *(const std::string::value_type **)v30;
      std::string::size_type v33 = *((void *)v30 + 1);
      std::string::__init_copy_ctor_external(a3, v32, v33);
      return;
    }
LABEL_70:
    long long v31 = *v30;
    a3->__r_.__value_.__r.__words[2] = *((void *)v30 + 2);
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = v31;
    return;
  }
  uint64_t v6 = v5;
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&v39);
  memset(&v38, 0, sizeof(v38));
  unsigned __int8 v8 = (const addr_obj::venue::Field *)*((void *)v6 + 6);
  unint64_t v7 = (const addr_obj::venue::Field *)*((void *)v6 + 7);
  while (v8 != v7)
  {
    if (*(void *)v8 < 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3))
    {
      uint64_t v9 = *a2 + 24 * *(void *)v8;
      if (*(char *)(v9 + 23) < 0)
      {
        if (*(void *)(v9 + 8))
        {
LABEL_9:
          if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type size = HIBYTE(v38.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type size = v38.__r_.__value_.__l.__size_;
          }
          if (size)
          {
            if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              unint64_t v11 = &v38;
            }
            else {
              unint64_t v11 = (std::string *)v38.__r_.__value_.__r.__words[0];
            }
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v39, (uint64_t)v11, size);
          }
          uint64_t Decorator = addr_obj::venue::Template::getDecorator(v6, v8);
          uint64_t v13 = (char *)&v39 + *(void *)(v39 - 24);
          if ((v13[32] & 5) == 0)
          {
            (*(void (**)(void **__return_ptr))(**((void **)v13 + 5) + 32))(v44);
            if (v46 >= 1)
            {
              uint64_t v25 = *(unsigned __int8 *)(Decorator + 23);
              if ((v25 & 0x80u) != 0) {
                uint64_t v25 = *(void *)(Decorator + 8);
              }
              if (v25)
              {
                int v26 = *(char *)(Decorator + 23);
                if (v26 >= 0) {
                  uint64_t v27 = Decorator;
                }
                else {
                  uint64_t v27 = *(void *)Decorator;
                }
                if (v26 >= 0) {
                  uint64_t v28 = *(unsigned __int8 *)(Decorator + 23);
                }
                else {
                  uint64_t v28 = *(void *)(Decorator + 8);
                }
                std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v39, v27, v28);
              }
            }
          }
          int v14 = *(char *)(Decorator + 47);
          if (v14 >= 0) {
            uint64_t v15 = Decorator + 24;
          }
          else {
            uint64_t v15 = *(void *)(Decorator + 24);
          }
          if (v14 >= 0) {
            uint64_t v16 = *(unsigned __int8 *)(Decorator + 47);
          }
          else {
            uint64_t v16 = *(void *)(Decorator + 32);
          }
          unint64_t v17 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v39, v15, v16);
          int v18 = *(char *)(v9 + 23);
          if (v18 >= 0) {
            uint64_t v19 = v9;
          }
          else {
            uint64_t v19 = *(void *)v9;
          }
          if (v18 >= 0) {
            uint64_t v20 = *(unsigned __int8 *)(v9 + 23);
          }
          else {
            uint64_t v20 = *(void *)(v9 + 8);
          }
          char v21 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v17, v19, v20);
          int v22 = *(char *)(Decorator + 71);
          if (v22 >= 0) {
            uint64_t v23 = Decorator + 48;
          }
          else {
            uint64_t v23 = *(void *)(Decorator + 48);
          }
          if (v22 >= 0) {
            uint64_t v24 = *(unsigned __int8 *)(Decorator + 71);
          }
          else {
            uint64_t v24 = *(void *)(Decorator + 56);
          }
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, v23, v24);
          std::string::operator=(&v38, (const std::string *)(Decorator + 72));
          unint64_t v7 = (const addr_obj::venue::Field *)*((void *)v6 + 7);
        }
      }
      else if (*(unsigned char *)(v9 + 23))
      {
        goto LABEL_9;
      }
    }
    unsigned __int8 v8 = (const addr_obj::venue::Field *)((char *)v8 + 16);
  }
  std::stringbuf::str();
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  uint64_t v39 = *MEMORY[0x1E4FBA418];
  *(uint64_t *)((char *)&v39 + *(void *)(v39 - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  uint64_t v40 = MEMORY[0x1E4FBA470] + 16;
  if (v42 < 0) {
    operator delete(__p);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x18C11F4F0](v43);
}

void sub_18919E578(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, std::string *a17, void *a18, uint64_t a19, long long a20,std::string::size_type a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a2)
  {
    if (a16 < 0) {
      operator delete(__p);
    }
    if (SHIBYTE(a19) < 0) {
      operator delete(a17);
    }
    if (SHIBYTE(a21) < 0) {
      operator delete((void *)a20);
    }
    if (*(char *)(v28 - 209) < 0) {
      operator delete(*(void **)(v28 - 232));
    }
    std::ostringstream::~ostringstream((uint64_t)&a23);
    long long v31 = __cxa_begin_catch(exception_object);
    if (a2 == 2)
    {
      unint64_t v32 = v31;
      std::string::basic_string[abi:ne180100]<0>(&a23, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/venue_Formatter.cpp");
      std::string::basic_string[abi:ne180100]<0>((void *)(v28 - 232), "label");
      std::string::basic_string[abi:ne180100]<0>(&a17, "Exception caught during formatting of the log line: ");
      std::string::size_type v33 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(void *)v32 + 16))(v32);
      unint64_t v34 = std::string::append((std::string *)&a17, v33);
      long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
      a21 = v34->__r_.__value_.__r.__words[2];
      a20 = v35;
      v34->__r_.__value_.__l.__size_ = 0;
      v34->__r_.__value_.__r.__words[2] = 0;
      v34->__r_.__value_.__r.__words[0] = 0;
      std::string::basic_string[abi:ne180100]<0>(&__p, "");
      addr_obj::Logger::log(16, (uint64_t)&a23, 138, v28 - 232, (uint64_t)&a20, (uint64_t)&__p);
      if (a16 < 0) {
        operator delete(__p);
      }
      if (SHIBYTE(a21) < 0) {
        operator delete((void *)a20);
      }
      if (SHIBYTE(a19) < 0) {
        operator delete(a17);
      }
      if (*(char *)(v28 - 209) < 0) {
        operator delete(*(void **)(v28 - 232));
      }
      if (a28 < 0) {
        operator delete(a23);
      }
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(&a23, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/venue_Formatter.cpp");
      std::string::basic_string[abi:ne180100]<0>((void *)(v28 - 232), "label");
      std::string::basic_string[abi:ne180100]<0>(&a20, "Unexpected exception caught during formatting of the log line");
      std::string::basic_string[abi:ne180100]<0>(&a17, "");
      addr_obj::Logger::log(16, (uint64_t)&a23, 138, v28 - 232, (uint64_t)&a20, (uint64_t)&a17);
      if (SHIBYTE(a19) < 0) {
        operator delete(a17);
      }
      if (SHIBYTE(a21) < 0) {
        operator delete((void *)a20);
      }
      if (*(char *)(v28 - 209) < 0) {
        operator delete(*(void **)(v28 - 232));
      }
      if (a28 < 0) {
        operator delete(a23);
      }
    }
    __cxa_end_catch();
    JUMPOUT(0x18919E4B4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t addr_obj::venue::Formatter::str(addr_obj::venue::Formatter *this)
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"venue::Formatter: ", 18);
  uint64_t v2 = (void *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)" template(s): ", 14);
  if (*((void *)this + 1) != *(void *)this)
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    do
    {
      if (v4) {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)", ", 2);
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"template[", 9);
      uint64_t v5 = (void *)std::ostream::operator<<();
      uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"]: ", 3);
      addr_obj::venue::operator<<(v6, (addr_obj::venue::Decorator **)(*(void *)this + v3));
      ++v4;
      v3 += 96;
    }
    while (v4 != 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)this + 1) - *(void *)this) >> 5));
  }
  std::stringbuf::str();
  v8[0] = *MEMORY[0x1E4FBA418];
  *(void *)((char *)v8 + *(void *)(v8[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v8[1] = MEMORY[0x1E4FBA470] + 16;
  if (v9 < 0) {
    operator delete((void *)v8[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x18C11F4F0](&v10);
}

void sub_18919EB9C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
}

addr_obj::venue::Formatters *addr_obj::venue::Formatters::Formatters(addr_obj::venue::Formatters *this, const addr_obj::venue::VenueInfoFormatterParams *a2)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  std::vector<addr_obj::venue::Formatter>::reserve((uint64_t *)this, 4uLL);
  for (uint64_t i = 0; i != 4; ++i)
  {
    addr_obj::venue::Formatter::Formatter(v8, (int *)a2, i);
    unint64_t v5 = *((void *)this + 1);
    if (v5 >= *((void *)this + 2))
    {
      uint64_t v6 = std::vector<addr_obj::venue::Formatter>::__push_back_slow_path<addr_obj::venue::Formatter>((uint64_t *)this, v8);
    }
    else
    {
      std::vector<addr_obj::venue::Formatter>::__construct_one_at_end[abi:ne180100]<addr_obj::venue::Formatter>((uint64_t)this, v8);
      uint64_t v6 = v5 + 24;
    }
    *((void *)this + 1) = v6;
    char v9 = v8;
    std::vector<addr_obj::venue::Template>::__destroy_vector::operator()[abi:ne180100]((void ***)&v9);
  }
  return this;
}

void sub_18919EC78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void **std::vector<addr_obj::venue::Formatter>::reserve(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  BOOL result = (void **)(a1 + 2);
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3) < a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::TrafficDynamicTile::Flow>>((uint64_t)result, a2);
    v7[1] = (char *)v7[0] + v5;
    v7[2] = (char *)v7[0] + v5;
    v7[3] = (char *)v7[0] + 24 * v6;
    std::vector<addr_obj::venue::Formatter>::__swap_out_circular_buffer(a1, v7);
    return std::__split_buffer<addr_obj::venue::Formatter>::~__split_buffer(v7);
  }
  return result;
}

void sub_18919ED4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<addr_obj::venue::Formatter>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

uint64_t addr_obj::venue::Formatters::operator[](void *a1, unint64_t a2)
{
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 3) <= a2)
  {
    std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v21);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)"out of range access: index <", 28);
    uint64_t v3 = (void *)std::ostream::operator<<();
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"> is too big; only ", 19);
    uint64_t v4 = (void *)std::ostream::operator<<();
    uint64_t v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)" elements exist", 15);
    uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"; library version: ",
           19);
    unint64_t v7 = (addr_obj::Logger *)std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"11.3.0", 6);
    if (addr_obj::Logger::isInitialized(v7))
    {
      std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v20);
      std::stringbuf::str();
      if ((v19 & 0x80u) == 0) {
        unsigned __int8 v8 = __p;
      }
      else {
        unsigned __int8 v8 = (void **)__p[0];
      }
      if ((v19 & 0x80u) == 0) {
        uint64_t v9 = v19;
      }
      else {
        uint64_t v9 = (uint64_t)__p[1];
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v20, (uint64_t)v8, v9);
      if ((char)v19 < 0) {
        operator delete(__p[0]);
      }
      std::string::basic_string[abi:ne180100]<0>(__p, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/venue_Formatter.cpp");
      std::string::basic_string[abi:ne180100]<0>(v16, "operator[]");
      std::stringbuf::str();
      std::string::basic_string[abi:ne180100]<0>(v13, "");
      addr_obj::Logger::log(16, (uint64_t)__p, 215, (uint64_t)v16, (uint64_t)&v15, (uint64_t)v13);
      if (v14 < 0) {
        operator delete(v13[0]);
      }
      if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v15.__r_.__value_.__l.__data_);
      }
      if (v17 < 0) {
        operator delete(v16[0]);
      }
      if ((char)v19 < 0) {
        operator delete(__p[0]);
      }
      std::ostringstream::~ostringstream((uint64_t)v20);
    }
    uint64_t v10 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)"; at ", 5);
    unint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/venue_Formatter.cpp", 89);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)":", 1);
    std::ostream::operator<<();
    exception = (std::logic_error *)__cxa_allocate_exception(0x28uLL);
    std::string::basic_string[abi:ne180100]<0>(v20, "LogicError");
    std::stringbuf::str();
    addr_obj::Exception<std::logic_error>::Exception(exception, (const void **)v20, (uint64_t)__p);
  }
  return *a1 + 24 * a2;
}

void sub_18919F338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a29 < 0)
  {
    operator delete(a24);
    if ((v30 & 1) == 0)
    {
LABEL_8:
      std::ostringstream::~ostringstream((uint64_t)&v32);
      _Unwind_Resume(a1);
    }
  }
  else if (!v30)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v29);
  goto LABEL_8;
}

void sub_18919F394(_Unwind_Exception *a1)
{
  std::ostringstream::~ostringstream((uint64_t)&v2);
  _Unwind_Resume(a1);
}

uint64_t std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>(uint64_t *a1, const addr_obj::venue::Template *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 5);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x2AAAAAAAAAAAAAALL) {
    std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 5);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x155555555555555) {
    unint64_t v9 = 0x2AAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  char v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<addr_obj::venue::Decorator>>(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v13 = v10;
  char v14 = (std::string *)&v10[96 * v4];
  uint64_t v16 = &v10[96 * v9];
  addr_obj::venue::Template::Template(v14, a2);
  std::string v15 = v14 + 4;
  std::vector<addr_obj::venue::Template>::__swap_out_circular_buffer(a1, &v13);
  uint64_t v11 = a1[1];
  std::__split_buffer<addr_obj::venue::Template>::~__split_buffer(&v13);
  return v11;
}

void sub_18919F4B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<addr_obj::venue::Template>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<addr_obj::venue::Template>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<addr_obj::venue::Template>,std::reverse_iterator<addr_obj::venue::Template*>,std::reverse_iterator<addr_obj::venue::Template*>,std::reverse_iterator<addr_obj::venue::Template*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<addr_obj::venue::Template>,std::reverse_iterator<addr_obj::venue::Template*>,std::reverse_iterator<addr_obj::venue::Template*>,std::reverse_iterator<addr_obj::venue::Template*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  std::string v13[2] = &v16;
  char v14 = 0;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v9 = a3;
    do
    {
      v9 -= 96;
      std::allocator<addr_obj::venue::Template>::construct[abi:ne180100]<addr_obj::venue::Template,addr_obj::venue::Template>(a1, (void *)(v7 - 96), v9);
      uint64_t v7 = *((void *)&v16 + 1) - 96;
      *((void *)&v16 + 1) -= 96;
    }
    while (v9 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Template>,std::reverse_iterator<addr_obj::venue::Template*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v13);
  return v11;
}

__n128 std::allocator<addr_obj::venue::Template>::construct[abi:ne180100]<addr_obj::venue::Template,addr_obj::venue::Template>(uint64_t a1, void *a2, uint64_t a3)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  *(_OWORD *)a2 = *(_OWORD *)a3;
  a2[2] = *(void *)(a3 + 16);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  a2[3] = 0;
  a2[4] = 0;
  a2[5] = 0;
  *(_OWORD *)(a2 + 3) = *(_OWORD *)(a3 + 24);
  a2[5] = *(void *)(a3 + 40);
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  *(void *)(a3 + 40) = 0;
  a2[6] = 0;
  a2[7] = 0;
  a2[8] = 0;
  *((_OWORD *)a2 + 3) = *(_OWORD *)(a3 + 48);
  a2[8] = *(void *)(a3 + 64);
  *(void *)(a3 + 48) = 0;
  *(void *)(a3 + 56) = 0;
  *(void *)(a3 + 64) = 0;
  a2[9] = 0;
  a2[10] = 0;
  a2[11] = 0;
  __n128 result = *(__n128 *)(a3 + 72);
  *(__n128 *)(a2 + 9) = result;
  a2[11] = *(void *)(a3 + 88);
  *(void *)(a3 + 72) = 0;
  *(void *)(a3 + 80) = 0;
  *(void *)(a3 + 88) = 0;
  return result;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Template>,std::reverse_iterator<addr_obj::venue::Template*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Template>,std::reverse_iterator<addr_obj::venue::Template*>>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Template>,std::reverse_iterator<addr_obj::venue::Template*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      std::allocator<addr_obj::venue::Template>::destroy[abi:ne180100](v3, v1);
      v1 += 96;
    }
    while (v1 != v2);
  }
}

void std::allocator<addr_obj::venue::Template>::destroy[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void **)(a2 + 72);
  std::vector<addr_obj::venue::Decorator>::__destroy_vector::operator()[abi:ne180100](&v6);
  uint64_t v3 = *(void **)(a2 + 48);
  if (v3)
  {
    *(void *)(a2 + 56) = v3;
    operator delete(v3);
  }
  unint64_t v4 = *(void **)(a2 + 24);
  if (v4)
  {
    *(void *)(a2 + 32) = v4;
    operator delete(v4);
  }
  uint64_t v5 = *(void **)a2;
  if (*(void *)a2)
  {
    *(void *)(a2 + 8) = v5;
    operator delete(v5);
  }
}

void **std::__split_buffer<addr_obj::venue::Template>::~__split_buffer(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void std::__split_buffer<addr_obj::venue::Template>::clear[abi:ne180100](void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 96;
    std::allocator<addr_obj::venue::Template>::destroy[abi:ne180100](v4, i - 96);
  }
}

void std::vector<addr_obj::venue::Template>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 96;
        std::allocator<addr_obj::venue::Template>::destroy[abi:ne180100]((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

std::string *std::vector<addr_obj::venue::Template>::__init_with_size[abi:ne180100]<addr_obj::venue::Template*,addr_obj::venue::Template*>(std::string *result, addr_obj::venue::Template *a2, addr_obj::venue::Template *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    std::vector<addr_obj::venue::Decorator>::__vallocate[abi:ne180100](result, a4);
    __n128 result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<addr_obj::venue::Template>,addr_obj::venue::Template*,addr_obj::venue::Template*,addr_obj::venue::Template*>((uint64_t)&v6->__r_.__value_.__r.__words[2], a2, a3, (std::string *)v6->__r_.__value_.__l.__size_);
    v6->__r_.__value_.__l.__size_ = (std::string::size_type)result;
  }
  return result;
}

void sub_18919F8E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<addr_obj::venue::Template>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

std::string *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<addr_obj::venue::Template>,addr_obj::venue::Template*,addr_obj::venue::Template*,addr_obj::venue::Template*>(uint64_t a1, addr_obj::venue::Template *a2, addr_obj::venue::Template *a3, std::string *this)
{
  uint64_t v4 = this;
  uint64_t v10 = (addr_obj::venue::Template *)this;
  uint64_t v11 = (addr_obj::venue::Template *)this;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      addr_obj::venue::Template::Template(v4, v6);
      uint64_t v6 = (const addr_obj::venue::Template *)((char *)v6 + 96);
      uint64_t v4 = (std::string *)((char *)v11 + 96);
      uint64_t v11 = (addr_obj::venue::Template *)((char *)v11 + 96);
    }
    while (v6 != a3);
  }
  char v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Template>,addr_obj::venue::Template*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_18919F998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Template>,addr_obj::venue::Template*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Template>,addr_obj::venue::Template*>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Template>,addr_obj::venue::Template*>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)a1[1];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 96;
      std::allocator<addr_obj::venue::Template>::destroy[abi:ne180100](v5, v3);
    }
    while (v3 != v4);
  }
}

void *addr_obj::stream_container<std::__wrap_iter<std::string const*>>(void *a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = *a2;
  if (*a3 != *a2)
  {
    int v6 = *(char *)(v4 + 23);
    uint64_t v7 = v6 >= 0 ? *a2 : *(void *)v4;
    uint64_t v8 = v6 >= 0 ? *(unsigned __int8 *)(v4 + 23) : *(void *)(v4 + 8);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, v7, v8);
    for (uint64_t i = v4 + 24; i != *a3; i += 24)
    {
      uint64_t v10 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)", ", 2);
      int v11 = *(char *)(i + 23);
      if (v11 >= 0) {
        uint64_t v12 = i;
      }
      else {
        uint64_t v12 = *(void *)i;
      }
      if (v11 >= 0) {
        uint64_t v13 = *(unsigned __int8 *)(i + 23);
      }
      else {
        uint64_t v13 = *(void *)(i + 8);
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, v12, v13);
    }
  }
  return a1;
}

std::string *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<addr_obj::venue::Formatter>,addr_obj::venue::Formatter*,addr_obj::venue::Formatter*,addr_obj::venue::Formatter*>(uint64_t a1, addr_obj::venue::Template **a2, addr_obj::venue::Template **a3, std::string *a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  int v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    int v6 = a2;
    do
    {
      v4->__r_.__value_.__r.__words[0] = 0;
      v4->__r_.__value_.__l.__size_ = 0;
      v4->__r_.__value_.__r.__words[2] = 0;
      std::vector<addr_obj::venue::Template>::__init_with_size[abi:ne180100]<addr_obj::venue::Template*,addr_obj::venue::Template*>(v4, *v6, v6[1], 0xAAAAAAAAAAAAAAABLL * ((v6[1] - *v6) >> 5));
      uint64_t v4 = ++v11;
      v6 += 3;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Formatter>,addr_obj::venue::Formatter*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_18919FB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Formatter>,addr_obj::venue::Formatter*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Formatter>,addr_obj::venue::Formatter*>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Formatter>,addr_obj::venue::Formatter*>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = **(void ****)(a1 + 16);
  uint64_t v2 = **(void ****)(a1 + 8);
  while (v1 != v2)
  {
    v1 -= 3;
    uint64_t v3 = v1;
    std::vector<addr_obj::venue::Template>::__destroy_vector::operator()[abi:ne180100](&v3);
  }
}

uint64_t std::vector<addr_obj::venue::Formatter>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<addr_obj::venue::Formatter>,std::reverse_iterator<addr_obj::venue::Formatter*>,std::reverse_iterator<addr_obj::venue::Formatter*>,std::reverse_iterator<addr_obj::venue::Formatter*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<addr_obj::venue::Formatter>,std::reverse_iterator<addr_obj::venue::Formatter*>,std::reverse_iterator<addr_obj::venue::Formatter*>,std::reverse_iterator<addr_obj::venue::Formatter*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v18 = a6;
  *((void *)&v18 + 1) = a7;
  long long v17 = v18;
  v15[0] = a1;
  v15[1] = &v17;
  v15[2] = &v18;
  char v16 = 0;
  if (a3 == a5)
  {
    uint64_t v13 = a6;
  }
  else
  {
    uint64_t v9 = a3;
    do
    {
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      uint64_t v10 = (std::string *)(v7 - 24);
      v10->__r_.__value_.__r.__words[2] = 0;
      int v11 = *(addr_obj::venue::Template **)(v9 - 24);
      uint64_t v12 = *(addr_obj::venue::Template **)(v9 - 16);
      v9 -= 24;
      std::vector<addr_obj::venue::Template>::__init_with_size[abi:ne180100]<addr_obj::venue::Template*,addr_obj::venue::Template*>(v10, v11, v12, 0xAAAAAAAAAAAAAAABLL * ((v12 - v11) >> 5));
      uint64_t v7 = *((void *)&v18 + 1) - 24;
      *((void *)&v18 + 1) -= 24;
    }
    while (v9 != a5);
    uint64_t v13 = v18;
  }
  char v16 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Formatter>,std::reverse_iterator<addr_obj::venue::Formatter*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v15);
  return v13;
}

void sub_18919FD68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Formatter>,std::reverse_iterator<addr_obj::venue::Formatter*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Formatter>,std::reverse_iterator<addr_obj::venue::Formatter*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Formatter>,std::reverse_iterator<addr_obj::venue::Formatter*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void ***)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void ***)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = v1;
    std::vector<addr_obj::venue::Template>::__destroy_vector::operator()[abi:ne180100](&v3);
    v1 += 3;
  }
}

void **std::__split_buffer<addr_obj::venue::Formatter>::~__split_buffer(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void std::__split_buffer<addr_obj::venue::Formatter>::clear[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t v4 = (void **)(i - 24);
    *(void *)(a1 + 16) = v4;
    uint64_t v5 = v4;
    std::vector<addr_obj::venue::Template>::__destroy_vector::operator()[abi:ne180100](&v5);
  }
}

std::string *std::vector<addr_obj::venue::Formatter>::__construct_one_at_end[abi:ne180100]<addr_obj::venue::Formatter>(uint64_t a1, addr_obj::venue::Template **a2)
{
  uint64_t v3 = *(std::string **)(a1 + 8);
  v3->__r_.__value_.__r.__words[0] = 0;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  uint64_t result = std::vector<addr_obj::venue::Template>::__init_with_size[abi:ne180100]<addr_obj::venue::Template*,addr_obj::venue::Template*>(v3, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 5));
  *(void *)(a1 + 8) = v3 + 1;
  return result;
}

void sub_18919FEE0(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::vector<addr_obj::venue::Formatter>::__push_back_slow_path<addr_obj::venue::Formatter>(uint64_t *a1, addr_obj::venue::Template **a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  long long v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::TrafficDynamicTile::Flow>>(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  int v11 = (std::string *)&v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  long long v15 = v11;
  char v16 = &v10[24 * v9];
  v11->__r_.__value_.__r.__words[0] = 0;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  std::vector<addr_obj::venue::Template>::__init_with_size[abi:ne180100]<addr_obj::venue::Template*,addr_obj::venue::Template*>(v11, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 5));
  ++v15;
  std::vector<addr_obj::venue::Formatter>::__swap_out_circular_buffer(a1, v14);
  uint64_t v12 = a1[1];
  std::__split_buffer<addr_obj::venue::Formatter>::~__split_buffer(v14);
  return v12;
}

void sub_18919FFF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<addr_obj::venue::Formatter>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::io::Tokenizer::Tokenizer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = a3;
  *(void *)(a1 + 140) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(unsigned char *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 160) = -1;
  *(unsigned char *)(a1 + 164) = 0;
  *(_DWORD *)(a1 + 168) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(_DWORD *)a1 = 0;
  AddrObjGoogle::protobuf::io::Tokenizer::Refresh(a1);
  return a1;
}

void sub_1891A0088(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 79) < 0) {
    operator delete(*v3);
  }
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::io::Tokenizer::Refresh(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 136))
  {
    *(unsigned char *)(this + 112) = 0;
  }
  else
  {
    uint64_t v2 = *(std::string **)(this + 152);
    if (v2)
    {
      uint64_t v3 = *(int *)(v1 + 160);
      int v4 = *(_DWORD *)(v1 + 128);
      if (v4 > (int)v3)
      {
        std::string::append(v2, (const std::string::value_type *)(*(void *)(v1 + 120) + v3), v4 - (int)v3);
        *(_DWORD *)(v1 + 160) = 0;
      }
    }
    uint64_t v7 = 0;
    *(void *)(v1 + 120) = 0;
    *(_DWORD *)(v1 + 132) = 0;
    while (1)
    {
      this = (*(uint64_t (**)(void, char **, uint64_t))(**(void **)(v1 + 96) + 16))(*(void *)(v1 + 96), &v7, v1 + 128);
      if ((this & 1) == 0) {
        break;
      }
      if (*(_DWORD *)(v1 + 128))
      {
        unint64_t v5 = v7;
        *(void *)(v1 + 120) = v7;
        char v6 = *v5;
        goto LABEL_11;
      }
    }
    char v6 = 0;
    *(_DWORD *)(v1 + 128) = 0;
    *(unsigned char *)(v1 + 136) = 1;
LABEL_11:
    *(unsigned char *)(v1 + 112) = v6;
  }
  return this;
}

void AddrObjGoogle::protobuf::io::Tokenizer::~Tokenizer(AddrObjGoogle::protobuf::io::Tokenizer *this)
{
  int v2 = *((_DWORD *)this + 32);
  int v3 = *((_DWORD *)this + 33);
  if (v2 > v3) {
    (*(void (**)(void, void))(**((void **)this + 12) + 24))(*((void *)this + 12), (v2 - v3));
  }
  if (*((char *)this + 79) < 0) {
    operator delete(*((void **)this + 7));
  }
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
}

uint64_t AddrObjGoogle::protobuf::io::Tokenizer::NextChar(uint64_t this)
{
  int v1 = *(unsigned __int8 *)(this + 112);
  if (v1 == 9)
  {
    int v2 = *(_DWORD *)(this + 144);
    if (v2 <= 0) {
      int v3 = -(-v2 & 7);
    }
    else {
      int v3 = *(_DWORD *)(this + 144) & 7;
    }
    int v4 = v2 - v3 + 8;
  }
  else
  {
    if (v1 == 10)
    {
      *(void *)(this + 140) = (*(_DWORD *)(this + 140) + 1);
      goto LABEL_10;
    }
    int v4 = *(_DWORD *)(this + 144) + 1;
  }
  *(_DWORD *)(this + 144) = v4;
LABEL_10:
  int v5 = *(_DWORD *)(this + 128);
  uint64_t v6 = *(int *)(this + 132) + 1;
  *(_DWORD *)(this + 132) = v6;
  if ((int)v6 >= v5) {
    return AddrObjGoogle::protobuf::io::Tokenizer::Refresh(this);
  }
  *(unsigned char *)(this + 112) = *(unsigned char *)(*(void *)(this + 120) + v6);
  return this;
}

void AddrObjGoogle::protobuf::io::Tokenizer::ConsumeString(AddrObjGoogle::protobuf::io::Tokenizer *this, unsigned __int8 a2)
{
  while (1)
  {
    while (1)
    {
      int v4 = *((char *)this + 112);
      if (v4 != 92) {
        break;
      }
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      int v7 = *((unsigned __int8 *)this + 112);
      BOOL v8 = (v7 - 97) > 0x15 || ((1 << (v7 - 97)) & 0x2A2023) == 0;
      if (!v8
        || (v7 - 34) <= 0x3A && ((1 << (v7 - 34)) & 0x400000020000021) != 0
        || (v7 & 0xF8) == 0x30)
      {
        goto LABEL_15;
      }
      if (*((unsigned __int8 *)this + 112) > 0x74u)
      {
        if (v7 == 117)
        {
          AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if ((*((unsigned char *)this + 112) - 48) >= 0xAu
            && ((unsigned int v15 = *((unsigned __int8 *)this + 112) - 65, v15 > 0x25) || ((1 << v15) & 0x3F0000003FLL) == 0)
            || (AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((unsigned char *)this + 112) - 48) >= 0xAu)
            && ((unsigned int v16 = *((unsigned __int8 *)this + 112) - 65, v16 > 0x25) || ((1 << v16) & 0x3F0000003FLL) == 0)
            || (AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((unsigned char *)this + 112) - 48) >= 0xAu)
            && ((unsigned int v17 = *((unsigned __int8 *)this + 112) - 65, v17 > 0x25) || ((1 << v17) & 0x3F0000003FLL) == 0)
            || (AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((unsigned char *)this + 112) - 48) >= 0xAu)
            && ((unsigned int v18 = *((unsigned __int8 *)this + 112) - 65, v18 > 0x25) || ((1 << v18) & 0x3F0000003FLL) == 0))
          {
            std::string::basic_string[abi:ne180100]<0>(__p, "Expected four hex digits for \\u escape sequence.");
            (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
            goto LABEL_46;
          }
          goto LABEL_15;
        }
        if (v7 != 120) {
          goto LABEL_20;
        }
        goto LABEL_23;
      }
      if (v7 == 85)
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if (*((unsigned char *)this + 112) != 48) {
          goto LABEL_45;
        }
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if (*((unsigned char *)this + 112) != 48) {
          goto LABEL_45;
        }
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if ((*((unsigned char *)this + 112) & 0xFE) != 0x30) {
          goto LABEL_45;
        }
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if ((*((unsigned char *)this + 112) - 48) >= 0xAu)
        {
          unsigned int v10 = *((unsigned __int8 *)this + 112) - 65;
          if (v10 > 0x25 || ((1 << v10) & 0x3F0000003FLL) == 0) {
            goto LABEL_45;
          }
        }
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if ((*((unsigned char *)this + 112) - 48) >= 0xAu)
        {
          unsigned int v11 = *((unsigned __int8 *)this + 112) - 65;
          if (v11 > 0x25 || ((1 << v11) & 0x3F0000003FLL) == 0) {
            goto LABEL_45;
          }
        }
        if ((AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this),
              (*((unsigned char *)this + 112) - 48) >= 0xAu)
          && ((unsigned int v12 = *((unsigned __int8 *)this + 112) - 65, v12 > 0x25) || ((1 << v12) & 0x3F0000003FLL) == 0)
          || (AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this),
              (*((unsigned char *)this + 112) - 48) >= 0xAu)
          && ((unsigned int v13 = *((unsigned __int8 *)this + 112) - 65, v13 > 0x25) || ((1 << v13) & 0x3F0000003FLL) == 0)
          || (AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this),
              (*((unsigned char *)this + 112) - 48) >= 0xAu)
          && ((unsigned int v14 = *((unsigned __int8 *)this + 112) - 65, v14 > 0x25) || ((1 << v14) & 0x3F0000003FLL) == 0))
        {
LABEL_45:
          std::string::basic_string[abi:ne180100]<0>(__p, "Expected eight hex digits up to 10ffff for \\U escape sequence");
          (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
          goto LABEL_46;
        }
        goto LABEL_15;
      }
      if (v7 == 88)
      {
LABEL_23:
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if ((*((unsigned char *)this + 112) - 48) >= 0xAu)
        {
          unsigned int v9 = *((unsigned __int8 *)this + 112) - 65;
          if (v9 > 0x25 || ((1 << v9) & 0x3F0000003FLL) == 0)
          {
            std::string::basic_string[abi:ne180100]<0>(__p, "Expected hex digits for escape sequence.");
            (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
            goto LABEL_46;
          }
        }
LABEL_15:
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      }
      else
      {
LABEL_20:
        std::string::basic_string[abi:ne180100]<0>(__p, "Invalid escape sequence in string literal.");
        (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
LABEL_46:
        if (v20 < 0) {
          operator delete(__p[0]);
        }
      }
    }
    if (v4 == 10 || v4 == 0) {
      break;
    }
    int v6 = *((unsigned __int8 *)this + 112);
    AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    if (v6 == a2) {
      return;
    }
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "String literals cannot cross line boundaries.");
  (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
  if (v20 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1891A078C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::io::Tokenizer::ConsumeNumber(AddrObjGoogle::protobuf::io::Tokenizer *this, int a2, int a3)
{
  if (a2)
  {
    int v4 = *((unsigned __int8 *)this + 112);
    if ((v4 | 0x20) == 0x78)
    {
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      if ((*((unsigned char *)this + 112) - 48) > 9u
        && ((v5 = *((unsigned __int8 *)this + 112) - 65, BOOL v18 = v5 > 0x25, v6 = (1 << v5) & 0x3F0000003FLL, !v18)
          ? (BOOL v7 = v6 == 0)
          : (BOOL v7 = 1),
            v7))
      {
        std::string::basic_string[abi:ne180100]<0>(__p, "\"0x\" must be followed by hex digits.");
        (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
        if (v21 < 0) {
          operator delete(__p[0]);
        }
      }
      else
      {
        do
        {
          do
            AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          while ((*((unsigned char *)this + 112) - 48) < 0xAu);
          unsigned int v8 = *((unsigned __int8 *)this + 112) - 65;
          BOOL v18 = v8 > 0x25;
          uint64_t v9 = (1 << v8) & 0x3F0000003FLL;
        }
        while (!v18 && v9 != 0);
      }
LABEL_14:
      int v11 = 0;
      goto LABEL_49;
    }
    if ((v4 - 48) <= 9)
    {
      if ((v4 & 0xF8) != 0x30) {
        goto LABEL_21;
      }
      do
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v12 = *((unsigned __int8 *)this + 112);
      }
      while ((v12 & 0xF8) == 0x30);
      if ((v12 - 48) <= 9)
      {
LABEL_21:
        std::string::basic_string[abi:ne180100]<0>(__p, "Numbers starting with leading zero must be in octal.");
        (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
        if (v21 < 0) {
          operator delete(__p[0]);
        }
        if (*((unsigned __int8 *)this + 112) - 48 <= 9)
        {
          do
          {
            AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
            int v11 = 0;
          }
          while (*((unsigned __int8 *)this + 112) - 48 < 0xA);
          goto LABEL_49;
        }
      }
      goto LABEL_14;
    }
  }
  int v13 = *((unsigned __int8 *)this + 112);
  unsigned int v14 = v13 - 48;
  if (a3)
  {
    if (v14 <= 9)
    {
      do
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v13 = *((unsigned __int8 *)this + 112);
      }
      while ((v13 - 48) < 0xA);
    }
  }
  else
  {
    if (v14 <= 9)
    {
      do
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v13 = *((unsigned __int8 *)this + 112);
      }
      while ((v13 - 48) < 0xA);
    }
    if (v13 != 46)
    {
      int v11 = 0;
      goto LABEL_35;
    }
    AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    int v13 = *((unsigned __int8 *)this + 112);
    if ((v13 - 48) <= 9)
    {
      do
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v13 = *((unsigned __int8 *)this + 112);
      }
      while ((v13 - 48) < 0xA);
    }
  }
  int v11 = 1;
LABEL_35:
  if ((v13 | 0x20) == 0x65)
  {
    AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    int v15 = *((unsigned __int8 *)this + 112);
    if (v15 == 45 || v15 == 43) {
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    }
    if (*((unsigned __int8 *)this + 112) - 48 > 9)
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "\"e\" must be followed by exponent.");
      (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
      if (v21 < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
      do
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      while (*((unsigned __int8 *)this + 112) - 48 < 0xA);
    }
    int v11 = 1;
  }
  if (*((unsigned char *)this + 164))
  {
    int v16 = *((unsigned __int8 *)this + 112);
    if (v16 == 70 || v16 == 102)
    {
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      int v11 = 1;
    }
  }
LABEL_49:
  int v17 = *((unsigned __int8 *)this + 112);
  BOOL v18 = v17 != 95 && (v17 & 0xFFFFFFDF) - 65 > 0x19;
  if (v18)
  {
    if (v17 != 46) {
      goto LABEL_61;
    }
    if (v11) {
      std::string::basic_string[abi:ne180100]<0>(__p, "Already saw decimal point or exponent; can't have another one.");
    }
    else {
      std::string::basic_string[abi:ne180100]<0>(__p, "Hex and octal numbers must be integers.");
    }
    (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "Need space between number and identifier.");
    (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
  }
  if (v21 < 0) {
    operator delete(__p[0]);
  }
LABEL_61:
  if (v11) {
    return 4;
  }
  else {
    return 3;
  }
}

void sub_1891A0BF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::io::Tokenizer::ConsumeLineComment(uint64_t this, uint64_t a2)
{
  uint64_t v3 = this;
  if (a2)
  {
    *(void *)(this + 152) = a2;
    *(_DWORD *)(this + 160) = *(_DWORD *)(this + 132);
  }
  while (*(unsigned char *)(v3 + 112))
  {
    if (*(unsigned char *)(v3 + 112) == 10)
    {
      this = AddrObjGoogle::protobuf::io::Tokenizer::NextChar(v3);
      break;
    }
    this = AddrObjGoogle::protobuf::io::Tokenizer::NextChar(v3);
  }
  if (a2)
  {
    int v4 = *(_DWORD *)(v3 + 132);
    uint64_t v5 = *(int *)(v3 + 160);
    if (v4 != v5) {
      this = (uint64_t)std::string::append(*(std::string **)(v3 + 152), (const std::string::value_type *)(*(void *)(v3 + 120) + v5), v4 - (int)v5);
    }
    *(void *)(v3 + 152) = 0;
    *(_DWORD *)(v3 + 160) = -1;
  }
  return this;
}

void AddrObjGoogle::protobuf::io::Tokenizer::ConsumeBlockComment(AddrObjGoogle::protobuf::io::Tokenizer *this, uint64_t a2)
{
  uint64_t v4 = *((unsigned int *)this + 35);
  uint64_t v5 = (*((_DWORD *)this + 36) - 2);
  if (a2)
  {
    *((void *)this + 19) = a2;
    *((_DWORD *)this + 40) = *((_DWORD *)this + 33);
  }
  while (1)
  {
    while (1)
    {
      unsigned int v6 = *((unsigned __int8 *)this + 112);
      if (v6 > 0x29) {
        break;
      }
      if (*((unsigned char *)this + 112))
      {
        if (v6 != 10) {
          goto LABEL_22;
        }
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if (a2)
        {
          int v7 = *((_DWORD *)this + 33);
          uint64_t v8 = *((int *)this + 40);
          if (v7 != v8) {
            std::string::append(*((std::string **)this + 19), (const std::string::value_type *)(*((void *)this + 15) + v8), v7 - (int)v8);
          }
          *((void *)this + 19) = 0;
          *((_DWORD *)this + 40) = -1;
        }
        while (1)
        {
          uint64_t v9 = *((unsigned __int8 *)this + 112);
          if (v9 > 0x2A) {
            break;
          }
          if (((1 << v9) & 0x100003A00) == 0)
          {
            if (v9 == 42)
            {
              AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
              if (*((unsigned char *)this + 112) == 47)
              {
                AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
                return;
              }
            }
            break;
          }
          AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        }
        if (a2)
        {
          *((void *)this + 19) = a2;
          *((_DWORD *)this + 40) = *((_DWORD *)this + 33);
        }
      }
      else
      {
LABEL_24:
        if (!v6)
        {
          std::string::basic_string[abi:ne180100]<0>(__p, "End-of-file inside block comment.");
          (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
          if (v17 < 0) {
            operator delete(__p[0]);
          }
          uint64_t v10 = *((void *)this + 13);
          std::string::basic_string[abi:ne180100]<0>(__p, "  Comment started here.");
          (*(void (**)(uint64_t, uint64_t, uint64_t, void **))(*(void *)v10 + 16))(v10, v4, v5, __p);
          if (v17 < 0) {
            operator delete(__p[0]);
          }
          if (a2)
          {
            int v11 = *((_DWORD *)this + 33);
            uint64_t v12 = *((int *)this + 40);
            if (v11 != v12) {
              std::string::append(*((std::string **)this + 19), (const std::string::value_type *)(*((void *)this + 15) + v12), v11 - (int)v12);
            }
            *((void *)this + 19) = 0;
            *((_DWORD *)this + 40) = -1;
          }
          return;
        }
      }
    }
    if (v6 == 42) {
      break;
    }
    if (v6 == 47)
    {
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      unsigned int v6 = *((unsigned __int8 *)this + 112);
      if (v6 != 42) {
        goto LABEL_24;
      }
      std::string::basic_string[abi:ne180100]<0>(__p, "\"/*\" inside block comment.  Block comments cannot be nested.");
      (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
      if (v17 < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
LABEL_22:
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    }
  }
  AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
  unsigned int v6 = *((unsigned __int8 *)this + 112);
  if (v6 != 47) {
    goto LABEL_24;
  }
  AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
  if (a2)
  {
    int v13 = *((_DWORD *)this + 33);
    uint64_t v14 = *((int *)this + 40);
    if (v13 != v14) {
      std::string::append(*((std::string **)this + 19), (const std::string::value_type *)(*((void *)this + 15) + v14), v13 - (int)v14);
    }
    *((void *)this + 19) = 0;
    *((_DWORD *)this + 40) = -1;
    if (*(char *)(a2 + 23) < 0) {
      uint64_t v15 = *(void *)(a2 + 8);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(a2 + 23);
    }
    std::string::erase((std::string *)a2, v15 - 2, 0xFFFFFFFFFFFFFFFFLL);
  }
}

void sub_1891A0FB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::io::Tokenizer::TryConsumeCommentStart(AddrObjGoogle::protobuf::io::Tokenizer *this)
{
  int v2 = *((_DWORD *)this + 42);
  if (v2 == 1)
  {
    if (*((unsigned char *)this + 112) == 35)
    {
LABEL_8:
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      return 0;
    }
    return 3;
  }
  if (v2 || *((unsigned char *)this + 112) != 47) {
    return 3;
  }
  AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
  int v3 = *((unsigned __int8 *)this + 112);
  if (v3 != 42)
  {
    if (v3 != 47)
    {
      *(_DWORD *)this = 6;
      MEMORY[0x18C11F1C0]((char *)this + 8, "/");
      int v4 = *((_DWORD *)this + 36);
      *((_DWORD *)this + 8) = *((_DWORD *)this + 35);
      *((_DWORD *)this + 9) = v4 - 1;
      *((_DWORD *)this + 10) = v4;
      return 2;
    }
    goto LABEL_8;
  }
  AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
  return 1;
}

uint64_t AddrObjGoogle::protobuf::io::Tokenizer::Next(AddrObjGoogle::protobuf::io::Tokenizer *this)
{
  *((_DWORD *)this + 12) = *(_DWORD *)this;
  std::string::operator=((std::string *)((char *)this + 56), (const std::string *)((char *)this + 8));
  *((void *)this + 10) = *((void *)this + 4);
  *((_DWORD *)this + 22) = *((_DWORD *)this + 10);
  if (*((unsigned char *)this + 136)) {
    goto LABEL_2;
  }
  while (1)
  {
LABEL_4:
    while (1)
    {
      int v2 = *((unsigned __int8 *)this + 112);
      if ((v2 - 9) >= 5 && v2 != 32) {
        break;
      }
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    }
    int v3 = AddrObjGoogle::protobuf::io::Tokenizer::TryConsumeCommentStart(this);
    if (!v3)
    {
      AddrObjGoogle::protobuf::io::Tokenizer::ConsumeLineComment((uint64_t)this, 0);
      goto LABEL_20;
    }
    if (v3 != 1) {
      break;
    }
    AddrObjGoogle::protobuf::io::Tokenizer::ConsumeBlockComment(this, 0);
LABEL_20:
    if (*((unsigned char *)this + 136)) {
      goto LABEL_2;
    }
  }
  if (v3 == 2) {
    return 1;
  }
  if (*((unsigned char *)this + 136)) {
    goto LABEL_2;
  }
  unsigned int v4 = *((unsigned __int8 *)this + 112);
  if (v4 > 0x1F)
  {
    *(_DWORD *)this = 0;
    if (*((char *)this + 31) < 0)
    {
      **((unsigned char **)this + 1) = 0;
      *((void *)this + 2) = 0;
      unsigned int v4 = *((unsigned __int8 *)this + 112);
    }
    else
    {
      *((unsigned char *)this + 8) = 0;
      *((unsigned char *)this + 31) = 0;
    }
    *((void *)this + 4) = *(void *)((char *)this + 140);
    *((void *)this + 19) = (char *)this + 8;
    *((_DWORD *)this + 40) = *((_DWORD *)this + 33);
    if (v4 == 95 || (v4 & 0xFFFFFFDF) - 65 <= 0x19)
    {
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      int v9 = *((unsigned __int8 *)this + 112);
      if (v9 == 95 || (v9 - 48) < 0xA || (v9 & 0xFFFFFFDF) - 65 <= 0x19)
      {
        do
        {
          AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          int v10 = *((unsigned __int8 *)this + 112);
        }
        while (v10 == 95 || (v10 - 48) < 0xA || (v10 & 0xFFFFFFDF) - 65 < 0x1A);
      }
      int v13 = 2;
      goto LABEL_65;
    }
    if (v4 == 46)
    {
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      if (*((unsigned __int8 *)this + 112) - 48 <= 9)
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if (*((_DWORD *)this + 12) == 2
          && *((_DWORD *)this + 8) == *((_DWORD *)this + 20)
          && *((_DWORD *)this + 9) == *((_DWORD *)this + 22))
        {
          uint64_t v14 = *((void *)this + 13);
          uint64_t v15 = *((unsigned int *)this + 35);
          uint64_t v16 = (*((_DWORD *)this + 36) - 2);
          std::string::basic_string[abi:ne180100]<0>(__p, "Need space between identifier and decimal point.");
          (*(void (**)(uint64_t, uint64_t, uint64_t, void **))(*(void *)v14 + 16))(v14, v15, v16, __p);
          if (v23 < 0) {
            operator delete(__p[0]);
          }
        }
        int v7 = this;
        int v8 = 0;
        int v17 = 1;
        goto LABEL_57;
      }
    }
    else
    {
      if (v4 == 48)
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v7 = this;
        int v8 = 1;
LABEL_56:
        int v17 = 0;
LABEL_57:
        int v13 = AddrObjGoogle::protobuf::io::Tokenizer::ConsumeNumber(v7, v8, v17);
LABEL_65:
        *(_DWORD *)this = v13;
        int v20 = *((_DWORD *)this + 33);
        uint64_t v21 = *((int *)this + 40);
        if (v20 != v21) {
          std::string::append(*((std::string **)this + 19), (const std::string::value_type *)(*((void *)this + 15) + v21), v20 - (int)v21);
        }
        *((void *)this + 19) = 0;
        *((_DWORD *)this + 40) = -1;
        int v6 = *((_DWORD *)this + 36);
        uint64_t result = 1;
        goto LABEL_24;
      }
      if (v4 - 48 <= 9)
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v7 = this;
        int v8 = 0;
        goto LABEL_56;
      }
      if (v4 == 39)
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        BOOL v18 = this;
        unsigned __int8 v19 = 39;
        goto LABEL_62;
      }
      if (v4 == 34)
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        BOOL v18 = this;
        unsigned __int8 v19 = 34;
LABEL_62:
        AddrObjGoogle::protobuf::io::Tokenizer::ConsumeString(v18, v19);
        int v13 = 5;
        goto LABEL_65;
      }
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    }
    int v13 = 6;
    goto LABEL_65;
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "Invalid control characters encountered in text.");
  (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
  if (v23 < 0) {
    operator delete(__p[0]);
  }
  while (1)
  {
    do
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    while (*((unsigned __int8 *)this + 112) - 1 < 0x1F);
    if (*((unsigned char *)this + 136)) {
      break;
    }
    if (*((unsigned char *)this + 112)) {
      goto LABEL_4;
    }
  }
LABEL_2:
  *(_DWORD *)this = 1;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  uint64_t result = 0;
  int v6 = *((_DWORD *)this + 36);
  *((_DWORD *)this + 8) = *((_DWORD *)this + 35);
  *((_DWORD *)this + 9) = v6;
LABEL_24:
  *((_DWORD *)this + 10) = v6;
  return result;
}

void sub_1891A1478(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::io::Tokenizer::ParseInteger(unsigned __int8 *a1, unint64_t a2, unint64_t *a3)
{
  int v3 = *(unsigned __int8 **)a1;
  if ((a1[23] & 0x80u) == 0) {
    int v3 = a1;
  }
  int v4 = *v3;
  if (v4 == 48)
  {
    if ((v3[1] | 0x20) == 0x78)
    {
      int v5 = v3[2];
      v3 += 2;
      LOBYTE(v4) = v5;
      unsigned int v6 = 16;
      if (!v5)
      {
LABEL_8:
        unint64_t v7 = 0;
LABEL_25:
        *a3 = v7;
        return 1;
      }
    }
    else
    {
      LOBYTE(v4) = 48;
      unsigned int v6 = 8;
    }
  }
  else
  {
    unsigned int v6 = 10;
    if (!*v3) {
      goto LABEL_8;
    }
  }
  unint64_t v7 = 0;
  unint64_t v8 = v6;
  int v9 = v3 + 1;
  while (1)
  {
    int v10 = (char)v4;
    unsigned int v11 = (v4 - 48);
    int v12 = (v10 - 65) >= 0x1A ? -1 : v10 - 55;
    int v13 = (v10 - 97) <= 0x19 ? v10 - 87 : v12;
    int v14 = v10 - 48;
    signed int v15 = v11 <= 9 ? v14 : v13;
    if (v15 >= v8)
    {
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/tokenizer.cc", 859);
      AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v18, " Tokenizer::ParseInteger() passed text that could not have been tokenized as an integer: ");
      AddrObjGoogle::protobuf::CEscape();
    }
    if (a2 < v15 || v7 > (a2 - v15) / v8) {
      return 0;
    }
    unint64_t v7 = v15 + v7 * v8;
    int v16 = *v9++;
    LOBYTE(v4) = v16;
    if (!v16) {
      goto LABEL_25;
    }
  }
}

void sub_1891A1630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage(&a16);
  _Unwind_Resume(a1);
}

double AddrObjGoogle::protobuf::io::Tokenizer::ParseFloat(uint64_t a1, uint64_t a2, char **a3)
{
  if (*(char *)(a1 + 23) >= 0) {
    int v4 = (AddrObjGoogle::protobuf *)a1;
  }
  else {
    int v4 = *(AddrObjGoogle::protobuf **)a1;
  }
  *(void *)int v13 = 0;
  double v5 = AddrObjGoogle::protobuf::NoLocaleStrtod(v4, v13, a3);
  unsigned int v6 = *(unsigned __int8 **)v13;
  int v7 = **(unsigned char **)v13;
  if ((v7 | 0x20) == 0x65)
  {
    unint64_t v8 = (unsigned __int8 *)++*(void *)v13;
    int v7 = v6[1];
    if (v7 == 45 || v7 == 43)
    {
      unint64_t v8 = v6 + 2;
      *(void *)int v13 = v6 + 2;
      int v7 = v6[2];
    }
    unsigned int v6 = v8;
  }
  if ((v7 | 0x20) == 0x66) {
    *(void *)int v13 = ++v6;
  }
  uint64_t v9 = v6 - (unsigned __int8 *)v4;
  uint64_t v10 = *(unsigned __int8 *)(a1 + 23);
  if ((v10 & 0x80u) != 0) {
    uint64_t v10 = *(void *)(a1 + 8);
  }
  if (v9 != v10 || *(unsigned char *)v4 == 45)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/tokenizer.cc", 892);
    AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v12, " Tokenizer::ParseFloat() passed text that could not have been tokenized as a float: ");
    AddrObjGoogle::protobuf::CEscape();
  }
  return v5;
}

void sub_1891A17A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage(&a17);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::io::Tokenizer::ParseStringAppend(unsigned __int8 *a1, std::string *this)
{
  uint64_t v3 = a1[23];
  signed __int8 v4 = v3;
  if ((v3 & 0x80u) != 0) {
    uint64_t v3 = *((void *)a1 + 1);
  }
  if (!v3)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)&v50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/tokenizer.cc", 1017);
    AddrObjGoogle::protobuf::internal::LogMessage::operator<<(&v50, " Tokenizer::ParseStringAppend() passed text that could not have been tokenized as a string: ");
    AddrObjGoogle::protobuf::CEscape();
  }
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::size_type size = this->__r_.__value_.__l.__size_;
    std::string::size_type v7 = (this->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
  }
  else
  {
    std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    std::string::size_type v7 = 22;
  }
  if (size + v3 > v7)
  {
    std::string::reserve(this, size + v3);
    signed __int8 v4 = a1[23];
  }
  if (v4 >= 0) {
    unint64_t v8 = (std::string::value_type *)a1;
  }
  else {
    unint64_t v8 = *(std::string::value_type **)a1;
  }
  while (1)
  {
    uint64_t v9 = v8;
    unsigned int v11 = v8 + 1;
    int v10 = v8[1];
    if (v10 != 92) {
      break;
    }
    v8 += 2;
    int v12 = v9[2];
    if (v9[2])
    {
      if (((char)v12 & 0xFFFFFFF8) == 0x30)
      {
        std::string::value_type v13 = v12 - 48;
        std::string::value_type v15 = v9[3];
        int v14 = v9 + 3;
        std::string::value_type v16 = v15 + 8 * (v12 - 48) - 48;
        BOOL v17 = (v15 & 0xF8) == 48;
        if ((v15 & 0xF8) == 0x30) {
          BOOL v18 = v14;
        }
        else {
          BOOL v18 = v8;
        }
        if (v17) {
          std::string::value_type v13 = v16;
        }
        std::string::value_type v19 = v18[1];
        int v20 = v19 & 0xF8;
        std::string::value_type v21 = v19 + 8 * v13 - 48;
        if (v20 == 48) {
          unint64_t v8 = v18 + 1;
        }
        else {
          unint64_t v8 = v18;
        }
        if (v20 == 48) {
          std::string::value_type v13 = v21;
        }
        std::string::value_type v22 = v13;
        goto LABEL_62;
      }
      if (v12 == 85 || v12 == 117)
      {
        LODWORD(__p) = 0;
        int v30 = v9[2];
        if (v30 == 117) {
          int v31 = 4;
        }
        else {
          int v31 = 8 * (v30 == 85);
        }
        if (!sub_1891A1D7C(v9 + 3, v31, (unsigned int *)&__p))
        {
          std::string::value_type v22 = *v8;
          goto LABEL_62;
        }
        uint64_t v38 = v31 | 3u;
        uint64_t v39 = &v9[v38];
        unint64_t v40 = __p;
        if (__p >> 10 == 54)
        {
          if (*v39 == 92 && v39[1] == 117)
          {
            LODWORD(v50.__r_.__value_.__l.__data_) = 0;
            if (sub_1891A1D7C(v39 + 2, 4, (unsigned int *)&v50))
            {
              if (LODWORD(v50.__r_.__value_.__l.__data_) >> 10 == 55)
              {
                LODWORD(v40) = ((LODWORD(v50.__r_.__value_.__l.__data_) - 56320) | ((v40 << 10) - 56623104))
                             + 0x10000;
                LODWORD(__p) = v40;
                v38 += 6;
              }
            }
          }
          uint64_t v39 = &v9[v38];
        }
        else
        {
          if (__p < 0x80)
          {
            std::string::size_type v41 = 1;
            goto LABEL_92;
          }
          if (__p <= 0x7FF)
          {
            unint64_t v40 = (4 * __p) & 0x1F00 | __p & 0x3F | 0xC080u;
            std::string::size_type v41 = 2;
            goto LABEL_92;
          }
        }
        if (!WORD1(v40))
        {
          unint64_t v40 = (4 * v40) & 0x3F00 | v40 & 0x3F | ((unsigned __int16)((unsigned __int16)v40 >> 12) << 16) | 0xE08080;
          std::string::size_type v41 = 3;
LABEL_92:
          LODWORD(v50.__r_.__value_.__l.__data_) = AddrObjGoogle::protobuf::ghtonl((AddrObjGoogle::protobuf *)v40);
          std::string::append(this, (const std::string::value_type *)v50.__r_.__value_.__r.__words - v41 + 4, v41);
          goto LABEL_93;
        }
        if (!(v40 >> 21))
        {
          unint64_t v40 = (16 * v40) & 0x3F0000 | v40 & 0x3F | (((v40 >> 18) & 7) << 24) | (((v40 >> 6) & 0x3F) << 8) | 0xF0808080;
          std::string::size_type v41 = 4;
          goto LABEL_92;
        }
        AddrObjGoogle::protobuf::StringAppendF(this, "\\U%08x", v32, v33, v34, v35, v36, v37, v40);
LABEL_93:
        unint64_t v8 = v39 - 1;
      }
      else if (v12 == 120)
      {
        int v26 = v9[3];
        uint64_t v25 = v9 + 3;
        int v24 = v26;
        unsigned __int8 v27 = v26 - 48;
        unsigned __int8 v28 = v26 - 97;
        if ((v26 - 48) < 0xA || v28 < 6u)
        {
          if (v27 <= 9u)
          {
            std::string::value_type v29 = v24 - 48;
            goto LABEL_73;
          }
        }
        else if ((v24 - 65) > 5)
        {
          std::string::value_type v29 = 0;
          uint64_t v25 = v8;
          goto LABEL_73;
        }
        if ((v24 - 65) >= 0x1A) {
          char v42 = -1;
        }
        else {
          char v42 = v24 - 55;
        }
        std::string::value_type v43 = v24 - 87;
        if (v28 <= 0x19u) {
          std::string::value_type v29 = v43;
        }
        else {
          std::string::value_type v29 = v42;
        }
LABEL_73:
        int v44 = v25[1];
        if ((v44 - 48) >= 0xA && (v44 - 97) >= 6u)
        {
          if ((v44 - 65) > 5) {
            goto LABEL_85;
          }
          char v45 = 16 * v29;
LABEL_79:
          unsigned int v47 = (v44 - 97);
          if ((v44 - 65) >= 0x1A) {
            char v48 = -1;
          }
          else {
            char v48 = v44 - 55;
          }
          char v46 = v44 - 87;
          if (v47 > 0x19) {
            char v46 = v48;
          }
          goto LABEL_84;
        }
        char v45 = 16 * v29;
        if ((v44 - 48) > 9u) {
          goto LABEL_79;
        }
        char v46 = v44 - 48;
LABEL_84:
        std::string::value_type v29 = v46 + v45;
        ++v25;
LABEL_85:
        std::string::push_back(this, v29);
        unint64_t v8 = v25;
      }
      else
      {
        if ((char)v12 > 97)
        {
          switch((char)v12)
          {
            case 'n':
              std::string::value_type v22 = 10;
              break;
            case 'o':
            case 'p':
            case 'q':
            case 's':
            case 'u':
              goto LABEL_100;
            case 'r':
              std::string::value_type v22 = 13;
              break;
            case 't':
              std::string::value_type v22 = 9;
              break;
            case 'v':
              std::string::value_type v22 = 11;
              break;
            default:
              if ((char)v12 == 102)
              {
                std::string::value_type v22 = 12;
              }
              else
              {
                if ((char)v12 != 98) {
                  goto LABEL_100;
                }
                std::string::value_type v22 = 8;
              }
              break;
          }
        }
        else if ((char)v12 <= 62)
        {
          if ((char)v12 != 34)
          {
            if ((char)v12 == 39)
            {
              std::string::value_type v22 = 39;
              goto LABEL_62;
            }
            goto LABEL_100;
          }
          std::string::value_type v22 = 34;
        }
        else
        {
          if ((char)v12 == 63) {
            goto LABEL_100;
          }
          if ((char)v12 != 92)
          {
            if ((char)v12 == 97)
            {
              std::string::value_type v22 = 7;
              goto LABEL_62;
            }
LABEL_100:
            std::string::value_type v22 = 63;
            goto LABEL_62;
          }
          std::string::value_type v22 = 92;
        }
LABEL_62:
        std::string::push_back(this, v22);
      }
    }
    else
    {
LABEL_29:
      if ((a1[23] & 0x80u) == 0) {
        char v23 = a1;
      }
      else {
        char v23 = *(unsigned __int8 **)a1;
      }
      if (v10 != *v23 || (unint64_t v8 = v11, v9[2]))
      {
        std::string::push_back(this, v10);
        unint64_t v8 = v11;
      }
    }
  }
  if (v8[1]) {
    goto LABEL_29;
  }
}

void sub_1891A1D24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage(&a18);
  _Unwind_Resume(a1);
}

uint64_t sub_1891A1D7C(unsigned char *a1, int a2, unsigned int *a3)
{
  *a3 = 0;
  if (!a2) {
    return 0;
  }
  if (a2 < 1) {
    return 1;
  }
  unsigned int v3 = 0;
  signed __int8 v4 = &a1[a2];
  do
  {
    int v5 = (char)*a1;
    BOOL v6 = *a1 != 0;
    if (!*a1) {
      break;
    }
    int v7 = 16 * v3;
    unsigned int v8 = v5 - 48;
    unsigned int v9 = v5 - 97;
    if ((v5 - 65) >= 0x1A) {
      int v10 = -1;
    }
    else {
      int v10 = v5 - 55;
    }
    unsigned int v11 = v5 - 87;
    if (v9 > 0x19) {
      unsigned int v11 = v10;
    }
    if (v8 <= 9) {
      unsigned int v11 = v8;
    }
    unsigned int v3 = v11 + v7;
    *a3 = v3;
    ++a1;
  }
  while (a1 < v4);
  return v6;
}

void addr_obj::VenueInfo::VenueInfo(std::vector<std::string> *this, const addr_obj::VenueInfoProto *a2)
{
}

void sub_1891A2AD8()
{
}

void sub_1891A2AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void **a54)
{
  std::ostringstream::~ostringstream((uint64_t)&a54);
  std::unique_ptr<addr_obj::venue::Formatters>::reset[abi:ne180100](v54, 0);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a54);
  _Unwind_Resume(a1);
}

void sub_1891A2AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void **a54)
{
  std::unique_ptr<addr_obj::venue::Formatters>::reset[abi:ne180100](v54, 0);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a54);
  _Unwind_Resume(a1);
}

void addr_obj::VenueInfo::toProto(const std::string **this, addr_obj::VenueInfoProto *a2)
{
  signed __int8 v4 = (AddrObjGoogle::protobuf::internal::StringTypeHandlerBase *)(*(uint64_t (**)(addr_obj::VenueInfoProto *))(*(void *)a2 + 32))(a2);
  for (uint64_t i = *this; i != this[1]; ++i)
  {
    int v6 = *((_DWORD *)a2 + 7);
    uint64_t v7 = *((int *)a2 + 6);
    if ((int)v7 >= v6)
    {
      if (v6 == *((_DWORD *)a2 + 8))
      {
        signed __int8 v4 = (AddrObjGoogle::protobuf::internal::StringTypeHandlerBase *)AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)a2 + 16, v6 + 1);
        int v6 = *((_DWORD *)a2 + 7);
      }
      *((_DWORD *)a2 + 7) = v6 + 1;
      AddrObjGoogle::protobuf::internal::StringTypeHandlerBase::New(v4);
    }
    uint64_t v8 = *((void *)a2 + 2);
    *((_DWORD *)a2 + 6) = v7 + 1;
    signed __int8 v4 = (AddrObjGoogle::protobuf::internal::StringTypeHandlerBase *)std::string::operator=(*(std::string **)(v8 + 8 * v7), i);
  }
  unsigned int v9 = this[3];
  int v10 = (int ***)v9->__r_.__value_.__r.__words[0];
  if (v9->__r_.__value_.__r.__words[0] != v9->__r_.__value_.__l.__size_)
  {
    do
    {
      int v11 = *((_DWORD *)a2 + 13);
      uint64_t v12 = *((int *)a2 + 12);
      if ((int)v12 >= v11)
      {
        if (v11 == *((_DWORD *)a2 + 14))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)a2 + 40, v11 + 1);
          int v11 = *((_DWORD *)a2 + 13);
        }
        *((_DWORD *)a2 + 13) = v11 + 1;
        AddrObjGoogle::protobuf::internal::GenericTypeHandler<addr_obj::VenueFormatterProto>::New();
      }
      uint64_t v13 = *((void *)a2 + 5);
      *((_DWORD *)a2 + 12) = v12 + 1;
      addr_obj::venue::Formatter::toProto(v10, *(addr_obj::VenueFormatterProto **)(v13 + 8 * v12));
      v10 += 3;
    }
    while (v10 != (int ***)this[3]->__r_.__value_.__l.__size_);
  }
}

void addr_obj::VenueInfo::getLabel(uint64_t a1@<X0>, unsigned int a2@<W1>, std::string *a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1E91176A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1E91176A8))
  {
    std::string::basic_string[abi:ne180100]<0>(&v15, "ZZZ");
    std::string::basic_string[abi:ne180100]<0>(&v14, "qq");
    addr_obj::venue::VenueInfoFormatterParams::VenueInfoFormatterParams((uint64_t)__p, 0, (long long *)&v15, (long long *)&v14);
    addr_obj::venue::Formatters::Formatters((addr_obj::venue::Formatters *)qword_1E9117690, (const addr_obj::venue::VenueInfoFormatterParams *)__p);
    addr_obj::venue::VenueInfoFormatterParams::~VenueInfoFormatterParams((void **)&__p[0].__r_.__value_.__l.__data_);
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v14.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
    __cxa_guard_release(&qword_1E91176A8);
  }
  int v6 = (addr_obj::Debugging *)addr_obj::venue::Formatters::size(*(addr_obj::venue::Formatters **)(a1 + 24));
  if ((unint64_t)v6 <= a2)
  {
    int v6 = (addr_obj::Debugging *)addr_obj::venue::Formatters::operator[](qword_1E9117690, a2);
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v7 = (addr_obj::Logger *)(**(void **)(a1 + 24) + 24 * a2);
  }
  int v8 = addr_obj::Debugging::addChar(v6);
  if (!v8) {
    goto LABEL_13;
  }
  addr_obj::venue::Formatter::label(v7, (uint64_t *)a1, __p);
  std::string::size_type size = HIBYTE(__p[0].__r_.__value_.__r.__words[2]);
  if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __p[0].__r_.__value_.__l.__size_;
  }
  if (size)
  {
    addr_obj::venue::Formatter::label(v7, (uint64_t *)a1, &v14);
    int v10 = std::string::insert(&v14, 0, "[");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v15.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v15.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    uint64_t v12 = std::string::append(&v15, "]");
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    a3->__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v14.__r_.__value_.__l.__data_);
    }
  }
  else
  {
LABEL_13:
    addr_obj::venue::Formatter::label(v7, (uint64_t *)a1, a3);
    if (!v8) {
      return;
    }
  }
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
}

void sub_1891A2EC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  __cxa_guard_abort(&qword_1E91176A8);
  _Unwind_Resume(a1);
}

void addr_obj::venue::VenueInfoFormatterParams::~VenueInfoFormatterParams(void **this)
{
  if (*((char *)this + 55) < 0) {
    operator delete(this[4]);
  }
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
}

void addr_obj::VenueInfo::getShortAddress(addr_obj *a1@<X0>, uint64_t a2@<X1>, addr_obj *a3@<X2>, std::string *a4@<X8>)
{
  uint64_t v5 = *(unsigned __int8 *)(a2 + 23);
  if ((v5 & 0x80u) != 0) {
    uint64_t v5 = *(void *)(a2 + 8);
  }
  if (v5)
  {
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)a1 + 1) - *(void *)a1) >> 3) <= 1) {
      unsigned int v9 = addr_obj::emptyString(a1);
    }
    else {
      unsigned int v9 = (long long *)(*(void *)a1 + 24);
    }
    if (*((char *)v9 + 23) < 0) {
      uint64_t v12 = *((void *)v9 + 1);
    }
    else {
      uint64_t v12 = *((unsigned __int8 *)v9 + 23);
    }
    long long v13 = *(long long **)a1;
    std::string v14 = (long long *)*((void *)a1 + 1);
    if (v12)
    {
      if (0xAAAAAAAAAAAAAAABLL * (((char *)v14 - (char *)v13) >> 3) > 1)
      {
        long long v13 = (long long *)((char *)v13 + 24);
LABEL_17:
        if (*((char *)v13 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(&v23, *(const std::string::value_type **)v13, *((void *)v13 + 1));
        }
        else
        {
          long long v15 = *v13;
          v23.__r_.__value_.__r.__words[2] = *((void *)v13 + 2);
          *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v15;
        }
        std::string::size_type size = HIBYTE(v23.__r_.__value_.__r.__words[2]);
        if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type size = v23.__r_.__value_.__l.__size_;
        }
        if (size)
        {
          std::string::basic_string[abi:ne180100]<0>(__p, "");
          addr_obj::Formatting::buildLegacyShortAddress(a3, (uint64_t)&v23, a2, (uint64_t)__p, a4);
          if (v22 < 0) {
            operator delete(__p[0]);
          }
        }
        else
        {
          BOOL v17 = addr_obj::emptyString((addr_obj *)v13);
          if (*((char *)v17 + 23) < 0)
          {
            std::string::__init_copy_ctor_external(a4, *(const std::string::value_type **)v17, *((void *)v17 + 1));
          }
          else
          {
            long long v18 = *v17;
            a4->__r_.__value_.__r.__words[2] = *((void *)v17 + 2);
            *(_OWORD *)&a4->__r_.__value_.__l.__data_ = v18;
          }
        }
        if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v23.__r_.__value_.__l.__data_);
        }
        return;
      }
    }
    else if (v14 != v13)
    {
      goto LABEL_17;
    }
    long long v13 = addr_obj::emptyString((addr_obj *)v13);
    goto LABEL_17;
  }
  int v10 = addr_obj::emptyString(a1);
  if (*((char *)v10 + 23) < 0)
  {
    std::string::value_type v19 = *(const std::string::value_type **)v10;
    std::string::size_type v20 = *((void *)v10 + 1);
    std::string::__init_copy_ctor_external(a4, v19, v20);
  }
  else
  {
    long long v11 = *v10;
    a4->__r_.__value_.__r.__words[2] = *((void *)v10 + 2);
    *(_OWORD *)&a4->__r_.__value_.__l.__data_ = v11;
  }
}

void sub_1891A3180(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

long long *addr_obj::VenueInfo::getLevel(addr_obj::VenueInfo *this)
{
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)this + 1) - *(void *)this) >> 3) <= 3) {
    return addr_obj::emptyString(this);
  }
  else {
    return (long long *)(*(void *)this + 72);
  }
}

uint64_t addr_obj::VenueInfo::toDebugJsonString@<X0>(uint64_t **this@<X0>, addr_obj::Json *a2@<X8>)
{
  addr_obj::Json::Json((addr_obj::Json *)v19);
  std::string::basic_string[abi:ne180100]<0>(v16, "getLabel(venue::LabelContext::COMPLETE)");
  addr_obj::VenueInfo::getLabel((uint64_t)this, 2u, &__p);
  addr_obj::Json::append(v19, (uint64_t *)v16, (uint64_t *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v17 < 0) {
    operator delete(v16[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(v16, "getLabel(venue::LabelContext::COMPLETE_PREFER_LONG_NAME)");
  addr_obj::VenueInfo::getLabel((uint64_t)this, 3u, &__p);
  addr_obj::Json::append(v19, (uint64_t *)v16, (uint64_t *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v17 < 0) {
    operator delete(v16[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(v16, "getLabel(venue::LabelContext::EXTERIOR)");
  addr_obj::VenueInfo::getLabel((uint64_t)this, 0, &__p);
  addr_obj::Json::append(v19, (uint64_t *)v16, (uint64_t *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v17 < 0) {
    operator delete(v16[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(v16, "getLabel(venue::LabelContext::INTERIOR)");
  addr_obj::VenueInfo::getLabel((uint64_t)this, 1u, &__p);
  addr_obj::Json::append(v19, (uint64_t *)v16, (uint64_t *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v17 < 0) {
    operator delete(v16[0]);
  }
  signed __int8 v4 = (addr_obj *)std::string::basic_string[abi:ne180100]<0>(v16, "getFullName");
  uint64_t v5 = *this;
  if (this[1] == *this) {
    uint64_t v5 = (uint64_t *)addr_obj::emptyString(v4);
  }
  addr_obj::Json::append(v19, (uint64_t *)v16, v5);
  if (v17 < 0) {
    operator delete(v16[0]);
  }
  int v6 = (addr_obj *)std::string::basic_string[abi:ne180100]<0>(v16, "getShortName");
  if (0xAAAAAAAAAAAAAAABLL * (this[1] - *this) <= 1) {
    uint64_t v7 = (uint64_t *)addr_obj::emptyString(v6);
  }
  else {
    uint64_t v7 = *this + 3;
  }
  addr_obj::Json::append(v19, (uint64_t *)v16, v7);
  if (v17 < 0) {
    operator delete(v16[0]);
  }
  int v8 = (addr_obj *)std::string::basic_string[abi:ne180100]<0>(v16, "getLevel");
  if (0xAAAAAAAAAAAAAAABLL * (this[1] - *this) <= 3) {
    unsigned int v9 = (uint64_t *)addr_obj::emptyString(v8);
  }
  else {
    unsigned int v9 = *this + 9;
  }
  addr_obj::Json::append(v19, (uint64_t *)v16, v9);
  if (v17 < 0) {
    operator delete(v16[0]);
  }
  int v10 = (addr_obj *)std::string::basic_string[abi:ne180100]<0>(v16, "getBuilding");
  if (0xAAAAAAAAAAAAAAABLL * (this[1] - *this) <= 2) {
    long long v11 = (uint64_t *)addr_obj::emptyString(v10);
  }
  else {
    long long v11 = *this + 6;
  }
  addr_obj::Json::append(v19, (uint64_t *)v16, v11);
  if (v17 < 0) {
    operator delete(v16[0]);
  }
  uint64_t v12 = (addr_obj *)std::string::basic_string[abi:ne180100]<0>(v16, "getShortLevel");
  if (0xAAAAAAAAAAAAAAABLL * (this[1] - *this) <= 4) {
    long long v13 = (uint64_t *)addr_obj::emptyString(v12);
  }
  else {
    long long v13 = *this + 12;
  }
  addr_obj::Json::append(v19, (uint64_t *)v16, v13);
  if (v17 < 0) {
    operator delete(v16[0]);
  }
  std::string v14 = addr_obj::Json::close((addr_obj::Json *)v19);
  addr_obj::Json::Json(a2, v14);
  v19[0] = *MEMORY[0x1E4FBA418];
  *(void *)((char *)v19 + *(void *)(v19[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v19[1] = MEMORY[0x1E4FBA470] + 16;
  if (v20 < 0) {
    operator delete((void *)v19[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x18C11F4F0](&v21);
}

void sub_1891A3614(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *__s, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a70 < 0) {
    operator delete(__p);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  if (a2 == 4)
  {
    long long v73 = (addr_obj::Logger *)__cxa_begin_catch(a1);
    if (addr_obj::Logger::isInitialized(v73))
    {
      std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&a29);
      uint64_t v74 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&a29, (uint64_t)"std::exception: ", 16);
      int v75 = (const char *)(*(uint64_t (**)(addr_obj::Logger *))(*(void *)v73 + 16))(v73);
      size_t v76 = strlen(v75);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v74, (uint64_t)v75, v76);
      std::string::basic_string[abi:ne180100]<0>(&__p, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
      std::string::basic_string[abi:ne180100]<0>(&a23, "toDebugJsonString");
      std::stringbuf::str();
      std::string::basic_string[abi:ne180100]<0>(&a11, "");
      addr_obj::Logger::log(16, (uint64_t)&__p, 325, (uint64_t)&a23, (uint64_t)&a17, (uint64_t)&a11);
      if (a16 < 0) {
        operator delete(a11);
      }
      if (a22 < 0) {
        operator delete(a17);
      }
      if (a28 < 0) {
        operator delete(a23);
      }
      if (a70 < 0) {
        operator delete(__p);
      }
      std::ostringstream::~ostringstream((uint64_t)&a29);
    }
    std::string::size_type v77 = addr_obj::Json::operator<<<char [3]>(&a71, "; ");
    v78 = addr_obj::Json::operator<<<char [52]>(v77, "Json addr_obj::VenueInfo::toDebugJsonString() const");
    long long v79 = addr_obj::Json::operator<<<char [19]>(v78, ": std::exception: ");
    a29 = (void *)(*(uint64_t (**)(addr_obj::Logger *))(*(void *)v73 + 16))(v73);
    addr_obj::Json::operator<<<char const*>(v79, (char **)&a29);
    __cxa_end_catch();
  }
  else if (a2 == 3)
  {
    __s = (char *)__cxa_begin_catch(a1);
    if (addr_obj::Logger::isInitialized((addr_obj::Logger *)__s))
    {
      std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&a29);
      v80 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&a29, (uint64_t)"const char* exception: ", 23);
      size_t v81 = strlen(__s);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v80, (uint64_t)__s, v81);
      std::string::basic_string[abi:ne180100]<0>(&__p, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
      std::string::basic_string[abi:ne180100]<0>(&a23, "toDebugJsonString");
      std::stringbuf::str();
      std::string::basic_string[abi:ne180100]<0>(&a11, "");
      addr_obj::Logger::log(16, (uint64_t)&__p, 325, (uint64_t)&a23, (uint64_t)&a17, (uint64_t)&a11);
      if (a16 < 0) {
        operator delete(a11);
      }
      if (a22 < 0) {
        operator delete(a17);
      }
      if (a28 < 0) {
        operator delete(a23);
      }
      if (a70 < 0) {
        operator delete(__p);
      }
      std::ostringstream::~ostringstream((uint64_t)&a29);
    }
    v82 = addr_obj::Json::operator<<<char [3]>(&a71, "; ");
    v83 = addr_obj::Json::operator<<<char [52]>(v82, "Json addr_obj::VenueInfo::toDebugJsonString() const");
    long long v84 = addr_obj::Json::operator<<<char [17]>(v83, ": const char *: ");
    addr_obj::Json::operator<<<char const*>(v84, &__s);
    __cxa_end_catch();
  }
  else
  {
    std::string v85 = (addr_obj::Logger *)__cxa_begin_catch(a1);
    if (a2 == 2)
    {
      std::string v86 = v85;
      if (addr_obj::Logger::isInitialized(v85))
      {
        std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&a29);
        std::string v87 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&a29, (uint64_t)"std::string exception: ", 23);
        int v88 = *((char *)v86 + 23);
        if (v88 >= 0) {
          uint64_t v89 = (uint64_t)v86;
        }
        else {
          uint64_t v89 = *(void *)v86;
        }
        if (v88 >= 0) {
          uint64_t v90 = *((unsigned __int8 *)v86 + 23);
        }
        else {
          uint64_t v90 = *((void *)v86 + 1);
        }
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v87, v89, v90);
        std::string::basic_string[abi:ne180100]<0>(&__p, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
        std::string::basic_string[abi:ne180100]<0>(&a23, "toDebugJsonString");
        std::stringbuf::str();
        std::string::basic_string[abi:ne180100]<0>(&a11, "");
        addr_obj::Logger::log(16, (uint64_t)&__p, 325, (uint64_t)&a23, (uint64_t)&a17, (uint64_t)&a11);
        if (a16 < 0) {
          operator delete(a11);
        }
        if (a22 < 0) {
          operator delete(a17);
        }
        if (a28 < 0) {
          operator delete(a23);
        }
        if (a70 < 0) {
          operator delete(__p);
        }
        std::ostringstream::~ostringstream((uint64_t)&a29);
      }
      std::string v91 = addr_obj::Json::operator<<<char [3]>(&a71, "; ");
      v92 = addr_obj::Json::operator<<<char [52]>(v91, "Json addr_obj::VenueInfo::toDebugJsonString() const");
      v93 = addr_obj::Json::operator<<<char [26]>(v92, ": std::string exception: ");
      addr_obj::Json::escape(v93, (uint64_t *)v86);
      __cxa_end_catch();
    }
    else
    {
      if (addr_obj::Logger::isInitialized(v85))
      {
        std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&a29);
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&a29, (uint64_t)"unknown exception", 17);
        std::string::basic_string[abi:ne180100]<0>(&__p, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
        std::string::basic_string[abi:ne180100]<0>(&a23, "toDebugJsonString");
        std::stringbuf::str();
        std::string::basic_string[abi:ne180100]<0>(&a11, "");
        addr_obj::Logger::log(16, (uint64_t)&__p, 325, (uint64_t)&a23, (uint64_t)&a17, (uint64_t)&a11);
        if (a16 < 0) {
          operator delete(a11);
        }
        if (a22 < 0) {
          operator delete(a17);
        }
        if (a28 < 0) {
          operator delete(a23);
        }
        if (a70 < 0) {
          operator delete(__p);
        }
        std::ostringstream::~ostringstream((uint64_t)&a29);
      }
      v94 = addr_obj::Json::operator<<<char [3]>(&a71, "; ");
      v95 = addr_obj::Json::operator<<<char [52]>(v94, "Json addr_obj::VenueInfo::toDebugJsonString() const");
      addr_obj::Json::operator<<<char [20]>(v95, ": unknown exception");
      __cxa_end_catch();
    }
  }
  JUMPOUT(0x1891A3354);
}

void sub_1891A9C28(void *a1, int a2, void *__p, uint64_t a4, int a5, __int16 a6, char a7, char a8, std::string *a9, void *a10, void *__pa, int a12, __int16 a13, char a14, char a15, void *a16, void *a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,long long a23,std::string::size_type a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  if (SHIBYTE(a16) < 0) {
    operator delete(__pa);
  }
  if (SHIBYTE(a22) < 0) {
    operator delete(a17);
  }
  if (SHIBYTE(a24) < 0) {
    operator delete((void *)a23);
  }
  if (a66 < 0) {
    operator delete(a61);
  }
  std::ostringstream::~ostringstream((uint64_t)&a25);
  std::string::size_type v69 = __cxa_begin_catch(a1);
  if (a2 == v66)
  {
    std::string v70 = v69;
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a17, "Exception caught during formatting of the log line: ");
    long long v71 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(void *)v70 + 16))(v70);
    v72 = std::string::append((std::string *)&a17, v71);
    long long v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
    a24 = v72->__r_.__value_.__r.__words[2];
    a23 = v73;
    v72->__r_.__value_.__l.__size_ = 0;
    v72->__r_.__value_.__r.__words[2] = 0;
    v72->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string[abi:ne180100]<0>(&__pa, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 325, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&__pa);
    if (SHIBYTE(a16) < 0) {
      operator delete(__pa);
    }
    if (SHIBYTE(a24) < 0) {
      operator delete((void *)a23);
    }
    if (SHIBYTE(a22) < 0) {
      operator delete(a17);
    }
    if (a66 < 0) {
      operator delete(a61);
    }
    if (SHIBYTE(a27) < 0) {
      operator delete(a25);
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a23, "Unexpected exception caught during formatting of the log line");
    std::string::basic_string[abi:ne180100]<0>(&a17, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 325, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&a17);
    if (SHIBYTE(a22) < 0) {
      operator delete(a17);
    }
    if (SHIBYTE(a24) < 0) {
      operator delete((void *)a23);
    }
    if (a66 < 0) {
      operator delete(a61);
    }
    if (SHIBYTE(a27) < 0) {
      operator delete(a25);
    }
  }
  __cxa_end_catch();
  JUMPOUT(0x1891A9AF8);
}

void sub_1891AA288(void *a1)
{
}

void sub_1891AA320()
{
}

void sub_1891AA32C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a70 < 0) {
    operator delete(a65);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1891AA1DCLL);
}

void sub_1891AA3B8()
{
}

void sub_1891AA3C4(void *a1, int a2, void *__p, uint64_t a4, int a5, __int16 a6, char a7, char a8, std::string *a9, void *a10, void *__pa, int a12, __int16 a13, char a14, char a15, void *a16, void *a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,long long a23,std::string::size_type a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  if (SHIBYTE(a16) < 0) {
    operator delete(__pa);
  }
  if (SHIBYTE(a22) < 0) {
    operator delete(a17);
  }
  if (SHIBYTE(a24) < 0) {
    operator delete((void *)a23);
  }
  if (a66 < 0) {
    operator delete(a61);
  }
  std::ostringstream::~ostringstream((uint64_t)&a25);
  std::string::size_type v69 = __cxa_begin_catch(a1);
  if (a2 == v66)
  {
    std::string v70 = v69;
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a17, "Exception caught during formatting of the log line: ");
    long long v71 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(void *)v70 + 16))(v70);
    v72 = std::string::append((std::string *)&a17, v71);
    long long v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
    a24 = v72->__r_.__value_.__r.__words[2];
    a23 = v73;
    v72->__r_.__value_.__l.__size_ = 0;
    v72->__r_.__value_.__r.__words[2] = 0;
    v72->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string[abi:ne180100]<0>(&__pa, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 325, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&__pa);
    if (SHIBYTE(a16) < 0) {
      operator delete(__pa);
    }
    if (SHIBYTE(a24) < 0) {
      operator delete((void *)a23);
    }
    if (SHIBYTE(a22) < 0) {
      operator delete(a17);
    }
    if (a66 < 0) {
      operator delete(a61);
    }
    if (SHIBYTE(a27) < 0) {
      operator delete(a25);
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a23, "Unexpected exception caught during formatting of the log line");
    std::string::basic_string[abi:ne180100]<0>(&a17, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 325, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&a17);
    if (SHIBYTE(a22) < 0) {
      operator delete(a17);
    }
    if (SHIBYTE(a24) < 0) {
      operator delete((void *)a23);
    }
    if (a66 < 0) {
      operator delete(a61);
    }
    if (SHIBYTE(a27) < 0) {
      operator delete(a25);
    }
  }
  __cxa_end_catch();
  JUMPOUT(0x1891A9868);
}

void sub_1891AA434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  std::ostringstream::~ostringstream((uint64_t *)va);
  JUMPOUT(0x1891AA76CLL);
}

void sub_1891AA440()
{
}

void sub_1891AA618(void *a1)
{
}

void sub_1891AA6B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a70 < 0) {
    operator delete(a65);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1891AA56CLL);
}

void sub_1891AA740()
{
}

void sub_1891AA74C()
{
}

void sub_1891AA764()
{
}

void sub_1891AA924(void *a1)
{
}

void sub_1891AA9BC()
{
}

void sub_1891AA9C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a70 < 0) {
    operator delete(a65);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1891AA878);
}

void sub_1891AAA54()
{
}

void sub_1891AAA60()
{
}

void sub_1891AAF4C(void *a1, int a2, void *__p, uint64_t a4, int a5, __int16 a6, char a7, char a8, std::string *a9, void *a10, void *__pa, int a12, __int16 a13, char a14, char a15, void *a16, void *a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,long long a23,std::string::size_type a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  if (SHIBYTE(a16) < 0) {
    operator delete(__pa);
  }
  if (SHIBYTE(a22) < 0) {
    operator delete(a17);
  }
  if (SHIBYTE(a24) < 0) {
    operator delete((void *)a23);
  }
  if (a66 < 0) {
    operator delete(a61);
  }
  std::ostringstream::~ostringstream((uint64_t)&a25);
  std::string::size_type v69 = __cxa_begin_catch(a1);
  if (a2 == v66)
  {
    std::string v70 = v69;
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a17, "Exception caught during formatting of the log line: ");
    long long v71 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(void *)v70 + 16))(v70);
    v72 = std::string::append((std::string *)&a17, v71);
    long long v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
    a24 = v72->__r_.__value_.__r.__words[2];
    a23 = v73;
    v72->__r_.__value_.__l.__size_ = 0;
    v72->__r_.__value_.__r.__words[2] = 0;
    v72->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string[abi:ne180100]<0>(&__pa, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 324, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&__pa);
    if (SHIBYTE(a16) < 0) {
      operator delete(__pa);
    }
    if (SHIBYTE(a24) < 0) {
      operator delete((void *)a23);
    }
    if (SHIBYTE(a22) < 0) {
      operator delete(a17);
    }
    if (a66 < 0) {
      operator delete(a61);
    }
    if (SHIBYTE(a27) < 0) {
      operator delete(a25);
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a23, "Unexpected exception caught during formatting of the log line");
    std::string::basic_string[abi:ne180100]<0>(&a17, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 324, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&a17);
    if (SHIBYTE(a22) < 0) {
      operator delete(a17);
    }
    if (SHIBYTE(a24) < 0) {
      operator delete((void *)a23);
    }
    if (a66 < 0) {
      operator delete(a61);
    }
    if (SHIBYTE(a27) < 0) {
      operator delete(a25);
    }
  }
  __cxa_end_catch();
  JUMPOUT(0x1891AAE1CLL);
}

void sub_1891AB5AC(void *a1)
{
}

void sub_1891AB644()
{
}

void sub_1891AB650(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a70 < 0) {
    operator delete(a65);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1891AB500);
}

void sub_1891AB6DC()
{
}

void sub_1891AB6E8(void *a1, int a2, void *__p, uint64_t a4, int a5, __int16 a6, char a7, char a8, std::string *a9, void *a10, void *__pa, int a12, __int16 a13, char a14, char a15, void *a16, void *a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,long long a23,std::string::size_type a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  if (SHIBYTE(a16) < 0) {
    operator delete(__pa);
  }
  if (SHIBYTE(a22) < 0) {
    operator delete(a17);
  }
  if (SHIBYTE(a24) < 0) {
    operator delete((void *)a23);
  }
  if (a66 < 0) {
    operator delete(a61);
  }
  std::ostringstream::~ostringstream((uint64_t)&a25);
  std::string::size_type v69 = __cxa_begin_catch(a1);
  if (a2 == v66)
  {
    std::string v70 = v69;
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a17, "Exception caught during formatting of the log line: ");
    long long v71 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(void *)v70 + 16))(v70);
    v72 = std::string::append((std::string *)&a17, v71);
    long long v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
    a24 = v72->__r_.__value_.__r.__words[2];
    a23 = v73;
    v72->__r_.__value_.__l.__size_ = 0;
    v72->__r_.__value_.__r.__words[2] = 0;
    v72->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string[abi:ne180100]<0>(&__pa, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 324, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&__pa);
    if (SHIBYTE(a16) < 0) {
      operator delete(__pa);
    }
    if (SHIBYTE(a24) < 0) {
      operator delete((void *)a23);
    }
    if (SHIBYTE(a22) < 0) {
      operator delete(a17);
    }
    if (a66 < 0) {
      operator delete(a61);
    }
    if (SHIBYTE(a27) < 0) {
      operator delete(a25);
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a23, "Unexpected exception caught during formatting of the log line");
    std::string::basic_string[abi:ne180100]<0>(&a17, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 324, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&a17);
    if (SHIBYTE(a22) < 0) {
      operator delete(a17);
    }
    if (SHIBYTE(a24) < 0) {
      operator delete((void *)a23);
    }
    if (a66 < 0) {
      operator delete(a61);
    }
    if (SHIBYTE(a27) < 0) {
      operator delete(a25);
    }
  }
  __cxa_end_catch();
  JUMPOUT(0x1891AAB8CLL);
}

void sub_1891AB758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  std::ostringstream::~ostringstream((uint64_t *)va);
  JUMPOUT(0x1891ABA90);
}

void sub_1891AB764()
{
}

void sub_1891AB93C(void *a1)
{
}

void sub_1891AB9D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a70 < 0) {
    operator delete(a65);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1891AB890);
}

void sub_1891ABA64()
{
}

void sub_1891ABA70()
{
}

void sub_1891ABA88()
{
}

void sub_1891ABC48(void *a1)
{
}

void sub_1891ABCE0()
{
}

void sub_1891ABCEC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a70 < 0) {
    operator delete(a65);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1891ABB9CLL);
}

void sub_1891ABD78()
{
}

void sub_1891ABD84()
{
}

void sub_1891AC270(void *a1, int a2, void *__p, uint64_t a4, int a5, __int16 a6, char a7, char a8, std::string *a9, void *a10, void *__pa, int a12, __int16 a13, char a14, char a15, void *a16, void *a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,long long a23,std::string::size_type a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  if (SHIBYTE(a16) < 0) {
    operator delete(__pa);
  }
  if (SHIBYTE(a22) < 0) {
    operator delete(a17);
  }
  if (SHIBYTE(a24) < 0) {
    operator delete((void *)a23);
  }
  if (a66 < 0) {
    operator delete(a61);
  }
  std::ostringstream::~ostringstream((uint64_t)&a25);
  std::string::size_type v69 = __cxa_begin_catch(a1);
  if (a2 == v66)
  {
    std::string v70 = v69;
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a17, "Exception caught during formatting of the log line: ");
    long long v71 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(void *)v70 + 16))(v70);
    v72 = std::string::append((std::string *)&a17, v71);
    long long v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
    a24 = v72->__r_.__value_.__r.__words[2];
    a23 = v73;
    v72->__r_.__value_.__l.__size_ = 0;
    v72->__r_.__value_.__r.__words[2] = 0;
    v72->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string[abi:ne180100]<0>(&__pa, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 323, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&__pa);
    if (SHIBYTE(a16) < 0) {
      operator delete(__pa);
    }
    if (SHIBYTE(a24) < 0) {
      operator delete((void *)a23);
    }
    if (SHIBYTE(a22) < 0) {
      operator delete(a17);
    }
    if (a66 < 0) {
      operator delete(a61);
    }
    if (SHIBYTE(a27) < 0) {
      operator delete(a25);
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a23, "Unexpected exception caught during formatting of the log line");
    std::string::basic_string[abi:ne180100]<0>(&a17, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 323, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&a17);
    if (SHIBYTE(a22) < 0) {
      operator delete(a17);
    }
    if (SHIBYTE(a24) < 0) {
      operator delete((void *)a23);
    }
    if (a66 < 0) {
      operator delete(a61);
    }
    if (SHIBYTE(a27) < 0) {
      operator delete(a25);
    }
  }
  __cxa_end_catch();
  JUMPOUT(0x1891AC140);
}

void sub_1891AC8D0(void *a1)
{
}

void sub_1891AC968()
{
}

void sub_1891AC974(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a70 < 0) {
    operator delete(a65);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1891AC824);
}

void sub_1891ACA00()
{
}

void sub_1891ACA0C(void *a1, int a2, void *__p, uint64_t a4, int a5, __int16 a6, char a7, char a8, std::string *a9, void *a10, void *__pa, int a12, __int16 a13, char a14, char a15, void *a16, void *a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,long long a23,std::string::size_type a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  if (SHIBYTE(a16) < 0) {
    operator delete(__pa);
  }
  if (SHIBYTE(a22) < 0) {
    operator delete(a17);
  }
  if (SHIBYTE(a24) < 0) {
    operator delete((void *)a23);
  }
  if (a66 < 0) {
    operator delete(a61);
  }
  std::ostringstream::~ostringstream((uint64_t)&a25);
  std::string::size_type v69 = __cxa_begin_catch(a1);
  if (a2 == v66)
  {
    std::string v70 = v69;
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a17, "Exception caught during formatting of the log line: ");
    long long v71 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(void *)v70 + 16))(v70);
    v72 = std::string::append((std::string *)&a17, v71);
    long long v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
    a24 = v72->__r_.__value_.__r.__words[2];
    a23 = v73;
    v72->__r_.__value_.__l.__size_ = 0;
    v72->__r_.__value_.__r.__words[2] = 0;
    v72->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string[abi:ne180100]<0>(&__pa, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 323, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&__pa);
    if (SHIBYTE(a16) < 0) {
      operator delete(__pa);
    }
    if (SHIBYTE(a24) < 0) {
      operator delete((void *)a23);
    }
    if (SHIBYTE(a22) < 0) {
      operator delete(a17);
    }
    if (a66 < 0) {
      operator delete(a61);
    }
    if (SHIBYTE(a27) < 0) {
      operator delete(a25);
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a23, "Unexpected exception caught during formatting of the log line");
    std::string::basic_string[abi:ne180100]<0>(&a17, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 323, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&a17);
    if (SHIBYTE(a22) < 0) {
      operator delete(a17);
    }
    if (SHIBYTE(a24) < 0) {
      operator delete((void *)a23);
    }
    if (a66 < 0) {
      operator delete(a61);
    }
    if (SHIBYTE(a27) < 0) {
      operator delete(a25);
    }
  }
  __cxa_end_catch();
  JUMPOUT(0x1891ABEB0);
}

void sub_1891ACA7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  std::ostringstream::~ostringstream((uint64_t *)va);
  JUMPOUT(0x1891ACDB4);
}

void sub_1891ACA88()
{
}

void sub_1891ACC60(void *a1)
{
}

void sub_1891ACCFC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a70 < 0) {
    operator delete(a65);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1891ACBB4);
}

void sub_1891ACD88()
{
}

void sub_1891ACD94()
{
}

void sub_1891ACDAC()
{
}

void sub_1891ACF6C(void *a1)
{
}

void sub_1891AD004()
{
}

void sub_1891AD010(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a70 < 0) {
    operator delete(a65);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1891ACEC0);
}

void sub_1891AD09C()
{
}

void sub_1891AD0A8()
{
}

void sub_1891AD598(void *a1, int a2, void *__p, uint64_t a4, int a5, __int16 a6, char a7, char a8, std::string *a9, void *a10, void *__pa, int a12, __int16 a13, char a14, char a15, void *a16, void *a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,long long a23,std::string::size_type a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  if (SHIBYTE(a16) < 0) {
    operator delete(__pa);
  }
  if (SHIBYTE(a22) < 0) {
    operator delete(a17);
  }
  if (SHIBYTE(a24) < 0) {
    operator delete((void *)a23);
  }
  if (a66 < 0) {
    operator delete(a61);
  }
  std::ostringstream::~ostringstream((uint64_t)&a25);
  std::string::size_type v69 = __cxa_begin_catch(a1);
  if (a2 == v66)
  {
    std::string v70 = v69;
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a17, "Exception caught during formatting of the log line: ");
    long long v71 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(void *)v70 + 16))(v70);
    v72 = std::string::append((std::string *)&a17, v71);
    long long v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
    a24 = v72->__r_.__value_.__r.__words[2];
    a23 = v73;
    v72->__r_.__value_.__l.__size_ = 0;
    v72->__r_.__value_.__r.__words[2] = 0;
    v72->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string[abi:ne180100]<0>(&__pa, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 322, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&__pa);
    if (SHIBYTE(a16) < 0) {
      operator delete(__pa);
    }
    if (SHIBYTE(a24) < 0) {
      operator delete((void *)a23);
    }
    if (SHIBYTE(a22) < 0) {
      operator delete(a17);
    }
    if (a66 < 0) {
      operator delete(a61);
    }
    if (SHIBYTE(a27) < 0) {
      operator delete(a25);
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a23, "Unexpected exception caught during formatting of the log line");
    std::string::basic_string[abi:ne180100]<0>(&a17, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 322, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&a17);
    if (SHIBYTE(a22) < 0) {
      operator delete(a17);
    }
    if (SHIBYTE(a24) < 0) {
      operator delete((void *)a23);
    }
    if (a66 < 0) {
      operator delete(a61);
    }
    if (SHIBYTE(a27) < 0) {
      operator delete(a25);
    }
  }
  __cxa_end_catch();
  JUMPOUT(0x1891AD468);
}

void sub_1891ADBF8(void *a1)
{
}

void sub_1891ADC90()
{
}

void sub_1891ADC9C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a70 < 0) {
    operator delete(a65);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1891ADB4CLL);
}

void sub_1891ADD28()
{
}

void sub_1891ADD34(void *a1, int a2, void *__p, uint64_t a4, int a5, __int16 a6, char a7, char a8, std::string *a9, void *a10, void *__pa, int a12, __int16 a13, char a14, char a15, void *a16, void *a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,long long a23,std::string::size_type a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  if (SHIBYTE(a16) < 0) {
    operator delete(__pa);
  }
  if (SHIBYTE(a22) < 0) {
    operator delete(a17);
  }
  if (SHIBYTE(a24) < 0) {
    operator delete((void *)a23);
  }
  if (a66 < 0) {
    operator delete(a61);
  }
  std::ostringstream::~ostringstream((uint64_t)&a25);
  std::string::size_type v69 = __cxa_begin_catch(a1);
  if (a2 == v66)
  {
    std::string v70 = v69;
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a17, "Exception caught during formatting of the log line: ");
    long long v71 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(void *)v70 + 16))(v70);
    v72 = std::string::append((std::string *)&a17, v71);
    long long v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
    a24 = v72->__r_.__value_.__r.__words[2];
    a23 = v73;
    v72->__r_.__value_.__l.__size_ = 0;
    v72->__r_.__value_.__r.__words[2] = 0;
    v72->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string[abi:ne180100]<0>(&__pa, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 322, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&__pa);
    if (SHIBYTE(a16) < 0) {
      operator delete(__pa);
    }
    if (SHIBYTE(a24) < 0) {
      operator delete((void *)a23);
    }
    if (SHIBYTE(a22) < 0) {
      operator delete(a17);
    }
    if (a66 < 0) {
      operator delete(a61);
    }
    if (SHIBYTE(a27) < 0) {
      operator delete(a25);
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a23, "Unexpected exception caught during formatting of the log line");
    std::string::basic_string[abi:ne180100]<0>(&a17, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 322, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&a17);
    if (SHIBYTE(a22) < 0) {
      operator delete(a17);
    }
    if (SHIBYTE(a24) < 0) {
      operator delete((void *)a23);
    }
    if (a66 < 0) {
      operator delete(a61);
    }
    if (SHIBYTE(a27) < 0) {
      operator delete(a25);
    }
  }
  __cxa_end_catch();
  JUMPOUT(0x1891AD1D0);
}

void sub_1891ADDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  std::ostringstream::~ostringstream((uint64_t *)va);
  JUMPOUT(0x1891AE0E4);
}

void sub_1891ADDB0()
{
}

void sub_1891ADF88(void *a1)
{
}

void sub_1891AE020()
{
}

void sub_1891AE02C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a70 < 0) {
    operator delete(a65);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1891ADEDCLL);
}

void sub_1891AE0B8()
{
}

void sub_1891AE0C4()
{
}

void sub_1891AE0DC()
{
}

void sub_1891AE29C(void *a1)
{
}

void sub_1891AE334()
{
}

void sub_1891AE340(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a70 < 0) {
    operator delete(a65);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1891AE1F0);
}

void sub_1891AE3CC()
{
}

void sub_1891AE3DC()
{
}

void sub_1891AE3E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void *addr_obj::Json::operator<<<char [52]>(void *a1, char *a2)
{
  std::string::basic_string[abi:ne180100]<0>(__p, a2);
  addr_obj::Json::escape(a1, (uint64_t *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return a1;
}

uint64_t addr_obj::venue::VenueInfoFormatterParams::VenueInfoFormatterParams(uint64_t a1, int a2, long long *a3, long long *a4)
{
  *(_DWORD *)a1 = a2;
  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(a1 + 8), *(const std::string::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v6 = *a3;
    *(void *)(a1 + 24) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 8) = v6;
  }
  uint64_t v7 = (std::string *)(a1 + 32);
  if (*((char *)a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v8 = *a4;
    *(void *)(a1 + 48) = *((void *)a4 + 2);
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = v8;
  }
  return a1;
}

void sub_1891AE4D4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<std::string>::resize(std::vector<std::string> *this, std::vector<std::string>::size_type __sz)
{
  std::vector<std::string>::pointer end = this->__end_;
  std::vector<std::string>::size_type v4 = 0xAAAAAAAAAAAAAAABLL * (((char *)end - (char *)this->__begin_) >> 3);
  BOOL v5 = __sz >= v4;
  std::vector<std::string>::size_type v6 = __sz - v4;
  if (v6 != 0 && v5)
  {
    std::vector<std::string>::__append(this, v6);
  }
  else if (!v5)
  {
    uint64_t v7 = &this->__begin_[__sz];
    while (end != v7)
    {
      if (SHIBYTE(end[-1].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(end[-1].__r_.__value_.__l.__data_);
      }
      --end;
    }
    this->__end_ = v7;
  }
}

void std::vector<std::string>::__append(std::vector<std::string> *this, std::vector<std::string>::size_type __n)
{
  value = this->__end_cap_.__value_;
  p_end_cap = (std::allocator<std::string> *)&this->__end_cap_;
  BOOL v5 = value;
  uint64_t v7 = (std::string *)*((void *)p_end_cap - 1);
  if (0xAAAAAAAAAAAAAAABLL * (((char *)value - (char *)v7) >> 3) >= __n)
  {
    if (__n)
    {
      size_t v13 = 24 * ((24 * __n - 24) / 0x18) + 24;
      bzero(*((void **)p_end_cap - 1), v13);
      uint64_t v7 = (std::string *)((char *)v7 + v13);
    }
    this->__end_ = v7;
  }
  else
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * (((char *)v7 - (char *)this->__begin_) >> 3);
    unint64_t v9 = v8 + __n;
    if (v8 + __n > 0xAAAAAAAAAAAAAAALL) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (char *)this->__begin_) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v9;
    }
    __v.__end_cap_.__value_ = p_end_cap;
    if (v11) {
      uint64_t v12 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::TrafficDynamicTile::Flow>>((uint64_t)p_end_cap, v11);
    }
    else {
      uint64_t v12 = 0;
    }
    __v.__first_ = v12;
    __v.__begin_ = v12 + v8;
    __v.__end_cap_.__value_ = &v12[v11];
    size_t v14 = 24 * ((24 * __n - 24) / 0x18) + 24;
    bzero(__v.__begin_, v14);
    __v.__end_ = (std::__split_buffer<std::string>::pointer)((char *)__v.__begin_ + v14);
    std::vector<std::string>::__swap_out_circular_buffer(this, &__v);
    std::__split_buffer<std::string>::~__split_buffer(&__v);
  }
}

void sub_1891AE6E4(_Unwind_Exception *a1, std::__split_buffer<std::string> *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

_DWORD *AddrObjGoogle::protobuf::io::CodedInputStream::BackUpInputToCurrentPosition(_DWORD *this)
{
  if (this[7] + this[11] + this[4] - this[2] >= 1)
  {
    uint64_t v1 = this;
    this = (_DWORD *)(*(uint64_t (**)(void))(**(void **)this + 24))(*(void *)this);
    uint64_t v2 = *((void *)v1 + 1);
    unsigned int v3 = v1[6] - v1[11] + v2 - v1[4];
    *((void *)v1 + 2) = v2;
    v1[11] = 0;
    *((void *)v1 + 3) = v3;
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(AddrObjGoogle::protobuf::io::CodedInputStream *this)
{
  int v1 = *((_DWORD *)this + 10);
  if (v1 == 0x7FFFFFFF) {
    return 0xFFFFFFFFLL;
  }
  else {
    return (v1
  }
                        - *((_DWORD *)this + 6)
                        + *((_DWORD *)this + 11)
                        + *((_DWORD *)this + 4)
                        - *((_DWORD *)this + 2));
}

void AddrObjGoogle::protobuf::io::CodedInputStream::PrintTotalBytesLimitError(AddrObjGoogle::protobuf::io::CodedInputStream *this)
{
  AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/coded_stream.cc", 172);
  uint64_t v2 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v6, "A protocol message was rejected because it was too big (more than ");
  unsigned int v3 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v2, *((_DWORD *)this + 12));
  std::vector<std::string>::size_type v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v3, " bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.");
  AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v5, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
}

void sub_1891AE840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::io::CodedInputStream::Skip(AddrObjGoogle::protobuf::io::CodedInputStream *this, unsigned int a2)
{
  if ((a2 & 0x80000000) != 0) {
    return 0;
  }
  uint64_t v4 = *((void *)this + 1);
  unsigned int v3 = (void *)((char *)this + 8);
  uint64_t v5 = *((void *)this + 2) - v4;
  BOOL v6 = __OFSUB__(a2, v5);
  int v7 = a2 - v5;
  if ((v7 < 0) ^ v6 | (v7 == 0))
  {
    *unsigned int v3 = v4 + a2;
    return 1;
  }
  if (*((int *)this + 11) >= 1)
  {
    uint64_t result = 0;
    *unsigned int v3 = v4 + (int)v5;
    return result;
  }
  *unsigned int v3 = 0;
  *((void *)this + 2) = 0;
  int v9 = *((_DWORD *)this + 10);
  if (*((_DWORD *)this + 12) < v9) {
    int v9 = *((_DWORD *)this + 12);
  }
  int v10 = *((_DWORD *)this + 6);
  uint64_t v11 = (v9 - v10);
  if ((int)v11 < v7)
  {
    if ((int)v11 >= 1)
    {
      *((_DWORD *)this + 6) = v9;
      (*(void (**)(void, uint64_t))(**(void **)this + 32))(*(void *)this, v11);
    }
    return 0;
  }
  *((_DWORD *)this + 6) = v10 + v7;
  uint64_t v12 = *(uint64_t (**)(void))(**(void **)this + 32);

  return v12();
}

uint64_t AddrObjGoogle::protobuf::io::CodedInputStream::Refresh(AddrObjGoogle::protobuf::io::CodedInputStream *this)
{
  int v2 = *((_DWORD *)this + 11);
  if (v2 > 0 || *((int *)this + 7) > 0 || (int v3 = *((_DWORD *)this + 6), v3 == *((_DWORD *)this + 10)))
  {
    int v4 = *((_DWORD *)this + 6) - v2;
    int v5 = *((_DWORD *)this + 12);
    if (v4 >= v5 && v5 != *((_DWORD *)this + 10)) {
      AddrObjGoogle::protobuf::io::CodedInputStream::PrintTotalBytesLimitError(this);
    }
    return 0;
  }
  else
  {
    int v8 = *((_DWORD *)this + 13);
    if ((v8 & 0x80000000) == 0 && v3 >= v8)
    {
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/coded_stream.cc", 506);
      int v9 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v28, "Reading dangerously large protocol message.  If the message turns out to be larger than ");
      int v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v9, *((_DWORD *)this + 12));
      uint64_t v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, " bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.");
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v27, (AddrObjGoogle::protobuf::internal::LogMessage *)v11);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
      *((_DWORD *)this + 13) = -2;
    }
    uint64_t v27 = 0;
    int v26 = 0;
    uint64_t v12 = *(void *)this;
    do
    {
      uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t *, int *))(*(void *)v12 + 16))(v12, &v27, &v26);
      if (!v6)
      {
        *((void *)this + 1) = 0;
        *((void *)this + 2) = 0;
        return v6;
      }
      int v13 = v26;
    }
    while (!v26);
    uint64_t v14 = v27 + v26;
    *((void *)this + 1) = v27;
    *((void *)this + 2) = v14;
    if (v13 < 0)
    {
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/coded_stream.cc", 523);
      long long v15 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (buffer_size) >= (0): ");
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v25, (AddrObjGoogle::protobuf::internal::LogMessage *)v15);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
      int v13 = v26;
    }
    int v16 = *((_DWORD *)this + 6);
    int v17 = v16 - (v13 ^ 0x7FFFFFFF);
    if (v16 <= (v13 ^ 0x7FFFFFFF))
    {
      int v19 = v13 + v16;
      uint64_t v18 = *((void *)this + 2);
    }
    else
    {
      *((_DWORD *)this + 7) = v17;
      uint64_t v18 = *((void *)this + 2) - v17;
      *((void *)this + 2) = v18;
      int v19 = 0x7FFFFFFF;
    }
    *((_DWORD *)this + 6) = v19;
    int v20 = *((_DWORD *)this + 10);
    uint64_t v21 = v18 + *((int *)this + 11);
    *((void *)this + 2) = v21;
    int v22 = *((_DWORD *)this + 12);
    if (v22 >= v20) {
      int v22 = v20;
    }
    BOOL v23 = __OFSUB__(v19, v22);
    int v24 = v19 - v22;
    if ((v24 < 0) ^ v23 | (v24 == 0)) {
      int v24 = 0;
    }
    else {
      *((void *)this + 2) = v21 - v24;
    }
    *((_DWORD *)this + 11) = v24;
  }
  return v6;
}

void sub_1891AEB60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL AddrObjGoogle::protobuf::io::CodedInputStream::ReadRaw(AddrObjGoogle::protobuf::io::CodedInputStream *this, char *__dst, int a3)
{
  while (1)
  {
    int v6 = a3;
    int v7 = (const void *)*((void *)this + 1);
    int v8 = *((void *)this + 2) - v7;
    BOOL v9 = __OFSUB__(a3, v8);
    a3 -= v8;
    if ((a3 < 0) ^ v9 | (a3 == 0)) {
      break;
    }
    memcpy(__dst, v7, v8);
    __dst += v8;
    *((void *)this + 1) += v8;
    if ((AddrObjGoogle::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0) {
      return v6 <= v8;
    }
  }
  memcpy(__dst, v7, v6);
  *((void *)this + 1) += v6;
  return v6 <= v8;
}

BOOL AddrObjGoogle::protobuf::io::CodedInputStream::ReadString(uint64_t a1, std::string *this, std::string::size_type __n)
{
  if ((__n & 0x80000000) != 0) {
    return 0;
  }
  unsigned int v3 = __n;
  int v4 = this;
  if (*(_DWORD *)(a1 + 16) - *(_DWORD *)(a1 + 8) >= (int)__n)
  {
    std::string::resize(this, __n, 0);
    if (!v3) {
      return 1;
    }
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v4->__r_.__value_.__l.__size_)
      {
LABEL_13:
        int v4 = 0;
        goto LABEL_14;
      }
      int v4 = (std::string *)v4->__r_.__value_.__r.__words[0];
    }
    else if (!*((unsigned char *)&v4->__r_.__value_.__s + 23))
    {
      goto LABEL_13;
    }
LABEL_14:
    memcpy(v4, *(const void **)(a1 + 8), v3);
    *(void *)(a1 + 8) += v3;
    return 1;
  }

  return AddrObjGoogle::protobuf::io::CodedInputStream::ReadStringFallback((AddrObjGoogle::protobuf::io::CodedInputStream *)a1, this, __n);
}

BOOL AddrObjGoogle::protobuf::io::CodedInputStream::ReadStringFallback(AddrObjGoogle::protobuf::io::CodedInputStream *this, std::string *a2, int a3)
{
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    if (a2->__r_.__value_.__l.__size_)
    {
      *a2->__r_.__value_.__l.__data_ = 0;
      a2->__r_.__value_.__l.__size_ = 0;
    }
  }
  else if (*((unsigned char *)&a2->__r_.__value_.__s + 23))
  {
    a2->__r_.__value_.__s.__data_[0] = 0;
    *((unsigned char *)&a2->__r_.__value_.__s + 23) = 0;
  }
  while (1)
  {
    int v6 = a3;
    int v7 = (const std::string::value_type *)*((void *)this + 1);
    int v8 = *((void *)this + 2) - v7;
    BOOL v9 = __OFSUB__(a3, v8);
    a3 -= v8;
    if ((a3 < 0) ^ v9 | (a3 == 0)) {
      break;
    }
    if (v8)
    {
      std::string::append(a2, v7, v8);
      int v7 = (const std::string::value_type *)*((void *)this + 1);
    }
    *((void *)this + 1) = &v7[v8];
    if ((AddrObjGoogle::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0) {
      return v6 <= v8;
    }
  }
  std::string::append(a2, v7, v6);
  *((void *)this + 1) += v6;
  return v6 <= v8;
}

BOOL AddrObjGoogle::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(AddrObjGoogle::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  unsigned int v3 = (unsigned int *)*((void *)this + 1);
  if (((*((_DWORD *)this + 4) - v3) & 0xFFFFFFFC) != 0)
  {
    *((void *)this + 1) = v3 + 1;
  }
  else
  {
    unsigned int v3 = (unsigned int *)__dst;
    BOOL result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadRaw(this, __dst, 4);
    if (!result) {
      return result;
    }
  }
  *a2 = *v3;
  return 1;
}

BOOL AddrObjGoogle::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(AddrObjGoogle::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  unsigned int v3 = (unint64_t *)*((void *)this + 1);
  if (((*((_DWORD *)this + 4) - v3) & 0xFFFFFFF8) != 0)
  {
    *((void *)this + 1) = v3 + 1;
  }
  else
  {
    unsigned int v3 = (unint64_t *)v5;
    BOOL result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadRaw(this, v5, 8);
    if (!result) {
      return result;
    }
  }
  *a2 = *v3;
  return 1;
}

unint64_t AddrObjGoogle::protobuf::io::CodedInputStream::ReadTagSlow(AddrObjGoogle::protobuf::io::CodedInputStream *this)
{
  int v2 = (char *)*((void *)this + 1);
  unsigned int v3 = (unsigned __int8 *)*((void *)this + 2);
  if (v2 != (char *)v3)
  {
LABEL_4:
    unint64_t v7 = 0;
    if (v2 >= (char *)v3 || *v2 < 0)
    {
      unint64_t result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v7);
      if (result) {
        return v7;
      }
    }
    else
    {
      unint64_t result = *v2;
      *((void *)this + 1) = v2 + 1;
    }
    return result;
  }
  if (AddrObjGoogle::protobuf::io::CodedInputStream::Refresh(this))
  {
    int v2 = (char *)*((void *)this + 1);
    unsigned int v3 = (unsigned __int8 *)*((void *)this + 2);
    goto LABEL_4;
  }
  int v5 = *((_DWORD *)this + 12);
  unint64_t result = 0;
  BOOL v6 = *((_DWORD *)this + 6) - *((_DWORD *)this + 11) < v5 || *((_DWORD *)this + 10) == v5;
  *((unsigned char *)this + 36) = v6;
  return result;
}

uint64_t AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint64Slow(AddrObjGoogle::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  while (v4 != 10)
  {
    while (1)
    {
      BOOL v6 = (char *)*((void *)this + 1);
      if (v6 != *((char **)this + 2)) {
        break;
      }
      if ((AddrObjGoogle::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0) {
        return 0;
      }
    }
    char v7 = *v6;
    v5 |= (unint64_t)(*v6 & 0x7F) << (7 * v4);
    *((void *)this + 1) = v6 + 1;
    ++v4;
    if ((v7 & 0x80) == 0)
    {
      *a2 = v5;
      return 1;
    }
  }
  return 0;
}

uint64_t AddrObjGoogle::protobuf::io::CodedOutputStream::Refresh(AddrObjGoogle::protobuf::io::CodedOutputStream *this)
{
  uint64_t v4 = 0;
  uint64_t result = (*(uint64_t (**)(void, uint64_t *, char *))(**(void **)this + 16))(*(void *)this, &v4, (char *)this + 16);
  if (result)
  {
    uint64_t v3 = v4;
    *((_DWORD *)this + 5) += *((_DWORD *)this + 4);
  }
  else
  {
    uint64_t v3 = 0;
    *((_DWORD *)this + 4) = 0;
    *((unsigned char *)this + 24) = 1;
  }
  *((void *)this + 1) = v3;
  return result;
}

uint64_t AddrObjGoogle::protobuf::io::CodedOutputStream::CodedOutputStream(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 24) = 0;
  AddrObjGoogle::protobuf::io::CodedOutputStream::Refresh((AddrObjGoogle::protobuf::io::CodedOutputStream *)a1);
  *(unsigned char *)(a1 + 24) = 0;
  return a1;
}

void AddrObjGoogle::protobuf::io::CodedOutputStream::~CodedOutputStream(AddrObjGoogle::protobuf::io::CodedOutputStream *this)
{
  if (*((int *)this + 4) >= 1) {
    (*(void (**)(void))(**(void **)this + 24))();
  }
}

uint64_t AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRaw(AddrObjGoogle::protobuf::io::CodedOutputStream *this, char *__src, int a3)
{
  while (1)
  {
    size_t v6 = *((int *)this + 4);
    char v7 = (void *)*((void *)this + 1);
    if ((int)v6 >= a3) {
      break;
    }
    memcpy(v7, __src, v6);
    uint64_t v8 = *((int *)this + 4);
    a3 -= v8;
    __src += v8;
    uint64_t result = AddrObjGoogle::protobuf::io::CodedOutputStream::Refresh(this);
    if ((result & 1) == 0) {
      return result;
    }
  }
  uint64_t result = (uint64_t)memcpy(v7, __src, a3);
  *((void *)this + 1) += a3;
  *((_DWORD *)this + 4) -= a3;
  return result;
}

uint64_t AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian32(uint64_t this, int a2)
{
  if (*(_DWORD *)(this + 16) < 4u)
  {
    int __src = a2;
    return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRaw((AddrObjGoogle::protobuf::io::CodedOutputStream *)this, (char *)&__src, 4);
  }
  else
  {
    **(_DWORD **)(this + 8) = a2;
    *(void *)(this + 8) += 4;
    *(_DWORD *)(this + 16) -= 4;
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian64(uint64_t this, uint64_t a2)
{
  v2[1] = *MEMORY[0x1E4F143B8];
  if (*(_DWORD *)(this + 16) < 8u)
  {
    v2[0] = a2;
    return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRaw((AddrObjGoogle::protobuf::io::CodedOutputStream *)this, (char *)v2, 8);
  }
  else
  {
    **(void **)(this + 8) = a2;
    *(void *)(this + 8) += 8;
    *(_DWORD *)(this + 16) -= 8;
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32(uint64_t this, unsigned int a2)
{
  if (*(int *)(this + 16) < 5)
  {
    if (a2 < 0x80)
    {
      LODWORD(v4) = 0;
    }
    else
    {
      uint64_t v4 = 0;
      do
      {
        __src[v4++] = a2 | 0x80;
        unsigned int v5 = a2 >> 14;
        a2 >>= 7;
      }
      while (v5);
    }
    __src[v4] = a2;
    return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRaw((AddrObjGoogle::protobuf::io::CodedOutputStream *)this, __src, (int)v4 + 1);
  }
  else
  {
    int v2 = *(unsigned char **)(this + 8);
    unsigned char *v2 = a2 | 0x80;
    if (a2 < 0x80)
    {
      unsigned char *v2 = a2 & 0x7F;
      int v3 = v2 + 1;
    }
    else
    {
      v2[1] = (a2 >> 7) | 0x80;
      if (a2 < 0x4000)
      {
        v2[1] = (a2 >> 7) & 0x7F;
        int v3 = v2 + 2;
      }
      else
      {
        void v2[2] = (a2 >> 14) | 0x80;
        if (a2 < 0x200000)
        {
          void v2[2] = (a2 >> 14) & 0x7F;
          int v3 = v2 + 3;
        }
        else
        {
          v2[3] = (a2 >> 21) | 0x80;
          if (a2 >> 28)
          {
            v2[4] = a2 >> 28;
            int v3 = v2 + 5;
          }
          else
          {
            int v3 = v2 + 4;
            v2[3] = (a2 >> 21) & 0x7F;
          }
        }
      }
    }
    int v6 = v3 - v2;
    *(void *)(this + 8) += v6;
    *(_DWORD *)(this + 16) -= v6;
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64(uint64_t this, unint64_t a2)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  if (*(int *)(this + 16) >= 10)
  {
    int v2 = *(unsigned char **)(this + 8);
    unint64_t v3 = a2 >> 28;
    if (HIBYTE(a2))
    {
      if (HIBYTE(a2) >= 0x80)
      {
        v2[9] = -127;
        unsigned int v4 = 10;
      }
      else
      {
        unsigned int v4 = 9;
      }
      v2[8] = HIBYTE(a2) | 0x80;
    }
    else
    {
      if (!v3)
      {
        if (!(a2 >> 14))
        {
          if (a2 < 0x80)
          {
            unsigned int v4 = 1;
            goto LABEL_24;
          }
          unsigned int v4 = 2;
LABEL_23:
          v2[1] = (a2 >> 7) | 0x80;
LABEL_24:
          unsigned char *v2 = a2 | 0x80;
          v2[v4 - 1] &= ~0x80u;
          *(void *)(this + 8) += v4;
          *(_DWORD *)(this + 16) -= v4;
          return this;
        }
        if (a2 < 0x200000)
        {
          unsigned int v4 = 3;
          goto LABEL_22;
        }
        unsigned int v4 = 4;
LABEL_21:
        v2[3] = (a2 >> 21) | 0x80;
LABEL_22:
        void v2[2] = (a2 >> 14) | 0x80;
        goto LABEL_23;
      }
      if (!(v3 >> 14))
      {
        if (v3 < 0x80)
        {
          unsigned int v4 = 5;
LABEL_20:
          v2[4] = v3 | 0x80;
          goto LABEL_21;
        }
        unsigned int v4 = 6;
LABEL_19:
        v2[5] = (a2 >> 35) | 0x80;
        goto LABEL_20;
      }
      if (v3 < 0x200000)
      {
        unsigned int v4 = 7;
        goto LABEL_18;
      }
      unsigned int v4 = 8;
    }
    v2[7] = (a2 >> 49) | 0x80;
LABEL_18:
    v2[6] = (a2 >> 42) | 0x80;
    goto LABEL_19;
  }
  if (a2 < 0x80)
  {
    LODWORD(v5) = 0;
  }
  else
  {
    uint64_t v5 = 0;
    do
    {
      __src[v5++] = a2 | 0x80;
      unint64_t v6 = a2 >> 14;
      a2 >>= 7;
    }
    while (v6);
  }
  __src[v5] = a2;
  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRaw((AddrObjGoogle::protobuf::io::CodedOutputStream *)this, __src, (int)v5 + 1);
}

uint64_t AddrObjGoogle::protobuf::internal::LogMessage::LogMessage(uint64_t result, int a2, uint64_t a3, int a4)
{
  *(_DWORD *)uint64_t result = a2;
  *(void *)(result + 8) = a3;
  *(_DWORD *)(result + 16) = a4;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

std::string *AddrObjGoogle::protobuf::internal::LogMessage::operator<<(std::string *a1, const std::string::value_type *a2)
{
  return a1;
}

{
  std::string *v3;
  std::string::size_type v4;
  std::string::size_type v5;

  unint64_t v3 = a1 + 1;
  unsigned int v4 = *((void *)a2 + 1);
  if (a2[23] >= 0)
  {
    uint64_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(const std::string::value_type **)a2;
    uint64_t v5 = v4;
  }
  std::string::append(v3, a2, v5);
  return a1;
}

void *AddrObjGoogle::protobuf::internal::VersionString@<X0>(AddrObjGoogle::protobuf::internal *this@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  snprintf(__str, 0x80uLL, "%d.%d.%d", (int)this / 1000000, (int)this / 1000 % 1000, (int)this % 1000);
  __str[127] = 0;
  return std::string::basic_string[abi:ne180100]<0>(a2, __str);
}

void AddrObjGoogle::protobuf::internal::LogFinisher::operator=(uint64_t a1, AddrObjGoogle::protobuf::internal::LogMessage *a2)
{
}

void AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage(void **this)
{
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
}

uint64_t AddrObjGoogle::protobuf::internal::DefaultLogHandler(int a1, const char *a2, int a3, uint64_t a4)
{
  unsigned int v4 = (FILE **)MEMORY[0x1E4F143C8];
  if (*(char *)(a4 + 23) >= 0) {
    uint64_t v5 = (const char *)a4;
  }
  else {
    uint64_t v5 = *(const char **)a4;
  }
  fprintf((FILE *)*MEMORY[0x1E4F143C8], "[libprotobuf %s %s:%d] %s\n", off_1E53D72B8[a1], a2, a3, v5);
  unint64_t v6 = *v4;

  return fflush(v6);
}

uint64_t AddrObjGoogle::protobuf::internal::DeleteLogSilencerCount(AddrObjGoogle::protobuf::internal *this)
{
  uint64_t result = qword_1E91176B0;
  if (qword_1E91176B0)
  {
    AddrObjGoogle::protobuf::internal::Mutex::~Mutex((pthread_mutex_t **)qword_1E91176B0);
    uint64_t result = MEMORY[0x18C11F580]();
  }
  qword_1E91176B0 = 0;
  return result;
}

void AddrObjGoogle::protobuf::internal::InitLogSilencerCount(AddrObjGoogle::protobuf::internal *this)
{
}

void sub_1891AF83C(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F580](v1, 0x20C4093837F09);
  _Unwind_Resume(a1);
}

atomic_ullong *AddrObjGoogle::protobuf::internal::InitLogSilencerCountOnce(AddrObjGoogle::protobuf::internal *this)
{
  uint64_t v1 = AddrObjGoogle::protobuf::internal::log_silencer_count_init_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &unk_1ED513270;
    v3[1] = AddrObjGoogle::protobuf::internal::InitLogSilencerCount;
    char v4 = 0;
    return AddrObjGoogle::protobuf::GoogleOnceInitImpl(&AddrObjGoogle::protobuf::internal::log_silencer_count_init_, (uint64_t)v3);
  }
  return result;
}

std::string *AddrObjGoogle::protobuf::internal::LogMessage::operator<<(std::string *a1, int a2)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  snprintf(__str, 0x80uLL, "%d", a2);
  __str[127] = 0;
  std::string::append(a1 + 1, __str);
  return a1;
}

void AddrObjGoogle::protobuf::internal::LogMessage::Finish(AddrObjGoogle::protobuf::internal::LogMessage *this)
{
  if (*(_DWORD *)this == 3)
  {
    int v2 = 3;
  }
  else
  {
    AddrObjGoogle::protobuf::internal::InitLogSilencerCountOnce(this);
    unint64_t v3 = (pthread_mutex_t **)qword_1E91176B0;
    AddrObjGoogle::protobuf::internal::Mutex::Lock((pthread_mutex_t **)qword_1E91176B0);
    int v4 = dword_1E91176B8;
    AddrObjGoogle::protobuf::internal::Mutex::Unlock(v3);
    if (v4 > 0) {
      goto LABEL_6;
    }
    int v2 = *(_DWORD *)this;
  }
  off_1EC15C6B8(v2, *((const char **)this + 1), *((_DWORD *)this + 4), (uint64_t)this + 24);
LABEL_6:
  if (*(_DWORD *)this == 3)
  {
    exception = __cxa_allocate_exception(0x30uLL);
    AddrObjGoogle::protobuf::FatalException::FatalException(exception, *((void *)this + 1), *((unsigned int *)this + 4), (char *)this + 24);
  }
}

void sub_1891AFA20(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0(AddrObjGoogle::protobuf::internal::FunctionClosure0 *this)
{
}

void AddrObjGoogle::protobuf::internal::Mutex::~Mutex(pthread_mutex_t **this)
{
  if (*this) {
    MEMORY[0x18C11F580](*this, 0x1000C40FA0F61DDLL);
  }
}

uint64_t AddrObjGoogle::protobuf::ghtonl(AddrObjGoogle::protobuf *this)
{
  return bswap32(this);
}

void AddrObjGoogle::protobuf::FatalException::~FatalException(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&unk_1ED512608;
  if (SHIBYTE(this[5].__vftable) < 0) {
    operator delete(this[3].__vftable);
  }

  std::exception::~exception(this);
}

{
  uint64_t vars8;

  AddrObjGoogle::protobuf::FatalException::~FatalException(this);

  JUMPOUT(0x18C11F580);
}

uint64_t AddrObjGoogle::protobuf::FatalException::what(AddrObjGoogle::protobuf::FatalException *this)
{
  uint64_t result = (uint64_t)this + 24;
  if (*((char *)this + 47) < 0) {
    return *(void *)result;
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::FatalException::FatalException(uint64_t a1, uint64_t a2, int a3, long long *a4)
{
  *(void *)a1 = &unk_1ED512608;
  *(void *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 16) = a3;
  uint64_t v5 = (std::string *)(a1 + 24);
  if (*((char *)a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v6 = *a4;
    v5->__r_.__value_.__r.__words[2] = *((void *)a4 + 2);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return a1;
}

void sub_1891AFBC8(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::strings::Substitute(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, std::string *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  a9->__r_.__value_.__r.__words[0] = 0;
  a9->__r_.__value_.__l.__size_ = 0;
  a9->__r_.__value_.__r.__words[2] = 0;
  *((void *)&v12 + 1) = a10;
  *(void *)&long long v12 = a8;
  AddrObjGoogle::protobuf::strings::SubstituteAndAppend(a9, a1, a2, a3, a4, a5, a6, a7, v12, a11, a12);
}

void sub_1891AFC48(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::strings::SubstituteAndAppend(std::string *this, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  uint64_t v36 = a3;
  v37[0] = a4;
  v37[1] = a5;
  v37[2] = a6;
  v37[3] = a7;
  v37[4] = a8;
  long long v38 = a9;
  uint64_t v39 = a10;
  uint64_t v40 = a11;
  uint64_t v41 = 0;
  int v11 = *a2;
  if (!*a2) {
    return;
  }
  uint64_t v12 = a3;
  uint64_t v14 = this;
  int v15 = 0;
  LODWORD(v16) = 0;
  do
  {
    if (v11 != 36) {
      goto LABEL_8;
    }
    uint64_t v16 = (int)v16 + 1;
    int v17 = a2[v16];
    unsigned int v18 = v17 - 48;
    if ((v17 - 48) > 9)
    {
      if (v17 != 36)
      {
        AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/stubs/substitute.cc", 98);
        AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v35, "Invalid strings::Substitute() format string: \"");
        std::string::basic_string[abi:ne180100]<0>(v34, a2);
        AddrObjGoogle::protobuf::CEscape();
      }
LABEL_8:
      ++v15;
      goto LABEL_9;
    }
    int v19 = *(_DWORD *)(v37[v18 - 1] + 8);
    if (v19 == -1)
    {
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/stubs/substitute.cc", 85);
      uint64_t v21 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v35, "strings::Substitute format string invalid: asked for \"$");
      int v22 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v21, v18);
      BOOL v23 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v22, "\", but only ");
      uint64_t v24 = 0;
      while (*(_DWORD *)(v12 + 8) != -1)
      {
        int v25 = v24 + 1;
        uint64_t v12 = v37[v24++];
        if (!v12) {
          goto LABEL_36;
        }
      }
      int v25 = v24;
LABEL_36:
      uint64_t v33 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v23, v25);
      AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v33, " args were given.  Full format string was: \"");
      std::string::basic_string[abi:ne180100]<0>(v34, a2);
      AddrObjGoogle::protobuf::CEscape();
    }
    v15 += v19;
LABEL_9:
    uint64_t v16 = (int)v16 + 1;
    int v11 = a2[v16];
  }
  while (a2[v16]);
  if (v15)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
      std::string::size_type size = this->__r_.__value_.__l.__size_;
    }
    else {
      LODWORD(size) = HIBYTE(this->__r_.__value_.__r.__words[2]);
    }
    std::string::resize(this, v15 + (int)size, 0);
    if (SHIBYTE(v14->__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v14->__r_.__value_.__l.__size_) {
        goto LABEL_24;
      }
      uint64_t v14 = (std::string *)v14->__r_.__value_.__r.__words[0];
    }
    else if (!*((unsigned char *)&v14->__r_.__value_.__s + 23))
    {
LABEL_24:
      uint64_t v14 = 0;
    }
    int v26 = 0;
    uint64_t v27 = (char *)v14 + (int)size;
    while (2)
    {
      int v28 = a2[v26];
      if (v28 == 36)
      {
        uint64_t v29 = v26 + 1;
        uint64_t v30 = a2[v29];
        if ((v30 - 48) > 9)
        {
          if (v30 != 36) {
            goto LABEL_29;
          }
          *v27++ = 36;
        }
        else
        {
          int v31 = (const void ***)&v37[v30 - 49];
          uint64_t v32 = *v31;
          memcpy(v27, **v31, *((int *)*v31 + 2));
          v27 += *((int *)v32 + 2);
        }
      }
      else
      {
        if (!a2[v26]) {
          return;
        }
        *v27++ = v28;
LABEL_29:
        LODWORD(v29) = v26;
      }
      int v26 = v29 + 1;
      continue;
    }
  }
}

void sub_1891AFF80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (a16 < 0) {
    operator delete(a11);
  }
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage(&a23);
  _Unwind_Resume(a1);
}

std::string *AddrObjGoogle::protobuf::StringAppendV(std::string *a1, char *__format, va_list a3)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  uint64_t result = (std::string *)vsnprintf(__str, 0x400uLL, __format, a3);
  if ((int)result > 1023) {
    operator new[]();
  }
  if ((result & 0x80000000) == 0) {
    return std::string::append(a1, __str, result);
  }
  return result;
}

std::string *AddrObjGoogle::protobuf::StringAppendF(std::string *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  return AddrObjGoogle::protobuf::StringAppendV(a1, a2, &a9);
}

void AddrObjGoogle::protobuf::JoinStrings(uint64_t *a1, char *__s, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if (!a3)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/stubs/strutil.cc", 242);
    char v7 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: result != NULL: ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (AddrObjGoogle::protobuf::internal::LogMessage *)v7);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  if (*(char *)(a3 + 23) < 0)
  {
    **(unsigned char **)a3 = 0;
    *(void *)(a3 + 8) = 0;
  }
  else
  {
    *(unsigned char *)a3 = 0;
    *(unsigned char *)(a3 + 23) = 0;
  }
  int v8 = strlen(__s);
  if (v6 == v5)
  {
    std::string::reserve((std::string *)a3, 0);
  }
  else
  {
    int v9 = v8;
    uint64_t v10 = 0;
    int v11 = 0;
    uint64_t v12 = v5;
    do
    {
      if (v10) {
        int v13 = v8;
      }
      else {
        int v13 = 0;
      }
      if (*(char *)(v12 + 23) < 0) {
        uint64_t v14 = *(void *)(v5 + 8 + v10);
      }
      else {
        LODWORD(v14) = *(unsigned __int8 *)(v12 + 23);
      }
      v11 += v13 + v14;
      v12 += 24;
      v10 += 24;
    }
    while (v12 != v6);
    std::string::reserve((std::string *)a3, v11);
    uint64_t v15 = 0;
    do
    {
      if (v15) {
        std::string::append((std::string *)a3, __s, v9);
      }
      uint64_t v16 = (const std::string::value_type *)(v5 + v15);
      if (*(char *)(v5 + v15 + 23) < 0)
      {
        uint64_t v16 = *(const std::string::value_type **)(v5 + v15);
        std::string::size_type v17 = *(void *)(v5 + v15 + 8);
      }
      else
      {
        std::string::size_type v17 = *(unsigned __int8 *)(v5 + v15 + 23);
      }
      std::string::append((std::string *)a3, v16, v17);
      v15 += 24;
    }
    while (v5 + v15 != v6);
  }
}

void sub_1891B0284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::UnescapeCEscapeSequences(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 == a2)
  {
    for (uint64_t i = a1; *i && *i != 92; ++i)
      ;
    a1 = i;
  }
  else
  {
    uint64_t i = a2;
  }
  while (1)
  {
    int v3 = *a1;
    if (v3 != 92)
    {
      if (!*a1) {
        goto LABEL_57;
      }
      goto LABEL_55;
    }
    int v4 = a1 + 1;
    int v3 = (char)a1[1];
    if (v3 <= 62) {
      break;
    }
    if (v3 > 97)
    {
      switch(a1[1])
      {
        case 'n':
          LOBYTE(v3) = 10;
          goto LABEL_54;
        case 'o':
        case 'p':
        case 'q':
        case 's':
        case 'u':
        case 'w':
          goto LABEL_56;
        case 'r':
          LOBYTE(v3) = 13;
          goto LABEL_54;
        case 't':
          LOBYTE(v3) = 9;
          goto LABEL_54;
        case 'v':
          LOBYTE(v3) = 11;
          goto LABEL_54;
        case 'x':
          goto LABEL_28;
        default:
          if (v3 == 102)
          {
            LOBYTE(v3) = 12;
          }
          else
          {
            if (v3 != 98) {
              goto LABEL_56;
            }
            LOBYTE(v3) = 8;
          }
          break;
      }
      goto LABEL_54;
    }
    if (v3 > 91)
    {
      if (v3 != 92)
      {
        if (v3 != 97) {
          goto LABEL_56;
        }
        LOBYTE(v3) = 7;
      }
LABEL_54:
      a1 = v4;
LABEL_55:
      *i++ = v3;
      int v4 = a1;
      goto LABEL_56;
    }
    if (v3 == 63) {
      goto LABEL_54;
    }
    if (v3 != 88) {
      goto LABEL_56;
    }
LABEL_28:
    if ((a1[2] - 48) < 0xAu || (unsigned int v11 = a1[2] - 65, v11 <= 0x25) && ((1 << v11) & 0x3F0000003FLL) != 0)
    {
      LOBYTE(v3) = 0;
      uint64_t v12 = a1 + 1;
      while (1)
      {
        unsigned __int8 v14 = *++v12;
        unsigned __int8 v13 = v14;
        if ((v14 - 48) >= 0xAu
          && (v13 - 65 > 0x25 || ((1 << (v13 - 65)) & 0x3F0000003FLL) == 0))
        {
          break;
        }
        unsigned int v16 = v13;
        char v17 = v13 + 9;
        if (v16 <= 0x39) {
          char v17 = v16;
        }
        int v4 = v12;
        LOBYTE(v3) = v17 & 0xF | (16 * v3);
      }
      goto LABEL_54;
    }
LABEL_56:
    a1 = v4 + 1;
  }
  if (v3 > 47)
  {
    if ((v3 - 48) >= 8) {
      goto LABEL_56;
    }
    LOBYTE(v3) = v3 - 48;
    unsigned __int8 v6 = a1[2];
    uint64_t v5 = a1 + 2;
    char v7 = v6 + 8 * v3 - 48;
    if ((v6 & 0xF8) == 0x30)
    {
      int v4 = v5;
      LOBYTE(v3) = v7;
    }
    unsigned __int8 v8 = v4[1];
    int v9 = v8 & 0xF8;
    char v10 = v8 + 8 * v3 - 48;
    if (v9 == 48) {
      a1 = v4 + 1;
    }
    else {
      a1 = v4;
    }
    if (v9 == 48) {
      LOBYTE(v3) = v10;
    }
    goto LABEL_55;
  }
  if (v3 == 34 || v3 == 39) {
    goto LABEL_54;
  }
  if (a1[1]) {
    goto LABEL_56;
  }
LABEL_57:
  *uint64_t i = 0;
  return (i - a2);
}

void AddrObjGoogle::protobuf::UnescapeCEscapeString()
{
}

void sub_1891B0590(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F560](v1, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::CEscapeInternal(AddrObjGoogle::protobuf *this, const char *a2, uint64_t a3, char *a4, int a5, char a6)
{
  int v6 = (int)a4;
  if ((int)a2 >= 1)
  {
    char v9 = a5;
    char v10 = (unsigned __int8 *)this;
    char v11 = 0;
    LODWORD(v12) = 0;
    if (a5) {
      unsigned __int8 v13 = "\\x%02x";
    }
    else {
      unsigned __int8 v13 = "\\%03o";
    }
    unsigned __int8 v14 = (unsigned __int8 *)this + (int)a2;
    while (1)
    {
      if (v6 - (int)v12 < 2) {
        return 0xFFFFFFFFLL;
      }
      int v15 = (char)*v10;
      if (v15 > 33)
      {
        switch(v15)
        {
          case '""':
            char v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 8796;
            goto LABEL_20;
          case '\'':
            char v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 10076;
            goto LABEL_20;
          case '\\':
            char v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 23644;
            goto LABEL_20;
        }
      }
      else
      {
        switch(v15)
        {
          case 9:
            char v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 29788;
            goto LABEL_20;
          case 10:
            char v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 28252;
            goto LABEL_20;
          case 13:
            char v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 29276;
LABEL_20:
            int v16 = 2;
            goto LABEL_21;
        }
      }
      if (v15 < 0 && (a6 & 1) != 0
        || (v15 - 32) <= 0x5E
        && ((v11 & 1) == 0
         || (v15 - 48) >= 0xA
         && (*v10 - 65 > 0x25 || ((1 << (v15 - 65)) & 0x3F0000003FLL) == 0)))
      {
        char v11 = 0;
        *(unsigned char *)(a3 + (int)v12) = v15;
        int v16 = 1;
      }
      else
      {
        if ((v6 - v12) < 5) {
          return 0xFFFFFFFFLL;
        }
        int v16 = snprintf((char *)(a3 + (int)v12), 5uLL, v13, *v10);
        char v11 = v9;
      }
LABEL_21:
      uint64_t v12 = (v16 + v12);
      if (++v10 >= v14) {
        goto LABEL_34;
      }
    }
  }
  uint64_t v12 = 0;
LABEL_34:
  if ((int)v12 >= v6) {
    return 0xFFFFFFFFLL;
  }
  *(unsigned char *)(a3 + (int)v12) = 0;
  return v12;
}

void AddrObjGoogle::protobuf::CEscape()
{
}

void sub_1891B0874(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F560](v1, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::strings::Utf8SafeCEscape()
{
}

void sub_1891B096C(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F560](v1, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

unsigned char *AddrObjGoogle::protobuf::FastInt64ToBuffer(unint64_t this, unsigned char *a2, char *a3)
{
  unint64_t v3 = this;
  a2[21] = 0;
  if ((this & 0x8000000000000000) != 0)
  {
    if (this < 0xFFFFFFFFFFFFFFF7)
    {
      unint64_t v7 = -10 - this;
      uint64_t result = a2 + 19;
      a2[20] = (v7 % 0xA) | 0x30;
      unint64_t v8 = v7 / 0xA + 1;
      do
      {
        *result-- = (v8 % 0xA) | 0x30;
        BOOL v9 = v8 > 9;
        v8 /= 0xAuLL;
      }
      while (v9);
    }
    else
    {
      char v6 = 48 - this;
      uint64_t result = a2 + 19;
      a2[20] = v6;
    }
    *uint64_t result = 45;
  }
  else
  {
    uint64_t result = a2 + 21;
    do
    {
      *--uint64_t result = (v3 % 0xA) | 0x30;
      BOOL v5 = v3 >= 0xA;
      v3 /= 0xAuLL;
    }
    while (v5);
  }
  return result;
}

unsigned char *AddrObjGoogle::protobuf::FastInt32ToBuffer(AddrObjGoogle::protobuf *this, unsigned char *a2, char *a3)
{
  unsigned int v3 = this;
  a2[11] = 0;
  if ((this & 0x80000000) != 0)
  {
    if (this < 0xFFFFFFF7)
    {
      unsigned int v7 = -10 - this;
      unsigned int v8 = (-10 - (int)this) / 0xAu;
      uint64_t result = a2 + 9;
      a2[10] = (v7 % 0xA) | 0x30;
      unsigned int v9 = v8 + 1;
      do
      {
        *result-- = (v9 % 0xA) | 0x30;
        BOOL v10 = v9 > 9;
        v9 /= 0xAu;
      }
      while (v10);
    }
    else
    {
      char v6 = 48 - (_BYTE)this;
      uint64_t result = a2 + 9;
      a2[10] = v6;
    }
    *uint64_t result = 45;
  }
  else
  {
    uint64_t result = a2 + 11;
    do
    {
      *--uint64_t result = (v3 % 0xA) | 0x30;
      BOOL v5 = v3 >= 0xA;
      v3 /= 0xAu;
    }
    while (v5);
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::FastHex64ToBuffer(unint64_t this, uint64_t a2, char *a3)
{
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v3 = 15;
  do
  {
    *(unsigned char *)(a2 + v3) = a0123456789abcd[this & 0xF];
    this >>= 4;
    unint64_t v4 = v3-- + 1;
  }
  while (v4 > 1);
  return a2;
}

uint64_t AddrObjGoogle::protobuf::FastHex32ToBuffer(AddrObjGoogle::protobuf *this, uint64_t a2, char *a3)
{
  unint64_t v3 = this;
  *(unsigned char *)(a2 + 8) = 0;
  uint64_t v4 = 7;
  do
  {
    *(unsigned char *)(a2 + v4) = a0123456789abcd[v3 & 0xF];
    v3 >>= 4;
    unint64_t v5 = v4-- + 1;
  }
  while (v5 > 1);
  return a2;
}

unsigned char *AddrObjGoogle::protobuf::FastUInt32ToBufferLeft(AddrObjGoogle::protobuf *this, unsigned char *a2, char *a3)
{
  if (this >= 0x3B9ACA00)
  {
    unint64_t v3 = this / 0x5F5E100uLL;
    *(_WORD *)a2 = *(_WORD *)&a00010203040506[2 * v3];
    a2 += 2;
    goto LABEL_3;
  }
  if (this > 0x63)
  {
    if (this >> 4 <= 0x270)
    {
      if (this <= 0x3E7)
      {
        LODWORD(v6) = (unsigned __int16)this / 0x64u;
        *a2++ = v6 + 48;
        goto LABEL_9;
      }
LABEL_8:
      unint64_t v6 = this / 0x64uLL;
      *(_WORD *)a2 = *(_WORD *)&a00010203040506[2 * v6];
      a2 += 2;
LABEL_9:
      LODWORD(this) = this - 100 * v6;
      goto LABEL_10;
    }
    if (this < 0xF4240)
    {
      if (this >> 5 <= 0xC34)
      {
        LODWORD(v5) = this / 0x2710;
        *a2++ = this / 0x2710 + 48;
        goto LABEL_7;
      }
LABEL_6:
      unint64_t v5 = this / 0x2710uLL;
      *(_WORD *)a2 = *(_WORD *)&a00010203040506[2 * v5];
      a2 += 2;
LABEL_7:
      LODWORD(this) = this - 10000 * v5;
      goto LABEL_8;
    }
    if (this < 0x5F5E100)
    {
      if (this <= 0x98967F)
      {
        LODWORD(v4) = this / 0xF4240;
        *a2++ = this / 0xF4240 + 48;
        goto LABEL_5;
      }
LABEL_4:
      unint64_t v4 = this / 0xF4240uLL;
      *(_WORD *)a2 = *(_WORD *)&a00010203040506[2 * v4];
      a2 += 2;
LABEL_5:
      LODWORD(this) = this - 1000000 * v4;
      goto LABEL_6;
    }
    LODWORD(v3) = this / 0x5F5E100;
    *a2++ = this / 0x5F5E100 + 48;
LABEL_3:
    LODWORD(this) = this - 100000000 * v3;
    goto LABEL_4;
  }
  if (this <= 9)
  {
    *a2 = (_BYTE)this + 48;
    unsigned int v7 = a2 + 1;
    goto LABEL_11;
  }
LABEL_10:
  *(_WORD *)a2 = *(_WORD *)&a00010203040506[2 * (int)this];
  unsigned int v7 = a2 + 2;
LABEL_11:
  *unsigned int v7 = 0;
  return v7;
}

unsigned char *AddrObjGoogle::protobuf::FastUInt64ToBufferLeft(AddrObjGoogle::protobuf *this, unsigned char *a2, char *a3)
{
  int v3 = (int)this;
  if ((unint64_t)this >> 32)
  {
    unint64_t v5 = (unint64_t)this / 0x3B9ACA00;
    unint64_t v6 = (_WORD *)AddrObjGoogle::protobuf::FastUInt64ToBufferLeft((AddrObjGoogle::protobuf *)((unint64_t)this / 0x3B9ACA00), (unint64_t)a2, a3);
    unsigned int v7 = v3 - 1000000000 * v5;
    _WORD *v6 = *(_WORD *)&a00010203040506[2 * (v7 / 0x989680uLL)];
    v7 %= 0x989680u;
    v6[1] = *(_WORD *)&a00010203040506[2 * (v7 / 0x186A0uLL)];
    v7 %= 0x186A0u;
    std::string v6[2] = *(_WORD *)&a00010203040506[2 * (v7 / 0x3E8uLL)];
    v7 %= 0x3E8u;
    v6[3] = *(_WORD *)&a00010203040506[2 * (v7 / 0xAuLL)];
    v6[4] = (v7 % 0xA + 48);
    return (char *)v6 + 9;
  }
  else
  {
    return AddrObjGoogle::protobuf::FastUInt32ToBufferLeft(this, a2, a3);
  }
}

void *AddrObjGoogle::protobuf::SimpleItoa@<X0>(AddrObjGoogle::protobuf *this@<X0>, char *a2@<X2>, void *a3@<X8>)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  unint64_t v4 = AddrObjGoogle::protobuf::FastInt32ToBuffer(this, v6, a2);
  return std::string::basic_string[abi:ne180100]<0>(a3, v4);
}

{
  char *v4;
  char v6[32];
  uint64_t v7;

  uint64_t v7 = *MEMORY[0x1E4F143B8];
  unint64_t v4 = AddrObjGoogle::protobuf::FastUInt32ToBufferLeft(this, v6, a2);
  return std::string::__init_with_size[abi:ne180100]<std::__wrap_iter<char const*>,std::__wrap_iter<char const*>>(a3, v6, v4, v4 - v6);
}

{
  char *v4;
  unsigned char v6[32];
  uint64_t v7;

  uint64_t v7 = *MEMORY[0x1E4F143B8];
  unint64_t v4 = AddrObjGoogle::protobuf::FastInt64ToBuffer((unint64_t)this, v6, a2);
  return std::string::basic_string[abi:ne180100]<0>(a3, v4);
}

{
  char *v4;
  char v6[32];
  uint64_t v7;

  uint64_t v7 = *MEMORY[0x1E4F143B8];
  unint64_t v4 = AddrObjGoogle::protobuf::FastUInt64ToBufferLeft(this, v6, a2);
  return std::string::__init_with_size[abi:ne180100]<std::__wrap_iter<char const*>,std::__wrap_iter<char const*>>(a3, v6, v4, v4 - v6);
}

void *AddrObjGoogle::protobuf::SimpleDtoa@<X0>(double a1@<D0>, char *a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  AddrObjGoogle::protobuf::DoubleToBuffer((AddrObjGoogle::protobuf *)__s, a1, a2);
  return std::string::basic_string[abi:ne180100]<0>(a3, __s);
}

AddrObjGoogle::protobuf *AddrObjGoogle::protobuf::DoubleToBuffer(AddrObjGoogle::protobuf *this, double a2, char *a3)
{
  if (a2 == INFINITY)
  {
    int v5 = 6712937;
LABEL_5:
    *(_DWORD *)this = v5;
    return this;
  }
  if (a2 == -INFINITY)
  {
    *((unsigned char *)this + 4) = 0;
    int v5 = 1718511917;
    goto LABEL_5;
  }
  snprintf((char *)this, 0x20uLL, "%.*g", 15, a2);
  if (strtod((const char *)this, 0) != a2) {
    snprintf((char *)this, 0x20uLL, "%.*g", 17, a2);
  }
  AddrObjGoogle::protobuf::DelocalizeRadix(this, v7);
  return this;
}

void *AddrObjGoogle::protobuf::SimpleFtoa@<X0>(float a1@<S0>, char *a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  AddrObjGoogle::protobuf::FloatToBuffer((AddrObjGoogle::protobuf *)v6, a1, a2);
  return std::string::basic_string[abi:ne180100]<0>(a3, v6);
}

AddrObjGoogle::protobuf *AddrObjGoogle::protobuf::FloatToBuffer(AddrObjGoogle::protobuf *this, float a2, char *a3)
{
  if (a2 == INFINITY)
  {
    int v5 = 6712937;
LABEL_5:
    *(_DWORD *)this = v5;
    return this;
  }
  if (a2 == -INFINITY)
  {
    *((unsigned char *)this + 4) = 0;
    int v5 = 1718511917;
    goto LABEL_5;
  }
  snprintf((char *)this, 0x18uLL, "%.*g", 6, a2);
  *(float *)unsigned int v9 = 0.0;
  if (!AddrObjGoogle::protobuf::safe_strtof(this, (float *)v9, v7) || *(float *)v9 != a2) {
    snprintf((char *)this, 0x18uLL, "%.*g", 8, a2);
  }
  AddrObjGoogle::protobuf::DelocalizeRadix(this, v8);
  return this;
}

char *AddrObjGoogle::protobuf::DelocalizeRadix(AddrObjGoogle::protobuf *this, char *a2)
{
  uint64_t result = strchr((char *)this, 46);
  if (!result)
  {
    for (uint64_t i = (char *)this + 2; ; ++i)
    {
      int v5 = *((unsigned __int8 *)i - 2);
      if ((v5 - 48) >= 0xA
        && ((v5 - 43) > 0x3A || ((1 << (v5 - 43)) & 0x400000004000005) == 0))
      {
        break;
      }
    }
    if (*(i - 2))
    {
      unsigned int v8 = (unsigned __int8 *)(i - 1);
      int v7 = *((unsigned __int8 *)i - 1);
      *((unsigned char *)i - 2) = 46;
      if ((v7 - 48) >= 0xA
        && ((v7 - 43) > 0x3A || ((1 << (v7 - 43)) & 0x400000004000005) == 0))
      {
        if (v7)
        {
          do
          {
            unsigned int v9 = i;
            int v10 = *(unsigned __int8 *)i;
            if ((v10 - 48) < 0xA) {
              break;
            }
            ++i;
            BOOL v11 = (v10 - 43) > 0x3A || ((1 << (v10 - 43)) & 0x400000004000005) == 0;
          }
          while (v11 && v10 != 0);
          size_t v13 = strlen(v9) + 1;
          return (char *)memmove(v8, v9, v13);
        }
      }
    }
  }
  return result;
}

BOOL AddrObjGoogle::protobuf::safe_strtof(AddrObjGoogle::protobuf *this, float *a2, float *a3)
{
  unint64_t v6 = 0;
  *__error() = 0;
  *a2 = strtof((const char *)this, &v6);
  return *(unsigned char *)this && !*v6 && *__error() == 0;
}

std::string *AddrObjGoogle::protobuf::LocalizeRadix@<X0>(AddrObjGoogle::protobuf *this@<X0>, char *a2@<X1>, std::string *a3@<X8>)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  int v7 = snprintf(&__str, 0x10uLL, "%.1f", 1.5);
  if (__str != 49)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/stubs/strutil.cc", 1163);
    unsigned int v8 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (temp[0]) == ('1'): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v8);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  if (v16[v7 - 2] != 53)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/stubs/strutil.cc", 1164);
    unsigned int v9 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (temp[size-1]) == ('5'): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v9);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  if (v7 >= 7)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/stubs/strutil.cc", 1165);
    int v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (size) <= (6): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v10);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  size_t v11 = strlen((const char *)this);
  std::string::reserve(a3, v11 + v7 - 3);
  std::string::append[abi:ne180100]<char const*,0>(a3, (char *)this, a2);
  std::string::append(a3, v16, v7 - 2);
  return std::string::append(a3, a2 + 1);
}

void sub_1891B15C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *std::string::append[abi:ne180100]<char const*,0>(std::string *this, char *a2, char *a3)
{
  unint64_t v4 = a2;
  LODWORD(v6) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  unint64_t v7 = a3 - a2;
  if ((v6 & 0x80000000) != 0)
  {
    if (a3 == a2) {
      return this;
    }
    std::string::size_type size = this->__r_.__value_.__l.__size_;
    unint64_t v11 = this->__r_.__value_.__r.__words[2];
    std::string::size_type v9 = (v11 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    int v10 = (std::string *)this->__r_.__value_.__r.__words[0];
    unint64_t v6 = HIBYTE(v11);
  }
  else
  {
    if (a3 == a2) {
      return this;
    }
    std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    std::string::size_type v9 = 22;
    int v10 = this;
  }
  if (v10 > (std::string *)v4 || (char *)&v10->__r_.__value_.__l.__data_ + size + 1 <= v4)
  {
    if (v9 - size < v7)
    {
      std::string::__grow_by(this, v9, size - v9 + v7, size, size, 0, 0);
      this->__r_.__value_.__l.__size_ = size;
      LOBYTE(v6) = *((unsigned char *)&this->__r_.__value_.__s + 23);
    }
    unsigned __int8 v14 = this;
    if ((v6 & 0x80) != 0) {
      unsigned __int8 v14 = (std::string *)this->__r_.__value_.__r.__words[0];
    }
    for (uint64_t i = (char *)v14 + size; v4 != a3; ++i)
    {
      char v16 = *v4++;
      *uint64_t i = v16;
    }
    *uint64_t i = 0;
    std::string::size_type v17 = v7 + size;
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
      this->__r_.__value_.__l.__size_ = v17;
    }
    else {
      *((unsigned char *)&this->__r_.__value_.__s + 23) = v17 & 0x7F;
    }
  }
  else
  {
    std::string::__init_with_size[abi:ne180100]<std::__wrap_iter<char const*>,std::__wrap_iter<char const*>>(__p, v4, a3, v7);
    if ((v20 & 0x80u) == 0) {
      uint64_t v12 = __p;
    }
    else {
      uint64_t v12 = (void **)__p[0];
    }
    if ((v20 & 0x80u) == 0) {
      std::string::size_type v13 = v20;
    }
    else {
      std::string::size_type v13 = (std::string::size_type)__p[1];
    }
    std::string::append(this, (const std::string::value_type *)v12, v13);
    if ((char)v20 < 0) {
      operator delete(__p[0]);
    }
  }
  return this;
}

void sub_1891B1768(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double AddrObjGoogle::protobuf::NoLocaleStrtod(AddrObjGoogle::protobuf *this, char *a2, char **a3)
{
  unsigned __int8 v14 = 0;
  double v5 = strtod((const char *)this, &v14);
  unint64_t v6 = v14;
  if (a2) {
    *(void *)a2 = v14;
  }
  if (*v6 == 46)
  {
    std::__split_buffer<std::string>::pointer p_p = &__p;
    AddrObjGoogle::protobuf::LocalizeRadix(this, v6, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::__split_buffer<std::string>::pointer p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    uint64_t v12 = 0;
    double v5 = strtod((const char *)p_p, &v12);
    char v8 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if (a2 && v12 - (char *)p_p > v14 - (char *)this)
    {
      int v9 = strlen((const char *)this);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        int v10 = __p.__r_.__value_.__r.__words[1];
      }
      *(void *)a2 = (char *)this + v12 - ((char *)p_p + v10 - v9);
    }
    if (v8 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return v5;
}

void sub_1891B1888(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::vector<std::string> **std::back_insert_iterator<std::vector<std::string>>::operator=[abi:ne180100](std::vector<std::string> **a1, long long *a2)
{
  unint64_t v4 = *a1;
  std::vector<std::string>::pointer end = (*a1)->__end_;
  unint64_t v6 = *a1;
  value = v6->__end_cap_.__value_;
  p_end_cap = (std::allocator<std::string> *)&v6->__end_cap_;
  char v8 = value;
  if (end >= value)
  {
    unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * (((char *)end - (char *)v4->__begin_) >> 3);
    unint64_t v13 = v12 + 1;
    if (v12 + 1 > 0xAAAAAAAAAAAAAAALL) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * (((char *)v8 - (char *)v4->__begin_) >> 3);
    if (2 * v14 > v13) {
      unint64_t v13 = 2 * v14;
    }
    if (v14 >= 0x555555555555555) {
      unint64_t v15 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v15 = v13;
    }
    __v.__end_cap_.__value_ = p_end_cap;
    if (v15) {
      char v16 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::TrafficDynamicTile::Flow>>((uint64_t)p_end_cap, v15);
    }
    else {
      char v16 = 0;
    }
    std::string::size_type v17 = v16 + v12;
    __v.__first_ = v16;
    __v.__begin_ = v17;
    __v.__end_cap_.__value_ = &v16[v15];
    long long v18 = *a2;
    v17->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    __v.__end_ = v17 + 1;
    std::vector<std::string>::__swap_out_circular_buffer(v4, &__v);
    unint64_t v11 = v4->__end_;
    std::__split_buffer<std::string>::~__split_buffer(&__v);
  }
  else
  {
    long long v10 = *a2;
    end->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&end->__r_.__value_.__l.__data_ = v10;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    unint64_t v11 = end + 1;
    v4->__end_ = end + 1;
  }
  v4->__end_ = v11;
  return a1;
}

void sub_1891B19D8(_Unwind_Exception *a1, std::__split_buffer<std::string> *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

void CAASaturn::EclipticLongitude(CAASaturn *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  int v3 = &g_L0SaturnCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_L1SaturnCoefficients);
  unint64_t v6 = &g_L1SaturnCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_L2SaturnCoefficients);
  int v9 = &g_L2SaturnCoefficients;
  double v10 = 0.0;
  do
  {
    double v11 = *(double *)v9;
    double v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_L3SaturnCoefficients);
  double v12 = 0.0;
  unint64_t v13 = &g_L3SaturnCoefficients;
  do
  {
    double v14 = *(double *)v13;
    double v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_L4SaturnCoefficients);
  double v15 = 0.0;
  char v16 = &g_L4SaturnCoefficients;
  do
  {
    double v17 = *(double *)v16;
    double v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_L5SaturnCoefficients);
  double v18 = 0.0;
  int v19 = &g_L5SaturnCoefficients;
  do
  {
    double v20 = *(double *)v19;
    double v18 = v18 + v20 * cos(*((double *)v19 + 1) + *((double *)v19 + 2) * v2);
    v19 += 3;
  }
  while (v19 != &g_B0SaturnCoefficients);
  fmod((v4+ v7 * v2+ v10 * (v2 * v2)+ v12 * (v2 * (v2 * v2))+ v15 * (v2 * (v2 * (v2 * v2)))+ v18 * (v2 * (v2 * (v2 * (v2 * v2)))))/ 100000000.0* 57.2957795, 360.0);
}

void CAASaturn::EclipticLatitude(CAASaturn *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  int v3 = &g_B0SaturnCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_B1SaturnCoefficients);
  unint64_t v6 = &g_B1SaturnCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_B2SaturnCoefficients);
  int v9 = &g_B2SaturnCoefficients;
  double v10 = 0.0;
  do
  {
    double v11 = *(double *)v9;
    double v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_B3SaturnCoefficients);
  double v12 = 0.0;
  unint64_t v13 = &g_B3SaturnCoefficients;
  do
  {
    double v14 = *(double *)v13;
    double v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_B4SaturnCoefficients);
  double v15 = 0.0;
  char v16 = &g_B4SaturnCoefficients;
  do
  {
    double v17 = *(double *)v16;
    double v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_B5SaturnCoefficients);
  double v18 = 0.0;
  int v19 = &g_B5SaturnCoefficients;
  do
  {
    double v20 = *(double *)v19;
    double v18 = v18 + v20 * cos(*((double *)v19 + 1) + *((double *)v19 + 2) * v2);
    v19 += 3;
  }
  while (v19 != &g_R0SaturnCoefficients);
  fmod((v4+ v7 * v2+ v10 * (v2 * v2)+ v12 * (v2 * (v2 * v2))+ v15 * (v2 * (v2 * (v2 * v2)))+ v18 * (v2 * (v2 * (v2 * (v2 * v2)))))/ 100000000.0* 57.2957795, 360.0);
}

double CAASaturn::RadiusVector(CAASaturn *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  int v3 = &g_R0SaturnCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_R1SaturnCoefficients);
  unint64_t v6 = &g_R1SaturnCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_R2SaturnCoefficients);
  int v9 = &g_R2SaturnCoefficients;
  double v10 = 0.0;
  do
  {
    double v11 = *(double *)v9;
    double v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_R3SaturnCoefficients);
  double v12 = 0.0;
  unint64_t v13 = &g_R3SaturnCoefficients;
  do
  {
    double v14 = *(double *)v13;
    double v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_R4SaturnCoefficients);
  double v15 = 0.0;
  char v16 = &g_R4SaturnCoefficients;
  do
  {
    double v17 = *(double *)v16;
    double v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_R5SaturnCoefficients);
  double v18 = 0.0;
  int v19 = &g_R5SaturnCoefficients;
  do
  {
    double v20 = *(double *)v19;
    double v18 = v18 + v20 * cos(*((double *)v19 + 1) + *((double *)v19 + 2) * v2);
    v19 += 3;
  }
  while (v19 != &qword_18A5CE268);
  return (v4
        + v7 * v2
        + v10 * (v2 * v2)
        + v12 * (v2 * (v2 * v2))
        + v15 * (v2 * (v2 * (v2 * v2)))
        + v18 * (v2 * (v2 * (v2 * (v2 * v2)))))
       / 100000000.0;
}

long double CAASun::VariationGeometricEclipticLongitude(CAASun *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  long double v3 = sin((v2 * 359993.729 + 87.5287) * 0.0174532925) * 118.568 + 3548.193;
  long double v4 = v3 + sin((v2 * 719987.457 + 85.0561) * 0.0174532925) * 2.476;
  long double v5 = v4 + sin((v2 * 4452671.12 + 27.8502) * 0.0174532925) * 1.376;
  long double v6 = v5 + sin((v2 * 450368.856 + 73.1375) * 0.0174532925) * 0.119;
  long double v7 = v6 + sin((v2 * 329644.672 + 337.2264) * 0.0174532925) * 0.114;
  long double v8 = v7 + sin((v2 * 659289.344 + 222.54) * 0.0174532925) * 0.086;
  long double v9 = v8 + sin((v2 * 9224659.79 + 162.8136) * 0.0174532925) * 0.078;
  long double v10 = v9 + sin((v2 * 1079981.19 + 82.5823) * 0.0174532925) * 0.054;
  long double v11 = v10 + sin((v2 * 225184.428 + 171.5189) * 0.0174532925) * 0.052;
  long double v12 = v11 + sin((v2 * 4092677.39 + 30.3214) * 0.0174532925) * 0.034;
  long double v13 = v12 + sin((v2 * 337181.471 + 119.8105) * 0.0174532925) * 0.033;
  long double v14 = v13 + sin((v2 * 299295.615 + 247.5418) * 0.0174532925) * 0.023;
  long double v15 = v14 + sin((v2 * 315559.556 + 325.1526) * 0.0174532925) * 0.023;
  long double v16 = v15 + sin((v2 * 675553.285 + 155.1241) * 0.0174532925) * 0.021;
  long double v17 = v16 + v2 * 7.311 * sin((v2 * 359993.729 + 333.4515) * 0.0174532925);
  long double v18 = v17 + v2 * 0.305 * sin((v2 * 719987.457 + 330.9814) * 0.0174532925);
  long double v19 = v18 + v2 * 0.01 * sin((v2 * 1079981.19 + 328.517) * 0.0174532925);
  long double v20 = v19 + v2 * v2 * 0.309 * sin((v2 * 359993.729 + 241.4518) * 0.0174532925);
  long double v21 = v20 + v2 * v2 * 0.021 * sin((v2 * 719987.457 + 205.0482) * 0.0174532925);
  long double v22 = v21 + v2 * v2 * 0.004 * sin((v2 * 4452671.12 + 297.861) * 0.0174532925);
  return v22 + v2 * (v2 * v2) * 0.01 * sin((v2 * 359993.729 + 154.7066) * 0.0174532925);
}

double CAASun::EquatorialRectangularCoordinatesMeanEquinox(CAASun *this, double a2)
{
  long double v4 = CAASun::GeometricFK5EclipticLongitude(this, a2);
  double cosval = __sincos_stret(v4 * 0.0174532925).__cosval;
  double v6 = CAASun::GeometricFK5EclipticLatitude(this, a2);
  double v7 = __sincos_stret(v6 * 0.0174532925).__cosval;
  double v8 = CAAEarth::RadiusVector(this, a2);
  double v9 = (a2 + -2451545.0) / 3652500.0;
  double v10 = v9 * (v9 * v9);
  double v11 = v9 * (v9 * v10);
  double v12 = v9 * (v9 * v11);
  __sincos_stret((v9 * -1.30025833+ 23.4392911+ v9 * v9 * -0.000430555556+ v10 * 0.555347222+ v9 * v10 * -0.0142722222+ v11 * -0.0693527778+ v9 * v11 * -0.0108472222+ v12 * 0.00197777778+ v9 * v12 * 0.00774166667+ v9 * (v9 * v12) * 0.00160833333+ v9 * (v9 * (v9 * v12)) * 0.000680555556)* 0.0174532925);
  return cosval * (v8 * v7);
}

void CAAMars::EclipticLongitude(CAAMars *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  long double v3 = &g_L0MarsCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_L1MarsCoefficients);
  double v6 = &g_L1MarsCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_L2MarsCoefficients);
  double v9 = &g_L2MarsCoefficients;
  double v10 = 0.0;
  do
  {
    double v11 = *(double *)v9;
    double v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_L3MarsCoefficients);
  double v12 = 0.0;
  long double v13 = &g_L3MarsCoefficients;
  do
  {
    double v14 = *(double *)v13;
    double v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_L4MarsCoefficients);
  double v15 = 0.0;
  long double v16 = &g_L4MarsCoefficients;
  do
  {
    double v17 = *(double *)v16;
    double v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_L5MarsCoefficients);
  double v18 = 0.0;
  long double v19 = &g_L5MarsCoefficients;
  do
  {
    double v20 = *(double *)v19;
    double v18 = v18 + v20 * cos(*((double *)v19 + 1) + *((double *)v19 + 2) * v2);
    v19 += 3;
  }
  while (v19 != &g_B0MarsCoefficients);
  fmod((v4+ v7 * v2+ v10 * (v2 * v2)+ v12 * (v2 * (v2 * v2))+ v15 * (v2 * (v2 * (v2 * v2)))+ v18 * (v2 * (v2 * (v2 * (v2 * v2)))))/ 100000000.0* 57.2957795, 360.0);
}

void CAAMars::EclipticLatitude(CAAMars *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  long double v3 = &g_B0MarsCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_B1MarsCoefficients);
  double v6 = &g_B1MarsCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_B2MarsCoefficients);
  double v9 = &g_B2MarsCoefficients;
  double v10 = 0.0;
  do
  {
    double v11 = *(double *)v9;
    double v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_B3MarsCoefficients);
  double v12 = 0.0;
  long double v13 = &g_B3MarsCoefficients;
  do
  {
    double v14 = *(double *)v13;
    double v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_B4MarsCoefficients);
  double v15 = 0.0;
  long double v16 = &g_B4MarsCoefficients;
  do
  {
    double v17 = *(double *)v16;
    double v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_R0MarsCoefficients);
  fmod((v4 + v7 * v2 + v10 * (v2 * v2) + v12 * (v2 * (v2 * v2)) + v15 * (v2 * (v2 * (v2 * v2)))) / 100000000.0 * 57.2957795, 360.0);
}

double CAAMars::RadiusVector(CAAMars *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  long double v3 = &g_R0MarsCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_R1MarsCoefficients);
  double v6 = &g_R1MarsCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_R2MarsCoefficients);
  double v9 = 0.0;
  double v10 = &g_R2MarsCoefficients;
  do
  {
    double v11 = *(double *)v10;
    double v9 = v9 + v11 * cos(*((double *)v10 + 1) + *((double *)v10 + 2) * v2);
    v10 += 3;
  }
  while (v10 != &g_R3MarsCoefficients);
  double v12 = 0.0;
  long double v13 = &g_R3MarsCoefficients;
  do
  {
    double v14 = *(double *)v13;
    double v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_R4MarsCoefficients);
  double v15 = 0.0;
  long double v16 = &g_R4MarsCoefficients;
  do
  {
    double v17 = *(double *)v16;
    double v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &qword_18A5D0110);
  return (v4 + v7 * v2 + v9 * (v2 * v2) + v12 * (v2 * (v2 * v2)) + v15 * (v2 * (v2 * (v2 * v2)))) / 100000000.0;
}

void CAAJupiter::EclipticLongitude(CAAJupiter *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  long double v3 = &g_L0JupiterCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_L1JupiterCoefficients);
  double v6 = &g_L1JupiterCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_L2JupiterCoefficients);
  double v9 = &g_L2JupiterCoefficients;
  double v10 = 0.0;
  do
  {
    double v11 = *(double *)v9;
    double v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_L3JupiterCoefficients);
  double v12 = 0.0;
  long double v13 = &g_L3JupiterCoefficients;
  do
  {
    double v14 = *(double *)v13;
    double v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_L4JupiterCoefficients);
  double v15 = 0.0;
  long double v16 = &g_L4JupiterCoefficients;
  do
  {
    double v17 = *(double *)v16;
    double v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_L5JupiterCoefficients);
  double v18 = 0.0;
  long double v19 = &g_L5JupiterCoefficients;
  do
  {
    double v20 = *(double *)v19;
    double v18 = v18 + v20 * cos(*((double *)v19 + 1) + *((double *)v19 + 2) * v2);
    v19 += 3;
  }
  while (v19 != &g_B0JupiterCoefficients);
  fmod((v4+ v7 * v2+ v10 * (v2 * v2)+ v12 * (v2 * (v2 * v2))+ v15 * (v2 * (v2 * (v2 * v2)))+ v18 * (v2 * (v2 * (v2 * (v2 * v2)))))/ 100000000.0* 57.2957795, 360.0);
}

void CAAJupiter::EclipticLatitude(CAAJupiter *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  long double v3 = &g_B0JupiterCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_B1JupiterCoefficients);
  double v6 = &g_B1JupiterCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_B2JupiterCoefficients);
  double v9 = &g_B2JupiterCoefficients;
  double v10 = 0.0;
  do
  {
    double v11 = *(double *)v9;
    double v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_B3JupiterCoefficients);
  double v12 = 0.0;
  long double v13 = &g_B3JupiterCoefficients;
  do
  {
    double v14 = *(double *)v13;
    double v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_B4JupiterCoefficients);
  double v15 = 0.0;
  long double v16 = &g_B4JupiterCoefficients;
  do
  {
    double v17 = *(double *)v16;
    double v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_R0JupiterCoefficients);
  long double v18 = cos(v2 * 522.58 + 0.09);
  fmod((v4+ v7 * v2+ v10 * (v2 * v2)+ v12 * (v2 * (v2 * v2))+ v15 * (v2 * (v2 * (v2 * v2)))+ (v18 + 0.0) * (v2 * (v2 * (v2 * (v2 * v2)))))/ 100000000.0* 57.2957795, 360.0);
}

double CAAJupiter::RadiusVector(CAAJupiter *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  long double v3 = &g_R0JupiterCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_R1JupiterCoefficients);
  double v6 = &g_R1JupiterCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_R2JupiterCoefficients);
  double v9 = &g_R2JupiterCoefficients;
  double v10 = 0.0;
  do
  {
    double v11 = *(double *)v9;
    double v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_R3JupiterCoefficients);
  double v12 = 0.0;
  long double v13 = &g_R3JupiterCoefficients;
  do
  {
    double v14 = *(double *)v13;
    double v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_R4JupiterCoefficients);
  double v15 = 0.0;
  long double v16 = &g_R4JupiterCoefficients;
  do
  {
    double v17 = *(double *)v16;
    double v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_R5JupiterCoefficients);
  double v18 = 0.0;
  long double v19 = &g_R5JupiterCoefficients;
  do
  {
    double v20 = *(double *)v19;
    double v18 = v18 + v20 * cos(*((double *)v19 + 1) + *((double *)v19 + 2) * v2);
    v19 += 3;
  }
  while (v19 != &qword_18A5D2FF8);
  return (v4
        + v7 * v2
        + v10 * (v2 * v2)
        + v12 * (v2 * (v2 * v2))
        + v15 * (v2 * (v2 * (v2 * v2)))
        + v18 * (v2 * (v2 * (v2 * (v2 * v2)))))
       / 100000000.0;
}

void CAAVenus::EclipticLongitude(CAAVenus *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  long double v3 = &g_L0VenusCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_L1VenusCoefficients);
  double v6 = &g_L1VenusCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_L2VenusCoefficients);
  double v9 = &g_L2VenusCoefficients;
  double v10 = 0.0;
  do
  {
    double v11 = *(double *)v9;
    double v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_L3VenusCoefficients);
  double v12 = 0.0;
  long double v13 = &g_L3VenusCoefficients;
  do
  {
    double v14 = *(double *)v13;
    double v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_L4VenusCoefficients);
  double v15 = 0.0;
  long double v16 = &g_L4VenusCoefficients;
  do
  {
    double v17 = *(double *)v16;
    double v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_B0VenusCoefficients);
  long double v18 = cos(v2 * 0.0 + 3.14);
  fmod((v4+ v7 * v2+ v10 * (v2 * v2)+ v12 * (v2 * (v2 * v2))+ v15 * (v2 * (v2 * (v2 * v2)))+ (v18 + 0.0) * (v2 * (v2 * (v2 * (v2 * v2)))))/ 100000000.0* 57.2957795, 360.0);
}

void CAAVenus::EclipticLatitude(CAAVenus *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  long double v3 = &g_B0VenusCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_B1VenusCoefficients);
  double v6 = &g_B1VenusCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_B2VenusCoefficients);
  double v9 = &g_B2VenusCoefficients;
  double v10 = 0.0;
  do
  {
    double v11 = *(double *)v9;
    double v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_B3VenusCoefficients);
  double v12 = 0.0;
  long double v13 = &g_B3VenusCoefficients;
  do
  {
    double v14 = *(double *)v13;
    double v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_R0VenusCoefficients);
  long double v15 = cos(v2 * 10213.29 + 0.32);
  fmod((v4 + v7 * v2 + v10 * (v2 * v2) + v12 * (v2 * (v2 * v2)) + (v15 * 14.0 + 0.0) * (v2 * (v2 * (v2 * v2))))/ 100000000.0* 57.2957795, 360.0);
}

long double CAAVenus::RadiusVector(CAAVenus *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  long double v3 = &g_R0VenusCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_R1VenusCoefficients);
  double v6 = &g_R1VenusCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_R2VenusCoefficients);
  double v9 = 0.0;
  double v10 = &g_R2VenusCoefficients;
  do
  {
    double v11 = *(double *)v10;
    double v9 = v9 + v11 * cos(*((double *)v10 + 1) + *((double *)v10 + 2) * v2);
    v10 += 3;
  }
  while (v10 != &qword_18A5D4D50);
  long double v12 = cos(v2 * 10213.29 + 3.22) * 50.0 + 0.0;
  return (v4
        + v7 * v2
        + v9 * (v2 * v2)
        + v12 * (v2 * (v2 * v2))
        + (cos(v2 * 10213.29 + 0.92) + 0.0) * (v2 * (v2 * (v2 * v2))))
       / 100000000.0;
}

double CAADynamicalTime::CumulativeLeapSeconds(CAADynamicalTime *this, double a2)
{
  if (a2 < 2437300.5) {
    return 0.0;
  }
  if (a2 >= 2457754.5)
  {
    double v10 = a2 + -2400000.5 + -41317.0;
    double v9 = 37.0;
    double v11 = 0.0;
  }
  else
  {
    long double v3 = (double *)&g_LeapSecondCoefficients;
    unint64_t v4 = 41;
    do
    {
      unint64_t v5 = v4 >> 1;
      double v6 = &v3[4 * (v4 >> 1)];
      double v8 = *v6;
      double v7 = v6 + 4;
      v4 += ~(v4 >> 1);
      if (v8 > a2) {
        unint64_t v4 = v5;
      }
      else {
        long double v3 = v7;
      }
    }
    while (v4);
    double v9 = *(v3 - 3);
    double v10 = a2 + -2400000.5 - *(v3 - 2);
    double v11 = *(v3 - 1);
  }
  return v9 + v10 * v11;
}

void std::vector<CAARiseTransitSetDetails2>::push_back[abi:ne180100](void **a1, long long *a2)
{
  unint64_t v4 = (char *)a1[1];
  unint64_t v5 = (char *)a1[2];
  if (v4 >= v5)
  {
    unint64_t v9 = 0xCCCCCCCCCCCCCCCDLL * ((v4 - (unsigned char *)*a1) >> 3);
    unint64_t v10 = v9 + 1;
    if (v9 + 1 > 0x666666666666666) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v11 = 0xCCCCCCCCCCCCCCCDLL * ((v5 - (unsigned char *)*a1) >> 3);
    if (2 * v11 > v10) {
      unint64_t v10 = 2 * v11;
    }
    if (v11 >= 0x333333333333333) {
      unint64_t v12 = 0x666666666666666;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12) {
      unint64_t v12 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<CAARiseTransitSetDetails2>>(v12);
    }
    else {
      uint64_t v13 = 0;
    }
    unint64_t v14 = v12 + 40 * v9;
    unint64_t v15 = v12 + 40 * v13;
    long long v16 = *a2;
    long long v17 = a2[1];
    *(void *)(v14 + 32) = *((void *)a2 + 4);
    *(_OWORD *)unint64_t v14 = v16;
    *(_OWORD *)(v14 + 16) = v17;
    double v8 = (void *)(v14 + 40);
    long double v19 = (char *)*a1;
    long double v18 = (char *)a1[1];
    if (v18 != *a1)
    {
      do
      {
        long long v20 = *(_OWORD *)(v18 - 40);
        long long v21 = *(_OWORD *)(v18 - 24);
        *(unsigned char *)(v14 - 8) = *(v18 - 8);
        *(_OWORD *)(v14 - 24) = v21;
        *(_OWORD *)(v14 - 40) = v20;
        v14 -= 40;
        v18 -= 40;
      }
      while (v18 != v19);
      long double v18 = (char *)*a1;
    }
    *a1 = (void *)v14;
    a1[1] = v8;
    a1[2] = (void *)v15;
    if (v18) {
      operator delete(v18);
    }
  }
  else
  {
    long long v6 = *a2;
    long long v7 = a2[1];
    *((void *)v4 + 4) = *((void *)a2 + 4);
    *(_OWORD *)unint64_t v4 = v6;
    *((_OWORD *)v4 + 1) = v7;
    double v8 = v4 + 40;
  }
  a1[1] = v8;
}

void CAAPluto::EclipticLongitude(CAAPluto *this, double a2)
{
  uint64_t v2 = 0;
  double v3 = (a2 + -2451545.0) / 36525.0;
  double v4 = 0.0;
  unint64_t v5 = &dword_18A6227D8;
  do
  {
    double v6 = (v3 * 1222.1138 + 50.08) * (double)*(v5 - 1) + (double)*(v5 - 2) * (v3 * 3034.9057 + 34.35);
    int v7 = *v5;
    v5 += 3;
    double v8 = *(double *)((char *)&g_PlutoLongitudeCoefficients + v2);
    __double2 v9 = __sincos_stret((v6 + (double)v7 * (v3 * 144.96 + 238.96)) * 0.0174532925);
    double v4 = v4 + *(double *)((char *)&g_PlutoLongitudeCoefficients + v2 + 8) * v9.__cosval + v8 * v9.__sinval;
    v2 += 16;
  }
  while (v2 != 688);
  fmod(v3 * 144.96 + 238.958116 + v4 / 1000000.0, 360.0);
}

void CAAPluto::EclipticLatitude(CAAPluto *this, double a2)
{
  uint64_t v2 = 0;
  double v3 = (a2 + -2451545.0) / 36525.0;
  double v4 = v3 * 3034.9057 + 34.35;
  double v5 = v3 * 1222.1138 + 50.08;
  double v6 = v3 * 144.96 + 238.96;
  double v7 = 0.0;
  double v8 = &dword_18A6227D8;
  do
  {
    double v9 = v5 * (double)*(v8 - 1) + (double)*(v8 - 2) * v4;
    int v10 = *v8;
    v8 += 3;
    double v11 = *(double *)((char *)&g_PlutoLatitudeCoefficients + v2);
    __double2 v12 = __sincos_stret((v9 + (double)v10 * v6) * 0.0174532925);
    double v7 = v7 + *(double *)((char *)&g_PlutoLatitudeCoefficients + v2 + 8) * v12.__cosval + v11 * v12.__sinval;
    v2 += 16;
  }
  while (v2 != 688);
  fmod(v7 / 1000000.0 + -3.908239, 360.0);
}

double CAAPluto::RadiusVector(CAAPluto *this, double a2)
{
  uint64_t v2 = 0;
  double v3 = (a2 + -2451545.0) / 36525.0;
  double v4 = v3 * 3034.9057 + 34.35;
  double v5 = v3 * 1222.1138 + 50.08;
  double v6 = v3 * 144.96 + 238.96;
  double v7 = 0.0;
  double v8 = &dword_18A6227D8;
  do
  {
    double v9 = v5 * (double)*(v8 - 1) + (double)*(v8 - 2) * v4;
    int v10 = *v8;
    v8 += 3;
    double v11 = *(double *)((char *)&g_PlutoRadiusCoefficients + v2);
    __double2 v12 = __sincos_stret((v9 + (double)v10 * v6) * 0.0174532925);
    double v7 = v7 + *(double *)((char *)&g_PlutoRadiusCoefficients + v2 + 8) * v12.__cosval + v11 * v12.__sinval;
    v2 += 16;
  }
  while (v2 != 688);
  return v7 / 10000000.0 + 40.7241346;
}

void CAAMercury::EclipticLongitude(CAAMercury *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  double v3 = &g_L0MercuryCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_L1MercuryCoefficients);
  double v6 = &g_L1MercuryCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_L2MercuryCoefficients);
  double v9 = &g_L2MercuryCoefficients;
  double v10 = 0.0;
  do
  {
    double v11 = *(double *)v9;
    double v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_L3MercuryCoefficients);
  double v12 = 0.0;
  uint64_t v13 = &g_L3MercuryCoefficients;
  do
  {
    double v14 = *(double *)v13;
    double v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_L4MercuryCoefficients);
  double v15 = 0.0;
  long long v16 = &g_L4MercuryCoefficients;
  do
  {
    double v17 = *(double *)v16;
    double v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_B0MercuryCoefficients);
  long double v18 = cos(v2 * 0.0 + 3.14);
  fmod((v4+ v7 * v2+ v10 * (v2 * v2)+ v12 * (v2 * (v2 * v2))+ v15 * (v2 * (v2 * (v2 * v2)))+ (v18 + 0.0) * (v2 * (v2 * (v2 * (v2 * v2)))))/ 100000000.0* 57.2957795, 360.0);
}

void CAAMercury::EclipticLatitude(CAAMercury *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  double v3 = &g_B0MercuryCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_B1MercuryCoefficients);
  double v6 = &g_B1MercuryCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_B2MercuryCoefficients);
  double v9 = &g_B2MercuryCoefficients;
  double v10 = 0.0;
  do
  {
    double v11 = *(double *)v9;
    double v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_B3MercuryCoefficients);
  double v12 = 0.0;
  uint64_t v13 = &g_B3MercuryCoefficients;
  do
  {
    double v14 = *(double *)v13;
    double v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_B4MercuryCoefficients);
  double v15 = 0.0;
  long long v16 = &g_B4MercuryCoefficients;
  do
  {
    double v17 = *(double *)v16;
    double v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_R0MercuryCoefficients);
  fmod((v4 + v7 * v2 + v10 * (v2 * v2) + v12 * (v2 * (v2 * v2)) + v15 * (v2 * (v2 * (v2 * v2)))) / 100000000.0 * 57.2957795, 360.0);
}

double CAAMercury::RadiusVector(CAAMercury *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  double v3 = &g_R0MercuryCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_R1MercuryCoefficients);
  double v6 = &g_R1MercuryCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_R2MercuryCoefficients);
  double v9 = 0.0;
  double v10 = &g_R2MercuryCoefficients;
  do
  {
    double v11 = *(double *)v10;
    double v9 = v9 + v11 * cos(*((double *)v10 + 1) + *((double *)v10 + 2) * v2);
    v10 += 3;
  }
  while (v10 != &g_R3MercuryCoefficients);
  double v12 = 0.0;
  uint64_t v13 = &g_R3MercuryCoefficients;
  do
  {
    double v14 = *(double *)v13;
    double v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &qword_18A624068);
  return (v4 + v7 * v2 + v9 * (v2 * v2) + v12 * (v2 * (v2 * v2))) / 100000000.0;
}

void CAANeptune::EclipticLongitude(CAANeptune *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  double v3 = &g_L0NeptuneCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_L1NeptuneCoefficients);
  double v6 = &g_L1NeptuneCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_L2NeptuneCoefficients);
  double v9 = &g_L2NeptuneCoefficients;
  double v10 = 0.0;
  do
  {
    double v11 = *(double *)v9;
    double v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_L3NeptuneCoefficients);
  double v12 = 0.0;
  uint64_t v13 = &g_L3NeptuneCoefficients;
  do
  {
    double v14 = *(double *)v13;
    double v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_B0NeptuneCoefficients);
  long double v15 = cos(v2 * 0.0 + 3.142);
  fmod((v4 + v7 * v2 + v10 * (v2 * v2) + v12 * (v2 * (v2 * v2)) + (v15 * 114.0 + 0.0) * (v2 * (v2 * (v2 * v2))))/ 100000000.0* 57.2957795, 360.0);
}

void CAANeptune::EclipticLatitude(CAANeptune *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  double v3 = &g_B0NeptuneCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_B1NeptuneCoefficients);
  double v6 = &g_B1NeptuneCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_B2NeptuneCoefficients);
  double v9 = &g_B2NeptuneCoefficients;
  double v10 = 0.0;
  do
  {
    double v11 = *(double *)v9;
    double v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_B3NeptuneCoefficients);
  double v12 = 0.0;
  uint64_t v13 = &g_B3NeptuneCoefficients;
  do
  {
    double v14 = *(double *)v13;
    double v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_R0NeptuneCoefficients);
  long double v15 = cos(v2 * 38.13 + 2.67);
  fmod((v4 + v7 * v2 + v10 * (v2 * v2) + v12 * (v2 * (v2 * v2)) + (v15 * 6.0 + 0.0) * (v2 * (v2 * (v2 * v2))))/ 100000000.0* 57.2957795, 360.0);
}

long double CAANeptune::RadiusVector(CAANeptune *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  double v3 = &g_R0NeptuneCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_R1NeptuneCoefficients);
  double v6 = &g_R1NeptuneCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_R2NeptuneCoefficients);
  double v9 = 0.0;
  double v10 = &g_R2NeptuneCoefficients;
  do
  {
    double v11 = *(double *)v10;
    double v9 = v9 + v11 * cos(*((double *)v10 + 1) + *((double *)v10 + 2) * v2);
    v10 += 3;
  }
  while (v10 != &qword_18A624F90);
  return (v4 + v7 * v2 + v9 * (v2 * v2) + (cos(v2 * 38.133 + 4.552) * 166.0 + 0.0) * (v2 * (v2 * v2))) / 100000000.0;
}

double CAADate::FractionalYear(CAADate *this)
{
  double v12 = 0;
  uint64_t v9 = 0;
  CAADate::Get(this, (uint64_t *)&v12, &v11, &v10, &v9, &v8, &v7);
  if (*((unsigned char *)this + 8))
  {
    if (__ROR8__(0x8F5C28F5C28F5C29 * (void)v12 + 0x51EB851EB851EB8, 2) <= 0x28F5C28F5C28F5CuLL)
    {
      uint64_t v2 = (uint64_t)v12 % 400;
    }
    else if ((uint64_t)v12 <= 0)
    {
      uint64_t v2 = -(-(uint64_t)v12 & 3);
    }
    else
    {
      uint64_t v2 = v12 & 3;
    }
  }
  else
  {
    uint64_t v2 = v12 & 3;
  }
  double v3 = dbl_18A624FF0[v2 == 0];
  double v4 = (double)(uint64_t)v12;
  double v5 = *(double *)this;
  return (v5 - CAADate::DateToJD(v12, 1, (uint64_t)v12 > 1582, 1.0)) / v3 + v4;
}

void CAAUranus::EclipticLongitude(CAAUranus *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  double v3 = &g_L0UranusCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_L1UranusCoefficients);
  double v6 = &g_L1UranusCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_L2UranusCoefficients);
  uint64_t v9 = &g_L2UranusCoefficients;
  double v10 = 0.0;
  do
  {
    double v11 = *(double *)v9;
    double v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_L3UranusCoefficients);
  double v12 = 0.0;
  uint64_t v13 = &g_L3UranusCoefficients;
  do
  {
    double v14 = *(double *)v13;
    double v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_L4UranusCoefficients);
  double v15 = 0.0;
  long long v16 = &g_L4UranusCoefficients;
  do
  {
    double v17 = *(double *)v16;
    double v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_B0UranusCoefficients);
  fmod((v4 + v7 * v2 + v10 * (v2 * v2) + v12 * (v2 * (v2 * v2)) + v15 * (v2 * (v2 * (v2 * v2)))) / 100000000.0 * 57.2957795, 360.0);
}

void CAAUranus::EclipticLatitude(CAAUranus *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  double v3 = &g_B0UranusCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_B1UranusCoefficients);
  double v6 = &g_B1UranusCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_B2UranusCoefficients);
  uint64_t v9 = &g_B2UranusCoefficients;
  double v10 = 0.0;
  do
  {
    double v11 = *(double *)v9;
    double v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_B3UranusCoefficients);
  double v12 = 0.0;
  uint64_t v13 = &g_B3UranusCoefficients;
  do
  {
    double v14 = *(double *)v13;
    double v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_R0UranusCoefficients);
  long double v15 = cos(v2 * 74.78 + 2.85);
  fmod((v4 + v7 * v2 + v10 * (v2 * v2) + v12 * (v2 * (v2 * v2)) + (v15 * 6.0 + 0.0) * (v2 * (v2 * (v2 * v2))))/ 100000000.0* 57.2957795, 360.0);
}

double CAAUranus::RadiusVector(CAAUranus *this, double a2)
{
  double v2 = (a2 + -2451545.0) / 365250.0;
  double v3 = &g_R0UranusCoefficients;
  double v4 = 0.0;
  do
  {
    double v5 = *(double *)v3;
    double v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_R1UranusCoefficients);
  double v6 = &g_R1UranusCoefficients;
  double v7 = 0.0;
  do
  {
    double v8 = *(double *)v6;
    double v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_R2UranusCoefficients);
  double v9 = 0.0;
  double v10 = &g_R2UranusCoefficients;
  do
  {
    double v11 = *(double *)v10;
    double v9 = v9 + v11 * cos(*((double *)v10 + 1) + *((double *)v10 + 2) * v2);
    v10 += 3;
  }
  while (v10 != &g_R3UranusCoefficients);
  double v12 = 0.0;
  uint64_t v13 = &g_R3UranusCoefficients;
  do
  {
    double v14 = *(double *)v13;
    double v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_R4UranusCoefficients);
  double v15 = 0.0;
  long long v16 = &g_R4UranusCoefficients;
  do
  {
    double v17 = *(double *)v16;
    double v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != (uint64_t *)"@(#)PROGRAM:Gloria  PROJECT:GeoServices-\n");
  return (v4 + v7 * v2 + v9 * (v2 * v2) + v12 * (v2 * (v2 * v2)) + v15 * (v2 * (v2 * (v2 * v2)))) / 100000000.0;
}

void gloria::DbReaderDisk::absolutePath(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
}

void std::default_delete<std::string>::operator()[abi:ne180100](uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    JUMPOUT(0x18C11F580);
  }
}

void gloria::BinarySearchStrategy::~BinarySearchStrategy(gloria::BinarySearchStrategy *this)
{
}

uint64_t gloria::SHA1Fn::Hash(uint64_t a1, const void **a2)
{
  double v2 = a2;
  v4[3] = *MEMORY[0x1E4F143B8];
  if (*((char *)a2 + 23) < 0)
  {
    double v2 = *a2;
    a2 = (const void **)a2[1];
  }
  else
  {
    LODWORD(a2) = *((unsigned __int8 *)a2 + 23);
  }
  CC_SHA1(v2, (CC_LONG)a2, (unsigned __int8 *)v4);
  return v4[0];
}

void gloria::SHA1Fn::Hash()
{
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "Resetting the seed is not supported for SHA1!");
  __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
}

void sub_1891B4BF4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void gloria::SHA1Fn::~SHA1Fn(gloria::SHA1Fn *this)
{
}

void std::__shared_ptr_emplace<gloria::DbReaderDisk>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1ED518860;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<gloria::DbReaderDisk>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1ED518860;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x18C11F580);
}

void gloria::Shard::From(gloria::Shard *this@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t **a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  uint64_t v5 = *((void *)this + 20);
  if (*(int *)(v5 + 76) >= 1)
  {
    double v9 = 0;
    double v10 = a4 + 2;
    uint64_t v11 = 1;
    do
    {
      uint64_t v12 = (a2 + v11 * a3) % *(void *)(v5 + 80);
      if (v12 >= 0) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = -v12;
      }
      if ((unint64_t)v9 >= *v10)
      {
        double v15 = *a4;
        uint64_t v16 = v9 - *a4;
        unint64_t v17 = v16 + 1;
        if ((unint64_t)(v16 + 1) >> 61) {
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v18 = *v10 - (void)v15;
        if (v18 >> 2 > v17) {
          unint64_t v17 = v18 >> 2;
        }
        if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v19 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v19 = v17;
        }
        if (v19)
        {
          long long v20 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(a4 + 2), v19);
          double v15 = *a4;
          double v9 = a4[1];
        }
        else
        {
          long long v20 = 0;
        }
        long long v21 = (uint64_t *)&v20[8 * v16];
        *long long v21 = v13;
        double v14 = v21 + 1;
        while (v9 != v15)
        {
          uint64_t v22 = *--v9;
          *--long long v21 = v22;
        }
        *a4 = v21;
        a4[1] = v14;
        a4[2] = (uint64_t *)&v20[8 * v19];
        if (v15) {
          operator delete(v15);
        }
      }
      else
      {
        uint64_t *v9 = v13;
        double v14 = v9 + 1;
      }
      a4[1] = v14;
      uint64_t v5 = *((void *)this + 20);
      double v9 = v14;
    }
    while (v11++ < *(int *)(v5 + 76));
  }
}

void sub_1891B4DEC(_Unwind_Exception *exception_object)
{
  double v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

unint64_t gloria::Shard::BloomGet(gloria::Shard *this, unint64_t a2, char a3)
{
  uint64_t v4 = *(unsigned int *)(*((void *)this + 20) + 88);
  char v8 = 1;
  int v9 = 0;
  double v10 = (unsigned __int8 *)&str_5;
  uint64_t v11 = 0;
  (***((void (****)(void **__return_ptr))this + 2))(v6);
  if (v7 < 0) {
    operator delete(v6[1]);
  }
  return ((v4 << a3) & (unint64_t)*v10) >> a3;
}

BOOL gloria::Shard::Has(gloria::Shard *this, void *a2)
{
  uint64_t v2 = *((void *)this + 20);
  if (*(int *)(v2 + 76) < 1) {
    return 1;
  }
  uint64_t v5 = 0;
  do
  {
    unint64_t v6 = gloria::Shard::BloomGet(this, ((double)(unint64_t)(*(void *)(*a2 + 8 * v5) * *(int *)(v2 + 12)) * 0.125), ((*(unsigned char *)(v2 + 92) - 1) & *(void *)(*a2 + 8 * v5))* *(_DWORD *)(v2 + 12));
    BOOL result = v6 != 0;
    if (!v6) {
      break;
    }
    ++v5;
    uint64_t v2 = *((void *)this + 20);
  }
  while (v5 < *(int *)(v2 + 76));
  return result;
}

BOOL gloria::Shard::BloomFilterHas(gloria::Shard *this, uint64_t a2, uint64_t a3)
{
  gloria::Shard::From(this, a2, a3, (uint64_t **)&v9);
  std::string __p = 0;
  char v7 = 0;
  uint64_t v8 = 0;
  std::vector<unsigned long long>::__init_with_size[abi:ne180100]<unsigned long long *,unsigned long long *>(&__p, v9, (uint64_t)v10, (v10 - (unsigned char *)v9) >> 3);
  BOOL v4 = gloria::Shard::Has(this, &__p);
  if (__p)
  {
    char v7 = __p;
    operator delete(__p);
  }
  if (v9)
  {
    double v10 = v9;
    operator delete(v9);
  }
  return v4;
}

void sub_1891B4FF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  if (a12) {
    operator delete(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::pair<int const,gloria::ShardInfo>::~pair(uint64_t a1)
{
  if (*(char *)(a1 + 103) < 0) {
    operator delete(*(void **)(a1 + 80));
  }
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*(void **)(a1 + 56));
  }
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 24);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  return a1;
}

void gloria::ShardInfo::~ShardInfo(void **this)
{
  if (*((char *)this + 95) < 0) {
    operator delete(this[9]);
  }
  if (*((char *)this + 71) < 0) {
    operator delete(this[6]);
  }
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
  uint64_t v2 = (std::__shared_weak_count *)this[2];
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
}

uint64_t gloria::ShardManager::ListIndexRecord(uint64_t a1, uint64_t a2, void (****a3)(uint64_t *__return_ptr), std::vector<std::string> *this, std::vector<std::string>::size_type __sz)
{
  void (***v14)(uint64_t *__return_ptr);
  uint64_t v17;
  void *__p;
  uint64_t v19;
  char v20;
  char v21;
  int v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  std::vector<std::string>::size_type v26;

  std::vector<std::string>::resize(this, __sz);
  int v9 = (*(uint64_t (**)(void))(**(void **)(a2 + 32) + 16))(*(void *)(a2 + 32));
  if (__sz)
  {
    std::vector<std::string>::size_type v10 = 0;
    uint64_t v11 = (*(_DWORD *)(a2 + 48) + v9);
    unsigned int v12 = 1;
    do
    {
      std::vector<std::string>::pointer begin = this->__begin_;
      long long v21 = 1;
      uint64_t v22 = 0;
      BOOL v23 = &str_5;
      uint64_t v24 = 0;
      double v14 = *a3;
      int v25 = v11;
      int v26 = v10 * v11;
      (**v14)(&v17);
      if (!v17) {
        MEMORY[0x18C11F1D0](&begin[v10], v23, v24);
      }
      if (v20 < 0) {
        operator delete(__p);
      }
      std::vector<std::string>::size_type v10 = v12++;
    }
    while (v10 < __sz);
  }
  LOBYTE(v17) = 1;
  HIDWORD(v17) = 0;
  std::string __p = &str_5;
  unint64_t v19 = 0;
  return gloria::Status::Status(a1, 0, (uint64_t)&v17);
}

void sub_1891B5250(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void gloria::ShardManager::DoListKeys(uint64_t a1@<X0>, const gloria::Shard *a2@<X1>, std::vector<std::string> *a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  gloria::ShardManager::CheckShardInitialization(a2, (uint64_t)&v15);
  if (v15)
  {
    gloria::Status::Status(a5, (uint64_t)&v15);
  }
  else
  {
    memset(&v14, 0, sizeof(v14));
    gloria::ShardManager::ListIndexRecord((uint64_t)v11, a1, (void (****)(uint64_t *__return_ptr))a2, &v14, a4);
    if (v13 < 0) {
      operator delete(__p);
    }
    std::vector<std::string>::resize(a3, a4);
    if (v14.__begin_ != v14.__end_)
    {
      (*(void (**)(void))(**(void **)(a1 + 32) + 24))(*(void *)(a1 + 32));
      operator new();
    }
    LOBYTE(v10[0]) = 1;
    HIDWORD(v10[0]) = 0;
    v10[1] = (void **)&str_5;
    std::string v10[2] = 0;
    gloria::Status::Status(a5, 0, (uint64_t)v10);
    v10[0] = (void **)&v14;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](v10);
  }
  if (v17 < 0) {
    operator delete(v16);
  }
}

void sub_1891B542C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  a9 = &a16;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a9);
  if (a25 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void gloria::Record::ReadFrom(void *a1, uint64_t a2)
{
  std::string::size_type v4 = (*(uint64_t (**)(void))(*(void *)*a1 + 16))(*a1);
  std::string::basic_string(&v7, (const std::string *)a2, 0, v4, (std::allocator<char> *)&v6);
  if (*(char *)(a2 + 23) >= 0) {
    std::string::size_type v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    std::string::size_type v5 = *(void *)(a2 + 8);
  }
  std::string::basic_string(&v6, (const std::string *)a2, v4, v5, (std::allocator<char> *)&v8);
  (**(void (***)(void, std::string *))*a1)(*a1, &v7);
  (**(void (***)(void, std::string *))a1[1])(a1[1], &v6);
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
}

void sub_1891B55C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void gloria::ShardManager::DoReadValues(uint64_t a1@<X0>, const gloria::Shard *a2@<X1>, uint64_t a3@<X2>, std::vector<std::string>::size_type a4@<X3>, uint64_t a5@<X8>)
{
  gloria::ShardManager::CheckShardInitialization(a2, (uint64_t)&v15);
  if (v15)
  {
    gloria::Status::Status(a5, (uint64_t)&v15);
  }
  else
  {
    memset(&v14, 0, sizeof(v14));
    gloria::ShardManager::ListIndexRecord((uint64_t)v11, a1, (void (****)(uint64_t *__return_ptr))a2, &v14, a4);
    if (v13 < 0) {
      operator delete(__p);
    }
    std::vector<gloria::Slice>::resize(a3, a4);
    if (v14.__begin_ != v14.__end_)
    {
      (*(void (**)(void))(**(void **)(a1 + 32) + 24))(*(void *)(a1 + 32));
      operator new();
    }
    LOBYTE(v10[0]) = 1;
    HIDWORD(v10[0]) = 0;
    v10[1] = &str_5;
    std::string v10[2] = 0;
    gloria::Status::Status(a5, 0, (uint64_t)v10);
    v10[0] = &v14;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)v10);
  }
  if (v17 < 0) {
    operator delete(v16);
  }
}

void sub_1891B5838(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::string __p = &a30;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  if (*(char *)(v30 - 89) < 0) {
    operator delete(*(void **)(v30 - 112));
  }
  _Unwind_Resume(a1);
}

void std::vector<gloria::Slice>::resize(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3);
  BOOL v3 = a2 >= v2;
  unint64_t v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    std::vector<gloria::Slice>::__append((void **)a1, v4);
  }
  else if (!v3)
  {
    *(void *)(a1 + 8) = *(void *)a1 + 24 * a2;
  }
}

void gloria::ShardManager::DoRandomKey(uint64_t a1@<X0>, const gloria::Shard *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  gloria::ShardManager::CheckShardInitialization(a2, (uint64_t)&v14);
  if (v14)
  {
    gloria::Status::Status(a4, (uint64_t)&v14);
  }
  else
  {
    int v8 = (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 16))(*(void *)(a1 + 32));
    uint64_t v9 = *(void *)(a1 + 48);
    unsigned int v10 = (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 16))(*(void *)(a1 + 32));
    unsigned int v11 = v9 + v8;
    uint64_t v12 = gloria::RandomUtils::Uniform<unsigned long long>(0, (*(void *)(*(void *)a2 + 24) - *(void *)(*(void *)a2 + 16)) / (int)v11 - 1);
    char v13 = *(void (****)(void, uint64_t *, uint64_t *, uint64_t))a2;
    uint64_t v17 = v10;
    uint64_t v18 = v12 * v11;
    (**v13)(v13, &v18, &v17, a3);
  }
  if (v16 < 0) {
    operator delete(__p);
  }
}

void sub_1891B5A50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t gloria::RandomUtils::Uniform<unsigned long long>(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  uint64_t v3 = a2 - a1;
  if (a2 != a1)
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29DEC0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_1EB29DEC0))
    {
      std::random_device::random_device[abi:ne180100]((std::random_device *)&_MergedGlobals_170);
      __cxa_atexit(MEMORY[0x1E4FBA228], &_MergedGlobals_170, &dword_188D96000);
      __cxa_guard_release(&qword_1EB29DEC0);
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29DEC8, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_1EB29DEC8))
    {
      unsigned int v9 = MEMORY[0x18C11F3F0](&_MergedGlobals_170);
      dword_1EB29DED0 = v9;
      uint64_t v10 = 1;
      for (uint64_t i = 7; i != 630; ++i)
      {
        int v12 = 1812433253 * (v9 ^ (v9 >> 30));
        unsigned int v9 = v12 + v10;
        *((_DWORD *)&_MergedGlobals_170 + i) = i + v12 - 6;
        ++v10;
      }
      qword_1EB29E890 = 0;
      __cxa_guard_release(&qword_1EB29DEC8);
    }
    unint64_t v4 = v3 + 1;
    if (v3 == -1)
    {
      std::__independent_bits_engine<std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>,unsigned long long>::__independent_bits_engine((uint64_t)v13, 0x40uLL);
      return std::__independent_bits_engine<std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>,unsigned long long>::__eval((uint64_t)v13);
    }
    else
    {
      unint64_t v5 = __clz(v4);
      uint64_t v6 = 63;
      if (((v4 << v5) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        uint64_t v6 = 64;
      }
      std::__independent_bits_engine<std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>,unsigned long long>::__independent_bits_engine((uint64_t)v13, v6 - v5);
      do
        unint64_t v7 = std::__independent_bits_engine<std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>,unsigned long long>::__eval((uint64_t)v13);
      while (v7 >= v4);
      v2 += v7;
    }
  }
  return v2;
}

void sub_1891B5BF0(_Unwind_Exception *a1)
{
}

uint64_t gloria::ShardManager::DoCount(uint64_t a1, const gloria::Shard ***a2)
{
  int v4 = (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 16))(*(void *)(a1 + 32));
  unint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  if (*a2 != v6)
  {
    uint64_t v7 = 0;
    uint64_t v8 = *(_DWORD *)(a1 + 48) + v4;
    while (1)
    {
      gloria::ShardManager::CheckShardInitialization(*v5, (uint64_t)&v11);
      int v9 = v11;
      if (!v11) {
        v7 += (*(void *)(*(void *)*v5 + 24) - *(void *)(*(void *)*v5 + 16)) / v8;
      }
      if (v13 < 0) {
        operator delete(__p);
      }
      if (v9) {
        break;
      }
      if (++v5 == v6) {
        return v7;
      }
    }
  }
  return 0;
}

uint64_t gloria::Offset64Value::ReadFrom(uint64_t result, uint64_t a2)
{
  if (*(char *)(a2 + 23) >= 0) {
    uint64_t v2 = (void *)a2;
  }
  else {
    uint64_t v2 = *(void **)a2;
  }
  *(void *)(result + 8) = *v2;
  return result;
}

double gloria::Offset64Value::WriteTo(uint64_t a1, uint64_t a2)
{
  memset(&v4, 0, sizeof(v4));
  *(void *)__s = *(void *)(a1 + 8);
  std::string::append(&v4, __s, 8uLL);
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
  double result = *(double *)&v4.__r_.__value_.__l.__data_;
  *(std::string *)a2 = v4;
  return result;
}

void sub_1891B5D74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t gloria::Offset64Value::Size(gloria::Offset64Value *this)
{
  return 8;
}

uint64_t gloria::RecordAttribute::clone(gloria::RecordAttribute *this)
{
  return 0;
}

void gloria::Offset64Value::~Offset64Value(gloria::Offset64Value *this)
{
}

void gloria::Record::~Record(gloria::Record *this)
{
  uint64_t v2 = *((void *)this + 1);
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  }
  uint64_t v3 = *(void *)this;
  *(void *)this = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
  }
}

void std::__shared_ptr_pointer<gloria::BasicShardHeader *,std::shared_ptr<gloria::BasicShardHeader>::__shared_ptr_default_delete<gloria::BasicShardHeader,gloria::BasicShardHeader>,std::allocator<gloria::BasicShardHeader>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x18C11F580);
}

uint64_t std::__shared_ptr_pointer<gloria::BasicShardHeader *,std::shared_ptr<gloria::BasicShardHeader>::__shared_ptr_default_delete<gloria::BasicShardHeader,gloria::BasicShardHeader>,std::allocator<gloria::BasicShardHeader>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void std::__shared_ptr_pointer<gloria::BloomShardHeader *,std::shared_ptr<gloria::BloomShardHeader>::__shared_ptr_default_delete<gloria::BloomShardHeader,gloria::BloomShardHeader>,std::allocator<gloria::BloomShardHeader>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x18C11F580);
}

uint64_t std::__shared_ptr_pointer<gloria::BloomShardHeader *,std::shared_ptr<gloria::BloomShardHeader>::__shared_ptr_default_delete<gloria::BloomShardHeader,gloria::BloomShardHeader>,std::allocator<gloria::BloomShardHeader>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 48))();
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<gloria::BloomShardHeader *,std::shared_ptr<gloria::BloomShardHeader>::__shared_ptr_default_delete<gloria::BloomShardHeader,gloria::BloomShardHeader>,std::allocator<gloria::BloomShardHeader>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void *std::vector<unsigned long long>::__init_with_size[abi:ne180100]<unsigned long long *,unsigned long long *>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = std::vector<unsigned long long>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1891B5FC8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<gloria::Slice>::__append(void **a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  uint64_t v7 = *(void **)(v4 - 8);
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - (unsigned char *)v7) >> 3) >= a2)
  {
    if (a2)
    {
      char v13 = &v7[3 * a2];
      do
      {
        *uint64_t v7 = 1;
        v7[1] = &str_5;
        v7[2] = 0;
        v7 += 3;
      }
      while (v7 != v13);
      uint64_t v7 = v13;
    }
    a1[1] = v7;
  }
  else
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * (((char *)v7 - (unsigned char *)*a1) >> 3);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0xAAAAAAAAAAAAAAALL) {
      std::vector<gloria::Slice>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v5 - (unsigned char *)*a1) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11) {
      int v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::TrafficDynamicTile::Flow>>(v4, v11);
    }
    else {
      int v12 = 0;
    }
    int v14 = &v12[24 * v8];
    int v15 = &v14[24 * a2];
    char v16 = v14;
    do
    {
      *(void *)char v16 = 1;
      *((void *)v16 + 1) = &str_5;
      *((void *)v16 + 2) = 0;
      v16 += 24;
    }
    while (v16 != v15);
    uint64_t v17 = &v12[24 * v11];
    unint64_t v19 = (char *)*a1;
    uint64_t v18 = (char *)a1[1];
    if (v18 != *a1)
    {
      do
      {
        long long v20 = *(_OWORD *)(v18 - 24);
        *((void *)v14 - 1) = *((void *)v18 - 1);
        *(_OWORD *)(v14 - 24) = v20;
        v14 -= 24;
        v18 -= 24;
      }
      while (v18 != v19);
      uint64_t v18 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v15;
    a1[2] = v17;
    if (v18)
    {
      operator delete(v18);
    }
  }
}

void std::vector<gloria::Slice>::__throw_length_error[abi:ne180100]()
{
}

std::random_device *std::random_device::random_device[abi:ne180100](std::random_device *a1)
{
  std::string::basic_string[abi:ne180100]<0>(&__token, "/dev/urandom");
  std::random_device::random_device(a1, &__token);
  if (SHIBYTE(__token.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__token.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_1891B61D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__independent_bits_engine<std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>,unsigned long long>::__independent_bits_engine(uint64_t result, unint64_t a2)
{
  *(void *)uint64_t result = &dword_1EB29DED0;
  *(void *)(result + 8) = a2;
  if ((a2 & 0x1F) != 0) {
    unint64_t v2 = (a2 >> 5) + 1;
  }
  else {
    unint64_t v2 = a2 >> 5;
  }
  unint64_t v3 = a2 / v2;
  *(void *)(result + 16) = a2 / v2;
  *(void *)(result + 24) = v2;
  unint64_t v4 = (-1 << (a2 / v2)) & 0x100000000;
  if (a2 / v2 >= 0x40) {
    unint64_t v4 = 0;
  }
  *(void *)(result + 40) = v4;
  if ((v4 ^ 0x100000000) > v4 / v2)
  {
    ++v2;
    unint64_t v3 = a2 / v2;
    *(void *)(result + 16) = a2 / v2;
    *(void *)(result + 24) = v2;
    if (a2 / v2 > 0x3F)
    {
      *(void *)(result + 32) = v2 + v3 * v2 - a2;
      *(void *)(result + 40) = 0;
      LODWORD(v3) = 64;
      goto LABEL_16;
    }
    *(void *)(result + 40) = (-1 << v3) & 0x100000000;
  }
  *(void *)(result + 32) = v2 + a2 / v2 * v2 - a2;
  if (v3 >= 0x3F)
  {
LABEL_16:
    *(void *)(result + 48) = 0;
    int v7 = -(int)v3;
    unsigned int v6 = -1;
    *(_DWORD *)(result + 56) = 0xFFFFFFFF >> v7;
    goto LABEL_17;
  }
  *(void *)(result + 48) = 0x80000000uLL >> v3 << (v3 + 1);
  unsigned int v5 = 0xFFFFFFFF >> -(char)v3;
  if (!v3) {
    unsigned int v5 = 0;
  }
  *(_DWORD *)(result + 56) = v5;
  if (v3 >= 0x1F) {
    unsigned int v6 = -1;
  }
  else {
    unsigned int v6 = 0xFFFFFFFF >> ~(_BYTE)v3;
  }
LABEL_17:
  *(_DWORD *)(result + 60) = v6;
  return result;
}

uint64_t std::__independent_bits_engine<std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>,unsigned long long>::__eval(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = 0;
    unint64_t v3 = 0;
    do
    {
      do
        std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>::result_type v4 = std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>::operator()(*(std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253> **)a1);
      while (*(void *)(a1 + 40) <= (unint64_t)v4);
      unint64_t v5 = *(void *)(a1 + 16);
      if (v5 >= 0x40) {
        uint64_t v6 = 0;
      }
      else {
        uint64_t v6 = v2 << v5;
      }
      uint64_t v2 = v6 + (*(_DWORD *)(a1 + 56) & v4);
      ++v3;
      unint64_t v7 = *(void *)(a1 + 32);
    }
    while (v3 < v7);
  }
  else
  {
    uint64_t v2 = 0;
    unint64_t v7 = 0;
  }
  for (; v7 < *(void *)(a1 + 24); ++v7)
  {
    do
      std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>::result_type v8 = std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>::operator()(*(std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253> **)a1);
    while (*(void *)(a1 + 48) <= (unint64_t)v8);
    unint64_t v9 = *(void *)(a1 + 16);
    if (v9 >= 0x3F) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = v2 << (v9 + 1);
    }
    uint64_t v2 = v10 + (*(_DWORD *)(a1 + 60) & v8);
  }
  return v2;
}

std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>::result_type std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>::operator()(std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253> *this)
{
  size_t i = this->__i_;
  size_t v2 = (i + 1) % 0x270;
  std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>::result_type v3 = this->__x_[(i + 397) % 0x270] ^ ((this->__x_[v2] & 0x7FFFFFFE | this->__x_[i] & 0x80000000) >> 1) ^ ((int)(this->__x_[v2] << 31) >> 31) & 0x9908B0DF;
  this->__x_[i] = v3;
  this->__i_ = v2;
  LODWORD(i) = ((v3 ^ (v3 >> 11)) << 7) & 0x9D2C5680 ^ v3 ^ (v3 >> 11);
  return (i << 15) & 0xEFC60000 ^ i ^ (((i << 15) & 0xEFC60000 ^ i) >> 18);
}

void *std::__tree<std::__value_type<int,gloria::ShardInfo>,std::__map_value_compare<int,std::__value_type<int,gloria::ShardInfo>,std::less<int>,true>,std::allocator<std::__value_type<int,gloria::ShardInfo>>>::_DetachedTreeCache::__detach_next(uint64_t a1)
{
  uint64_t result = *(void **)(a1 + 16);
  if (result)
  {
    std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>::result_type v3 = (void *)*result;
    if (*result == a1)
    {
      *uint64_t result = 0;
      while (1)
      {
        std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>::result_type v4 = (void *)result[1];
        if (!v4) {
          break;
        }
        do
        {
          uint64_t result = v4;
          std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>::result_type v4 = (void *)*v4;
        }
        while (v4);
      }
    }
    else
    {
      for (result[1] = 0; v3; std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>::result_type v3 = (void *)result[1])
      {
        do
        {
          uint64_t result = v3;
          std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>::result_type v3 = (void *)*v3;
        }
        while (v3);
      }
    }
  }
  return result;
}

uint64_t std::__tree<std::__value_type<int,gloria::ShardInfo>,std::__map_value_compare<int,std::__value_type<int,gloria::ShardInfo>,std::less<int>,true>,std::allocator<std::__value_type<int,gloria::ShardInfo>>>::_DetachedTreeCache::~_DetachedTreeCache[abi:ne180100](uint64_t a1)
{
  std::__tree<std::__value_type<int,gloria::ShardInfo>,std::__map_value_compare<int,std::__value_type<int,gloria::ShardInfo>,std::less<int>,true>,std::allocator<std::__value_type<int,gloria::ShardInfo>>>::destroy(*(void *)a1, *(void **)(a1 + 16));
  size_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>::result_type v3 = (void *)v2[2];
    if (v3)
    {
      do
      {
        size_t v2 = v3;
        std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>::result_type v3 = (void *)v3[2];
      }
      while (v3);
      *(void *)(a1 + 8) = v2;
    }
    std::__tree<std::__value_type<int,gloria::ShardInfo>,std::__map_value_compare<int,std::__value_type<int,gloria::ShardInfo>,std::less<int>,true>,std::allocator<std::__value_type<int,gloria::ShardInfo>>>::destroy(*(void *)a1, v2);
  }
  return a1;
}

void gloria::Lz4Decompressor::decompress(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a2 + 48);
  uint64_t v5 = *(int *)(a1 + 4);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  std::vector<char>::size_type v8 = *(unsigned int *)(v6 + v5);
  *(_DWORD *)(a1 + 4) = v5 + 4;
  size_t v9 = v7 - 4;
  if ((unint64_t)(v7 - 4) >> 31)
  {
    LOBYTE(v21.__begin_) = 1;
    HIDWORD(v21.__begin_) = 0;
    v21.__end_ = "Value size greater than INT_MAX. This should not happen. Unless database is corrupt.";
    v21.__end_cap_.__value_ = (char *)84;
    gloria::Status::Status(a3, 2, (uint64_t)&v21);
  }
  else
  {
    unint64_t v11 = (const uint8_t *)(v6 + 4);
    std::vector<char>::vector(&v21, v8);
    int v12 = compression_decode_buffer((uint8_t *)v21.__begin_, v8, v11, v9, 0, COMPRESSION_LZ4_RAW);
    if (v12 >= 1 && v8 == v12)
    {
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)uint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v4 = 0;
        *(unsigned char *)(v4 + 23) = 0;
      }
      std::string::resize((std::string *)v4, v8, 0);
      MEMORY[0x18C11F1D0](v4, v21.__begin_, v8);
      *(unsigned char *)(a2 + 56) = 0;
      int v14 = *(uint64_t **)(a2 + 48);
      int v15 = v14;
      if (*((char *)v14 + 23) < 0) {
        int v15 = (uint64_t *)*v14;
      }
      *(void *)(a2 + 8) = v15;
      if (*((char *)v14 + 23) < 0) {
        uint64_t v16 = v14[1];
      }
      else {
        uint64_t v16 = *((unsigned __int8 *)v14 + 23);
      }
      *(void *)(a2 + 16) = v16;
      v17[0] = 1;
      int v18 = 0;
      unint64_t v19 = "";
      uint64_t v20 = 0;
      gloria::Status::Status(a3, 0, (uint64_t)v17);
    }
    else
    {
      v17[0] = 1;
      int v18 = 0;
      unint64_t v19 = "Decompression failed.";
      uint64_t v20 = 21;
      gloria::Status::Status(a3, 11, (uint64_t)v17);
    }
    if (v21.__begin_)
    {
      v21.__end_ = v21.__begin_;
      operator delete(v21.__begin_);
    }
  }
}

void sub_1891B66B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char a9, int a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void gloria::Lz4Decompressor::~Lz4Decompressor(gloria::Lz4Decompressor *this)
{
}

std::vector<char> *__cdecl std::vector<char>::vector(std::vector<char> *this, std::vector<char>::size_type __n)
{
  this->__begin_ = 0;
  this->__end_ = 0;
  this->__end_cap_.__value_ = 0;
  if (__n)
  {
    std::vector<unsigned char>::__vallocate[abi:ne180100](this, __n);
    std::vector<char>::pointer end = this->__end_;
    uint64_t v5 = &end[__n];
    bzero(end, __n);
    this->__end_ = v5;
  }
  return this;
}

void sub_1891B678C(_Unwind_Exception *exception_object)
{
  std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>::result_type v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void gloria::BloomShardHeader::ReadFrom(unsigned char *a1@<X0>, const std::string *a2@<X1>, std::ios_base::openmode a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  if (a1[72])
  {
    LOBYTE(v13.__sb_.__extbuf_) = 1;
    HIDWORD(v13.__sb_.__extbuf_) = 0;
    v13.__sb_.__extbufnext_ = "";
    v13.__sb_.__extbufend_ = 0;
    gloria::Status::Status(a4, 0, (uint64_t)&v13);
  }
  else
  {
    std::fstream::basic_fstream(&v13, a2, a3);
    if (*(&v13.__sb_.__st_._mbstateL + 9)
      && (v13.__sb_.__extbuf_min_[*((void *)v13.__sb_.__extbuf_ - 3) + 8] & 5) == 0)
    {
      std::istream::seekg();
      std::istream::tellg();
      if (v20)
      {
        v11[0] = 0;
        v11[1] = 0;
        uint64_t v12 = 0;
        int v14 = 0;
        std::string::size_type v7 = 512;
        gloria::FileIO::ReadBuffer((uint64_t)&v8, &v13, (uint64_t *)&v14, &v7, (uint64_t)v11);
        if (v8)
        {
          LOBYTE(v14) = 1;
          HIDWORD(v14) = 0;
          *(void *)&long long v15 = "cannot read header buffer from the index file";
          *((void *)&v15 + 1) = 45;
          gloria::Status::Status(a4, 7, (uint64_t)&v14);
        }
        else
        {
          int v16 = -1;
          uint64_t v18 = 0;
          uint64_t v19 = 0;
          uint64_t v17 = 0;
          uint64_t v6 = v11;
          if (v12 < 0) {
            uint64_t v6 = (void **)v11[0];
          }
          int v14 = v6;
          long long v15 = xmmword_18A627A40;
          (*(void (**)(unsigned char *, void ***))(*(void *)a1 + 16))(a1, &v14);
          if (SHIBYTE(v19) < 0) {
            operator delete(v17);
          }
        }
        if (v10 < 0) {
          operator delete(__p);
        }
        if (SHIBYTE(v12) < 0) {
          operator delete(v11[0]);
        }
      }
      else
      {
        LOBYTE(v14) = 1;
        HIDWORD(v14) = 0;
        *(void *)&long long v15 = "cannot read header from empty file";
        *((void *)&v15 + 1) = 34;
        gloria::Status::Status(a4, 7, (uint64_t)&v14);
      }
    }
    else
    {
      LOBYTE(v14) = 1;
      HIDWORD(v14) = 0;
      *(void *)&long long v15 = "cannot read the index file: invalid input stream";
      *((void *)&v15 + 1) = 48;
      gloria::Status::Status(a4, 7, (uint64_t)&v14);
    }
    gloria::FileIO::~FileIO((gloria::FileIO *)&v13);
  }
}

void sub_1891B69FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24)
{
  if (*(char *)(v24 - 121) < 0) {
    operator delete(*(void **)(v24 - 144));
  }
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  gloria::FileIO::~FileIO((gloria::FileIO *)&a24);
  _Unwind_Resume(a1);
}

void gloria::BloomShardHeader::ReadFrom(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a1 + 48;
  std::string::resize((std::string *)(a1 + 48), 0x28uLL, 0);
  MEMORY[0x18C11F1D0](v6, v5, 40);
  if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 32))(a1) & 1) == 0)
  {
    std::string::basic_string[abi:ne180100]<0>(&__p, "data processed is not a gloria Bloom filter");
    LOBYTE(v30) = 1;
    HIDWORD(v30) = 0;
    unint64_t v11 = (const char *)HIBYTE(v24);
    std::__split_buffer<std::string>::pointer p_p = (const char *)__p;
    if (v24 < 0) {
      unint64_t v11 = v23;
    }
    else {
      std::__split_buffer<std::string>::pointer p_p = (const char *)&__p;
    }
    int v31 = p_p;
    uint64_t v32 = v11;
    gloria::Status::Status(a3, 7, (uint64_t)&v30);
    goto LABEL_13;
  }
  int v7 = *(_DWORD *)(v5 + 40);
  *(_DWORD *)(a1 + 8) = v7;
  if (!v7)
  {
    std::string::basic_string[abi:ne180100]<0>(&__p, "BIG_ENDIAN endian index not currently supported");
    LOBYTE(v30) = 1;
    HIDWORD(v30) = 0;
    std::fstream v13 = (const char *)HIBYTE(v24);
    int v14 = (const char *)__p;
    if (v24 < 0) {
      std::fstream v13 = v23;
    }
    else {
      int v14 = (const char *)&__p;
    }
    int v31 = v14;
    uint64_t v32 = v13;
    gloria::Status::Status(a3, 6, (uint64_t)&v30);
LABEL_13:
    if ((SHIBYTE(v24) & 0x80000000) == 0) {
      return;
    }
    long long v15 = __p;
LABEL_15:
    operator delete(v15);
    return;
  }
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(v5 + 44);
  double v8 = *(double *)(v5 + 48);
  *(double *)(a1 + 16) = v8;
  int v9 = *(_DWORD *)(v5 + 56);
  *(_DWORD *)(a1 + 24) = v9;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(v5 + 60);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(v5 + 64);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(v5 + 68);
  int v10 = *(char *)(v5 + 72);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(v5 + 72);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(v5 + 73);
  if (v10 <= 1)
  {
    LOBYTE(__p) = 1;
    HIDWORD(__p) = 0;
    BOOL v23 = "Cannot read Bloom filter version below 2.0";
    uint64_t v24 = 42;
    gloria::Status::Status(a3, 3, (uint64_t)&__p);
    return;
  }
  if (v8 == 0.0) {
    double v8 = -1.79769313e308;
  }
  unint64_t v16 = (unint64_t)(log(v8) * (double)-v9 / 0.480453014);
  if (HIDWORD(v16))
  {
    std::string::basic_string[abi:ne180100]<0>(&v30, "Bloom filter must be under 2GB");
    v26[0] = 1;
    int v27 = 0;
    uint64_t v17 = (const char *)HIBYTE(v32);
    uint64_t v18 = v30;
    if (SHIBYTE(v32) < 0) {
      uint64_t v17 = v31;
    }
    else {
      uint64_t v18 = &v30;
    }
    int v28 = v18;
    uint64_t v29 = v17;
    gloria::Status::Status((uint64_t)&__p, 6, (uint64_t)v26);
    if (SHIBYTE(v32) < 0) {
      operator delete(v30);
    }
  }
  else
  {
    *(void *)(a1 + 80) = v16;
    LOBYTE(v30) = 1;
    HIDWORD(v30) = 0;
    int v31 = "";
    uint64_t v32 = 0;
    gloria::Status::Status((uint64_t)&__p, 0, (uint64_t)&v30);
  }
  if (__p)
  {
    gloria::Status::Status(a3, (uint64_t)&__p);
  }
  else
  {
    int v19 = llround((double)*(unint64_t *)(a1 + 80) / (double)*(int *)(a1 + 24) * 0.693147181);
    if (v19 <= 1) {
      int v19 = 1;
    }
    *(_DWORD *)(a1 + 76) = v19;
    int v20 = *(_DWORD *)(a1 + 12);
    int v21 = (2 << (v20 - 1)) - 1;
    if (v20 == 32) {
      int v21 = 0x7FFFFFFF;
    }
    *(_DWORD *)(a1 + 88) = v21;
    *(_DWORD *)(a1 + 92) = 8 / v20;
    LOBYTE(v30) = 1;
    HIDWORD(v30) = 0;
    int v31 = "";
    uint64_t v32 = 0;
    gloria::Status::Status(a3, 0, (uint64_t)&v30);
  }
  if (v25 < 0)
  {
    long long v15 = (void *)v23;
    goto LABEL_15;
  }
}

void sub_1891B6D9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, int a11, __int16 a12, char a13, char a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void gloria::BasicShardHeader::ToString(gloria::BasicShardHeader *this@<X0>, std::string *a2@<X8>)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>::result_type v3 = std::string::append(a2, "shard_id: ");
  std::to_string(&v24, *((int *)this + 8));
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v4 = &v24;
  }
  else {
    uint64_t v4 = (std::string *)v24.__r_.__value_.__r.__words[0];
  }
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v24.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v24.__r_.__value_.__l.__size_;
  }
  uint64_t v6 = std::string::append(v3, (const std::string::value_type *)v4, size);
  int v7 = std::string::append(v6, " compression: ");
  double v8 = std::string::append(v7, gloria::CompressionTypeDescriptor[*((unsigned int *)this + 2)]);
  int v9 = std::string::append(v8, " hashing: ");
  int v10 = std::string::append(v9, gloria::HashingTypeDescriptor[*((unsigned int *)this + 4)]);
  unint64_t v11 = std::string::append(v10, " endianness: ");
  uint64_t v12 = std::string::append(v11, gloria::ByteOrderDescriptor[*((unsigned int *)this + 3)]);
  std::fstream v13 = std::string::append(v12, " created_at");
  time_t v28 = *((void *)this + 3);
  std::string::basic_string[abi:ne180100]<0>(__p, "%Y-%m-%d %H:%M:%S %z");
  gmtime_r(&v28, &v25);
  if (v27 >= 0) {
    int v14 = __p;
  }
  else {
    int v14 = (void **)__p[0];
  }
  if (strftime((char *)&v29, 0x80uLL, (const char *)v14, &v25)) {
    long long v15 = &v29;
  }
  else {
    long long v15 = (std::string *)"time undefined";
  }
  std::string::basic_string[abi:ne180100]<0>(v22, (char *)v15);
  if (v27 < 0) {
    operator delete(__p[0]);
  }
  if ((v23 & 0x80u) == 0) {
    unint64_t v16 = v22;
  }
  else {
    unint64_t v16 = (void **)v22[0];
  }
  if ((v23 & 0x80u) == 0) {
    std::string::size_type v17 = v23;
  }
  else {
    std::string::size_type v17 = (std::string::size_type)v22[1];
  }
  uint64_t v18 = std::string::append(v13, (const std::string::value_type *)v16, v17);
  int v19 = std::string::append(v18, "timestamp ");
  std::to_string(&v29, *((void *)this + 3));
  if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v20 = &v29;
  }
  else {
    int v20 = (std::string *)v29.__r_.__value_.__r.__words[0];
  }
  if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v21 = HIBYTE(v29.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v21 = v29.__r_.__value_.__l.__size_;
  }
  std::string::append(v19, (const std::string::value_type *)v20, v21);
  if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v29.__r_.__value_.__l.__data_);
  }
  if ((char)v23 < 0) {
    operator delete(v22[0]);
  }
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
}

void sub_1891B7014(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *__p,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a40 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (*(char *)(v40 + 23) < 0) {
    operator delete(*(void **)v40);
  }
  _Unwind_Resume(exception_object);
}

void gloria::BloomShardHeader::ToString(gloria::BloomShardHeader *this@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>::result_type v3 = std::string::append(a2, "order: ");
  uint64_t v4 = std::string::append(v3, gloria::ByteOrderDescriptor[*((unsigned int *)this + 2)]);
  uint64_t v5 = std::string::append(v4, " bucket_size_in_bits: ");
  std::to_string(&v30, *((int *)this + 3));
  if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v6 = &v30;
  }
  else {
    uint64_t v6 = (std::string *)v30.__r_.__value_.__r.__words[0];
  }
  if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v30.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v30.__r_.__value_.__l.__size_;
  }
  double v8 = std::string::append(v5, (const std::string::value_type *)v6, size);
  int v9 = std::string::append(v8, " fpp: ");
  std::to_string(&v29, (uint64_t)*((double *)this + 2));
  if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v10 = &v29;
  }
  else {
    int v10 = (std::string *)v29.__r_.__value_.__r.__words[0];
  }
  if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v11 = HIBYTE(v29.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v11 = v29.__r_.__value_.__l.__size_;
  }
  uint64_t v12 = std::string::append(v9, (const std::string::value_type *)v10, v11);
  std::fstream v13 = std::string::append(v12, " number_of_items: ");
  std::to_string(&v28, *((int *)this + 6));
  if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v14 = &v28;
  }
  else {
    int v14 = (std::string *)v28.__r_.__value_.__r.__words[0];
  }
  if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v15 = HIBYTE(v28.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v15 = v28.__r_.__value_.__l.__size_;
  }
  unint64_t v16 = std::string::append(v13, (const std::string::value_type *)v14, v15);
  std::string::size_type v17 = std::string::append(v16, " bloom_filter_type: ");
  std::to_string(&v27, *((int *)this + 7));
  if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v18 = &v27;
  }
  else {
    uint64_t v18 = (std::string *)v27.__r_.__value_.__r.__words[0];
  }
  if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v19 = HIBYTE(v27.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v19 = v27.__r_.__value_.__l.__size_;
  }
  int v20 = std::string::append(v17, (const std::string::value_type *)v18, v19);
  std::string::size_type v21 = std::string::append(v20, " multi_hash_strategy: ");
  uint64_t v22 = std::string::append(v21, gloria::MultiHashStrategyDescriptor[*((unsigned int *)this + 8)]);
  unsigned __int8 v23 = std::string::append(v22, " shard_id: ");
  std::to_string(&v26, *((int *)this + 9));
  if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string v24 = &v26;
  }
  else {
    std::string v24 = (std::string *)v26.__r_.__value_.__r.__words[0];
  }
  if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v25 = HIBYTE(v26.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v25 = v26.__r_.__value_.__l.__size_;
  }
  std::string::append(v23, (const std::string::value_type *)v24, v25);
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v26.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v27.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v28.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v29.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v30.__r_.__value_.__l.__data_);
  }
}

void sub_1891B72B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (*(char *)(v34 - 33) < 0) {
    operator delete(*(void **)(v34 - 56));
  }
  if (*(char *)(v33 + 23) < 0) {
    operator delete(*(void **)v33);
  }
  _Unwind_Resume(exception_object);
}

BOOL gloria::BloomShardHeader::IsValid(gloria::BloomShardHeader *this)
{
  if (!*((unsigned char *)this + 72))
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "245f8f00bb79a7c8a18e462e922352a8b5f5cb19");
    uint64_t v3 = *((unsigned __int8 *)this + 71);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = (void *)*((unsigned __int8 *)this + 71);
    }
    else {
      uint64_t v4 = (void *)*((void *)this + 7);
    }
    unint64_t v5 = v18;
    int v6 = (char)v18;
    if ((v18 & 0x80u) != 0) {
      unint64_t v5 = (unint64_t)__p[1];
    }
    if (v4 == (void *)v5)
    {
      int v7 = (const void **)((char *)this + 48);
      if ((v18 & 0x80u) == 0) {
        double v8 = __p;
      }
      else {
        double v8 = (void **)__p[0];
      }
      if ((v3 & 0x80) != 0)
      {
        BOOL v1 = memcmp(*v7, v8, *((void *)this + 7)) == 0;
      }
      else
      {
        if (!*((unsigned char *)this + 71))
        {
          BOOL v1 = 1;
          if (((char)v18 & 0x80000000) == 0) {
            return v1;
          }
          goto LABEL_25;
        }
        uint64_t v9 = v3 - 1;
        do
        {
          int v11 = *(unsigned __int8 *)v7;
          int v7 = (const void **)((char *)v7 + 1);
          int v10 = v11;
          int v13 = *(unsigned __int8 *)v8;
          double v8 = (void **)((char *)v8 + 1);
          int v12 = v13;
          BOOL v15 = v9-- != 0;
          BOOL v1 = v10 == v12;
        }
        while (v10 == v12 && v15);
      }
      if ((v6 & 0x80000000) == 0) {
        return v1;
      }
    }
    else
    {
      BOOL v1 = 0;
      if (((char)v18 & 0x80000000) == 0) {
        return v1;
      }
    }
LABEL_25:
    operator delete(__p[0]);
    return v1;
  }
  return 1;
}

unint64_t gloria::BloomShardHeader::Size(gloria::BloomShardHeader *this)
{
  return (unint64_t)(*((unsigned char *)this + 72) == 0) << 9;
}

void gloria::BloomShardHeader::~BloomShardHeader(void **this)
{
  *this = &unk_1ED5143B0;
  if (*((char *)this + 71) < 0) {
    operator delete(this[6]);
  }
}

{
  uint64_t vars8;

  *this = &unk_1ED5143B0;
  if (*((char *)this + 71) < 0) {
    operator delete(this[6]);
  }

  JUMPOUT(0x18C11F580);
}

void (__cdecl ***std::fstream::~fstream(void (__cdecl ***a1)(std::fstream *__hidden this)))(std::fstream *__hidden this)
{
  size_t v2 = a1 + 54;
  MEMORY[0x18C11F2A0](a1 + 3);
  std::iostream::~basic_iostream();
  MEMORY[0x18C11F4F0](v2);
  return a1;
}

void std::fstream::~fstream(void (__cdecl ***a1)(std::fstream *__hidden this))
{
  BOOL v1 = a1 + 54;
  MEMORY[0x18C11F2A0](a1 + 3);
  std::iostream::~basic_iostream();
  MEMORY[0x18C11F4F0](v1);

  JUMPOUT(0x18C11F580);
}

void non-virtual thunk to'std::fstream::~fstream(void (__cdecl ***a1)(std::fstream *__hidden this))
{
  MEMORY[0x18C11F2A0](a1 + 1);
  std::iostream::~basic_iostream();

  JUMPOUT(0x18C11F4F0);
}

{
  void *v1;
  uint64_t vars8;

  BOOL v1 = a1 + 52;
  MEMORY[0x18C11F2A0](a1 + 1);
  std::iostream::~basic_iostream();
  MEMORY[0x18C11F4F0](v1);

  JUMPOUT(0x18C11F580);
}

void virtual thunk to'std::fstream::~fstream(void *a1)
{
  BOOL v1 = (void (__cdecl ***)(std::fstream *__hidden))((char *)a1 + *(void *)(*a1 - 24));
  MEMORY[0x18C11F2A0](v1 + 3);
  std::iostream::~basic_iostream();

  JUMPOUT(0x18C11F4F0);
}

{
  void (__cdecl ***v1)(std::fstream *__hidden);
  uint64_t vars8;

  BOOL v1 = (void (__cdecl ***)(std::fstream *__hidden))((char *)a1 + *(void *)(*a1 - 24));
  MEMORY[0x18C11F2A0](v1 + 3);
  std::iostream::~basic_iostream();
  MEMORY[0x18C11F4F0](v1 + 54);

  JUMPOUT(0x18C11F580);
}

uint64_t gloria::GloriaDB::Count(gloria::GloriaDB *this)
{
  memset(__p, 0, sizeof(__p));
  gloria::ShardPool::AllShards((void *)this + 17, (char **)__p);
  uint64_t v2 = gloria::ShardManager::DoCount((uint64_t)this + 72, (const gloria::Shard ***)__p);
  if (__p[0]) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1891B7A20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void gloria::GloriaDB::ListKeys(uint64_t a1@<X0>, std::vector<std::string> *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  double v8 = (unsigned int *)(a1 + 136);
  uint64_t v9 = (const gloria::Shard **)gloria::RandomUtils::Uniform<int>((*(_DWORD *)(a1 + 152) - 1));
  int v13 = 0;
  gloria::ShardPool::Get((gloria::ShardPool *)v10, v8, v9, &v13);
  if (v12 < 0) {
    operator delete(__p);
  }
  gloria::ShardManager::DoListKeys(a1 + 72, v13, a2, a3, a4);
}

uint64_t gloria::RandomUtils::Uniform<int>(uint64_t result)
{
  if (result)
  {
    int v1 = result;
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29E8A0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_1EB29E8A0))
    {
      std::random_device::random_device[abi:ne180100]((std::random_device *)&_MergedGlobals_171);
      __cxa_atexit(MEMORY[0x1E4FBA228], &_MergedGlobals_171, &dword_188D96000);
      __cxa_guard_release(&qword_1EB29E8A0);
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29E8A8, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_1EB29E8A8))
    {
      unsigned int v8 = MEMORY[0x18C11F3F0](&_MergedGlobals_171);
      dword_1EB29E8B0 = v8;
      uint64_t v9 = 1;
      for (uint64_t i = 7; i != 630; ++i)
      {
        int v11 = 1812433253 * (v8 ^ (v8 >> 30));
        unsigned int v8 = v11 + v9;
        *((_DWORD *)&_MergedGlobals_171 + i) = i + v11 - 6;
        ++v9;
      }
      qword_1EB29F270 = 0;
      __cxa_guard_release(&qword_1EB29E8A8);
    }
    unsigned int v2 = v1 + 1;
    if (v1 == -1)
    {
      return std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>::operator()((std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253> *)&dword_1EB29E8B0);
    }
    else
    {
      uint64_t v3 = __clz(v2);
      uint64_t v4 = 31;
      if (((v2 << v3) & 0x7FFFFFFF) != 0) {
        uint64_t v4 = 32;
      }
      unint64_t v5 = v4 - v3;
      unint64_t v6 = v5 >> 5;
      if ((v5 & 0x1F) != 0) {
        ++v6;
      }
      if (v6 <= v5) {
        unsigned int v7 = 0xFFFFFFFF >> -(v5 / v6);
      }
      else {
        unsigned int v7 = 0;
      }
      do
        uint64_t result = std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>::operator()((std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253> *)&dword_1EB29E8B0) & v7;
      while (result >= v2);
    }
  }
  return result;
}

void sub_1891B7C68(_Unwind_Exception *a1)
{
}

void gloria::GloriaDB::ListValues(uint64_t a1@<X0>, std::vector<std::string> *a2@<X1>, int a3@<W2>, _DWORD *a4@<X8>)
{
  std::string v27 = 0;
  std::string v28 = 0;
  uint64_t v29 = 0;
  std::vector<std::string>::size_type v7 = a3;
  std::vector<gloria::Slice>::resize((uint64_t)&v27, a3);
  std::vector<std::string>::resize(a2, v7);
  std::string v26 = 0;
  unsigned int v8 = (const gloria::Shard **)gloria::RandomUtils::Uniform<int>((*(_DWORD *)(a1 + 152) - 1));
  gloria::ShardPool::Get((gloria::ShardPool *)v23, (unsigned int *)(a1 + 136), v8, &v26);
  if (v25 < 0) {
    operator delete(__p);
  }
  gloria::ShardManager::DoReadValues(a1 + 72, v26, (uint64_t)&v27, v7, (uint64_t)a4);
  uint64_t v9 = v27;
  if (!*a4 && v27 != v28)
  {
    unint64_t v10 = 0;
    do
    {
      long long v11 = *(_OWORD *)&v9[v10];
      uint64_t v22 = *(void *)&v9[v10 + 16];
      long long v21 = v11;
      char v12 = &a2->__begin_[v10 / 0x18];
      LOBYTE(v15) = 1;
      HIDWORD(v15) = 0;
      long long v17 = 0u;
      long long v18 = 0u;
      unint64_t v16 = "";
      std::string::size_type v19 = v12;
      __int16 v20 = 0;
      (***(void (****)(void **__return_ptr))(a1 + 192))(v13);
      if (v14 < 0) {
        operator delete(v13[1]);
      }
      MEMORY[0x18C11F1D0](v12, v16, v17);
      gloria::ManagedSlice::~ManagedSlice(&v15);
      v10 += 24;
    }
    while (&v9[v10] != v28);
    uint64_t v9 = v27;
  }
  if (v9)
  {
    std::string v28 = v9;
    operator delete(v9);
  }
}

void sub_1891B7E4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  BOOL v15 = *(void **)(v13 - 104);
  if (v15)
  {
    *(void *)(v13 - 96) = v15;
    operator delete(v15);
  }
  _Unwind_Resume(exception_object);
}

BOOL gloria::GloriaDB::Contains(uint64_t a1, uint64_t a2)
{
  std::string::basic_string[abi:ne180100](&__dst, *(void **)(a2 + 8), *(void *)(a2 + 16));
  uint64_t v4 = (****(uint64_t (*****)(void))(a1 + 184))();
  unint64_t v5 = *(unsigned int *)(a1 + 152);
  if (v4 >= 0) {
    unint64_t v6 = v4;
  }
  else {
    unint64_t v6 = -v4;
  }
  unint64_t v16 = 0;
  gloria::ShardPool::Get((gloria::ShardPool *)v13, (unsigned int *)(a1 + 136), (const gloria::Shard **)(v6 % v5), &v16);
  if (v15 < 0) {
    operator delete(__p);
  }
  uint64_t v12 = 0;
  gloria::ShardManager::DoContains(a1 + 72, v16, a2, &v12, (uint64_t)&v9);
  int v7 = v9;
  if (v11 < 0) {
    operator delete(v10);
  }
  if (v18 < 0) {
    operator delete(__dst);
  }
  return v7 == 0;
}

void sub_1891B7F90(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 - 17) < 0) {
    operator delete(*(void **)(v1 - 40));
  }
  _Unwind_Resume(exception_object);
}

void gloria::GloriaDB::Get(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, std::string *a4@<X8>)
{
  v15[0] = 1;
  int v16 = 0;
  long long v17 = "";
  uint64_t v18 = 0;
  gloria::GloriaDB::Get(a4, a1, a2, (uint64_t)v15);
  if (!LODWORD(a4->__r_.__value_.__l.__data_))
  {
    LOBYTE(v9) = 1;
    HIDWORD(v9) = 0;
    unint64_t v10 = "";
    long long v11 = 0u;
    long long v12 = 0u;
    uint64_t v13 = a3;
    __int16 v14 = 0;
    (***(void (****)(void **__return_ptr))(a1 + 192))(v7);
    gloria::Status::operator=(a4, (uint64_t)v7);
    if (v8 < 0) {
      operator delete(v7[1]);
    }
    if (!LODWORD(a4->__r_.__value_.__l.__data_)) {
      MEMORY[0x18C11F1D0](v13, v10, v11);
    }
    gloria::ManagedSlice::~ManagedSlice(&v9);
  }
}

void sub_1891B80C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17)
{
  gloria::ManagedSlice::~ManagedSlice(&a17);
  if (*(char *)(v17 + 31) < 0) {
    operator delete(*(void **)(v17 + 8));
  }
  _Unwind_Resume(a1);
}

void gloria::GloriaDB::MultiGet(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, std::string *a4@<X8>)
{
  v51[0] = 1;
  *(_DWORD *)&v51[4] = 0;
  *(void *)&v51[8] = "";
  *(void *)&v51[16] = 0;
  gloria::Status::Status((uint64_t)a4, 0, (uint64_t)v51);
  unint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *a3;
  if (0xAAAAAAAAAAAAAAABLL * ((a3[2] - *a3) >> 4) < v8)
  {
    if (v8 > 0x555555555555555) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = a3[1];
    *(void *)&v51[32] = a3 + 2;
    long long v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::string,std::string>>>(v8);
    uint64_t v13 = *a3;
    unint64_t v14 = a3[1];
    if (v14 == *a3)
    {
      int64x2_t v18 = vdupq_n_s64(v14);
      char v15 = &v11[v10 - v9];
    }
    else
    {
      char v15 = &v11[v10 - v9];
      do
      {
        long long v16 = *(_OWORD *)(v14 - 48);
        *((void *)v15 - 4) = *(void *)(v14 - 32);
        *((_OWORD *)v15 - 3) = v16;
        *(void *)(v14 - 40) = 0;
        *(void *)(v14 - 32) = 0;
        *(void *)(v14 - 48) = 0;
        long long v17 = *(_OWORD *)(v14 - 24);
        *((void *)v15 - 1) = *(void *)(v14 - 8);
        *(_OWORD *)(v15 - 24) = v17;
        v15 -= 48;
        *(void *)(v14 - 16) = 0;
        *(void *)(v14 - 8) = 0;
        *(void *)(v14 - 24) = 0;
        v14 -= 48;
      }
      while (v14 != v13);
      int64x2_t v18 = *(int64x2_t *)a3;
    }
    *a3 = (uint64_t)v15;
    a3[1] = (uint64_t)&v11[v10 - v9];
    *(int64x2_t *)&v51[8] = v18;
    uint64_t v19 = a3[2];
    a3[2] = (uint64_t)&v11[48 * v12];
    *(void *)&v51[24] = v19;
    *(void *)uint64_t v51 = v18.i64[0];
    std::__split_buffer<std::pair<std::string,std::string>>::~__split_buffer((std::__split_buffer<std::pair<std::string, std::string>> *)v51);
  }
  for (uint64_t i = *(uint64_t **)(a2 + 16); i; uint64_t i = (uint64_t *)*i)
  {
    if (*((char *)i + 39) < 0)
    {
      uint64_t v22 = (uint64_t *)i[2];
      uint64_t v21 = i[3];
    }
    else
    {
      uint64_t v21 = *((unsigned __int8 *)i + 39);
      uint64_t v22 = i + 2;
    }
    v54[0] = 1;
    int v55 = 0;
    unint64_t v56 = v22;
    uint64_t v57 = v21;
    v51[0] = 1;
    *(_DWORD *)&v51[4] = 0;
    memset(&v51[16], 0, 32);
    *(void *)&v51[8] = "";
    long long v52 = &v51[24];
    __int16 v53 = 0;
    (*(void (**)(void **__return_ptr, uint64_t, char *, unsigned char *))(*(void *)a1 + 32))(v49, a1, v54, v51);
    if (LODWORD(v49[0]))
    {
      gloria::Status::operator=(a4, (uint64_t)v49);
    }
    else
    {
      std::string::basic_string[abi:ne180100](__dst, *(void **)&v51[8], *(size_t *)&v51[16]);
      if (*((char *)i + 39) < 0) {
        std::string::__init_copy_ctor_external(&v46, (const std::string::value_type *)i[2], i[3]);
      }
      else {
        std::string v46 = *(std::string *)(i + 2);
      }
      long long __p = *(_OWORD *)__dst;
      uint64_t v48 = v45;
      __dst[1] = 0;
      uint64_t v45 = 0;
      __dst[0] = 0;
      unint64_t v23 = a3[1];
      unint64_t v24 = a3[2];
      if (v23 >= v24)
      {
        unint64_t v27 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v23 - *a3) >> 4);
        unint64_t v28 = v27 + 1;
        if (v27 + 1 > 0x555555555555555) {
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        }
        unint64_t v29 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v24 - *a3) >> 4);
        if (2 * v29 > v28) {
          unint64_t v28 = 2 * v29;
        }
        if (v29 >= 0x2AAAAAAAAAAAAAALL) {
          unint64_t v30 = 0x555555555555555;
        }
        else {
          unint64_t v30 = v28;
        }
        v58.__end_cap_.__value_ = (std::allocator<std::pair<std::string, std::string>> *)(a3 + 2);
        if (v30) {
          unint64_t v30 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::string,std::string>>>(v30);
        }
        else {
          uint64_t v31 = 0;
        }
        unint64_t v32 = v30 + 48 * v27;
        long long v33 = *(_OWORD *)&v46.__r_.__value_.__l.__data_;
        *(void *)(v32 + 16) = *((void *)&v46.__r_.__value_.__l + 2);
        *(_OWORD *)unint64_t v32 = v33;
        memset(&v46, 0, sizeof(v46));
        long long v34 = __p;
        *(void *)(v32 + 40) = v48;
        *(_OWORD *)(v32 + 24) = v34;
        uint64_t v48 = 0;
        long long __p = 0uLL;
        uint64_t v35 = *a3;
        unint64_t v36 = a3[1];
        if (v36 == *a3)
        {
          int64x2_t v40 = vdupq_n_s64(v36);
          unint64_t v37 = v30 + 48 * v27;
        }
        else
        {
          unint64_t v37 = v30 + 48 * v27;
          do
          {
            long long v38 = *(_OWORD *)(v36 - 48);
            *(void *)(v37 - 32) = *(void *)(v36 - 32);
            *(_OWORD *)(v37 - 48) = v38;
            *(void *)(v36 - 40) = 0;
            *(void *)(v36 - 32) = 0;
            *(void *)(v36 - 48) = 0;
            long long v39 = *(_OWORD *)(v36 - 24);
            *(void *)(v37 - 8) = *(void *)(v36 - 8);
            *(_OWORD *)(v37 - 24) = v39;
            v37 -= 48;
            *(void *)(v36 - 16) = 0;
            *(void *)(v36 - 8) = 0;
            *(void *)(v36 - 24) = 0;
            v36 -= 48;
          }
          while (v36 != v35);
          int64x2_t v40 = *(int64x2_t *)a3;
        }
        unint64_t v41 = v32 + 48;
        *a3 = v37;
        a3[1] = v32 + 48;
        *(int64x2_t *)&v58.__begin_ = v40;
        uint64_t v42 = (std::pair<std::string, std::string> *)a3[2];
        a3[2] = v30 + 48 * v31;
        v58.__end_cap_.__value_ = v42;
        v58.__first_ = (std::__split_buffer<std::pair<std::string, std::string>>::pointer)v40.i64[0];
        std::__split_buffer<std::pair<std::string,std::string>>::~__split_buffer(&v58);
        int v43 = SHIBYTE(v48);
        a3[1] = v41;
        if (v43 < 0) {
          operator delete((void *)__p);
        }
      }
      else
      {
        long long v25 = *(_OWORD *)&v46.__r_.__value_.__l.__data_;
        *(void *)(v23 + 16) = *((void *)&v46.__r_.__value_.__l + 2);
        *(_OWORD *)unint64_t v23 = v25;
        memset(&v46, 0, sizeof(v46));
        uint64_t v26 = v48;
        *(_OWORD *)(v23 + 24) = __p;
        *(void *)(v23 + 40) = v26;
        uint64_t v48 = 0;
        long long __p = 0uLL;
        a3[1] = v23 + 48;
      }
      if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v46.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v45) < 0) {
        operator delete(__dst[0]);
      }
    }
    if (v50 < 0) {
      operator delete(v49[1]);
    }
    gloria::ManagedSlice::~ManagedSlice((void **)v51);
  }
}

void sub_1891B8544(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30)
{
  if (*(char *)(v30 + 31) < 0) {
    operator delete(*(void **)(v30 + 8));
  }
  _Unwind_Resume(exception_object);
}

void gloria::GloriaDB::Random(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v8 = a1 + 34;
  uint64_t v9 = (const gloria::Shard **)gloria::RandomUtils::Uniform<int>(a1[38] - 1);
  __int16 v20 = 0;
  gloria::ShardPool::Get((gloria::ShardPool *)v17, v8, v9, &v20);
  if (v19 < 0) {
    operator delete(__p);
  }
  v13[0] = 1;
  int v14 = 0;
  char v15 = "";
  uint64_t v16 = 0;
  gloria::ShardManager::DoRandomKey((uint64_t)(a1 + 18), v20, (uint64_t)v13, (uint64_t)&v10);
  if (v10)
  {
    gloria::Status::Status(a4, (uint64_t)&v10);
  }
  else
  {
    MEMORY[0x18C11F1D0](a2, v15, v16);
    (*(void (**)(unsigned int *, unsigned char *, uint64_t))(*(void *)a1 + 24))(a1, v13, a3);
  }
  if (v12 < 0) {
    operator delete(v11);
  }
}

void sub_1891B86C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t gloria::GloriaDB::RecordIterator::First(gloria::GloriaDB::RecordIterator *this)
{
  *((void *)this + 5) = 0;
  gloria::ShardPool::Get((gloria::ShardPool *)&v3, (unsigned int *)(*((void *)this + 2) + 136), (const gloria::Shard **)*((unsigned int *)this + 6), (void *)this + 4);
  if (v5 < 0) {
    operator delete(__p);
  }
  uint64_t result = (*(uint64_t (**)(void))(**(void **)(*((void *)this + 2) + 40) + 16))(*(void *)(*((void *)this + 2) + 40));
  *((_DWORD *)this + 2) = *(_DWORD *)(*((void *)this + 2) + 56) + result;
  return result;
}

uint64_t gloria::GloriaDB::RecordIterator::Last(uint64_t this)
{
  *(void *)(this + 40) = (*(void *)(**(void **)(this + 32) + 24) - *(void *)(**(void **)(this + 32) + 16))
                         / (unint64_t)*(unsigned int *)(this + 8)
                         - 1;
  return this;
}

void gloria::GloriaDB::RecordIterator::Next(uint64_t a1, uint64_t a2, uint64_t a3)
{
  gloria::GloriaDB::RecordIterator::RetrieveRecord((uint64_t)&v4, a1, a2, a3);
  if (v6 < 0) {
    operator delete(__p);
  }
  ++*(void *)(a1 + 40);
}

void gloria::GloriaDB::RecordIterator::RetrieveRecord(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (***v8)(void **__return_ptr);
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  int v12;
  const char *v13;
  uint64_t v14;
  void *v15[3];
  char v16;
  char v17;
  int v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  long long v17 = 1;
  int64x2_t v18 = 0;
  char v19 = "";
  __int16 v20 = 0;
  unint64_t v8 = **(void (*****)(void **__return_ptr))(a2 + 32);
  uint64_t v9 = *(unsigned int *)(a2 + 8);
  uint64_t v22 = *(void *)(a2 + 40) * v9;
  uint64_t v21 = v9;
  (**v8)(v15);
  if (v16 < 0) {
    operator delete(v15[1]);
  }
  int v10 = (*(uint64_t (**)(void))(**(void **)(*(void *)(a2 + 16) + 40) + 16))(*(void *)(*(void *)(a2 + 16) + 40));
  long long v11 = v19;
  char v12 = v18;
  uint64_t v13 = &v19[v18];
  *(unsigned char *)a3 = 1;
  *(_DWORD *)(a3 + 4) = 0;
  *(void *)(a3 + 8) = v13;
  *(void *)(a3 + 16) = v10;
  int64x2_t v18 = v12 + v10;
  int v14 = *(void *)&v11[v12 + (int)v10];
  int64x2_t v18 = v12 + v10 + 8;
  gloria::RecordReader::ReadPayloadAt(*(void (****)(void *__return_ptr, void, void, void, void))(*(void *)(a2 + 32) + 8), v14, a4, a1);
}

BOOL gloria::GloriaDB::RecordIterator::HasNext(gloria::GloriaDB::RecordIterator *this)
{
  return *((void *)this + 5) < (*(void *)(**((void **)this + 4) + 24)
                                - *(void *)(**((void **)this + 4) + 16))
                               / (unint64_t)*((unsigned int *)this + 2);
}

void gloria::GloriaDB::RecordIterator::Previous(uint64_t a1, uint64_t a2, uint64_t a3)
{
  gloria::GloriaDB::RecordIterator::RetrieveRecord((uint64_t)&v5, a1, a2, a3);
  if (v7 < 0) {
    operator delete(__p);
  }
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    *(void *)(a1 + 40) = v4 - 1;
  }
}

void gloria::GloriaDB::Close(gloria::GloriaDB *this@<X0>, std::string *a2@<X8>)
{
}

void gloria::GloriaDB::NewRecordIterator(gloria::GloriaDB *this)
{
}

void gloria::GloriaDB::RecordIterator::~RecordIterator(gloria::GloriaDB::RecordIterator *this)
{
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::string,std::string>>>(unint64_t a1)
{
  if (a1 >= 0x555555555555556) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(48 * a1);
}

void std::__split_buffer<std::pair<std::string,std::string>>::~__split_buffer(std::__split_buffer<std::pair<std::string, std::string>> *this)
{
  std::__split_buffer<std::pair<std::string, std::string>>::pointer begin = this->__begin_;
  for (std::__split_buffer<std::pair<std::string, std::string>>::pointer i = this->__end_; i != begin; std::__split_buffer<std::pair<std::string, std::string>>::pointer i = this->__end_)
  {
    this->__end_ = i - 1;
    if (SHIBYTE(i[-1].second.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(i[-1].second.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(i[-1].first.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(i[-1].first.__r_.__value_.__l.__data_);
    }
  }
  if (this->__first_) {
    operator delete(this->__first_);
  }
}

uint64_t gloria::MemoryMappedFile::Load(gloria::MemoryMappedFile *this, uint64_t a2)
{
  unsigned int v2 = this;
  if (*(void *)a2)
  {
    uint64_t v4 = sysconf(29);
    uint64_t v5 = *(void *)(a2 + 16);
    if (v5 >= 1)
    {
      int v6 = 0;
      char v7 = *(_DWORD **)a2;
      unint64_t v8 = *(void *)a2 + v5;
      int v9 = gloria::MemoryMappedFile::dummy_;
      do
      {
        v9 |= v6 | *v7;
        gloria::MemoryMappedFile::dummy_ = v9;
        ++v6;
        char v7 = (_DWORD *)((char *)v7 + v4);
      }
      while ((unint64_t)v7 < v8);
    }
    v12[0] = 1;
    int v13 = 0;
    int v14 = "";
    uint64_t v15 = 0;
    this = v2;
    int v10 = 0;
  }
  else
  {
    v12[0] = 1;
    int v13 = 0;
    int v14 = "address_ of mmaped file is not initialized";
    uint64_t v15 = 42;
    int v10 = 6;
  }
  return gloria::Status::Status((uint64_t)this, v10, (uint64_t)v12);
}

void google::protobuf::io::CodedInputStream::~CodedInputStream(google::protobuf::io::CodedInputStream *this)
{
  if (*((void *)this + 2)) {
    google::protobuf::io::CodedInputStream::BackUpInputToCurrentPosition((uint64_t)this);
  }
}

uint64_t google::protobuf::io::CodedInputStream::BackUpInputToCurrentPosition(uint64_t this)
{
  if (*(_DWORD *)(this + 28) + *(_DWORD *)(this + 44) + *(_DWORD *)(this + 8) - *(_DWORD *)this >= 1)
  {
    uint64_t v1 = this;
    this = (*(uint64_t (**)(void))(**(void **)(this + 16) + 24))(*(void *)(this + 16));
    unsigned int v2 = *(_DWORD *)(v1 + 24) - *(_DWORD *)(v1 + 44) + *(void *)v1 - *(_DWORD *)(v1 + 8);
    *(void *)(v1 + 8) = *(void *)v1;
    *(_DWORD *)(v1 + 44) = 0;
    *(void *)(v1 + 24) = v2;
  }
  return this;
}

uint64_t google::protobuf::io::CodedInputStream::SkipFallback(google::protobuf::io::CodedInputStream *this, int a2, int a3)
{
  if (*((int *)this + 11) < 1)
  {
    uint64_t v5 = (a2 - a3);
    *(void *)this = 0;
    *((void *)this + 1) = 0;
    int v6 = *((_DWORD *)this + 12);
    if (v6 >= *((_DWORD *)this + 10)) {
      int v6 = *((_DWORD *)this + 10);
    }
    int v7 = v6 - *((_DWORD *)this + 6);
    if (v7 >= (int)v5)
    {
      if ((*(uint64_t (**)(void, uint64_t))(**((void **)this + 2) + 32))(*((void *)this + 2), v5))
      {
        *((_DWORD *)this + 6) += v5;
        return 1;
      }
      else
      {
        int v8 = (*(uint64_t (**)(void))(**((void **)this + 2) + 40))(*((void *)this + 2));
        uint64_t result = 0;
        *((_DWORD *)this + 6) = v8;
      }
    }
    else
    {
      if (v7 >= 1)
      {
        *((_DWORD *)this + 6) = v6;
        (*(void (**)(void))(**((void **)this + 2) + 32))(*((void *)this + 2));
      }
      return 0;
    }
  }
  else
  {
    uint64_t result = 0;
    *(void *)this += a3;
  }
  return result;
}

uint64_t google::protobuf::io::CodedInputStream::Refresh(google::protobuf::io::CodedInputStream *this)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  int v2 = *((_DWORD *)this + 11);
  if (v2 > 0 || *((int *)this + 7) > 0 || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
  {
    int v3 = *((_DWORD *)this + 6) - v2;
    int v4 = *((_DWORD *)this + 12);
    if (v3 >= v4 && v4 != *((_DWORD *)this + 10))
    {
      LODWORD(v20[0]) = 2;
      v20[1] = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/coded_stream.cc";
      int v21 = 193;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "A protocol message was rejected because it was too big (more than ");
      snprintf(__str, 0x80uLL, "%d", *((_DWORD *)this + 12));
      char v27 = 0;
      std::string::append(&__p, __str);
      std::string::append(&__p, " bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in third_party/protobuf/src/google/protobuf/io/coded_stream.h.");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)v20);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    return 0;
  }
  else
  {
    v20[0] = 0;
    int v19 = 0;
    uint64_t v7 = *((void *)this + 2);
    do
    {
      uint64_t v5 = (*(uint64_t (**)(uint64_t, void *, int *))(*(void *)v7 + 16))(v7, v20, &v19);
      if (!v5)
      {
        *(void *)this = 0;
        *((void *)this + 1) = 0;
        return v5;
      }
      int v8 = v19;
    }
    while (!v19);
    uint64_t v9 = v20[0] + v19;
    *(void *)this = v20[0];
    *((void *)this + 1) = v9;
    if (v8 < 0)
    {
      *(_DWORD *)char __str = 3;
      unint64_t v24 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/coded_stream.cc";
      int v25 = 638;
      memset(v26, 0, 24);
      std::string::append(v26, "CHECK failed: (buffer_size) >= (0): ");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)__str);
      if (SHIBYTE(v26[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v26[0].__r_.__value_.__l.__data_);
      }
      int v8 = v19;
    }
    int v10 = *((_DWORD *)this + 6);
    int v11 = v10 - (v8 ^ 0x7FFFFFFF);
    if (v10 <= (v8 ^ 0x7FFFFFFF))
    {
      int v13 = v10 + v8;
      uint64_t v12 = *((void *)this + 1);
    }
    else
    {
      *((_DWORD *)this + 7) = v11;
      uint64_t v12 = *((void *)this + 1) - v11;
      *((void *)this + 1) = v12;
      int v13 = 0x7FFFFFFF;
    }
    *((_DWORD *)this + 6) = v13;
    int v14 = *((_DWORD *)this + 10);
    uint64_t v15 = v12 + *((int *)this + 11);
    *((void *)this + 1) = v15;
    int v16 = *((_DWORD *)this + 12);
    if (v16 >= v14) {
      int v16 = v14;
    }
    BOOL v17 = __OFSUB__(v13, v16);
    int v18 = v13 - v16;
    if ((v18 < 0) ^ v17 | (v18 == 0)) {
      int v18 = 0;
    }
    else {
      *((void *)this + 1) = v15 - v18;
    }
    *((_DWORD *)this + 11) = v18;
  }
  return v5;
}

void sub_1891B901C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::io::CodedInputStream::ReadRaw(google::protobuf::io::CodedInputStream *this, char *__dst, int a3)
{
  while (1)
  {
    int v6 = a3;
    uint64_t v7 = *(const void **)this;
    uint64_t v8 = *((void *)this + 1) - *(void *)this;
    BOOL v9 = __OFSUB__(a3, v8);
    a3 -= v8;
    if ((a3 < 0) ^ v9 | (a3 == 0)) {
      break;
    }
    memcpy(__dst, v7, (int)v8);
    __dst += (int)v8;
    *(void *)this += (int)v8;
    if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0) {
      return v6 <= (int)v8;
    }
  }
  memcpy(__dst, v7, v6);
  *(void *)this += v6;
  return v6 <= (int)v8;
}

BOOL google::protobuf::io::CodedInputStream::ReadString(const void **this, std::string *a2, std::string::size_type __n)
{
  if ((__n & 0x80000000) != 0) {
    return 0;
  }
  int v3 = a2;
  if (*((_DWORD *)this + 2) - *(_DWORD *)this >= (int)__n)
  {
    size_t v6 = __n;
    std::string::resize(a2, __n, 0);
    if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0) {
      int v3 = (std::string *)v3->__r_.__value_.__r.__words[0];
    }
    memcpy(v3, *this, v6);
    *this = (char *)*this + v6;
    return 1;
  }
  else
  {
    return google::protobuf::io::CodedInputStream::ReadStringFallback((google::protobuf::io::CodedInputStream *)this, a2, __n);
  }
}

BOOL google::protobuf::io::CodedInputStream::ReadStringFallback(google::protobuf::io::CodedInputStream *this, std::string *a2, std::string::size_type __requested_capacity)
{
  int v3 = __requested_capacity;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    if (a2->__r_.__value_.__l.__size_)
    {
      *a2->__r_.__value_.__l.__data_ = 0;
      a2->__r_.__value_.__l.__size_ = 0;
    }
  }
  else if (*((unsigned char *)&a2->__r_.__value_.__s + 23))
  {
    a2->__r_.__value_.__s.__data_[0] = 0;
    *((unsigned char *)&a2->__r_.__value_.__s + 23) = 0;
  }
  int v6 = *((_DWORD *)this + 12);
  if (v6 >= *((_DWORD *)this + 10)) {
    int v6 = *((_DWORD *)this + 10);
  }
  if (v6 != 0x7FFFFFFF)
  {
    int v7 = v6 - *((_DWORD *)this + 6) + *((_DWORD *)this + 11) + *((_DWORD *)this + 2) - *(_DWORD *)this;
    BOOL v8 = v7 < (int)__requested_capacity || (int)__requested_capacity < 1;
    if (!v8 && v7 >= 1) {
      std::string::reserve(a2, __requested_capacity);
    }
  }
  while (1)
  {
    int v10 = v3;
    int v11 = *(const std::string::value_type **)this;
    uint64_t v12 = *((void *)this + 1) - *(void *)this;
    BOOL v13 = __OFSUB__(v3, v12);
    v3 -= v12;
    if ((v3 < 0) ^ v13 | (v3 == 0)) {
      break;
    }
    if (v12)
    {
      std::string::append(a2, v11, (int)v12);
      int v11 = *(const std::string::value_type **)this;
    }
    *(void *)this = &v11[(int)v12];
    if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0) {
      return v10 <= (int)v12;
    }
  }
  std::string::append(a2, v11, v10);
  *(void *)this += v10;
  return v10 <= (int)v12;
}

BOOL google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(unsigned int **this, unsigned int *a2)
{
  int v3 = *this;
  if (((*((_DWORD *)this + 2) - *this) & 0xFFFFFFFC) != 0)
  {
    *this = v3 + 1;
  }
  else
  {
    int v3 = (unsigned int *)__dst;
    BOOL result = google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)this, __dst, 4);
    if (!result) {
      return result;
    }
  }
  *a2 = *v3;
  return 1;
}

BOOL google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(unint64_t **this, unint64_t *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v3 = *this;
  if (((*((_DWORD *)this + 2) - *this) & 0xFFFFFFF8) != 0)
  {
    *this = v3 + 1;
  }
  else
  {
    int v3 = (unint64_t *)v5;
    BOOL result = google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)this, v5, 8);
    if (!result) {
      return result;
    }
  }
  *a2 = *v3;
  return 1;
}

unint64_t google::protobuf::io::CodedInputStream::ReadVarint64Fallback(google::protobuf::io::CodedInputStream *this)
{
  int v2 = *(unsigned __int8 **)this;
  unint64_t v3 = *((void *)this + 1);
  if ((int)(v3 - *(void *)this) <= 9 && (v3 <= (unint64_t)v2 || *(char *)(v3 - 1) < 0))
  {
    uint64_t v7 = 0;
    unint64_t v5 = 0;
    while (v7 != 10)
    {
      while (1)
      {
        BOOL v8 = *(char **)this;
        if (*(void *)this != *((void *)this + 1)) {
          break;
        }
        if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0) {
          return 0;
        }
      }
      char v9 = *v8;
      v5 |= (unint64_t)(*v8 & 0x7F) << (7 * v7);
      *(void *)this = v8 + 1;
      ++v7;
      if ((v9 & 0x80) == 0) {
        return v5;
      }
    }
    return 0;
  }
  uint64_t v4 = v2[1];
  if ((char)v2[1] < 0)
  {
    if (((char)v2[2] & 0x80000000) == 0)
    {
      unint64_t v5 = (v4 << 7) + ((unint64_t)v2[2] << 14) + *v2 - 16512;
      uint64_t v6 = 3;
      goto LABEL_42;
    }
    if (((char)v2[3] & 0x80000000) == 0)
    {
      uint64_t v10 = 0;
      unint64_t v5 = (unint64_t)v2[3] << 21;
      uint64_t v6 = 4;
      int v11 = *(unsigned __int8 **)this;
      do
      {
        unsigned int v12 = *v11++;
        v5 += (v12 - 128) << v10;
        v10 += 7;
      }
      while (v10 != 21);
      goto LABEL_42;
    }
    if (((char)v2[4] & 0x80000000) == 0)
    {
      uint64_t v13 = 0;
      unint64_t v5 = (unint64_t)v2[4] << 28;
      uint64_t v6 = 5;
      int v14 = *(unsigned __int8 **)this;
      do
      {
        unsigned int v15 = *v14++;
        v5 += (v15 - 128) << v13;
        v13 += 7;
      }
      while (v13 != 28);
      goto LABEL_42;
    }
    if (((char)v2[5] & 0x80000000) == 0)
    {
      uint64_t v16 = 0;
      unint64_t v5 = (unint64_t)v2[5] << 35;
      uint64_t v6 = 6;
      BOOL v17 = *(unsigned __int8 **)this;
      do
      {
        unsigned int v18 = *v17++;
        v5 += (v18 - 128) << v16;
        v16 += 7;
      }
      while (v16 != 35);
      goto LABEL_42;
    }
    if (((char)v2[6] & 0x80000000) == 0)
    {
      uint64_t v19 = 0;
      unint64_t v5 = (unint64_t)v2[6] << 42;
      uint64_t v6 = 7;
      __int16 v20 = *(unsigned __int8 **)this;
      do
      {
        unsigned int v21 = *v20++;
        v5 += (v21 - 128) << v19;
        v19 += 7;
      }
      while (v19 != 42);
      goto LABEL_42;
    }
    if (((char)v2[7] & 0x80000000) == 0)
    {
      uint64_t v22 = 0;
      unint64_t v5 = (unint64_t)v2[7] << 49;
      uint64_t v6 = 8;
      unint64_t v23 = *(unsigned __int8 **)this;
      do
      {
        unsigned int v24 = *v23++;
        v5 += (v24 - 128) << v22;
        v22 += 7;
      }
      while (v22 != 49);
      goto LABEL_42;
    }
    int v25 = (char)v2[8];
    if ((v25 & 0x80000000) == 0)
    {
      uint64_t v26 = 0;
      unint64_t v5 = (unint64_t)v25 << 56;
      uint64_t v6 = 9;
      char v27 = *(unsigned __int8 **)this;
      do
      {
        unsigned int v28 = *v27++;
        v5 += (v28 - 128) << v26;
        v26 += 7;
      }
      while (v26 != 56);
      goto LABEL_42;
    }
    int v29 = (char)v2[9];
    if ((v29 & 0x80000000) == 0)
    {
      uint64_t v30 = 0;
      unint64_t v5 = (unint64_t)v29 << 63;
      uint64_t v6 = 10;
      uint64_t v31 = *(unsigned __int8 **)this;
      do
      {
        unsigned int v32 = *v31++;
        v5 += (v32 - 128) << v30;
        v30 += 7;
      }
      while (v30 != 63);
      goto LABEL_42;
    }
    return 0;
  }
  unint64_t v5 = *v2 + (v4 << 7) - 128;
  uint64_t v6 = 2;
LABEL_42:
  *(void *)this = &v2[v6];
  return v5;
}

uint64_t google::protobuf::io::CodedInputStream::ReadVarint32Fallback(google::protobuf::io::CodedInputStream *this, int a2)
{
  unint64_t v3 = *(void *)this;
  unint64_t v2 = *((void *)this + 1);
  if ((int)(v2 - *(void *)this) <= 9 && (v2 <= v3 || *(char *)(v2 - 1) < 0))
  {
    uint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
    if ((v7 & 1) == 0) {
      return -1;
    }
  }
  else
  {
    unsigned int v4 = a2 + (*(unsigned __int8 *)(v3 + 1) << 7) - 128;
    if (*(char *)(v3 + 1) < 0)
    {
      unsigned int v4 = v4 + (*(unsigned __int8 *)(v3 + 2) << 14) - 0x4000;
      if (*(char *)(v3 + 2) < 0)
      {
        unsigned int v4 = v4 + (*(unsigned __int8 *)(v3 + 3) << 21) - 0x200000;
        if (*(char *)(v3 + 3) < 0)
        {
          int v8 = *(char *)(v3 + 4);
          unsigned int v4 = v4 + (v8 << 28) - 0x10000000;
          if (v8 < 0)
          {
            uint64_t v9 = 0;
            while (*(char *)(v3 + v9 + 5) < 0)
            {
              ++v9;
              uint64_t Varint64Fallback = -1;
              if (v9 == 5) {
                return Varint64Fallback;
              }
            }
            uint64_t v5 = v3 + v9 + 6;
          }
          else
          {
            uint64_t v5 = v3 + 5;
          }
        }
        else
        {
          uint64_t v5 = v3 + 4;
        }
      }
      else
      {
        uint64_t v5 = v3 + 3;
      }
    }
    else
    {
      uint64_t v5 = v3 + 2;
    }
    *(void *)this = v5;
    return v4;
  }
  return Varint64Fallback;
}

unint64_t google::protobuf::io::CodedInputStream::ReadTagSlow(google::protobuf::io::CodedInputStream *this)
{
  unint64_t v2 = *(char **)this;
  unint64_t v3 = *((void *)this + 1);
  if (*(void *)this != v3)
  {
LABEL_4:
    if ((unint64_t)v2 >= v3 || *v2 < 0)
    {
      unint64_t result = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      unint64_t result = *v2;
      *(void *)this = v2 + 1;
    }
    return result;
  }
  if (google::protobuf::io::CodedInputStream::Refresh(this))
  {
    unint64_t v2 = *(char **)this;
    unint64_t v3 = *((void *)this + 1);
    goto LABEL_4;
  }
  int v6 = *((_DWORD *)this + 12);
  unint64_t result = 0;
  BOOL v7 = *((_DWORD *)this + 6) - *((_DWORD *)this + 11) < v6 || *((_DWORD *)this + 10) == v6;
  *((unsigned char *)this + 36) = v7;
  return result;
}

unint64_t google::protobuf::io::CodedInputStream::ReadTagFallback(google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  uint64_t v3 = *(void *)this;
  uint64_t v2 = *((void *)this + 1);
  int v4 = v2 - *(void *)this;
  if (v4 > 9)
  {
LABEL_4:
    if (a2)
    {
      uint64_t v5 = a2 + (*(unsigned __int8 *)(v3 + 1) << 7) - 128;
      if (*(char *)(v3 + 1) < 0)
      {
        uint64_t v5 = v5 + (*(unsigned __int8 *)(v3 + 2) << 14) - 0x4000;
        if (*(char *)(v3 + 2) < 0)
        {
          uint64_t v5 = v5 + (*(unsigned __int8 *)(v3 + 3) << 21) - 0x200000;
          if (*(char *)(v3 + 3) < 0)
          {
            int v10 = *(char *)(v3 + 4);
            uint64_t v5 = (v5 + (v10 << 28) - 0x10000000);
            if (v10 < 0)
            {
              uint64_t v11 = 0;
              while (*(char *)(v3 + v11 + 5) < 0)
              {
                a2 = 0;
                if (++v11 == 5) {
                  return a2;
                }
              }
              uint64_t v6 = v3 + v11 + 6;
            }
            else
            {
              uint64_t v6 = v3 + 5;
            }
          }
          else
          {
            uint64_t v6 = v3 + 4;
          }
        }
        else
        {
          uint64_t v6 = v3 + 3;
        }
      }
      else
      {
        uint64_t v6 = v3 + 2;
      }
      *(void *)this = v6;
      return v5;
    }
    else
    {
      *(void *)this = v3 + 1;
    }
    return a2;
  }
  if (v4 >= 1)
  {
    if ((*(char *)(v2 - 1) & 0x80000000) == 0) {
      goto LABEL_4;
    }
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  }
  if (v4) {
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  }
  int v8 = *((_DWORD *)this + 11);
  int v9 = *((_DWORD *)this + 6);
  if (v8 <= 0 && v9 != *((_DWORD *)this + 10)) {
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  }
  if (v9 - v8 >= *((_DWORD *)this + 12)) {
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  }
  a2 = 0;
  *((unsigned char *)this + 36) = 1;
  return a2;
}

unint64_t google::protobuf::io::EpsCopyOutputStream::Flush(google::protobuf::io::EpsCopyOutputStream *this, unsigned __int8 *a2)
{
  int v4 = (_OWORD *)((char *)this + 16);
  uint64_t v5 = (char *)this + 32;
  uint64_t v6 = (void *)*((void *)this + 1);
LABEL_2:
  unint64_t v7 = *(void *)this;
  if (v6)
  {
    int v8 = a2 - v7;
    if ((unint64_t)a2 <= v7)
    {
      memcpy(v6, v4, a2 - (unsigned __int8 *)v4);
      uint64_t v13 = *(void *)this;
      *((void *)this + 1) += a2 - (unsigned __int8 *)v4;
      return v13 - (void)a2;
    }
    else
    {
      if (*((void *)this + 6))
      {
        memcpy(v6, v4, v7 - (void)v4);
        int v16 = 0;
        while (1)
        {
          unsigned int v15 = 0;
          if (((*(uint64_t (**)(void, _OWORD **, int *))(**((void **)this + 6) + 16))(*((void *)this + 6), &v15, &v16) & 1) == 0)break; {
          uint64_t v9 = v16;
          }
          if (v16)
          {
            int v10 = v15;
            uint64_t v11 = *(_OWORD **)this;
            if (v16 < 17)
            {
              *int v4 = *v11;
              uint64_t v12 = (uint64_t)v4 + (int)v9;
              uint64_t v6 = v10;
              int v10 = v4;
            }
            else
            {
              uint64_t v6 = 0;
              _OWORD *v15 = *v11;
              uint64_t v12 = (uint64_t)v10 + v9 - 16;
            }
            *(void *)this = v12;
            *((void *)this + 1) = v6;
            a2 = (unsigned __int8 *)v10 + v8;
            if (*((unsigned char *)this + 56)) {
              return 0;
            }
            goto LABEL_2;
          }
        }
      }
      unint64_t result = 0;
      *((unsigned char *)this + 56) = 1;
      *(void *)this = v5;
    }
  }
  else
  {
    unint64_t result = v7 - (void)a2 + 16;
    *((void *)this + 1) = a2;
  }
  return result;
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::Trim(google::protobuf::io::EpsCopyOutputStream *this, unsigned __int8 *a2)
{
  if (!*((unsigned char *)this + 56))
  {
    unint64_t v3 = google::protobuf::io::EpsCopyOutputStream::Flush(this, a2);
    if (v3) {
      (*(void (**)(void, unint64_t))(**((void **)this + 6) + 24))(*((void *)this + 6), v3);
    }
    a2 = (unsigned __int8 *)this + 16;
    *(void *)this = (char *)this + 16;
    *((void *)this + 1) = (char *)this + 16;
  }
  return a2;
}

uint64_t google::protobuf::io::EpsCopyOutputStream::FlushAndResetBuffer(google::protobuf::io::EpsCopyOutputStream *this, unsigned __int8 *a2)
{
  if (*((unsigned char *)this + 56)) {
    return (uint64_t)this + 16;
  }
  int v3 = google::protobuf::io::EpsCopyOutputStream::Flush(this, a2);
  if (*((unsigned char *)this + 56)) {
    return (uint64_t)this + 16;
  }
  uint64_t v5 = (char *)(*((void *)this + 1) + v3 - 16);
  if (v3 > 16)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v5 = (char *)this + v3 + 16;
    uint64_t v6 = *((void *)this + 1);
  }
  if (v3 <= 16) {
    uint64_t result = (uint64_t)this + 16;
  }
  else {
    uint64_t result = *((void *)this + 1);
  }
  *(void *)this = v5;
  *((void *)this + 1) = v6;
  return result;
}

_OWORD *google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(google::protobuf::io::EpsCopyOutputStream *this, unsigned __int8 *a2)
{
  LODWORD(v2) = a2;
  int v4 = (_OWORD *)((char *)this + 16);
  uint64_t v5 = (char *)this + 32;
  while (!*((unsigned char *)this + 56))
  {
    uint64_t v6 = *(char **)this;
    if (*((void *)this + 6))
    {
      unint64_t v7 = (void *)*((void *)this + 1);
      if (!v7)
      {
        *int v4 = *(_OWORD *)v6;
        *((void *)this + 1) = v6;
        goto LABEL_11;
      }
      memcpy(v7, v4, v6 - (char *)v4);
      int v14 = 0;
      while (1)
      {
        uint64_t v13 = 0;
        if (((*(uint64_t (**)(void, _OWORD **, int *))(**((void **)this + 6) + 16))(*((void *)this + 6), &v13, &v14) & 1) == 0)break; {
        uint64_t v8 = v14;
        }
        if (v14)
        {
          uint64_t v9 = v13;
          int v10 = *(char **)this;
          if (v14 >= 17)
          {
            *uint64_t v13 = *(_OWORD *)v10;
            unint64_t v11 = (unint64_t)v9 + v8 - 16;
            *(void *)this = v11;
            *((void *)this + 1) = 0;
            goto LABEL_13;
          }
          *int v4 = *(_OWORD *)v10;
          unint64_t v11 = (unint64_t)v4 + (int)v8;
          *(void *)this = v11;
          *((void *)this + 1) = v9;
          goto LABEL_12;
        }
      }
    }
    *((unsigned char *)this + 56) = 1;
LABEL_11:
    *(void *)this = v5;
    unint64_t v11 = (unint64_t)v5;
LABEL_12:
    uint64_t v9 = v4;
LABEL_13:
    unint64_t v2 = (unint64_t)v9 + (int)v2 - (int)v6;
    if (v2 < v11) {
      return (_OWORD *)v2;
    }
  }
  return v4;
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(google::protobuf::io::EpsCopyOutputStream *this, char *__src, int a3, unsigned __int8 *__dst)
{
  int v4 = __dst;
  int v5 = a3;
  int v7 = *(_DWORD *)this - __dst + 16;
  if (v7 < a3)
  {
    do
    {
      memcpy(v4, __src, v7);
      v5 -= v7;
      __src += v7;
      int v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, &v4[v7]);
      int v7 = *(_DWORD *)this - v4 + 16;
    }
    while (v5 > v7);
  }
  memcpy(v4, __src, v5);
  return &v4[v5];
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteAliasedRaw(google::protobuf::io::EpsCopyOutputStream *this, void *__src, uint64_t a3, unsigned __int8 *__dst)
{
  uint64_t v8 = *(void *)this - (void)__dst;
  if (v8 + 16 <= (int)a3)
  {
    uint64_t v9 = google::protobuf::io::EpsCopyOutputStream::Trim(this, __dst);
    if (((*(uint64_t (**)(void, void *, uint64_t))(**((void **)this + 6) + 40))(*((void *)this + 6), __src, a3) & 1) == 0)
    {
      *((unsigned char *)this + 56) = 1;
      uint64_t v9 = (unsigned __int8 *)this + 16;
      *(void *)this = (char *)this + 32;
    }
    return v9;
  }
  if (v8 >= (int)a3)
  {
    memcpy(__dst, __src, (int)a3);
    return &__dst[(int)a3];
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, (char *)__src, a3, __dst);
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(google::protobuf::io::EpsCopyOutputStream *this, int a2, void **a3, unsigned __int8 *a4)
{
  if (*(void *)this <= (unint64_t)a4) {
    a4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, a4);
  }
  if (*((char *)a3 + 23) >= 0) {
    uint64_t v7 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    uint64_t v7 = *((unsigned int *)a3 + 2);
  }
  unsigned int v8 = (8 * a2) | 2;
  if (v8 > 0x7F)
  {
    *a4 = (8 * a2) | 0x82;
    unsigned int v10 = (8 * a2) >> 7;
    if (v8 >> 14)
    {
      uint64_t v9 = a4 + 2;
      do
      {
        *(v9 - 1) = v10 | 0x80;
        unsigned int v11 = v10 >> 7;
        ++v9;
        unsigned int v12 = v10 >> 14;
        v10 >>= 7;
      }
      while (v12);
      *(v9 - 1) = v11;
    }
    else
    {
      a4[1] = v10;
      uint64_t v9 = a4 + 2;
    }
  }
  else
  {
    *a4 = v8;
    uint64_t v9 = a4 + 1;
  }
  if (v7 >= 0x80)
  {
    unsigned int v17 = v7;
    do
    {
      *v9++ = v17 | 0x80;
      unsigned int v13 = v17 >> 7;
      unsigned int v18 = v17 >> 14;
      v17 >>= 7;
    }
    while (v18);
  }
  else
  {
    LOBYTE(v13) = v7;
  }
  unsigned __int8 *v9 = v13;
  int v14 = v9 + 1;
  if (*((char *)a3 + 23) >= 0) {
    unsigned int v15 = a3;
  }
  else {
    unsigned int v15 = *a3;
  }

  return google::protobuf::io::EpsCopyOutputStream::WriteRawMaybeAliased(this, v15, v7, v14);
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteRawMaybeAliased(google::protobuf::io::EpsCopyOutputStream *this, void *a2, uint64_t a3, unsigned __int8 *__dst)
{
  if (*((unsigned char *)this + 57))
  {
    return google::protobuf::io::EpsCopyOutputStream::WriteAliasedRaw(this, a2, a3, __dst);
  }
  else if (*(void *)this - (void)__dst < (int)a3)
  {
    return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, (char *)a2, a3, __dst);
  }
  else
  {
    uint64_t v6 = (int)a3;
    memcpy(__dst, a2, (int)a3);
    return &__dst[v6];
  }
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(google::protobuf::io::EpsCopyOutputStream *this, int a2, uint64_t a3, unsigned __int8 *a4)
{
  int v4 = a4;
  if (*(void *)this <= (unint64_t)a4) {
    int v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, a4);
  }
  if (*(char *)(a3 + 23) >= 0) {
    LODWORD(v8) = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    uint64_t v8 = *(void *)(a3 + 8);
  }
  unsigned int v9 = (8 * a2) | 2;
  if (v9 > 0x7F)
  {
    *int v4 = (8 * a2) | 0x82;
    unsigned int v11 = (8 * a2) >> 7;
    if (v9 >> 14)
    {
      unsigned int v10 = v4 + 2;
      do
      {
        *(v10 - 1) = v11 | 0x80;
        unsigned int v12 = v11 >> 7;
        ++v10;
        unsigned int v13 = v11 >> 14;
        v11 >>= 7;
      }
      while (v13);
      *(v10 - 1) = v12;
    }
    else
    {
      v4[1] = v11;
      unsigned int v10 = v4 + 2;
    }
  }
  else
  {
    *int v4 = v9;
    unsigned int v10 = v4 + 1;
  }
  if (v8 >= 0x80)
  {
    unsigned int v19 = v8;
    do
    {
      *v10++ = v19 | 0x80;
      unsigned int v14 = v19 >> 7;
      unsigned int v20 = v19 >> 14;
      v19 >>= 7;
    }
    while (v20);
  }
  else
  {
    LOBYTE(v14) = v8;
  }
  unsigned char *v10 = v14;
  unsigned int v15 = v10 + 1;
  if (*(char *)(a3 + 23) >= 0) {
    int v16 = (char *)a3;
  }
  else {
    int v16 = *(char **)a3;
  }
  if (*(void *)this - (void)v15 < (int)v8)
  {
    return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, v16, v8, v15);
  }
  else
  {
    uint64_t v17 = (int)v8;
    memcpy(v15, v16, (int)v8);
    return &v15[v17];
  }
}

uint64_t google::protobuf::io::CodedOutputStream::CodedOutputStream(uint64_t a1, uint64_t a2, int a3)
{
  char v6 = google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ & 1;
  uint64_t v7 = a1 + 16;
  *(void *)a1 = a1 + 16;
  *(void *)(a1 + 8) = a1 + 16;
  *(void *)(a1 + 48) = a2;
  *(_WORD *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 58) = v6;
  *(void *)(a1 + 64) = a1 + 16;
  *(void *)(a1 + 72) = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 32))(a2);
  if (a3)
  {
    uint64_t v14 = 0;
    int v13 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t *, int *))(*(void *)a2 + 16))(a2, &v14, &v13) && v13 != 0)
    {
      uint64_t v9 = v14;
      if (v13 <= 16) {
        uint64_t v10 = v7 + v13;
      }
      else {
        uint64_t v10 = v14 + v13 - 16;
      }
      if (v13 <= 16) {
        uint64_t v11 = v14;
      }
      else {
        uint64_t v11 = 0;
      }
      if (v13 <= 16) {
        uint64_t v9 = v7;
      }
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v11;
      *(void *)(a1 + 64) = v9;
    }
  }
  return a1;
}

void google::protobuf::io::CodedOutputStream::~CodedOutputStream(google::protobuf::io::CodedOutputStream *this)
{
  *((void *)this + 8) = google::protobuf::io::EpsCopyOutputStream::Trim(this, *((unsigned __int8 **)this + 8));
}

uint64_t *google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>(uint64_t *result)
{
  uint64_t v1 = *result;
  if (*result)
  {
    unint64_t v2 = v1 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(void *)(v1 & 0xFFFFFFFFFFFFFFFELL);
    if (v2 && v3 == 0)
    {
      int v5 = *(void **)(v2 + 8);
      if (v5 != *(void **)(v2 + 16))
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v2 + 8));
        int v5 = *(void **)(v2 + 8);
      }
      if (v5)
      {
        *(void *)(v2 + 16) = v5;
        operator delete(v5);
      }
      JUMPOUT(0x18C11F580);
    }
  }
  return result;
}

uint64_t google::protobuf::MessageLite::InternalGetTable(google::protobuf::MessageLite *this)
{
  return 0;
}

uint64_t google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(google::protobuf::internal::EpsCopyInputStream *this, const char **a2, int a3)
{
  if ((unint64_t)*a2 < *(void *)this) {
    return 0;
  }
  int v5 = *a2 - *((_DWORD *)this + 2);
  if (*((_DWORD *)this + 7) == v5)
  {
    if (v5 >= 1 && !*((void *)this + 2)) {
      *a2 = 0;
    }
    return 1;
  }
  else
  {
    *a2 = (const char *)google::protobuf::internal::EpsCopyInputStream::DoneFallback(this, v5, a3);
    return v6 & 1;
  }
}

void **google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>(unint64_t *a1, const google::protobuf::UnknownFieldSet *a2)
{
  if (*a1) {
    uint64_t v3 = (char *)((*a1 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    uint64_t v3 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(a1);
  }

  return google::protobuf::UnknownFieldSet::InternalMergeFrom((void **)v3, a2);
}

char *google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>(unint64_t *a1)
{
  if (*a1) {
    uint64_t result = (char *)((*a1 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    uint64_t result = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(a1);
  }
  if (*(void *)result != *((void *)result + 1))
  {
    return (char *)google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)result);
  }
  return result;
}

char *google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(unint64_t *a1)
{
  unint64_t v2 = *a1 & 0xFFFFFFFFFFFFFFFELL;
  if ((*a1 & 1) == 0)
  {
    if (v2) {
      goto LABEL_3;
    }
LABEL_7:
    operator new();
  }
  unint64_t v2 = *(void *)v2;
  if (!v2) {
    goto LABEL_7;
  }
LABEL_3:
  if (*(unsigned char *)(v2 + 24)) {
  AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v2, 0x20uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::internal::InternalMetadata::Container<google::protobuf::UnknownFieldSet>>);
  }
  *(_OWORD *)AlignedAndAddCleanup = 0u;
  *((_OWORD *)AlignedAndAddCleanup + 1) = 0u;
  *a1 = (unint64_t)AlignedAndAddCleanup | 1;
  *(void *)AlignedAndAddCleanup = v2;
  return AlignedAndAddCleanup + 8;
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::internal::InternalMetadata::Container<google::protobuf::UnknownFieldSet>>(uint64_t a1)
{
  uint64_t v3 = *(void **)(a1 + 8);
  int v4 = *(void **)(a1 + 16);
  int v5 = (google::protobuf::UnknownFieldSet *)(a1 + 8);
  if (v3 != v4)
  {
    google::protobuf::UnknownFieldSet::ClearFallback(v5);
    uint64_t v3 = *(void **)v5;
  }
  if (v3)
  {
    *(void *)(a1 + 16) = v3;
    operator delete(v3);
  }
}

void *google::protobuf::StringPiece::ToString@<X0>(google::protobuf::StringPiece *this@<X0>, void *a2@<X8>)
{
  if (*(void *)this) {
    return std::string::basic_string[abi:ne180100](a2, *(void **)this, *((void *)this + 1));
  }
  else {
    return std::string::basic_string[abi:ne180100]<0>(a2, (char *)&str_3_0);
  }
}

BOOL std::operator!=[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if ((*((char *)a1 + 23) & 0x80000000) == 0)
  {
    if (v4 != *((unsigned __int8 *)a1 + 23)) {
      return 1;
    }
    return memcmp(a1, __s, v4) != 0;
  }
  if (v4 == a1[1])
  {
    if (v4 == -1) {
      std::string::__throw_out_of_range[abi:ne180100]();
    }
    a1 = (void *)*a1;
    return memcmp(a1, __s, v4) != 0;
  }
  return 1;
}

google::protobuf::StringPiece *google::protobuf::StringPiece::StringPiece(google::protobuf::StringPiece *this, const char *__s)
{
  *(void *)this = __s;
  *((void *)this + 1) = 0;
  if (__s)
  {
    size_t v3 = strlen(__s);
    size_t v5 = v3;
    if ((v3 & 0x8000000000000000) != 0) {
      google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v3, "size_t to int conversion", v4);
    }
    *((void *)this + 1) = v5;
  }
  return this;
}

void *google::protobuf::StringPiece::StringPiece<std::allocator<char>>(void *a1, uint64_t *a2, const char *a3)
{
  if (*((char *)a2 + 23) >= 0) {
    size_t v4 = a2;
  }
  else {
    size_t v4 = (uint64_t *)*a2;
  }
  *a1 = v4;
  a1[1] = 0;
  if (*((char *)a2 + 23) < 0)
  {
    unint64_t v5 = a2[1];
    if ((v5 & 0x8000000000000000) != 0) {
      google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v5, "size_t to int conversion", a3);
    }
  }
  else
  {
    unint64_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  a1[1] = v5;
  return a1;
}

unsigned __int8 *std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v7 = (void *)(a1 + 24);
  unint64_t v8 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }
    int v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (std::__split_buffer<std::pair<std::string, std::string>>::pointer i = *v13; i; std::__split_buffer<std::pair<std::string, std::string>>::pointer i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__construct_node_hash<std::string const&>(a1, v9, a3, (uint64_t)v25);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::__rehash<true>(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  uint64_t v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    void *v22 = v25[0];
  }
  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10) {
          v23 %= v10;
        }
      }
      else
      {
        v23 &= v10 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }
  std::__split_buffer<std::pair<std::string, std::string>>::pointer i = (unsigned __int8 *)v25[0];
  ++*v7;
  return i;
}

void sub_1891BA8C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **__p, uint64_t a11)
{
  if (__p) {
    std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100]((uint64_t)&a11, __p);
  }
  _Unwind_Resume(exception_object);
}

void std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__construct_node_hash<std::string const&>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x28uLL);
  *(void *)(a4 + 8) = v7;
  *(void *)a4 = v8;
  *(unsigned char *)(a4 + 16) = 0;
  *unint64_t v8 = 0;
  v8[1] = a2;
  unint64_t v9 = (std::string *)(v8 + 2);
  if (*(char *)(a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v9, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)&v9->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
    v9->__r_.__value_.__r.__words[2] = *(void *)(a3 + 16);
  }
  *(unsigned char *)(a4 + 16) = 1;
}

void sub_1891BA974(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ReflectionOps::Clear(google::protobuf::internal::ReflectionOps *this, google::protobuf::Message *a2)
{
  ReflectionOrDie = (unsigned int *)google::protobuf::internal::GetReflectionOrDie(this, a2);
  std::string __p = 0;
  uint8x8_t v11 = 0;
  uint64_t v12 = 0;
  google::protobuf::Reflection::ListFieldsMayFailOnStripped((uint64_t)ReflectionOrDie, this, 0, (uint64_t)&__p);
  char v6 = (const google::protobuf::FieldDescriptor **)__p;
  uint64_t v7 = v11;
  while (v6 != v7)
    google::protobuf::Reflection::ClearField((google::protobuf::Reflection *)ReflectionOrDie, this, *v6++, v4, v5);
  unint64_t v8 = (unint64_t *)((char *)this + ReflectionOrDie[9]);
  if (*v8) {
    unint64_t v9 = (char *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    unint64_t v9 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v8);
  }
  if (*(void *)v9 != *((void *)v9 + 1)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)v9);
  }
  if (__p)
  {
    uint8x8_t v11 = (const google::protobuf::FieldDescriptor **)__p;
    operator delete(__p);
  }
}

void sub_1891BAA44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::ReflectionOps::Merge(google::protobuf::internal::ReflectionOps *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (this == a2)
  {
    LODWORD(v92) = 3;
    v93 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_ops.cc";
    LODWORD(v94) = 71;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (&from) != (to): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v92);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  uint64_t v5 = (*(uint64_t (**)(google::protobuf::internal::ReflectionOps *))(*(void *)this + 152))(this);
  if ((*(uint64_t (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2) != v5)
  {
    LODWORD(v92) = 3;
    v93 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_ops.cc";
    LODWORD(v94) = 74;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (to->GetDescriptor()) == (descriptor): ");
    std::string::append(&__p, "Tried to merge messages of different types ");
    std::string::append(&__p, "(merge ");
    uint64_t v7 = *(void *)(v5 + 8);
    int v8 = *(char *)(v7 + 23);
    unint64_t v9 = v8 >= 0 ? *(const std::string::value_type **)(v5 + 8) : *(const std::string::value_type **)v7;
    std::string::size_type v10 = v8 >= 0 ? *(unsigned __int8 *)(v7 + 23) : *(void *)(v7 + 8);
    std::string::append(&__p, v9, v10);
    std::string::append(&__p, " to ");
    uint64_t v11 = (*(uint64_t (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2);
    uint64_t v12 = *(void *)(v11 + 8);
    int v13 = *(char *)(v12 + 23);
    uint64_t v14 = v13 >= 0 ? *(const std::string::value_type **)(v11 + 8) : *(const std::string::value_type **)v12;
    std::string::size_type v15 = v13 >= 0 ? *(unsigned __int8 *)(v12 + 23) : *(void *)(v12 + 8);
    std::string::append(&__p, v14, v15);
    std::string::append(&__p, ")");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v92);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  uint64_t ReflectionOrDie = google::protobuf::internal::GetReflectionOrDie(this, v6);
  uint64_t v18 = google::protobuf::internal::GetReflectionOrDie(a2, v17);
  unint64_t v19 = *(google::protobuf::_anonymous_namespace_::GeneratedMessageFactory **)(ReflectionOrDie + 64);
  uint64_t v21 = *(void *)(v18 + 64);
  v92 = 0;
  v93 = 0;
  uint64_t v94 = 0;
  google::protobuf::Reflection::ListFieldsMayFailOnStripped(ReflectionOrDie, this, 0, (uint64_t)&v92);
  int v25 = (const char *)v92;
  uint64_t v89 = v93;
  if (v92 != v93)
  {
    int v88 = (v19 != v20) ^ (v21 == v22);
    do
    {
      uint64_t v26 = *(void *)v25;
      if (*(_DWORD *)(*(void *)v25 + 60) == 3)
      {
        if (!v88) {
          goto LABEL_30;
        }
        char v27 = *(std::once_flag::_State_type **)(v26 + 48);
        if (v27)
        {
          uint64_t v96 = *(void *)v25;
          v97 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v27, memory_order_acquire) != -1)
          {
            v99 = &v97;
            v100 = &v96;
            v98 = &v99;
            std::__call_once(v27, &v98, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if (*(_DWORD *)(v26 + 56) == 11
          && *(unsigned char *)(*(void *)(*(void *)(v26 + 104) + 32) + 75)
          && (v28 = google::protobuf::Reflection::MutableMapData((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26), int v29 = (atomic_uint *)google::protobuf::Reflection::MutableMapData((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26), atomic_load_explicit(v29 + 22, memory_order_acquire) != 1)&& atomic_load_explicit((atomic_uint *volatile)(v28 + 88), memory_order_acquire) != 1)
        {
          (*(void (**)(atomic_uint *, uint64_t))(*(void *)v29 + 72))(v29, v28);
        }
        else
        {
LABEL_30:
          int v30 = google::protobuf::Reflection::FieldSize((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v23, v24);
          if (v30 >= 1)
          {
            for (int i = 0; i != v30; ++i)
            {
              unsigned int v32 = *(std::once_flag::_State_type **)(v26 + 48);
              if (v32)
              {
                uint64_t v96 = v26;
                v97 = google::protobuf::FieldDescriptor::TypeOnceInit;
                if (atomic_load_explicit((atomic_ullong *volatile)v32, memory_order_acquire) != -1)
                {
                  v99 = &v97;
                  v100 = &v96;
                  v98 = &v99;
                  std::__call_once(v32, &v98, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                }
              }
              switch(*(_DWORD *)(v26 + 56))
              {
                case 1:
                  double RepeatedDouble = google::protobuf::Reflection::GetRepeatedDouble((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24);
                  google::protobuf::Reflection::AddDouble((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, RepeatedDouble, v36, v37);
                  break;
                case 2:
                  float RepeatedFloat = google::protobuf::Reflection::GetRepeatedFloat((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24);
                  google::protobuf::Reflection::AddFloat((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, RepeatedFloat, v45, v46);
                  break;
                case 3:
                case 0x10:
                case 0x12:
                  uint64_t RepeatedInt64 = google::protobuf::Reflection::GetRepeatedInt64((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24);
                  google::protobuf::Reflection::AddInt64((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, RepeatedInt64, v39);
                  break;
                case 4:
                case 6:
                  uint64_t RepeatedUInt64 = google::protobuf::Reflection::GetRepeatedUInt64((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24);
                  google::protobuf::Reflection::AddUInt64((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, RepeatedUInt64, v43);
                  break;
                case 5:
                case 0xF:
                case 0x11:
                  int RepeatedInt32 = google::protobuf::Reflection::GetRepeatedInt32((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24);
                  google::protobuf::Reflection::AddInt32((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, RepeatedInt32, v34);
                  break;
                case 7:
                case 0xD:
                  int RepeatedUInt32 = google::protobuf::Reflection::GetRepeatedUInt32((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24);
                  google::protobuf::Reflection::AddUInt32((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, RepeatedUInt32, v41);
                  break;
                case 8:
                  char RepeatedBool = google::protobuf::Reflection::GetRepeatedBool((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24);
                  google::protobuf::Reflection::AddBool((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, RepeatedBool, v48);
                  break;
                case 9:
                case 0xC:
                  google::protobuf::Reflection::GetRepeatedString((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24, &v91);
                  google::protobuf::Reflection::AddString(v18, (uint64_t)a2, (google::protobuf::FieldDescriptor *)v26, (uint64_t *)&v91, v50);
                  if (SHIBYTE(v91.__r_.__value_.__r.__words[2]) < 0) {
                    operator delete(v91.__r_.__value_.__l.__data_);
                  }
                  break;
                case 0xA:
                case 0xB:
                  uint64_t RepeatedMessage = google::protobuf::Reflection::GetRepeatedMessage((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24);
                  uint64_t v53 = RepeatedMessage;
                  if (ReflectionOrDie == v18)
                  {
                    (*(void (**)(uint64_t))(*(void *)RepeatedMessage + 152))(RepeatedMessage);
                    uint64_t v54 = *(google::protobuf::MessageFactory **)(v56 + 64);
                    int v55 = (google::protobuf::_anonymous_namespace_ **)ReflectionOrDie;
                  }
                  else
                  {
                    uint64_t v54 = 0;
                    int v55 = (google::protobuf::_anonymous_namespace_ **)v18;
                  }
                  uint64_t v57 = google::protobuf::Reflection::AddMessage(v55, a2, (std::once_flag::_State_type **)v26, v54, v52);
                  (*(void (**)(uint64_t, uint64_t))(*(void *)v57 + 120))(v57, v53);
                  break;
                case 0xE:
                  uint64_t RepeatedEnum = google::protobuf::Reflection::GetRepeatedEnum((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24);
                  google::protobuf::Reflection::AddEnum((uint64_t *)v18, a2, (google::protobuf::FieldDescriptor *)v26, RepeatedEnum);
                  break;
                default:
                  continue;
              }
            }
          }
        }
      }
      else
      {
        std::__split_buffer<std::pair<std::string, std::string>> v58 = *(std::once_flag::_State_type **)(v26 + 48);
        if (v58)
        {
          uint64_t v96 = *(void *)v25;
          v97 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v58, memory_order_acquire) != -1)
          {
            v99 = &v97;
            v100 = &v96;
            v98 = &v99;
            std::__call_once(v58, &v98, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        switch(*(_DWORD *)(v26 + 56))
        {
          case 1:
            double Double = google::protobuf::Reflection::GetDouble((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v23, v24);
            google::protobuf::Reflection::SetDouble((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, Double, v68, v69);
            break;
          case 2:
            float Float = google::protobuf::Reflection::GetFloat((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v23, v24);
            google::protobuf::Reflection::SetFloat((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, Float, v71, v72);
            break;
          case 3:
          case 0x10:
          case 0x12:
            uint64_t Int64 = google::protobuf::Reflection::GetInt64((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v23, v24);
            google::protobuf::Reflection::SetInt64((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, Int64, v62);
            break;
          case 4:
          case 6:
            Uuint64_t Int64 = google::protobuf::Reflection::GetUInt64((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v23, v24);
            google::protobuf::Reflection::SetUInt64((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, UInt64, v66);
            break;
          case 5:
          case 0xF:
          case 0x11:
            int Int32 = google::protobuf::Reflection::GetInt32((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v23, v24);
            google::protobuf::Reflection::SetInt32((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, Int32, v60);
            break;
          case 7:
          case 0xD:
            Uint Int32 = google::protobuf::Reflection::GetUInt32((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v23, v24);
            google::protobuf::Reflection::SetUInt32((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, UInt32, v64);
            break;
          case 8:
            char Bool = google::protobuf::Reflection::GetBool((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v23, v24);
            google::protobuf::Reflection::SetBool((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, Bool, v74);
            break;
          case 9:
          case 0xC:
            google::protobuf::Reflection::GetString((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v24, &v90);
            google::protobuf::Reflection::SetString(v18, a2, (google::protobuf::FieldDescriptor *)v26, (uint64_t *)&v90, v76);
            if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v90.__r_.__value_.__l.__data_);
            }
            break;
          case 0xA:
          case 0xB:
            uint64_t Message = google::protobuf::Reflection::GetMessage((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, 0, v24);
            uint64_t v79 = Message;
            if (ReflectionOrDie == v18)
            {
              (*(void (**)(uint64_t))(*(void *)Message + 152))(Message);
              v80 = *(google::protobuf::MessageFactory **)(v82 + 64);
              size_t v81 = (google::protobuf::_anonymous_namespace_ **)ReflectionOrDie;
            }
            else
            {
              v80 = 0;
              size_t v81 = (google::protobuf::_anonymous_namespace_ **)v18;
            }
            uint64_t v83 = google::protobuf::Reflection::MutableMessage(v81, a2, (const google::protobuf::FieldDescriptor *)v26, v80, v78);
            (*(void (**)(uint64_t, uint64_t))(*(void *)v83 + 120))(v83, v79);
            break;
          case 0xE:
            uint64_t Enum = google::protobuf::Reflection::GetEnum((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v23, v24);
            google::protobuf::Reflection::SetEnum((uint64_t *)v18, a2, (google::protobuf::FieldDescriptor *)v26, Enum);
            break;
          default:
            break;
        }
      }
      v25 += 8;
    }
    while (v25 != v89);
  }
  long long v84 = (unint64_t *)((char *)a2 + *(unsigned int *)(v18 + 36));
  if (*v84)
  {
    std::string v85 = (void **)((*v84 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else
  {
    long long v84 = (unint64_t *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v84);
    std::string v85 = (void **)v84;
  }
  uint64_t v86 = *(void *)((char *)this + *(unsigned int *)(ReflectionOrDie + 36));
  if (v86) {
    std::string v87 = (const google::protobuf::UnknownFieldSet *)((v86 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    std::string v87 = (const google::protobuf::UnknownFieldSet *)google::protobuf::UnknownFieldSet::default_instance((google::protobuf::UnknownFieldSet *)v84);
  }
  google::protobuf::UnknownFieldSet::InternalMergeFrom(v85, v87);
  if (v92)
  {
    v93 = (const char *)v92;
    operator delete(v92);
  }
}

void sub_1891BB3B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a31 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::GetReflectionOrDie(google::protobuf::internal *this, const google::protobuf::Message *a2)
{
  (*(void (**)(google::protobuf::internal *, const google::protobuf::Message *))(*(void *)this + 152))(this, a2);
  uint64_t v4 = v3;
  if (!v3)
  {
    uint64_t v5 = (*(uint64_t (**)(google::protobuf::internal *))(*(void *)this + 152))(this);
    if (v5)
    {
      char v6 = *(long long **)v5;
      if (*(char *)(*(void *)v5 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v15, *(const std::string::value_type **)v6, *((void *)v6 + 1));
      }
      else
      {
        long long v7 = *v6;
        v15.__r_.__value_.__r.__words[2] = *((void *)v6 + 2);
        *(_OWORD *)&v15.__r_.__value_.__l.__data_ = v7;
      }
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(&v15, "unknown");
    }
    int v11 = 3;
    uint64_t v12 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_ops.cc";
    int v13 = 59;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Message does not support reflection (type ");
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v8 = &v15;
    }
    else {
      int v8 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v15.__r_.__value_.__l.__size_;
    }
    std::string::append(&__p, (const std::string::value_type *)v8, size);
    std::string::append(&__p, ").");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v11);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
  }
  return v4;
}

void sub_1891BB5E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapValueConstRef::GetMessageValue(google::protobuf::MapValueConstRef *this)
{
  if (google::protobuf::MapValueConstRef::type(this) != 10)
  {
    int v4 = 3;
    uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v6 = 729;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetMessageValue");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "message");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    int v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(void *)this;
}

void sub_1891BB720(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::ReflectionOps::IsInitialized(google::protobuf::internal::ReflectionOps *this, const google::protobuf::Message *a2)
{
  v38[2] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = (*(uint64_t (**)(google::protobuf::internal::ReflectionOps *, const google::protobuf::Message *))(*(void *)this + 152))(this, a2);
  uint64_t ReflectionOrDie = (google::protobuf::_anonymous_namespace_ **)google::protobuf::internal::GetReflectionOrDie(this, v4);
  int v8 = *(_DWORD *)(v3 + 104);
  if (v8 >= 1)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 152 * v8;
    do
    {
      int v11 = (const google::protobuf::FieldDescriptor *)(*(void *)(v3 + 40) + v9);
      if (*((_DWORD *)v11 + 15) == 2
        && !google::protobuf::Reflection::HasField(ReflectionOrDie, this, v11, v5, v6))
      {
        return 0;
      }
      v9 += 152;
    }
    while (v10 != v9);
  }
  int v30 = 0;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  google::protobuf::Reflection::ListFieldsMayFailOnStripped((uint64_t)ReflectionOrDie, this, 0, (uint64_t)&v30);
  uint64_t v14 = v30;
  std::string v15 = v31;
  if (v30 == v31)
  {
    uint64_t v28 = 1;
    if (v30) {
      goto LABEL_42;
    }
    return v28;
  }
  while (1)
  {
    uint64_t v16 = *(void *)v14;
    float v17 = *(std::once_flag::_State_type **)(*(void *)v14 + 48);
    if (v17)
    {
      uint64_t v33 = *(void *)v14;
      long long v34 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v17, memory_order_acquire) != -1)
      {
        uint64_t v36 = &v34;
        unint64_t v37 = &v33;
        v35[0] = &v36;
        std::__call_once(v17, v35, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    int v18 = *(_DWORD *)(v16 + 56);
    if ((v18 & 0xFFFFFFFE) != 0xA) {
      goto LABEL_29;
    }
    unint64_t v19 = *(std::once_flag::_State_type **)(v16 + 48);
    if (v19)
    {
      uint64_t v33 = v16;
      long long v34 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v19, memory_order_acquire) != -1)
      {
        uint64_t v36 = &v34;
        unint64_t v37 = &v33;
        v35[0] = &v36;
        std::__call_once(v19, v35, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      int v18 = *(_DWORD *)(v16 + 56);
    }
    if (v18 == 11 && *(unsigned char *)(*(void *)(*(void *)(v16 + 104) + 32) + 75))
    {
      uint64_t v20 = *(void *)(google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)v16) + 40);
      uint64_t v21 = *(std::once_flag::_State_type **)(v20 + 200);
      if (v21)
      {
        uint64_t v33 = v20 + 152;
        long long v34 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v21, memory_order_acquire) != -1)
        {
          uint64_t v36 = &v34;
          unint64_t v37 = &v33;
          v35[0] = &v36;
          std::__call_once(v21, v35, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if ((*(_DWORD *)(v20 + 208) & 0xFFFFFFFE) != 0xA) {
        goto LABEL_29;
      }
      uint64_t v22 = (atomic_uint *)google::protobuf::Reflection::MutableMapData(ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v16);
      if (atomic_load_explicit(v22 + 22, memory_order_acquire) != 1) {
        break;
      }
    }
    if (*(_DWORD *)(v16 + 60) == 3)
    {
      int v23 = google::protobuf::Reflection::FieldSize(ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v16, v12, v13);
      if (v23 >= 1)
      {
        int v24 = 0;
        do
        {
          uint64_t RepeatedMessage = google::protobuf::Reflection::GetRepeatedMessage(ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v16, v24, v13);
          if (((*(uint64_t (**)(uint64_t))(*(void *)RepeatedMessage + 48))(RepeatedMessage) & 1) == 0) {
            goto LABEL_40;
          }
        }
        while (v23 != ++v24);
      }
    }
    else
    {
      uint64_t Message = google::protobuf::Reflection::GetMessage(ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v16, 0, v13);
      if (((*(uint64_t (**)(uint64_t))(*(void *)Message + 48))(Message) & 1) == 0) {
        goto LABEL_40;
      }
    }
LABEL_29:
    v14 += 8;
    if (v14 == v15)
    {
      uint64_t v28 = 1;
      goto LABEL_41;
    }
  }
  google::protobuf::MapIterator::MapIterator((google::protobuf::MapIterator *)&v36, this, (const google::protobuf::FieldDescriptor *)v16);
  google::protobuf::MapIterator::MapIterator((google::protobuf::MapIterator *)v35, this, (const google::protobuf::FieldDescriptor *)v16);
  (*(void (**)(atomic_uint *, void (***)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *)))(*(void *)v22 + 56))(v22, &v36);
  (*(void (**)(atomic_uint *, void *))(*(void *)v22 + 64))(v22, v35);
  while (1)
  {
    if ((*(uint64_t (**)(uint64_t *, void, void *))(*v37 + 48))(v37, &v36, v35))
    {
      google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)v35);
      google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)&v36);
      goto LABEL_29;
    }
    uint64_t MessageValue = google::protobuf::MapValueConstRef::GetMessageValue((google::protobuf::MapValueConstRef *)v38);
    if (((*(uint64_t (**)(uint64_t))(*(void *)MessageValue + 48))(MessageValue) & 1) == 0) {
      break;
    }
    (*(void (**)(uint64_t *, void (***)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *)))(*v37 + 152))(v37, &v36);
  }
  google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)v35);
  google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)&v36);
LABEL_40:
  uint64_t v28 = 0;
LABEL_41:
  uint64_t v14 = v30;
  if (v30)
  {
LABEL_42:
    uint64_t v31 = v14;
    operator delete(v14);
  }
  return v28;
}

void sub_1891BBBDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ReflectionOps::DiscardUnknownFields(google::protobuf::internal::ReflectionOps *this, google::protobuf::Message *a2)
{
  v30[2] = *MEMORY[0x1E4F143B8];
  uint64_t ReflectionOrDie = google::protobuf::internal::GetReflectionOrDie(this, a2);
  int v4 = (unint64_t *)((char *)this + *(unsigned int *)(ReflectionOrDie + 36));
  if (*v4) {
    uint64_t v5 = (char *)((*v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    uint64_t v5 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v4);
  }
  if (*(void *)v5 != *((void *)v5 + 1)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)v5);
  }
  uint64_t v22 = 0;
  int v23 = 0;
  uint64_t v24 = 0;
  google::protobuf::Reflection::ListFieldsMayFailOnStripped(ReflectionOrDie, this, 0, (uint64_t)&v22);
  int v8 = v22;
  uint64_t v9 = v23;
  if (v22 != v23)
  {
    do
    {
      uint64_t v10 = *(void *)v8;
      int v11 = *(std::once_flag::_State_type **)(*(void *)v8 + 48);
      if (v11)
      {
        uint64_t v25 = *(void *)v8;
        uint64_t v26 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
        {
          uint64_t v28 = &v26;
          int v29 = &v25;
          v27[0] = &v28;
          std::__call_once(v11, v27, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      int v12 = *(_DWORD *)(v10 + 56);
      if ((v12 & 0xFFFFFFFE) == 0xA)
      {
        int v13 = *(std::once_flag::_State_type **)(v10 + 48);
        if (v13)
        {
          uint64_t v25 = v10;
          uint64_t v26 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
          {
            uint64_t v28 = &v26;
            int v29 = &v25;
            v27[0] = &v28;
            std::__call_once(v13, v27, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
          int v12 = *(_DWORD *)(v10 + 56);
        }
        if (v12 != 11 || !*(unsigned char *)(*(void *)(*(void *)(v10 + 104) + 32) + 75)) {
          goto LABEL_24;
        }
        uint64_t v14 = *(void *)(google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)v10) + 40);
        std::string v15 = *(std::once_flag::_State_type **)(v14 + 200);
        if (v15)
        {
          uint64_t v25 = v14 + 152;
          uint64_t v26 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v15, memory_order_acquire) != -1)
          {
            uint64_t v28 = &v26;
            int v29 = &v25;
            v27[0] = &v28;
            std::__call_once(v15, v27, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if ((*(_DWORD *)(v14 + 208) & 0xFFFFFFFE) == 0xA)
        {
          uint64_t v16 = (atomic_uint *)google::protobuf::Reflection::MutableMapData((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v10);
          if (atomic_load_explicit(v16 + 22, memory_order_acquire) != 1)
          {
            google::protobuf::MapIterator::MapIterator((google::protobuf::MapIterator *)&v28, this, (const google::protobuf::FieldDescriptor *)v10);
            google::protobuf::MapIterator::MapIterator((google::protobuf::MapIterator *)v27, this, (const google::protobuf::FieldDescriptor *)v10);
            (*(void (**)(atomic_uint *, void (***)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *)))(*(void *)v16 + 56))(v16, &v28);
            (*(void (**)(atomic_uint *, void *))(*(void *)v16 + 64))(v16, v27);
            while (((*(uint64_t (**)(uint64_t *, void, void *))(*v29 + 48))(v29, &v28, v27) & 1) == 0)
            {
              *((_DWORD *)v29 + 22) = 0;
              uint64_t v17 = google::protobuf::MapValueRef::MutableMessageValue((google::protobuf::MapValueRef *)v30);
              (*(void (**)(uint64_t))(*(void *)v17 + 128))(v17);
              (*(void (**)(uint64_t *, void (***)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *)))(*v29 + 152))(v29, &v28);
            }
            google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)v27);
            google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)&v28);
          }
        }
        else
        {
LABEL_24:
          if (*(_DWORD *)(v10 + 60) == 3)
          {
            int v18 = google::protobuf::Reflection::FieldSize((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v10, v6, v7);
            if (v18 >= 1)
            {
              for (int i = 0; i != v18; ++i)
              {
                uint64_t v20 = google::protobuf::Reflection::MutableRepeatedMessage((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v10, i, v7);
                (*(void (**)(uint64_t))(*(void *)v20 + 128))(v20);
              }
            }
          }
          else
          {
            uint64_t v21 = google::protobuf::Reflection::MutableMessage((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v10, 0, v7);
            (*(void (**)(uint64_t))(*(void *)v21 + 128))(v21);
          }
        }
      }
      v8 += 8;
    }
    while (v8 != v9);
    int v8 = v22;
  }
  if (v8)
  {
    int v23 = v8;
    operator delete(v8);
  }
}

void sub_1891BC054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::MapValueRef::MutableMessageValue(google::protobuf::MapValueRef *this)
{
  if (google::protobuf::MapValueConstRef::type(this) != 10)
  {
    int v4 = 3;
    uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v6 = 814;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueRef::MutableMessageValue");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "message");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    int v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(void *)this;
}

void sub_1891BC1B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::ReflectionOps::FindInitializationErrors(google::protobuf::internal *a1, const void **a2, uint64_t a3)
{
  uint64_t v6 = (*(uint64_t (**)(google::protobuf::internal *))(*(void *)a1 + 152))(a1);
  uint64_t ReflectionOrDie = (google::protobuf::_anonymous_namespace_ **)google::protobuf::internal::GetReflectionOrDie(a1, v7);
  int v11 = *(_DWORD *)(v6 + 104);
  if (v11 >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 152 * v11;
    do
    {
      uint64_t v14 = (const google::protobuf::FieldDescriptor *)(*(void *)(v6 + 40) + v12);
      if (*((_DWORD *)v14 + 15) == 2
        && (google::protobuf::Reflection::HasField(ReflectionOrDie, a1, v14, v8, v9) & 1) == 0)
      {
        std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(a2, *(const void ***)(*(void *)(v6 + 40) + v12), (uint64_t)&__p);
        unint64_t v16 = *(void *)(a3 + 8);
        unint64_t v15 = *(void *)(a3 + 16);
        if (v16 >= v15)
        {
          unint64_t v18 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *(void *)a3) >> 3);
          unint64_t v19 = v18 + 1;
          if (v18 + 1 > 0xAAAAAAAAAAAAAAALL) {
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          }
          unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v15 - *(void *)a3) >> 3);
          if (2 * v20 > v19) {
            unint64_t v19 = 2 * v20;
          }
          if (v20 >= 0x555555555555555) {
            unint64_t v21 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v21 = v19;
          }
          __v.__end_cap_.__value_ = (std::allocator<std::string> *)(a3 + 16);
          if (v21) {
            uint64_t v22 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::TrafficDynamicTile::Flow>>(a3 + 16, v21);
          }
          else {
            uint64_t v22 = 0;
          }
          int v23 = v22 + v18;
          __v.__first_ = v22;
          __v.__begin_ = v23;
          __v.__end_cap_.__value_ = &v22[v21];
          long long v24 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          v23->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
          *(_OWORD *)&v23->__r_.__value_.__l.__data_ = v24;
          memset(&__p, 0, sizeof(__p));
          __v.__end_ = v23 + 1;
          std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)a3, &__v);
          uint64_t v25 = *(void *)(a3 + 8);
          std::__split_buffer<std::string>::~__split_buffer(&__v);
          int v26 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
          *(void *)(a3 + 8) = v25;
          if (v26 < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          long long v17 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          *(void *)(v16 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
          *(_OWORD *)unint64_t v16 = v17;
          *(void *)(a3 + 8) = v16 + 24;
        }
      }
      v12 += 152;
    }
    while (v13 != v12);
  }
  memset(&__v, 0, 24);
  google::protobuf::Reflection::ListFieldsMayFailOnStripped((uint64_t)ReflectionOrDie, a1, 0, (uint64_t)&__v);
  first = __v.__first_;
  std::__split_buffer<std::string>::pointer begin = __v.__begin_;
  if (__v.__first_ != __v.__begin_)
  {
    do
    {
      uint64_t v31 = (const google::protobuf::FieldDescriptor *)first->__r_.__value_.__r.__words[0];
      uint64_t v32 = *(std::once_flag::_State_type **)(first->__r_.__value_.__r.__words[0] + 48);
      if (v32)
      {
        std::string::size_type v39 = first->__r_.__value_.__r.__words[0];
        int64x2_t v40 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v32, memory_order_acquire) != -1)
        {
          __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v40;
          __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v39;
          std::__split_buffer<std::string>::pointer p_p = &__p;
          std::__call_once(v32, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if ((*((_DWORD *)v31 + 14) & 0xFFFFFFFE) == 0xA)
      {
        if (*((_DWORD *)v31 + 15) == 3)
        {
          int v33 = google::protobuf::Reflection::FieldSize(ReflectionOrDie, a1, v31, v27, v28);
          if (v33 >= 1)
          {
            long long v34 = 0;
            do
            {
              uint64_t RepeatedMessage = google::protobuf::Reflection::GetRepeatedMessage(ReflectionOrDie, a1, v31, (int)v34, v28);
              google::protobuf::internal::SubMessagePrefix(&__p, (uint64_t)a2, (const std::string::value_type **)v31, v34);
              google::protobuf::internal::ReflectionOps::FindInitializationErrors(RepeatedMessage, &__p, a3);
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p.__r_.__value_.__l.__data_);
              }
              long long v34 = (google::protobuf *)(v34 + 1);
            }
            while (v33 != v34);
          }
        }
        else
        {
          uint64_t Message = google::protobuf::Reflection::GetMessage(ReflectionOrDie, a1, v31, 0, v28);
          google::protobuf::internal::SubMessagePrefix(&__p, (uint64_t)a2, (const std::string::value_type **)v31, (google::protobuf *)0xFFFFFFFFLL);
          google::protobuf::internal::ReflectionOps::FindInitializationErrors(Message, &__p, a3);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
      }
      first = (std::string *)((char *)first + 8);
    }
    while (first != begin);
    first = __v.__first_;
  }
  if (first)
  {
    __v.__begin_ = first;
    operator delete(first);
  }
}

void sub_1891BC534(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *google::protobuf::internal::SubMessagePrefix(std::string *this, uint64_t a2, const std::string::value_type **a3, google::protobuf *a4)
{
  *(void *)&v24[31] = *MEMORY[0x1E4F143B8];
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    *this = *(std::string *)a2;
  }
  if (*((unsigned char *)a3 + 67))
  {
    std::string::append(this, "(");
    long long v7 = a3[1];
    int v8 = v7[23];
    if (v8 >= 0) {
      uint64_t v9 = a3[1];
    }
    else {
      uint64_t v9 = *(const std::string::value_type **)v7;
    }
    if (v8 >= 0) {
      std::string::size_type v10 = *((unsigned __int8 *)v7 + 23);
    }
    else {
      std::string::size_type v10 = *((void *)v7 + 1);
    }
    std::string::append(this, v9, v10);
    std::string::append(this, ")");
  }
  else
  {
    int v11 = (*a3)[23];
    if (v11 >= 0) {
      uint64_t v12 = *a3;
    }
    else {
      uint64_t v12 = *(const std::string::value_type **)*a3;
    }
    if (v11 >= 0) {
      std::string::size_type v13 = *((unsigned __int8 *)*a3 + 23);
    }
    else {
      std::string::size_type v13 = *((void *)*a3 + 1);
    }
    std::string::append(this, v12, v13);
  }
  if (a4 != -1)
  {
    std::string::append(this, "[");
    int __src = &v23;
    if ((a4 & 0x80000000) != 0)
    {
      unint64_t v15 = v24;
      char v23 = 45;
      a4 = (google::protobuf *)-(int)a4;
    }
    else
    {
      unint64_t v15 = &v23;
    }
    size_t v22 = google::protobuf::FastUInt32ToBufferLeft(a4, v15, v14) - &v23;
    std::string::basic_string[abi:ne180100](__p, __src, v22);
    if ((v20 & 0x80u) == 0) {
      unint64_t v16 = __p;
    }
    else {
      unint64_t v16 = (void **)__p[0];
    }
    if ((v20 & 0x80u) == 0) {
      std::string::size_type v17 = v20;
    }
    else {
      std::string::size_type v17 = (std::string::size_type)__p[1];
    }
    std::string::append(this, (const std::string::value_type *)v16, v17);
    if ((char)v20 < 0) {
      operator delete(__p[0]);
    }
    std::string::append(this, "]");
  }
  return std::string::append(this, ".");
}

void sub_1891BC760(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v14 + 23) < 0) {
    operator delete(*(void **)v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>(uint64_t a1)
{
  return (***(uint64_t (****)(void))a1)(**(void **)(*(void *)a1 + 8));
}

google::protobuf::MapIterator *google::protobuf::MapIterator::MapIterator(google::protobuf::MapIterator *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  uint64_t v6 = (char *)this + 16;
  *((_DWORD *)this + 10) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  (*(void (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  *((void *)this + 1) = google::protobuf::Reflection::MutableMapData(v7, a2, a3);
  uint64_t v8 = google::protobuf::FieldDescriptor::message_type(a3);
  std::string::basic_string[abi:ne180100]<0>(__p, "key");
  uint64_t FieldByName = google::protobuf::Descriptor::FindFieldByName(v8, (uint64_t *)__p, v9);
  int v11 = *(std::once_flag::_State_type **)(FieldByName + 48);
  if (v11)
  {
    uint64_t v19 = FieldByName;
    unsigned __int8 v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
    {
      size_t v22 = &v20;
      char v23 = &v19;
      unint64_t v21 = &v22;
      std::__call_once(v11, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  google::protobuf::MapKey::SetType((uint64_t)v6, google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(FieldByName + 56)]);
  if (v18 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v12 = google::protobuf::FieldDescriptor::message_type(a3);
  std::string::basic_string[abi:ne180100]<0>(__p, "value");
  uint64_t v14 = google::protobuf::Descriptor::FindFieldByName(v12, (uint64_t *)__p, v13);
  unint64_t v15 = *(std::once_flag::_State_type **)(v14 + 48);
  if (v15)
  {
    uint64_t v19 = v14;
    unsigned __int8 v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v15, memory_order_acquire) != -1)
    {
      size_t v22 = &v20;
      char v23 = &v19;
      unint64_t v21 = &v22;
      std::__call_once(v15, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  *((_DWORD *)this + 14) = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v14 + 56)];
  if (v18 < 0) {
    operator delete(__p[0]);
  }
  (*(void (**)(void, google::protobuf::MapIterator *))(**((void **)this + 1) + 128))(*((void *)this + 1), this);
  return this;
}

void sub_1891BC99C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (*(_DWORD *)(v15 + 40) == 9 && *(char *)(v15 + 39) < 0) {
    operator delete(*v14);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::MapKey::SetType(uint64_t a1, int a2)
{
  int v2 = *(_DWORD *)(a1 + 24);
  if (v2 != a2)
  {
    if (v2 == 9 && *(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    *(_DWORD *)(a1 + 24) = a2;
    if (a2 == 9)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
    }
  }
}

uint64_t google::protobuf::MapValueConstRef::type(google::protobuf::MapValueConstRef *this)
{
  uint64_t result = *((unsigned int *)this + 2);
  if (!result || !*(void *)this)
  {
    int v3 = 3;
    int v4 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v5 = 742;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::type MapValueConstRef is not initialized.");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v3);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    return *((unsigned int *)this + 2);
  }
  return result;
}

void sub_1891BCAE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::MapIterator::~MapIterator(google::protobuf::MapIterator *this)
{
  if (*((_DWORD *)this + 10) == 9 && *((char *)this + 39) < 0) {
    operator delete(*((void **)this + 2));
  }
}

void std::vector<google::protobuf::FieldDescriptor const*>::reserve(void **a1, unint64_t a2)
{
  int v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 3)
  {
    if (a2 >> 61) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(v3, a2);
    long long v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF8];
    uint64_t v9 = &v6[8 * v8];
    int v11 = (char *)*a1;
    std::string::size_type v10 = (char *)a1[1];
    uint64_t v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        uint64_t v13 = *((void *)v10 - 1);
        v10 -= 8;
        *((void *)v12 - 1) = v13;
        v12 -= 8;
      }
      while (v10 != v11);
      std::string::size_type v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

uint64_t google::protobuf::MapValueConstRef::GetInt32Value(google::protobuf::MapValueConstRef *this)
{
  if (google::protobuf::MapValueConstRef::type(this) != 1)
  {
    int v4 = 3;
    int64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v6 = 695;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetInt32Value");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "int32");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    int v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return **(unsigned int **)this;
}

void sub_1891BCD28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapValueConstRef::GetInt64Value(google::protobuf::MapValueConstRef *this)
{
  if (google::protobuf::MapValueConstRef::type(this) != 2)
  {
    int v4 = 3;
    int64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v6 = 685;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetInt64Value");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "int64");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    int v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return **(void **)this;
}

void sub_1891BCE54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapValueConstRef::GetUInt32Value(google::protobuf::MapValueConstRef *this)
{
  if (google::protobuf::MapValueConstRef::type(this) != 3)
  {
    int v4 = 3;
    int64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v6 = 700;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetUInt32Value");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "uint32");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    int v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return **(unsigned int **)this;
}

void sub_1891BCF80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapValueConstRef::GetUInt64Value(google::protobuf::MapValueConstRef *this)
{
  if (google::protobuf::MapValueConstRef::type(this) != 4)
  {
    int v4 = 3;
    int64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v6 = 690;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetUInt64Value");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "uint64");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    int v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return **(void **)this;
}

void sub_1891BD0AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double google::protobuf::MapValueConstRef::GetDoubleValue(google::protobuf::MapValueConstRef *this)
{
  if (google::protobuf::MapValueConstRef::type(this) != 5)
  {
    int v4 = 3;
    int64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v6 = 723;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetDoubleValue");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "double");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    int v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return **(double **)this;
}

void sub_1891BD1D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

float google::protobuf::MapValueConstRef::GetFloatValue(google::protobuf::MapValueConstRef *this)
{
  if (google::protobuf::MapValueConstRef::type(this) != 6)
  {
    int v4 = 3;
    int64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v6 = 718;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetFloatValue");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "float");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    int v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return **(float **)this;
}

void sub_1891BD304(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapValueConstRef::GetBoolValue(google::protobuf::MapValueConstRef *this)
{
  if (google::protobuf::MapValueConstRef::type(this) != 7)
  {
    int v4 = 3;
    int64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v6 = 704;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetBoolValue");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "BOOL");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    int v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return **(unsigned __int8 **)this;
}

void sub_1891BD430(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapValueConstRef::GetStringValue(google::protobuf::MapValueConstRef *this)
{
  if (google::protobuf::MapValueConstRef::type(this) != 9)
  {
    int v4 = 3;
    int64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v6 = 713;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetStringValue");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "string");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    int v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(void *)this;
}

void sub_1891BD558(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapValueConstRef::GetEnumValue(google::protobuf::MapValueConstRef *this)
{
  if (google::protobuf::MapValueConstRef::type(this) != 8)
  {
    int v4 = 3;
    int64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v6 = 708;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetEnumValue");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "enum");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    int v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return **(unsigned int **)this;
}

void sub_1891BD684(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void std::bad_function_call::~bad_function_call(std::bad_function_call *this)
{
  std::exception::~exception(this);

  JUMPOUT(0x18C11F580);
}

_OWORD *std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string>(uint64_t **a1, const void **a2, uint64_t a3)
{
  int64_t v5 = (void **)std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::__find_equal<std::string>((uint64_t)a1, &v9, a2);
  int v6 = *v5;
  if (!*v5)
  {
    long long v7 = (uint64_t **)v5;
    int v6 = operator new(0x38uLL);
    std::string v6[2] = *(_OWORD *)a3;
    *((void *)v6 + 6) = *(void *)(a3 + 16);
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::__insert_node_at(a1, v9, v7, (uint64_t *)v6);
  }
  return v6;
}

uint64_t google::protobuf::io::Tokenizer::Tokenizer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = a3;
  *(void *)(a1 + 140) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(unsigned char *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 160) = -1;
  *(unsigned char *)(a1 + 164) = 0;
  *(_DWORD *)(a1 + 168) = 0;
  *(_WORD *)(a1 + 172) = 1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(_DWORD *)a1 = 0;
  google::protobuf::io::Tokenizer::Refresh(a1);
  return a1;
}

void sub_1891BD7F8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 79) < 0) {
    operator delete(*v3);
  }
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::io::Tokenizer::Refresh(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 136))
  {
    *(unsigned char *)(this + 112) = 0;
  }
  else
  {
    int v2 = *(std::string **)(this + 152);
    if (v2)
    {
      uint64_t v3 = *(int *)(v1 + 160);
      int v4 = *(_DWORD *)(v1 + 128);
      if (v4 > (int)v3)
      {
        std::string::append(v2, (const std::string::value_type *)(*(void *)(v1 + 120) + v3), v4 - (int)v3);
        *(_DWORD *)(v1 + 160) = 0;
      }
    }
    long long v7 = 0;
    *(void *)(v1 + 120) = 0;
    *(_DWORD *)(v1 + 132) = 0;
    while (1)
    {
      this = (*(uint64_t (**)(void, char **, uint64_t))(**(void **)(v1 + 96) + 16))(*(void *)(v1 + 96), &v7, v1 + 128);
      if ((this & 1) == 0) {
        break;
      }
      if (*(_DWORD *)(v1 + 128))
      {
        int64_t v5 = v7;
        *(void *)(v1 + 120) = v7;
        char v6 = *v5;
        goto LABEL_11;
      }
    }
    char v6 = 0;
    *(_DWORD *)(v1 + 128) = 0;
    *(unsigned char *)(v1 + 136) = 1;
LABEL_11:
    *(unsigned char *)(v1 + 112) = v6;
  }
  return this;
}

void google::protobuf::io::Tokenizer::~Tokenizer(google::protobuf::io::Tokenizer *this)
{
  int v2 = *((_DWORD *)this + 32);
  int v3 = *((_DWORD *)this + 33);
  if (v2 > v3) {
    (*(void (**)(void, void))(**((void **)this + 12) + 24))(*((void *)this + 12), (v2 - v3));
  }
  if (*((char *)this + 79) < 0) {
    operator delete(*((void **)this + 7));
  }
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
}

uint64_t google::protobuf::io::Tokenizer::NextChar(uint64_t this)
{
  int v1 = *(unsigned __int8 *)(this + 112);
  if (v1 == 9)
  {
    int v2 = *(_DWORD *)(this + 144);
    if (v2 <= 0) {
      int v3 = -(-v2 & 7);
    }
    else {
      int v3 = *(_DWORD *)(this + 144) & 7;
    }
    int v4 = v2 - v3 + 8;
  }
  else
  {
    if (v1 == 10)
    {
      *(void *)(this + 140) = (*(_DWORD *)(this + 140) + 1);
      goto LABEL_10;
    }
    int v4 = *(_DWORD *)(this + 144) + 1;
  }
  *(_DWORD *)(this + 144) = v4;
LABEL_10:
  int v5 = *(_DWORD *)(this + 128);
  uint64_t v6 = *(int *)(this + 132) + 1;
  *(_DWORD *)(this + 132) = v6;
  if ((int)v6 >= v5) {
    return google::protobuf::io::Tokenizer::Refresh(this);
  }
  *(unsigned char *)(this + 112) = *(unsigned char *)(*(void *)(this + 120) + v6);
  return this;
}

void google::protobuf::io::Tokenizer::ConsumeString(google::protobuf::io::Tokenizer *this, unsigned __int8 a2)
{
  while (1)
  {
    int v4 = *((char *)this + 112);
    if (v4 == 10) {
      break;
    }
    if (v4 == 92)
    {
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      int v6 = *((unsigned __int8 *)this + 112);
      BOOL v7 = (v6 - 97) > 0x15 || ((1 << (v6 - 97)) & 0x2A2023) == 0;
      if (!v7
        || (v6 - 34) <= 0x3A && ((1 << (v6 - 34)) & 0x400000020000021) != 0
        || (v6 & 0xF8) == 0x30)
      {
        goto LABEL_22;
      }
      switch(v6)
      {
        case 'U':
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if (*((unsigned char *)this + 112) != 48) {
            goto LABEL_41;
          }
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if (*((unsigned char *)this + 112) != 48) {
            goto LABEL_41;
          }
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if ((*((unsigned char *)this + 112) & 0xFE) != 0x30) {
            goto LABEL_41;
          }
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if ((*((unsigned char *)this + 112) - 48) >= 0xAu)
          {
            unsigned int v9 = *((unsigned __int8 *)this + 112) - 65;
            if (v9 > 0x25 || ((1 << v9) & 0x3F0000003FLL) == 0) {
              goto LABEL_41;
            }
          }
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if ((*((unsigned char *)this + 112) - 48) >= 0xAu)
          {
            unsigned int v10 = *((unsigned __int8 *)this + 112) - 65;
            if (v10 > 0x25 || ((1 << v10) & 0x3F0000003FLL) == 0) {
              goto LABEL_41;
            }
          }
          if ((google::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((unsigned char *)this + 112) - 48) >= 0xAu)
            && ((unsigned int v11 = *((unsigned __int8 *)this + 112) - 65, v11 > 0x25) || ((1 << v11) & 0x3F0000003FLL) == 0)
            || (google::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((unsigned char *)this + 112) - 48) >= 0xAu)
            && ((unsigned int v12 = *((unsigned __int8 *)this + 112) - 65, v12 > 0x25) || ((1 << v12) & 0x3F0000003FLL) == 0)
            || (google::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((unsigned char *)this + 112) - 48) >= 0xAu)
            && ((unsigned int v13 = *((unsigned __int8 *)this + 112) - 65, v13 > 0x25) || ((1 << v13) & 0x3F0000003FLL) == 0))
          {
LABEL_41:
            std::string::basic_string[abi:ne180100]<0>(__p, "Expected eight hex digits up to 10ffff for \\U escape sequence");
            (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
            goto LABEL_56;
          }
LABEL_22:
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          break;
        case 'u':
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if ((*((unsigned char *)this + 112) - 48) >= 0xAu
            && ((unsigned int v14 = *((unsigned __int8 *)this + 112) - 65, v14 > 0x25) || ((1 << v14) & 0x3F0000003FLL) == 0)
            || (google::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((unsigned char *)this + 112) - 48) >= 0xAu)
            && ((unsigned int v15 = *((unsigned __int8 *)this + 112) - 65, v15 > 0x25) || ((1 << v15) & 0x3F0000003FLL) == 0)
            || (google::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((unsigned char *)this + 112) - 48) >= 0xAu)
            && ((unsigned int v16 = *((unsigned __int8 *)this + 112) - 65, v16 > 0x25) || ((1 << v16) & 0x3F0000003FLL) == 0)
            || (google::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((unsigned char *)this + 112) - 48) >= 0xAu)
            && ((unsigned int v17 = *((unsigned __int8 *)this + 112) - 65, v17 > 0x25) || ((1 << v17) & 0x3F0000003FLL) == 0))
          {
            std::string::basic_string[abi:ne180100]<0>(__p, "Expected four hex digits for \\u escape sequence.");
            (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
            goto LABEL_56;
          }
          goto LABEL_22;
        case 'x':
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if ((*((unsigned char *)this + 112) - 48) < 0xAu) {
            goto LABEL_22;
          }
          unsigned int v8 = *((unsigned __int8 *)this + 112) - 65;
          if (v8 <= 0x25 && ((1 << v8) & 0x3F0000003FLL) != 0) {
            goto LABEL_22;
          }
          std::string::basic_string[abi:ne180100]<0>(__p, "Expected hex digits for escape sequence.");
          (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
LABEL_56:
          if (v19 < 0) {
            operator delete(__p[0]);
          }
          break;
        default:
          std::string::basic_string[abi:ne180100]<0>(__p, "Invalid escape sequence in string literal.");
          (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
          goto LABEL_56;
      }
    }
    else
    {
      if (!*((unsigned char *)this + 112))
      {
        std::string::basic_string[abi:ne180100]<0>(__p, "Unexpected end of string.");
        (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
        goto LABEL_60;
      }
      int v5 = *((unsigned __int8 *)this + 112);
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      if (v5 == a2) {
        return;
      }
    }
  }
  if (*((unsigned char *)this + 173)) {
    goto LABEL_22;
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "String literals cannot cross line boundaries.");
  (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
LABEL_60:
  if (v19 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1891BDF30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::io::Tokenizer::ConsumeNumber(google::protobuf::io::Tokenizer *this, char a2, int a3)
{
  int v4 = *((unsigned __int8 *)this + 112);
  if (a2)
  {
    if ((v4 | 0x20) == 0x78)
    {
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      if ((*((unsigned char *)this + 112) - 48) > 9u
        && ((v5 = *((unsigned __int8 *)this + 112) - 65, BOOL v17 = v5 > 0x25, v6 = (1 << v5) & 0x3F0000003FLL, !v17)
          ? (BOOL v7 = v6 == 0)
          : (BOOL v7 = 1),
            v7))
      {
        std::string::basic_string[abi:ne180100]<0>(__p, "\"0x\" must be followed by hex digits.");
        (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
        if (v20 < 0) {
          operator delete(__p[0]);
        }
      }
      else
      {
        do
        {
          do
            google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          while ((*((unsigned char *)this + 112) - 48) < 0xAu);
          unsigned int v8 = *((unsigned __int8 *)this + 112) - 65;
          BOOL v17 = v8 > 0x25;
          uint64_t v9 = (1 << v8) & 0x3F0000003FLL;
        }
        while (!v17 && v9 != 0);
      }
LABEL_14:
      int v11 = 0;
      goto LABEL_50;
    }
    unsigned __int8 v12 = v4 - 48;
    if ((v4 - 48) <= 9)
    {
      if ((v4 & 0xF8) != 0x30) {
        goto LABEL_32;
      }
      do
      {
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v13 = *((unsigned __int8 *)this + 112);
      }
      while ((v13 & 0xF8) == 0x30);
      if ((v13 - 48) <= 9)
      {
LABEL_32:
        std::string::basic_string[abi:ne180100]<0>(__p, "Numbers starting with leading zero must be in octal.");
        (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
        if (v20 < 0) {
          operator delete(__p[0]);
        }
        if (*((unsigned __int8 *)this + 112) - 48 <= 9)
        {
          do
          {
            google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
            int v11 = 0;
          }
          while (*((unsigned __int8 *)this + 112) - 48 < 0xA);
          goto LABEL_50;
        }
      }
      goto LABEL_14;
    }
  }
  else
  {
    unsigned __int8 v12 = v4 - 48;
  }
  if (a3)
  {
    if (v12 <= 9u)
    {
      do
      {
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v4 = *((unsigned __int8 *)this + 112);
      }
      while ((v4 - 48) < 0xA);
    }
  }
  else
  {
    if (v12 <= 9u)
    {
      do
      {
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v4 = *((unsigned __int8 *)this + 112);
      }
      while ((v4 - 48) < 0xA);
    }
    if (v4 != 46)
    {
      int v11 = 0;
      goto LABEL_36;
    }
    google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    int v4 = *((unsigned __int8 *)this + 112);
    if ((v4 - 48) <= 9)
    {
      do
      {
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v4 = *((unsigned __int8 *)this + 112);
      }
      while ((v4 - 48) < 0xA);
    }
  }
  int v11 = 1;
LABEL_36:
  if ((v4 | 0x20) == 0x65)
  {
    google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    int v14 = *((unsigned __int8 *)this + 112);
    if (v14 == 45 || v14 == 43)
    {
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      int v14 = *((unsigned __int8 *)this + 112);
    }
    if ((v14 - 48) > 9)
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "\"e\" must be followed by exponent.");
      (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
      if (v20 < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
      do
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      while (*((unsigned __int8 *)this + 112) - 48 < 0xA);
    }
    int v11 = 1;
  }
  if (*((unsigned char *)this + 164))
  {
    int v15 = *((unsigned __int8 *)this + 112);
    if (v15 == 70 || v15 == 102)
    {
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      int v11 = 1;
    }
  }
LABEL_50:
  int v16 = *((unsigned __int8 *)this + 112);
  BOOL v17 = v16 != 95 && (v16 & 0xFFFFFFDF) - 65 > 0x19;
  if (v17 || !*((unsigned char *)this + 172))
  {
    if (v16 != 46) {
      goto LABEL_63;
    }
    if (v11) {
      std::string::basic_string[abi:ne180100]<0>(__p, "Already saw decimal point or exponent; can't have another one.");
    }
    else {
      std::string::basic_string[abi:ne180100]<0>(__p, "Hex and octal numbers must be integers.");
    }
    (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "Need space between number and identifier.");
    (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
  }
  if (v20 < 0) {
    operator delete(__p[0]);
  }
LABEL_63:
  if (v11) {
    return 4;
  }
  else {
    return 3;
  }
}

void sub_1891BE3A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::io::Tokenizer::Next(google::protobuf::io::Tokenizer *this)
{
  *((_DWORD *)this + 12) = *(_DWORD *)this;
  std::string::operator=((std::string *)((char *)this + 56), (const std::string *)((char *)this + 8));
  *((void *)this + 10) = *((void *)this + 4);
  *((_DWORD *)this + 22) = *((_DWORD *)this + 10);
  if (!*((unsigned char *)this + 136))
  {
    while (1)
    {
LABEL_4:
      while (1)
      {
        uint64_t v2 = *((unsigned __int8 *)this + 112);
        if ((v2 - 9) >= 5 && v2 != 32) {
          break;
        }
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      }
      int v3 = *((_DWORD *)this + 42);
      if (v3 != 1) {
        break;
      }
      if (v2 != 35) {
        goto LABEL_17;
      }
      do
      {
LABEL_14:
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if (!*((unsigned char *)this + 112)) {
          goto LABEL_47;
        }
      }
      while (*((unsigned char *)this + 112) != 10);
LABEL_16:
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
LABEL_47:
      if (*((unsigned char *)this + 136)) {
        goto LABEL_2;
      }
    }
    if (!v3 && v2 == 47)
    {
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      int v4 = *((unsigned __int8 *)this + 112);
      if (v4 != 42)
      {
        if (v4 == 47) {
          goto LABEL_14;
        }
        *(_DWORD *)this = 6;
        MEMORY[0x18C11F1C0]((char *)this + 8, "/");
        int v23 = *((_DWORD *)this + 36);
        *((_DWORD *)this + 8) = *((_DWORD *)this + 35);
        *((_DWORD *)this + 9) = v23 - 1;
        goto LABEL_96;
      }
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      unsigned int v29 = *((_DWORD *)this + 36) - 2;
      unsigned int v30 = *((_DWORD *)this + 35);
      while (1)
      {
LABEL_26:
        while (1)
        {
          unsigned int v5 = *((unsigned __int8 *)this + 112);
          if (v5 <= 0x29) {
            break;
          }
          if (v5 == 42)
          {
            google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
            int v6 = *((unsigned __int8 *)this + 112);
            if (v6 == 47) {
              goto LABEL_16;
            }
            goto LABEL_39;
          }
          if (v5 == 47)
          {
            google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
            int v6 = *((unsigned __int8 *)this + 112);
            if (v6 == 42)
            {
              std::string::basic_string[abi:ne180100]<0>(&__p, "\"/*\" inside block comment.  Block comments cannot be nested.");
              (*(void (**)(void, void, void, std::string *))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), &__p);
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p.__r_.__value_.__l.__data_);
              }
            }
            else
            {
LABEL_39:
              if (!v6) {
                goto LABEL_43;
              }
            }
          }
          else
          {
LABEL_42:
            google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          }
        }
        if (v5 != 10)
        {
          if (!*((unsigned char *)this + 112))
          {
LABEL_43:
            std::string::basic_string[abi:ne180100]<0>(&__p, "End-of-file inside block comment.");
            (*(void (**)(void, void, void, std::string *))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), &__p);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
            uint64_t v8 = *((void *)this + 13);
            std::string::basic_string[abi:ne180100]<0>(&__p, "  Comment started here.");
            (*(void (**)(uint64_t, void, void, std::string *))(*(void *)v8 + 16))(v8, v30, v29, &__p);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
            goto LABEL_47;
          }
          goto LABEL_42;
        }
        while (1)
        {
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          uint64_t v7 = *((unsigned __int8 *)this + 112);
          if (v7 > 0x2A) {
            break;
          }
          if (((1 << v7) & 0x100003A00) == 0)
          {
            if (v7 != 42) {
              goto LABEL_26;
            }
            google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
            if (*((unsigned char *)this + 112) != 47) {
              goto LABEL_26;
            }
            goto LABEL_16;
          }
        }
      }
    }
LABEL_17:
    if (*((unsigned char *)this + 136)) {
      goto LABEL_2;
    }
    if (v2 <= 0x1F)
    {
      std::string::basic_string[abi:ne180100]<0>(&__p, "Invalid control characters encountered in text.");
      (*(void (**)(void, void, void, std::string *))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), &__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      while (1)
      {
        do
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        while (*((unsigned __int8 *)this + 112) - 1 < 0x1F);
        if (*((unsigned char *)this + 136)) {
          goto LABEL_2;
        }
        if (*((unsigned char *)this + 112)) {
          goto LABEL_4;
        }
      }
    }
    *(_DWORD *)this = 0;
    if (*((char *)this + 31) < 0)
    {
      **((unsigned char **)this + 1) = 0;
      *((void *)this + 2) = 0;
      uint64_t v2 = *((unsigned __int8 *)this + 112);
    }
    else
    {
      *((unsigned char *)this + 8) = 0;
      *((unsigned char *)this + 31) = 0;
    }
    uint64_t v10 = *((unsigned int *)this + 35);
    uint64_t v11 = *((unsigned int *)this + 36);
    *((_DWORD *)this + 8) = v10;
    *((_DWORD *)this + 9) = v11;
    *((void *)this + 19) = (char *)this + 8;
    *((_DWORD *)this + 40) = *((_DWORD *)this + 33);
    if (v2 == 95 || (v2 & 0xFFFFFFDF) - 65 <= 0x19)
    {
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      int v14 = *((unsigned __int8 *)this + 112);
      if (v14 == 95 || (v14 - 48) < 0xA || (v14 & 0xFFFFFFDF) - 65 <= 0x19)
      {
        do
        {
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          int v15 = *((unsigned __int8 *)this + 112);
        }
        while (v15 == 95 || (v15 - 48) < 0xA || (v15 & 0xFFFFFFDF) - 65 < 0x1A);
      }
      int v18 = 2;
      goto LABEL_93;
    }
    if (v2 == 46)
    {
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      if (*((unsigned __int8 *)this + 112) - 48 <= 9)
      {
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if (*((_DWORD *)this + 12) == 2
          && *((_DWORD *)this + 8) == *((_DWORD *)this + 20)
          && *((_DWORD *)this + 9) == *((_DWORD *)this + 22))
        {
          uint64_t v19 = *((void *)this + 13);
          uint64_t v20 = *((unsigned int *)this + 35);
          uint64_t v21 = (*((_DWORD *)this + 36) - 2);
          std::string::basic_string[abi:ne180100]<0>(&__p, "Need space between identifier and decimal point.");
          (*(void (**)(uint64_t, uint64_t, uint64_t, std::string *))(*(void *)v19 + 16))(v19, v20, v21, &__p);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        unsigned __int8 v12 = this;
        char v13 = 0;
        int v22 = 1;
        goto LABEL_82;
      }
    }
    else
    {
      if (v2 == 48)
      {
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        unsigned __int8 v12 = this;
        char v13 = 1;
LABEL_81:
        int v22 = 0;
LABEL_82:
        int v18 = google::protobuf::io::Tokenizer::ConsumeNumber(v12, v13, v22);
LABEL_93:
        *(_DWORD *)this = v18;
        int v27 = *((_DWORD *)this + 33);
        uint64_t v28 = *((int *)this + 40);
        if (v27 != v28) {
          std::string::append(*((std::string **)this + 19), (const std::string::value_type *)(*((void *)this + 15) + v28), v27 - (int)v28);
        }
        *((void *)this + 19) = 0;
        *((_DWORD *)this + 40) = -1;
        int v23 = *((_DWORD *)this + 36);
LABEL_96:
        uint64_t result = 1;
        goto LABEL_51;
      }
      if ((v2 - 48) <= 9)
      {
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        unsigned __int8 v12 = this;
        char v13 = 0;
        goto LABEL_81;
      }
      if (v2 == 39)
      {
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        long long v24 = this;
        unsigned __int8 v25 = 39;
        goto LABEL_87;
      }
      if (v2 == 34)
      {
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        long long v24 = this;
        unsigned __int8 v25 = 34;
LABEL_87:
        google::protobuf::io::Tokenizer::ConsumeString(v24, v25);
        int v18 = 5;
        goto LABEL_93;
      }
      if ((v2 & 0x80) != 0)
      {
        uint64_t v26 = *((void *)this + 13);
        google::protobuf::StringPrintf((google::protobuf *)"Interpreting non ascii codepoint %d.", &__p, v2);
        (*(void (**)(uint64_t, uint64_t, uint64_t, std::string *))(*(void *)v26 + 16))(v26, v10, v11, &__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    }
    int v18 = 6;
    goto LABEL_93;
  }
LABEL_2:
  *(_DWORD *)this = 1;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  uint64_t result = 0;
  int v23 = *((_DWORD *)this + 36);
  *((_DWORD *)this + 8) = *((_DWORD *)this + 35);
  *((_DWORD *)this + 9) = v23;
LABEL_51:
  *((_DWORD *)this + 10) = v23;
  return result;
}

void sub_1891BEA54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::io::Tokenizer::ParseInteger(unsigned __int8 *a1, unint64_t a2, unint64_t *a3)
{
  if ((a1[23] & 0x80u) == 0) {
    int v3 = a1;
  }
  else {
    int v3 = *(unsigned __int8 **)a1;
  }
  LODWORD(v4) = *v3;
  if (v4 == 48)
  {
    if ((v3[1] | 0x20) == 0x78)
    {
      int v5 = v3[2];
      v3 += 2;
      LOBYTE(v4) = v5;
      unsigned int v6 = 16;
      if (!v5)
      {
LABEL_9:
        unint64_t v7 = 0;
LABEL_25:
        *a3 = v7;
        return 1;
      }
    }
    else
    {
      LOBYTE(v4) = 48;
      unsigned int v6 = 8;
    }
  }
  else
  {
    unsigned int v6 = 10;
    if (!*v3) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0;
  uint64_t v8 = v3 + 1;
  while (1)
  {
    int v9 = (char)v4;
    unsigned int v10 = (v4 - 48);
    int v11 = (v9 - 65) >= 0x1A ? -1 : v9 - 55;
    int v12 = (v9 - 97) <= 0x19 ? v9 - 87 : v11;
    int v13 = v9 - 48;
    uint64_t v4 = v10 <= 9 ? v13 : v12;
    if (v4 >= v6 || a2 < v4 || v7 > (a2 - v4) / v6) {
      return 0;
    }
    unint64_t v7 = v4 + v7 * v6;
    int v14 = *v8++;
    LOBYTE(v4) = v14;
    if (!v14) {
      goto LABEL_25;
    }
  }
}

double google::protobuf::io::Tokenizer::ParseFloat(uint64_t a1, uint64_t a2, char **a3)
{
  if (*(char *)(a1 + 23) >= 0) {
    uint64_t v4 = (google::protobuf::internal *)a1;
  }
  else {
    uint64_t v4 = *(google::protobuf::internal **)a1;
  }
  *(void *)uint64_t v20 = 0;
  double v5 = google::protobuf::internal::NoLocaleStrtod(v4, v20, a3);
  unsigned int v6 = *(unsigned __int8 **)v20;
  int v7 = **(unsigned char **)v20;
  if ((v7 | 0x20) == 0x65)
  {
    uint64_t v8 = (unsigned __int8 *)++*(void *)v20;
    int v7 = v6[1];
    if (v7 == 45 || v7 == 43)
    {
      uint64_t v8 = v6 + 2;
      *(void *)uint64_t v20 = v6 + 2;
      int v7 = v6[2];
    }
    unsigned int v6 = v8;
  }
  if ((v7 | 0x20) == 0x66) {
    *(void *)uint64_t v20 = ++v6;
  }
  uint64_t v9 = v6 - (unsigned __int8 *)v4;
  uint64_t v10 = *(unsigned __int8 *)(a1 + 23);
  if ((v10 & 0x80u) != 0) {
    uint64_t v10 = *(void *)(a1 + 8);
  }
  if (v9 != v10 || *(unsigned char *)v4 == 45)
  {
    int v16 = 2;
    BOOL v17 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/tokenizer.cc";
    int v18 = 921;
    memset(&v19, 0, sizeof(v19));
    std::string::append(&v19, " Tokenizer::ParseFloat() passed text that could not have been tokenized as a float: ");
    google::protobuf::CEscape((uint64_t *)a1, v11, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::__split_buffer<std::string>::pointer p_p = &__p;
    }
    else {
      std::__split_buffer<std::string>::pointer p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    std::string::append(&v19, (const std::string::value_type *)p_p, size);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v16);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v19.__r_.__value_.__l.__data_);
    }
  }
  return v5;
}

void sub_1891BECD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::io::Tokenizer::ParseStringAppend(unsigned __int8 *a1, std::string *this, uint64_t a3, unsigned int *a4)
{
  uint64_t v5 = a1[23];
  signed __int8 v6 = v5;
  if ((v5 & 0x80u) != 0) {
    uint64_t v5 = *((void *)a1 + 1);
  }
  if (v5)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
    {
      std::string::size_type size = this->__r_.__value_.__l.__size_;
      std::string::size_type v9 = (this->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
    }
    else
    {
      std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
      std::string::size_type v9 = 22;
    }
    if (size + v5 > v9)
    {
      std::string::reserve(this, size + v5);
      signed __int8 v6 = a1[23];
    }
    if (v6 >= 0) {
      uint64_t v13 = (uint64_t)a1;
    }
    else {
      uint64_t v13 = *(void *)a1;
    }
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v14 = v13;
          uint64_t v16 = v13 + 1;
          int v15 = *(unsigned __int8 *)(v13 + 1);
          if (v15 == 92) {
            break;
          }
          if (!*(unsigned char *)(v13 + 1)) {
            return;
          }
LABEL_39:
          if ((a1[23] & 0x80u) == 0) {
            uint64_t v28 = a1;
          }
          else {
            uint64_t v28 = *(unsigned __int8 **)a1;
          }
          if (v15 == *v28)
          {
            uint64_t v13 = v16;
            if (!*(unsigned char *)(v14 + 2)) {
              continue;
            }
          }
          std::string::push_back(this, v15);
          uint64_t v13 = v16;
        }
        v13 += 2;
        char v17 = *(unsigned char *)(v14 + 2);
        if (!v17) {
          goto LABEL_39;
        }
        if ((v17 & 0xF8) == 0x30)
        {
          std::string::value_type v18 = v17 - 48;
          char v20 = *(unsigned char *)(v14 + 3);
          uint64_t v19 = v14 + 3;
          std::string::value_type v21 = v20 + 8 * (v17 - 48) - 48;
          BOOL v22 = (v20 & 0xF8) == 48;
          if ((v20 & 0xF8) == 0x30) {
            uint64_t v23 = v19;
          }
          else {
            uint64_t v23 = v13;
          }
          if (v22) {
            std::string::value_type v18 = v21;
          }
          char v24 = *(unsigned char *)(v23 + 1);
          int v25 = v24 & 0xF8;
          std::string::value_type v26 = v24 + 8 * v18 - 48;
          if (v25 == 48) {
            uint64_t v13 = v23 + 1;
          }
          else {
            uint64_t v13 = v23;
          }
          if (v25 == 48) {
            std::string::value_type v18 = v26;
          }
          std::string::value_type v27 = v18;
          goto LABEL_72;
        }
        if (v17 == 85 || v17 == 117) {
          break;
        }
        if (v17 == 120)
        {
          int v31 = *(unsigned __int8 *)(v14 + 3);
          uint64_t v30 = v14 + 3;
          int v29 = v31;
          unsigned __int8 v32 = v31 - 48;
          unsigned __int8 v33 = v31 - 97;
          if ((v31 - 48) < 0xA || v33 < 6u)
          {
            if (v32 <= 9u) {
              goto LABEL_80;
            }
          }
          else if ((v29 - 65) > 5)
          {
            unsigned __int8 v32 = 0;
            uint64_t v30 = v13;
            goto LABEL_80;
          }
          unsigned int v46 = v33;
          if ((v29 - 65) >= 0x1A) {
            char v47 = -1;
          }
          else {
            char v47 = v29 - 55;
          }
          unsigned __int8 v48 = v29 - 87;
          if (v46 <= 0x19) {
            unsigned __int8 v32 = v48;
          }
          else {
            unsigned __int8 v32 = v47;
          }
LABEL_80:
          int v49 = *(unsigned __int8 *)(v30 + 1);
          char v50 = v49 - 48;
          if ((v49 - 48) >= 0xA && (v49 - 97) >= 6u)
          {
            if ((v49 - 65) > 5) {
              goto LABEL_93;
            }
            char v51 = 16 * v32;
LABEL_87:
            unsigned int v52 = (v49 - 97);
            if ((v49 - 65) >= 0x1A) {
              char v50 = -1;
            }
            else {
              char v50 = v49 - 55;
            }
            char v53 = v49 - 87;
            if (v52 <= 0x19) {
              char v50 = v53;
            }
            goto LABEL_92;
          }
          char v51 = 16 * v32;
          if ((v49 - 48) > 9u) {
            goto LABEL_87;
          }
LABEL_92:
          unsigned __int8 v32 = v50 + v51;
          ++v30;
LABEL_93:
          std::string::push_back(this, v32);
          uint64_t v13 = v30;
        }
        else
        {
          if (v17 > 97)
          {
            switch(v17)
            {
              case 'n':
                std::string::value_type v27 = 10;
                break;
              case 'o':
              case 'p':
              case 'q':
              case 's':
              case 'u':
                goto LABEL_108;
              case 'r':
                std::string::value_type v27 = 13;
                break;
              case 't':
                std::string::value_type v27 = 9;
                break;
              case 'v':
                std::string::value_type v27 = 11;
                break;
              default:
                if (v17 == 102)
                {
                  std::string::value_type v27 = 12;
                }
                else
                {
                  if (v17 != 98) {
                    goto LABEL_108;
                  }
                  std::string::value_type v27 = 8;
                }
                break;
            }
          }
          else if (v17 <= 62)
          {
            if (v17 != 34)
            {
              if (v17 == 39)
              {
                std::string::value_type v27 = 39;
                goto LABEL_72;
              }
              goto LABEL_108;
            }
            std::string::value_type v27 = 34;
          }
          else
          {
            if (v17 == 63) {
              goto LABEL_108;
            }
            if (v17 != 92)
            {
              if (v17 == 97)
              {
                std::string::value_type v27 = 7;
                goto LABEL_72;
              }
LABEL_108:
              std::string::value_type v27 = 63;
              goto LABEL_72;
            }
            std::string::value_type v27 = 92;
          }
LABEL_72:
          std::string::push_back(this, v27);
        }
      }
      LODWORD(__p.__r_.__value_.__l.__data_) = 0;
      int v34 = *(unsigned __int8 *)(v14 + 2);
      if (v34 == 117) {
        uint64_t v35 = 4;
      }
      else {
        uint64_t v35 = 8 * (v34 == 85);
      }
      if (!google::protobuf::io::ReadHexDigits((google::protobuf::io *)(v14 + 3), (const char *)v35, (unsigned int *)&__p, a4))
      {
        std::string::value_type v27 = *(unsigned char *)v13;
        goto LABEL_72;
      }
      uint64_t v42 = v35 | 3;
      int v43 = (unsigned char *)(v14 + v42);
      unsigned int data = __p.__r_.__value_.__l.__data_;
      if (LODWORD(__p.__r_.__value_.__l.__data_) >> 10 == 54)
      {
        if (*v43 == 92 && v43[1] == 117)
        {
          unsigned int v55 = 0;
          if (google::protobuf::io::ReadHexDigits((google::protobuf::io *)(v43 + 2), (const char *)4, &v55, v37)
            && v55 >> 10 == 55)
          {
            unsigned int data = ((v55 - 56320) | ((data << 10) - 56623104)) + 0x10000;
            LODWORD(__p.__r_.__value_.__l.__data_) = data;
            v42 += 6;
          }
        }
        int v43 = (unsigned char *)(v14 + v42);
      }
      else
      {
        if (LODWORD(__p.__r_.__value_.__l.__data_) < 0x80)
        {
          std::string::size_type v45 = 1;
          goto LABEL_100;
        }
        if (LODWORD(__p.__r_.__value_.__l.__data_) <= 0x7FF)
        {
          unsigned int data = (4 * LODWORD(__p.__r_.__value_.__l.__data_)) & 0x1F00 | __p.__r_.__value_.__s.__data_[0] & 0x3F | 0xC080;
          std::string::size_type v45 = 2;
          goto LABEL_100;
        }
      }
      if (!HIWORD(data))
      {
        unsigned int data = (4 * data) & 0x3F00 | data & 0x3F | ((unsigned __int16)data >> 12 << 16) | 0xE08080;
        std::string::size_type v45 = 3;
LABEL_100:
        unsigned int v55 = bswap32(data);
        std::string::append(this, &v56[-v45], v45);
        goto LABEL_101;
      }
      if (HIWORD(data) <= 0x10u)
      {
        unsigned int data = (16 * data) & 0x3F0000 | data & 0x3F | (((data >> 18) & 7) << 24) | (((data >> 6) & 0x3F) << 8) | 0xF0808080;
        std::string::size_type v45 = 4;
        goto LABEL_100;
      }
      AddrObjGoogle::protobuf::StringAppendF(this, "\\U%08x", v36, (uint64_t)v37, v38, v39, v40, v41, data);
LABEL_101:
      uint64_t v13 = (uint64_t)(v43 - 1);
    }
  }
  unsigned int v55 = 2;
  *(void *)&v56[4] = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/tokenizer.cc";
  int v57 = 1042;
  memset(&v58, 0, sizeof(v58));
  std::string::append(&v58, " Tokenizer::ParseStringAppend() passed text that could not have been tokenized as a string: ");
  google::protobuf::CEscape((uint64_t *)a1, v10, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::__split_buffer<std::string>::pointer p_p = &__p;
  }
  else {
    std::__split_buffer<std::string>::pointer p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v12 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v12 = __p.__r_.__value_.__l.__size_;
  }
  std::string::append(&v58, (const std::string::value_type *)p_p, v12);
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v55);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v58.__r_.__value_.__l.__data_);
  }
}

void sub_1891BF270(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::io::Tokenizer::IsIdentifier(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 23);
  if ((v1 & 0x80u) != 0) {
    uint64_t v1 = *(void *)(a1 + 8);
  }
  if (!v1) {
    return 0;
  }
  int v3 = *(unsigned __int8 *)std::string::at((const std::string *)a1, 0);
  if (v3 != 95 && (v3 & 0xFFFFFFDF) - 65 > 0x19) {
    return 0;
  }
  BOOL v5 = 1;
  std::string::basic_string(&__p, (const std::string *)a1, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v18);
  std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (!size) {
    goto LABEL_31;
  }
  std::__split_buffer<std::string>::pointer p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::__split_buffer<std::string>::pointer p_p = &__p;
  }
  int v8 = p_p->__r_.__value_.__s.__data_[0];
  if (v8 == 95 || (v8 - 48) < 0xA || (v8 & 0xFFFFFFDF) - 65 <= 0x19)
  {
    uint64_t v11 = 1;
    do
    {
      std::string::size_type v12 = v11;
      if (size == v11) {
        break;
      }
      int v13 = p_p->__r_.__value_.__s.__data_[v11++];
      BOOL v14 = v13 != 95 && (v13 - 48) >= 0xA;
    }
    while (!v14 || (v13 & 0xFFFFFFDF) - 65 < 0x1A);
    BOOL v5 = size <= v12;
LABEL_31:
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_36;
    }
    return v5;
  }
  BOOL v5 = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
LABEL_36:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
  return v5;
}

BOOL google::protobuf::io::ReadHexDigits(google::protobuf::io *this, const char *a2, unsigned int *a3, unsigned int *a4)
{
  *a3 = 0;
  if (!a2) {
    return 0;
  }
  unsigned int v4 = 0;
  BOOL v5 = (google::protobuf::io *)((char *)this + a2);
  do
  {
    int v6 = *(char *)this;
    BOOL v7 = *(unsigned char *)this != 0;
    if (!*(unsigned char *)this) {
      break;
    }
    int v8 = 16 * v4;
    unsigned int v9 = v6 - 48;
    unsigned int v10 = v6 - 97;
    if ((v6 - 65) >= 0x1A) {
      int v11 = -1;
    }
    else {
      int v11 = v6 - 55;
    }
    unsigned int v12 = v6 - 87;
    if (v10 > 0x19) {
      unsigned int v12 = v11;
    }
    if (v9 <= 9) {
      unsigned int v12 = v9;
    }
    unsigned int v4 = v12 + v8;
    *a3 = v4;
    this = (google::protobuf::io *)((char *)this + 1);
  }
  while (this < v5);
  return v7;
}

uint64_t google::protobuf::internal::ParseAnyTypeUrl(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 < 1) {
    return 0;
  }
  uint64_t v18 = v4;
  uint64_t v19 = v5;
  uint64_t v10 = 0;
  while (*(unsigned char *)(a1 + a2 - 1 + v10) != 47)
  {
    --v10;
    if ((unint64_t)(a2 + v10 + 1) < 2) {
      return 0;
    }
  }
  if (!v10) {
    return 0;
  }
  unint64_t v12 = a2 + v10;
  if (a2 >= v12) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = a2;
  }
  if (a3)
  {
    uint64_t v14 = a1;
    uint64_t v15 = v13;
    google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v14, &v16);
    if (*(char *)(a3 + 23) < 0) {
      operator delete(*(void **)a3);
    }
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 - v13;
  google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v14, &v16);
  if (*(char *)(a4 + 23) < 0) {
    operator delete(*(void **)a4);
  }
  *(_OWORD *)a4 = v16;
  *(void *)(a4 + 16) = v17;
  return 1;
}

std::string *google::protobuf::StringPrintf@<X0>(google::protobuf *this@<X0>, std::string *a2@<X8>, ...)
{
  va_start(va, a2);
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return AddrObjGoogle::protobuf::StringAppendV(a2, (char *)this, va);
}

void sub_1891BF5C8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::MapFieldBase::~MapFieldBase(google::protobuf::internal::MapFieldBase *this)
{
  *(void *)this = &unk_1ED515C58;
  uint64_t v2 = *((void *)this + 2);
  if (v2 && !*((void *)this + 1))
  {
    google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(*((void **)this + 2));
    MEMORY[0x18C11F580](v2, 0x1020C4014030ADELL);
  }
  std::mutex::~mutex((std::mutex *)((char *)this + 24));
}

void google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(atomic_uint *this)
{
  unsigned int explicit = atomic_load_explicit(this + 22, memory_order_acquire);
  if (explicit == 2)
  {
    int v3 = (std::mutex *)(this + 6);
    std::mutex::lock((std::mutex *)(this + 6));
    if (this[22] == 2)
    {
      if (!*((void *)this + 2))
      {
        uint64_t v4 = *((void *)this + 1);
        if (!v4) {
          operator new();
        }
        if (*(unsigned char *)(v4 + 24)) {
        AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v4, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::Message>>);
        }
        *((void *)AlignedAndAddCleanup + 2) = 0;
        *(void *)AlignedAndAddCleanup = v4;
        *((void *)AlignedAndAddCleanup + 1) = 0;
        *((void *)this + 2) = AlignedAndAddCleanup;
      }
      goto LABEL_13;
    }
  }
  else
  {
    if (explicit) {
      return;
    }
    int v3 = (std::mutex *)(this + 6);
    std::mutex::lock((std::mutex *)(this + 6));
    if (!this[22])
    {
      (*(void (**)(atomic_uint *))(*(void *)this + 112))(this);
LABEL_13:
      atomic_store(2u, (unsigned int *)this + 22);
    }
  }

  std::mutex::unlock(v3);
}

uint64_t google::protobuf::internal::MapFieldBase::SpaceUsedExcludingSelfNoLock(google::protobuf::internal::MapFieldBase *this)
{
  uint64_t v1 = *((void *)this + 2);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = 8 * *(int *)(v1 + 12);
  int v3 = *(int **)(v1 + 16);
  if (v3)
  {
    if (*v3 >= 1)
    {
      uint64_t v4 = 0;
      do
      {
        v2 += (*(uint64_t (**)(void))(**(void **)&v3[2 * v4 + 2] + 136))(*(void *)&v3[2 * v4 + 2]);
        ++v4;
        int v3 = *(int **)(v1 + 16);
      }
      while (v4 < *v3);
    }
    v2 += 8;
  }
  return v2;
}

char *google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMapNoLock(char *this)
{
  if (!*((void *)this + 2))
  {
    uint64_t v1 = this;
    uint64_t v2 = *((void *)this + 1);
    if (!v2) {
      operator new();
    }
    if (*(unsigned char *)(v2 + 24)) {
    this = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v2, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::Message>>);
    }
    *((void *)this + 2) = 0;
    *(void *)this = v2;
    *((void *)this + 1) = 0;
    *((void *)v1 + 2) = this;
  }
  return this;
}

void google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField(google::protobuf::internal::MapFieldBase *this)
{
  if (atomic_load_explicit((atomic_uint *volatile)this + 22, memory_order_acquire) == 1)
  {
    uint64_t v2 = (std::mutex *)((char *)this + 24);
    std::mutex::lock((std::mutex *)((char *)this + 24));
    if (*((_DWORD *)this + 22) == 1)
    {
      (*(void (**)(google::protobuf::internal::MapFieldBase *))(*(void *)this + 120))(this);
      atomic_store(2u, (unsigned int *)this + 22);
    }
    std::mutex::unlock(v2);
  }
}

void google::protobuf::internal::DynamicMapField::~DynamicMapField(google::protobuf::internal::DynamicMapField *this)
{
  *(void *)this = &unk_1ED515D08;
  uint64_t v2 = (char *)this + 96;
  unint64_t v3 = *((void *)this + 15);
  unint64_t v4 = *((void *)this + 13);
  if (v4 > v3)
  {
    uint64_t v5 = *((void *)this + 16);
    while (1)
    {
      int v6 = *(_DWORD **)(v5 + 8 * v3);
      if (v6) {
        break;
      }
      if (v4 == ++v3) {
        goto LABEL_10;
      }
    }
    if (v6 == *(_DWORD **)(v5 + 8 * (v3 ^ 1)))
    {
      int v6 = *(_DWORD **)(*(void *)v6 + 40);
      BOOL v7 = v6;
      int v8 = (char *)this + 96;
      unint64_t v9 = v3;
      if (!v6) {
        goto LABEL_10;
      }
    }
    else
    {
      BOOL v7 = *(_DWORD **)(v5 + 8 * v3);
      int v8 = (char *)this + 96;
      unint64_t v9 = v3;
    }
    do
    {
      google::protobuf::MapValueRef::DeleteData(v6 + 8);
      google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::operator++(&v7);
      int v6 = v7;
    }
    while (v7);
  }
LABEL_10:
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::clear((uint64_t)v2);
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::~InnerMap((uint64_t)v2);
  google::protobuf::internal::MapFieldBase::~MapFieldBase(this);
}

{
  uint64_t vars8;

  google::protobuf::internal::DynamicMapField::~DynamicMapField(this);

  JUMPOUT(0x18C11F580);
}

_DWORD *google::protobuf::MapValueRef::DeleteData(_DWORD *this)
{
  switch(this[2])
  {
    case 1:
    case 3:
    case 6:
    case 8:
      this = *(_DWORD **)this;
      if (this) {
        goto LABEL_7;
      }
      return this;
    case 2:
    case 4:
    case 5:
      this = *(_DWORD **)this;
      if (this) {
        goto LABEL_7;
      }
      return this;
    case 7:
      this = *(_DWORD **)this;
      if (this) {
        goto LABEL_7;
      }
      return this;
    case 9:
      uint64_t v1 = *(void *)this;
      if (!*(void *)this) {
        return this;
      }
      if (*(char *)(v1 + 23) < 0) {
        operator delete(*(void **)v1);
      }
LABEL_7:
      JUMPOUT(0x18C11F580);
    case 0xA:
      this = *(_DWORD **)this;
      if (this)
      {
        uint64_t v2 = *(uint64_t (**)(void))(*(void *)this + 8);
        return (_DWORD *)v2();
      }
      return this;
    default:
      return this;
  }
}

uint64_t google::protobuf::internal::DynamicMapField::size(google::protobuf::internal::DynamicMapField *this)
{
  return *(unsigned int *)(*(uint64_t (**)(google::protobuf::internal::DynamicMapField *))(*(void *)this + 160))(this);
}

uint64_t google::protobuf::internal::DynamicMapField::Clear(google::protobuf::internal::DynamicMapField *this)
{
  uint64_t v2 = (char *)this + 96;
  if (!*((void *)this + 1))
  {
    unint64_t v3 = *((void *)this + 15);
    unint64_t v4 = *((void *)this + 13);
    if (v4 > v3)
    {
      uint64_t v5 = *((void *)this + 16);
      while (1)
      {
        int v6 = *(_DWORD **)(v5 + 8 * v3);
        if (v6) {
          break;
        }
        if (v4 == ++v3) {
          goto LABEL_11;
        }
      }
      if (v6 == *(_DWORD **)(v5 + 8 * (v3 ^ 1)))
      {
        int v6 = *(_DWORD **)(*(void *)v6 + 40);
        unint64_t v12 = v6;
        uint64_t v13 = (char *)this + 96;
        unint64_t v14 = v3;
        if (!v6) {
          goto LABEL_11;
        }
      }
      else
      {
        unint64_t v12 = *(_DWORD **)(v5 + 8 * v3);
        uint64_t v13 = (char *)this + 96;
        unint64_t v14 = v3;
      }
      do
      {
        google::protobuf::MapValueRef::DeleteData(v6 + 8);
        google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::operator++(&v12);
        int v6 = v12;
      }
      while (v12);
    }
  }
LABEL_11:
  uint64_t result = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::clear((uint64_t)v2);
  uint64_t v8 = *((void *)this + 2);
  if (v8)
  {
    uint64_t v9 = *(unsigned int *)(v8 + 8);
    if ((int)v9 >= 1)
    {
      uint64_t v10 = (uint64_t *)(*(void *)(v8 + 16) + 8);
      do
      {
        uint64_t v11 = *v10++;
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 40))(v11);
        --v9;
      }
      while (v9);
      *(_DWORD *)(v8 + 8) = 0;
    }
  }
  *((_DWORD *)this + 22) = 0;
  return result;
}

BOOL google::protobuf::internal::DynamicMapField::ContainsMapKey(google::protobuf::internal::DynamicMapField *this, const google::protobuf::MapKey *a2)
{
  unint64_t v3 = (unsigned __int8 *)(*(uint64_t (**)(google::protobuf::internal::DynamicMapField *))(*(void *)this + 160))(this);
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>(&v5, v3, a2, 0);
  return v5 != 0;
}

void google::protobuf::internal::DynamicMapField::AllocateMapValue(google::protobuf::internal::DynamicMapField *this, google::protobuf::MapValueRef *a2)
{
  uint64_t v4 = (*(uint64_t (**)(void))(**((void **)this + 18) + 152))(*((void *)this + 18));
  if (*(unsigned char *)(*(void *)(v4 + 32) + 75)) {
    uint64_t v5 = *(void *)(v4 + 40) + 152;
  }
  else {
    uint64_t v5 = 0;
  }
  int v6 = *(std::once_flag::_State_type **)(v5 + 48);
  if (v6)
  {
    uint64_t v19 = v5;
    char v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v6, memory_order_acquire) != -1)
    {
      BOOL v22 = &v20;
      uint64_t v23 = &v19;
      std::string::value_type v21 = &v22;
      std::__call_once(v6, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    BOOL v7 = *(std::once_flag::_State_type **)(v5 + 48);
    int v8 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v5 + 56)];
    *((_DWORD *)a2 + 2) = v8;
    if (v7)
    {
      uint64_t v19 = v5;
      char v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
      {
        BOOL v22 = &v20;
        uint64_t v23 = &v19;
        std::string::value_type v21 = &v22;
        std::__call_once(v7, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      int v8 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v5 + 56)];
    }
  }
  else
  {
    int v8 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v5 + 56)];
    *((_DWORD *)a2 + 2) = v8;
  }
  switch(v8)
  {
    case 1:
    case 8:
      uint64_t v9 = *((void *)this + 1);
      if (!v9) {
        goto LABEL_32;
      }
      if ((*(unsigned char *)(v9 + 24) & 1) == 0) {
        goto LABEL_31;
      }
      uint64_t v10 = *(void (**)(void))(**(void **)(*(void *)(v9 + 32) + 32) + 40);
      goto LABEL_48;
    case 2:
      uint64_t v11 = *((void *)this + 1);
      if (!v11) {
        goto LABEL_28;
      }
      if ((*(unsigned char *)(v11 + 24) & 1) == 0) {
        goto LABEL_27;
      }
      unint64_t v12 = *(void (**)(void))(**(void **)(*(void *)(v11 + 32) + 32) + 40);
      goto LABEL_46;
    case 3:
      uint64_t v9 = *((void *)this + 1);
      if (!v9) {
        goto LABEL_32;
      }
      if ((*(unsigned char *)(v9 + 24) & 1) == 0) {
        goto LABEL_31;
      }
      uint64_t v10 = *(void (**)(void))(**(void **)(*(void *)(v9 + 32) + 32) + 40);
      goto LABEL_48;
    case 4:
      uint64_t v11 = *((void *)this + 1);
      if (!v11) {
        goto LABEL_28;
      }
      if ((*(unsigned char *)(v11 + 24) & 1) == 0) {
        goto LABEL_27;
      }
      unint64_t v12 = *(void (**)(void))(**(void **)(*(void *)(v11 + 32) + 32) + 40);
      goto LABEL_46;
    case 5:
      uint64_t v11 = *((void *)this + 1);
      if (!v11) {
LABEL_28:
      }
        operator new();
      if ((*(unsigned char *)(v11 + 24) & 1) == 0) {
        goto LABEL_27;
      }
      unint64_t v12 = *(void (**)(void))(**(void **)(*(void *)(v11 + 32) + 32) + 40);
LABEL_46:
      v12();
LABEL_27:
      Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((atomic_ullong *)v11, 8uLL);
      *(void *)Aligned = 0;
      break;
    case 6:
      uint64_t v9 = *((void *)this + 1);
      if (!v9) {
LABEL_32:
      }
        operator new();
      if ((*(unsigned char *)(v9 + 24) & 1) == 0) {
        goto LABEL_31;
      }
      uint64_t v10 = *(void (**)(void))(**(void **)(*(void *)(v9 + 32) + 32) + 40);
LABEL_48:
      v10();
LABEL_31:
      Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((atomic_ullong *)v9, 8uLL);
      *(_DWORD *)Aligned = 0;
      break;
    case 7:
      uint64_t v14 = *((void *)this + 1);
      if (!v14) {
        operator new();
      }
      if (*(unsigned char *)(v14 + 24)) {
        (*(void (**)(void, void, uint64_t))(**(void **)(*(void *)(v14 + 32) + 32) + 40))(*(void *)(*(void *)(v14 + 32) + 32), MEMORY[0x1E4FBA378], 8);
      }
      Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((atomic_ullong *)v14, 8uLL);
      char *Aligned = 0;
      break;
    case 9:
      uint64_t v15 = *((void *)this + 1);
      if (!v15) {
        operator new();
      }
      if (*(unsigned char *)(v15 + 24)) {
      Aligned = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v15, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
      }
      *(void *)Aligned = 0;
      *((void *)Aligned + 1) = 0;
      *((void *)Aligned + 2) = 0;
      break;
    case 10:
      (*(void (**)(void))(**((void **)this + 18) + 152))(*((void *)this + 18));
      uint64_t Message = google::protobuf::Reflection::GetMessage(v16, *((const google::protobuf::Message **)this + 18), (const google::protobuf::FieldDescriptor *)v5, 0, v17);
      Aligned = (char *)(*(uint64_t (**)(uint64_t, void))(*(void *)Message + 32))(Message, *((void *)this + 1));
      break;
    default:
      return;
  }
  *(void *)a2 = Aligned;
}

BOOL google::protobuf::internal::DynamicMapField::InsertOrLookupMapValue(google::protobuf::internal::DynamicMapField *this, const google::protobuf::MapKey *a2, google::protobuf::MapValueRef *a3)
{
  int v6 = (unsigned __int8 *)(*(uint64_t (**)(google::protobuf::internal::DynamicMapField *))(*(void *)this + 168))(this);
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>(v10, v6, a2, 0);
  BOOL v7 = v10[0];
  if (v10[0])
  {
    int v8 = v10[0];
  }
  else
  {
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::insert<google::protobuf::MapKey const&>((uint64_t)v10, (unint64_t)this + 96, a2);
    int v8 = v10[0];
    google::protobuf::internal::DynamicMapField::AllocateMapValue(this, (google::protobuf::MapValueRef *)(v10[0] + 32));
  }
  BOOL result = v7 == 0;
  *((_DWORD *)a3 + 2) = *((_DWORD *)v8 + 10);
  *(void *)a3 = *((void *)v8 + 4);
  return result;
}

BOOL google::protobuf::internal::DynamicMapField::LookupMapValue(google::protobuf::internal::DynamicMapField *this, const google::protobuf::MapKey *a2, google::protobuf::MapValueConstRef *a3)
{
  uint64_t v5 = (unsigned __int8 *)(*(uint64_t (**)(google::protobuf::internal::DynamicMapField *))(*(void *)this + 160))(this);
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>(&v8, v5, a2, 0);
  int v6 = v8;
  if (v8)
  {
    *((_DWORD *)a3 + 2) = *((_DWORD *)v8 + 10);
    *(void *)a3 = *((void *)v6 + 4);
  }
  return v6 != 0;
}

BOOL google::protobuf::internal::DynamicMapField::DeleteMapValue(google::protobuf::internal::DynamicMapField *this, const google::protobuf::MapKey *a2)
{
  google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField(this);
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>((unsigned __int8 **)&v19, (unsigned __int8 *)this + 96, a2, 0);
  long long v4 = v19;
  uint64_t v5 = v19;
  if (!(void)v19) {
    return v5 != 0;
  }
  uint64_t v6 = v20;
  *((_DWORD *)this + 22) = 0;
  if (!*((void *)this + 1))
  {
    long long v16 = v4;
    google::protobuf::MapValueRef::DeleteData((_DWORD *)(v5 + 32));
    long long v4 = v16;
  }
  long long v17 = v4;
  uint64_t v18 = v6;
  long long v19 = v4;
  unint64_t v20 = v6;
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::operator++(&v17);
  std::string::value_type v21 = 0;
  BOOL v7 = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::revalidate_if_necessary((uint64_t)&v19, &v21);
  unint64_t v8 = v20;
  uint64_t v9 = v19;
  uint64_t v10 = *((void *)this + 16);
  uint64_t v11 = *(void *)(v10 + 8 * v20);
  if (v7)
  {
    uint64_t v12 = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::EraseFromLinkedList(v19, *(void *)(v10 + 8 * v20));
LABEL_8:
    *(void *)(*((void *)this + 16) + 8 * v8) = v12;
    goto LABEL_9;
  }
  std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::erase(*(void *)(v10 + 8 * v20), v21);
  if (!*(void *)(v11 + 24))
  {
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::DestroyTree(*((void *)this + 17), v11);
    uint64_t v12 = 0;
    *(void *)(*((void *)this + 16) + ((8 * v8) | 8)) = 0;
    v8 &= ~1uLL;
    goto LABEL_8;
  }
LABEL_9:
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::DestroyNode(*((void *)this + 17), v9);
  --*((void *)this + 12);
  if (v8 == *((void *)this + 15))
  {
    unint64_t v14 = *((void *)this + 13);
    if (v8 < v14)
    {
      uint64_t v15 = *((void *)this + 16);
      do
      {
        if (*(void *)(v15 + 8 * v8)) {
          break;
        }
        *((void *)this + 15) = ++v8;
      }
      while (v14 != v8);
    }
  }
  return v5 != 0;
}

uint64_t google::protobuf::internal::DynamicMapField::GetMap(google::protobuf::internal::DynamicMapField *this)
{
  return (uint64_t)this + 96;
}

uint64_t google::protobuf::internal::DynamicMapField::MutableMap(google::protobuf::internal::DynamicMapField *this)
{
  *((_DWORD *)this + 22) = 0;
  return (uint64_t)this + 96;
}

void google::protobuf::internal::DynamicMapField::SetMapIteratorValue(google::protobuf::internal::DynamicMapField *this, const google::protobuf::MapKey ***a2)
{
  uint64_t v2 = **a2;
  if (v2)
  {
    google::protobuf::MapKey::CopyFrom((std::string *)(a2 + 2), **a2);
    *((_DWORD *)a2 + 14) = *((_DWORD *)v2 + 10);
    a2[6] = (const google::protobuf::MapKey **)*((void *)v2 + 4);
  }
}

void google::protobuf::MapKey::CopyFrom(std::string *this, const google::protobuf::MapKey *a2)
{
  int v4 = google::protobuf::MapKey::type(a2);
  google::protobuf::MapKey::SetType((uint64_t)this, v4);
  switch(LODWORD(this[1].__r_.__value_.__l.__data_))
  {
    case 1:
    case 3:
      LODWORD(this->__r_.__value_.__l.__data_) = *(_DWORD *)a2;
      break;
    case 2:
    case 4:
      this->__r_.__value_.__r.__words[0] = *(void *)a2;
      break;
    case 5:
    case 6:
    case 8:
    case 0xA:
      int v5 = 3;
      uint64_t v6 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
      int v7 = 213;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Unsupported");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      break;
    case 7:
      this->__r_.__value_.__s.__data_[0] = *(unsigned char *)a2;
      break;
    case 9:
      std::string::operator=(this, (const std::string *)a2);
      break;
    default:
      return;
  }
}

void sub_1891C072C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

google::protobuf::MapKey **google::protobuf::internal::DynamicMapField::MergeFrom(google::protobuf::internal::DynamicMapField *this, const google::protobuf::internal::MapFieldBase *a2)
{
  BOOL result = (google::protobuf::MapKey **)(*(uint64_t (**)(google::protobuf::internal::DynamicMapField *))(*(void *)this + 168))(this);
  unint64_t v5 = *((void *)a2 + 15);
  unint64_t v6 = *((void *)a2 + 13);
  if (v6 > v5)
  {
    int v7 = (unsigned __int8 *)result;
    uint64_t v8 = *((void *)a2 + 16);
    while (1)
    {
      uint64_t v9 = *(google::protobuf::MapKey **)(v8 + 8 * v5);
      if (v9) {
        break;
      }
      if (v6 == ++v5) {
        return result;
      }
    }
    if (v9 == *(google::protobuf::MapKey **)(v8 + 8 * (v5 ^ 1)))
    {
      uint64_t v9 = *(google::protobuf::MapKey **)(*(void *)v9 + 40);
      uint64_t v30 = v9;
      int v31 = (char *)a2 + 96;
      unint64_t v32 = v5;
      if (!v9) {
        return result;
      }
    }
    else
    {
      uint64_t v30 = *(google::protobuf::MapKey **)(v8 + 8 * v5);
      int v31 = (char *)a2 + 96;
      unint64_t v32 = v5;
    }
    do
    {
      google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>((unsigned __int8 **)&v36, v7, v9, 0);
      if (v36)
      {
        uint64_t v10 = (google::protobuf::MapValueConstRef *)(v36 + 4);
      }
      else
      {
        google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::insert<google::protobuf::MapKey const&>((uint64_t)&v36, (unint64_t)this + 96, v30);
        uint64_t v10 = (google::protobuf::MapValueConstRef *)(v36 + 4);
        google::protobuf::internal::DynamicMapField::AllocateMapValue(this, (google::protobuf::MapValueRef *)(v36 + 4));
      }
      uint64_t v11 = *(void *)((*(uint64_t (**)(void))(**((void **)this + 18) + 152))(*((void *)this + 18))
                      + 40);
      uint64_t v12 = *(std::once_flag::_State_type **)(v11 + 200);
      if (v12)
      {
        uint64_t v33 = v11 + 152;
        int v34 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
        {
          uint64_t v35 = &v36;
          uint64_t v36 = &v34;
          unint64_t v37 = (const char *)&v33;
          std::__call_once(v12, &v35, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      switch(*(_DWORD *)(v11 + 208))
      {
        case 1:
          double DoubleValue = google::protobuf::MapValueConstRef::GetDoubleValue((google::protobuf::MapKey *)((char *)v30 + 32));
          if (google::protobuf::MapValueConstRef::type(v10) != 5)
          {
            LODWORD(v36) = 3;
            unint64_t v37 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
            int v38 = 808;
            memset(&__p, 0, sizeof(__p));
            std::string::append(&__p, "Protocol Buffer map usage error:\n");
            std::string::append(&__p, "MapValueRef::SetDoubleValue");
            std::string::append(&__p, " type does not match\n");
            std::string::append(&__p, "  Expected : ");
            std::string::append(&__p, "double");
            std::string::append(&__p, "\n");
            std::string::append(&__p, "  Actual   : ");
            int v20 = google::protobuf::MapValueConstRef::type(v10);
            std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v20]);
            google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v36);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
          }
          **(double **)uint64_t v10 = DoubleValue;
          goto LABEL_49;
        case 2:
          float FloatValue = google::protobuf::MapValueConstRef::GetFloatValue((google::protobuf::MapKey *)((char *)v30 + 32));
          if (google::protobuf::MapValueConstRef::type(v10) != 6)
          {
            LODWORD(v36) = 3;
            unint64_t v37 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
            int v38 = 804;
            memset(&__p, 0, sizeof(__p));
            std::string::append(&__p, "Protocol Buffer map usage error:\n");
            std::string::append(&__p, "MapValueRef::SetFloatValue");
            std::string::append(&__p, " type does not match\n");
            std::string::append(&__p, "  Expected : ");
            std::string::append(&__p, "float");
            std::string::append(&__p, "\n");
            std::string::append(&__p, "  Actual   : ");
            int v22 = google::protobuf::MapValueConstRef::type(v10);
            std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v22]);
            google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v36);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
          }
          **(float **)uint64_t v10 = FloatValue;
          goto LABEL_49;
        case 3:
        case 0x10:
        case 0x12:
          uint64_t Int64Value = google::protobuf::MapValueConstRef::GetInt64Value((google::protobuf::MapKey *)((char *)v30 + 32));
          if (google::protobuf::MapValueConstRef::type(v10) == 2) {
            goto LABEL_26;
          }
          LODWORD(v36) = 3;
          unint64_t v37 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
          int v38 = 775;
          memset(&__p, 0, sizeof(__p));
          std::string::append(&__p, "Protocol Buffer map usage error:\n");
          std::string::append(&__p, "MapValueRef::SetInt64Value");
          std::string::append(&__p, " type does not match\n");
          std::string::append(&__p, "  Expected : ");
          std::string::append(&__p, "int64");
          std::string::append(&__p, "\n");
          std::string::append(&__p, "  Actual   : ");
          int v16 = google::protobuf::MapValueConstRef::type(v10);
          std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v16]);
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v36);
          goto LABEL_24;
        case 4:
        case 6:
          uint64_t Int64Value = google::protobuf::MapValueConstRef::GetUInt64Value((google::protobuf::MapKey *)((char *)v30 + 32));
          if (google::protobuf::MapValueConstRef::type(v10) != 4)
          {
            LODWORD(v36) = 3;
            unint64_t v37 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
            int v38 = 779;
            memset(&__p, 0, sizeof(__p));
            std::string::append(&__p, "Protocol Buffer map usage error:\n");
            std::string::append(&__p, "MapValueRef::SetUInt64Value");
            std::string::append(&__p, " type does not match\n");
            std::string::append(&__p, "  Expected : ");
            std::string::append(&__p, "uint64");
            std::string::append(&__p, "\n");
            std::string::append(&__p, "  Actual   : ");
            int v18 = google::protobuf::MapValueConstRef::type(v10);
            std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v18]);
            google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v36);
LABEL_24:
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
          }
LABEL_26:
          **(void **)uint64_t v10 = Int64Value;
          goto LABEL_49;
        case 5:
        case 0xF:
        case 0x11:
          int Int32Value = google::protobuf::MapValueConstRef::GetInt32Value((google::protobuf::MapKey *)((char *)v30 + 32));
          if (google::protobuf::MapValueConstRef::type(v10) == 1) {
            goto LABEL_43;
          }
          LODWORD(v36) = 3;
          unint64_t v37 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
          int v38 = 783;
          memset(&__p, 0, sizeof(__p));
          std::string::append(&__p, "Protocol Buffer map usage error:\n");
          std::string::append(&__p, "MapValueRef::SetInt32Value");
          std::string::append(&__p, " type does not match\n");
          std::string::append(&__p, "  Expected : ");
          std::string::append(&__p, "int32");
          std::string::append(&__p, "\n");
          std::string::append(&__p, "  Actual   : ");
          int v14 = google::protobuf::MapValueConstRef::type(v10);
          std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v14]);
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v36);
          break;
        case 7:
        case 0xD:
          int Int32Value = google::protobuf::MapValueConstRef::GetUInt32Value((google::protobuf::MapKey *)((char *)v30 + 32));
          if (google::protobuf::MapValueConstRef::type(v10) == 3) {
            goto LABEL_43;
          }
          LODWORD(v36) = 3;
          unint64_t v37 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
          int v38 = 787;
          memset(&__p, 0, sizeof(__p));
          std::string::append(&__p, "Protocol Buffer map usage error:\n");
          std::string::append(&__p, "MapValueRef::SetUInt32Value");
          std::string::append(&__p, " type does not match\n");
          std::string::append(&__p, "  Expected : ");
          std::string::append(&__p, "uint32");
          std::string::append(&__p, "\n");
          std::string::append(&__p, "  Actual   : ");
          int v17 = google::protobuf::MapValueConstRef::type(v10);
          std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v17]);
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v36);
          break;
        case 8:
          char BoolValue = google::protobuf::MapValueConstRef::GetBoolValue((google::protobuf::MapKey *)((char *)v30 + 32));
          if (google::protobuf::MapValueConstRef::type(v10) != 7)
          {
            LODWORD(v36) = 3;
            unint64_t v37 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
            int v38 = 791;
            memset(&__p, 0, sizeof(__p));
            std::string::append(&__p, "Protocol Buffer map usage error:\n");
            std::string::append(&__p, "MapValueRef::SetBoolValue");
            std::string::append(&__p, " type does not match\n");
            std::string::append(&__p, "  Expected : ");
            std::string::append(&__p, "BOOL");
            std::string::append(&__p, "\n");
            std::string::append(&__p, "  Actual   : ");
            int v24 = google::protobuf::MapValueConstRef::type(v10);
            std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v24]);
            google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v36);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
          }
          **(unsigned char **)uint64_t v10 = BoolValue;
          goto LABEL_49;
        case 9:
        case 0xC:
          StringValue = (const std::string *)google::protobuf::MapValueConstRef::GetStringValue((google::protobuf::MapKey *)((char *)v30 + 32));
          if (google::protobuf::MapValueConstRef::type(v10) != 9)
          {
            LODWORD(v36) = 3;
            unint64_t v37 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
            int v38 = 800;
            memset(&__p, 0, sizeof(__p));
            std::string::append(&__p, "Protocol Buffer map usage error:\n");
            std::string::append(&__p, "MapValueRef::SetStringValue");
            std::string::append(&__p, " type does not match\n");
            std::string::append(&__p, "  Expected : ");
            std::string::append(&__p, "string");
            std::string::append(&__p, "\n");
            std::string::append(&__p, "  Actual   : ");
            int v27 = google::protobuf::MapValueConstRef::type(v10);
            std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v27]);
            google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v36);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
          }
          std::string::operator=(*(std::string **)v10, StringValue);
          goto LABEL_49;
        case 0xA:
        case 0xB:
          uint64_t v28 = google::protobuf::MapValueRef::MutableMessageValue(v10);
          uint64_t MessageValue = google::protobuf::MapValueConstRef::GetMessageValue((google::protobuf::MapKey *)((char *)v30 + 32));
          (*(void (**)(uint64_t, uint64_t))(*(void *)v28 + 112))(v28, MessageValue);
          goto LABEL_49;
        case 0xE:
          int Int32Value = google::protobuf::MapValueConstRef::GetEnumValue((google::protobuf::MapKey *)((char *)v30 + 32));
          if (google::protobuf::MapValueConstRef::type(v10) == 8) {
            goto LABEL_43;
          }
          LODWORD(v36) = 3;
          unint64_t v37 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
          int v38 = 796;
          memset(&__p, 0, sizeof(__p));
          std::string::append(&__p, "Protocol Buffer map usage error:\n");
          std::string::append(&__p, "MapValueRef::SetEnumValue");
          std::string::append(&__p, " type does not match\n");
          std::string::append(&__p, "  Expected : ");
          std::string::append(&__p, "enum");
          std::string::append(&__p, "\n");
          std::string::append(&__p, "  Actual   : ");
          int v25 = google::protobuf::MapValueConstRef::type(v10);
          std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v25]);
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v36);
          break;
        default:
          goto LABEL_49;
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
LABEL_43:
      **(_DWORD **)uint64_t v10 = Int32Value;
LABEL_49:
      BOOL result = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef> const>::operator++(&v30);
      uint64_t v9 = v30;
    }
    while (v30);
  }
  return result;
}

void sub_1891C11C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

google::protobuf::MapKey **google::protobuf::internal::DynamicMapField::Swap(google::protobuf::MapKey **this, google::protobuf::internal::MapFieldBase *a2)
{
  unint64_t v3 = this;
  int v4 = this[2];
  this[2] = (google::protobuf::MapKey *)*((void *)a2 + 2);
  *((void *)a2 + 2) = v4;
  if (this[17] == *((google::protobuf::MapKey **)a2 + 17))
  {
    uint64_t v9 = this[12];
    this[12] = (google::protobuf::MapKey *)*((void *)a2 + 12);
    *((void *)a2 + 12) = v9;
    uint64_t v10 = this[13];
    this[13] = (google::protobuf::MapKey *)*((void *)a2 + 13);
    *((void *)a2 + 13) = v10;
    uint64_t v11 = this[14];
    this[14] = (google::protobuf::MapKey *)*((void *)a2 + 14);
    *((void *)a2 + 14) = v11;
    uint64_t v12 = this[15];
    this[15] = (google::protobuf::MapKey *)*((void *)a2 + 15);
    *((void *)a2 + 15) = v12;
    uint64_t v13 = this[16];
    this[16] = (google::protobuf::MapKey *)*((void *)a2 + 16);
    *((void *)a2 + 16) = v13;
    int v14 = this[17];
    this[17] = (google::protobuf::MapKey *)*((void *)a2 + 17);
    *((void *)a2 + 17) = v14;
  }
  else
  {
    v16[0] = xmmword_18A627CD0;
    v16[1] = xmmword_18A627CD0;
    int v17 = &google::protobuf::internal::kGlobalEmptyTable;
    uint64_t v18 = 0;
    unint64_t v5 = this[15];
    unint64_t v6 = this[13];
    if (v6 <= v5)
    {
      uint64_t v8 = 0;
    }
    else
    {
      int v7 = this[16];
      while (1)
      {
        uint64_t v8 = *((void *)v7 + (void)v5);
        if (v8) {
          break;
        }
        unint64_t v5 = (google::protobuf::MapKey *)((char *)v5 + 1);
        if (v6 == v5)
        {
          uint64_t v8 = 0;
          unint64_t v5 = this[13];
          goto LABEL_11;
        }
      }
      if (v8 == *((void *)v7 + ((unint64_t)v5 ^ 1))) {
        uint64_t v8 = *(void *)(*(void *)v8 + 40);
      }
    }
LABEL_11:
    *(void *)&long long v20 = v8;
    *((void *)&v20 + 1) = this + 12;
    std::string::value_type v21 = v5;
    memset(v19, 0, sizeof(v19));
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::insert<google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::const_iterator>((google::protobuf::MapKey **)v16, &v20, v19);
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::operator=(v3 + 12, (google::protobuf::MapKey **)a2 + 12);
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::operator=((google::protobuf::MapKey **)a2 + 12, (google::protobuf::MapKey **)v16);
    this = (google::protobuf::MapKey **)google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::~InnerMap((uint64_t)v16);
  }
  int v15 = *((_DWORD *)a2 + 22);
  *((_DWORD *)a2 + 22) = *((_DWORD *)v3 + 22);
  *((_DWORD *)v3 + 22) = v15;
  return this;
}

void sub_1891C13C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *google::protobuf::internal::DynamicMapField::SyncRepeatedFieldWithMapNoLock(google::protobuf::internal::DynamicMapField *this)
{
  (*(void (**)(void))(**((void **)this + 18) + 152))(*((void *)this + 18));
  unint64_t v3 = v2;
  uint64_t v4 = (*(uint64_t (**)(void))(**((void **)this + 18) + 152))(*((void *)this + 18));
  if (*(unsigned char *)(*(void *)(v4 + 32) + 75)) {
    uint64_t v5 = *(void *)(v4 + 40);
  }
  else {
    uint64_t v5 = 0;
  }
  BOOL result = (void *)(*(uint64_t (**)(void))(**((void **)this + 18) + 152))(*((void *)this + 18));
  if (*(unsigned char *)(result[4] + 75)) {
    uint64_t v7 = result[5] + 152;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = (void *)*((void *)this + 2);
  if (!v8)
  {
    uint64_t v9 = *((void *)this + 1);
    if (!v9) {
      operator new();
    }
    if (*(unsigned char *)(v9 + 24)) {
    BOOL result = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v9, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::Message>>);
    }
    uint64_t v8 = result;
    result[2] = 0;
    *BOOL result = v9;
    result[1] = 0;
    *((void *)this + 2) = result;
  }
  uint64_t v10 = *((unsigned int *)v8 + 2);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = (uint64_t *)(v8[2] + 8);
    do
    {
      uint64_t v12 = *v11++;
      BOOL result = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v12 + 40))(v12);
      --v10;
    }
    while (v10);
    *((_DWORD *)v8 + 2) = 0;
  }
  unint64_t v13 = *((void *)this + 15);
  unint64_t v14 = *((void *)this + 13);
  if (v14 > v13)
  {
    uint64_t v15 = *((void *)this + 16);
    while (1)
    {
      uint64_t v16 = *(void *)(v15 + 8 * v13);
      if (v16) {
        break;
      }
      if (v14 == ++v13) {
        return result;
      }
    }
    if (v16 == *(void *)(v15 + 8 * (v13 ^ 1)))
    {
      int v67 = *(google::protobuf::MapKey **)(*(void *)v16 + 40);
      uint64_t v68 = (char *)this + 96;
      unint64_t v69 = v13;
      if (!v67) {
        return result;
      }
    }
    else
    {
      int v67 = *(google::protobuf::MapKey **)(v15 + 8 * v13);
      uint64_t v68 = (char *)this + 96;
      unint64_t v69 = v13;
    }
    do
    {
      int v17 = (google::protobuf::Message *)(*(uint64_t (**)(void, void))(**((void **)this + 18) + 32))(*((void *)this + 18), *((void *)this + 1));
      google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(*((unsigned int **)this + 2), v17);
      uint64_t v18 = v67;
      long long v19 = *(std::once_flag::_State_type **)(v5 + 48);
      if (v19)
      {
        uint64_t v70 = v5;
        uint64_t v71 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v19, memory_order_acquire) != -1)
        {
          long long v62 = &v71;
          char v63 = (const char *)&v70;
          v72[0] = &v62;
          std::__call_once(v19, v72, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      switch(*(_DWORD *)(v5 + 56))
      {
        case 1:
        case 2:
        case 0xA:
        case 0xB:
        case 0xE:
          LODWORD(v62) = 3;
          char v63 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.cc";
          int v64 = 430;
          memset(&v65, 0, sizeof(v65));
          std::string::append(&v65, "Can't get here.");
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v62);
          if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0)
          {
            long long v20 = (void *)v65.__r_.__value_.__r.__words[0];
            goto LABEL_41;
          }
          break;
        case 3:
        case 0x10:
        case 0x12:
          uint64_t Int64Value = google::protobuf::MapKey::GetInt64Value(v18);
          google::protobuf::Reflection::SetInt64(v3, v17, (const google::protobuf::FieldDescriptor *)v5, Int64Value, v24);
          break;
        case 4:
        case 6:
          Uuint64_t Int64Value = google::protobuf::MapKey::GetUInt64Value(v18);
          google::protobuf::Reflection::SetUInt64(v3, v17, (const google::protobuf::FieldDescriptor *)v5, UInt64Value, v28);
          break;
        case 5:
        case 0xF:
        case 0x11:
          int Int32Value = google::protobuf::MapKey::GetInt32Value(v18);
          google::protobuf::Reflection::SetInt32(v3, v17, (const google::protobuf::FieldDescriptor *)v5, Int32Value, v22);
          break;
        case 7:
        case 0xD:
          Uint Int32Value = google::protobuf::MapKey::GetUInt32Value(v18);
          google::protobuf::Reflection::SetUInt32(v3, v17, (const google::protobuf::FieldDescriptor *)v5, UInt32Value, v26);
          break;
        case 8:
          char BoolValue = google::protobuf::MapKey::GetBoolValue(v18);
          google::protobuf::Reflection::SetBool(v3, v17, (const google::protobuf::FieldDescriptor *)v5, BoolValue, v30);
          break;
        case 9:
        case 0xC:
          StringValue = google::protobuf::MapKey::GetStringValue(v18);
          if (*((char *)StringValue + 23) < 0)
          {
            std::string::__init_copy_ctor_external(&v66, *(const std::string::value_type **)StringValue, *((void *)StringValue + 1));
          }
          else
          {
            long long v33 = *(_OWORD *)StringValue;
            v66.__r_.__value_.__r.__words[2] = *((void *)StringValue + 2);
            *(_OWORD *)&v66.__r_.__value_.__l.__data_ = v33;
          }
          google::protobuf::Reflection::SetString((uint64_t)v3, v17, (google::protobuf::FieldDescriptor *)v5, (uint64_t *)&v66, v32);
          if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0)
          {
            long long v20 = (void *)v66.__r_.__value_.__r.__words[0];
LABEL_41:
            operator delete(v20);
          }
          break;
        default:
          break;
      }
      int v34 = v67;
      uint64_t v35 = *(std::once_flag::_State_type **)(v7 + 48);
      if (v35)
      {
        uint64_t v70 = v7;
        uint64_t v71 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v35, memory_order_acquire) != -1)
        {
          long long v62 = &v71;
          char v63 = (const char *)&v70;
          v72[0] = &v62;
          std::__call_once(v35, v72, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      uint64_t v36 = (google::protobuf::MapKey *)((char *)v34 + 32);
      switch(*(_DWORD *)(v7 + 56))
      {
        case 1:
          double DoubleValue = google::protobuf::MapValueConstRef::GetDoubleValue(v36);
          google::protobuf::Reflection::SetDouble(v3, v17, (const google::protobuf::FieldDescriptor *)v7, DoubleValue, v46, v47);
          break;
        case 2:
          float FloatValue = google::protobuf::MapValueConstRef::GetFloatValue(v36);
          google::protobuf::Reflection::SetFloat(v3, v17, (const google::protobuf::FieldDescriptor *)v7, FloatValue, v49, v50);
          break;
        case 3:
        case 0x10:
        case 0x12:
          uint64_t v39 = google::protobuf::MapValueConstRef::GetInt64Value(v36);
          google::protobuf::Reflection::SetInt64(v3, v17, (const google::protobuf::FieldDescriptor *)v7, v39, v40);
          break;
        case 4:
        case 6:
          uint64_t v43 = google::protobuf::MapValueConstRef::GetUInt64Value(v36);
          google::protobuf::Reflection::SetUInt64(v3, v17, (const google::protobuf::FieldDescriptor *)v7, v43, v44);
          break;
        case 5:
        case 0xF:
        case 0x11:
          int v37 = google::protobuf::MapValueConstRef::GetInt32Value(v36);
          google::protobuf::Reflection::SetInt32(v3, v17, (const google::protobuf::FieldDescriptor *)v7, v37, v38);
          break;
        case 7:
        case 0xD:
          int v41 = google::protobuf::MapValueConstRef::GetUInt32Value(v36);
          google::protobuf::Reflection::SetUInt32(v3, v17, (const google::protobuf::FieldDescriptor *)v7, v41, v42);
          break;
        case 8:
          char v51 = google::protobuf::MapValueConstRef::GetBoolValue(v36);
          google::protobuf::Reflection::SetBool(v3, v17, (const google::protobuf::FieldDescriptor *)v7, v51, v52);
          break;
        case 9:
        case 0xC:
          uint64_t v55 = google::protobuf::MapValueConstRef::GetStringValue(v36);
          if (*(char *)(v55 + 23) < 0)
          {
            std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v55, *(void *)(v55 + 8));
          }
          else
          {
            long long v57 = *(_OWORD *)v55;
            __p.__r_.__value_.__r.__words[2] = *(void *)(v55 + 16);
            *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v57;
          }
          google::protobuf::Reflection::SetString((uint64_t)v3, v17, (google::protobuf::FieldDescriptor *)v7, (uint64_t *)&__p, v56);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          break;
        case 0xA:
        case 0xB:
          uint64_t MessageValue = google::protobuf::MapValueConstRef::GetMessageValue(v36);
          uint64_t v60 = google::protobuf::Reflection::MutableMessage(v3, v17, (const google::protobuf::FieldDescriptor *)v7, 0, v59);
          (*(void (**)(uint64_t, uint64_t))(*(void *)v60 + 112))(v60, MessageValue);
          break;
        case 0xE:
          int EnumValue = google::protobuf::MapValueConstRef::GetEnumValue(v36);
          google::protobuf::Reflection::SetEnumValue(v3, v17, (const google::protobuf::FieldDescriptor *)v7, EnumValue, v54);
          break;
        default:
          break;
      }
      BOOL result = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef> const>::operator++(&v67);
    }
    while (v67);
  }
  return result;
}

void sub_1891C1A40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

google::protobuf::MapKey *google::protobuf::MapKey::GetStringValue(google::protobuf::MapKey *this)
{
  if (google::protobuf::MapKey::type(this) != 9)
  {
    int v4 = 3;
    uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v6 = 144;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapKey::GetStringValue");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "string");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    int v2 = google::protobuf::MapKey::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return this;
}

void sub_1891C1BE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapKey::GetInt64Value(google::protobuf::MapKey *this)
{
  if (google::protobuf::MapKey::type(this) != 2)
  {
    int v4 = 3;
    uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v6 = 124;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapKey::GetInt64Value");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "int64");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    int v2 = google::protobuf::MapKey::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(void *)this;
}

void sub_1891C1D08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapKey::GetInt32Value(google::protobuf::MapKey *this)
{
  if (google::protobuf::MapKey::type(this) != 1)
  {
    int v4 = 3;
    uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v6 = 132;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapKey::GetInt32Value");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "int32");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    int v2 = google::protobuf::MapKey::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(unsigned int *)this;
}

void sub_1891C1E30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapKey::GetUInt64Value(google::protobuf::MapKey *this)
{
  if (google::protobuf::MapKey::type(this) != 4)
  {
    int v4 = 3;
    uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v6 = 128;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapKey::GetUInt64Value");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "uint64");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    int v2 = google::protobuf::MapKey::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(void *)this;
}

void sub_1891C1F58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapKey::GetUInt32Value(google::protobuf::MapKey *this)
{
  if (google::protobuf::MapKey::type(this) != 3)
  {
    int v4 = 3;
    uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v6 = 136;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapKey::GetUInt32Value");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "uint32");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    int v2 = google::protobuf::MapKey::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(unsigned int *)this;
}

void sub_1891C2080(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapKey::GetBoolValue(google::protobuf::MapKey *this)
{
  if (google::protobuf::MapKey::type(this) != 7)
  {
    int v4 = 3;
    uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v6 = 140;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapKey::GetBoolValue");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "BOOL");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    int v2 = google::protobuf::MapKey::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(unsigned __int8 *)this;
}

void sub_1891C21A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::DynamicMapField::SyncMapWithRepeatedFieldNoLock(google::protobuf::internal::DynamicMapField *this)
{
  uint64_t v69 = *MEMORY[0x1E4F143B8];
  (*(void (**)(void))(**((void **)this + 18) + 152))(*((void *)this + 18));
  unint64_t v3 = v2;
  uint64_t v4 = (*(uint64_t (**)(void))(**((void **)this + 18) + 152))(*((void *)this + 18));
  if (*(unsigned char *)(*(void *)(v4 + 32) + 75)) {
    uint64_t v5 = *(void *)(v4 + 40);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = (*(uint64_t (**)(void))(**((void **)this + 18) + 152))(*((void *)this + 18));
  if (*(unsigned char *)(*(void *)(v6 + 32) + 75)) {
    uint64_t v7 = *(void *)(v6 + 40) + 152;
  }
  else {
    uint64_t v7 = 0;
  }
  if (!*((void *)this + 1))
  {
    std::string::size_type v8 = *((void *)this + 15);
    std::string::size_type v9 = *((void *)this + 13);
    if (v9 > v8)
    {
      uint64_t v10 = *((void *)this + 16);
      while (1)
      {
        uint64_t v11 = *(_DWORD **)(v10 + 8 * v8);
        if (v11) {
          break;
        }
        if (v9 == ++v8) {
          goto LABEL_17;
        }
      }
      if (v11 == *(_DWORD **)(v10 + 8 * (v8 ^ 1)))
      {
        uint64_t v11 = *(_DWORD **)(*(void *)v11 + 40);
        v60.__r_.__value_.__r.__words[0] = (std::string::size_type)v11;
        v60.__r_.__value_.__l.__size_ = (std::string::size_type)this + 96;
        v60.__r_.__value_.__r.__words[2] = v8;
        if (!v11) {
          goto LABEL_17;
        }
      }
      else
      {
        v60.__r_.__value_.__r.__words[0] = *(void *)(v10 + 8 * v8);
        v60.__r_.__value_.__l.__size_ = (std::string::size_type)this + 96;
        v60.__r_.__value_.__r.__words[2] = v8;
      }
      do
      {
        google::protobuf::MapValueRef::DeleteData(v11 + 8);
        google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::operator++(&v60);
        uint64_t v11 = (_DWORD *)v60.__r_.__value_.__r.__words[0];
      }
      while (v60.__r_.__value_.__r.__words[0]);
    }
  }
LABEL_17:
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::clear((uint64_t)this + 96);
  uint64_t v14 = *((void *)this + 2);
  if (*(_DWORD *)(v14 + 8))
  {
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15) {
      uint64_t v16 = (const google::protobuf::Message **)(v15 + 8);
    }
    else {
      uint64_t v16 = 0;
    }
    do
    {
      int v68 = 0;
      int v17 = *(std::once_flag::_State_type **)(v5 + 48);
      if (v17)
      {
        uint64_t v63 = v5;
        int v64 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v17, memory_order_acquire) != -1)
        {
          v60.__r_.__value_.__r.__words[0] = (std::string::size_type)&v64;
          v60.__r_.__value_.__l.__size_ = (std::string::size_type)&v63;
          std::string v65 = &v60;
          std::__call_once(v17, &v65, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      switch(*(_DWORD *)(v5 + 56))
      {
        case 1:
        case 2:
        case 0xA:
        case 0xB:
        case 0xE:
          LODWORD(v60.__r_.__value_.__l.__data_) = 3;
          v60.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libp"
                                                                  "rotobuf/src/google/protobuf/map_field.cc";
          LODWORD(v60.__r_.__value_.__r.__words[2]) = 513;
          memset(&__p, 0, sizeof(__p));
          std::string::append(&__p, "Can't get here.");
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v60);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v18 = (void *)__p.__r_.__value_.__r.__words[0];
            goto LABEL_27;
          }
          break;
        case 3:
        case 0x10:
        case 0x12:
          uint64_t Int64 = (void *)google::protobuf::Reflection::GetInt64(v3, *v16, (const google::protobuf::FieldDescriptor *)v5, v12, v13);
          if (v68 != 2)
          {
            if (v68 == 9 && v67 < 0) {
              operator delete(v66[0]);
            }
            int v68 = 2;
          }
          goto LABEL_49;
        case 4:
        case 6:
          uint64_t Int64 = (void *)google::protobuf::Reflection::GetUInt64(v3, *v16, (const google::protobuf::FieldDescriptor *)v5, v12, v13);
          if (v68 != 4)
          {
            if (v68 == 9 && v67 < 0) {
              operator delete(v66[0]);
            }
            int v68 = 4;
          }
LABEL_49:
          v66[0] = Int64;
          break;
        case 5:
        case 0xF:
        case 0x11:
          int Int32 = google::protobuf::Reflection::GetInt32(v3, *v16, (const google::protobuf::FieldDescriptor *)v5, v12, v13);
          if (v68 != 1)
          {
            if (v68 == 9 && v67 < 0) {
              operator delete(v66[0]);
            }
            int v68 = 1;
          }
          goto LABEL_43;
        case 7:
        case 0xD:
          int Int32 = google::protobuf::Reflection::GetUInt32(v3, *v16, (const google::protobuf::FieldDescriptor *)v5, v12, v13);
          if (v68 != 3)
          {
            if (v68 == 9 && v67 < 0) {
              operator delete(v66[0]);
            }
            int v68 = 3;
          }
LABEL_43:
          LODWORD(v66[0]) = Int32;
          break;
        case 8:
          BOOL Bool = google::protobuf::Reflection::GetBool(v3, *v16, (const google::protobuf::FieldDescriptor *)v5, v12, v13);
          if (v68 != 7)
          {
            if (v68 == 9 && v67 < 0) {
              operator delete(v66[0]);
            }
            int v68 = 7;
          }
          LOBYTE(v66[0]) = Bool;
          break;
        case 9:
        case 0xC:
          google::protobuf::Reflection::GetString(v3, *v16, (const google::protobuf::FieldDescriptor *)v5, v13, &v62);
          google::protobuf::MapKey::SetStringValue((uint64_t)v66, (__n128 *)&v62);
          if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v18 = (void *)v62.__r_.__value_.__r.__words[0];
LABEL_27:
            operator delete(v18);
          }
          break;
        default:
          break;
      }
      if (!*((void *)this + 1))
      {
        google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>((unsigned __int8 **)&v60, (unsigned __int8 *)this + 96, (google::protobuf::MapKey *)v66, 0);
        if (v60.__r_.__value_.__r.__words[0]) {
          google::protobuf::MapValueRef::DeleteData((_DWORD *)(v60.__r_.__value_.__r.__words[0] + 32));
        }
      }
      google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::insert<google::protobuf::MapKey const&>((uint64_t)&v60, (unint64_t)this + 96, (google::protobuf::MapKey *)v66);
      std::string::size_type v22 = v60.__r_.__value_.__r.__words[0];
      uint64_t v23 = *(std::once_flag::_State_type **)(v7 + 48);
      if (v23)
      {
        uint64_t v63 = v7;
        int v64 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v23, memory_order_acquire) != -1)
        {
          v60.__r_.__value_.__r.__words[0] = (std::string::size_type)&v64;
          v60.__r_.__value_.__l.__size_ = (std::string::size_type)&v63;
          std::string v65 = &v60;
          std::__call_once(v23, &v65, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        int v24 = *(std::once_flag::_State_type **)(v7 + 48);
        int v25 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v7 + 56)];
        *(_DWORD *)(v22 + 40) = v25;
        if (v24)
        {
          uint64_t v63 = v7;
          int v64 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v24, memory_order_acquire) != -1)
          {
            v60.__r_.__value_.__r.__words[0] = (std::string::size_type)&v64;
            v60.__r_.__value_.__l.__size_ = (std::string::size_type)&v63;
            std::string v65 = &v60;
            std::__call_once(v24, &v65, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
          int v25 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v7 + 56)];
        }
      }
      else
      {
        int v25 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v7 + 56)];
        *(_DWORD *)(v60.__r_.__value_.__r.__words[0] + 40) = v25;
      }
      switch(v25)
      {
        case 1:
          uint64_t v26 = *((void *)this + 1);
          if (!v26) {
            operator new();
          }
          if (*(unsigned char *)(v26 + 24)) {
            (*(void (**)(void, void, uint64_t))(**(void **)(*(void *)(v26 + 32) + 32) + 40))(*(void *)(*(void *)(v26 + 32) + 32), MEMORY[0x1E4FBA3A8], 8);
          }
          Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((atomic_ullong *)v26, 8uLL);
          *(_DWORD *)Aligned = 0;
          Uint Int32 = google::protobuf::Reflection::GetInt32(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, v37, v38);
          goto LABEL_116;
        case 2:
          uint64_t v27 = *((void *)this + 1);
          if (!v27) {
            operator new();
          }
          if (*(unsigned char *)(v27 + 24)) {
            (*(void (**)(void, void, uint64_t))(**(void **)(*(void *)(v27 + 32) + 32) + 40))(*(void *)(*(void *)(v27 + 32) + 32), MEMORY[0x1E4FBA3E0], 8);
          }
          Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((atomic_ullong *)v27, 8uLL);
          *(void *)Aligned = 0;
          Uuint64_t Int64 = google::protobuf::Reflection::GetInt64(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, v40, v41);
          goto LABEL_111;
        case 3:
          uint64_t v28 = *((void *)this + 1);
          if (!v28) {
            operator new();
          }
          if (*(unsigned char *)(v28 + 24)) {
            (*(void (**)(void, void, uint64_t))(**(void **)(*(void *)(v28 + 32) + 32) + 40))(*(void *)(*(void *)(v28 + 32) + 32), MEMORY[0x1E4FBA3B0], 8);
          }
          Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((atomic_ullong *)v28, 8uLL);
          *(_DWORD *)Aligned = 0;
          Uint Int32 = google::protobuf::Reflection::GetUInt32(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, v43, v44);
          goto LABEL_116;
        case 4:
          uint64_t v29 = *((void *)this + 1);
          if (!v29) {
            operator new();
          }
          if (*(unsigned char *)(v29 + 24)) {
            (*(void (**)(void, void, uint64_t))(**(void **)(*(void *)(v29 + 32) + 32) + 40))(*(void *)(*(void *)(v29 + 32) + 32), MEMORY[0x1E4FBA3E8], 8);
          }
          Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((atomic_ullong *)v29, 8uLL);
          *(void *)Aligned = 0;
          Uuint64_t Int64 = google::protobuf::Reflection::GetUInt64(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, v45, v46);
LABEL_111:
          *(void *)Aligned = UInt64;
          goto LABEL_121;
        case 5:
          uint64_t v30 = *((void *)this + 1);
          if (!v30) {
            operator new();
          }
          if (*(unsigned char *)(v30 + 24)) {
            (*(void (**)(void, void, uint64_t))(**(void **)(*(void *)(v30 + 32) + 32) + 40))(*(void *)(*(void *)(v30 + 32) + 32), MEMORY[0x1E4FBA388], 8);
          }
          Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((atomic_ullong *)v30, 8uLL);
          *(void *)Aligned = 0;
          *(double *)Aligned = google::protobuf::Reflection::GetDouble(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, v47, v48);
          goto LABEL_121;
        case 6:
          uint64_t v31 = *((void *)this + 1);
          if (!v31) {
            operator new();
          }
          if (*(unsigned char *)(v31 + 24)) {
            (*(void (**)(void, void, uint64_t))(**(void **)(*(void *)(v31 + 32) + 32) + 40))(*(void *)(*(void *)(v31 + 32) + 32), MEMORY[0x1E4FBA398], 8);
          }
          Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((atomic_ullong *)v31, 8uLL);
          *(_DWORD *)Aligned = 0;
          *(float *)Aligned = google::protobuf::Reflection::GetFloat(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, v49, v50);
          goto LABEL_121;
        case 7:
          uint64_t v32 = *((void *)this + 1);
          if (!v32) {
            operator new();
          }
          if (*(unsigned char *)(v32 + 24)) {
            (*(void (**)(void, void, uint64_t))(**(void **)(*(void *)(v32 + 32) + 32) + 40))(*(void *)(*(void *)(v32 + 32) + 32), MEMORY[0x1E4FBA378], 8);
          }
          Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((atomic_ullong *)v32, 8uLL);
          char *Aligned = 0;
          char *Aligned = google::protobuf::Reflection::GetBool(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, v51, v52);
          goto LABEL_121;
        case 8:
          uint64_t v33 = *((void *)this + 1);
          if (!v33) {
            operator new();
          }
          if (*(unsigned char *)(v33 + 24)) {
            (*(void (**)(void, void, uint64_t))(**(void **)(*(void *)(v33 + 32) + 32) + 40))(*(void *)(*(void *)(v33 + 32) + 32), MEMORY[0x1E4FBA3A8], 8);
          }
          Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((atomic_ullong *)v33, 8uLL);
          *(_DWORD *)Aligned = 0;
          Uint Int32 = google::protobuf::Reflection::GetEnumValue(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, v53, v54);
LABEL_116:
          *(_DWORD *)Aligned = UInt32;
          goto LABEL_121;
        case 9:
          uint64_t v34 = *((void *)this + 1);
          if (!v34) {
            operator new();
          }
          if (*(unsigned char *)(v34 + 24)) {
          Aligned = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v34, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
          }
          *(void *)Aligned = 0;
          *((void *)Aligned + 1) = 0;
          *((void *)Aligned + 2) = 0;
          google::protobuf::Reflection::GetString(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, v55, &v60);
          if (Aligned[23] < 0) {
            operator delete(*(void **)Aligned);
          }
          long long v56 = *(_OWORD *)&v60.__r_.__value_.__l.__data_;
          *((void *)Aligned + 2) = *((void *)&v60.__r_.__value_.__l + 2);
          *(_OWORD *)Aligned = v56;
          goto LABEL_121;
        case 10:
          uint64_t Message = google::protobuf::Reflection::GetMessage(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, 0, v13);
          Aligned = (char *)(*(uint64_t (**)(uint64_t, void))(*(void *)Message + 32))(Message, *((void *)this + 1));
          (*(void (**)(char *, uint64_t))(*(void *)Aligned + 112))(Aligned, Message);
LABEL_121:
          *(void *)(v22 + 32) = Aligned;
          break;
        default:
          break;
      }
      if (v68 == 9 && v67 < 0) {
        operator delete(v66[0]);
      }
      ++v16;
      uint64_t v57 = *((void *)this + 2);
      uint64_t v58 = *(void *)(v57 + 16);
      if (v58) {
        uint64_t v59 = v58 + 8;
      }
      else {
        uint64_t v59 = 0;
      }
    }
    while (v16 != (const google::protobuf::Message **)(v59 + 8 * *(int *)(v57 + 8)));
  }
}

void sub_1891C2D60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,int a34)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a34 == 9 && a33 < 0) {
    operator delete(a28);
  }
  _Unwind_Resume(exception_object);
}

__n128 google::protobuf::MapKey::SetStringValue(uint64_t a1, __n128 *a2)
{
  google::protobuf::MapKey::SetType(a1, 9);
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  __n128 result = *a2;
  *(void *)(a1 + 16) = a2[1].n128_u64[0];
  *(__n128 *)a1 = result;
  a2[1].n128_u8[7] = 0;
  a2->n128_u8[0] = 0;
  return result;
}

uint64_t google::protobuf::internal::DynamicMapField::SpaceUsedExcludingSelfNoLock(google::protobuf::internal::DynamicMapField *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2)
  {
    uint64_t v3 = 8 * *(int *)(v2 + 12);
    uint64_t v4 = *(int **)(v2 + 16);
    if (v4)
    {
      if (*v4 >= 1)
      {
        uint64_t v5 = 0;
        do
        {
          v3 += (*(uint64_t (**)(void))(**(void **)&v4[2 * v5 + 2] + 136))(*(void *)&v4[2 * v5 + 2]);
          ++v5;
          uint64_t v4 = *(int **)(v2 + 16);
        }
        while (v5 < *v4);
      }
      v3 += 8;
    }
    uint64_t v6 = v3 + 48;
  }
  else
  {
    uint64_t v6 = 48;
  }
  uint64_t v7 = (google::protobuf::internal::DynamicMapField *)((char *)this + 96);
  uint64_t v8 = *((void *)this + 12);
  if (v8)
  {
    unint64_t v9 = *((void *)this + 15);
    uint64_t v10 = (google::protobuf::MapKey *)*((void *)this + 13);
    if ((unint64_t)v10 <= v9)
    {
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v11 = *((void *)this + 16);
      while (1)
      {
        uint64_t v12 = *(google::protobuf::MapKey **)(v11 + 8 * v9);
        if (v12) {
          break;
        }
        if (v10 == (google::protobuf::MapKey *)++v9)
        {
          uint64_t v12 = 0;
          unint64_t v9 = (unint64_t)v10;
          goto LABEL_18;
        }
      }
      if (v12 == *(google::protobuf::MapKey **)(v11 + 8 * (v9 ^ 1))) {
        uint64_t v12 = *(google::protobuf::MapKey **)(*(void *)v12 + 40);
      }
    }
LABEL_18:
    v17[0] = v12;
    v17[1] = v7;
    v17[2] = (google::protobuf::MapKey *)v9;
    if (google::protobuf::MapKey::type(v12) == 9) {
      uint64_t v13 = 24 * v8;
    }
    else {
      uint64_t v13 = 0;
    }
    v6 += 48 * v8 + v13;
    switch(google::protobuf::MapValueConstRef::type((google::protobuf::MapKey *)((char *)v12 + 32)))
    {
      case 1u:
      case 3u:
      case 6u:
      case 8u:
        v6 += 4 * v8;
        break;
      case 2u:
      case 4u:
      case 5u:
        v6 += 8 * v8;
        break;
      case 7u:
        v6 += v8;
        break;
      case 9u:
        v6 += 24 * v8;
        break;
      case 0xAu:
        while (v12)
        {
          uint64_t MessageValue = (const google::protobuf::Message *)google::protobuf::MapValueConstRef::GetMessageValue((google::protobuf::MapKey *)((char *)v12 + 32));
          (*(void (**)(const google::protobuf::Message *))(*(void *)MessageValue + 152))(MessageValue);
          v6 += google::protobuf::Reflection::SpaceUsedLong(v15, MessageValue);
          google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef> const>::operator++(v17);
          uint64_t v12 = v17[0];
        }
        break;
      default:
        return v6;
    }
  }
  return v6;
}

uint64_t google::protobuf::MapKey::type(google::protobuf::MapKey *this)
{
  uint64_t result = *((unsigned int *)this + 6);
  if (!result)
  {
    int v3 = 3;
    uint64_t v4 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v5 = 91;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapKey::type MapKey is not initialized. ");
    std::string::append(&__p, "Call set methods to initialize MapKey.");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v3);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    return *((unsigned int *)this + 6);
  }
  return result;
}

void sub_1891C314C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::EqualIterator(uint64_t a1, void **a2, void **a3)
{
  return **a2 == **a3;
}

uint64_t google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::MapBegin(uint64_t a1, void **a2)
{
  uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 160))(a1);
  unint64_t v5 = v4[3];
  unint64_t v6 = v4[1];
  if (v6 <= v5)
  {
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v7 = v4[4];
    while (1)
    {
      uint64_t v8 = *(void *)(v7 + 8 * v5);
      if (v8) {
        break;
      }
      if (v6 == ++v5)
      {
        uint64_t v8 = 0;
        unint64_t v5 = v4[1];
        goto LABEL_9;
      }
    }
    if (v8 == *(void *)(v7 + 8 * (v5 ^ 1))) {
      uint64_t v8 = *(void *)(*(void *)v8 + 40);
    }
  }
LABEL_9:
  unint64_t v9 = *a2;
  void *v9 = v8;
  v9[1] = v4;
  std::string v9[2] = v5;
  uint64_t v10 = *(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 176);

  return v10(a1, a2);
}

uint64_t google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::MapEnd(uint64_t a1, void **a2)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 160))(a1);
  uint64_t v4 = *a2;
  v4[1] = 0;
  v4[2] = 0;
  *uint64_t v4 = 0;
  return result;
}

void google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::InitializeIterator()
{
}

uint64_t google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::DeleteIterator(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (*a2) {
    JUMPOUT(0x18C11F580);
  }
  return result;
}

uint64_t google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::CopyIterator(uint64_t a1, uint64_t *a2, _DWORD *a3)
{
  uint64_t v6 = *a2;
  long long v7 = *(_OWORD *)*(void *)a3;
  *(void *)(v6 + 16) = *(void *)(*(void *)a3 + 16);
  *(_OWORD *)uint64_t v6 = v7;
  uint64_t v8 = (uint64_t)(a2 + 2);
  int v9 = google::protobuf::MapKey::type((google::protobuf::MapKey *)(a3 + 4));
  google::protobuf::MapKey::SetType(v8, v9);
  *((_DWORD *)a2 + 14) = a3[14];
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t *))(*(void *)a1 + 176);

  return v10(a1, a2);
}

uint64_t google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::IncreaseIterator(uint64_t a1, google::protobuf::MapKey ***a2)
{
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef> const>::operator++(*a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, google::protobuf::MapKey ***))(*(void *)a1 + 176);

  return v4(a1, a2);
}

void google::protobuf::internal::arena_destruct_object<std::string>(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3) {
          (*(void (**)(void))(*(void *)*v3 + 8))(*v3);
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::Message>>(void *a1)
{
}

uint64_t google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::~InnerMap(uint64_t a1)
{
  if (!*(void *)(a1 + 40) && *(void *)(a1 + 8) != 1)
  {
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::clear(a1);
    if (!*(void *)(a1 + 40)) {
      operator delete(*(void **)(a1 + 32));
    }
  }
  return a1;
}

uint64_t google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::clear(uint64_t result)
{
  uint64_t v1 = (void *)result;
  unint64_t v2 = *(void *)(result + 8);
  if (v2)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = v1[4];
      unint64_t v5 = *(uint64_t ***)(v4 + 8 * v3);
      if (v5)
      {
        if (v5 == *(uint64_t ***)(v4 + 8 * (v3 ^ 1)))
        {
          uint64_t v7 = v3 + 1;
          *(void *)(v4 + 8 * (v3 + 1)) = 0;
          *(void *)(v1[4] + 8 * v3) = 0;
          uint64_t v8 = *v5;
          do
          {
            uint64_t v9 = v8[5];
            uint64_t v10 = (uint64_t *)v8[1];
            uint64_t v11 = v8;
            if (v10)
            {
              do
              {
                uint64_t v12 = v10;
                uint64_t v10 = (uint64_t *)*v10;
              }
              while (v10);
            }
            else
            {
              do
              {
                uint64_t v12 = (uint64_t *)v11[2];
                BOOL v13 = *v12 == (void)v11;
                uint64_t v11 = v12;
              }
              while (!v13);
            }
            std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::erase((uint64_t)v5, v8);
            google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::DestroyNode(v1[5], v9);
            uint64_t v8 = v12;
          }
          while (v12 != (uint64_t *)(v5 + 1));
          uint64_t result = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::DestroyTree(v1[5], (uint64_t)v5);
          goto LABEL_16;
        }
        *(void *)(v4 + 8 * v3) = 0;
        do
        {
          uint64_t v6 = (uint64_t **)v5[6];
          uint64_t result = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::DestroyNode(v1[5], (uint64_t)v5);
          unint64_t v5 = v6;
        }
        while (v6);
      }
      uint64_t v7 = v3;
LABEL_16:
      uint64_t v3 = v7 + 1;
      unint64_t v2 = v1[1];
    }
    while (v7 + 1 < v2);
  }
  *uint64_t v1 = 0;
  v1[3] = v2;
  return result;
}

uint64_t google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::DestroyNode(uint64_t result, uint64_t a2)
{
  if (!result && a2)
  {
    if (*(_DWORD *)(a2 + 24) == 9 && *(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    JUMPOUT(0x18C11F580);
  }
  return result;
}

uint64_t google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::DestroyTree(uint64_t result, uint64_t a2)
{
  if (!result && a2)
  {
    std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::destroy(a2, *(void **)(a2 + 8));
    JUMPOUT(0x18C11F580);
  }
  return result;
}

void std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::erase(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = (uint64_t *)a2[1];
  if (v4)
  {
    do
    {
      unint64_t v5 = v4;
      uint64_t v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  else
  {
    uint64_t v6 = a2;
    do
    {
      unint64_t v5 = (uint64_t *)v6[2];
      BOOL v7 = *v5 == (void)v6;
      uint64_t v6 = v5;
    }
    while (!v7);
  }
  if (*(uint64_t **)a1 == a2) {
    *(void *)a1 = v5;
  }
  --*(void *)(a1 + 24);
  std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(a1 + 8), a2);
  if (!*(void *)(a1 + 16))
  {
    operator delete(a2);
  }
}

void std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::destroy(a1, a2[1]);
    if (!*(void *)(a1 + 16))
    {
      operator delete(a2);
    }
  }
}

google::protobuf::internal::MapFieldBase *google::protobuf::internal::MapFieldBase::MapFieldBase(google::protobuf::internal::MapFieldBase *this, Arena *a2)
{
  *(void *)this = &unk_1ED515C58;
  *((void *)this + 1) = a2;
  *((void *)this + 3) = 850045863;
  *((void *)this + 2) = 0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *(_OWORD *)((char *)this + 76) = 0u;
  if (a2) {
    google::protobuf::Arena::OwnDestructor<google::protobuf::internal::WrappedMutex>((char *)a2, (char *)this + 24);
  }
  return this;
}

void sub_1891C3890(_Unwind_Exception *a1)
{
  std::mutex::~mutex(v1);
  _Unwind_Resume(a1);
}

char *google::protobuf::Arena::OwnDestructor<google::protobuf::internal::WrappedMutex>(char *result, void *a2)
{
  if (a2) {
    return google::protobuf::internal::ArenaImpl::AddCleanup((atomic_ullong *)result, a2, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::internal::WrappedMutex>);
  }
  return result;
}

void *google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::SearchFrom(void *result, unint64_t a2)
{
  *uint64_t result = 0;
  uint64_t v2 = result[1];
  unint64_t v3 = *(void *)(v2 + 8);
  if (v3 <= a2)
  {
LABEL_6:
    result[2] = a2;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 32);
    while (1)
    {
      uint64_t v5 = *(void *)(v4 + 8 * a2);
      if (v5) {
        break;
      }
      if (v3 == ++a2)
      {
        a2 = v3;
        goto LABEL_6;
      }
    }
    uint64_t v6 = *(void *)(v4 + 8 * (a2 ^ 1));
    result[2] = a2;
    if (v5 == v6) {
      *uint64_t result = *(void *)(*(void *)v5 + 40);
    }
    else {
      *uint64_t result = v5;
    }
  }
  return result;
}

void *google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::operator++(void *a1)
{
  uint64_t v2 = *(void *)(*a1 + 48);
  if (v2) {
    goto LABEL_2;
  }
  uint64_t v11 = 0;
  if (google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::revalidate_if_necessary((uint64_t)a1, &v11))
  {
    unint64_t v3 = a1[2] + 1;
LABEL_13:
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::SearchFrom(a1, v3);
    return a1;
  }
  uint64_t v4 = a1[2];
  uint64_t v5 = *(void *)(*(void *)(a1[1] + 32) + 8 * v4);
  uint64_t v6 = v11;
  BOOL v7 = (void *)v11[1];
  if (v7)
  {
    do
    {
      uint64_t v8 = v7;
      BOOL v7 = (void *)*v7;
    }
    while (v7);
  }
  else
  {
    do
    {
      uint64_t v8 = (void *)v6[2];
      BOOL v9 = *v8 == (void)v6;
      uint64_t v6 = v8;
    }
    while (!v9);
  }
  uint64_t v11 = v8;
  if (v8 == (void *)(v5 + 8))
  {
    unint64_t v3 = v4 + 2;
    goto LABEL_13;
  }
  uint64_t v2 = v8[5];
LABEL_2:
  *a1 = v2;
  return a1;
}

BOOL google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::revalidate_if_necessary(uint64_t a1, void *a2)
{
  uint64_t v4 = *(google::protobuf::MapKey **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16) & (*(void *)(v3 + 8) - 1);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(v3 + 32);
  BOOL v7 = *(google::protobuf::MapKey **)(v6 + 8 * v5);
  if (v7 == v4) {
    return 1;
  }
  if (v7 && v7 != *(google::protobuf::MapKey **)(v6 + 8 * (v5 ^ 1)))
  {
    while (1)
    {
      BOOL v7 = (google::protobuf::MapKey *)*((void *)v7 + 6);
      if (!v7) {
        break;
      }
      if (v7 == v4) {
        return 1;
      }
    }
  }
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>(&v13, (unsigned __int8 *)v3, v4, a2);
  uint64_t v9 = v14;
  *(void *)(a1 + 16) = v14;
  uint64_t v10 = *(void *)(*(void *)(a1 + 8) + 32);
  uint64_t v11 = *(void *)(v10 + 8 * v9);
  return !v11 || v11 != *(void *)(v10 + 8 * (v9 ^ 1));
}

void google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>(unsigned __int8 **a1, unsigned __int8 *a2, google::protobuf::MapKey *a3, void *a4)
{
  unint64_t v8 = (*((void *)a2 + 1) - 1) & ((0x9E3779B97F4A7C15
                                     * (*((void *)a2 + 2) ^ std::hash<google::protobuf::MapKey>::operator()(a3))) >> 32);
  uint64_t v9 = *((void *)a2 + 4);
  uint64_t v10 = *(unsigned __int8 **)(v9 + 8 * v8);
  if (!v10) {
    goto LABEL_43;
  }
  if (v10 != *(unsigned __int8 **)(v9 + 8 * (v8 ^ 1)))
  {
    while (1)
    {
      if (*((_DWORD *)v10 + 6) != *((_DWORD *)a3 + 6))
      {
        int v26 = 3;
        uint64_t v27 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
        int v28 = 180;
        memset(&__p, 0, sizeof(__p));
        std::string::append(&__p, "Unsupported: type mismatch");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v26);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      switch(google::protobuf::MapKey::type((google::protobuf::MapKey *)v10))
      {
        case 1u:
        case 3u:
          int v11 = *(_DWORD *)v10;
          int v12 = *(_DWORD *)a3;
          goto LABEL_15;
        case 2u:
        case 4u:
          if (*(void *)v10 == *(void *)a3) {
            goto LABEL_34;
          }
          goto LABEL_16;
        case 5u:
        case 6u:
        case 8u:
        case 0xAu:
          int v26 = 3;
          uint64_t v27 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
          int v28 = 187;
          memset(&__p, 0, sizeof(__p));
          std::string::append(&__p, "Unsupported");
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v26);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          goto LABEL_9;
        case 7u:
          int v11 = *v10;
          int v12 = *(unsigned __int8 *)a3;
LABEL_15:
          if (v11 != v12) {
            goto LABEL_16;
          }
          goto LABEL_34;
        case 9u:
          uint64_t v13 = v10[23];
          if ((v13 & 0x80u) == 0) {
            uint64_t v14 = v10[23];
          }
          else {
            uint64_t v14 = *((void *)v10 + 1);
          }
          uint64_t v15 = *((unsigned __int8 *)a3 + 23);
          int v16 = (char)v15;
          if ((v15 & 0x80u) != 0) {
            uint64_t v15 = *((void *)a3 + 1);
          }
          if (v14 != v15) {
            goto LABEL_16;
          }
          if (v16 >= 0) {
            int v17 = a3;
          }
          else {
            int v17 = *(google::protobuf::MapKey **)a3;
          }
          if ((v13 & 0x80) != 0)
          {
            if (!memcmp(*(const void **)v10, v17, *((void *)v10 + 1)))
            {
LABEL_34:
              *a1 = v10;
              goto LABEL_35;
            }
          }
          else
          {
            if (!v10[23]) {
              goto LABEL_34;
            }
            uint64_t v18 = v10;
            while (*v18 == *(unsigned __int8 *)v17)
            {
              ++v18;
              int v17 = (google::protobuf::MapKey *)((char *)v17 + 1);
              if (!--v13) {
                goto LABEL_34;
              }
            }
          }
LABEL_16:
          uint64_t v10 = (unsigned __int8 *)*((void *)v10 + 6);
          if (!v10) {
            goto LABEL_43;
          }
          break;
        default:
LABEL_9:
          int v26 = 3;
          uint64_t v27 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
          int v28 = 202;
          memset(&__p, 0, sizeof(__p));
          std::string::append(&__p, "Can't get here.");
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v26);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          goto LABEL_16;
      }
    }
  }
  unint64_t v8 = v8 & 0xFFFFFFFE;
  uint64_t v19 = *(void *)(v9 + 8 * v8);
  uint64_t v22 = *(void *)(v19 + 8);
  uint64_t v20 = v19 + 8;
  uint64_t v21 = v22;
  if (!v22) {
    goto LABEL_43;
  }
  uint64_t v23 = v20;
  do
  {
    BOOL v24 = google::protobuf::MapKey::operator<(*(google::protobuf::MapKey **)(v21 + 32), (unsigned __int8 *)a3);
    int v25 = (uint64_t *)(v21 + 8);
    if (!v24)
    {
      int v25 = (uint64_t *)v21;
      uint64_t v23 = v21;
    }
    uint64_t v21 = *v25;
  }
  while (*v25);
  if (v23 != v20 && !google::protobuf::MapKey::operator<(a3, *(unsigned __int8 **)(v23 + 32)))
  {
    if (a4) {
      *a4 = v23;
    }
    *a1 = *(unsigned __int8 **)(v23 + 40);
LABEL_35:
    a1[1] = a2;
    a1[2] = (unsigned __int8 *)v8;
  }
  else
  {
LABEL_43:
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
  a1[3] = (unsigned __int8 *)v8;
}

void sub_1891C3D88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t std::hash<google::protobuf::MapKey>::operator()(google::protobuf::MapKey *a1)
{
  switch(google::protobuf::MapKey::type(a1))
  {
    case 1u:
      google::protobuf::MapKey::GetInt32Value(a1);
      return (int)google::protobuf::MapKey::GetInt32Value(a1);
    case 2u:
      return google::protobuf::MapKey::GetInt64Value(a1);
    case 3u:
      google::protobuf::MapKey::GetUInt32Value(a1);
      LODWORD(result) = google::protobuf::MapKey::GetUInt32Value(a1);
      return result;
    case 4u:
      google::protobuf::MapKey::GetUInt64Value(a1);
      return google::protobuf::MapKey::GetUInt64Value(a1);
    case 5u:
    case 6u:
    case 8u:
    case 0xAu:
      int v4 = 3;
      uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
      int v6 = 278;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Unsupported");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      goto LABEL_4;
    case 7u:
      LODWORD(result) = google::protobuf::MapKey::GetBoolValue(a1);
      return result;
    case 9u:
      StringValue = google::protobuf::MapKey::GetStringValue(a1);
      return std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)&v4, (uint64_t)StringValue);
    default:
LABEL_4:
      int v4 = 3;
      uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
      int v6 = 302;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Can't get here.");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      return 0;
  }
}

void sub_1891C3F80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::MapKey::operator<(google::protobuf::MapKey *this, unsigned __int8 *a2)
{
  if (*((_DWORD *)this + 6) != *((_DWORD *)a2 + 6))
  {
    int v17 = 3;
    uint64_t v18 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    int v19 = 152;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Unsupported: type mismatch");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v17);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  switch(google::protobuf::MapKey::type(this))
  {
    case 1u:
      return *(_DWORD *)this < *(_DWORD *)a2;
    case 2u:
      return *(void *)this < *(void *)a2;
    case 3u:
      unsigned int v6 = *(_DWORD *)this;
      unsigned int v7 = *(_DWORD *)a2;
      goto LABEL_34;
    case 4u:
      BOOL v8 = *(void *)this >= *(void *)a2;
      goto LABEL_35;
    case 5u:
    case 6u:
    case 8u:
    case 0xAu:
      int v17 = 3;
      uint64_t v18 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
      int v19 = 159;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Unsupported");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v17);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      goto LABEL_7;
    case 7u:
      unsigned int v6 = *(unsigned __int8 *)this;
      unsigned int v7 = *a2;
LABEL_34:
      BOOL v8 = v6 >= v7;
LABEL_35:
      BOOL result = !v8;
      break;
    case 9u:
      int v9 = (char)a2[23];
      int v10 = *((char *)this + 23);
      if (v10 >= 0) {
        size_t v11 = *((unsigned __int8 *)this + 23);
      }
      else {
        size_t v11 = *((void *)this + 1);
      }
      if (v10 >= 0) {
        int v12 = this;
      }
      else {
        int v12 = *(google::protobuf::MapKey **)this;
      }
      if (v9 >= 0) {
        size_t v13 = a2[23];
      }
      else {
        size_t v13 = *((void *)a2 + 1);
      }
      if (v9 >= 0) {
        uint64_t v14 = a2;
      }
      else {
        uint64_t v14 = *(const void **)a2;
      }
      if (v13 >= v11) {
        size_t v15 = v11;
      }
      else {
        size_t v15 = v13;
      }
      int v16 = memcmp(v12, v14, v15);
      if (v16) {
        BOOL result = v16 < 0;
      }
      else {
        BOOL result = v11 < v13;
      }
      break;
    default:
LABEL_7:
      BOOL result = 0;
      break;
  }
  return result;
}

void sub_1891C4194(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::insert<google::protobuf::MapKey const&>(uint64_t a1, unint64_t a2, google::protobuf::MapKey *a3)
{
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>(v23, (unsigned __int8 *)a2, a3, 0);
  if (v23[0])
  {
    unsigned int v7 = v23[1];
    BOOL v8 = v23[2];
    *(unsigned __int8 **)a1 = v23[0];
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = 0;
    return result;
  }
  unint64_t v9 = *(void *)(a2 + 8);
  unint64_t v10 = *(void *)a2 + 1;
  unint64_t v11 = ((3 * v9) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v11 <= v10)
  {
    if (v9 <= 0x800000000000000)
    {
      uint64_t v17 = 2 * v9;
LABEL_22:
      google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::Resize(a2, v17);
      google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>((unsigned __int8 **)&v20, (unsigned __int8 *)a2, a3, 0);
      size_t v13 = v22;
      goto LABEL_9;
    }
  }
  else if (v9 >= 9 && (12 * v9) >> 6 >= v10)
  {
    char v18 = 0;
    unint64_t v19 = ((5 * v10) >> 2) + 1;
    do
      ++v18;
    while (v19 << v18 < v11);
    uint64_t v17 = v9 >> v18 <= 8 ? 8 : v9 >> v18;
    if (v17 != v9) {
      goto LABEL_22;
    }
  }
  size_t v13 = v23[3];
LABEL_9:
  uint64_t v14 = *(void *)(a2 + 40);
  if (!v14) {
    operator new();
  }
  if (*(unsigned char *)(v14 + 24)) {
    (*(void (**)(void, void, uint64_t))(**(void **)(*(void *)(v14 + 32) + 32) + 40))(*(void *)(*(void *)(v14 + 32) + 32), MEMORY[0x1E4FBA3A0], 56);
  }
  Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((atomic_ullong *)v14, 0x38uLL);
  int v16 = *(char **)(a2 + 40);
  *((_DWORD *)Aligned + 6) = 0;
  google::protobuf::MapKey::CopyFrom((std::string *)Aligned, a3);
  google::protobuf::Arena::OwnDestructor<google::protobuf::MapKey>(v16, Aligned);
  *((void *)Aligned + 4) = 0;
  *((_DWORD *)Aligned + 10) = 0;
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::InsertUnique((uint64_t *)&v20, a2, (uint64_t)v13, (uint64_t)Aligned);
  ++*(void *)a2;
  double result = *(double *)&v20;
  *(_OWORD *)a1 = v20;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = 1;
  return result;
}

void sub_1891C43DC(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F580](v1, 0x10A2C40A72D8349);
  _Unwind_Resume(a1);
}

uint64_t *google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::InsertUnique(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  unint64_t v5 = a3;
  unsigned int v7 = result;
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(v8 + 8 * a3);
  if (!v9)
  {
    *(void *)(a4 + 48) = 0;
    *(void *)(v8 + 8 * a3) = a4;
    goto LABEL_8;
  }
  if (v9 != *(void *)(v8 + 8 * (a3 ^ 1)))
  {
    unint64_t v10 = 0;
    uint64_t v11 = *(void *)(v8 + 8 * a3);
    do
    {
      ++v10;
      uint64_t v11 = *(void *)(v11 + 48);
    }
    while (v11);
    if (v10 < 8)
    {
      *(void *)(a4 + 48) = v9;
      *(void *)(v8 + 8 * a3) = a4;
LABEL_11:
      *unsigned int v7 = v4;
      v7[1] = a2;
      v7[2] = v5;
      return result;
    }
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::TreeConvert(a2, a3);
    *(void *)(v4 + 48) = 0;
    uint64_t v14 = *(uint64_t ***)(*(void *)(a2 + 32) + 8 * v5);
    *(void *)&long long v15 = v4;
    *((void *)&v15 + 1) = v4;
    double result = std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::__emplace_unique_key_args<std::reference_wrapper<google::protobuf::MapKey const>,std::pair<std::reference_wrapper<google::protobuf::MapKey const> const,void *>>(v14, (google::protobuf::MapKey **)&v15, &v15);
    v5 &= ~1uLL;
    uint64_t v4 = result[5];
LABEL_8:
    unint64_t v12 = *(void *)(a2 + 24);
    if (v5 < v12) {
      unint64_t v12 = v5;
    }
    *(void *)(a2 + 24) = v12;
    goto LABEL_11;
  }
  *(void *)(a4 + 48) = 0;
  size_t v13 = *(uint64_t ***)(v8 + 8 * a3);
  *(void *)&long long v15 = a4;
  *((void *)&v15 + 1) = a4;
  double result = std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::__emplace_unique_key_args<std::reference_wrapper<google::protobuf::MapKey const>,std::pair<std::reference_wrapper<google::protobuf::MapKey const> const,void *>>(v13, (google::protobuf::MapKey **)&v15, &v15);
  *unsigned int v7 = result[5];
  v7[1] = a2;
  v7[2] = v5 & 0xFFFFFFFFFFFFFFFELL;
  return result;
}

void google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::Resize(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 == 1)
  {
    *(void *)(a1 + 24) = 8;
    *(void *)(a1 + 8) = 8;
    v17[0] = *(void *)(a1 + 40);
    uint64_t v4 = google::protobuf::internal::MapAllocator<void *>::allocate(v17, 8);
    *((_OWORD *)v4 + 2) = 0u;
    *((_OWORD *)v4 + 3) = 0u;
    *(_OWORD *)uint64_t v4 = 0u;
    *((_OWORD *)v4 + 1) = 0u;
    *(void *)(a1 + 32) = v4;
    *(void *)(a1 + 16) = a1 >> 12;
  }
  else
  {
    *(void *)(a1 + 8) = a2;
    unsigned int v6 = *(void **)(a1 + 32);
    v17[0] = *(void *)(a1 + 40);
    unsigned int v7 = google::protobuf::internal::MapAllocator<void *>::allocate(v17, a2);
    bzero(v7, 8 * a2);
    unint64_t v8 = *(void *)(a1 + 24);
    *(void *)(a1 + 24) = *(void *)(a1 + 8);
    for (*(void *)(a1 + 32) = v7; v8 < v3; ++v8)
    {
      uint64_t v9 = (google::protobuf::MapKey *)v6[v8];
      if (v9)
      {
        if (v9 == (google::protobuf::MapKey *)v6[v8 ^ 1])
        {
          unint64_t v12 = *(void **)v9;
          do
          {
            unint64_t v13 = std::hash<google::protobuf::MapKey>::operator()((google::protobuf::MapKey *)v12[4]);
            google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::InsertUnique(v17, a1, (*(void *)(a1 + 8) - 1) & ((0x9E3779B97F4A7C15 * (*(void *)(a1 + 16) ^ v13)) >> 32), v12[5]);
            uint64_t v14 = (void *)v12[1];
            if (v14)
            {
              do
              {
                long long v15 = v14;
                uint64_t v14 = (void *)*v14;
              }
              while (v14);
            }
            else
            {
              do
              {
                long long v15 = (void *)v12[2];
                BOOL v16 = *v15 == (void)v12;
                unint64_t v12 = v15;
              }
              while (!v16);
            }
            unint64_t v12 = v15;
          }
          while (v15 != (void *)((char *)v9 + 8));
          ++v8;
          google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::DestroyTree(*(void *)(a1 + 40), (uint64_t)v9);
        }
        else
        {
          do
          {
            unint64_t v10 = (google::protobuf::MapKey *)*((void *)v9 + 6);
            unint64_t v11 = std::hash<google::protobuf::MapKey>::operator()(v9);
            google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::InsertUnique(v17, a1, (*(void *)(a1 + 8) - 1) & ((0x9E3779B97F4A7C15 * (*(void *)(a1 + 16) ^ v11)) >> 32), (uint64_t)v9);
            uint64_t v9 = v10;
          }
          while (v10);
        }
      }
    }
    if (!*(void *)(a1 + 40)) {
      operator delete(v6);
    }
  }
}

char *google::protobuf::internal::MapAllocator<void *>::allocate(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = 8 * a2;
  if (*a1)
  {
    if (*(unsigned char *)(v2 + 24)) {
      (*(void (**)(void, void, unint64_t))(**(void **)(*(void *)(v2 + 32) + 32) + 40))(*(void *)(*(void *)(v2 + 32) + 32), MEMORY[0x1E4FBA3A0], v3);
    }
    return google::protobuf::internal::ArenaImpl::AllocateAligned((atomic_ullong *)v2, v3);
  }
  else
  {
    return (char *)operator new(8 * a2);
  }
}

char *google::protobuf::Arena::OwnDestructor<google::protobuf::MapKey>(char *result, void *a2)
{
  if (a2) {
    return google::protobuf::internal::ArenaImpl::AddCleanup((atomic_ullong *)result, a2, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::MapKey>);
  }
  return result;
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::MapKey>(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 24) == 9 && *(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
}

uint64_t *google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::TreeConvert(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  if (!v4) {
    operator new();
  }
  if (*(unsigned char *)(v4 + 24)) {
  AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v4, 0x20uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::map<std::reference_wrapper<google::protobuf::MapKey const>,void *,std::less<google::protobuf::MapKey>,google::protobuf::internal::MapAllocator<std::pair<std::reference_wrapper<google::protobuf::MapKey const> const,void *>>>>);
  }
  *((void *)AlignedAndAddCleanup + 1) = 0;
  *((void *)AlignedAndAddCleanup + 2) = v4;
  *((void *)AlignedAndAddCleanup + 3) = 0;
  *(void *)AlignedAndAddCleanup = AlignedAndAddCleanup + 8;
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::CopyListToTree(*(uint64_t **)(a1 + 32), a2, (uint64_t **)AlignedAndAddCleanup);
  double result = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::CopyListToTree(*(uint64_t **)(a1 + 32), a2 ^ 1, (uint64_t **)AlignedAndAddCleanup);
  *(void *)(*(void *)(a1 + 32) + 8 * (a2 ^ 1)) = AlignedAndAddCleanup;
  *(void *)(*(void *)(a1 + 32) + 8 * a2) = AlignedAndAddCleanup;
  return result;
}

uint64_t *google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::CopyListToTree(uint64_t *result, uint64_t a2, uint64_t **a3)
{
  uint64_t v3 = result[a2];
  if (v3)
  {
    do
    {
      *(void *)&long long v6 = v3;
      *((void *)&v6 + 1) = v3;
      double result = std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::__emplace_unique_key_args<std::reference_wrapper<google::protobuf::MapKey const>,std::pair<std::reference_wrapper<google::protobuf::MapKey const> const,void *>>(a3, (google::protobuf::MapKey **)&v6, &v6);
      uint64_t v5 = *(void *)(v3 + 48);
      *(void *)(v3 + 48) = 0;
      uint64_t v3 = v5;
    }
    while (v5);
  }
  return result;
}

void google::protobuf::internal::arena_destruct_object<std::map<std::reference_wrapper<google::protobuf::MapKey const>,void *,std::less<google::protobuf::MapKey>,google::protobuf::internal::MapAllocator<std::pair<std::reference_wrapper<google::protobuf::MapKey const> const,void *>>>>(uint64_t a1)
{
}

uint64_t *std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::__emplace_unique_key_args<std::reference_wrapper<google::protobuf::MapKey const>,std::pair<std::reference_wrapper<google::protobuf::MapKey const> const,void *>>(uint64_t **a1, google::protobuf::MapKey **a2, _OWORD *a3)
{
  long long v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (!v5)
  {
    unint64_t v8 = (uint64_t *)(a1 + 1);
LABEL_9:
    uint64_t v9 = a1[2];
    if (v9)
    {
      if (v9[3]) {
        (*(void (**)(void, void, uint64_t))(**(void **)(v9[4] + 32) + 40))(*(void *)(v9[4] + 32), MEMORY[0x1E4FBA3A0], 48);
      }
      Aligned = (uint64_t *)google::protobuf::internal::ArenaImpl::AllocateAligned(v9, 0x30uLL);
    }
    else
    {
      Aligned = (uint64_t *)operator new(0x30uLL);
    }
    unint64_t v11 = Aligned;
    *((_OWORD *)Aligned + 2) = *a3;
    uint64_t *Aligned = 0;
    Aligned[1] = 0;
    Aligned[2] = (uint64_t)v8;
    void *v6 = Aligned;
    unint64_t v12 = (uint64_t *)**a1;
    unint64_t v13 = Aligned;
    if (v12)
    {
      *a1 = v12;
      unint64_t v13 = *v6;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v13);
    a1[3] = (uint64_t *)((char *)a1[3] + 1);
    return v11;
  }
  while (1)
  {
    while (1)
    {
      unint64_t v8 = v5;
      if (!google::protobuf::MapKey::operator<(*a2, (unsigned __int8 *)v5[4])) {
        break;
      }
      uint64_t v5 = (uint64_t *)*v8;
      long long v6 = (uint64_t **)v8;
      if (!*v8) {
        goto LABEL_9;
      }
    }
    if (!google::protobuf::MapKey::operator<((google::protobuf::MapKey *)v8[4], (unsigned __int8 *)*a2)) {
      break;
    }
    long long v6 = (uint64_t **)(v8 + 1);
    uint64_t v5 = (uint64_t *)v8[1];
    if (!v5) {
      goto LABEL_9;
    }
  }
  unint64_t v11 = *v6;
  if (!*v6) {
    goto LABEL_9;
  }
  return v11;
}

uint64_t google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::EraseFromLinkedList(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void *)(a2 + 48);
  if (v2 == a1) {
    return v3;
  }
  *(void *)(v2 + 48) = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::EraseFromLinkedList();
  return v2;
}

google::protobuf::MapKey **google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef> const>::operator++(google::protobuf::MapKey **a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (google::protobuf::MapKey *)*((void *)*a1 + 6);
  if (v3) {
    goto LABEL_2;
  }
  BOOL v16 = 0;
  uint64_t v4 = a1[1];
  uint64_t v5 = (unint64_t)a1[2] & (*((void *)v4 + 1) - 1);
  a1[2] = (google::protobuf::MapKey *)v5;
  uint64_t v6 = *((void *)v4 + 4);
  unsigned int v7 = *(google::protobuf::MapKey **)(v6 + 8 * v5);
  if (v7 == v2) {
    goto LABEL_11;
  }
  if (v7 && v7 != *(google::protobuf::MapKey **)(v6 + 8 * (v5 ^ 1)))
  {
    while (1)
    {
      unsigned int v7 = (google::protobuf::MapKey *)*((void *)v7 + 6);
      if (!v7) {
        break;
      }
      if (v7 == v2) {
        goto LABEL_11;
      }
    }
  }
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>(&v17, (unsigned __int8 *)v4, v2, &v16);
  uint64_t v5 = v18;
  a1[2] = (google::protobuf::MapKey *)v18;
  uint64_t v8 = *((void *)a1[1] + 4);
  uint64_t v9 = *(void *)(v8 + 8 * v5);
  if (!v9 || v9 != *(void *)(v8 + 8 * (v5 ^ 1)))
  {
LABEL_11:
    unint64_t v10 = v5 + 1;
LABEL_12:
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::SearchFrom(a1, v10);
    return a1;
  }
  unint64_t v12 = v16;
  unint64_t v13 = (void *)v16[1];
  if (v13)
  {
    do
    {
      uint64_t v14 = v13;
      unint64_t v13 = (void *)*v13;
    }
    while (v13);
  }
  else
  {
    do
    {
      uint64_t v14 = (void *)v12[2];
      BOOL v15 = *v14 == (void)v12;
      unint64_t v12 = v14;
    }
    while (!v15);
  }
  BOOL v16 = v14;
  if (v14 == (void *)(v9 + 8))
  {
    unint64_t v10 = v5 + 2;
    goto LABEL_12;
  }
  uint64_t v3 = (google::protobuf::MapKey *)v14[5];
LABEL_2:
  *a1 = v3;
  return a1;
}

google::protobuf::MapKey **google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::operator=(google::protobuf::MapKey **a1, google::protobuf::MapKey **a2)
{
  if (a1 != a2)
  {
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::clear((uint64_t)a1);
    uint64_t v4 = a2[3];
    uint64_t v5 = a2[1];
    if (v5 <= v4)
    {
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v6 = a2[4];
      while (1)
      {
        uint64_t v7 = *((void *)v6 + (void)v4);
        if (v7) {
          break;
        }
        uint64_t v4 = (google::protobuf::MapKey *)((char *)v4 + 1);
        if (v5 == v4)
        {
          uint64_t v7 = 0;
          uint64_t v4 = a2[1];
          goto LABEL_10;
        }
      }
      if (v7 == *((void *)v6 + ((unint64_t)v4 ^ 1))) {
        uint64_t v7 = *(void *)(*(void *)v7 + 40);
      }
    }
LABEL_10:
    *(void *)&long long v10 = v7;
    *((void *)&v10 + 1) = a2;
    unint64_t v11 = v4;
    memset(v9, 0, sizeof(v9));
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::insert<google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::const_iterator>(a1, &v10, v9);
  }
  return a1;
}

google::protobuf::MapKey **google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::insert<google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::const_iterator>(google::protobuf::MapKey **result, long long *a2, void *a3)
{
  long long v9 = *a2;
  uint64_t v10 = *((void *)a2 + 2);
  uint64_t v4 = (google::protobuf::MapKey *)v9;
  if ((void)v9 != *a3)
  {
    uint64_t v5 = (unsigned __int8 *)result;
    do
    {
      google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>(v11, v5, v4, 0);
      if (!v11[0])
      {
        uint64_t v6 = v9;
        google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::insert<google::protobuf::MapKey const&>((uint64_t)v11, (unint64_t)v5, (google::protobuf::MapKey *)v9);
        uint64_t v7 = v11[0];
        uint64_t v8 = *(void *)(v6 + 32);
        *((_DWORD *)v11[0] + 10) = *(_DWORD *)(v6 + 40);
        *((void *)v7 + 4) = v8;
      }
      double result = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef> const>::operator++((google::protobuf::MapKey **)&v9);
      uint64_t v4 = (google::protobuf::MapKey *)v9;
    }
    while ((void)v9 != *a3);
  }
  return result;
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(unsigned int *result, void *a2)
{
  uint64_t v2 = a2[1];
  if (*(void *)result == v2 && (v4 = (int *)*((void *)result + 2)) != 0 && (uint64_t v5 = *v4, (int)v5 < (int)result[3]))
  {
    uint64_t v6 = v4 + 2;
    uint64_t v7 = (int)result[2];
    if ((int)v7 < (int)v5) {
      *(void *)&v6[2 * v5] = *(void *)&v6[2 * v7];
    }
    *(void *)&v6[2 * v7] = a2;
    result[2] = v7 + 1;
    ++**((_DWORD **)result + 2);
  }
  else
  {
    uint64_t v3 = (char *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if (v2) {
      uint64_t v3 = *(char **)v3;
    }
    return google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(result, a2, v3, *(char **)result);
  }
  return result;
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(unsigned int *a1, void *a2, char *a3, char *a4)
{
  uint64_t v5 = (uint64_t)a2;
  if (a3 || !a4)
  {
    if (a4 != a3)
    {
      uint64_t v7 = (*(uint64_t (**)(void *, char *))(*(void *)a2 + 32))(a2, a4);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>::Merge(v5, v7);
      if (!a3) {
        (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
      }
      uint64_t v5 = v7;
    }
  }
  else
  {
    google::protobuf::Arena::Own<google::protobuf::Message>(a4, a2);
  }

  return google::protobuf::internal::RepeatedPtrFieldBase::UnsafeArenaAddAllocated<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(a1, v5);
}

char *google::protobuf::Arena::Own<google::protobuf::Message>(char *result, void *a2)
{
  if (a2) {
    return google::protobuf::internal::ArenaImpl::AddCleanup((atomic_ullong *)result, a2, (void (*)(void *))google::protobuf::internal::arena_delete_object<google::protobuf::Message>);
  }
  return result;
}

uint64_t google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>::Merge(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 120))(a2, a1);
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::UnsafeArenaAddAllocated<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(unsigned int *this, uint64_t a2)
{
  uint64_t v3 = this;
  uint64_t v4 = (int *)*((void *)this + 2);
  if (!v4)
  {
    int v7 = this[2];
    int v5 = this[3];
    goto LABEL_11;
  }
  int v5 = this[2];
  unsigned int v6 = this[3];
  int v7 = v5;
  if (v5 == v6)
  {
LABEL_11:
    this = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, v5 - v7 + 1);
    goto LABEL_12;
  }
  uint64_t v8 = *v4;
  if (v8 != v6)
  {
    if (v5 >= (int)v8)
    {
      int v10 = v8 + 1;
      goto LABEL_13;
    }
    *(void *)&v4[2 * v8 + 2] = *(void *)&v4[2 * v5 + 2];
LABEL_12:
    uint64_t v4 = (int *)*((void *)v3 + 2);
    int v10 = *v4 + 1;
LABEL_13:
    *uint64_t v4 = v10;
    goto LABEL_14;
  }
  this = *(unsigned int **)&v4[2 * v5 + 2];
  if (this) {
    BOOL v9 = *(void *)v3 == 0;
  }
  else {
    BOOL v9 = 0;
  }
  if (v9)
  {
    this = (unsigned int *)(*(uint64_t (**)(unsigned int *))(*(void *)this + 8))(this);
    uint64_t v4 = (int *)*((void *)v3 + 2);
  }
LABEL_14:
  uint64_t v11 = (int)v3[2];
  void v3[2] = v11 + 1;
  *(void *)&v4[2 * v11 + 2] = a2;
  return this;
}

uint64_t google::protobuf::internal::arena_delete_object<google::protobuf::Message>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void google::protobuf::StringPiece::LogFatalSizeTooBig(google::protobuf::StringPiece *this, const std::string::value_type *a2, const char *a3)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  int v5 = 3;
  unsigned int v6 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/stubs/stringpiece.cc";
  int v7 = 49;
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "size too big: ");
  snprintf(__str, 0x80uLL, "%lu", this);
  __str[127] = 0;
  std::string::append(&__p, __str);
  std::string::append(&__p, " details: ");
  std::string::append(&__p, a2);
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1891C50AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::StringPiece::find(google::protobuf::StringPiece *this, int a2, unint64_t a3)
{
  uint64_t v3 = *((void *)this + 1);
  if (v3 < 1 || v3 <= a3) {
    return -1;
  }
  uint64_t v6 = *(void *)this;
  int v7 = memchr((void *)(*(void *)this + a3), a2, v3 - a3);
  if (v7) {
    return (uint64_t)v7 - v6;
  }
  else {
    return -1;
  }
}

uint64_t google::protobuf::StringPiece::find_first_of(google::protobuf::StringPiece *a1, unsigned __int8 *a2, uint64_t a3, int64_t a4)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *((void *)a1 + 1);
  if (v4 < 1 || a3 < 1) {
    return -1;
  }
  if (a3 != 1)
  {
    memset(v9, 0, sizeof(v9));
    do
    {
      unsigned int v8 = *a2++;
      *((unsigned char *)v9 + v8) = 1;
      --a3;
    }
    while (a3);
    if (v4 > a4)
    {
      while (!*((unsigned char *)v9 + *(unsigned __int8 *)(*(void *)a1 + a4)))
      {
        if (v4 == ++a4) {
          return -1;
        }
      }
      return a4;
    }
    return -1;
  }
  int v6 = (char)*a2;

  return google::protobuf::StringPiece::find(a1, v6, a4);
}

uint64_t google::protobuf::StringPiece::find_first_not_of(void *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = a1[1];
  if (v4 < 1) {
    return -1;
  }
  if (a3 < 1) {
    return 0;
  }
  if (a3 != 1)
  {
    memset(v7, 0, sizeof(v7));
    do
    {
      unsigned int v5 = *a2++;
      *((unsigned char *)v7 + v5) = 1;
      --a3;
    }
    while (a3);
    if (v4 > a4)
    {
      while (*((unsigned char *)v7 + *(unsigned __int8 *)(*a1 + a4)))
      {
        if (v4 == ++a4) {
          return -1;
        }
      }
      return a4;
    }
    return -1;
  }
  if (v4 <= (unint64_t)a4) {
    return -1;
  }
  while (*(unsigned __int8 *)(*a1 + a4) == *a2)
  {
    if (v4 == ++a4) {
      return -1;
    }
  }
  return a4;
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(google::protobuf::io::EpsCopyOutputStream *a1, int a2, const void **a3, unsigned __int8 *a4)
{
  if (*((char *)a3 + 23) < 0)
  {
    int64_t v4 = (int64_t)a3[1];
    if (v4 > 127) {
      goto LABEL_24;
    }
  }
  else
  {
    int64_t v4 = *((unsigned __int8 *)a3 + 23);
  }
  unsigned int v5 = 8 * a2;
  uint64_t v6 = 1;
  uint64_t v7 = 2;
  uint64_t v8 = 3;
  uint64_t v9 = 4;
  if ((8 * a2) >> 28) {
    uint64_t v9 = 5;
  }
  if (v5 >= 0x200000) {
    uint64_t v8 = v9;
  }
  if (v5 >= 0x4000) {
    uint64_t v7 = v8;
  }
  if (v5 >= 0x80) {
    uint64_t v6 = v7;
  }
  if ((uint64_t)(*(void *)a1 + ~(unint64_t)&a4[v6] + 16) >= v4)
  {
    unsigned int v10 = v5 | 2;
    if ((v5 | 2) > 0x7F)
    {
      *a4 = v5 | 0x82;
      unsigned int v12 = v5 >> 7;
      if (v10 >> 14)
      {
        uint64_t v11 = a4 + 2;
        do
        {
          *(v11 - 1) = v12 | 0x80;
          unsigned int v13 = v12 >> 7;
          ++v11;
          unsigned int v14 = v12 >> 14;
          v12 >>= 7;
        }
        while (v14);
        *(v11 - 1) = v13;
      }
      else
      {
        a4[1] = v12;
        uint64_t v11 = a4 + 2;
      }
    }
    else
    {
      *a4 = v10;
      uint64_t v11 = a4 + 1;
    }
    *uint64_t v11 = v4;
    BOOL v15 = (char *)(v11 + 1);
    if (*((char *)a3 + 23) >= 0) {
      BOOL v16 = a3;
    }
    else {
      BOOL v16 = *a3;
    }
    memcpy(v15, v16, v4);
    return (unsigned __int8 *)&v15[v4];
  }
LABEL_24:

  return google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a1, a2, (void **)a3, a4);
}

google::protobuf::internal::EpsCopyInputStream *google::protobuf::internal::EpsCopyInputStream::ReadString(uint64_t a1, std::string::value_type *__s, int a3, std::string *a4)
{
  if (*(void *)(a1 + 8) - (void)__s + 16 >= a3)
  {
    uint64_t v6 = a3;
    MEMORY[0x18C11F1D0](a4, __s, a3);
    return (google::protobuf::internal::EpsCopyInputStream *)&__s[v6];
  }
  else
  {
    return google::protobuf::internal::EpsCopyInputStream::ReadStringFallback(a1, __s, a3, a4);
  }
}

void google::protobuf::UnknownFieldSet::~UnknownFieldSet(google::protobuf::UnknownFieldSet *this)
{
  uint64_t v2 = *(void **)this;
  if (v2 != *((void **)this + 1))
  {
    google::protobuf::UnknownFieldSet::ClearFallback(this);
    uint64_t v2 = *(void **)this;
  }
  if (v2)
  {
    *((void *)this + 1) = v2;
    operator delete(v2);
  }
}

uint64_t google::protobuf::Reflection::SpaceUsedLong(google::protobuf::Reflection *this, const google::protobuf::Message *a2)
{
  uint64_t v4 = *((unsigned int *)this + 12);
  uint64_t v5 = *(void *)((char *)a2 + *((unsigned int *)this + 9));
  if (v5) {
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)google::protobuf::UnknownFieldSet::default_instance(this);
  }
  uint64_t v7 = google::protobuf::UnknownFieldSet::SpaceUsedExcludingSelfLong(v6) + v4;
  uint64_t v8 = *((unsigned int *)this + 10);
  if (v8 != -1) {
    v7 += google::protobuf::internal::ExtensionSet::SpaceUsedExcludingSelfLong((const google::protobuf::Message *)((char *)a2 + v8));
  }
  if ((*((_DWORD *)this + 18) & 0x80000000) == 0)
  {
    uint64_t v9 = 0;
    int v44 = (char *)a2 + 4;
    do
    {
      uint64_t v10 = *(void *)(*(void *)this + 40);
      uint64_t v11 = (const google::protobuf::FieldDescriptor *)(v10 + 152 * v9);
      if (*((_DWORD *)v11 + 15) == 3)
      {
        unsigned int v12 = *(std::once_flag::_State_type **)(v10 + 152 * v9 + 48);
        if (v12)
        {
          uint64_t v45 = v10 + 152 * v9;
          uint64_t v46 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
          {
            unsigned __int8 v48 = &v46;
            uint64_t v49 = &v45;
            uint64_t v47 = &v48;
            std::__call_once(v12, &v47, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        switch(*(_DWORD *)(v10 + 152 * v9 + 56))
        {
          case 1:
          case 3:
          case 4:
          case 6:
          case 0x10:
          case 0x12:
            uint64_t v13 = *(unsigned int *)&v44[google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), (const google::protobuf::FieldDescriptor *)(v10 + 152 * v9))];
            uint64_t v14 = 8 * v13;
            goto LABEL_34;
          case 2:
          case 5:
          case 7:
          case 0xD:
          case 0xE:
          case 0xF:
          case 0x11:
            uint64_t v13 = *(unsigned int *)&v44[google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), (const google::protobuf::FieldDescriptor *)(v10 + 152 * v9))];
            uint64_t v14 = 4 * v13;
LABEL_34:
            uint64_t v25 = v14 + 8;
            goto LABEL_35;
          case 8:
            uint64_t v13 = *(unsigned int *)&v44[google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), (const google::protobuf::FieldDescriptor *)(v10 + 152 * v9))];
            uint64_t v25 = v13 + 8;
LABEL_35:
            if ((int)v13 <= 0) {
              uint64_t v26 = 0;
            }
            else {
              uint64_t v26 = v25;
            }
            goto LABEL_38;
          case 9:
          case 0xC:
            uint64_t v29 = (char *)a2
                + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), (const google::protobuf::FieldDescriptor *)(v10 + 152 * v9));
            uint64_t v26 = 8 * *((int *)v29 + 3);
            uint64_t v30 = (unsigned int *)*((void *)v29 + 2);
            if (v30)
            {
              uint64_t v31 = *v30;
              if ((int)v31 >= 1)
              {
                uint64_t v32 = v30 + 2;
                do
                {
                  uint64_t v33 = *(void **)v32;
                  if (*(char *)(*(void *)v32 + 23) < 0
                    && (*v33 >= (unint64_t)v33 ? (BOOL v34 = *v33 >= (unint64_t)(v33 + 3)) : (BOOL v34 = 1), v34))
                  {
                    uint64_t v35 = (v33[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
                  }
                  else
                  {
                    uint64_t v35 = 0;
                  }
                  v26 += v35 + 24;
                  v32 += 2;
                  --v31;
                }
                while (v31);
              }
              v26 += 8;
            }
LABEL_38:
            v7 += v26;
            break;
          case 0xA:
          case 0xB:
            uint64_t v37 = (char *)a2
                + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), v11);
            if (IsMapFieldInApi)
            {
              int v38 = (std::mutex *)(v37 + 24);
              std::mutex::lock((std::mutex *)(v37 + 24));
              uint64_t v39 = (*(uint64_t (**)(char *))(*(void *)v37 + 104))(v37);
              std::mutex::unlock(v38);
              v7 += v39;
            }
            else
            {
              uint64_t v40 = 8 * *((int *)v37 + 3);
              int v41 = (int *)*((void *)v37 + 2);
              if (v41)
              {
                if (*v41 >= 1)
                {
                  uint64_t v42 = 0;
                  do
                  {
                    v40 += (*(uint64_t (**)(void))(**(void **)&v41[2 * v42 + 2] + 136))(*(void *)&v41[2 * v42 + 2]);
                    ++v42;
                    int v41 = (int *)*((void *)v37 + 2);
                  }
                  while (v42 < *v41);
                }
                v40 += 8;
              }
              v7 += v40;
            }
            break;
          default:
            break;
        }
      }
      else
      {
        uint64_t v15 = v10 + 152 * v9;
        uint64_t v18 = *(void *)(v15 + 88);
        uint64_t v17 = (uint64_t *)(v15 + 88);
        uint64_t v16 = v18;
        if (!v18
          || *(_DWORD *)(v16 + 24) == 1 && *(unsigned char *)(**(void **)(v16 + 32) + 65)
          || *(_DWORD *)((char *)a2
                       + *((_DWORD *)this + 11)
                       - 1431655764
                       * ((unint64_t)(v16 - *(void *)(*(void *)(v16 + 16) + 48)) >> 4)) == *(_DWORD *)(v10 + 152 * v9 + 68))
        {
          unint64_t v19 = *(std::once_flag::_State_type **)(v10 + 152 * v9 + 48);
          if (v19)
          {
            uint64_t v45 = v10 + 152 * v9;
            uint64_t v46 = google::protobuf::FieldDescriptor::TypeOnceInit;
            if (atomic_load_explicit((atomic_ullong *volatile)v19, memory_order_acquire) != -1)
            {
              unsigned __int8 v48 = &v46;
              uint64_t v49 = &v45;
              uint64_t v47 = &v48;
              std::__call_once(v19, &v47, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
          }
          int v20 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v10 + 152 * v9 + 56)];
          if (v20 == 10)
          {
            if (*((const google::protobuf::Message **)this + 1) != a2)
            {
              uint64_t v27 = *(void *)((char *)a2
                              + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), (const google::protobuf::FieldDescriptor *)(v10 + 152 * v9)));
              if (v27) {
                v7 += (*(uint64_t (**)(uint64_t))(*(void *)v27 + 136))(v27);
              }
            }
          }
          else if (v20 == 9)
          {
            if ((unint64_t v21 = *(void *)((unsigned char *)a2
                                  + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), (const google::protobuf::FieldDescriptor *)(v10 + 152 * v9))) & 0xFFFFFFFFFFFFFFFELL, (uint64_t v22 = *v17) != 0)&& (*(_DWORD *)(v22 + 24) != 1 || !*(unsigned char *)(**(void **)(v22 + 32) + 65))|| v21 != (*(void *)google::protobuf::internal::ReflectionSchema::GetFieldDefault(*((void *)this + 1), *((void *)this + 2), (uint64_t)v11) & 0xFFFFFFFFFFFFFFFELL))
            {
              if (*(char *)(v21 + 23) < 0
                && (*(void *)v21 >= v21 ? (BOOL v23 = *(void *)v21 >= v21 + 24) : (BOOL v23 = 1), v23))
              {
                uint64_t v24 = (*(void *)(v21 + 16) & 0x7FFFFFFFFFFFFFFFLL) - 1;
              }
              else
              {
                uint64_t v24 = 0;
              }
              v7 += v24 + 24;
            }
          }
        }
      }
    }
    while (v9++ < *((int *)this + 18));
  }
  return v7;
}

BOOL google::protobuf::anonymous namespace'::IsMapFieldInApi(uint64_t a1)
{
  uint64_t v2 = *(std::once_flag::_State_type **)(a1 + 48);
  if (v2)
  {
    uint64_t v4 = a1;
    uint64_t v5 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v7[0] = &v5;
      v7[1] = &v4;
      uint64_t v6 = v7;
      std::__call_once(v2, &v6, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *(_DWORD *)(a1 + 56) == 11 && *(unsigned char *)(*(void *)(*(void *)(a1 + 104) + 32) + 75) != 0;
}

char *google::protobuf::Reflection::Swap(char *this, google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  uint64_t v206 = *MEMORY[0x1E4F143B8];
  if (a2 != a3)
  {
    uint64_t v5 = (unsigned int *)this;
    (*(void (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2);
    if (v6 != v5)
    {
      LODWORD(__str.__r_.__value_.__l.__data_) = 3;
      __str.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libpro"
                                                                "tobuf/src/google/protobuf/generated_message_reflection.cc";
      LODWORD(__str.__r_.__value_.__r.__words[2]) = 596;
      memset(v204, 0, 24);
      std::string::append(v204, "CHECK failed: (message1->GetReflection()) == (this): ");
      std::string::append(v204, "First argument to Swap() (of type \"");
      uint64_t v7 = (*(uint64_t (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2);
      uint64_t v8 = *(void *)(v7 + 8);
      int v9 = *(char *)(v8 + 23);
      uint64_t v10 = v9 >= 0 ? *(const std::string::value_type **)(v7 + 8) : *(const std::string::value_type **)v8;
      std::string::size_type v11 = v9 >= 0 ? *(unsigned __int8 *)(v8 + 23) : *(void *)(v8 + 8);
      std::string::append(v204, v10, v11);
      std::string::append(v204, "\") is not compatible with this reflection object (which is for type \"");
      uint64_t v12 = *(void *)(*(void *)v5 + 8);
      int v13 = *(char *)(v12 + 23);
      uint64_t v14 = v13 >= 0 ? *(const std::string::value_type **)(*(void *)v5 + 8) : *(const std::string::value_type **)v12;
      std::string::size_type v15 = v13 >= 0 ? *(unsigned __int8 *)(v12 + 23) : *(void *)(v12 + 8);
      std::string::append(v204, v14, v15);
      std::string::append(v204, "\").  Note that the exact same class is required; not just the same descriptor.");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__str);
      if (SHIBYTE(v204[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v204[0].__r_.__value_.__l.__data_);
      }
    }
    v185 = a2;
    (*(void (**)(google::protobuf::Message *))(*(void *)a3 + 152))(a3);
    if (v16 != v5)
    {
      LODWORD(__str.__r_.__value_.__l.__data_) = 3;
      __str.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libpro"
                                                                "tobuf/src/google/protobuf/generated_message_reflection.cc";
      LODWORD(__str.__r_.__value_.__r.__words[2]) = 604;
      memset(v204, 0, 24);
      std::string::append(v204, "CHECK failed: (message2->GetReflection()) == (this): ");
      std::string::append(v204, "Second argument to Swap() (of type \"");
      uint64_t v17 = (*(uint64_t (**)(google::protobuf::Message *))(*(void *)a3 + 152))(a3);
      uint64_t v18 = *(void *)(v17 + 8);
      int v19 = *(char *)(v18 + 23);
      int v20 = v19 >= 0 ? *(const std::string::value_type **)(v17 + 8) : *(const std::string::value_type **)v18;
      std::string::size_type v21 = v19 >= 0 ? *(unsigned __int8 *)(v18 + 23) : *(void *)(v18 + 8);
      std::string::append(v204, v20, v21);
      std::string::append(v204, "\") is not compatible with this reflection object (which is for type \"");
      uint64_t v22 = *(void *)(*(void *)v5 + 8);
      int v23 = *(char *)(v22 + 23);
      uint64_t v24 = v23 >= 0 ? *(const std::string::value_type **)(*(void *)v5 + 8) : *(const std::string::value_type **)v22;
      std::string::size_type v25 = v23 >= 0 ? *(unsigned __int8 *)(v22 + 23) : *(void *)(v22 + 8);
      std::string::append(v204, v24, v25);
      std::string::append(v204, "\").  Note that the exact same class is required; not just the same descriptor.");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__str);
      if (SHIBYTE(v204[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v204[0].__r_.__value_.__l.__data_);
      }
    }
    uint64_t v26 = v5[9];
    uint64_t v27 = *(void *)((char *)a2 + v26);
    unint64_t v28 = v27 & 0xFFFFFFFFFFFFFFFELL;
    if (v27) {
      unint64_t v28 = *(void *)(v27 & 0xFFFFFFFFFFFFFFFELL);
    }
    uint64_t v29 = *(void *)((char *)a3 + v26);
    uint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFELL);
    if (v29) {
      uint64_t v30 = (void *)*v30;
    }
    if ((void *)v28 == v30)
    {
      uint64_t v34 = v5[8];
      if (v34 != -1)
      {
        uint64_t v35 = *(unsigned int *)(*(void *)v5 + 104);
        if ((int)v35 >= 1)
        {
          int v36 = 0;
          uint64_t v37 = (int *)((char *)a2 + v34);
          int v38 = (int *)((char *)a3 + v34);
          uint64_t v39 = (void *)(*(void *)(*(void *)v5 + 40) + 88);
          do
          {
            if (*((_DWORD *)v39 - 7) != 3)
            {
              uint64_t v40 = *v39;
              if (!*v39 || *(_DWORD *)(v40 + 24) == 1 && *(unsigned char *)(**(void **)(v40 + 32) + 65)) {
                ++v36;
              }
            }
            v39 += 19;
            --v35;
          }
          while (v35);
          if (v36 >= 1)
          {
            uint64_t v41 = (v36 + 31) >> 5;
            do
            {
              int v42 = *v37;
              *v37++ = *v38;
              *v38++ = v42;
              --v41;
            }
            while (v41);
          }
        }
      }
      signed int v43 = v5[18];
      if ((v43 & 0x80000000) == 0)
      {
        uint64_t v44 = 0;
        uint64_t v45 = -1;
        do
        {
          uint64_t v46 = *(void *)(*(void *)v5 + 40);
          uint64_t v47 = v46 + v44;
          uint64_t v48 = *(void *)(v46 + v44 + 88);
          if (!v48 || *(_DWORD *)(v48 + 24) == 1 && *(unsigned char *)(**(void **)(v48 + 32) + 65))
          {
            uint64_t v49 = *(std::once_flag::_State_type **)(v47 + 48);
            if (*(_DWORD *)(v47 + 60) == 3)
            {
              if (v49)
              {
                v187.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
                v186.__r_.__value_.__r.__words[0] = v46 + v44;
                if (atomic_load_explicit((atomic_ullong *volatile)v49, memory_order_acquire) != -1)
                {
                  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v187;
                  __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v186;
                  p_str = &__str;
                  std::__call_once(v49, &p_str, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                }
              }
              uint64_t v50 = v46 + v44;
              switch(*(_DWORD *)(v50 + 56))
              {
                case 1:
                  unsigned int FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  unsigned int v61 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  google::protobuf::RepeatedField<double>::Swap((int *)((char *)v185 + FieldOffset), (int *)((char *)a3 + v61));
                  break;
                case 2:
                  unsigned int v62 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  unsigned int v63 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  google::protobuf::RepeatedField<float>::Swap((int *)((char *)v185 + v62), (int *)((char *)a3 + v63));
                  break;
                case 3:
                case 0x10:
                case 0x12:
                  unsigned int v54 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  unsigned int v55 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  google::protobuf::RepeatedField<long long>::Swap((int *)((char *)v185 + v54), (int *)((char *)a3 + v55));
                  break;
                case 4:
                case 6:
                  unsigned int v58 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  unsigned int v59 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  google::protobuf::RepeatedField<unsigned long long>::Swap((int *)((char *)v185 + v58), (int *)((char *)a3 + v59));
                  break;
                case 5:
                case 0xE:
                case 0xF:
                case 0x11:
                  unsigned int v51 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  unsigned int v52 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  google::protobuf::RepeatedField<int>::Swap((int *)((char *)v185 + v51), (int *)((char *)a3 + v52));
                  break;
                case 7:
                case 0xD:
                  unsigned int v56 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  unsigned int v57 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  google::protobuf::RepeatedField<unsigned int>::Swap((int *)((char *)v185 + v56), (int *)((char *)a3 + v57));
                  break;
                case 8:
                  unsigned int v64 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  unsigned int v65 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  google::protobuf::RepeatedField<BOOL>::Swap((int *)((char *)v185 + v64), (int *)((char *)a3 + v65));
                  break;
                case 9:
                case 0xC:
                  unsigned int v66 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  unsigned int v67 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  int v68 = (void *)((char *)v185 + v66);
                  uint64_t v69 = (char *)a3 + v67;
                  if (*(void *)v69 == *v68) {
                    goto LABEL_114;
                  }
                  google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::internal::GenericTypeHandler<std::string>>((google::protobuf::internal::RepeatedPtrFieldBase *)v68, (uint64_t *)v69);
                  break;
                case 0xA:
                case 0xB:
                  unsigned int v71 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  unsigned int v72 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  int v68 = (void *)((char *)v185 + v71);
                  uint64_t v69 = (char *)a3 + v72;
                  if (IsMapFieldInApi)
                  {
                    (*(void (**)(void *, char *))(*v68 + 80))(v68, v69);
                  }
                  else if (*(void *)v69 == *v68)
                  {
LABEL_114:
                    uint64_t v124 = v68[1];
                    uint64_t v125 = v68[2];
                    *(_OWORD *)(v68 + 1) = *(_OWORD *)(v69 + 8);
                    *((void *)v69 + 1) = v124;
                    *((void *)v69 + 2) = v125;
                  }
                  else
                  {
                    google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>>((google::protobuf::internal::RepeatedPtrFieldBase *)v68, (uint64_t *)v69);
                  }
                  break;
                default:
                  LODWORD(p_str) = 3;
                  v189 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_mes"
                         "sage_reflection.cc";
                  int v190 = 394;
                  memset(__p, 0, 24);
                  std::string::append((std::string *)__p, "Unimplemented type: ");
                  uint64_t v53 = *(std::once_flag::_State_type **)(v47 + 48);
                  if (v53)
                  {
                    v186.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
                    v202 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v47;
                    if (atomic_load_explicit((atomic_ullong *volatile)v53, memory_order_acquire) != -1)
                    {
                      __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v186;
                      __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v202;
                      v187.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
                      std::__call_once(v53, &v187, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                    }
                  }
                  goto LABEL_84;
              }
            }
            else
            {
              if (v49)
              {
                v187.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
                v186.__r_.__value_.__r.__words[0] = v46 + v44;
                if (atomic_load_explicit((atomic_ullong *volatile)v49, memory_order_acquire) != -1)
                {
                  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v187;
                  __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v186;
                  p_str = &__str;
                  std::__call_once(v49, &p_str, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                }
              }
              uint64_t v50 = v46 + v44;
              switch(*(_DWORD *)(v50 + 56))
              {
                case 1:
                  unsigned int v79 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  unsigned int v80 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  size_t v81 = (uint64_t *)((char *)v185 + v79);
                  uint64_t v82 = *v81;
                  *size_t v81 = *(void *)((char *)a3 + v80);
                  *(void *)((char *)a3 + v80) = v82;
                  break;
                case 2:
                  unsigned int v83 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  unsigned int v84 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  std::string v85 = (int *)((char *)v185 + v83);
                  int v86 = *v85;
                  *std::string v85 = *(_DWORD *)((char *)a3 + v84);
                  *(_DWORD *)((char *)a3 + v84) = v86;
                  break;
                case 3:
                case 4:
                case 6:
                case 0x10:
                case 0x12:
                  unsigned int v75 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  unsigned int v76 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  std::string::size_type v77 = (uint64_t *)((char *)v185 + v75);
                  uint64_t v78 = *v77;
                  *std::string::size_type v77 = *(void *)((char *)a3 + v76);
                  *(void *)((char *)a3 + v76) = v78;
                  break;
                case 5:
                case 7:
                case 0xD:
                case 0xE:
                case 0xF:
                case 0x11:
                  unsigned int v91 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  unsigned int v92 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  v93 = (int *)((char *)v185 + v91);
                  int v94 = *v93;
                  int *v93 = *(_DWORD *)((char *)a3 + v92);
                  *(_DWORD *)((char *)a3 + v92) = v94;
                  break;
                case 8:
                  unsigned int v87 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  unsigned int v88 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  uint64_t v89 = (char *)v185 + v87;
                  char v90 = *v89;
                  *uint64_t v89 = *((unsigned char *)a3 + v88);
                  *((unsigned char *)a3 + v88) = v90;
                  break;
                case 9:
                case 0xC:
                  uint64_t v95 = v5[9];
                  uint64_t v96 = *(void *)((char *)v185 + v95);
                  __sz = (google::protobuf::internal::ArenaImpl *)(v96 & 0xFFFFFFFFFFFFFFFELL);
                  if (v96) {
                    __sz = *(google::protobuf::internal::ArenaImpl **)__sz;
                  }
                  uint64_t v97 = *(void *)((char *)a3 + v95);
                  v98 = (google::protobuf::internal::ArenaImpl *)(v97 & 0xFFFFFFFFFFFFFFFELL);
                  if (v97) {
                    v98 = *(google::protobuf::internal::ArenaImpl **)v98;
                  }
                  unsigned int v99 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  unsigned int v100 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  FieldDefault = (void *)google::protobuf::internal::ReflectionSchema::GetFieldDefault(*((void *)v5 + 1), *((void *)v5 + 2), v47);
                  v102 = (std::string **)((char *)v185 + v99);
                  v103 = (std::string **)((char *)a3 + v100);
                  v104 = *v102;
                  if (__sz == v98)
                  {
                    *v102 = *v103;
                    *v103 = v104;
                  }
                  else
                  {
                    v105 = (std::string *)(*FieldDefault & 0xFFFFFFFFFFFFFFFELL);
                    v106 = *v103;
                    if (v104 == v105)
                    {
                      if (v106 != v105)
                      {
                        google::protobuf::internal::ArenaStringPtr::Set(v102, v105, (long long *)((unint64_t)v106 & 0xFFFFFFFFFFFFFFFELL), __sz);
                        *v103 = v105;
                      }
                    }
                    else
                    {
                      v107 = v98;
                      if (v106 == v105)
                      {
                        google::protobuf::internal::ArenaStringPtr::Set(v103, v105, (long long *)((unint64_t)v104 & 0xFFFFFFFFFFFFFFFELL), v98);
                        *v102 = v105;
                      }
                      else
                      {
                        unint64_t v108 = (unint64_t)v104 & 0xFFFFFFFFFFFFFFFELL;
                        if (*(char *)(v108 + 23) < 0)
                        {
                          std::string::__init_copy_ctor_external(&__str, *(const std::string::value_type **)v108, *(void *)(v108 + 8));
                          v106 = *v103;
                          v107 = v98;
                        }
                        else
                        {
                          long long v109 = *(_OWORD *)v108;
                          __str.__r_.__value_.__r.__words[2] = *(void *)(v108 + 16);
                          *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v109;
                        }
                        google::protobuf::internal::ArenaStringPtr::Set(v102, v105, (long long *)((unint64_t)v106 & 0xFFFFFFFFFFFFFFFELL), __sz);
                        google::protobuf::internal::ArenaStringPtr::Set((char **)v103, (char *)v105, (long long *)&__str, v107);
                        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
                        {
                          uint64_t v74 = (void *)__str.__r_.__value_.__r.__words[0];
                          goto LABEL_86;
                        }
                      }
                    }
                  }
                  break;
                case 0xA:
                case 0xB:
                  uint64_t v110 = v5[9];
                  uint64_t v111 = *(void *)((char *)v185 + v110);
                  v112 = (void *)(v111 & 0xFFFFFFFFFFFFFFFELL);
                  if (v111) {
                    v112 = (void *)*v112;
                  }
                  uint64_t v113 = *(void *)((char *)a3 + v110);
                  v114 = (void *)(v113 & 0xFFFFFFFFFFFFFFFELL);
                  if (v113) {
                    v114 = (void *)*v114;
                  }
                  BOOL v115 = v112 == v114;
                  unsigned int v116 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  unsigned int v117 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v5 + 2), (const google::protobuf::FieldDescriptor *)v47);
                  uint64_t v118 = v116;
                  v119 = (uint64_t *)((char *)v185 + v116);
                  uint64_t v120 = v117;
                  uint64_t v121 = *v119;
                  if (v115)
                  {
                    *(void *)((char *)v185 + v118) = *(void *)((char *)a3 + v120);
                    *(void *)((char *)a3 + v120) = v121;
                  }
                  else
                  {
                    uint64_t v122 = *(void *)((char *)a3 + v120);
                    if (v121)
                    {
                      if (v122)
                      {
                        (*(void (**)(uint64_t))(*(void *)v121 + 152))(v121);
                        google::protobuf::Reflection::Swap(v123, *(google::protobuf::Message **)((char *)v185 + v118), *(google::protobuf::Message **)((char *)a3 + v120));
                      }
                      else
                      {
                        uint64_t v131 = *((void *)a3 + 1);
                        v132 = (void *)(v131 & 0xFFFFFFFFFFFFFFFELL);
                        if (v131) {
                          v132 = (void *)*v132;
                        }
                        uint64_t v133 = (*(uint64_t (**)(uint64_t, void *))(*(void *)v121 + 32))(v121, v132);
                        *(void *)((char *)a3 + v120) = v133;
                        (*(void (**)(uint64_t, void))(*(void *)v133 + 112))(v133, *(void *)((char *)v185 + v118));
                        google::protobuf::Reflection::ClearField((google::protobuf::Reflection *)v5, v185, (const google::protobuf::FieldDescriptor *)v47, v134, v135);
                      }
                    }
                    else if (v122)
                    {
                      uint64_t v126 = *((void *)v185 + 1);
                      v127 = (void *)(v126 & 0xFFFFFFFFFFFFFFFELL);
                      if (v126) {
                        v127 = (void *)*v127;
                      }
                      uint64_t v128 = (*(uint64_t (**)(void, void *))(*(void *)v122 + 32))(*(void *)((char *)a3 + v120), v127);
                      *(void *)((char *)v185 + v118) = v128;
                      (*(void (**)(uint64_t, void))(*(void *)v128 + 112))(v128, *(void *)((char *)a3 + v120));
                      google::protobuf::Reflection::ClearField((google::protobuf::Reflection *)v5, a3, (const google::protobuf::FieldDescriptor *)v47, v129, v130);
                    }
                  }
                  break;
                default:
                  LODWORD(p_str) = 3;
                  v189 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_mes"
                         "sage_reflection.cc";
                  int v190 = 471;
                  memset(__p, 0, 24);
                  std::string::append((std::string *)__p, "Unimplemented type: ");
                  long long v73 = *(std::once_flag::_State_type **)(v47 + 48);
                  if (v73)
                  {
                    v186.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
                    v202 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v47;
                    if (atomic_load_explicit((atomic_ullong *volatile)v73, memory_order_acquire) != -1)
                    {
                      __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v186;
                      __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v202;
                      v187.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
                      std::__call_once(v73, &v187, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                    }
                  }
LABEL_84:
                  snprintf((char *)&__str, 0x80uLL, "%d", google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v50 + 56)]);
                  char v205 = 0;
                  std::string::append((std::string *)__p, (const std::string::value_type *)&__str);
                  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&p_str);
                  if ((__p[23] & 0x80000000) != 0)
                  {
                    uint64_t v74 = *(void **)__p;
LABEL_86:
                    operator delete(v74);
                  }
                  break;
              }
            }
            signed int v43 = v5[18];
          }
          v44 += 152;
          ++v45;
        }
        while (v45 < v43);
      }
      uint64_t v136 = *(unsigned int *)(*(void *)v5 + 108);
      v137 = v185;
      if ((int)v136 >= 1)
      {
        v138 = 0;
        v181 = (google::protobuf::internal::ReflectionSchema *)(v5 + 2);
        v184 = (std::string *)(48 * v136);
        do
        {
          v139 = *(google::protobuf::Descriptor **)v5;
          uint64_t v140 = *(void *)(*(void *)v5 + 48);
          uint64_t v141 = (uint64_t)v138 + v140;
          if (*(_DWORD *)((char *)&v138[1].__r_.__value_.__l.__data_ + v140) != 1
            || !*(unsigned char *)(**(void **)(v141 + 32) + 65))
          {
            unsigned int v142 = v5[11]
                 - 1431655764 * (((unint64_t)v138 + v140 - *(void *)(*(void *)(v141 + 16) + 48)) >> 4);
            int v143 = *(_DWORD *)((char *)v137 + v142);
            int v144 = *(_DWORD *)((char *)a3 + v142);
            int v199 = 0;
            uint64_t v198 = 0;
            int v197 = 0;
            uint64_t v196 = 0;
            int v195 = 0;
            uint64_t v194 = 0;
            char v193 = 0;
            int v192 = 0;
            memset(&__p[24], 0, 7);
            if (v143)
            {
              uint64_t FieldByNumber = google::protobuf::Descriptor::FindFieldByNumber(v139, v143);
              v148 = *(std::once_flag::_State_type **)(FieldByNumber + 48);
              if (v148)
              {
                v187.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
                v202 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))FieldByNumber;
                if (atomic_load_explicit((atomic_ullong *volatile)v148, memory_order_acquire) != -1)
                {
                  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v187;
                  __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v202;
                  p_str = &__str;
                  std::__call_once(v148, &p_str, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                }
              }
              switch(*(_DWORD *)(FieldByNumber + 56))
              {
                case 1:
                  v149 = 0;
                  std::string::size_type __sza = 0;
                  char v150 = 0;
                  v151 = 0;
                  uint64_t v194 = *(void *)((char *)v185
                                   + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v181, (const google::protobuf::FieldDescriptor *)FieldByNumber));
                  break;
                case 2:
                  v149 = 0;
                  std::string::size_type __sza = 0;
                  char v150 = 0;
                  v151 = 0;
                  int v195 = *(_DWORD *)((char *)v185
                                   + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v181, (const google::protobuf::FieldDescriptor *)FieldByNumber));
                  break;
                case 3:
                case 0x10:
                case 0x12:
                  v149 = 0;
                  std::string::size_type __sza = 0;
                  char v150 = 0;
                  v151 = 0;
                  uint64_t v198 = *(void *)((char *)v185
                                   + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v181, (const google::protobuf::FieldDescriptor *)FieldByNumber));
                  break;
                case 4:
                case 6:
                  v149 = 0;
                  std::string::size_type __sza = 0;
                  char v150 = 0;
                  v151 = 0;
                  uint64_t v196 = *(void *)((char *)v185
                                   + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v181, (const google::protobuf::FieldDescriptor *)FieldByNumber));
                  break;
                case 5:
                case 0xF:
                case 0x11:
                  v149 = 0;
                  std::string::size_type __sza = 0;
                  char v150 = 0;
                  v151 = 0;
                  int v199 = *(_DWORD *)((char *)v185
                                   + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v181, (const google::protobuf::FieldDescriptor *)FieldByNumber));
                  break;
                case 7:
                case 0xD:
                  v149 = 0;
                  std::string::size_type __sza = 0;
                  char v150 = 0;
                  v151 = 0;
                  int v197 = *(_DWORD *)((char *)v185
                                   + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v181, (const google::protobuf::FieldDescriptor *)FieldByNumber));
                  break;
                case 8:
                  v149 = 0;
                  std::string::size_type __sza = 0;
                  char v150 = 0;
                  v151 = 0;
                  char v193 = *((unsigned char *)v185
                         + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v181, (const google::protobuf::FieldDescriptor *)FieldByNumber));
                  break;
                case 9:
                case 0xC:
                  google::protobuf::Reflection::GetString((google::protobuf::_anonymous_namespace_ **)v5, v185, (const google::protobuf::FieldDescriptor *)FieldByNumber, v146, &__str);
                  v151 = 0;
                  std::string::size_type __sza = __str.__r_.__value_.__l.__size_;
                  v149 = (std::string::value_type *)__str.__r_.__value_.__r.__words[0];
                  *(_DWORD *)&__p[24] = __str.__r_.__value_.__r.__words[2];
                  *(_DWORD *)&__p[27] = *(_DWORD *)((char *)&__str.__r_.__value_.__r.__words[2] + 3);
                  char v150 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
                  break;
                case 0xA:
                case 0xB:
                  char v150 = 0;
                  v151 = (google::protobuf::Message *)google::protobuf::Reflection::ReleaseMessage((uint64_t)v5, (uint64_t)v185, (std::once_flag::_State_type **)FieldByNumber, v145, v146);
                  v149 = 0;
                  std::string::size_type __sza = 0;
                  break;
                case 0xE:
                  v149 = 0;
                  std::string::size_type __sza = 0;
                  char v150 = 0;
                  v151 = 0;
                  int v192 = *(_DWORD *)((char *)v185
                                   + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v181, (const google::protobuf::FieldDescriptor *)FieldByNumber));
                  break;
                default:
                  LODWORD(p_str) = 3;
                  v189 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_mes"
                         "sage_reflection.cc";
                  int v190 = 522;
                  memset(__p, 0, 24);
                  std::string::append((std::string *)__p, "Unimplemented type: ");
                  v160 = *(std::once_flag::_State_type **)(FieldByNumber + 48);
                  if (v160)
                  {
                    v202 = google::protobuf::FieldDescriptor::TypeOnceInit;
                    v201 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))FieldByNumber;
                    if (atomic_load_explicit((atomic_ullong *volatile)v160, memory_order_acquire) != -1)
                    {
                      __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v202;
                      __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v201;
                      v187.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
                      std::__call_once(v160, &v187, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                    }
                  }
                  snprintf((char *)&__str, 0x80uLL, "%d", google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(FieldByNumber + 56)]);
                  char v205 = 0;
                  std::string::append((std::string *)__p, (const std::string::value_type *)&__str);
                  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&p_str);
                  if ((__p[23] & 0x80000000) != 0) {
                    operator delete(*(void **)__p);
                  }
                  v149 = 0;
                  std::string::size_type __sza = 0;
                  char v150 = 0;
                  v151 = 0;
                  break;
              }
            }
            else
            {
              v149 = 0;
              std::string::size_type __sza = 0;
              char v150 = 0;
              v151 = 0;
              uint64_t FieldByNumber = 0;
            }
            if (v144)
            {
              uint64_t v154 = google::protobuf::Descriptor::FindFieldByNumber(*(google::protobuf::Descriptor **)v5, v144);
              v155 = *(std::once_flag::_State_type **)(v154 + 48);
              if (v155)
              {
                v187.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
                v202 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v154;
                if (atomic_load_explicit((atomic_ullong *volatile)v155, memory_order_acquire) != -1)
                {
                  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v187;
                  __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v202;
                  p_str = &__str;
                  std::__call_once(v155, &p_str, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                }
              }
              switch(*(_DWORD *)(v154 + 56))
              {
                case 1:
                  unsigned int v164 = google::protobuf::internal::ReflectionSchema::GetFieldOffset(v181, (const google::protobuf::FieldDescriptor *)v154);
                  google::protobuf::Reflection::SetField<double>(v5, v185, (google::protobuf::FieldDescriptor *)v154, (uint64_t *)((char *)a3 + v164));
                  break;
                case 2:
                  unsigned int v165 = google::protobuf::internal::ReflectionSchema::GetFieldOffset(v181, (const google::protobuf::FieldDescriptor *)v154);
                  google::protobuf::Reflection::SetField<float>(v5, v185, (google::protobuf::FieldDescriptor *)v154, (int *)((char *)a3 + v165));
                  break;
                case 3:
                case 4:
                case 6:
                case 0x10:
                case 0x12:
                  unsigned int v163 = google::protobuf::internal::ReflectionSchema::GetFieldOffset(v181, (const google::protobuf::FieldDescriptor *)v154);
                  google::protobuf::Reflection::SetField<long long>(v5, v185, (google::protobuf::FieldDescriptor *)v154, (uint64_t *)((char *)a3 + v163));
                  break;
                case 5:
                case 7:
                case 0xD:
                case 0xE:
                case 0xF:
                case 0x11:
                  unsigned int v156 = google::protobuf::internal::ReflectionSchema::GetFieldOffset(v181, (const google::protobuf::FieldDescriptor *)v154);
                  google::protobuf::Reflection::SetField<int>(v5, v185, (google::protobuf::FieldDescriptor *)v154, (int *)((char *)a3 + v156));
                  break;
                case 8:
                  unsigned int v166 = google::protobuf::internal::ReflectionSchema::GetFieldOffset(v181, (const google::protobuf::FieldDescriptor *)v154);
                  google::protobuf::Reflection::SetField<BOOL>(v5, v185, (google::protobuf::FieldDescriptor *)v154, (char *)a3 + v166);
                  break;
                case 9:
                case 0xC:
                  google::protobuf::Reflection::GetString((google::protobuf::_anonymous_namespace_ **)v5, a3, (const google::protobuf::FieldDescriptor *)v154, v153, &v187);
                  google::protobuf::Reflection::SetString((uint64_t)v5, v185, (google::protobuf::FieldDescriptor *)v154, (uint64_t *)&v187, v167);
                  if (SHIBYTE(v187.__r_.__value_.__r.__words[2]) < 0)
                  {
                    v162 = (void *)v187.__r_.__value_.__r.__words[0];
                    goto LABEL_181;
                  }
                  break;
                case 0xA:
                case 0xB:
                  v168 = (google::protobuf::Message *)google::protobuf::Reflection::ReleaseMessage((uint64_t)v5, (uint64_t)a3, (std::once_flag::_State_type **)v154, v152, v153);
                  google::protobuf::Reflection::SetAllocatedMessage((google::protobuf::_anonymous_namespace_ **)v5, v185, v168, (const google::protobuf::FieldDescriptor *)v154, v169);
                  break;
                default:
                  LODWORD(p_str) = 3;
                  v189 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_mes"
                         "sage_reflection.cc";
                  int v190 = 553;
                  memset(__p, 0, 24);
                  std::string::append((std::string *)__p, "Unimplemented type: ");
                  v161 = *(std::once_flag::_State_type **)(v154 + 48);
                  if (v161)
                  {
                    v202 = google::protobuf::FieldDescriptor::TypeOnceInit;
                    v201 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v154;
                    if (atomic_load_explicit((atomic_ullong *volatile)v161, memory_order_acquire) != -1)
                    {
                      __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v202;
                      __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v201;
                      v187.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
                      std::__call_once(v161, &v187, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                    }
                  }
                  snprintf((char *)&__str, 0x80uLL, "%d", google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v154 + 56)]);
                  char v205 = 0;
                  std::string::append((std::string *)__p, (const std::string::value_type *)&__str);
                  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&p_str);
                  if ((__p[23] & 0x80000000) != 0)
                  {
                    v162 = *(void **)__p;
LABEL_181:
                    operator delete(v162);
                  }
                  break;
              }
            }
            else
            {
              google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)v5, v185, v141);
            }
            if (v143)
            {
              v158 = *(std::once_flag::_State_type **)(FieldByNumber + 48);
              if (v158)
              {
                v202 = google::protobuf::FieldDescriptor::TypeOnceInit;
                v201 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))FieldByNumber;
                if (atomic_load_explicit((atomic_ullong *volatile)v158, memory_order_acquire) != -1)
                {
                  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v202;
                  __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v201;
                  p_str = &__str;
                  std::__call_once(v158, &p_str, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                }
              }
              v159 = &v199;
              switch(*(_DWORD *)(FieldByNumber + 56))
              {
                case 1:
                  google::protobuf::Reflection::SetField<double>(v5, a3, (google::protobuf::FieldDescriptor *)FieldByNumber, &v194);
                  goto LABEL_200;
                case 2:
                  google::protobuf::Reflection::SetField<float>(v5, a3, (google::protobuf::FieldDescriptor *)FieldByNumber, &v195);
                  goto LABEL_200;
                case 3:
                case 0x10:
                case 0x12:
                  google::protobuf::Reflection::SetField<long long>(v5, a3, (google::protobuf::FieldDescriptor *)FieldByNumber, &v198);
                  goto LABEL_200;
                case 4:
                case 6:
                  google::protobuf::Reflection::SetField<long long>(v5, a3, (google::protobuf::FieldDescriptor *)FieldByNumber, &v196);
                  goto LABEL_200;
                case 5:
                case 0xF:
                case 0x11:
                  goto LABEL_187;
                case 7:
                case 0xD:
                  google::protobuf::Reflection::SetField<int>(v5, a3, (google::protobuf::FieldDescriptor *)FieldByNumber, &v197);
                  goto LABEL_200;
                case 8:
                  google::protobuf::Reflection::SetField<BOOL>(v5, a3, (google::protobuf::FieldDescriptor *)FieldByNumber, &v193);
                  goto LABEL_200;
                case 9:
                case 0xC:
                  if (v150 < 0)
                  {
                    std::string::__init_copy_ctor_external(&v186, v149, __sza);
                  }
                  else
                  {
                    v186.__r_.__value_.__r.__words[0] = (std::string::size_type)v149;
                    v186.__r_.__value_.__l.__size_ = __sza;
                    LODWORD(v186.__r_.__value_.__r.__words[2]) = *(_DWORD *)&__p[24];
                    *(_DWORD *)((char *)&v186.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)&__p[27];
                    *((unsigned char *)&v186.__r_.__value_.__s + 23) = v150;
                  }
                  google::protobuf::Reflection::SetString((uint64_t)v5, a3, (google::protobuf::FieldDescriptor *)FieldByNumber, (uint64_t *)&v186, v157);
                  if ((SHIBYTE(v186.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                    goto LABEL_200;
                  }
                  v171 = (void *)v186.__r_.__value_.__r.__words[0];
                  goto LABEL_206;
                case 0xA:
                case 0xB:
                  google::protobuf::Reflection::SetAllocatedMessage((google::protobuf::_anonymous_namespace_ **)v5, a3, v151, (const google::protobuf::FieldDescriptor *)FieldByNumber, v157);
                  goto LABEL_200;
                case 0xE:
                  v159 = &v192;
LABEL_187:
                  google::protobuf::Reflection::SetField<int>(v5, a3, (google::protobuf::FieldDescriptor *)FieldByNumber, v159);
                  goto LABEL_200;
                default:
                  LODWORD(p_str) = 3;
                  v189 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_mes"
                         "sage_reflection.cc";
                  int v190 = 585;
                  memset(__p, 0, 24);
                  std::string::append((std::string *)__p, "Unimplemented type: ");
                  v170 = *(std::once_flag::_State_type **)(FieldByNumber + 48);
                  if (v170)
                  {
                    uint64_t v200 = FieldByNumber;
                    v201 = google::protobuf::FieldDescriptor::TypeOnceInit;
                    if (atomic_load_explicit((atomic_ullong *volatile)v170, memory_order_acquire) != -1)
                    {
                      __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v201;
                      __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v200;
                      v202 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))&__str;
                      std::__call_once(v170, &v202, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                    }
                  }
                  snprintf((char *)&__str, 0x80uLL, "%d", google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(FieldByNumber + 56)]);
                  char v205 = 0;
                  std::string::append((std::string *)__p, (const std::string::value_type *)&__str);
                  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&p_str);
                  if ((__p[23] & 0x80000000) == 0) {
                    goto LABEL_200;
                  }
                  v171 = *(void **)__p;
LABEL_206:
                  operator delete(v171);
                  if (v150 < 0) {
                    goto LABEL_201;
                  }
                  goto LABEL_202;
              }
            }
            google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)v5, a3, v141);
LABEL_200:
            if (v150 < 0) {
LABEL_201:
            }
              operator delete(v149);
LABEL_202:
            v137 = v185;
          }
          v138 += 2;
        }
        while (v184 != v138);
      }
      uint64_t v172 = v5[10];
      if (v172 != -1)
      {
        google::protobuf::internal::ExtensionSet::Swap((google::protobuf::Message *)((char *)v137 + v172), (google::protobuf::Message *)((char *)a3 + v172));
        v137 = v185;
      }
      uint64_t v173 = v5[9];
      uint64_t v174 = *(void *)((char *)v137 + v173);
      if (v174)
      {
        v175 = (char *)((v174 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        v175 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)((char *)v137 + v173));
        uint64_t v173 = v5[9];
      }
      v176 = (unint64_t *)((char *)a3 + v173);
      uint64_t v177 = *(void *)((char *)a3 + v173);
      if (v177) {
        this = (char *)((v177 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else {
        this = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v176);
      }
      uint64_t v178 = *(void *)v175;
      *(void *)v175 = *(void *)this;
      *(void *)this = v178;
      uint64_t v179 = *((void *)v175 + 1);
      *((void *)v175 + 1) = *((void *)this + 1);
      *((void *)this + 1) = v179;
      uint64_t v180 = *((void *)v175 + 2);
      *((void *)v175 + 2) = *((void *)this + 2);
      *((void *)this + 2) = v180;
    }
    else
    {
      uint64_t v31 = (google::protobuf::Message *)(*(uint64_t (**)(google::protobuf::Message *))(*(void *)a2 + 32))(a2);
      (*(void (**)(google::protobuf::Message *, google::protobuf::Message *))(*(void *)v31 + 120))(v31, a3);
      (*(void (**)(google::protobuf::Message *, google::protobuf::Message *))(*(void *)a3 + 112))(a3, a2);
      this = (char *)google::protobuf::Reflection::Swap((google::protobuf::Reflection *)v5, a2, v31);
      uint64_t v32 = *(void *)((char *)a2 + v5[9]);
      uint64_t v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFELL);
      if (v32)
      {
        if (!*v33) {
          return (char *)(*(uint64_t (**)(google::protobuf::Message *))(*(void *)v31 + 8))(v31);
        }
      }
      else if (!v33)
      {
        return (char *)(*(uint64_t (**)(google::protobuf::Message *))(*(void *)v31 + 8))(v31);
      }
    }
  }
  return this;
}

void sub_1891C748C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  if (*(char *)(v38 - 201) < 0) {
    operator delete(*(void **)(v38 - 224));
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::Reflection::ClearField(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = *(google::protobuf::_anonymous_namespace_ **)this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8) {
  if (*((unsigned char *)a3 + 67))
  }
  {
    int v9 = google::protobuf::internal::ExtensionSet::FindOrNull((google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17));
    if (v9)
    {
      google::protobuf::internal::ExtensionSet::Extension::Clear(v9);
    }
  }
  else
  {
    uint64_t v10 = (google::protobuf::Reflection *)((char *)this + 8);
    if (*((_DWORD *)a3 + 15) == 3)
    {
      std::string::size_type v11 = (std::once_flag::_State_type *)*((void *)a3 + 6);
      if (v11)
      {
        uint64_t v31 = a3;
        uint64_t v32 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
        {
          uint64_t v34 = &v32;
          uint64_t v35 = &v31;
          uint64_t v33 = &v34;
          std::__call_once(v11, &v33, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      switch(*((_DWORD *)a3 + 14))
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 0xD:
        case 0xE:
        case 0xF:
        case 0x10:
        case 0x11:
        case 0x12:
          *(_DWORD *)((char *)a2
                    + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), a3)) = 0;
          break;
        case 9:
        case 0xC:
          unsigned int FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), a3);
          google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2 + FieldOffset);
          break;
        case 0xA:
        case 0xB:
          uint64_t v18 = (char *)a2 + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v10, a3);
          if (IsMapFieldInApi) {
            (*(void (**)(char *))(*(void *)v18 + 96))(v18);
          }
          else {
            google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>>((uint64_t)v18);
          }
          break;
        default:
          return;
      }
    }
    else
    {
      uint64_t v12 = *((void *)a3 + 11);
      if (!v12 || *(_DWORD *)(v12 + 24) == 1 && *(unsigned char *)(**(void **)(v12 + 32) + 65))
      {
        if (google::protobuf::Reflection::HasBit(this, a2, a3))
        {
          unsigned int HasBitIndex = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)this + 8, (uint64_t)a3);
          if (HasBitIndex != -1) {
            *(_DWORD *)((char *)a2 + 4 * (HasBitIndex >> 5) + *((unsigned int *)this + 8)) &= ~(1 << HasBitIndex);
          }
          uint64_t v14 = (std::once_flag::_State_type *)*((void *)a3 + 6);
          if (v14)
          {
            uint64_t v31 = a3;
            uint64_t v32 = google::protobuf::FieldDescriptor::TypeOnceInit;
            if (atomic_load_explicit((atomic_ullong *volatile)v14, memory_order_acquire) != -1)
            {
              uint64_t v34 = &v32;
              uint64_t v35 = &v31;
              uint64_t v33 = &v34;
              std::__call_once(v14, &v33, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
          }
          switch(*((_DWORD *)a3 + 14))
          {
            case 1:
              uint64_t v20 = *((void *)a3 + 18);
              *(void *)((char *)a2
                        + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), a3)) = v20;
              return;
            case 2:
              int v21 = *((_DWORD *)a3 + 36);
              *(_DWORD *)((char *)a2
                        + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), a3)) = v21;
              return;
            case 3:
            case 4:
            case 6:
            case 0x10:
            case 0x12:
              uint64_t v19 = *((void *)a3 + 18);
              *(void *)((char *)a2
                        + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v10, a3)) = v19;
              return;
            case 5:
            case 7:
            case 0xD:
            case 0xF:
            case 0x11:
              int v15 = *((_DWORD *)a3 + 36);
              goto LABEL_38;
            case 8:
              char v22 = *((unsigned char *)a3 + 144);
              *((unsigned char *)a2 + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v10, a3)) = v22;
              return;
            case 9:
            case 0xC:
              unint64_t v23 = *(void *)google::protobuf::internal::ReflectionSchema::GetFieldDefault(*((void *)this + 1), *((void *)this + 2), (uint64_t)a3) & 0xFFFFFFFFFFFFFFFELL;
              uint64_t v24 = (char *)a2
                  + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), a3);
              uint64_t v25 = *(void *)((char *)a2 + *((unsigned int *)this + 9));
              uint64_t v26 = (char *)(v25 & 0xFFFFFFFFFFFFFFFELL);
              if (v25) {
                uint64_t v26 = *(char **)v26;
              }
              google::protobuf::internal::ArenaStringPtr::SetAllocated(v24, v23, 0, v26);
              return;
            case 0xA:
            case 0xB:
              if (google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)this + 8, (uint64_t)a3) != -1)
              {
                unsigned int v27 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), a3);
                (*(void (**)(void))(**(void **)((char *)a2 + v27) + 40))(*(void *)((char *)a2 + v27));
                return;
              }
              uint64_t v28 = *(void *)((char *)a2 + *((unsigned int *)this + 9));
              uint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFELL);
              if (v28)
              {
                if (*v29) {
                  goto LABEL_48;
                }
              }
              else if (v29)
              {
                goto LABEL_48;
              }
              uint64_t v30 = *(void *)((char *)a2
                              + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), a3));
              if (v30) {
                (*(void (**)(uint64_t))(*(void *)v30 + 8))(v30);
              }
LABEL_48:
              *(void *)((char *)a2
                        + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), a3)) = 0;
              break;
            case 0xE:
              int v15 = *(_DWORD *)(google::protobuf::FieldDescriptor::default_value_enum(a3) + 16);
LABEL_38:
              *(_DWORD *)((char *)a2
                        + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v10, a3)) = v15;
              return;
            default:
              return;
          }
        }
      }
      else if (*(_DWORD *)((char *)a2 {
                          + *((_DWORD *)this + 11)
      }
                          - 1431655764
                          * ((unint64_t)(v12 - *(void *)(*(void *)(v12 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
      {
        google::protobuf::Reflection::ClearOneof(this, a2, v12);
      }
    }
  }
}

uint64_t google::protobuf::Reflection::ReleaseMessage(uint64_t a1, uint64_t a2, std::once_flag::_State_type **a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = *(google::protobuf::_anonymous_namespace_ **)a1;
  if (a3[10] != (std::once_flag::_State_type *)v8) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  int v9 = a3[6];
  if (v9)
  {
    uint64_t v20 = (google::protobuf::Descriptor *)a3;
    int v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v23[0] = &v21;
      v23[1] = &v20;
      char v22 = v23;
      std::__call_once(v9, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((a3[7] & 0xFFFFFFFE) != 0xA) {
  if (*((unsigned char *)a3 + 67))
  }
  {
    uint64_t v10 = google::protobuf::internal::ExtensionSet::UnsafeArenaReleaseMessage((google::protobuf::internal::ExtensionSet *)(a2 + *(unsigned int *)(a1 + 40)), (int *)a3, *(void *)(a1 + 64));
    goto LABEL_25;
  }
  std::string::size_type v11 = a3[11];
  if (*((_DWORD *)a3 + 15) != 3)
  {
    if (v11)
    {
      if (*((_DWORD *)v11 + 6) != 1) {
        goto LABEL_21;
      }
      if (!*(unsigned char *)(*(void *)v11[4] + 65)) {
        goto LABEL_20;
      }
    }
    unsigned int HasBitIndex = google::protobuf::internal::ReflectionSchema::HasBitIndex(a1 + 8, (uint64_t)a3);
    if (HasBitIndex != -1) {
      *(_DWORD *)(a2 + *(unsigned int *)(a1 + 32) + 4 * (HasBitIndex >> 5)) &= ~(1 << HasBitIndex);
    }
  }
  if (!v11)
  {
LABEL_23:
    unsigned int FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 8), (const google::protobuf::FieldDescriptor *)a3);
    uint64_t v10 = *(void *)(a2 + FieldOffset);
    *(void *)(a2 + FieldOffset) = 0;
    goto LABEL_25;
  }
  if (*((_DWORD *)v11 + 6) != 1) {
    goto LABEL_21;
  }
LABEL_20:
  if (*(unsigned char *)(*(void *)v11[4] + 65)) {
    goto LABEL_23;
  }
LABEL_21:
  uint64_t v13 = *(_DWORD *)(a1 + 44) - 1431655764 * (((unint64_t)v11 - *(void *)(v11[2] + 48)) >> 4);
  if (*(_DWORD *)(a2 + v13) == *((_DWORD *)a3 + 17))
  {
    *(_DWORD *)(a2 + v13) = 0;
    goto LABEL_23;
  }
  uint64_t v10 = 0;
LABEL_25:
  uint64_t v15 = *(void *)(a2 + *(unsigned int *)(a1 + 36));
  uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFELL);
  if (v15) {
    uint64_t v16 = (void *)*v16;
  }
  if (v16) {
    BOOL v17 = v10 == 0;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17)
  {
    uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 24))(v10);
    (*(void (**)(uint64_t, uint64_t))(*(void *)v18 + 112))(v18, v10);
    return v18;
  }
  return v10;
}

void google::protobuf::Reflection::GetString(google::protobuf::_anonymous_namespace_ **this@<X0>, const google::protobuf::Message *a2@<X1>, const google::protobuf::FieldDescriptor *a3@<X2>, const char *a4@<X4>, std::string *a5@<X8>)
{
  int v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a4);
  uint64_t v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    char v22 = a3;
    unint64_t v23 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      v25[0] = &v23;
      v25[1] = &v22;
      uint64_t v24 = v25;
      std::__call_once(v10, &v24, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v11 = *((_DWORD *)a3 + 14);
  if (v11 != 9 && v11 != 12) {
  if (*((unsigned char *)a3 + 67))
  }
  {
    int v13 = *((_DWORD *)a3 + 17);
    uint64_t v14 = (long long *)*((void *)a3 + 18);
    uint64_t v15 = google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), v13);
    if (v15)
    {
      if ((*((unsigned char *)v15 + 10) & 1) == 0) {
        uint64_t v14 = *(long long **)v15;
      }
    }
    if ((*((char *)v14 + 23) & 0x80000000) == 0)
    {
      long long v16 = *v14;
      std::string::size_type v17 = *((void *)v14 + 2);
LABEL_27:
      a5->__r_.__value_.__r.__words[2] = v17;
      *(_OWORD *)&a5->__r_.__value_.__l.__data_ = v16;
      return;
    }
    uint64_t v20 = *(const std::string::value_type **)v14;
    std::string::size_type v21 = *((void *)v14 + 1);
  }
  else
  {
    uint64_t v18 = *((void *)a3 + 11);
    if (v18
      && (*(_DWORD *)(v18 + 24) != 1 || !*(unsigned char *)(**(void **)(v18 + 32) + 65))
      && *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v18 - *(void *)(*(void *)(v18 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17)
      || (unint64_t v19 = *(void *)((unsigned char *)a2
                          + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)) & 0xFFFFFFFFFFFFFFFELL) == 0)
    {
      unint64_t v19 = *((void *)a3 + 18);
    }
    if ((*(char *)(v19 + 23) & 0x80000000) == 0)
    {
      long long v16 = *(_OWORD *)v19;
      std::string::size_type v17 = *(void *)(v19 + 16);
      goto LABEL_27;
    }
    uint64_t v20 = *(const std::string::value_type **)v19;
    std::string::size_type v21 = *(void *)(v19 + 8);
  }
  std::string::__init_copy_ctor_external(a5, v20, v21);
}

uint64_t google::protobuf::Reflection::SetField<int>(unsigned int *a1, google::protobuf::Message *a2, google::protobuf::FieldDescriptor *a3, int *a4)
{
  uint64_t v8 = *((void *)a3 + 11);
  if (!v8 || *(_DWORD *)(v8 + 24) == 1 && *(unsigned char *)(**(void **)(v8 + 32) + 65))
  {
    int v9 = *a4;
    *(_DWORD *)((char *)a2
              + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3)) = v9;
    uint64_t result = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)(a1 + 2), (uint64_t)a3);
    if (result != -1) {
      *(_DWORD *)((char *)a2 + 4 * (result >> 5) + a1[8]) |= 1 << result;
    }
  }
  else
  {
    if (*(_DWORD *)((char *)a2
                   + a1[11]
                   - 1431655764 * ((unint64_t)(v8 - *(void *)(*(void *)(v8 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17))
      google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)a1, a2, v8);
    int v11 = *a4;
    uint64_t result = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3);
    *(_DWORD *)((char *)a2 + result) = v11;
    *(_DWORD *)((char *)a2
              + a1[11]
              - 1431655764
              * ((*((void *)a3 + 11) - *(void *)(*(void *)(*((void *)a3 + 11) + 16) + 48)) >> 4)) = *((_DWORD *)a3 + 17);
  }
  return result;
}

uint64_t google::protobuf::Reflection::SetField<long long>(unsigned int *a1, google::protobuf::Message *a2, google::protobuf::FieldDescriptor *a3, uint64_t *a4)
{
  uint64_t v8 = *((void *)a3 + 11);
  if (!v8 || *(_DWORD *)(v8 + 24) == 1 && *(unsigned char *)(**(void **)(v8 + 32) + 65))
  {
    uint64_t v9 = *a4;
    *(void *)((char *)a2
              + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3)) = v9;
    uint64_t result = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)(a1 + 2), (uint64_t)a3);
    if (result != -1) {
      *(_DWORD *)((char *)a2 + 4 * (result >> 5) + a1[8]) |= 1 << result;
    }
  }
  else
  {
    if (*(_DWORD *)((char *)a2
                   + a1[11]
                   - 1431655764 * ((unint64_t)(v8 - *(void *)(*(void *)(v8 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17))
      google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)a1, a2, v8);
    uint64_t v11 = *a4;
    uint64_t result = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3);
    *(void *)((char *)a2 + result) = v11;
    *(_DWORD *)((char *)a2
              + a1[11]
              - 1431655764
              * ((*((void *)a3 + 11) - *(void *)(*(void *)(*((void *)a3 + 11) + 16) + 48)) >> 4)) = *((_DWORD *)a3 + 17);
  }
  return result;
}

uint64_t google::protobuf::Reflection::SetField<float>(unsigned int *a1, google::protobuf::Message *a2, google::protobuf::FieldDescriptor *a3, int *a4)
{
  uint64_t v8 = *((void *)a3 + 11);
  if (!v8 || *(_DWORD *)(v8 + 24) == 1 && *(unsigned char *)(**(void **)(v8 + 32) + 65))
  {
    int v9 = *a4;
    *(_DWORD *)((char *)a2
              + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3)) = v9;
    uint64_t result = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)(a1 + 2), (uint64_t)a3);
    if (result != -1) {
      *(_DWORD *)((char *)a2 + 4 * (result >> 5) + a1[8]) |= 1 << result;
    }
  }
  else
  {
    if (*(_DWORD *)((char *)a2
                   + a1[11]
                   - 1431655764 * ((unint64_t)(v8 - *(void *)(*(void *)(v8 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17))
      google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)a1, a2, v8);
    int v11 = *a4;
    uint64_t result = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3);
    *(_DWORD *)((char *)a2 + result) = v11;
    *(_DWORD *)((char *)a2
              + a1[11]
              - 1431655764
              * ((*((void *)a3 + 11) - *(void *)(*(void *)(*((void *)a3 + 11) + 16) + 48)) >> 4)) = *((_DWORD *)a3 + 17);
  }
  return result;
}

uint64_t google::protobuf::Reflection::SetField<double>(unsigned int *a1, google::protobuf::Message *a2, google::protobuf::FieldDescriptor *a3, uint64_t *a4)
{
  uint64_t v8 = *((void *)a3 + 11);
  if (!v8 || *(_DWORD *)(v8 + 24) == 1 && *(unsigned char *)(**(void **)(v8 + 32) + 65))
  {
    uint64_t v9 = *a4;
    *(void *)((char *)a2
              + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3)) = v9;
    uint64_t result = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)(a1 + 2), (uint64_t)a3);
    if (result != -1) {
      *(_DWORD *)((char *)a2 + 4 * (result >> 5) + a1[8]) |= 1 << result;
    }
  }
  else
  {
    if (*(_DWORD *)((char *)a2
                   + a1[11]
                   - 1431655764 * ((unint64_t)(v8 - *(void *)(*(void *)(v8 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17))
      google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)a1, a2, v8);
    uint64_t v11 = *a4;
    uint64_t result = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3);
    *(void *)((char *)a2 + result) = v11;
    *(_DWORD *)((char *)a2
              + a1[11]
              - 1431655764
              * ((*((void *)a3 + 11) - *(void *)(*(void *)(*((void *)a3 + 11) + 16) + 48)) >> 4)) = *((_DWORD *)a3 + 17);
  }
  return result;
}

uint64_t google::protobuf::Reflection::SetField<BOOL>(unsigned int *a1, google::protobuf::Message *a2, google::protobuf::FieldDescriptor *a3, char *a4)
{
  uint64_t v8 = *((void *)a3 + 11);
  if (!v8 || *(_DWORD *)(v8 + 24) == 1 && *(unsigned char *)(**(void **)(v8 + 32) + 65))
  {
    char v9 = *a4;
    *((unsigned char *)a2
    + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3)) = v9;
    uint64_t result = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)(a1 + 2), (uint64_t)a3);
    if (result != -1) {
      *(_DWORD *)((char *)a2 + 4 * (result >> 5) + a1[8]) |= 1 << result;
    }
  }
  else
  {
    if (*(_DWORD *)((char *)a2
                   + a1[11]
                   - 1431655764 * ((unint64_t)(v8 - *(void *)(*(void *)(v8 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17))
      google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)a1, a2, v8);
    char v11 = *a4;
    uint64_t result = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3);
    *((unsigned char *)a2 + result) = v11;
    *(_DWORD *)((char *)a2
              + a1[11]
              - 1431655764
              * ((*((void *)a3 + 11) - *(void *)(*(void *)(*((void *)a3 + 11) + 16) + 48)) >> 4)) = *((_DWORD *)a3 + 17);
  }
  return result;
}

void google::protobuf::Reflection::SetAllocatedMessage(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, google::protobuf::Message *a3, const google::protobuf::FieldDescriptor *a4, const char *a5)
{
  if (a3)
  {
    uint64_t v9 = *((void *)a3 + 1);
    uint64_t v10 = (unint64_t *)(v9 & 0xFFFFFFFFFFFFFFFELL);
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if (v9) {
      unint64_t v11 = *v10;
    }
    uint64_t v12 = *((void *)a2 + 1);
    int v13 = (char *)(v12 & 0xFFFFFFFFFFFFFFFELL);
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFELL;
    if (v12) {
      unint64_t v14 = *(void *)v13;
    }
    if (v11 != v14)
    {
      if (v9)
      {
        if (*v10) {
          goto LABEL_9;
        }
      }
      else if (v10)
      {
LABEL_9:
        uint64_t v15 = *(void (**)(void))(*(void *)google::protobuf::Reflection::MutableMessage(this, a2, a4, 0, a5) + 112);
        v15();
        return;
      }
      if (v12)
      {
        int v13 = *(char **)v13;
        if (!v13) {
          goto LABEL_9;
        }
      }
      else if (!v13)
      {
        goto LABEL_9;
      }
      google::protobuf::Arena::Own<google::protobuf::Message>(v13, a3);
    }
  }

  google::protobuf::Reflection::UnsafeArenaSetAllocatedMessage(this, a2, a3, a4, a5);
}

void google::protobuf::Reflection::SetString(uint64_t a1, google::protobuf::Message *a2, google::protobuf::FieldDescriptor *a3, uint64_t *a4, const char *a5)
{
  v37[2] = *MEMORY[0x1E4F143B8];
  uint64_t v9 = *(google::protobuf::_anonymous_namespace_ **)a1;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  uint64_t v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    uint64_t v32 = a3;
    uint64_t v33 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      uint64_t v35 = &v33;
      int v36 = &v32;
      uint64_t v34 = &v35;
      std::__call_once(v10, &v34, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v11 = *((_DWORD *)a3 + 14);
  if (v11 != 9 && v11 != 12) {
  if (*((unsigned char *)a3 + 67))
  }
  {
    uint64_t v13 = *(unsigned int *)(a1 + 40);
    int v14 = *((_DWORD *)a3 + 17);
    uint64_t v15 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v15)
    {
      uint64_t v32 = a3;
      uint64_t v33 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v15, memory_order_acquire) != -1)
      {
        uint64_t v35 = &v33;
        int v36 = &v32;
        uint64_t v34 = &v35;
        std::__call_once(v15, &v34, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    long long v16 = (google::protobuf::Message *)((char *)a2 + v13);
    char v17 = *((unsigned char *)a3 + 56);
    uint64_t v18 = *a4;
    v37[0] = a4[1];
    *(void *)((char *)v37 + 7) = *(uint64_t *)((char *)a4 + 15);
    char v19 = *((unsigned char *)a4 + 23);
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
    uint64_t v20 = google::protobuf::internal::ExtensionSet::MutableString(v16, v14, v17, a3);
    std::string::size_type v21 = v20;
    if (v20[23] < 0) {
      operator delete(*(void **)v20);
    }
    uint64_t v22 = v37[0];
    *(void *)std::string::size_type v21 = v18;
    *((void *)v21 + 1) = v22;
    *(void *)(v21 + 15) = *(void *)((char *)v37 + 7);
    v21[23] = v19;
    return;
  }
  uint64_t v23 = *((void *)a3 + 11);
  if (!v23) {
    goto LABEL_23;
  }
  int v24 = *(_DWORD *)(v23 + 24);
  if (v24 != 1)
  {
    uint64_t v25 = 0;
    goto LABEL_30;
  }
  if (!*(unsigned char *)(**(void **)(v23 + 32) + 65))
  {
    uint64_t v25 = 0;
  }
  else
  {
LABEL_23:
    uint64_t v25 = (char *)(*(void *)google::protobuf::internal::ReflectionSchema::GetFieldDefault(*(void *)(a1 + 8), *(void *)(a1 + 16), (uint64_t)a3) & 0xFFFFFFFFFFFFFFFELL);
    uint64_t v23 = *((void *)a3 + 11);
    if (!v23) {
      goto LABEL_41;
    }
    int v24 = *(_DWORD *)(v23 + 24);
    if (v24 != 1)
    {
LABEL_30:
      if (*(_DWORD *)((char *)a2
                     + *(_DWORD *)(a1 + 44)
                     - 1431655764
                     * ((unint64_t)(v23 - *(void *)(*(void *)(v23 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17))
      {
        google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)a1, a2, v23);
        uint64_t v26 = *((void *)a3 + 11);
        if (!v26 || *(_DWORD *)(v26 + 24) == 1 && *(unsigned char *)(**(void **)(v26 + 32) + 65))
        {
          unsigned int HasBitIndex = google::protobuf::internal::ReflectionSchema::HasBitIndex(a1 + 8, (uint64_t)a3);
          if (HasBitIndex != -1) {
            *(_DWORD *)((char *)a2 + 4 * (HasBitIndex >> 5) + *(unsigned int *)(a1 + 32)) |= 1 << HasBitIndex;
          }
        }
        else
        {
          *(_DWORD *)((char *)a2
                    + *(_DWORD *)(a1 + 44)
                    - 1431655764
                    * ((unint64_t)(v26 - *(void *)(*(void *)(v26 + 16) + 48)) >> 4)) = *((_DWORD *)a3 + 17);
        }
        *(void *)((char *)a2
                  + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 8), a3)) = v25;
        uint64_t v23 = *((void *)a3 + 11);
        if (!v23) {
          goto LABEL_41;
        }
        int v24 = *(_DWORD *)(v23 + 24);
      }
      if (v24 != 1) {
        goto LABEL_43;
      }
      goto LABEL_40;
    }
  }
  if (!*(unsigned char *)(**(void **)(v23 + 32) + 65))
  {
    int v24 = 1;
    goto LABEL_30;
  }
LABEL_40:
  if (*(unsigned char *)(**(void **)(v23 + 32) + 65))
  {
LABEL_41:
    unsigned int v28 = google::protobuf::internal::ReflectionSchema::HasBitIndex(a1 + 8, (uint64_t)a3);
    if (v28 != -1) {
      *(_DWORD *)((char *)a2 + 4 * (v28 >> 5) + *(unsigned int *)(a1 + 32)) |= 1 << v28;
    }
    goto LABEL_44;
  }
LABEL_43:
  *(_DWORD *)((char *)a2
            + *(_DWORD *)(a1 + 44)
            - 1431655764 * ((unint64_t)(v23 - *(void *)(*(void *)(v23 + 16) + 48)) >> 4)) = *((_DWORD *)a3 + 17);
LABEL_44:
  uint64_t v29 = (char **)((char *)a2
                + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 8), a3));
  uint64_t v30 = *(void *)((char *)a2 + *(unsigned int *)(a1 + 36));
  uint64_t v31 = (google::protobuf::internal::ArenaImpl *)(v30 & 0xFFFFFFFFFFFFFFFELL);
  if (v30) {
    uint64_t v31 = *(google::protobuf::internal::ArenaImpl **)v31;
  }
  google::protobuf::internal::ArenaStringPtr::Set(v29, v25, (long long *)a4, v31);
}

void sub_1891C8A44(_Unwind_Exception *exception_object)
{
  if (v2 < 0) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::Reflection::ClearOneof(google::protobuf::Reflection *this, google::protobuf::Message *a2, uint64_t a3)
{
  if (*(_DWORD *)(a3 + 24) != 1
    || (uint64_t v6 = **(const google::protobuf::FieldDescriptor ***)(a3 + 32), !*((unsigned char *)v6 + 65)))
  {
    int v7 = *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764 * ((unint64_t)(a3 - *(void *)(*(void *)(a3 + 16) + 48)) >> 4));
    if (!v7) {
      return;
    }
    uint64_t FieldByNumber = google::protobuf::Descriptor::FindFieldByNumber(*(google::protobuf::Descriptor **)this, v7);
    uint64_t v9 = FieldByNumber;
    uint64_t v10 = *(void *)((char *)a2 + *((unsigned int *)this + 9));
    int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFELL);
    if (v10)
    {
      if (*v11) {
        goto LABEL_9;
      }
    }
    else if (v11)
    {
LABEL_9:
      *(_DWORD *)((char *)a2
                + *((_DWORD *)this + 11)
                - 1431655764 * ((unint64_t)(a3 - *(void *)(*(void *)(a3 + 16) + 48)) >> 4)) = 0;
      return;
    }
    uint64_t v12 = *(std::once_flag::_State_type **)(FieldByNumber + 48);
    if (v12)
    {
      uint64_t v20 = v9;
      std::string::size_type v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
      {
        v23[0] = &v21;
        v23[1] = &v20;
        uint64_t v22 = v23;
        std::__call_once(v12, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    int v13 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v9 + 56)];
    if (v13 == 10)
    {
      uint64_t v16 = *(void *)((char *)a2
                      + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), (const google::protobuf::FieldDescriptor *)v9));
      if (v16) {
        (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
      }
    }
    else if (v13 == 9)
    {
      uint64_t v14 = *(void *)(v9 + 88);
      if (!v14 || *(_DWORD *)(v14 + 24) == 1 && *(unsigned char *)(**(void **)(v14 + 32) + 65))
      {
        unsigned int HasBitIndex = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)this + 8, v9);
        if (HasBitIndex != -1) {
          *(_DWORD *)((char *)a2 + 4 * (HasBitIndex >> 5) + *((unsigned int *)this + 8)) |= 1 << HasBitIndex;
        }
      }
      else
      {
        *(_DWORD *)((char *)a2
                  + *((_DWORD *)this + 11)
                  - 1431655764
                  * ((unint64_t)(v14 - *(void *)(*(void *)(v14 + 16) + 48)) >> 4)) = *(_DWORD *)(v9 + 68);
      }
      char v17 = (uint64_t *)((char *)a2
                      + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), (const google::protobuf::FieldDescriptor *)v9));
      uint64_t v18 = *(void *)((char *)a2 + *((unsigned int *)this + 9));
      char v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFELL);
      if (v18) {
        char v19 = (void *)*v19;
      }
      google::protobuf::internal::ArenaStringPtr::Destroy(v17, 0, (uint64_t)v19);
    }
    goto LABEL_9;
  }

  google::protobuf::Reflection::ClearField(this, a2, v6);
}

_DWORD *google::protobuf::Reflection::HasField(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  if (*((unsigned char *)a3 + 67))
  {
    uint64_t result = google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17));
    if (!result) {
      return result;
    }
    return (_DWORD *)((*((unsigned char *)result + 10) & 1) == 0);
  }
  uint64_t v11 = *((void *)a3 + 11);
  if (v11 && (*(_DWORD *)(v11 + 24) != 1 || !*(unsigned char *)(**(void **)(v11 + 32) + 65))) {
    return (_DWORD *)(*(_DWORD *)((char *)a2
  }
                                + *((_DWORD *)this + 11)
                                - 1431655764
                                * ((unint64_t)(v11 - *(void *)(*(void *)(v11 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17));

  return (_DWORD *)google::protobuf::Reflection::HasBit((google::protobuf::Reflection *)this, a2, a3);
}

void google::protobuf::anonymous namespace'::ReportReflectionUsageError(google::protobuf::_anonymous_namespace_ *this, const google::protobuf::Descriptor *a2, const std::string::value_type *a3, const char *a4, const char *a5)
{
  int v17 = 3;
  uint64_t v18 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_message_reflection.cc";
  int v19 = 111;
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "Protocol Buffer reflection usage error:\n  Method      : google::protobuf::Reflection::");
  std::string::append(&__p, a3);
  std::string::append(&__p, "\n  Message type: ");
  uint64_t v9 = *((void *)this + 1);
  int v10 = *(char *)(v9 + 23);
  if (v10 >= 0) {
    uint64_t v11 = (const std::string::value_type *)*((void *)this + 1);
  }
  else {
    uint64_t v11 = *(const std::string::value_type **)v9;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = *(unsigned __int8 *)(v9 + 23);
  }
  else {
    std::string::size_type v12 = *(void *)(v9 + 8);
  }
  std::string::append(&__p, v11, v12);
  std::string::append(&__p, "\n  Field       : ");
  uint64_t v13 = *((void *)a2 + 1);
  int v14 = *(char *)(v13 + 23);
  if (v14 >= 0) {
    uint64_t v15 = (const std::string::value_type *)*((void *)a2 + 1);
  }
  else {
    uint64_t v15 = *(const std::string::value_type **)v13;
  }
  if (v14 >= 0) {
    std::string::size_type v16 = *(unsigned __int8 *)(v13 + 23);
  }
  else {
    std::string::size_type v16 = *(void *)(v13 + 8);
  }
  std::string::append(&__p, v15, v16);
  std::string::append(&__p, "\n  Problem     : ");
  std::string::append(&__p, a4);
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v17);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1891C8F0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::Reflection::HasBit(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  uint64_t v6 = (google::protobuf::Reflection *)((char *)this + 8);
  unsigned int HasBitIndex = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)this + 8, (uint64_t)a3);
  if (HasBitIndex != -1) {
    return (*(_DWORD *)((char *)a2 + 4 * (HasBitIndex >> 5) + *((unsigned int *)this + 8)) >> HasBitIndex) & 1;
  }
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    std::string::size_type v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    uint64_t v20 = a3;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      std::string::size_type v16 = &v21;
      int v17 = &v20;
      uint64_t v22 = &v16;
      std::__call_once(v9, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v10 = *((_DWORD *)a3 + 14);
  if ((v10 & 0xFFFFFFFE) == 0xA)
  {
    if (*(const google::protobuf::Message **)v6 == a2) {
      return 0;
    }
LABEL_15:
    uint64_t v13 = *(void *)((char *)a2 + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v6, a3));
LABEL_16:
    BOOL v14 = v13 == 0;
  }
  else
  {
    uint64_t v11 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v11)
    {
      std::string::size_type v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
      uint64_t v20 = a3;
      if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
      {
        std::string::size_type v16 = &v21;
        int v17 = &v20;
        uint64_t v22 = &v16;
        std::__call_once(v11, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      int v10 = *((_DWORD *)a3 + 14);
    }
    switch(v10)
    {
      case 1:
        BOOL v14 = *(double *)((char *)a2 + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v6, a3)) == 0.0;
        return !v14;
      case 2:
        BOOL v14 = *(float *)((char *)a2 + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v6, a3)) == 0.0;
        return !v14;
      case 3:
      case 4:
      case 6:
        goto LABEL_15;
      case 5:
      case 7:
        int v12 = *(_DWORD *)((char *)a2 + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v6, a3));
        break;
      case 8:
        int v12 = *((unsigned __int8 *)a2
              + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v6, a3));
        break;
      case 9:
        unint64_t v15 = *(void *)((unsigned char *)a2
                        + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v6, a3)) & 0xFFFFFFFFFFFFFFFELL;
        if (*(char *)(v15 + 23) < 0) {
          uint64_t v13 = *(void *)(v15 + 8);
        }
        else {
          uint64_t v13 = *(unsigned __int8 *)(v15 + 23);
        }
        goto LABEL_16;
      default:
        LODWORD(v16) = 3;
        int v17 = (const google::protobuf::FieldDescriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/"
                                                          "src/google/protobuf/generated_message_reflection.cc";
        int v18 = 2059;
        memset(&__p, 0, sizeof(__p));
        std::string::append(&__p, "Reached impossible case in HasBit().");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v16);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        return 0;
    }
    BOOL v14 = v12 == 0;
  }
  return !v14;
}

void sub_1891C9194(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::Reflection::FieldSize(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  if (*((unsigned char *)a3 + 67))
  {
    uint64_t result = (uint64_t)google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17));
    if (result)
    {
      return google::protobuf::internal::ExtensionSet::Extension::GetSize((google::protobuf::internal::ExtensionSet::Extension *)result);
    }
  }
  else
  {
    int v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v10)
    {
      int v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
      int v17 = a3;
      if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
      {
        uint64_t v13 = &v18;
        BOOL v14 = &v17;
        int v19 = &v13;
        std::__call_once(v10, &v19, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    switch(*((_DWORD *)a3 + 14))
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
        uint64_t result = *(unsigned int *)((char *)a2
                                 + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
        break;
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
        int v12 = (atomic_uint *)((char *)a2
                            + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
        if (IsMapFieldInApi)
        {
          if (atomic_load_explicit(v12 + 22, memory_order_acquire))
          {
            google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(v12);
            uint64_t result = *(unsigned int *)(*((void *)v12 + 2) + 8);
          }
          else
          {
            uint64_t result = (*(uint64_t (**)(atomic_uint *))(*(void *)v12 + 88))(v12);
          }
        }
        else
        {
          uint64_t result = v12[2];
        }
        break;
      default:
        LODWORD(v13) = 3;
        BOOL v14 = (const google::protobuf::FieldDescriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/"
                                                          "src/google/protobuf/generated_message_reflection.cc";
        int v15 = 783;
        memset(&__p, 0, sizeof(__p));
        std::string::append(&__p, "Can't get here.");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v13);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        uint64_t result = 0;
        break;
    }
  }
  return result;
}

void sub_1891C940C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::ReflectionSchema::HasBitIndex(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 24) == -1) {
    return 0xFFFFFFFFLL;
  }
  if (*(unsigned char *)(a2 + 67))
  {
    uint64_t v2 = *(void *)(a2 + 96);
    if (v2) {
      uint64_t v3 = (void *)(v2 + 80);
    }
    else {
      uint64_t v3 = (void *)(*(void *)(a2 + 40) + 128);
    }
  }
  else
  {
    uint64_t v3 = (void *)(*(void *)(a2 + 80) + 40);
  }
  return *(unsigned int *)(*(void *)(a1 + 16) + 4 * (int)(678152731 * ((unint64_t)(a2 - *v3) >> 3)));
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>>(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = result;
    uint64_t v3 = (uint64_t *)(*(void *)(result + 16) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 40))(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 8) = 0;
  }
  return result;
}

void google::protobuf::anonymous namespace'::ReportReflectionUsageTypeError(uint64_t a1, uint64_t a2, const std::string::value_type *a3, int a4)
{
  int v17 = 3;
  int v18 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_message_reflection.cc";
  int v19 = 133;
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "Protocol Buffer reflection usage error:\n  Method      : google::protobuf::Reflection::");
  std::string::append(&__p, a3);
  std::string::append(&__p, "\n  Message type: ");
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = *(char *)(v8 + 23);
  if (v9 >= 0) {
    int v10 = *(const std::string::value_type **)(a1 + 8);
  }
  else {
    int v10 = *(const std::string::value_type **)v8;
  }
  if (v9 >= 0) {
    std::string::size_type v11 = *(unsigned __int8 *)(v8 + 23);
  }
  else {
    std::string::size_type v11 = *(void *)(v8 + 8);
  }
  std::string::append(&__p, v10, v11);
  std::string::append(&__p, "\n  Field       : ");
  uint64_t v12 = *(void *)(a2 + 8);
  int v13 = *(char *)(v12 + 23);
  if (v13 >= 0) {
    BOOL v14 = *(const std::string::value_type **)(a2 + 8);
  }
  else {
    BOOL v14 = *(const std::string::value_type **)v12;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = *(unsigned __int8 *)(v12 + 23);
  }
  else {
    std::string::size_type v15 = *(void *)(v12 + 8);
  }
  std::string::append(&__p, v14, v15);
  std::string::append(&__p, "\n  Problem     : Field is not the right type for this message:\n    Expected  : ");
  std::string::append(&__p, "\n    Field type: ");
  std::string::size_type v16 = *(std::once_flag::_State_type **)(a2 + 48);
  if (v16)
  {
    uint64_t v21 = a2;
    uint64_t v22 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v16, memory_order_acquire) != -1)
    {
      v24[0] = &v22;
      v24[1] = &v21;
      uint64_t v23 = v24;
      std::__call_once(v16, &v23, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v17);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1891C96D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::Reflection::ListFieldsMayFailOnStripped(uint64_t result, const google::protobuf::Message *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8) = *(void *)a4;
  if (*(const google::protobuf::Message **)(result + 8) != a2)
  {
    uint64_t v6 = result;
    uint64_t v7 = *(unsigned int *)(result + 32);
    uint64_t v8 = *(void *)(result + 24);
    std::vector<google::protobuf::FieldDescriptor const*>::reserve((void **)a4, *(int *)(*(void *)result + 104));
    if ((*(_DWORD *)(v6 + 72) & 0x80000000) == 0)
    {
      uint64_t v11 = 0;
      do
      {
        uint64_t v12 = *(void *)(*(void *)v6 + 40);
        int v13 = (const google::protobuf::FieldDescriptor *)(v12 + 152 * v11);
        if (*((_DWORD *)v13 + 15) == 3)
        {
          if ((int)google::protobuf::Reflection::FieldSize((google::protobuf::_anonymous_namespace_ **)v6, a2, (const google::protobuf::FieldDescriptor *)(v12 + 152 * v11), v9, v10) >= 1)
          {
            std::string::size_type v15 = *(const google::protobuf::FieldDescriptor ***)(a4 + 8);
            unint64_t v14 = *(void *)(a4 + 16);
            if ((unint64_t)v15 < v14) {
              goto LABEL_42;
            }
            uint64_t v16 = ((uint64_t)v15 - *(void *)a4) >> 3;
            if ((unint64_t)(v16 + 1) >> 61) {
              goto LABEL_80;
            }
            uint64_t v17 = v14 - *(void *)a4;
            uint64_t v18 = v17 >> 2;
            if (v17 >> 2 <= (unint64_t)(v16 + 1)) {
              uint64_t v18 = v16 + 1;
            }
            if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v19 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v19 = v18;
            }
            if (v19) {
              uint64_t v20 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(a4 + 16, v19);
            }
            else {
              uint64_t v20 = 0;
            }
            uint64_t v33 = &v20[8 * v16];
            *(void *)uint64_t v33 = v13;
            uint64_t v32 = v33 + 8;
            uint64_t v35 = *(char **)a4;
            uint64_t v34 = *(char **)(a4 + 8);
            if (v34 != *(char **)a4)
            {
              do
              {
                uint64_t v36 = *((void *)v34 - 1);
                v34 -= 8;
                *((void *)v33 - 1) = v36;
                v33 -= 8;
              }
              while (v34 != v35);
              goto LABEL_66;
            }
            goto LABEL_67;
          }
        }
        else
        {
          uint64_t v21 = *(void *)(v12 + 152 * v11 + 88);
          if (!v21 || *(_DWORD *)(v21 + 24) == 1 && *(unsigned char *)(**(void **)(v21 + 32) + 65))
          {
            if (v7 == -1 || (unint64_t v22 = *(unsigned int *)(v8 + 4 * v11), v22 == -1))
            {
              if (google::protobuf::Reflection::HasBit((google::protobuf::Reflection *)v6, a2, v13))
              {
                std::string::size_type v15 = *(const google::protobuf::FieldDescriptor ***)(a4 + 8);
                unint64_t v31 = *(void *)(a4 + 16);
                if ((unint64_t)v15 < v31)
                {
LABEL_42:
                  const std::string::value_type *v15 = v13;
                  uint64_t v32 = v15 + 1;
LABEL_69:
                  *(void *)(a4 + 8) = v32;
                  continue;
                }
                uint64_t v37 = ((uint64_t)v15 - *(void *)a4) >> 3;
                if ((unint64_t)(v37 + 1) >> 61) {
LABEL_80:
                }
                  std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
                uint64_t v38 = v31 - *(void *)a4;
                uint64_t v39 = v38 >> 2;
                if (v38 >> 2 <= (unint64_t)(v37 + 1)) {
                  uint64_t v39 = v37 + 1;
                }
                if ((unint64_t)v38 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v19 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v19 = v39;
                }
                if (v19) {
                  uint64_t v20 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(a4 + 16, v19);
                }
                else {
                  uint64_t v20 = 0;
                }
                uint64_t v33 = &v20[8 * v37];
                *(void *)uint64_t v33 = v13;
                uint64_t v32 = v33 + 8;
                int v42 = *(char **)a4;
                uint64_t v34 = *(char **)(a4 + 8);
                if (v34 != *(char **)a4)
                {
                  do
                  {
                    uint64_t v43 = *((void *)v34 - 1);
                    v34 -= 8;
                    *((void *)v33 - 1) = v43;
                    v33 -= 8;
                  }
                  while (v34 != v42);
                  goto LABEL_66;
                }
                goto LABEL_67;
              }
            }
            else if ((*(_DWORD *)((char *)a2 + v7 + ((v22 >> 3) & 0x1FFFFFFC)) >> v22))
            {
              std::string::size_type v15 = *(const google::protobuf::FieldDescriptor ***)(a4 + 8);
              unint64_t v23 = *(void *)(a4 + 16);
              if ((unint64_t)v15 < v23) {
                goto LABEL_42;
              }
              uint64_t v24 = ((uint64_t)v15 - *(void *)a4) >> 3;
              if ((unint64_t)(v24 + 1) >> 61) {
                goto LABEL_80;
              }
              uint64_t v25 = v23 - *(void *)a4;
              uint64_t v26 = v25 >> 2;
              if (v25 >> 2 <= (unint64_t)(v24 + 1)) {
                uint64_t v26 = v24 + 1;
              }
              if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v19 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v19 = v26;
              }
              if (v19) {
                uint64_t v20 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(a4 + 16, v19);
              }
              else {
                uint64_t v20 = 0;
              }
              uint64_t v33 = &v20[8 * v24];
              *(void *)uint64_t v33 = v13;
              uint64_t v32 = v33 + 8;
              uint64_t v44 = *(char **)a4;
              uint64_t v34 = *(char **)(a4 + 8);
              if (v34 != *(char **)a4)
              {
                do
                {
                  uint64_t v45 = *((void *)v34 - 1);
                  v34 -= 8;
                  *((void *)v33 - 1) = v45;
                  v33 -= 8;
                }
                while (v34 != v44);
                goto LABEL_66;
              }
              goto LABEL_67;
            }
          }
          else if (*(_DWORD *)((char *)a2 {
                              + 4
          }
                              * (int)(-1431655765
                                    * ((unint64_t)(v21 - *(void *)(*(void *)(v21 + 16) + 48)) >> 4))
                              + *(unsigned int *)(v6 + 44)) == *(_DWORD *)(v12 + 152 * v11 + 68))
          {
            std::string::size_type v15 = *(const google::protobuf::FieldDescriptor ***)(a4 + 8);
            unint64_t v27 = *(void *)(a4 + 16);
            if ((unint64_t)v15 < v27) {
              goto LABEL_42;
            }
            uint64_t v28 = ((uint64_t)v15 - *(void *)a4) >> 3;
            if ((unint64_t)(v28 + 1) >> 61) {
              goto LABEL_80;
            }
            uint64_t v29 = v27 - *(void *)a4;
            uint64_t v30 = v29 >> 2;
            if (v29 >> 2 <= (unint64_t)(v28 + 1)) {
              uint64_t v30 = v28 + 1;
            }
            if ((unint64_t)v29 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v19 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v19 = v30;
            }
            if (v19) {
              uint64_t v20 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(a4 + 16, v19);
            }
            else {
              uint64_t v20 = 0;
            }
            uint64_t v33 = &v20[8 * v28];
            *(void *)uint64_t v33 = v13;
            uint64_t v32 = v33 + 8;
            uint64_t v40 = *(char **)a4;
            uint64_t v34 = *(char **)(a4 + 8);
            if (v34 != *(char **)a4)
            {
              do
              {
                uint64_t v41 = *((void *)v34 - 1);
                v34 -= 8;
                *((void *)v33 - 1) = v41;
                v33 -= 8;
              }
              while (v34 != v40);
LABEL_66:
              uint64_t v34 = *(char **)a4;
            }
LABEL_67:
            *(void *)a4 = v33;
            *(void *)(a4 + 8) = v32;
            *(void *)(a4 + 16) = &v20[8 * v19];
            if (v34) {
              operator delete(v34);
            }
            goto LABEL_69;
          }
        }
      }
      while (v11++ < *(int *)(v6 + 72));
    }
    uint64_t v47 = *(unsigned int *)(v6 + 40);
    if (v47 != -1) {
      google::protobuf::internal::ExtensionSet::AppendToList((uint64_t)a2 + v47, *(void *)v6, *(void *)(v6 + 56), a4);
    }
    uint64_t v48 = *(void *)a4;
    uint64_t v49 = *(uint64_t **)(a4 + 8);
    unint64_t v50 = 126 - 2 * __clz(((uint64_t)v49 - *(void *)a4) >> 3);
    if (v49 == *(uint64_t **)a4) {
      uint64_t v51 = 0;
    }
    else {
      uint64_t v51 = v50;
    }
  }
  return result;
}

uint64_t google::protobuf::Reflection::GetInt32(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    std::string::size_type v15 = a3;
    uint64_t v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v18[0] = &v16;
      v18[1] = &v15;
      uint64_t v17 = v18;
      std::__call_once(v9, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (((0x28020uLL >> *((_DWORD *)a3 + 14)) & 1) == 0) {
  if (*((unsigned char *)a3 + 67))
  }
  {
    int v10 = *((_DWORD *)a3 + 17);
    uint64_t v11 = *((unsigned int *)a3 + 36);
    uint64_t v12 = google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), v10);
    if (v12 && (*((unsigned char *)v12 + 10) & 1) == 0) {
      return *v12;
    }
  }
  else
  {
    uint64_t v13 = *((void *)a3 + 11);
    if (!v13
      || *(_DWORD *)(v13 + 24) == 1 && *(unsigned char *)(**(void **)(v13 + 32) + 65)
      || *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v13 - *(void *)(*(void *)(v13 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    {
      return *(unsigned int *)((char *)a2
                             + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    }
    else
    {
      return *((unsigned int *)a3 + 36);
    }
  }
  return v11;
}

uint64_t **google::protobuf::Reflection::SetInt32(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  int v17 = a4;
  uint64_t v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v18 = a3;
    unint64_t v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      uint64_t v21 = &v19;
      unint64_t v22 = &v18;
      uint64_t v20 = &v21;
      std::__call_once(v9, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (((0x28020uLL >> *((_DWORD *)a3 + 14)) & 1) == 0) {
  if (!*((unsigned char *)a3 + 67))
  }
    return (uint64_t **)google::protobuf::Reflection::SetField<int>((unsigned int *)this, a2, a3, &v17);
  int v10 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  int v11 = *((_DWORD *)a3 + 17);
  uint64_t v12 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v12)
  {
    uint64_t v18 = a3;
    unint64_t v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
    {
      uint64_t v21 = &v19;
      unint64_t v22 = &v18;
      uint64_t v20 = &v21;
      std::__call_once(v12, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v13 = *((_DWORD *)a3 + 14);
  int v14 = v17;
  uint64_t result = google::protobuf::internal::ExtensionSet::Insert(v10, v11);
  result[2] = (uint64_t *)a3;
  if (v16)
  {
    *((unsigned char *)result + 8) = v13;
    *((unsigned char *)result + 9) = 0;
  }
  *((unsigned char *)result + 10) &= 0xF0u;
  *(_DWORD *)uint64_t result = v14;
  return result;
}

uint64_t google::protobuf::Reflection::GetRepeatedInt32(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  uint64_t v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  int v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    uint64_t v12 = a3;
    int v13 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      v15[0] = &v13;
      v15[1] = &v12;
      int v14 = v15;
      std::__call_once(v10, &v14, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (((0x28020uLL >> *((_DWORD *)a3 + 14)) & 1) == 0) {
  if (*((unsigned char *)a3 + 67))
  }
    return google::protobuf::internal::ExtensionSet::GetRepeatedInt32((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  else {
    return *(unsigned int *)(*(void *)((char *)a2
  }
                                       + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)+ 8)+ 4 * a4);
}

void google::protobuf::Reflection::AddInt32(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  uint64_t v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  int v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    int v17 = a3;
    uint64_t v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      uint64_t v20 = &v18;
      uint64_t v21 = &v17;
      unint64_t v19 = &v20;
      std::__call_once(v10, &v19, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (((0x28020uLL >> *((_DWORD *)a3 + 14)) & 1) == 0) {
  if (*((unsigned char *)a3 + 67))
  }
  {
    int v11 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v12 = *((_DWORD *)a3 + 17);
    int v13 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v13)
    {
      int v17 = a3;
      uint64_t v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
      {
        uint64_t v20 = &v18;
        uint64_t v21 = &v17;
        unint64_t v19 = &v20;
        std::__call_once(v13, &v19, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    google::protobuf::internal::ExtensionSet::AddInt32(v11, v12, *((unsigned char *)a3 + 56), *(unsigned char *)(*((void *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    int v14 = (unsigned int *)((char *)a2
                         + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    uint64_t v15 = *v14;
    if (v15 == v14[1])
    {
      unsigned int v16 = v15 + 1;
      google::protobuf::RepeatedField<int>::Reserve(v14, v15 + 1);
      *(_DWORD *)(*((void *)v14 + 1) + 4 * v15) = a4;
    }
    else
    {
      *(_DWORD *)(*((void *)v14 + 1) + 4 * v15) = a4;
      unsigned int v16 = v15 + 1;
    }
    unsigned int *v14 = v16;
  }
}

uint64_t google::protobuf::Reflection::GetInt64(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v15 = a3;
    unsigned int v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v18[0] = &v16;
      v18[1] = &v15;
      int v17 = v18;
      std::__call_once(v9, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (((0x50008uLL >> *((_DWORD *)a3 + 14)) & 1) == 0) {
  if (!*((unsigned char *)a3 + 67))
  }
  {
    uint64_t v13 = *((void *)a3 + 11);
    if (!v13
      || *(_DWORD *)(v13 + 24) == 1 && *(unsigned char *)(**(void **)(v13 + 32) + 65)
      || *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v13 - *(void *)(*(void *)(v13 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    {
      int v12 = (char *)a2
          + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3);
    }
    else
    {
      int v12 = (char *)a3 + 144;
    }
    return *(void *)v12;
  }
  int v10 = *((_DWORD *)a3 + 17);
  uint64_t v11 = *((void *)a3 + 18);
  int v12 = (char *)google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), v10);
  if (v12 && (v12[10] & 1) == 0) {
    return *(void *)v12;
  }
  return v11;
}

uint64_t **google::protobuf::Reflection::SetInt64(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v17 = a4;
  uint64_t v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v18 = a3;
    unint64_t v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      uint64_t v21 = &v19;
      unint64_t v22 = &v18;
      uint64_t v20 = &v21;
      std::__call_once(v9, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (((0x50008uLL >> *((_DWORD *)a3 + 14)) & 1) == 0) {
  if (!*((unsigned char *)a3 + 67))
  }
    return (uint64_t **)google::protobuf::Reflection::SetField<long long>((unsigned int *)this, a2, a3, &v17);
  int v10 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  int v11 = *((_DWORD *)a3 + 17);
  int v12 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v12)
  {
    uint64_t v18 = a3;
    unint64_t v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
    {
      uint64_t v21 = &v19;
      unint64_t v22 = &v18;
      uint64_t v20 = &v21;
      std::__call_once(v12, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v13 = *((_DWORD *)a3 + 14);
  uint64_t v14 = v17;
  uint64_t result = google::protobuf::internal::ExtensionSet::Insert(v10, v11);
  result[2] = (uint64_t *)a3;
  if (v16)
  {
    *((unsigned char *)result + 8) = v13;
    *((unsigned char *)result + 9) = 0;
  }
  *((unsigned char *)result + 10) &= 0xF0u;
  *uint64_t result = (uint64_t *)v14;
  return result;
}

uint64_t google::protobuf::Reflection::GetRepeatedInt64(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  uint64_t v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  int v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    int v12 = a3;
    int v13 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      v15[0] = &v13;
      v15[1] = &v12;
      uint64_t v14 = v15;
      std::__call_once(v10, &v14, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (((0x50008uLL >> *((_DWORD *)a3 + 14)) & 1) == 0) {
  if (*((unsigned char *)a3 + 67))
  }
    return google::protobuf::internal::ExtensionSet::GetRepeatedInt64((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  else {
    return *(void *)(*(void *)((char *)a2
  }
                                 + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)+ 8)+ 8 * a4);
}

void google::protobuf::Reflection::AddInt64(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  int v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    uint64_t v17 = a3;
    uint64_t v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      uint64_t v20 = &v18;
      uint64_t v21 = &v17;
      unint64_t v19 = &v20;
      std::__call_once(v10, &v19, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (((0x50008uLL >> *((_DWORD *)a3 + 14)) & 1) == 0) {
  if (*((unsigned char *)a3 + 67))
  }
  {
    int v11 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v12 = *((_DWORD *)a3 + 17);
    int v13 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v13)
    {
      uint64_t v17 = a3;
      uint64_t v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
      {
        uint64_t v20 = &v18;
        uint64_t v21 = &v17;
        unint64_t v19 = &v20;
        std::__call_once(v13, &v19, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    google::protobuf::internal::ExtensionSet::AddInt64(v11, v12, *((unsigned char *)a3 + 56), *(unsigned char *)(*((void *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    uint64_t v14 = (unsigned int *)((char *)a2
                         + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    uint64_t v15 = *v14;
    if (v15 == v14[1])
    {
      unsigned int v16 = v15 + 1;
      google::protobuf::RepeatedField<long long>::Reserve(v14, v15 + 1);
      *(void *)(*((void *)v14 + 1) + 8 * v15) = a4;
    }
    else
    {
      *(void *)(*((void *)v14 + 1) + 8 * v15) = a4;
      unsigned int v16 = v15 + 1;
    }
    unsigned int *v14 = v16;
  }
}

uint64_t google::protobuf::Reflection::GetUInt32(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v17 = a3;
    uint64_t v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v20[0] = &v18;
      v20[1] = &v17;
      unint64_t v19 = v20;
      std::__call_once(v9, &v19, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v10 = *((_DWORD *)a3 + 14);
  if (v10 != 7 && v10 != 13) {
  if (*((unsigned char *)a3 + 67))
  }
  {
    int v12 = *((_DWORD *)a3 + 17);
    uint64_t v13 = *((unsigned int *)a3 + 36);
    uint64_t v14 = google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), v12);
    if (v14 && (*((unsigned char *)v14 + 10) & 1) == 0) {
      return *v14;
    }
  }
  else
  {
    uint64_t v15 = *((void *)a3 + 11);
    if (!v15
      || *(_DWORD *)(v15 + 24) == 1 && *(unsigned char *)(**(void **)(v15 + 32) + 65)
      || *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v15 - *(void *)(*(void *)(v15 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    {
      return *(unsigned int *)((char *)a2
                             + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    }
    else
    {
      return *((unsigned int *)a3 + 36);
    }
  }
  return v13;
}

uint64_t **google::protobuf::Reflection::SetUInt32(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  int v19 = a4;
  uint64_t v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v20 = a3;
    uint64_t v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      unint64_t v23 = &v21;
      uint64_t v24 = &v20;
      unint64_t v22 = &v23;
      std::__call_once(v9, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v10 = *((_DWORD *)a3 + 14);
  if (v10 != 7 && v10 != 13) {
  if (!*((unsigned char *)a3 + 67))
  }
    return (uint64_t **)google::protobuf::Reflection::SetField<int>((unsigned int *)this, a2, a3, &v19);
  int v12 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  int v13 = *((_DWORD *)a3 + 17);
  uint64_t v14 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v14)
  {
    uint64_t v20 = a3;
    uint64_t v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v14, memory_order_acquire) != -1)
    {
      unint64_t v23 = &v21;
      uint64_t v24 = &v20;
      unint64_t v22 = &v23;
      std::__call_once(v14, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v15 = *((_DWORD *)a3 + 14);
  int v16 = v19;
  uint64_t result = google::protobuf::internal::ExtensionSet::Insert(v12, v13);
  result[2] = (uint64_t *)a3;
  if (v18)
  {
    *((unsigned char *)result + 8) = v15;
    *((unsigned char *)result + 9) = 0;
  }
  *((unsigned char *)result + 10) &= 0xF0u;
  *(_DWORD *)uint64_t result = v16;
  return result;
}

uint64_t google::protobuf::Reflection::GetRepeatedUInt32(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  uint64_t v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  int v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    uint64_t v14 = a3;
    int v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      v17[0] = &v15;
      v17[1] = &v14;
      int v16 = v17;
      std::__call_once(v10, &v16, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v11 = *((_DWORD *)a3 + 14);
  if (v11 != 7 && v11 != 13) {
  if (*((unsigned char *)a3 + 67))
  }
    return google::protobuf::internal::ExtensionSet::GetRepeatedUInt32((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  else {
    return *(unsigned int *)(*(void *)((char *)a2
  }
                                       + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)+ 8)+ 4 * a4);
}

void google::protobuf::Reflection::AddUInt32(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  uint64_t v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  int v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    int v19 = a3;
    uint64_t v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      unint64_t v22 = &v20;
      unint64_t v23 = &v19;
      uint64_t v21 = &v22;
      std::__call_once(v10, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v11 = *((_DWORD *)a3 + 14);
  if (v11 != 7 && v11 != 13) {
  if (*((unsigned char *)a3 + 67))
  }
  {
    int v13 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v14 = *((_DWORD *)a3 + 17);
    int v15 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v15)
    {
      int v19 = a3;
      uint64_t v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v15, memory_order_acquire) != -1)
      {
        unint64_t v22 = &v20;
        unint64_t v23 = &v19;
        uint64_t v21 = &v22;
        std::__call_once(v15, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    google::protobuf::internal::ExtensionSet::AddUInt32(v13, v14, *((unsigned char *)a3 + 56), *(unsigned char *)(*((void *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    int v16 = (unsigned int *)((char *)a2
                         + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    uint64_t v17 = *v16;
    if (v17 == v16[1])
    {
      unsigned int v18 = v17 + 1;
      google::protobuf::RepeatedField<int>::Reserve(v16, v17 + 1);
      *(_DWORD *)(*((void *)v16 + 1) + 4 * v17) = a4;
    }
    else
    {
      *(_DWORD *)(*((void *)v16 + 1) + 4 * v17) = a4;
      unsigned int v18 = v17 + 1;
    }
    *int v16 = v18;
  }
}

uint64_t google::protobuf::Reflection::GetUInt64(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    int v15 = a3;
    int v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v18[0] = &v16;
      v18[1] = &v15;
      uint64_t v17 = v18;
      std::__call_once(v9, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)a3 + 14) & 0xFFFFFFFD) != 4) {
  if (!*((unsigned char *)a3 + 67))
  }
  {
    uint64_t v13 = *((void *)a3 + 11);
    if (!v13
      || *(_DWORD *)(v13 + 24) == 1 && *(unsigned char *)(**(void **)(v13 + 32) + 65)
      || *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v13 - *(void *)(*(void *)(v13 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    {
      int v12 = (char *)a2
          + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3);
    }
    else
    {
      int v12 = (char *)a3 + 144;
    }
    return *(void *)v12;
  }
  int v10 = *((_DWORD *)a3 + 17);
  uint64_t v11 = *((void *)a3 + 18);
  int v12 = (char *)google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), v10);
  if (v12 && (v12[10] & 1) == 0) {
    return *(void *)v12;
  }
  return v11;
}

uint64_t **google::protobuf::Reflection::SetUInt64(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v17 = a4;
  uint64_t v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    unsigned int v18 = a3;
    int v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      uint64_t v21 = &v19;
      unint64_t v22 = &v18;
      uint64_t v20 = &v21;
      std::__call_once(v9, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)a3 + 14) & 0xFFFFFFFD) != 4) {
  if (!*((unsigned char *)a3 + 67))
  }
    return (uint64_t **)google::protobuf::Reflection::SetField<long long>((unsigned int *)this, a2, a3, &v17);
  int v10 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  int v11 = *((_DWORD *)a3 + 17);
  int v12 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v12)
  {
    unsigned int v18 = a3;
    int v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
    {
      uint64_t v21 = &v19;
      unint64_t v22 = &v18;
      uint64_t v20 = &v21;
      std::__call_once(v12, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v13 = *((_DWORD *)a3 + 14);
  uint64_t v14 = v17;
  uint64_t result = google::protobuf::internal::ExtensionSet::Insert(v10, v11);
  result[2] = (uint64_t *)a3;
  if (v16)
  {
    *((unsigned char *)result + 8) = v13;
    *((unsigned char *)result + 9) = 0;
  }
  *((unsigned char *)result + 10) &= 0xF0u;
  *uint64_t result = (uint64_t *)v14;
  return result;
}

uint64_t google::protobuf::Reflection::GetRepeatedUInt64(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  uint64_t v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  int v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    int v12 = a3;
    int v13 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      v15[0] = &v13;
      v15[1] = &v12;
      uint64_t v14 = v15;
      std::__call_once(v10, &v14, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)a3 + 14) & 0xFFFFFFFD) != 4) {
  if (*((unsigned char *)a3 + 67))
  }
    return google::protobuf::internal::ExtensionSet::GetRepeatedUInt64((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  else {
    return *(void *)(*(void *)((char *)a2
  }
                                 + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)+ 8)+ 8 * a4);
}

void google::protobuf::Reflection::AddUInt64(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  int v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    uint64_t v17 = a3;
    unsigned int v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      uint64_t v20 = &v18;
      uint64_t v21 = &v17;
      int v19 = &v20;
      std::__call_once(v10, &v19, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)a3 + 14) & 0xFFFFFFFD) != 4) {
  if (*((unsigned char *)a3 + 67))
  }
  {
    int v11 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v12 = *((_DWORD *)a3 + 17);
    int v13 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v13)
    {
      uint64_t v17 = a3;
      unsigned int v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
      {
        uint64_t v20 = &v18;
        uint64_t v21 = &v17;
        int v19 = &v20;
        std::__call_once(v13, &v19, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    google::protobuf::internal::ExtensionSet::AddUInt64(v11, v12, *((unsigned char *)a3 + 56), *(unsigned char *)(*((void *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    uint64_t v14 = (unsigned int *)((char *)a2
                         + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    uint64_t v15 = *v14;
    if (v15 == v14[1])
    {
      unsigned int v16 = v15 + 1;
      google::protobuf::RepeatedField<long long>::Reserve(v14, v15 + 1);
      *(void *)(*((void *)v14 + 1) + 8 * v15) = a4;
    }
    else
    {
      *(void *)(*((void *)v14 + 1) + 8 * v15) = a4;
      unsigned int v16 = v15 + 1;
    }
    unsigned int *v14 = v16;
  }
}

float google::protobuf::Reflection::GetFloat(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v14 = a3;
    uint64_t v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v17[0] = &v15;
      v17[1] = &v14;
      unsigned int v16 = v17;
      std::__call_once(v9, &v16, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 2) {
  if (*((unsigned char *)a3 + 67))
  }
  {
    float v10 = *((float *)a3 + 36);
    int v11 = google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17));
    if (v11 && (*((unsigned char *)v11 + 10) & 1) == 0) {
      return *(float *)v11;
    }
  }
  else
  {
    uint64_t v12 = *((void *)a3 + 11);
    if (!v12
      || *(_DWORD *)(v12 + 24) == 1 && *(unsigned char *)(**(void **)(v12 + 32) + 65)
      || *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v12 - *(void *)(*(void *)(v12 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    {
      return *(float *)((char *)a2
                      + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    }
    else
    {
      return *((float *)a3 + 36);
    }
  }
  return v10;
}

uint64_t **google::protobuf::Reflection::SetFloat(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, float a4, uint64_t a5, const char *a6)
{
  float v18 = a4;
  uint64_t v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a6);
  float v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    int v19 = a3;
    uint64_t v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      unint64_t v22 = &v20;
      unint64_t v23 = &v19;
      uint64_t v21 = &v22;
      std::__call_once(v10, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 2) {
  if (!*((unsigned char *)a3 + 67))
  }
    return (uint64_t **)google::protobuf::Reflection::SetField<float>((unsigned int *)this, a2, a3, (int *)&v18);
  int v11 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  int v12 = *((_DWORD *)a3 + 17);
  int v13 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v13)
  {
    int v19 = a3;
    uint64_t v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
    {
      unint64_t v22 = &v20;
      unint64_t v23 = &v19;
      uint64_t v21 = &v22;
      std::__call_once(v13, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v14 = *((_DWORD *)a3 + 14);
  float v15 = v18;
  uint64_t result = google::protobuf::internal::ExtensionSet::Insert(v11, v12);
  result[2] = (uint64_t *)a3;
  if (v17)
  {
    *((unsigned char *)result + 8) = v14;
    *((unsigned char *)result + 9) = 0;
  }
  *((unsigned char *)result + 10) &= 0xF0u;
  *(float *)uint64_t result = v15;
  return result;
}

float google::protobuf::Reflection::GetRepeatedFloat(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  uint64_t v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  float v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    int v12 = a3;
    int v13 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      v15[0] = &v13;
      v15[1] = &v12;
      int v14 = v15;
      std::__call_once(v10, &v14, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 2) {
  if (*((unsigned char *)a3 + 67))
  }
    return google::protobuf::internal::ExtensionSet::GetRepeatedFloat((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  else {
    return *(float *)(*(void *)((char *)a2
  }
                                + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)+ 8)+ 4 * a4);
}

void google::protobuf::Reflection::AddFloat(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, float a4, uint64_t a5, const char *a6)
{
  float v10 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v10) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a6);
  int v11 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v11)
  {
    float v18 = a3;
    int v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
    {
      uint64_t v21 = &v19;
      unint64_t v22 = &v18;
      uint64_t v20 = &v21;
      std::__call_once(v11, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 2) {
  if (*((unsigned char *)a3 + 67))
  }
  {
    int v12 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v13 = *((_DWORD *)a3 + 17);
    int v14 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v14)
    {
      float v18 = a3;
      int v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v14, memory_order_acquire) != -1)
      {
        uint64_t v21 = &v19;
        unint64_t v22 = &v18;
        uint64_t v20 = &v21;
        std::__call_once(v14, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    google::protobuf::internal::ExtensionSet::AddFloat(v12, v13, *((unsigned char *)a3 + 56), *(unsigned char *)(*((void *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    float v15 = (unsigned int *)((char *)a2
                         + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    uint64_t v16 = *v15;
    if (v16 == v15[1])
    {
      unsigned int v17 = v16 + 1;
      google::protobuf::RepeatedField<int>::Reserve(v15, v16 + 1);
      *(float *)(*((void *)v15 + 1) + 4 * v16) = a4;
    }
    else
    {
      *(float *)(*((void *)v15 + 1) + 4 * v16) = a4;
      unsigned int v17 = v16 + 1;
    }
    unsigned int *v15 = v17;
  }
}

double google::protobuf::Reflection::GetDouble(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    int v14 = a3;
    float v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v17[0] = &v15;
      v17[1] = &v14;
      uint64_t v16 = v17;
      std::__call_once(v9, &v16, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 1) {
  if (!*((unsigned char *)a3 + 67))
  }
  {
    uint64_t v12 = *((void *)a3 + 11);
    if (!v12
      || *(_DWORD *)(v12 + 24) == 1 && *(unsigned char *)(**(void **)(v12 + 32) + 65)
      || *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v12 - *(void *)(*(void *)(v12 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    {
      int v11 = (char *)a2
          + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3);
    }
    else
    {
      int v11 = (char *)a3 + 144;
    }
    return *(double *)v11;
  }
  double v10 = *((double *)a3 + 18);
  int v11 = (char *)google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17));
  if (v11 && (v11[10] & 1) == 0) {
    return *(double *)v11;
  }
  return v10;
}

uint64_t **google::protobuf::Reflection::SetDouble(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, double a4, uint64_t a5, const char *a6)
{
  double v18 = a4;
  uint64_t v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a6);
  double v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    int v19 = a3;
    uint64_t v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      unint64_t v22 = &v20;
      unint64_t v23 = &v19;
      uint64_t v21 = &v22;
      std::__call_once(v10, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 1) {
  if (!*((unsigned char *)a3 + 67))
  }
    return (uint64_t **)google::protobuf::Reflection::SetField<double>((unsigned int *)this, a2, a3, (uint64_t *)&v18);
  int v11 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  int v12 = *((_DWORD *)a3 + 17);
  int v13 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v13)
  {
    int v19 = a3;
    uint64_t v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
    {
      unint64_t v22 = &v20;
      unint64_t v23 = &v19;
      uint64_t v21 = &v22;
      std::__call_once(v13, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v14 = *((_DWORD *)a3 + 14);
  double v15 = v18;
  uint64_t result = google::protobuf::internal::ExtensionSet::Insert(v11, v12);
  result[2] = (uint64_t *)a3;
  if (v17)
  {
    *((unsigned char *)result + 8) = v14;
    *((unsigned char *)result + 9) = 0;
  }
  *((unsigned char *)result + 10) &= 0xF0u;
  *(double *)uint64_t result = v15;
  return result;
}

double google::protobuf::Reflection::GetRepeatedDouble(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  uint64_t v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  double v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    int v12 = a3;
    int v13 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      v15[0] = &v13;
      v15[1] = &v12;
      int v14 = v15;
      std::__call_once(v10, &v14, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 1) {
  if (*((unsigned char *)a3 + 67))
  }
    return google::protobuf::internal::ExtensionSet::GetRepeatedDouble((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  else {
    return *(double *)(*(void *)((char *)a2
  }
                                 + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)+ 8)+ 8 * a4);
}

void google::protobuf::Reflection::AddDouble(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, double a4, uint64_t a5, const char *a6)
{
  double v10 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v10) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a6);
  int v11 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v11)
  {
    double v18 = a3;
    int v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
    {
      uint64_t v21 = &v19;
      unint64_t v22 = &v18;
      uint64_t v20 = &v21;
      std::__call_once(v11, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 1) {
  if (*((unsigned char *)a3 + 67))
  }
  {
    int v12 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v13 = *((_DWORD *)a3 + 17);
    int v14 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v14)
    {
      double v18 = a3;
      int v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v14, memory_order_acquire) != -1)
      {
        uint64_t v21 = &v19;
        unint64_t v22 = &v18;
        uint64_t v20 = &v21;
        std::__call_once(v14, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    google::protobuf::internal::ExtensionSet::AddDouble(v12, v13, *((unsigned char *)a3 + 56), *(unsigned char *)(*((void *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    double v15 = (unsigned int *)((char *)a2
                         + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    uint64_t v16 = *v15;
    if (v16 == v15[1])
    {
      unsigned int v17 = v16 + 1;
      google::protobuf::RepeatedField<long long>::Reserve(v15, v16 + 1);
      *(double *)(*((void *)v15 + 1) + 8 * v16) = a4;
    }
    else
    {
      *(double *)(*((void *)v15 + 1) + 8 * v16) = a4;
      unsigned int v17 = v16 + 1;
    }
    unsigned int *v15 = v17;
  }
}

BOOL google::protobuf::Reflection::GetBool(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    double v15 = a3;
    uint64_t v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v18[0] = &v16;
      v18[1] = &v15;
      unsigned int v17 = v18;
      std::__call_once(v9, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 8) {
  if (*((unsigned char *)a3 + 67))
  }
  {
    int v10 = *((_DWORD *)a3 + 17);
    int v11 = *((unsigned __int8 *)a3 + 144);
    int v12 = google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), v10);
    if (v12 && (*((unsigned char *)v12 + 10) & 1) == 0) {
      int v11 = *(unsigned __int8 *)v12;
    }
  }
  else
  {
    uint64_t v13 = *((void *)a3 + 11);
    if (!v13
      || *(_DWORD *)(v13 + 24) == 1 && *(unsigned char *)(**(void **)(v13 + 32) + 65)
      || *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v13 - *(void *)(*(void *)(v13 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    {
      int v11 = *((unsigned __int8 *)a2
            + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    }
    else
    {
      int v11 = *((unsigned __int8 *)a3 + 144);
    }
  }
  return v11 != 0;
}

uint64_t **google::protobuf::Reflection::SetBool(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, char a4, const char *a5)
{
  char v17 = a4;
  uint64_t v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    double v18 = a3;
    int v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      uint64_t v21 = &v19;
      unint64_t v22 = &v18;
      uint64_t v20 = &v21;
      std::__call_once(v9, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 8) {
  if (!*((unsigned char *)a3 + 67))
  }
    return (uint64_t **)google::protobuf::Reflection::SetField<BOOL>((unsigned int *)this, a2, a3, &v17);
  int v10 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  int v11 = *((_DWORD *)a3 + 17);
  int v12 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v12)
  {
    double v18 = a3;
    int v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
    {
      uint64_t v21 = &v19;
      unint64_t v22 = &v18;
      uint64_t v20 = &v21;
      std::__call_once(v12, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v13 = *((_DWORD *)a3 + 14);
  char v14 = v17;
  uint64_t result = google::protobuf::internal::ExtensionSet::Insert(v10, v11);
  result[2] = (uint64_t *)a3;
  if (v16)
  {
    *((unsigned char *)result + 8) = v13;
    *((unsigned char *)result + 9) = 0;
  }
  *((unsigned char *)result + 10) &= 0xF0u;
  *(unsigned char *)uint64_t result = v14;
  return result;
}

uint64_t google::protobuf::Reflection::GetRepeatedBool(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  uint64_t v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  int v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    int v12 = a3;
    int v13 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      v15[0] = &v13;
      v15[1] = &v12;
      char v14 = v15;
      std::__call_once(v10, &v14, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 8) {
  if (*((unsigned char *)a3 + 67))
  }
    return google::protobuf::internal::ExtensionSet::GetRepeatedBool((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  else {
    return *(unsigned char *)(*(void *)((char *)a2
  }
                                + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)+ 8)+ a4) != 0;
}

void google::protobuf::Reflection::AddBool(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, char a4, const char *a5)
{
  uint64_t v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  int v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    char v17 = a3;
    double v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      uint64_t v20 = &v18;
      uint64_t v21 = &v17;
      int v19 = &v20;
      std::__call_once(v10, &v19, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 8) {
  if (*((unsigned char *)a3 + 67))
  }
  {
    int v11 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v12 = *((_DWORD *)a3 + 17);
    int v13 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v13)
    {
      char v17 = a3;
      double v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
      {
        uint64_t v20 = &v18;
        uint64_t v21 = &v17;
        int v19 = &v20;
        std::__call_once(v13, &v19, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    google::protobuf::internal::ExtensionSet::AddBool(v11, v12, *((unsigned char *)a3 + 56), *(unsigned char *)(*((void *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    char v14 = (unsigned int *)((char *)a2
                         + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    uint64_t v15 = *v14;
    if (v15 == v14[1])
    {
      unsigned int v16 = v15 + 1;
      google::protobuf::RepeatedField<BOOL>::Reserve(v14, v15 + 1);
      *(unsigned char *)(*((void *)v14 + 1) + v15) = a4;
    }
    else
    {
      *(unsigned char *)(*((void *)v14 + 1) + v15) = a4;
      unsigned int v16 = v15 + 1;
    }
    unsigned int *v14 = v16;
  }
}

unint64_t google::protobuf::Reflection::GetStringReference(uint64_t a1, uint64_t a2, google::protobuf::Descriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = *(google::protobuf::_anonymous_namespace_ **)a1;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    char v17 = a3;
    double v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v20[0] = &v18;
      v20[1] = &v17;
      int v19 = v20;
      std::__call_once(v9, &v19, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v10 = *((_DWORD *)a3 + 14);
  if (v10 != 9 && v10 != 12) {
  if (*((unsigned char *)a3 + 67))
  }
  {
    int v12 = (google::protobuf::internal::ExtensionSet *)(a2 + *(unsigned int *)(a1 + 40));
    unint64_t v13 = *((void *)a3 + 18);
    char v14 = (char *)google::protobuf::internal::ExtensionSet::FindOrNull(v12, *((_DWORD *)a3 + 17));
    if (!v14 || (v14[10] & 1) != 0) {
      return v13;
    }
    return *(void *)v14;
  }
  uint64_t v15 = *((void *)a3 + 11);
  if (v15
    && (*(_DWORD *)(v15 + 24) != 1 || !*(unsigned char *)(**(void **)(v15 + 32) + 65))
    && *(_DWORD *)(a2
                 + *(_DWORD *)(a1 + 44)
                 - 1431655764 * ((unint64_t)(v15 - *(void *)(*(void *)(v15 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17)
    || (unint64_t v13 = *(void *)(a2
                        + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 8), a3)) & 0xFFFFFFFFFFFFFFFELL) == 0)
  {
    char v14 = (char *)a3 + 144;
    return *(void *)v14;
  }
  return v13;
}

void google::protobuf::Reflection::GetRepeatedString(google::protobuf::_anonymous_namespace_ **this@<X0>, const google::protobuf::Message *a2@<X1>, const google::protobuf::FieldDescriptor *a3@<X2>, int a4@<W3>, const char *a5@<X4>, std::string *a6@<X8>)
{
  int v11 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v11) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  int v12 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v12)
  {
    uint64_t v21 = a3;
    unint64_t v22 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
    {
      v24[0] = &v22;
      v24[1] = &v21;
      unint64_t v23 = v24;
      std::__call_once(v12, &v23, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v13 = *((_DWORD *)a3 + 14);
  if (v13 != 9 && v13 != 12) {
  if (*((unsigned char *)a3 + 67))
  }
  {
    uint64_t RepeatedString = google::protobuf::internal::ExtensionSet::GetRepeatedString((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
    if ((*(char *)(RepeatedString + 23) & 0x80000000) == 0)
    {
      long long v16 = *(_OWORD *)RepeatedString;
      std::string::size_type v17 = *(void *)(RepeatedString + 16);
LABEL_18:
      a6->__r_.__value_.__r.__words[2] = v17;
      *(_OWORD *)&a6->__r_.__value_.__l.__data_ = v16;
      return;
    }
    int v19 = *(const std::string::value_type **)RepeatedString;
    std::string::size_type v20 = *(void *)(RepeatedString + 8);
  }
  else
  {
    double v18 = *(long long **)(*(void *)((char *)a2
                                   + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)+ 16)+ 8 * a4+ 8);
    if ((*((char *)v18 + 23) & 0x80000000) == 0)
    {
      long long v16 = *v18;
      std::string::size_type v17 = *((void *)v18 + 2);
      goto LABEL_18;
    }
    int v19 = *(const std::string::value_type **)v18;
    std::string::size_type v20 = *((void *)v18 + 1);
  }
  std::string::__init_copy_ctor_external(a6, v19, v20);
}

uint64_t google::protobuf::Reflection::GetRepeatedStringReference(uint64_t a1, uint64_t a2, google::protobuf::Descriptor *a3, int a4, const char *a5)
{
  uint64_t v9 = *(google::protobuf::_anonymous_namespace_ **)a1;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  int v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    char v14 = a3;
    uint64_t v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      v17[0] = &v15;
      v17[1] = &v14;
      long long v16 = v17;
      std::__call_once(v10, &v16, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v11 = *((_DWORD *)a3 + 14);
  if (v11 != 9 && v11 != 12) {
  if (*((unsigned char *)a3 + 67))
  }
    return google::protobuf::internal::ExtensionSet::GetRepeatedString((google::protobuf::internal::ExtensionSet *)(a2 + *(unsigned int *)(a1 + 40)), *((_DWORD *)a3 + 17), a4);
  else {
    return *(void *)(*(void *)(a2
  }
                                 + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 8), a3)+ 16)+ 8 * a4+ 8);
}

__n128 google::protobuf::Reflection::AddString(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *a3, uint64_t *a4, const char *a5)
{
  v40[2] = *MEMORY[0x1E4F143B8];
  uint64_t v9 = *(google::protobuf::_anonymous_namespace_ **)a1;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  int v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    uint64_t v35 = a3;
    uint64_t v36 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      uint64_t v38 = &v36;
      uint64_t v39 = &v35;
      uint64_t v37 = &v38;
      std::__call_once(v10, &v37, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v11 = *((_DWORD *)a3 + 14);
  if (v11 != 9 && v11 != 12) {
  if (*((unsigned char *)a3 + 67))
  }
  {
    uint64_t v13 = *(unsigned int *)(a1 + 40);
    int v14 = *((_DWORD *)a3 + 17);
    uint64_t v15 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v15)
    {
      uint64_t v35 = a3;
      uint64_t v36 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v15, memory_order_acquire) != -1)
      {
        uint64_t v38 = &v36;
        uint64_t v39 = &v35;
        uint64_t v37 = &v38;
        std::__call_once(v15, &v37, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    long long v16 = (google::protobuf::internal::ExtensionSet *)(a2 + v13);
    char v17 = *((unsigned char *)a3 + 56);
    uint64_t v18 = *a4;
    v40[0] = a4[1];
    *(void *)((char *)v40 + 7) = *(uint64_t *)((char *)a4 + 15);
    char v19 = *((unsigned char *)a4 + 23);
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
    std::string::size_type v20 = google::protobuf::internal::ExtensionSet::AddString(v16, v14, v17, a3);
    unint64_t v22 = v20;
    if (v20[23] < 0) {
      operator delete(*(void **)v20);
    }
    uint64_t v23 = v40[0];
    *(void *)unint64_t v22 = v18;
    *((void *)v22 + 1) = v23;
    *(void *)(v22 + 15) = *(void *)((char *)v40 + 7);
    v22[23] = v19;
    return result;
  }
  unsigned int FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 8), a3);
  uint64_t v25 = (uint64_t *)(a2 + FieldOffset);
  uint64_t v26 = (int *)v25[2];
  if (!v26)
  {
    int v27 = *((_DWORD *)v25 + 2);
    int v28 = *((_DWORD *)v25 + 3);
    goto LABEL_25;
  }
  int v27 = *((_DWORD *)v25 + 2);
  int v28 = *v26;
  if (v27 >= *v26)
  {
    if (v28 != *((_DWORD *)v25 + 3))
    {
LABEL_28:
      *uint64_t v26 = v28 + 1;
      uint64_t v32 = *v25;
      if (!*v25) {
        operator new();
      }
      if (*(unsigned char *)(v32 + 24)) {
      AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v32, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
      }
      *(void *)AlignedAndAddCleanup = 0;
      *((void *)AlignedAndAddCleanup + 1) = 0;
      *((void *)AlignedAndAddCleanup + 2) = 0;
      uint64_t v33 = v25[2];
      uint64_t v34 = *((int *)v25 + 2);
      *((_DWORD *)v25 + 2) = v34 + 1;
      *(void *)(v33 + 8 * v34 + 8) = AlignedAndAddCleanup;
      goto LABEL_33;
    }
LABEL_25:
    BOOL v30 = __OFSUB__(v28, v27);
    int v31 = v28 - v27;
    if (v31 < 0 == v30)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a2 + FieldOffset), v31 + 1);
      uint64_t v26 = (int *)v25[2];
    }
    int v28 = *v26;
    goto LABEL_28;
  }
  *((_DWORD *)v25 + 2) = v27 + 1;
  AlignedAndAddCleanup = *(char **)&v26[2 * v27 + 2];
LABEL_33:
  if (AlignedAndAddCleanup[23] < 0) {
    operator delete(*(void **)AlignedAndAddCleanup);
  }
  __n128 result = *(__n128 *)a4;
  *((void *)AlignedAndAddCleanup + 2) = a4[2];
  *(__n128 *)AlignedAndAddCleanup = result;
  *((unsigned char *)a4 + 23) = 0;
  *(unsigned char *)a4 = 0;
  return result;
}

void sub_1891CD000(_Unwind_Exception *exception_object)
{
  if (v2 < 0) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::Reflection::GetEnum(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t EnumValue = google::protobuf::Reflection::GetEnumValue(this, a2, a3, a4, a5);
  uint64_t v7 = google::protobuf::FieldDescriptor::enum_type(a3);
  uint64_t v8 = *(void *)(*(void *)(v7 + 16) + 144);

  return google::protobuf::FileDescriptorTables::FindEnumValueByNumberCreatingIfUnknown(v8, v7, EnumValue);
}

uint64_t google::protobuf::Reflection::GetEnumValue(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    long long v16 = a3;
    char v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v19[0] = &v17;
      v19[1] = &v16;
      uint64_t v18 = v19;
      std::__call_once(v9, &v18, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 14) {
  if (*((unsigned char *)a3 + 67))
  }
  {
    int v10 = (const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v11 = *((_DWORD *)a3 + 17);
    uint64_t v12 = *(unsigned int *)(google::protobuf::FieldDescriptor::default_value_enum(a3) + 16);
    uint64_t v13 = google::protobuf::internal::ExtensionSet::FindOrNull(v10, v11);
    if (v13 && (*((unsigned char *)v13 + 10) & 1) == 0) {
      return *v13;
    }
  }
  else
  {
    uint64_t v14 = *((void *)a3 + 11);
    if (!v14
      || *(_DWORD *)(v14 + 24) == 1 && *(unsigned char *)(**(void **)(v14 + 32) + 65)
      || *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v14 - *(void *)(*(void *)(v14 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    {
      return *(unsigned int *)((char *)a2
                             + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    }
    else
    {
      return *(unsigned int *)(google::protobuf::FieldDescriptor::default_value_enum(a3) + 16);
    }
  }
  return v12;
}

uint64_t **google::protobuf::Reflection::SetEnum(uint64_t *a1, google::protobuf::Message *a2, google::protobuf::FieldDescriptor *this, uint64_t a4)
{
  uint64_t v8 = *(void *)(a4 + 24);
  if (v8 != google::protobuf::FieldDescriptor::enum_type(this)) {
  int v9 = *(_DWORD *)(a4 + 16);
  }

  return google::protobuf::Reflection::SetEnumValueInternal((google::protobuf::Reflection *)a1, a2, this, v9);
}

void google::protobuf::anonymous namespace'::ReportReflectionUsageEnumTypeError(uint64_t a1, google::protobuf::FieldDescriptor *a2, const std::string::value_type *a3, uint64_t a4)
{
  int v25 = 3;
  uint64_t v26 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_message_reflection.cc";
  int v27 = 155;
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "Protocol Buffer reflection usage error:\n  Method      : google::protobuf::Reflection::");
  std::string::append(&__p, a3);
  std::string::append(&__p, "\n  Message type: ");
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = *(char *)(v8 + 23);
  if (v9 >= 0) {
    int v10 = *(const std::string::value_type **)(a1 + 8);
  }
  else {
    int v10 = *(const std::string::value_type **)v8;
  }
  if (v9 >= 0) {
    std::string::size_type v11 = *(unsigned __int8 *)(v8 + 23);
  }
  else {
    std::string::size_type v11 = *(void *)(v8 + 8);
  }
  std::string::append(&__p, v10, v11);
  std::string::append(&__p, "\n  Field       : ");
  uint64_t v12 = *((void *)a2 + 1);
  int v13 = *(char *)(v12 + 23);
  if (v13 >= 0) {
    uint64_t v14 = (const std::string::value_type *)*((void *)a2 + 1);
  }
  else {
    uint64_t v14 = *(const std::string::value_type **)v12;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = *(unsigned __int8 *)(v12 + 23);
  }
  else {
    std::string::size_type v15 = *(void *)(v12 + 8);
  }
  std::string::append(&__p, v14, v15);
  std::string::append(&__p, "\n  Problem     : Enum value did not match field type:\n    Expected  : ");
  uint64_t v16 = google::protobuf::FieldDescriptor::enum_type(a2);
  uint64_t v17 = *(void *)(v16 + 8);
  int v18 = *(char *)(v17 + 23);
  if (v18 >= 0) {
    char v19 = *(const std::string::value_type **)(v16 + 8);
  }
  else {
    char v19 = *(const std::string::value_type **)v17;
  }
  if (v18 >= 0) {
    std::string::size_type v20 = *(unsigned __int8 *)(v17 + 23);
  }
  else {
    std::string::size_type v20 = *(void *)(v17 + 8);
  }
  std::string::append(&__p, v19, v20);
  std::string::append(&__p, "\n    Actual    : ");
  uint64_t v21 = *(void *)(a4 + 8);
  int v22 = *(char *)(v21 + 23);
  if (v22 >= 0) {
    uint64_t v23 = *(const std::string::value_type **)(a4 + 8);
  }
  else {
    uint64_t v23 = *(const std::string::value_type **)v21;
  }
  if (v22 >= 0) {
    std::string::size_type v24 = *(unsigned __int8 *)(v21 + 23);
  }
  else {
    std::string::size_type v24 = *(void *)(v21 + 8);
  }
  std::string::append(&__p, v23, v24);
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v25);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1891CD428(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t **google::protobuf::Reflection::SetEnumValueInternal(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  int v12 = a4;
  if (!*((unsigned char *)a3 + 67)) {
    return (uint64_t **)google::protobuf::Reflection::SetField<int>((unsigned int *)this, a2, a3, &v12);
  }
  int v5 = a4;
  uint64_t v6 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  int v7 = *((_DWORD *)a3 + 17);
  uint64_t v8 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v8)
  {
    int v13 = a3;
    uint64_t v14 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
    {
      v16[0] = &v14;
      v16[1] = &v13;
      std::string::size_type v15 = v16;
      std::__call_once(v8, &v15, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    int v5 = v12;
  }
  int v9 = *((_DWORD *)a3 + 14);
  __n128 result = google::protobuf::internal::ExtensionSet::Insert(v6, v7);
  result[2] = (uint64_t *)a3;
  if (v11)
  {
    *((unsigned char *)result + 8) = v9;
    *((unsigned char *)result + 9) = 0;
  }
  *((unsigned char *)result + 10) &= 0xF0u;
  *(_DWORD *)__n128 result = v5;
  return result;
}

void google::protobuf::Reflection::SetEnumValue(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  int v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  int v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    std::string::size_type v15 = a3;
    uint64_t v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      int v18 = &v16;
      char v19 = &v15;
      uint64_t v17 = &v18;
      std::__call_once(v10, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 14) {
  if (*(_DWORD *)(*((void *)a3 + 5) + 60) == 3
  }
    || (uint64_t v11 = google::protobuf::FieldDescriptor::enum_type(a3),
        int v12 = (void *)(*(void *)(*(void *)(v11 + 16) + 144) + 192),
        int v18 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v11,
        char v19 = (const google::protobuf::FieldDescriptor **)a4,
  {
    google::protobuf::Reflection::SetEnumValueInternal((google::protobuf::Reflection *)this, a2, a3, a4);
  }
  else
  {
    int v13 = (unint64_t *)((char *)a2 + *((unsigned int *)this + 9));
    if (*v13) {
      uint64_t v14 = (char *)((*v13 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else {
      uint64_t v14 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v13);
    }
    google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v14, *((_DWORD *)a3 + 17), a4);
  }
}

uint64_t google::protobuf::Reflection::GetRepeatedEnum(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  Repeateduint64_t EnumValue = google::protobuf::Reflection::GetRepeatedEnumValue(this, a2, a3, a4, a5);
  uint64_t v7 = google::protobuf::FieldDescriptor::enum_type(a3);
  uint64_t v8 = *(void *)(*(void *)(v7 + 16) + 144);

  return google::protobuf::FileDescriptorTables::FindEnumValueByNumberCreatingIfUnknown(v8, v7, RepeatedEnumValue);
}

uint64_t google::protobuf::Reflection::GetRepeatedEnumValue(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  int v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  int v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    int v12 = a3;
    int v13 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      v15[0] = &v13;
      v15[1] = &v12;
      uint64_t v14 = v15;
      std::__call_once(v10, &v14, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 14) {
  if (*((unsigned char *)a3 + 67))
  }
    return google::protobuf::internal::ExtensionSet::GetRepeatedEnum((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  else {
    return *(unsigned int *)(*(void *)((char *)a2
  }
                                       + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)+ 8)+ 4 * a4);
}

void google::protobuf::Reflection::AddEnum(uint64_t *a1, google::protobuf::Message *a2, google::protobuf::FieldDescriptor *this, uint64_t a4)
{
  uint64_t v8 = *(void *)(a4 + 24);
  if (v8 != google::protobuf::FieldDescriptor::enum_type(this)) {
  int v9 = *(_DWORD *)(a4 + 16);
  }

  google::protobuf::Reflection::AddEnumValueInternal((google::protobuf::Reflection *)a1, a2, this, v9);
}

void google::protobuf::Reflection::AddEnumValueInternal(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  if (*((unsigned char *)a3 + 67))
  {
    uint64_t v6 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v7 = *((_DWORD *)a3 + 17);
    uint64_t v8 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v8)
    {
      int v12 = a3;
      int v13 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
      {
        v15[0] = &v13;
        v15[1] = &v12;
        uint64_t v14 = v15;
        std::__call_once(v8, &v14, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    google::protobuf::internal::ExtensionSet::AddInt32(v6, v7, *((unsigned char *)a3 + 56), *(unsigned char *)(*((void *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    int v9 = (unsigned int *)((char *)a2
                        + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), a3));
    uint64_t v10 = *v9;
    if (v10 == v9[1])
    {
      unsigned int v11 = v10 + 1;
      google::protobuf::RepeatedField<int>::Reserve(v9, v10 + 1);
      *(_DWORD *)(*((void *)v9 + 1) + 4 * v10) = a4;
    }
    else
    {
      *(_DWORD *)(*((void *)v9 + 1) + 4 * v10) = a4;
      unsigned int v11 = v10 + 1;
    }
    unsigned int *v9 = v11;
  }
}

void google::protobuf::Reflection::AddEnumValue(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  int v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  uint64_t v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    std::string::size_type v15 = a3;
    uint64_t v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      int v18 = &v16;
      char v19 = &v15;
      uint64_t v17 = &v18;
      std::__call_once(v10, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 14) {
  if (*(_DWORD *)(*((void *)a3 + 5) + 60) == 3
  }
    || (uint64_t v11 = google::protobuf::FieldDescriptor::enum_type(a3),
        int v12 = (void *)(*(void *)(*(void *)(v11 + 16) + 144) + 192),
        int v18 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v11,
        char v19 = (const google::protobuf::FieldDescriptor **)a4,
  {
    google::protobuf::Reflection::AddEnumValueInternal((google::protobuf::Reflection *)this, a2, a3, a4);
  }
  else
  {
    int v13 = (unint64_t *)((char *)a2 + *((unsigned int *)this + 9));
    if (*v13) {
      uint64_t v14 = (char *)((*v13 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else {
      uint64_t v14 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v13);
    }
    google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v14, *((_DWORD *)a3 + 17), a4);
  }
}

unint64_t google::protobuf::Reflection::GetDefaultMessageInstance(google::protobuf::Reflection *this, atomic_ullong *a2)
{
  uint64_t v4 = *((void *)this + 8);
  {
    unint64_t result = atomic_load_explicit(a2 + 18, memory_order_acquire);
    if (!result)
    {
      uint64_t v10 = *((void *)this + 8);
      uint64_t v11 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a2);
      unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 16))(v10, v11);
      atomic_store(result, (unint64_t *)a2 + 18);
    }
  }
  else if (*((unsigned char *)a2 + 67) {
         || (atomic_ullong v5 = a2[15], *(unsigned char *)(v5 + 79))
  }
         || *(unsigned char *)(v5 + 77)
         || (atomic_ullong v12 = a2[11]) != 0 && (*(_DWORD *)(v12 + 24) != 1 || !*(unsigned char *)(**(void **)(v12 + 32) + 65))
         || (unint64_t result = *(void *)google::protobuf::internal::ReflectionSchema::GetFieldDefault(*((void *)this + 1), *((void *)this + 2), (uint64_t)a2)) == 0)
  {
    uint64_t v6 = *((void *)this + 8);
    uint64_t v7 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a2);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v6 + 16);
    return v8(v6, v7);
  }
  return result;
}

uint64_t google::protobuf::Reflection::GetMessage(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, google::protobuf::MessageFactory *a4, const char *a5)
{
  int v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  uint64_t v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    uint64_t v16 = a3;
    uint64_t v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      v19[0] = &v17;
      v19[1] = &v16;
      int v18 = v19;
      std::__call_once(v10, &v18, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)a3 + 14) & 0xFFFFFFFE) != 0xA) {
  if (!a4)
  }
    a4 = this[8];
  if (*((unsigned char *)a3 + 67))
  {
    uint64_t v11 = (const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v12 = *((_DWORD *)a3 + 17);
    uint64_t v13 = google::protobuf::FieldDescriptor::message_type(a3);
    return google::protobuf::internal::ExtensionSet::GetMessage(v11, v12, v13, (uint64_t)a4);
  }
  else
  {
    uint64_t v15 = *((void *)a3 + 11);
    if (v15
      && (*(_DWORD *)(v15 + 24) != 1 || !*(unsigned char *)(**(void **)(v15 + 32) + 65))
      && *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v15 - *(void *)(*(void *)(v15 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17))
    {
      return google::protobuf::Reflection::GetDefaultMessageInstance((google::protobuf::Reflection *)this, (atomic_ullong *)a3);
    }
    uint64_t result = *(void *)((char *)a2
                       + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    if (!result) {
      return google::protobuf::Reflection::GetDefaultMessageInstance((google::protobuf::Reflection *)this, (atomic_ullong *)a3);
    }
  }
  return result;
}

uint64_t google::protobuf::Reflection::MutableMessage(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, google::protobuf::MessageFactory *a4, const char *a5)
{
  int v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) == 3)
  }
      a5);
  uint64_t v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    std::string::size_type v24 = a3;
    int v25 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      v27[0] = &v25;
      v27[1] = &v24;
      uint64_t v26 = v27;
      std::__call_once(v10, &v26, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)a3 + 14) & 0xFFFFFFFE) != 0xA) {
  if (!a4)
  }
    a4 = this[8];
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::MutableMessage((google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), a3, a4);
  }
  unsigned int FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3);
  uint64_t v13 = *((void *)a3 + 11);
  if (!v13 || *(_DWORD *)(v13 + 24) == 1 && *(unsigned char *)(**(void **)(v13 + 32) + 65))
  {
    unsigned int HasBitIndex = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)(this + 1), (uint64_t)a3);
    if (HasBitIndex != -1) {
      *(_DWORD *)((char *)a2 + 4 * (HasBitIndex >> 5) + *((unsigned int *)this + 8)) |= 1 << HasBitIndex;
    }
LABEL_20:
    uint64_t v15 = (uint64_t *)((char *)a2 + FieldOffset);
    uint64_t result = *v15;
    if (*v15) {
      return result;
    }
    goto LABEL_31;
  }
  if (*(_DWORD *)((char *)a2
                 + *((_DWORD *)this + 11)
                 - 1431655764 * ((unint64_t)(v13 - *(void *)(*(void *)(v13 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    goto LABEL_20;
  google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)this, a2, v13);
  uint64_t v16 = *((void *)a3 + 11);
  if (!v16 || *(_DWORD *)(v16 + 24) == 1 && *(unsigned char *)(**(void **)(v16 + 32) + 65))
  {
    unsigned int v17 = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)(this + 1), (uint64_t)a3);
    if (v17 != -1) {
      *(_DWORD *)((char *)a2 + 4 * (v17 >> 5) + *((unsigned int *)this + 8)) |= 1 << v17;
    }
  }
  else
  {
    *(_DWORD *)((char *)a2
              + *((_DWORD *)this + 11)
              - 1431655764 * ((unint64_t)(v16 - *(void *)(*(void *)(v16 + 16) + 48)) >> 4)) = *((_DWORD *)a3 + 17);
  }
  uint64_t v15 = (uint64_t *)((char *)a2
                  + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
  unint64_t DefaultMessageInstance = google::protobuf::Reflection::GetDefaultMessageInstance((google::protobuf::Reflection *)this, (atomic_ullong *)a3);
  uint64_t v19 = *((void *)a2 + 1);
  std::string::size_type v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFELL);
  if (v19) {
    std::string::size_type v20 = (void *)*v20;
  }
  uint64_t result = (*(uint64_t (**)(unint64_t, void *))(*(void *)DefaultMessageInstance + 32))(DefaultMessageInstance, v20);
  uint64_t *v15 = result;
  if (!result)
  {
LABEL_31:
    unint64_t v21 = google::protobuf::Reflection::GetDefaultMessageInstance((google::protobuf::Reflection *)this, (atomic_ullong *)a3);
    uint64_t v22 = *((void *)a2 + 1);
    uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFELL);
    if (v22) {
      uint64_t v23 = (void *)*v23;
    }
    uint64_t result = (*(uint64_t (**)(unint64_t, void *))(*(void *)v21 + 32))(v21, v23);
    uint64_t *v15 = result;
  }
  return result;
}

void google::protobuf::Reflection::UnsafeArenaSetAllocatedMessage(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, google::protobuf::Message *a3, const google::protobuf::FieldDescriptor *a4, const char *a5)
{
  int v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a4 + 10) != v9) {
  if (*((_DWORD *)a4 + 15) == 3)
  }
      a5);
  uint64_t v10 = (std::once_flag::_State_type *)*((void *)a4 + 6);
  if (v10)
  {
    std::string::size_type v24 = a4;
    int v25 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      int v27 = &v25;
      int v28 = &v24;
      uint64_t v26 = &v27;
      std::__call_once(v10, &v26, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)a4 + 14) & 0xFFFFFFFE) != 0xA) {
  if (*((unsigned char *)a4 + 67))
  }
  {
    uint64_t v11 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v12 = *((_DWORD *)a4 + 17);
    uint64_t v13 = (std::once_flag::_State_type *)*((void *)a4 + 6);
    if (v13)
    {
      std::string::size_type v24 = a4;
      int v25 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
      {
        int v27 = &v25;
        int v28 = &v24;
        uint64_t v26 = &v27;
        std::__call_once(v13, &v26, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    google::protobuf::internal::ExtensionSet::UnsafeArenaSetAllocatedMessage(v11, v12, *((unsigned char *)a4 + 56), a4, a3);
    return;
  }
  uint64_t v14 = *((void *)a4 + 11);
  if (!v14 || *(_DWORD *)(v14 + 24) == 1 && *(unsigned char *)(**(void **)(v14 + 32) + 65))
  {
    unsigned int HasBitIndex = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)(this + 1), (uint64_t)a4);
    if (a3)
    {
      if (HasBitIndex == -1) {
        goto LABEL_26;
      }
      uint64_t v16 = (char *)a2 + *((unsigned int *)this + 8);
      unsigned int v17 = HasBitIndex >> 5;
      int v18 = *(_DWORD *)&v16[4 * (HasBitIndex >> 5)] | (1 << HasBitIndex);
    }
    else
    {
      if (HasBitIndex == -1) {
        goto LABEL_26;
      }
      uint64_t v16 = (char *)a2 + *((unsigned int *)this + 8);
      unsigned int v17 = HasBitIndex >> 5;
      int v18 = *(_DWORD *)&v16[4 * (HasBitIndex >> 5)] & ~(1 << HasBitIndex);
    }
    *(_DWORD *)&v16[4 * v17] = v18;
LABEL_26:
    unsigned int FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a4);
    uint64_t v20 = FieldOffset;
    uint64_t v21 = *(void *)((char *)a2 + *((unsigned int *)this + 9));
    uint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFELL);
    if (v21)
    {
      if (!*v22)
      {
LABEL_28:
        uint64_t v23 = *(void *)((char *)a2 + FieldOffset);
        if (v23) {
          (*(void (**)(uint64_t))(*(void *)v23 + 8))(v23);
        }
      }
    }
    else if (!v22)
    {
      goto LABEL_28;
    }
    *(void *)((char *)a2 + v20) = a3;
    return;
  }
  google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)this, a2, v14);
  if (a3)
  {
    *(void *)((char *)a2
              + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a4)) = a3;
    *(_DWORD *)((char *)a2
              + *((_DWORD *)this + 11)
              - 1431655764
              * ((*((void *)a4 + 11) - *(void *)(*(void *)(*((void *)a4 + 11) + 16) + 48)) >> 4)) = *((_DWORD *)a4 + 17);
  }
}

uint64_t google::protobuf::Reflection::GetRepeatedMessage(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  int v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  uint64_t v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    uint64_t v15 = a3;
    uint64_t v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      v18[0] = &v16;
      v18[1] = &v15;
      unsigned int v17 = v18;
      std::__call_once(v10, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)a3 + 14) & 0xFFFFFFFE) != 0xA) {
  if (*((unsigned char *)a3 + 67))
  }
    return google::protobuf::internal::ExtensionSet::GetRepeatedMessage((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  uint64_t v13 = (atomic_uint *)((char *)a2
                      + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
  if (IsMapFieldInApi)
  {
    google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(v13);
    uint64_t v14 = *(void *)(*((void *)v13 + 2) + 16);
  }
  else
  {
    uint64_t v14 = *((void *)v13 + 2);
  }
  return *(void *)(v14 + 8 * a4 + 8);
}

uint64_t google::protobuf::Reflection::MutableRepeatedMessage(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  int v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  uint64_t v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v10)
  {
    uint64_t v15 = a3;
    uint64_t v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      v18[0] = &v16;
      v18[1] = &v15;
      unsigned int v17 = v18;
      std::__call_once(v10, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)a3 + 14) & 0xFFFFFFFE) != 0xA) {
  if (*((unsigned char *)a3 + 67))
  }
    return google::protobuf::internal::ExtensionSet::MutableRepeatedMessage((google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  uint64_t v13 = (atomic_uint *)((char *)a2
                      + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
  if (IsMapFieldInApi)
  {
    google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(v13);
    v13[22] = 1;
    uint64_t v14 = *(void *)(*((void *)v13 + 2) + 16);
  }
  else
  {
    uint64_t v14 = *((void *)v13 + 2);
  }
  return *(void *)(v14 + 8 * a4 + 8);
}

uint64_t google::protobuf::Reflection::AddMessage(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, std::once_flag::_State_type **a3, google::protobuf::MessageFactory *a4, const char *a5)
{
  int v9 = *this;
  if (a3[10] != (std::once_flag::_State_type *)v9) {
  if (*((_DWORD *)a3 + 15) != 3)
  }
      a5);
  uint64_t v10 = a3[6];
  if (v10)
  {
    int v31 = (const google::protobuf::FieldDescriptor *)a3;
    uint64_t v32 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      v34[0] = &v32;
      v34[1] = &v31;
      uint64_t v33 = v34;
      std::__call_once(v10, &v33, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((a3[7] & 0xFFFFFFFE) != 0xA) {
  if (!a4)
  }
    a4 = this[8];
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::AddMessage((google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), (const google::protobuf::FieldDescriptor *)a3, a4);
  }
  unsigned int FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), (const google::protobuf::FieldDescriptor *)a3);
  uint64_t v14 = (char *)a2 + FieldOffset;
  if (IsMapFieldInApi)
  {
    google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap((atomic_uint *)((char *)a2 + FieldOffset));
    *((_DWORD *)v14 + 22) = 1;
    uint64_t v14 = (char *)*((void *)v14 + 2);
  }
  uint64_t v15 = *((void *)v14 + 2);
  int v16 = *((_DWORD *)v14 + 2);
  if (!v15
    || v16 >= *(_DWORD *)v15
    || (v17 = v16, ++v16, *((_DWORD *)v14 + 2) = v16, (uint64_t v11 = *(void *)(v15 + 8 * v17 + 8)) == 0))
  {
    if (v16)
    {
      uint64_t v18 = *(void *)(v15 + 8);
    }
    else
    {
      uint64_t v19 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a3);
      uint64_t v18 = (*(uint64_t (**)(google::protobuf::MessageFactory *, uint64_t))(*(void *)a4 + 16))(a4, v19);
    }
    uint64_t v20 = *((void *)a2 + 1);
    uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFELL);
    if (v20) {
      uint64_t v21 = (void *)*v21;
    }
    uint64_t v11 = (*(uint64_t (**)(uint64_t, void *))(*(void *)v18 + 32))(v18, v21);
    uint64_t v22 = (int *)*((void *)v14 + 2);
    if (v22)
    {
      int v23 = *((_DWORD *)v14 + 2);
      int v24 = *((_DWORD *)v14 + 3);
      int v25 = v23;
      if (v23 != v24)
      {
        uint64_t v26 = *v22;
        if (v26 == v24)
        {
          uint64_t v27 = *(void *)&v22[2 * v23 + 2];
          if (v27 && !*(void *)v14)
          {
            (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
            uint64_t v22 = (int *)*((void *)v14 + 2);
          }
          goto LABEL_34;
        }
        if (v23 >= (int)v26)
        {
          int v28 = v26 + 1;
          goto LABEL_33;
        }
        *(void *)&v22[2 * v26 + 2] = *(void *)&v22[2 * v23 + 2];
LABEL_32:
        uint64_t v22 = (int *)*((void *)v14 + 2);
        int v28 = *v22 + 1;
LABEL_33:
        int *v22 = v28;
LABEL_34:
        uint64_t v29 = *((int *)v14 + 2);
        *((_DWORD *)v14 + 2) = v29 + 1;
        *(void *)&v22[2 * v29 + 2] = v11;
        return v11;
      }
    }
    else
    {
      int v25 = *((_DWORD *)v14 + 2);
      int v23 = *((_DWORD *)v14 + 3);
    }
    google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)v14, v23 - v25 + 1);
    goto LABEL_32;
  }
  return v11;
}

uint64_t *google::protobuf::Reflection::MutableRawRepeatedField(uint64_t a1, uint64_t a2, google::protobuf::Descriptor *a3, int a4, const char *a5, uint64_t a6)
{
  if (*((_DWORD *)a3 + 15) != 3) {
      a5);
  }
  uint64_t v11 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v11)
  {
    uint64_t v27 = a3;
    int v28 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
    {
      int v23 = &v28;
      int v24 = &v27;
      uint64_t v29 = &v23;
      std::__call_once(v11, &v29, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v12 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)];
  if (v12 == a4) {
    goto LABEL_13;
  }
  uint64_t v13 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v13)
  {
    uint64_t v27 = a3;
    int v28 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
    {
      int v23 = &v28;
      int v24 = &v27;
      uint64_t v29 = &v23;
      std::__call_once(v13, &v29, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    int v12 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)];
  }
  if (a4 == 1 && v12 == 8)
  {
LABEL_13:
    if (!a6) {
      goto LABEL_19;
    }
  }
  else
  {
    if (!a6) {
      goto LABEL_19;
    }
  }
  if (google::protobuf::FieldDescriptor::message_type(a3) != a6)
  {
    LODWORD(v23) = 3;
    int v24 = (google::protobuf::Descriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/prot"
                                           "obuf/generated_message_reflection.cc";
    int v25 = 1789;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (field->message_type()) == (desc): ");
    std::string::append(&__p, "wrong submessage type");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v23);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
LABEL_19:
  if (*((unsigned char *)a3 + 67))
  {
    uint64_t v14 = (google::protobuf::internal::ExtensionSet *)(a2 + *(unsigned int *)(a1 + 40));
    int v15 = *((_DWORD *)a3 + 17);
    int v16 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v16)
    {
      uint64_t v27 = a3;
      int v28 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v16, memory_order_acquire) != -1)
      {
        int v23 = &v28;
        int v24 = &v27;
        uint64_t v29 = &v23;
        std::__call_once(v16, &v29, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    int v17 = *((unsigned __int8 *)a3 + 56);
    char is_packed = google::protobuf::FieldDescriptor::is_packed(a3);
    return google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(v14, v15, v17, is_packed, a3);
  }
  else
  {
    unsigned int FieldOffsetNonOneof = google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof(*(void *)(a1 + 16), (uint64_t)a3);
    uint64_t v19 = a2 + FieldOffsetNonOneof;
    if (IsMapFieldInApi)
    {
      google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap((atomic_uint *)(a2 + FieldOffsetNonOneof));
      *(_DWORD *)(v19 + 88) = 1;
      return *(uint64_t **)(v19 + 16);
    }
  }
  return (uint64_t *)v19;
}

void sub_1891CEC64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *google::protobuf::Reflection::GetRawRepeatedField(uint64_t a1, uint64_t a2, google::protobuf::Descriptor *a3, int a4, const char *a5, uint64_t a6)
{
  int v7 = (int)a5;
  if (*((_DWORD *)a3 + 15) != 3) {
      a5);
  }
  int v12 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v12)
  {
    uint64_t v26 = a3;
    uint64_t v27 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
    {
      uint64_t v22 = &v27;
      int v23 = &v26;
      int v28 = &v22;
      std::__call_once(v12, &v28, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != a4) {
  if (v7 < 0
  }
    || *(_DWORD *)(*((void *)a3 + 15) + 72) == v7
    || (LODWORD(v22) = 3,
        int v23 = (google::protobuf::Descriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/"
                                               "protobuf/generated_message_reflection.cc",
        int v24 = 1813,
        memset(&__p, 0, sizeof(__p)),
        std::string::append(&__p, "CHECK failed: (field->options().ctype()) == (ctype): "),
        std::string::append(&__p, "subtype mismatch"),
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v22),
        (SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0))
  {
    if (!a6) {
      goto LABEL_16;
    }
  }
  else
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (!a6) {
      goto LABEL_16;
    }
  }
  if (google::protobuf::FieldDescriptor::message_type(a3) != a6)
  {
    LODWORD(v22) = 3;
    int v23 = (google::protobuf::Descriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/prot"
                                           "obuf/generated_message_reflection.cc";
    int v24 = 1815;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (field->message_type()) == (desc): ");
    std::string::append(&__p, "wrong submessage type");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v22);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
LABEL_16:
  if (*((unsigned char *)a3 + 67))
  {
    uint64_t v13 = (google::protobuf::internal::ExtensionSet *)(a2 + *(unsigned int *)(a1 + 40));
    int v14 = *((_DWORD *)a3 + 17);
    int v15 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v15)
    {
      uint64_t v26 = a3;
      uint64_t v27 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v15, memory_order_acquire) != -1)
      {
        uint64_t v22 = &v27;
        int v23 = &v26;
        int v28 = &v22;
        std::__call_once(v15, &v28, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    int v16 = *((unsigned __int8 *)a3 + 56);
    char is_packed = google::protobuf::FieldDescriptor::is_packed(a3);
    return google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(v13, v14, v16, is_packed, a3);
  }
  else
  {
    unsigned int FieldOffsetNonOneof = google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof(*(void *)(a1 + 16), (uint64_t)a3);
    uint64_t v18 = a2 + FieldOffsetNonOneof;
    if (IsMapFieldInApi)
    {
      google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap((atomic_uint *)(a2 + FieldOffsetNonOneof));
      return *(uint64_t **)(v18 + 16);
    }
  }
  return (uint64_t *)v18;
}

void sub_1891CEF30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::Reflection::GetOneofFieldDescriptor(uint64_t a1, const google::protobuf::Message *a2, uint64_t a3, uint64_t a4, const char *a5)
{
  if (*(_DWORD *)(a3 + 24) == 1 && (uint64_t v5 = **(void **)(a3 + 32), *(unsigned char *)(v5 + 65)))
  {
    if (google::protobuf::Reflection::HasField((google::protobuf::_anonymous_namespace_ **)a1, a2, **(const google::protobuf::FieldDescriptor ***)(a3 + 32), a4, a5))return v5; {
    else
    }
      return 0;
  }
  else
  {
    int v7 = *(_DWORD *)((char *)a2
                   + *(_DWORD *)(a1 + 44)
                   - 1431655764 * ((unint64_t)(a3 - *(void *)(*(void *)(a3 + 16) + 48)) >> 4));
    if (v7)
    {
      uint64_t v8 = *(google::protobuf::Descriptor **)a1;
      return google::protobuf::Descriptor::FindFieldByNumber(v8, v7);
    }
    else
    {
      return 0;
    }
  }
}

uint64_t google::protobuf::Reflection::LookupMapValue(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, const google::protobuf::MapKey *a4, google::protobuf::MapValueConstRef *a5)
{
  uint64_t v11 = google::protobuf::FieldDescriptor::message_type(a3);
  std::string::basic_string[abi:ne180100]<0>(__p, "value");
  uint64_t FieldByName = google::protobuf::Descriptor::FindFieldByName(v11, (uint64_t *)__p, v12);
  int v14 = *(std::once_flag::_State_type **)(FieldByName + 48);
  if (v14)
  {
    uint64_t v19 = FieldByName;
    uint64_t v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v14, memory_order_acquire) != -1)
    {
      v22[0] = &v20;
      v22[1] = &v19;
      uint64_t v21 = v22;
      std::__call_once(v14, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  *((_DWORD *)a5 + 2) = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(FieldByName + 56)];
  if (v18 < 0) {
    operator delete(__p[0]);
  }
  unsigned int FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3);
  return (*(uint64_t (**)(char *, const google::protobuf::MapKey *, google::protobuf::MapValueConstRef *))(*(void *)((char *)a2 + FieldOffset) + 32))((char *)a2 + FieldOffset, a4, a5);
}

void sub_1891CF13C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::Reflection::MapBegin@<X0>(google::protobuf::_anonymous_namespace_ **this@<X0>, google::protobuf::Message *a2@<X1>, const google::protobuf::FieldDescriptor *a3@<X2>, google::protobuf::MapIterator *a4@<X8>)
{
  google::protobuf::MapIterator::MapIterator(a4, a2, a3);
  unsigned int FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3);
  return (*(uint64_t (**)(char *, google::protobuf::MapIterator *))(*(void *)((char *)a2 + FieldOffset)
                                                                            + 56))((char *)a2 + FieldOffset, a4);
}

void sub_1891CF1FC(_Unwind_Exception *a1)
{
  google::protobuf::MapIterator::~MapIterator(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Reflection::MapEnd@<X0>(google::protobuf::_anonymous_namespace_ **this@<X0>, google::protobuf::Message *a2@<X1>, const google::protobuf::FieldDescriptor *a3@<X2>, google::protobuf::MapIterator *a4@<X8>)
{
  google::protobuf::MapIterator::MapIterator(a4, a2, a3);
  unsigned int FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3);
  return (*(uint64_t (**)(char *, google::protobuf::MapIterator *))(*(void *)((char *)a2 + FieldOffset)
                                                                            + 64))((char *)a2 + FieldOffset, a4);
}

void sub_1891CF2B4(_Unwind_Exception *a1)
{
  google::protobuf::MapIterator::~MapIterator(v1);
  _Unwind_Resume(a1);
}

_DWORD *google::protobuf::Reflection::HasOneof(uint64_t a1, const google::protobuf::Message *a2, uint64_t a3, uint64_t a4, const char *a5)
{
  if (*(_DWORD *)(a3 + 24) == 1 && *(unsigned char *)(**(void **)(a3 + 32) + 65)) {
    return google::protobuf::Reflection::HasField((google::protobuf::_anonymous_namespace_ **)a1, a2, **(const google::protobuf::FieldDescriptor ***)(a3 + 32), a4, a5);
  }
  else {
    return (_DWORD *)(*(_DWORD *)((char *)a2
  }
                                + *(_DWORD *)(a1 + 44)
                                - 1431655764
                                * ((unint64_t)(a3 - *(void *)(*(void *)(a3 + 16) + 48)) >> 4)) != 0);
}

uint64_t *google::protobuf::Reflection::RepeatedFieldData(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *this, int a4, uint64_t a5)
{
  if (*((_DWORD *)this + 15) != 3)
  {
    LODWORD(v19) = 3;
    uint64_t v20 = (google::protobuf::FieldDescriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google"
                                                "/protobuf/generated_message_reflection.cc";
    int v21 = 2281;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: field->is_repeated(): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v19);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  uint64_t v10 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v10)
  {
    int v23 = this;
    int v24 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      uint64_t v19 = &v24;
      uint64_t v20 = &v23;
      int v25 = &v19;
      std::__call_once(v10, &v25, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v11 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)this + 14)];
  if (v11 == a4) {
    goto LABEL_15;
  }
  int v12 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v12)
  {
    int v23 = this;
    int v24 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
    {
      uint64_t v19 = &v24;
      uint64_t v20 = &v23;
      int v25 = &v19;
      std::__call_once(v12, &v25, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    int v11 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)this + 14)];
  }
  if (a4 == 1 && v11 == 8) {
    goto LABEL_15;
  }
  LODWORD(v19) = 3;
  uint64_t v20 = (google::protobuf::FieldDescriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/p"
                                              "rotobuf/generated_message_reflection.cc";
  int v21 = 2284;
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "CHECK failed: field->cpp_type() == cpp_type || (field->cpp_type() == FieldDescriptor::CPPTYPE_ENUM && cpp_type == FieldDescriptor::CPPTYPE_INT32): ");
  std::string::append(&__p, "The type parameter T in RepeatedFieldRef<T> API doesn't match ");
  std::string::append(&__p, "the actual field type (for enums T should be the generated enum ");
  std::string::append(&__p, "type or int32).");
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v19);
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_15:
    if (!a5) {
      goto LABEL_19;
    }
  }
  else
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (!a5) {
      goto LABEL_19;
    }
  }
  if (google::protobuf::FieldDescriptor::message_type(this) != a5)
  {
    LODWORD(v19) = 3;
    uint64_t v20 = (google::protobuf::FieldDescriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google"
                                                "/protobuf/generated_message_reflection.cc";
    int v21 = 2289;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (message_type) == (field->message_type()): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v19);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
LABEL_19:
  if (!*((unsigned char *)this + 67)) {
    return (uint64_t *)(a2
  }
                     + google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof(*(void *)(a1 + 16), (uint64_t)this));
  uint64_t v13 = (google::protobuf::internal::ExtensionSet *)(a2 + *(unsigned int *)(a1 + 40));
  int v14 = *((_DWORD *)this + 17);
  int v15 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v15)
  {
    int v23 = this;
    int v24 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v15, memory_order_acquire) != -1)
    {
      uint64_t v19 = &v24;
      uint64_t v20 = &v23;
      int v25 = &v19;
      std::__call_once(v15, &v25, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v16 = *((unsigned __int8 *)this + 56);
  char is_packed = google::protobuf::FieldDescriptor::is_packed(this);
  return google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(v13, v14, v16, is_packed, this);
}

void sub_1891CF61C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::Reflection::MutableMapData(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  return (uint64_t)a2
       + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3);
}

void google::protobuf::internal::AssignDescriptors(uint64_t a1, char a2)
{
  uint64_t v4 = a1;
  char v3 = a2;
  if ((a2 & 1) == 0) {
    char v3 = *(unsigned char *)(a1 + 1);
  }
  int v2 = *(std::once_flag::_State_type **)(a1 + 32);
  if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
  {
    v6[1] = &v4;
    std::string v6[2] = &v3;
    uint64_t v5 = v6;
    std::__call_once(v2, &v5, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::internal::DescriptorTable const*,BOOL),google::protobuf::internal::DescriptorTable const*&,BOOL &>>);
  }
}

void google::protobuf::anonymous namespace'::AssignDescriptorsImpl(uint64_t a1, int a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_172, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_172))
  {
    __cxa_guard_release(&_MergedGlobals_172);
  }
  google::protobuf::internal::AddDescriptors(a1);
  if (a2)
  {
    uint64_t v5 = *(unsigned int *)(a1 + 60);
    if ((int)v5 >= 1)
    {
      uint64_t v6 = 0;
      uint64_t v7 = 8 * v5;
      do
      {
        uint64_t v4 = *(google::protobuf::DescriptorPool **)(*(void *)(a1 + 48) + v6);
        if (v4) {
          uint64_t v4 = (google::protobuf::DescriptorPool *)google::protobuf::internal::AssignDescriptors(v4, 1);
        }
        v6 += 8;
      }
      while (v7 != v6);
    }
  }
  uint64_t v8 = google::protobuf::DescriptorPool::internal_generated_pool(v4);
  std::string::basic_string[abi:ne180100]<0>(&__p, *(char **)(a1 + 16));
  FileByName = (google::protobuf::_anonymous_namespace_::GeneratedMessageFactory *)google::protobuf::DescriptorPool::FindFileByName(v8, (uint64_t *)&__p, v9);
  int v11 = FileByName;
  if (SHIBYTE(v39) < 0)
  {
    operator delete(__p);
    if (v11) {
      goto LABEL_14;
    }
  }
  else if (FileByName)
  {
    goto LABEL_14;
  }
  LODWORD(__p) = 3;
  uint64_t v38 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_message_reflection.cc";
  LODWORD(v39) = 2452;
  memset(&v40, 0, sizeof(v40));
  std::string::append(&v40, "CHECK failed: file != nullptr: ");
  FileByName = (google::protobuf::_anonymous_namespace_::GeneratedMessageFactory *)google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__p);
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v40.__r_.__value_.__l.__data_);
  }
LABEL_14:
  uint64_t v13 = *(void **)(a1 + 104);
  std::string::size_type v15 = *(void *)(a1 + 80);
  int v14 = *(const char **)(a1 + 88);
  std::string __p = v12;
  uint64_t v38 = v14;
  uint64_t v39 = v13;
  *(_OWORD *)&v40.__r_.__value_.__l.__data_ = *(_OWORD *)(a1 + 64);
  v40.__r_.__value_.__r.__words[2] = v15;
  if (*((int *)v11 + 11) >= 1) {
    google::protobuf::AssignDescriptorsHelper::AssignMessageDescriptor((google::protobuf::AssignDescriptorsHelper *)&__p, *((const google::protobuf::Descriptor **)v11 + 13));
  }
  uint64_t v16 = *((unsigned int *)v11 + 12);
  if ((int)v16 >= 1)
  {
    uint64_t v17 = 0;
    char v18 = v39;
    uint64_t v19 = 80 * v16;
    do
    {
      *v18++ = *((void *)v11 + 14) + v17;
      v17 += 80;
    }
    while (v19 != v17);
    uint64_t v39 = v18;
  }
  if (*(unsigned char *)(*((void *)v11 + 17) + 155))
  {
    uint64_t v20 = *((unsigned int *)v11 + 13);
    if ((int)v20 >= 1)
    {
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = 48 * v20;
      do
      {
        *(void *)(*(void *)(a1 + 112) + v21) = *((void *)v11 + 15) + v22;
        v22 += 48;
        v21 += 8;
      }
      while (v23 != v22);
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29F288, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1EB29F288))
  {
    operator new();
  }
  uint64_t v24 = qword_1EB29F280;
  uint64_t v25 = *(void *)(a1 + 88);
  uint64_t v26 = v38;
  std::mutex::lock((std::mutex *)qword_1EB29F280);
  int v28 = *(char **)(v24 + 72);
  unint64_t v27 = *(void *)(v24 + 80);
  if ((unint64_t)v28 >= v27)
  {
    BOOL v30 = *(char **)(v24 + 64);
    uint64_t v31 = (v28 - v30) >> 4;
    unint64_t v32 = v31 + 1;
    if ((unint64_t)(v31 + 1) >> 60) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v33 = v27 - (void)v30;
    if (v33 >> 3 > v32) {
      unint64_t v32 = v33 >> 3;
    }
    if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v34 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v34 = v32;
    }
    if (v34)
    {
      if (v34 >> 60) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      uint64_t v35 = (char *)operator new(16 * v34);
    }
    else
    {
      uint64_t v35 = 0;
    }
    uint64_t v36 = &v35[16 * v31];
    *(void *)uint64_t v36 = v25;
    *((void *)v36 + 1) = v26;
    uint64_t v29 = v36 + 16;
    if (v28 != v30)
    {
      do
      {
        *((_OWORD *)v36 - 1) = *((_OWORD *)v28 - 1);
        v36 -= 16;
        v28 -= 16;
      }
      while (v28 != v30);
      int v28 = *(char **)(v24 + 64);
    }
    *(void *)(v24 + 64) = v36;
    *(void *)(v24 + 72) = v29;
    *(void *)(v24 + 80) = &v35[16 * v34];
    if (v28) {
      operator delete(v28);
    }
  }
  else
  {
    *(void *)int v28 = v25;
    *((void *)v28 + 1) = v26;
    uint64_t v29 = v28 + 16;
  }
  *(void *)(v24 + 72) = v29;
  std::mutex::unlock((std::mutex *)v24);
}

void sub_1891CFAF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
}

void google::protobuf::internal::AddDescriptors(uint64_t a1)
{
  if (!*(unsigned char *)a1)
  {
    *(unsigned char *)a1 = 1;
    if (*(int *)(a1 + 56) >= 1)
    {
      uint64_t v2 = 0;
      do
      {
        char v3 = *(atomic_uint **)(*(void *)(a1 + 40) + 8 * v2);
        if (atomic_load_explicit(v3, memory_order_acquire)) {
          google::protobuf::internal::InitSCCImpl(v3);
        }
        ++v2;
      }
      while (v2 < *(int *)(a1 + 56));
    }
    uint64_t v4 = *(unsigned int *)(a1 + 60);
    if ((int)v4 >= 1)
    {
      uint64_t v5 = 0;
      uint64_t v6 = 8 * v4;
      do
      {
        if (*(void *)(*(void *)(a1 + 48) + v5)) {
          google::protobuf::internal::AddDescriptors();
        }
        v5 += 8;
      }
      while (v6 != v5);
    }
    google::protobuf::DescriptorPool::InternalAddGeneratedFile(*(google::protobuf::DescriptorPool **)(a1 + 8), (const void *)*(unsigned int *)(a1 + 24));
    google::protobuf::MessageFactory::InternalRegisterGeneratedFile((const char **)a1);
  }
}

void google::protobuf::internal::RegisterFileLevelMetadata(uint64_t a1)
{
  google::protobuf::internal::AssignDescriptors(a1, 0);
  uint64_t v3 = *(unsigned int *)(a1 + 96);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = *(void *)(a1 + 88) + 8;
    do
    {
      google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(*(const std::string::value_type ***)(v4 - 8), *(const google::protobuf::Descriptor **)(*(void *)v4 + 8), v2);
      v4 += 16;
      --v3;
    }
    while (v3);
  }
}

uint64_t google::protobuf::internal::ReflectionSchema::GetFieldOffset(google::protobuf::internal::ReflectionSchema *this, const google::protobuf::FieldDescriptor *a2)
{
  uint64_t v2 = *((void *)a2 + 11);
  if (!v2 || *(_DWORD *)(v2 + 24) == 1 && *(unsigned char *)(**(void **)(v2 + 32) + 65))
  {
    uint64_t v3 = *((void *)this + 1);
    return google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof(v3, (uint64_t)a2);
  }
  else
  {
    int v5 = *(_DWORD *)(*((void *)this + 1)
                   + 4
                   * (int)(*(_DWORD *)(*((void *)a2 + 10) + 104)
                         - 1431655765 * ((unint64_t)(v2 - *(void *)(*(void *)(v2 + 16) + 48)) >> 4)));
    uint64_t v6 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    if (v6)
    {
      uint64_t v7 = a2;
      uint64_t v8 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v6, memory_order_acquire) != -1)
      {
        v10[0] = &v8;
        v10[1] = &v7;
        int v9 = v10;
        std::__call_once(v6, &v9, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    return v5 & 0x7FFFFFFF;
  }
}

uint64_t google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 67))
  {
    uint64_t v2 = *(void *)(a2 + 96);
    if (v2) {
      uint64_t v3 = (void *)(v2 + 80);
    }
    else {
      uint64_t v3 = (void *)(*(void *)(a2 + 40) + 128);
    }
  }
  else
  {
    uint64_t v3 = (void *)(*(void *)(a2 + 80) + 40);
  }
  int v4 = *(_DWORD *)(a1 + 4 * (int)(678152731 * ((unint64_t)(a2 - *v3) >> 3)));
  int v5 = *(std::once_flag::_State_type **)(a2 + 48);
  if (v5)
  {
    uint64_t v7 = a2;
    uint64_t v8 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v5, memory_order_acquire) != -1)
    {
      v10[0] = &v8;
      v10[1] = &v7;
      int v9 = v10;
      std::__call_once(v5, &v9, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return v4 & 0x7FFFFFFF;
}

void google::protobuf::AssignDescriptorsHelper::AssignMessageDescriptor(google::protobuf::AssignDescriptorsHelper *this, const google::protobuf::Descriptor *a2)
{
  if (*((int *)a2 + 29) >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    do
    {
      google::protobuf::AssignDescriptorsHelper::AssignMessageDescriptor(this, (const google::protobuf::Descriptor *)(*((void *)a2 + 7) + v4));
      ++v5;
      v4 += 144;
    }
    while (v5 < *((int *)a2 + 29));
  }
  **((void **)this + 1) = a2;
  operator new();
}

void sub_1891CFFE8(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F580](v1, 0x1070C4026DFEB36);
  _Unwind_Resume(a1);
}

std::mutex *google::protobuf::internal::OnShutdownDelete<google::protobuf::anonymous namespace'::MetadataOwner>(google::protobuf::anonymous namespace'::MetadataOwner *)::{lambda(void const*)#1}::__invoke(std::mutex *this)
{
  if (this)
  {
    uint64_t v1 = this;
    sig = (unint64_t *)this[1].__m_.__sig;
    uint64_t v3 = *(unint64_t **)this[1].__m_.__opaque;
    if (sig != v3)
    {
      do
      {
        unint64_t v4 = *sig;
        unint64_t v5 = sig[1];
        while (v4 < v5)
        {
          uint64_t v6 = *(void *)(v4 + 8);
          if (v6) {
            MEMORY[0x18C11F580](v6, 0x1070C4026DFEB36);
          }
          v4 += 16;
        }
        sig += 2;
      }
      while (sig != v3);
      sig = (unint64_t *)v1[1].__m_.__sig;
    }
    if (sig)
    {
      *(void *)v1[1].__m_.__opaque = sig;
      operator delete(sig);
    }
    std::mutex::~mutex(v1);
    JUMPOUT(0x18C11F580);
  }
  return this;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(result + 16) + 8;
    do
    {
      uint64_t v3 = *(void *)v2;
      if (*(char *)(*(void *)v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
      }
      v2 += 8;
      --v1;
    }
    while (v1);
    *(_DWORD *)(result + 8) = 0;
  }
  return result;
}

uint64_t google::protobuf::internal::ReflectionSchema::GetFieldDefault(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a3 + 67))
  {
    uint64_t v4 = *(void *)(a3 + 96);
    if (v4) {
      unint64_t v5 = (void *)(v4 + 80);
    }
    else {
      unint64_t v5 = (void *)(*(void *)(a3 + 40) + 128);
    }
  }
  else
  {
    unint64_t v5 = (void *)(*(void *)(a3 + 80) + 40);
  }
  int v6 = *(_DWORD *)(a2 + 4 * (int)(678152731 * ((unint64_t)(a3 - *v5) >> 3)));
  uint64_t v7 = *(std::once_flag::_State_type **)(a3 + 48);
  if (v7)
  {
    uint64_t v9 = a3;
    uint64_t v10 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
    {
      v12[0] = &v10;
      v12[1] = &v9;
      int v11 = v12;
      std::__call_once(v7, &v11, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return a1 + (v6 & 0x7FFFFFFF);
}

void google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::internal::GenericTypeHandler<std::string>>(google::protobuf::internal::RepeatedPtrFieldBase *this, uint64_t *a2)
{
  unint64_t v4 = *a2;
  v24.__r_.__value_.__r.__words[2] = 0;
  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v4;
  unsigned int v5 = *((_DWORD *)this + 2);
  if (v5)
  {
    int v6 = (std::string **)(*((void *)this + 2) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v24, v5);
    uint64_t v8 = (_DWORD *)v24.__r_.__value_.__r.__words[2];
    int v9 = v24.__r_.__value_.__r.__words[1];
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::internal::GenericTypeHandler<std::string>>(&v24, (std::string **)v7, v6, v5, *(_DWORD *)v24.__r_.__value_.__r.__words[2] - LODWORD(v24.__r_.__value_.__r.__words[1]));
    LODWORD(v24.__r_.__value_.__r.__words[1]) = v9 + v5;
    if (*v8 < (signed int)(v9 + v5)) {
      *uint64_t v8 = v9 + v5;
    }
    uint64_t v10 = *((unsigned int *)this + 2);
    if ((int)v10 >= 1)
    {
      uint64_t v11 = *((void *)this + 2) + 8;
      do
      {
        uint64_t v12 = *(void *)v11;
        if (*(char *)(*(void *)v11 + 23) < 0)
        {
          **(unsigned char **)uint64_t v12 = 0;
          *(void *)(v12 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v12 = 0;
          *(unsigned char *)(v12 + 23) = 0;
        }
        v11 += 8;
        --v10;
      }
      while (v10);
      *((_DWORD *)this + 2) = 0;
    }
  }
  int v14 = a2 + 1;
  unsigned int v13 = *((_DWORD *)a2 + 2);
  if (v13)
  {
    std::string::size_type v15 = (std::string **)(a2[2] + 8);
    uint64_t v16 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v13);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::internal::GenericTypeHandler<std::string>>((std::string *)this, (std::string **)v16, v15, v13, **((_DWORD **)this + 2) - *((_DWORD *)this + 2));
    signed int v17 = *((_DWORD *)this + 2) + v13;
    *((_DWORD *)this + 2) = v17;
    char v18 = (signed int *)*((void *)this + 2);
    if (*v18 < v17) {
      *char v18 = v17;
    }
  }
  uint64_t v19 = (unsigned int *)v14[1];
  *(_OWORD *)int v14 = *(_OWORD *)&v24.__r_.__value_.__r.__words[1];
  if (v19) {
    BOOL v20 = v24.__r_.__value_.__r.__words[0] == 0;
  }
  else {
    BOOL v20 = 0;
  }
  if (v20)
  {
    uint64_t v21 = (uint64_t *)(v19 + 2);
    uint64_t v22 = *v19;
    if ((int)v22 >= 1)
    {
      do
      {
        uint64_t v23 = *v21;
        if (*v21)
        {
          if (*(char *)(v23 + 23) < 0) {
            operator delete(*(void **)v23);
          }
          MEMORY[0x18C11F580](v23, 0x1012C40EC159624);
        }
        ++v21;
        --v22;
      }
      while (v22);
    }
    operator delete(v19);
  }
}

std::string *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::internal::GenericTypeHandler<std::string>>(std::string *result, std::string **a2, std::string **a3, unsigned int a4, unsigned int a5)
{
  int v9 = (std::string::__raw *)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    uint64_t v12 = a2;
    do
    {
      int v14 = *v11++;
      unsigned int v13 = v14;
      std::string::size_type v15 = *v12++;
      uint64_t result = google::protobuf::internal::GenericTypeHandler<std::string>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    std::string::size_type v18 = v9->__words[0];
    uint64_t v19 = &a2[a5];
    BOOL v20 = &a3[a5];
    do
    {
      uint64_t v21 = *v20;
      if (!v18) {
        operator new();
      }
      if (*(unsigned char *)(v18 + 24)) {
      AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v18, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
      }
      AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
      AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
      AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
      uint64_t result = google::protobuf::internal::GenericTypeHandler<std::string>::Merge(v21, AlignedAndAddCleanup);
      *v19++ = AlignedAndAddCleanup;
      ++v20;
      --v17;
    }
    while (v17);
  }
  return result;
}

void google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>>(google::protobuf::internal::RepeatedPtrFieldBase *this, uint64_t *a2)
{
  uint64_t v4 = *a2;
  long long v24 = 0uLL;
  uint64_t v23 = v4;
  unsigned int v5 = *((_DWORD *)this + 2);
  if (v5)
  {
    int v6 = (uint64_t *)(*((void *)this + 2) + 8);
    uint64_t v7 = (uint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v23, v5);
    uint64_t v8 = (_DWORD *)*((void *)&v24 + 1);
    int v9 = v24;
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>>((uint64_t)&v23, v7, v6, v5, **((_DWORD **)&v24 + 1) - v24);
    LODWORD(v24) = v9 + v5;
    if (*v8 < (signed int)(v9 + v5)) {
      *uint64_t v8 = v9 + v5;
    }
    uint64_t v10 = *((unsigned int *)this + 2);
    if ((int)v10 >= 1)
    {
      uint64_t v11 = (uint64_t *)(*((void *)this + 2) + 8);
      do
      {
        uint64_t v12 = *v11++;
        (*(void (**)(uint64_t))(*(void *)v12 + 40))(v12);
        --v10;
      }
      while (v10);
      *((_DWORD *)this + 2) = 0;
    }
  }
  int v14 = a2 + 1;
  unsigned int v13 = *((_DWORD *)a2 + 2);
  if (v13)
  {
    std::string::size_type v15 = (uint64_t *)(a2[2] + 8);
    BOOL v16 = (uint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v13);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>>((uint64_t)this, v16, v15, v13, **((_DWORD **)this + 2) - *((_DWORD *)this + 2));
    signed int v17 = *((_DWORD *)this + 2) + v13;
    *((_DWORD *)this + 2) = v17;
    std::string::size_type v18 = (signed int *)*((void *)this + 2);
    if (*v18 < v17) {
      *std::string::size_type v18 = v17;
    }
  }
  uint64_t v19 = (unsigned int *)v14[1];
  *(_OWORD *)int v14 = v24;
  if (v19) {
    BOOL v20 = v23 == 0;
  }
  else {
    BOOL v20 = 0;
  }
  if (v20)
  {
    uint64_t v21 = v19 + 2;
    uint64_t v22 = *v19;
    if ((int)v22 >= 1)
    {
      do
      {
        if (*v21) {
          (*(void (**)(void))(*(void *)*v21 + 8))(*v21);
        }
        ++v21;
        --v22;
      }
      while (v22);
    }
    operator delete(v19);
  }
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>>(uint64_t result, uint64_t *a2, uint64_t *a3, unsigned int a4, unsigned int a5)
{
  int v9 = (uint64_t *)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    uint64_t v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      uint64_t v13 = v14;
      uint64_t v15 = *v12++;
      uint64_t result = google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a2[a5];
    BOOL v20 = &a3[a5];
    do
    {
      uint64_t v21 = *v20++;
      uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v21 + 32))(v21, v18);
      uint64_t result = google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>::Merge(v21, v22);
      *v19++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,google::protobuf::anonymous namespace'::FieldNumberSorter &,google::protobuf::FieldDescriptor const**,false>(uint64_t result, uint64_t *a2, uint64_t a3, char a4)
{
  int v9 = (uint64_t *)result;
  while (2)
  {
    uint64_t v10 = v9;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v9 = v10;
          uint64_t v11 = (char *)a2 - (char *)v10;
          unint64_t v12 = a2 - v10;
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0uLL:
              case 1uLL:
                return result;
              case 2uLL:
                uint64_t v40 = *(a2 - 1);
                uint64_t v41 = *v10;
                if (*(_DWORD *)(v40 + 68) < *(_DWORD *)(*v10 + 68))
                {
                  uint64_t *v10 = v40;
                  *(a2 - 1) = v41;
                }
                break;
              case 3uLL:
                break;
              case 4uLL:
                break;
              case 5uLL:
                int v42 = v10 + 1;
                uint64_t v43 = v10 + 2;
                uint64_t v44 = v10 + 3;
                uint64_t v45 = *(a2 - 1);
                uint64_t v46 = v10[3];
                if (*(_DWORD *)(v45 + 68) < *(_DWORD *)(v46 + 68))
                {
                  *uint64_t v44 = v45;
                  *(a2 - 1) = v46;
                  uint64_t v47 = *v44;
                  uint64_t v48 = *v43;
                  int v49 = *(_DWORD *)(*v44 + 68);
                  if (v49 < *(_DWORD *)(*v43 + 68))
                  {
                    uint64_t *v43 = v47;
                    *uint64_t v44 = v48;
                    uint64_t v50 = *v42;
                    if (v49 < *(_DWORD *)(*v42 + 68))
                    {
                      v10[1] = v47;
                      void v10[2] = v50;
                      uint64_t v51 = *v10;
                      if (v49 < *(_DWORD *)(*v10 + 68))
                      {
                        uint64_t *v10 = v47;
                        v10[1] = v51;
                      }
                    }
                  }
                }
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v11 <= 191)
          {
            unsigned int v52 = v10 + 1;
            BOOL v54 = v10 == a2 || v52 == a2;
            if (a4)
            {
              if (!v54)
              {
                uint64_t v55 = 8;
                unsigned int v56 = v10;
                do
                {
                  uint64_t v58 = *v56;
                  uint64_t v57 = v56[1];
                  unsigned int v56 = v52;
                  int v59 = *(_DWORD *)(v57 + 68);
                  if (v59 < *(_DWORD *)(v58 + 68))
                  {
                    uint64_t v60 = v55;
                    do
                    {
                      *(uint64_t *)((char *)v10 + v60) = v58;
                      uint64_t v61 = v60 - 8;
                      if (v60 == 8)
                      {
                        unsigned int v62 = v10;
                        goto LABEL_85;
                      }
                      uint64_t v58 = *(uint64_t *)((char *)v10 + v60 - 16);
                      v60 -= 8;
                    }
                    while (v59 < *(_DWORD *)(v58 + 68));
                    unsigned int v62 = (uint64_t *)((char *)v10 + v61);
LABEL_85:
                    uint64_t *v62 = v57;
                  }
                  unsigned int v52 = v56 + 1;
                  v55 += 8;
                }
                while (v56 + 1 != a2);
              }
            }
            else if (!v54)
            {
              do
              {
                uint64_t v93 = *v9;
                uint64_t v92 = v9[1];
                int v9 = v52;
                int v94 = *(_DWORD *)(v92 + 68);
                if (v94 < *(_DWORD *)(v93 + 68))
                {
                  do
                  {
                    uint64_t *v52 = v93;
                    uint64_t v93 = *(v52 - 2);
                    --v52;
                  }
                  while (v94 < *(_DWORD *)(v93 + 68));
                  uint64_t *v52 = v92;
                }
                unsigned int v52 = v9 + 1;
              }
              while (v9 + 1 != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v10 != a2)
            {
              int64_t v63 = (v12 - 2) >> 1;
              int64_t v64 = v63;
              do
              {
                int64_t v65 = v64;
                if (v63 >= v64)
                {
                  uint64_t v66 = (2 * v64) | 1;
                  unsigned int v67 = &v10[v66];
                  uint64_t v68 = *v67;
                  if (2 * v65 + 2 < (uint64_t)v12)
                  {
                    uint64_t result = *(unsigned int *)(v68 + 68);
                    if ((int)result < *(_DWORD *)(v67[1] + 68))
                    {
                      uint64_t v68 = v67[1];
                      ++v67;
                      uint64_t v66 = 2 * v65 + 2;
                    }
                  }
                  uint64_t v69 = &v10[v65];
                  uint64_t v70 = *v69;
                  int v71 = *(_DWORD *)(*v69 + 68);
                  if (*(_DWORD *)(v68 + 68) >= v71)
                  {
                    do
                    {
                      unsigned int v72 = v67;
                      *uint64_t v69 = v68;
                      if (v63 < v66) {
                        break;
                      }
                      uint64_t result = (2 * v66) | 1;
                      unsigned int v67 = &v10[result];
                      uint64_t v73 = 2 * v66 + 2;
                      uint64_t v68 = *v67;
                      if (v73 < (uint64_t)v12 && *(_DWORD *)(v68 + 68) < *(_DWORD *)(v67[1] + 68))
                      {
                        uint64_t v68 = v67[1];
                        ++v67;
                        uint64_t result = v73;
                      }
                      uint64_t v69 = v72;
                      uint64_t v66 = result;
                    }
                    while (*(_DWORD *)(v68 + 68) >= v71);
                    uint64_t *v72 = v70;
                  }
                }
                int64_t v64 = v65 - 1;
              }
              while (v65);
              uint64_t v74 = (unint64_t)v11 >> 3;
              do
              {
                uint64_t v75 = 0;
                uint64_t v76 = *v10;
                std::string::size_type v77 = v10;
                do
                {
                  uint64_t v78 = &v77[v75];
                  uint64_t v81 = v78[1];
                  unsigned int v79 = v78 + 1;
                  uint64_t v80 = v81;
                  uint64_t v82 = (2 * v75) | 1;
                  uint64_t v83 = 2 * v75 + 2;
                  if (v83 < v74)
                  {
                    uint64_t result = *(unsigned int *)(v80 + 68);
                    if ((int)result < *(_DWORD *)(v79[1] + 68))
                    {
                      uint64_t v80 = v79[1];
                      ++v79;
                      uint64_t v82 = v83;
                    }
                  }
                  *std::string::size_type v77 = v80;
                  std::string::size_type v77 = v79;
                  uint64_t v75 = v82;
                }
                while (v82 <= (uint64_t)((unint64_t)(v74 - 2) >> 1));
                if (v79 == --a2)
                {
                  *unsigned int v79 = v76;
                }
                else
                {
                  *unsigned int v79 = *a2;
                  *a2 = v76;
                  uint64_t v84 = (char *)v79 - (char *)v10 + 8;
                  if (v84 >= 9)
                  {
                    unint64_t v85 = (((unint64_t)v84 >> 3) - 2) >> 1;
                    int v86 = &v10[v85];
                    uint64_t v87 = *v86;
                    uint64_t v88 = *v79;
                    int v89 = *(_DWORD *)(*v79 + 68);
                    if (*(_DWORD *)(*v86 + 68) < v89)
                    {
                      do
                      {
                        char v90 = v86;
                        *unsigned int v79 = v87;
                        if (!v85) {
                          break;
                        }
                        unint64_t v85 = (v85 - 1) >> 1;
                        int v86 = &v10[v85];
                        uint64_t v87 = *v86;
                        unsigned int v79 = v90;
                      }
                      while (*(_DWORD *)(*v86 + 68) < v89);
                      *char v90 = v88;
                    }
                  }
                }
              }
              while (v74-- > 2);
            }
            return result;
          }
          unint64_t v13 = v12 >> 1;
          uint64_t v14 = &v10[v12 >> 1];
          if ((unint64_t)v11 >= 0x401)
          {
            uint64_t v15 = *v9;
            uint64_t *v9 = *v14;
            uint64_t *v14 = v15;
          }
          else
          {
          }
          --a3;
          uint64_t v16 = *v9;
          if (a4) {
            break;
          }
          int v17 = *(_DWORD *)(v16 + 68);
          if (*(_DWORD *)(*(v9 - 1) + 68) < v17) {
            goto LABEL_13;
          }
          if (v17 >= *(_DWORD *)(*(a2 - 1) + 68))
          {
            unint64_t v32 = v9 + 1;
            do
            {
              uint64_t v10 = v32;
              if (v32 >= a2) {
                break;
              }
              ++v32;
            }
            while (v17 >= *(_DWORD *)(*v10 + 68));
          }
          else
          {
            uint64_t v10 = v9;
            do
            {
              uint64_t v31 = v10[1];
              ++v10;
            }
            while (v17 >= *(_DWORD *)(v31 + 68));
          }
          uint64_t v33 = a2;
          if (v10 < a2)
          {
            uint64_t v33 = a2;
            do
              uint64_t v34 = *--v33;
            while (v17 < *(_DWORD *)(v34 + 68));
          }
          if (v10 < v33)
          {
            uint64_t v35 = *v10;
            uint64_t v36 = *v33;
            do
            {
              uint64_t *v10 = v36;
              *uint64_t v33 = v35;
              do
              {
                uint64_t v37 = v10[1];
                ++v10;
                uint64_t v35 = v37;
              }
              while (v17 >= *(_DWORD *)(v37 + 68));
              do
              {
                uint64_t v38 = *--v33;
                uint64_t v36 = v38;
              }
              while (v17 < *(_DWORD *)(v38 + 68));
            }
            while (v10 < v33);
          }
          uint64_t v39 = v10 - 1;
          BOOL v4 = v10 - 1 >= v9;
          BOOL v5 = v10 - 1 == v9;
          if (v10 - 1 != v9) {
            uint64_t *v9 = *v39;
          }
          a4 = 0;
          *uint64_t v39 = v16;
        }
        int v17 = *(_DWORD *)(v16 + 68);
LABEL_13:
        uint64_t v18 = 0;
        do
          uint64_t v19 = v9[++v18];
        while (*(_DWORD *)(v19 + 68) < v17);
        BOOL v20 = &v9[v18];
        uint64_t v21 = a2;
        if (v18 == 1)
        {
          uint64_t v21 = a2;
          do
          {
            if (v20 >= v21) {
              break;
            }
            uint64_t v23 = *--v21;
          }
          while (*(_DWORD *)(v23 + 68) >= v17);
        }
        else
        {
          do
            uint64_t v22 = *--v21;
          while (*(_DWORD *)(v22 + 68) >= v17);
        }
        if (v20 >= v21)
        {
          uint64_t v29 = v20 - 1;
        }
        else
        {
          uint64_t v24 = *v21;
          uint64_t v25 = &v9[v18];
          uint64_t v26 = v21;
          do
          {
            *uint64_t v25 = v24;
            *uint64_t v26 = v19;
            do
            {
              uint64_t v27 = v25[1];
              ++v25;
              uint64_t v19 = v27;
            }
            while (*(_DWORD *)(v27 + 68) < v17);
            do
            {
              uint64_t v28 = *--v26;
              uint64_t v24 = v28;
            }
            while (*(_DWORD *)(v28 + 68) >= v17);
          }
          while (v25 < v26);
          uint64_t v29 = v25 - 1;
        }
        if (v29 != v9) {
          uint64_t *v9 = *v29;
        }
        *uint64_t v29 = v16;
        if (v20 >= v21) {
          break;
        }
LABEL_34:
        a4 = 0;
        uint64_t v10 = v29 + 1;
      }
      uint64_t v10 = v29 + 1;
      if (result) {
        break;
      }
      if (!v30) {
        goto LABEL_34;
      }
    }
    a2 = v29;
    if (!v30) {
      continue;
    }
    return result;
  }
}

uint64_t *std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::anonymous namespace'::FieldNumberSorter &,google::protobuf::FieldDescriptor const**>(uint64_t *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *result;
  int v5 = *(_DWORD *)(*a2 + 68);
  int v6 = *(_DWORD *)(*result + 68);
  uint64_t v7 = *a3;
  int v8 = *(_DWORD *)(*a3 + 68);
  if (v5 >= v6)
  {
    if (v8 < v5)
    {
      *a2 = v7;
      *a3 = v3;
      uint64_t v9 = *result;
      if (*(_DWORD *)(*a2 + 68) < *(_DWORD *)(*result + 68))
      {
        *uint64_t result = *a2;
        *a2 = v9;
      }
    }
  }
  else
  {
    if (v8 >= v5)
    {
      *uint64_t result = v3;
      *a2 = v4;
      if (*(_DWORD *)(*a3 + 68) >= v6) {
        return result;
      }
      *a2 = *a3;
    }
    else
    {
      *uint64_t result = v7;
    }
    *a3 = v4;
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::anonymous namespace'::FieldNumberSorter &,google::protobuf::FieldDescriptor const**>(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v6 = *(a2 - 1);
      uint64_t v7 = *a1;
      if (*(_DWORD *)(v6 + 68) < *(_DWORD *)(*a1 + 68))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return result;
    case 3:
      return 1;
    case 4:
      return 1;
    case 5:
      uint64_t v18 = a1 + 1;
      uint64_t v19 = a1 + 2;
      BOOL v20 = a1 + 3;
      uint64_t v21 = *(a2 - 1);
      uint64_t v22 = a1[3];
      if (*(_DWORD *)(v21 + 68) < *(_DWORD *)(v22 + 68))
      {
        uint64_t *v20 = v21;
        *(a2 - 1) = v22;
        uint64_t v23 = *v20;
        uint64_t v24 = *v19;
        int v25 = *(_DWORD *)(*v20 + 68);
        if (v25 < *(_DWORD *)(*v19 + 68))
        {
          uint64_t *v19 = v23;
          uint64_t *v20 = v24;
          uint64_t v26 = *v18;
          if (v25 < *(_DWORD *)(*v18 + 68))
          {
            a1[1] = v23;
            a1[2] = v26;
            uint64_t v27 = *a1;
            if (v25 < *(_DWORD *)(*a1 + 68))
            {
              *a1 = v23;
              a1[1] = v27;
            }
          }
        }
      }
      return 1;
    default:
      int v8 = a1 + 2;
      uint64_t v9 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v10 = 0;
      uint64_t v11 = 24;
      break;
  }
  while (1)
  {
    uint64_t v12 = *v9;
    uint64_t v13 = *v8;
    int v14 = *(_DWORD *)(*v9 + 68);
    if (v14 < *(_DWORD *)(*v8 + 68))
    {
      uint64_t v15 = v11;
      while (1)
      {
        *(uint64_t *)((char *)a1 + v15) = v13;
        uint64_t v16 = v15 - 8;
        if (v15 == 8) {
          break;
        }
        uint64_t v13 = *(uint64_t *)((char *)a1 + v15 - 16);
        v15 -= 8;
        if (v14 >= *(_DWORD *)(v13 + 68))
        {
          int v17 = (uint64_t *)((char *)a1 + v16);
          goto LABEL_13;
        }
      }
      int v17 = a1;
LABEL_13:
      *int v17 = v12;
      if (++v10 == 8) {
        return v9 + 1 == a2;
      }
    }
    int v8 = v9;
    v11 += 8;
    if (++v9 == a2) {
      return 1;
    }
  }
}

uint64_t *std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::anonymous namespace'::FieldNumberSorter &,google::protobuf::FieldDescriptor const**>(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v9 = *a3;
  if (*(_DWORD *)(*a4 + 68) < *(_DWORD *)(*a3 + 68))
  {
    *a3 = *a4;
    *a4 = v9;
    uint64_t v10 = *a2;
    if (*(_DWORD *)(*a3 + 68) < *(_DWORD *)(*a2 + 68))
    {
      *a2 = *a3;
      *a3 = v10;
      uint64_t v11 = *a1;
      if (*(_DWORD *)(*a2 + 68) < *(_DWORD *)(*a1 + 68))
      {
        *a1 = *a2;
        *a2 = v11;
      }
    }
  }
  return result;
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::internal::DescriptorTable const*,BOOL),google::protobuf::internal::DescriptorTable const*&,BOOL &>>(uint64_t a1)
{
  return (**(uint64_t (***)(void, void))a1)(**(void **)(*(void *)a1 + 8), **(unsigned __int8 **)(*(void *)a1 + 16));
}

void google::protobuf::DynamicMessage::SharedCtor(google::protobuf::DynamicMessage *this, int a2)
{
  uint64_t v4 = *((void *)this + 2);
  uint64_t v5 = *(void *)(v4 + 32);
  int v6 = *(_DWORD *)(v5 + 108);
  if (v6 >= 1)
  {
    uint64_t v7 = 0;
    int v8 = 0;
    uint64_t v9 = *(void *)(v5 + 48) + 32;
    do
    {
      if (*(_DWORD *)(v9 - 8) != 1 || !*(unsigned char *)(**(void **)v9 + 65))
      {
        int v10 = *(_DWORD *)(v4 + 8) + 4 * v8++;
        *(_DWORD *)((char *)this + v10) = 0;
        int v6 = *(_DWORD *)(v5 + 108);
      }
      ++v7;
      v9 += 48;
    }
    while (v7 < v6);
  }
  uint64_t v11 = *(int *)(v4 + 12);
  if (v11 != -1)
  {
    uint64_t v12 = (char *)this + v11;
    uint64_t v13 = *((void *)this + 1);
    int v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFELL);
    if (v13) {
      int v14 = (void *)*v14;
    }
    *(void *)uint64_t v12 = v14;
    *((_DWORD *)v12 + 2) = 0;
    *((void *)v12 + 2) = 0;
  }
  if (*(int *)(v5 + 104) >= 1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    do
    {
      uint64_t v17 = *(void *)(v5 + 40);
      uint64_t v18 = (google::protobuf::FieldDescriptor *)(v17 + v15);
      uint64_t v19 = *(int *)(*(void *)(*((void *)this + 2) + 40) + 4 * v16);
      uint64_t v20 = *(void *)(v17 + v15 + 88);
      if (!v20 || *(_DWORD *)(v20 + 24) == 1 && *(unsigned char *)(**(void **)(v20 + 32) + 65))
      {
        uint64_t v21 = (std::once_flag::_State_type *)*((void *)v18 + 6);
        if (v21)
        {
          uint64_t v44 = v17 + v15;
          uint64_t v45 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v21, memory_order_acquire) != -1)
          {
            uint64_t v46 = v47;
            v47[0] = &v45;
            v47[1] = &v44;
            std::__call_once(v21, &v46, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        uint64_t v22 = (char *)this + v19;
        switch(*(_DWORD *)(v17 + v15 + 56))
        {
          case 1:
            if (*(_DWORD *)(v17 + v15 + 60) == 3) {
              goto LABEL_31;
            }
            *(void *)uint64_t v22 = *(void *)(v17 + v15 + 144);
            break;
          case 2:
            if (*(_DWORD *)(v17 + v15 + 60) == 3) {
              goto LABEL_31;
            }
            *(_DWORD *)uint64_t v22 = *(_DWORD *)(v17 + v15 + 144);
            break;
          case 3:
          case 4:
          case 6:
          case 0x10:
          case 0x12:
            if (*(_DWORD *)(v17 + v15 + 60) == 3) {
              goto LABEL_31;
            }
            uint64_t v24 = *(uint64_t **)(v17 + v15 + 144);
            goto LABEL_56;
          case 5:
          case 7:
          case 0xD:
          case 0xF:
          case 0x11:
            if (*(_DWORD *)(v17 + v15 + 60) == 3) {
              goto LABEL_31;
            }
            int v23 = *(_DWORD *)(v17 + v15 + 144);
            goto LABEL_45;
          case 8:
            if (*(_DWORD *)(v17 + v15 + 60) == 3) {
              goto LABEL_31;
            }
            char *v22 = *(unsigned char *)(v17 + v15 + 144);
            break;
          case 9:
          case 0xC:
            if (*(_DWORD *)(v17 + v15 + 60) == 3)
            {
              uint64_t v27 = *((void *)this + 1);
              uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFELL);
              if (v27) {
                uint64_t v28 = (void *)*v28;
              }
              *((void *)v22 + 2) = 0;
              *(void *)uint64_t v22 = v28;
              goto LABEL_52;
            }
            uint64_t v35 = *(void *)(v17 + v15 + 144);
            if (*(char *)(v35 + 23) < 0) {
              uint64_t v36 = *(void *)(v35 + 8);
            }
            else {
              uint64_t v36 = *(unsigned __int8 *)(v35 + 23);
            }
            BOOL v37 = v36 == 0;
            uint64_t v24 = &google::protobuf::internal::fixed_address_empty_string;
            if (!v37) {
              uint64_t v24 = 0;
            }
LABEL_56:
            *(void *)uint64_t v22 = v24;
            break;
          case 0xA:
          case 0xB:
            if (*(_DWORD *)(v17 + v15 + 60) == 3)
            {
              uint64_t v30 = *((void *)this + 1);
              uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFELL);
              if (IsMapFieldInApi)
              {
                int v43 = a2;
                if (a2)
                {
                  if (v30) {
                    uint64_t v31 = (void *)*v31;
                  }
                  uint64_t v32 = *(void *)(*((void *)this + 2) + 16);
                  uint64_t v33 = google::protobuf::FieldDescriptor::message_type(v18);
                  uint64_t PrototypeNoLock = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v32 + 16))(v32, v33);
                }
                else
                {
                  if (v30) {
                    uint64_t v31 = (void *)*v31;
                  }
                  uint64_t v38 = *(google::protobuf::DynamicMessageFactory **)(*((void *)this + 2) + 16);
                  uint64_t v39 = (const google::protobuf::Descriptor *)google::protobuf::FieldDescriptor::message_type(v18);
                  uint64_t PrototypeNoLock = google::protobuf::DynamicMessageFactory::GetPrototypeNoLock(v38, v39);
                }
                uint64_t v40 = PrototypeNoLock;
                if (v31)
                {
                  uint64_t v41 = *((void *)this + 1);
                  int v42 = (Arena *)(v41 & 0xFFFFFFFFFFFFFFFELL);
                  if (v41) {
                    int v42 = *(Arena **)v42;
                  }
                  google::protobuf::internal::MapFieldBase::MapFieldBase((google::protobuf::internal::MapFieldBase *)v22, v42);
                  *(void *)uint64_t v22 = &unk_1ED515D08;
                  *((_OWORD *)v22 + 6) = xmmword_18A627CD0;
                  *((_OWORD *)v22 + 7) = xmmword_18A627CD0;
                  *((void *)v22 + 16) = &google::protobuf::internal::kGlobalEmptyTable;
                  *((void *)v22 + 17) = v42;
                }
                else
                {
                  *((void *)v22 + 1) = 0;
                  *((void *)v22 + 2) = 0;
                  *((void *)v22 + 3) = 850045863;
                  *((_OWORD *)v22 + 2) = 0u;
                  *((_OWORD *)v22 + 3) = 0u;
                  *((_OWORD *)v22 + 4) = 0u;
                  *(_OWORD *)(v22 + 76) = 0u;
                  *(void *)uint64_t v22 = &unk_1ED515D08;
                  *((_OWORD *)v22 + 6) = xmmword_18A627CD0;
                  *((_OWORD *)v22 + 7) = xmmword_18A627CD0;
                  *((void *)v22 + 16) = &google::protobuf::internal::kGlobalEmptyTable;
                  *((void *)v22 + 17) = 0;
                }
                *((void *)v22 + 18) = v40;
                a2 = v43;
              }
              else
              {
                if (v30) {
                  uint64_t v31 = (void *)*v31;
                }
                *((void *)v22 + 2) = 0;
                *(void *)uint64_t v22 = v31;
LABEL_52:
                *((void *)v22 + 1) = 0;
              }
            }
            else
            {
              *(void *)uint64_t v22 = 0;
            }
            break;
          case 0xE:
            if (*(_DWORD *)(v17 + v15 + 60) == 3)
            {
LABEL_31:
              uint64_t v25 = *((void *)this + 1);
              uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFELL);
              if (v25) {
                uint64_t v26 = (void *)*v26;
              }
              *(void *)uint64_t v22 = 0;
              *((void *)v22 + 1) = v26;
            }
            else
            {
              int v23 = *(_DWORD *)(google::protobuf::FieldDescriptor::default_value_enum((google::protobuf::FieldDescriptor *)(v17 + v15))
                              + 16);
LABEL_45:
              *(_DWORD *)uint64_t v22 = v23;
            }
            break;
          default:
            break;
        }
      }
      ++v16;
      v15 += 152;
    }
    while (v16 < *(int *)(v5 + 104));
  }
}

uint64_t google::protobuf::DynamicMessageFactory::GetPrototypeNoLock(float **this, unint64_t a2)
{
  if (*((unsigned char *)this + 16))
  {
    uint64_t v5 = *(void *)(*(void *)(a2 + 16) + 16);
    uint64_t v6 = google::protobuf::DescriptorPool::internal_generated_pool((google::protobuf::DescriptorPool *)this);
    google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
    if (v5 == v6)
    {
                                + 16);
      return v23();
    }
  }
  int v8 = this[3];
  unint64_t v9 = 0x9DDFEA08EB382D69 * (((8 * a2) + 8) ^ HIDWORD(a2));
  unint64_t v10 = 0x9DDFEA08EB382D69 * (HIDWORD(a2) ^ (v9 >> 47) ^ v9);
  unint64_t v11 = 0x9DDFEA08EB382D69 * (v10 ^ (v10 >> 47));
  unint64_t v12 = *((void *)v8 + 1);
  if (v12)
  {
    uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    if (v13.u32[0] > 1uLL)
    {
      unint64_t v2 = 0x9DDFEA08EB382D69 * (v10 ^ (v10 >> 47));
      if (v11 >= v12) {
        unint64_t v2 = v11 % v12;
      }
    }
    else
    {
      unint64_t v2 = (v12 - 1) & v11;
    }
    int v14 = *(void ***)(*(void *)v8 + 8 * v2);
    if (v14)
    {
      uint64_t v15 = *v14;
      if (*v14)
      {
        do
        {
          unint64_t v16 = v15[1];
          if (v16 == v11)
          {
            if (v15[2] == a2) {
              goto LABEL_79;
            }
          }
          else
          {
            if (v13.u32[0] > 1uLL)
            {
              if (v16 >= v12) {
                v16 %= v12;
              }
            }
            else
            {
              v16 &= v12 - 1;
            }
            if (v16 != v2) {
              break;
            }
          }
          uint64_t v15 = (void *)*v15;
        }
        while (v15);
      }
    }
  }
  uint64_t v15 = operator new(0x20uLL);
  void *v15 = 0;
  v15[1] = v11;
  void v15[2] = a2;
  void v15[3] = 0;
  float v17 = (float)(unint64_t)(*((void *)v8 + 3) + 1);
  float v18 = v8[8];
  if (!v12 || (float)(v18 * (float)v12) < v17)
  {
    BOOL v19 = 1;
    if (v12 >= 3) {
      BOOL v19 = (v12 & (v12 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v12);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      int8x8_t prime = (int8x8_t)v21;
    }
    else {
      int8x8_t prime = (int8x8_t)v20;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v12 = *((void *)v8 + 1);
    }
    if (*(void *)&prime > v12) {
      goto LABEL_35;
    }
    if (*(void *)&prime < v12)
    {
      unint64_t v31 = vcvtps_u32_f32((float)*((unint64_t *)v8 + 3) / v8[8]);
      if (v12 < 3 || (uint8x8_t v32 = (uint8x8_t)vcnt_s8((int8x8_t)v12), v32.i16[0] = vaddlv_u8(v32), v32.u32[0] > 1uLL))
      {
        unint64_t v31 = std::__next_prime(v31);
      }
      else
      {
        uint64_t v33 = 1 << -(char)__clz(v31 - 1);
        if (v31 >= 2) {
          unint64_t v31 = v33;
        }
      }
      if (*(void *)&prime <= v31) {
        int8x8_t prime = (int8x8_t)v31;
      }
      if (*(void *)&prime >= v12)
      {
        unint64_t v12 = *((void *)v8 + 1);
      }
      else
      {
        if (prime)
        {
LABEL_35:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          uint64_t v25 = operator new(8 * *(void *)&prime);
          uint64_t v26 = *(void **)v8;
          *(void *)int v8 = v25;
          if (v26) {
            operator delete(v26);
          }
          uint64_t v27 = 0;
          *((int8x8_t *)v8 + 1) = prime;
          do
            *(void *)(*(void *)v8 + 8 * v27++) = 0;
          while (*(void *)&prime != v27);
          uint64_t v28 = (void *)*((void *)v8 + 2);
          if (v28)
          {
            unint64_t v29 = v28[1];
            uint8x8_t v30 = (uint8x8_t)vcnt_s8(prime);
            v30.i16[0] = vaddlv_u8(v30);
            if (v30.u32[0] > 1uLL)
            {
              if (v29 >= *(void *)&prime) {
                v29 %= *(void *)&prime;
              }
            }
            else
            {
              v29 &= *(void *)&prime - 1;
            }
            *(void *)(*(void *)v8 + 8 * v29) = v8 + 4;
            uint64_t v34 = (void *)*v28;
            if (*v28)
            {
              do
              {
                unint64_t v35 = v34[1];
                if (v30.u32[0] > 1uLL)
                {
                  if (v35 >= *(void *)&prime) {
                    v35 %= *(void *)&prime;
                  }
                }
                else
                {
                  v35 &= *(void *)&prime - 1;
                }
                if (v35 != v29)
                {
                  if (!*(void *)(*(void *)v8 + 8 * v35))
                  {
                    *(void *)(*(void *)v8 + 8 * v35) = v28;
                    goto LABEL_60;
                  }
                  void *v28 = *v34;
                  void *v34 = **(void **)(*(void *)v8 + 8 * v35);
                  **(void **)(*(void *)v8 + 8 * v35) = v34;
                  uint64_t v34 = v28;
                }
                unint64_t v35 = v29;
LABEL_60:
                uint64_t v28 = v34;
                uint64_t v34 = (void *)*v34;
                unint64_t v29 = v35;
              }
              while (v34);
            }
          }
          unint64_t v12 = (unint64_t)prime;
          goto LABEL_64;
        }
        uint64_t v40 = *(void **)v8;
        *(void *)int v8 = 0;
        if (v40) {
          operator delete(v40);
        }
        unint64_t v12 = 0;
        *((void *)v8 + 1) = 0;
      }
    }
LABEL_64:
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12) {
        unint64_t v2 = v11 % v12;
      }
      else {
        unint64_t v2 = v11;
      }
    }
    else
    {
      unint64_t v2 = (v12 - 1) & v11;
    }
  }
  uint64_t v36 = *(void **)v8;
  BOOL v37 = *(void **)(*(void *)v8 + 8 * v2);
  if (v37)
  {
    void *v15 = *v37;
  }
  else
  {
    void *v15 = *((void *)v8 + 2);
    *((void *)v8 + 2) = v15;
    v36[v2] = v8 + 4;
    if (!*v15) {
      goto LABEL_78;
    }
    unint64_t v38 = *(void *)(*v15 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v38 >= v12) {
        v38 %= v12;
      }
    }
    else
    {
      v38 &= v12 - 1;
    }
    BOOL v37 = (void *)(*(void *)v8 + 8 * v38);
  }
  *BOOL v37 = v15;
LABEL_78:
  ++*((void *)v8 + 3);
LABEL_79:
  uint64_t v39 = v15[3];
  if (!v39) {
    operator new();
  }
  return *(void *)(v39 + 64);
}

void sub_1891D26D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  MEMORY[0x18C11F580](v22, 0x1070C4026DFEB36);
  _Unwind_Resume(a1);
}

void google::protobuf::DynamicMessage::~DynamicMessage(google::protobuf::DynamicMessage *this)
{
  *(void *)this = &unk_1ED514B28;
  uint64_t v2 = *(void *)(*((void *)this + 2) + 32);
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  uint64_t v3 = *(int *)(*((void *)this + 2) + 12);
  if (v3 != -1) {
    google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::DynamicMessage *)((char *)this + v3));
  }
  LODWORD(v4) = *(_DWORD *)(v2 + 104);
  if ((int)v4 >= 1)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(v2 + 40);
      uint64_t v8 = v7 + v5;
      uint64_t v9 = *(void *)(v7 + v5 + 88);
      if (!v9 || *(_DWORD *)(v9 + 24) == 1 && *(unsigned char *)(**(void **)(v9 + 32) + 65)) {
        break;
      }
      uint64_t v15 = *((void *)this + 2);
      int v16 = -1431655765 * ((unint64_t)(v9 - *(void *)(*(void *)(v9 + 16) + 48)) >> 4);
      uint64_t v17 = v7 + v5;
      if (*(_DWORD *)((char *)this + 4 * v16 + *(_DWORD *)(v15 + 8)) == *(_DWORD *)(v7 + v5 + 68))
      {
        uint64_t v18 = *(int *)(*(void *)(v15 + 40) + 4 * ((int)v4 + v16));
        BOOL v19 = *(std::once_flag::_State_type **)(v17 + 48);
        if (v19)
        {
          uint64_t v34 = v7 + v5;
          unint64_t v35 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v19, memory_order_acquire) != -1)
          {
            uint64_t v36 = &v37;
            BOOL v37 = &v35;
            unint64_t v38 = &v34;
            std::__call_once(v19, &v36, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        unint64_t v10 = (uint64_t *)((char *)this + v18);
        uint64_t v20 = v7 + v5;
        int v21 = *(_DWORD *)(v20 + 56);
        if (v21 != 12 && v21 != 9)
        {
          uint64_t v33 = *(std::once_flag::_State_type **)(v17 + 48);
          if (v33)
          {
            uint64_t v34 = v8;
            unint64_t v35 = google::protobuf::FieldDescriptor::TypeOnceInit;
            if (atomic_load_explicit((atomic_ullong *volatile)v33, memory_order_acquire) != -1)
            {
              uint64_t v36 = &v37;
              BOOL v37 = &v35;
              unint64_t v38 = &v34;
              std::__call_once(v33, &v36, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
            int v21 = *(_DWORD *)(v20 + 56);
          }
          if ((v21 & 0xFFFFFFFE) != 0xA) {
            goto LABEL_36;
          }
LABEL_53:
          if (*v10) {
            (*(void (**)(uint64_t))(*(void *)*v10 + 8))(*v10);
          }
          goto LABEL_36;
        }
        uint64_t v23 = *((void *)this + 2);
        uint64_t v24 = *(void *)(v23 + 64);
        uint64_t v25 = *(unsigned int *)(*(void *)(v23 + 40) + 4 * v6);
LABEL_35:
        google::protobuf::internal::ArenaStringPtr::Destroy(v10, *(void *)(v24 + v25) & 0xFFFFFFFFFFFFFFFELL, 0);
      }
LABEL_36:
      ++v6;
      uint64_t v4 = *(int *)(v2 + 104);
      v5 += 152;
      if (v6 >= v4) {
        return;
      }
    }
    unint64_t v10 = (uint64_t *)((char *)this + *(int *)(*(void *)(*((void *)this + 2) + 40) + 4 * v6));
    unint64_t v11 = *(std::once_flag::_State_type **)(v8 + 48);
    if (*(_DWORD *)(v8 + 60) == 3)
    {
      if (v11)
      {
        uint64_t v34 = v7 + v5;
        unint64_t v35 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
        {
          uint64_t v36 = &v37;
          BOOL v37 = &v35;
          unint64_t v38 = &v34;
          std::__call_once(v11, &v36, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      switch(*(_DWORD *)(v7 + v5 + 56))
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 0xD:
        case 0xE:
        case 0xF:
        case 0x10:
        case 0x11:
        case 0x12:
          if (*((int *)v10 + 1) >= 1)
          {
            uint64_t v12 = v10[1];
            uint64_t v14 = *(void *)(v12 - 8);
            uint8x8_t v13 = (void *)(v12 - 8);
            if (!v14) {
              operator delete(v13);
            }
          }
          break;
        case 9:
        case 0xC:
          google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v10);
          break;
        case 0xA:
        case 0xB:
            (*(void (**)(uint64_t *))*v10)(v10);
          else {
            google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(v10);
          }
          break;
        default:
          goto LABEL_36;
      }
      goto LABEL_36;
    }
    if (v11)
    {
      uint64_t v34 = v7 + v5;
      unint64_t v35 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
      {
        uint64_t v36 = &v37;
        BOOL v37 = &v35;
        unint64_t v38 = &v34;
        std::__call_once(v11, &v36, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    uint64_t v26 = v7 + v5;
    int v27 = *(_DWORD *)(v26 + 56);
    if (v27 != 12 && v27 != 9)
    {
      uint8x8_t v30 = *(std::once_flag::_State_type **)(v8 + 48);
      if (v30)
      {
        uint64_t v34 = v8;
        unint64_t v35 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v30, memory_order_acquire) != -1)
        {
          uint64_t v36 = &v37;
          BOOL v37 = &v35;
          unint64_t v38 = &v34;
          std::__call_once(v30, &v36, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        int v27 = *(_DWORD *)(v26 + 56);
      }
      if ((v27 & 0xFFFFFFFE) != 0xA) {
        goto LABEL_36;
      }
      unint64_t v31 = *(google::protobuf::DynamicMessage **)(*((void *)this + 2) + 64);
      if (v31 == this || v31 == 0) {
        goto LABEL_36;
      }
      goto LABEL_53;
    }
    uint64_t v29 = *((void *)this + 2);
    uint64_t v24 = *(void *)(v29 + 64);
    uint64_t v25 = *(int *)(*(void *)(v29 + 40) + 4 * v6);
    goto LABEL_35;
  }
}

{
  void *v1;
  uint64_t vars8;

  google::protobuf::DynamicMessage::~DynamicMessage(this);

  operator delete(v1);
}

uint64_t google::protobuf::DynamicMessage::New(google::protobuf::DynamicMessage *this)
{
  return (*(uint64_t (**)(google::protobuf::DynamicMessage *, void))(*(void *)this + 32))(this, 0);
}

void *google::protobuf::DynamicMessage::New(google::protobuf::DynamicMessage *this, Arena *a2)
{
  size_t v4 = **((int **)this + 2);
  if (a2)
  {
    unint64_t v5 = (v4 + 7) & 0xFFFFFFFFFFFFFFF8;
    if (*((unsigned char *)a2 + 24)) {
      (*(void (**)(void, void, unint64_t))(**(void **)(*((void *)a2 + 4) + 32) + 40))(*(void *)(*((void *)a2 + 4) + 32), MEMORY[0x1E4FBA380], v5);
    }
    Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((atomic_ullong *)a2, v5);
    bzero(Aligned, **((int **)this + 2));
    uint64_t v7 = (int *)*((void *)this + 2);
  }
  else
  {
    Aligned = operator new(v4);
    uint64_t v7 = (int *)*((void *)this + 2);
    bzero(Aligned, *v7);
  }
  void *Aligned = &unk_1ED514B28;
  Aligned[1] = a2;
  Aligned[2] = v7;
  *((_DWORD *)Aligned + 6) = 0;
  google::protobuf::DynamicMessage::SharedCtor((google::protobuf::DynamicMessage *)Aligned, 1);
  return Aligned;
}

uint64_t google::protobuf::DynamicMessage::GetCachedSize(google::protobuf::DynamicMessage *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t google::protobuf::DynamicMessage::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

uint64_t google::protobuf::DynamicMessage::GetMetadata(google::protobuf::DynamicMessage *this)
{
  return *(void *)(*((void *)this + 2) + 32);
}

void google::protobuf::DynamicMessageFactory::DynamicMessageFactory(google::protobuf::DynamicMessageFactory *this)
{
  *(void *)this = &unk_1ED515480;
  *((void *)this + 1) = 0;
  *((unsigned char *)this + 16) = 0;
  operator new();
}

void google::protobuf::DynamicMessageFactory::~DynamicMessageFactory(google::protobuf::DynamicMessageFactory *this)
{
  *(void *)this = &unk_1ED515480;
  uint64_t v2 = (uint64_t *)((char *)this + 24);
  for (int i = *(void **)(*((void *)this + 3) + 16); i; int i = (void *)*i)
  {
    google::protobuf::DynamicMessageFactory::DeleteDefaultOneofInstance(*(void *)(i[3] + 32));
    size_t v4 = (google::protobuf::DynamicMessage::TypeInfo *)i[3];
    if (v4)
    {
      google::protobuf::DynamicMessage::TypeInfo::~TypeInfo(v4);
      MEMORY[0x18C11F580]();
    }
  }
  std::mutex::~mutex((std::mutex *)((char *)this + 32));
  std::unique_ptr<google::protobuf::DynamicMessageFactory::PrototypeMap>::reset[abi:ne180100](v2, 0);
}

{
  uint64_t vars8;

  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory(this);

  JUMPOUT(0x18C11F580);
}

void google::protobuf::DynamicMessageFactory::DeleteDefaultOneofInstance(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 108);
  if (v1 >= 1)
  {
    uint64_t v3 = 0;
    uint64_t v4 = *(void *)(a1 + 48);
    do
    {
      if ((*(_DWORD *)(v4 + 48 * v3 + 24) != 1 || !*(unsigned char *)(**(void **)(v4 + 48 * v3 + 32) + 65))
        && *(int *)(v4 + 48 * v3 + 24) >= 1)
      {
        uint64_t v5 = 0;
        do
        {
          uint64_t v6 = *(std::once_flag::_State_type **)(*(void *)(*(void *)(v4 + 48 * v3 + 32) + 8 * v5) + 48);
          if (v6)
          {
            uint64_t v7 = *(void *)(*(void *)(v4 + 48 * v3 + 32) + 8 * v5);
            uint64_t v8 = google::protobuf::FieldDescriptor::TypeOnceInit;
            if (atomic_load_explicit((atomic_ullong *volatile)v6, memory_order_acquire) != -1)
            {
              v10[0] = &v8;
              v10[1] = &v7;
              uint64_t v9 = v10;
              std::__call_once(v6, &v9, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
            uint64_t v4 = *(void *)(a1 + 48);
          }
          ++v5;
        }
        while (v5 < *(int *)(v4 + 48 * v3 + 24));
        int v1 = *(_DWORD *)(a1 + 108);
      }
      ++v3;
    }
    while (v3 < v1);
  }
}

uint64_t google::protobuf::DynamicMessageFactory::GetPrototype(float **this, const google::protobuf::Descriptor *a2)
{
  uint64_t v4 = (std::mutex *)(this + 4);
  std::mutex::lock((std::mutex *)(this + 4));
  uint64_t PrototypeNoLock = google::protobuf::DynamicMessageFactory::GetPrototypeNoLock(this, (unint64_t)a2);
  std::mutex::unlock(v4);
  return PrototypeNoLock;
}

void sub_1891D300C(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::DynamicMessage::TypeInfo::~TypeInfo(google::protobuf::DynamicMessage::TypeInfo *this)
{
  uint64_t v2 = *((void *)this + 8);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 7);
  *((void *)this + 7) = 0;
  if (v3) {
    MEMORY[0x18C11F580](v3, 0x1070C4026DFEB36);
  }
  uint64_t v4 = *((void *)this + 6);
  *((void *)this + 6) = 0;
  if (v4) {
    MEMORY[0x18C11F560](v4, 0x1000C8052888210);
  }
  uint64_t v5 = *((void *)this + 5);
  *((void *)this + 5) = 0;
  if (v5) {
    MEMORY[0x18C11F560](v5, 0x1000C8052888210);
  }
}

uint64_t std::unique_ptr<google::protobuf::DynamicMessageFactory::PrototypeMap>::reset[abi:ne180100](uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(result);
    JUMPOUT(0x18C11F580);
  }
  return result;
}

BOOL google::protobuf::internal::GetAnyFieldDescriptors(google::protobuf::internal *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor **a3, const google::protobuf::FieldDescriptor **a4)
{
  uint64_t v6 = (google::protobuf::Descriptor *)(*(uint64_t (**)(google::protobuf::internal *, const google::protobuf::Message *, const google::protobuf::FieldDescriptor **, const google::protobuf::FieldDescriptor **))(*(void *)this + 152))(this, a2, a3, a4);
  uint64_t v7 = v6;
  uint64_t v8 = (uint64_t *)*((void *)v6 + 1);
  int v9 = *((char *)v8 + 23);
  if (v9 < 0)
  {
    if (v8[1] != 19) {
      return 0;
    }
    uint64_t v8 = (uint64_t *)*v8;
  }
  else if (v9 != 19)
  {
    return 0;
  }
  unint64_t v10 = (uint64_t *)*v8;
  uint64_t v11 = v8[1];
  uint64_t v12 = *(uint64_t *)((char *)v8 + 11);
  if (v10 != *(uint64_t **)"google.protobuf.Any" || v11 != *(void *)"rotobuf.Any" || v12 != *(void *)"obuf.Any") {
    return 0;
  }
  *(void *)a2 = google::protobuf::Descriptor::FindFieldByNumber(v6, 1);
  *a3 = (const google::protobuf::FieldDescriptor *)google::protobuf::Descriptor::FindFieldByNumber(v7, 2);
  uint64_t v16 = *(void *)a2;
  if (!v16) {
    return 0;
  }
  uint64_t v17 = *(std::once_flag::_State_type **)(v16 + 48);
  if (v17)
  {
    uint64_t v20 = v16;
    int v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v17, memory_order_acquire) != -1)
    {
      uint64_t v23 = &v21;
      uint64_t v24 = &v20;
      uint64_t v22 = &v23;
      std::__call_once(v17, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*(_DWORD *)(v16 + 56) != 9) {
    return 0;
  }
  uint64_t v18 = (uint64_t)*a3;
  if (!v18) {
    return 0;
  }
  BOOL v19 = *(std::once_flag::_State_type **)(v18 + 48);
  if (v19)
  {
    uint64_t v20 = v18;
    int v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v19, memory_order_acquire) != -1)
    {
      uint64_t v23 = &v21;
      uint64_t v24 = &v20;
      uint64_t v22 = &v23;
      std::__call_once(v19, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *(_DWORD *)(v18 + 56) == 12;
}

uint64_t google::protobuf::internal::DestroyMessage(google::protobuf::internal *this, const void *a2)
{
  return (**(uint64_t (***)(google::protobuf::internal *))this)(this);
}

void google::protobuf::internal::DestroyString(void **this, const void *a2)
{
  if (*((char *)this + 23) < 0) {
    operator delete(*this);
  }
}

void google::protobuf::internal::InitProtobufDefaultsSlow(google::protobuf::internal *this)
{
  {
    google::protobuf::internal::fixed_address_empty_string = 0;
    qword_1E9117F90 = 0;
    qword_1E9117F98 = 0;
    google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyString, (void (*)(const void *))&google::protobuf::internal::fixed_address_empty_string, v1);
    atomic_store(1u, google::protobuf::internal::init_protobuf_defaults_state);
  }
}

void sub_1891D3388(_Unwind_Exception *a1)
{
}

Arena *google::protobuf::internal::GetOwnedMessageInternal(google::protobuf::internal *this, Arena *a2, google::protobuf::MessageLite *a3, Arena *a4)
{
  uint64_t v4 = a2;
  if (!this || a3)
  {
    uint64_t v5 = (*(uint64_t (**)(Arena *, google::protobuf::internal *, google::protobuf::MessageLite *, Arena *))(*(void *)a2 + 32))(a2, this, a3, a4);
    (*(void (**)(uint64_t, Arena *))(*(void *)v5 + 64))(v5, v4);
    return (Arena *)v5;
  }
  else
  {
    google::protobuf::Arena::Own<google::protobuf::MessageLite>((char *)this, a2);
  }
  return v4;
}

char *google::protobuf::Arena::Own<google::protobuf::MessageLite>(char *result, void *a2)
{
  if (a2) {
    return google::protobuf::internal::ArenaImpl::AddCleanup((atomic_ullong *)result, a2, (void (*)(void *))google::protobuf::internal::arena_delete_object<google::protobuf::MessageLite>);
  }
  return result;
}

void google::protobuf::internal::InitSCCImpl(_DWORD *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_173, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_173))
  {
    __cxa_atexit((void (*)(void *))google::protobuf::internal::WrappedMutex::~WrappedMutex, &google::protobuf::internal::InitSCCImpl(google::protobuf::internal::SCCInfoBase *)::mu, &dword_188D96000);
    __cxa_guard_release(&_MergedGlobals_173);
  }
  uint64_t v2 = (google::protobuf::internal *)pthread_self();
  uint64_t v3 = (uint64_t)v2;
  if (qword_1EB29F298)
  {
    if (v2 && v2 == (google::protobuf::internal *)qword_1EB29F298)
    {
LABEL_5:
      if (*a1 != 1)
      {
        int v4 = 3;
        uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_message_util.cc";
        int v6 = 785;
        memset(&__p, 0, sizeof(__p));
        std::string::append(&__p, "CHECK failed: (scc->visit_status.load(std::memory_order_relaxed)) == (SCCInfoBase::kRunning): ");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      return;
    }
  }
  else if (!v2)
  {
    goto LABEL_5;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)google::protobuf::internal::init_protobuf_defaults_state, memory_order_acquire) & 1) == 0)google::protobuf::internal::InitProtobufDefaultsSlow(v2); {
  std::mutex::lock(&google::protobuf::internal::InitSCCImpl(google::protobuf::internal::SCCInfoBase *)::mu);
  }
  qword_1EB29F298 = v3;
  qword_1EB29F298 = 0;

  std::mutex::unlock(&google::protobuf::internal::InitSCCImpl(google::protobuf::internal::SCCInfoBase *)::mu);
}

void sub_1891D35B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *google::protobuf::internal::anonymous namespace'::InitSCC_DFS(_DWORD *result)
{
  if (*result == -1)
  {
    int v1 = (uint64_t (**)(void))result;
    *uint64_t result = 1;
    uint64_t v2 = result + 6;
    int v3 = result[1];
    if (v3 >= 1)
    {
      for (uint64_t i = 0; i < v3; ++i)
      {
        if (*(void *)&v2[2 * i])
        {
          int v3 = *((_DWORD *)v1 + 1);
        }
      }
    }
    uint64_t v5 = v3;
    int v6 = *((_DWORD *)v1 + 2);
    if (v6 >= 1)
    {
      uint64_t v7 = 0;
      uint64_t v8 = &v2[2 * v5];
      do
      {
        if (**(void **)&v8[2 * v7])
        {
          int v6 = *((_DWORD *)v1 + 2);
        }
        ++v7;
      }
      while (v7 < v6);
    }
    uint64_t result = (_DWORD *)v1[2]();
    atomic_store(0, (unsigned int *)v1);
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<google::protobuf::MessageLite>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t google::protobuf::internal::GeneratedExtensionFinder::Find()
{
  return 0;
}

void google::protobuf::internal::ExtensionSet::~ExtensionSet(google::protobuf::internal::ExtensionSet *this)
{
  if (!*(void *)this)
  {
    uint64_t v2 = *((void *)this + 2);
    if (*((unsigned __int16 *)this + 4) >= 0x101u)
    {
      google::protobuf::internal::ExtensionSet::ForEach<std::__map_iterator<std::__tree_iterator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__tree_node<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,void *> *,long>>,google::protobuf::internal::ExtensionSet::~()::$_0>(*(void ***)v2, (void *)(v2 + 8));
    }
    else if (*((_WORD *)this + 5))
    {
      uint64_t v3 = 32 * *((unsigned __int16 *)this + 5);
      int v4 = (void **)(v2 + 8);
      do
      {
        google::protobuf::internal::ExtensionSet::Extension::Free(v4);
        v4 += 4;
        v3 -= 32;
      }
      while (v3);
    }
    uint64_t v5 = *((void *)this + 2);
    if (*((unsigned __int16 *)this + 4) >= 0x101u)
    {
      if (v5)
      {
        uint64_t v6 = *((void *)this + 2);
        std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::destroy(v5, *(void **)(v5 + 8));
        MEMORY[0x18C11F580](v6, 0x1020C4062D53EE8);
      }
    }
    else if (v5)
    {
      MEMORY[0x18C11F560](v5, 0x1062C802AB6010CLL);
    }
  }
}

_DWORD *google::protobuf::internal::ExtensionSet::FindOrNull(google::protobuf::internal::ExtensionSet *this, int a2)
{
  uint64_t v2 = (_DWORD *)*((void *)this + 2);
  if (*((unsigned __int16 *)this + 4) < 0x101u)
  {
    unint64_t v3 = *((unsigned __int16 *)this + 5);
    if (*((_WORD *)this + 5))
    {
      int v4 = &v2[8 * v3];
      do
      {
        unint64_t v5 = v3 >> 1;
        uint64_t v6 = &v2[8 * (v3 >> 1)];
        int v8 = *v6;
        uint64_t v7 = v6 + 8;
        v3 += ~(v3 >> 1);
        if (v8 < a2) {
          uint64_t v2 = v7;
        }
        else {
          unint64_t v3 = v5;
        }
      }
      while (v3);
      if (v2 != v4)
      {
        int v10 = *v2;
        int v9 = v2 + 2;
        if (v10 == a2) {
          return v9;
        }
        else {
          return 0;
        }
      }
    }
    return 0;
  }
  uint64_t v14 = (_DWORD *)*((void *)v2 + 1);
  uint64_t v12 = v2 + 2;
  uint8x8_t v13 = v14;
  if (!v14) {
    return 0;
  }
  uint64_t v15 = v12;
  do
  {
    int v16 = v13[8];
    BOOL v17 = v16 < a2;
    if (v16 >= a2) {
      uint64_t v18 = v13;
    }
    else {
      uint64_t v18 = v13 + 2;
    }
    if (!v17) {
      uint64_t v15 = v13;
    }
    uint8x8_t v13 = (_DWORD *)*v18;
  }
  while (*v18);
  if (v15 == v12) {
    return 0;
  }
  int v19 = v15[8];
  uint64_t v20 = v15 + 10;
  if (v19 <= a2) {
    return v20;
  }
  else {
    return 0;
  }
}

uint64_t google::protobuf::internal::ExtensionSet::Extension::GetSize(google::protobuf::internal::ExtensionSet::Extension *this)
{
  switch(*((unsigned char *)this + 8))
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
      uint64_t result = **(unsigned int **)this;
      break;
    case 9:
    case 0xA:
    case 0xB:
    case 0xC:
      uint64_t result = *(unsigned int *)(*(void *)this + 8);
      break;
    default:
      int v2 = 3;
      unint64_t v3 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
      int v4 = 1719;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Can't get here.");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v2);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      uint64_t result = 0;
      break;
  }
  return result;
}

void sub_1891D3904(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *google::protobuf::internal::ExtensionSet::Extension::Clear(unsigned char *this)
{
  int v1 = this;
  if (this[9])
  {
    switch(this[8])
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
        **(_DWORD **)this = 0;
        break;
      case 9:
      case 0xC:
        unint64_t v5 = *(_DWORD **)this;
        this = (unsigned char *)google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)v5);
        break;
      case 0xA:
      case 0xB:
        uint64_t v6 = *(_DWORD **)this;
        uint64_t v7 = *(unsigned int *)(*(void *)this + 8);
        if ((int)v7 >= 1)
        {
          int v8 = (uint64_t *)(*((void *)v6 + 2) + 8);
          do
          {
            uint64_t v9 = *v8++;
            this = (unsigned char *)(*(uint64_t (**)(uint64_t))(*(void *)v9 + 40))(v9);
            --v7;
          }
          while (v7);
          std::string v6[2] = 0;
        }
        break;
      default:
        return this;
    }
  }
  else if ((this[10] & 1) == 0)
  {
    int v2 = google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[this[8]];
    if (v2 == 10)
    {
      uint64_t v4 = **(void **)this;
      if ((this[10] & 0x10) != 0) {
        this = (unsigned char *)(*(uint64_t (**)(void))(v4 + 112))();
      }
      else {
        this = (unsigned char *)(*(uint64_t (**)(void))(v4 + 40))();
      }
    }
    else if (v2 == 9)
    {
      unint64_t v3 = *(void **)this;
      if (*(char *)(*(void *)this + 23) < 0)
      {
        *(unsigned char *)*unint64_t v3 = 0;
        v3[1] = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v3 = 0;
        *((unsigned char *)v3 + 23) = 0;
      }
    }
    v1[10] = v1[10] & 0xF0 | 1;
  }
  return this;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedInt32(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    int v6 = 3;
    uint64_t v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    int v8 = 348;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(unsigned int *)(*(void *)(*(void *)v4 + 8) + 4 * a3);
}

void sub_1891D3BBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::ExtensionSet::AddInt32(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, int a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  uint64_t v12 = v11;
  std::string v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 11) = a4;
    uint64_t v14 = *(void *)this;
    if (!v14) {
      operator new();
    }
    if (*(unsigned char *)(v14 + 24)) {
    AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v14, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<int>>);
    }
    *(void *)AlignedAndAddCleanup = 0;
    *((void *)AlignedAndAddCleanup + 1) = v14;
    void *v12 = AlignedAndAddCleanup;
  }
  else
  {
    AlignedAndAddCleanup = (char *)*v11;
  }
  uint64_t v16 = *(unsigned int *)AlignedAndAddCleanup;
  if (v16 == *((_DWORD *)AlignedAndAddCleanup + 1))
  {
    int v17 = v16 + 1;
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)AlignedAndAddCleanup, v16 + 1);
    *(_DWORD *)(*((void *)AlignedAndAddCleanup + 1) + 4 * v16) = a5;
  }
  else
  {
    *(_DWORD *)(*((void *)AlignedAndAddCleanup + 1) + 4 * v16) = a5;
    int v17 = v16 + 1;
  }
  *(_DWORD *)AlignedAndAddCleanup = v17;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedInt64(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    int v6 = 3;
    uint64_t v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    int v8 = 349;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(void *)(*(void *)(*(void *)v4 + 8) + 8 * a3);
}

void sub_1891D3DC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::ExtensionSet::AddInt64(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, uint64_t a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  uint64_t v12 = v11;
  std::string v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 11) = a4;
    uint64_t v14 = *(void *)this;
    if (!v14) {
      operator new();
    }
    if (*(unsigned char *)(v14 + 24)) {
    AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v14, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<long long>>);
    }
    *(void *)AlignedAndAddCleanup = 0;
    *((void *)AlignedAndAddCleanup + 1) = v14;
    void *v12 = AlignedAndAddCleanup;
  }
  else
  {
    AlignedAndAddCleanup = (char *)*v11;
  }
  uint64_t v16 = *(unsigned int *)AlignedAndAddCleanup;
  if (v16 == *((_DWORD *)AlignedAndAddCleanup + 1))
  {
    int v17 = v16 + 1;
    google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)AlignedAndAddCleanup, v16 + 1);
    *(void *)(*((void *)AlignedAndAddCleanup + 1) + 8 * v16) = a5;
  }
  else
  {
    *(void *)(*((void *)AlignedAndAddCleanup + 1) + 8 * v16) = a5;
    int v17 = v16 + 1;
  }
  *(_DWORD *)AlignedAndAddCleanup = v17;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedUInt32(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    int v6 = 3;
    uint64_t v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    int v8 = 350;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(unsigned int *)(*(void *)(*(void *)v4 + 8) + 4 * a3);
}

void sub_1891D3FCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::ExtensionSet::AddUInt32(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, int a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  uint64_t v12 = v11;
  std::string v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 11) = a4;
    uint64_t v14 = *(void *)this;
    if (!v14) {
      operator new();
    }
    if (*(unsigned char *)(v14 + 24)) {
    AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v14, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned int>>);
    }
    *(void *)AlignedAndAddCleanup = 0;
    *((void *)AlignedAndAddCleanup + 1) = v14;
    void *v12 = AlignedAndAddCleanup;
  }
  else
  {
    AlignedAndAddCleanup = (char *)*v11;
  }
  uint64_t v16 = *(unsigned int *)AlignedAndAddCleanup;
  if (v16 == *((_DWORD *)AlignedAndAddCleanup + 1))
  {
    int v17 = v16 + 1;
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)AlignedAndAddCleanup, v16 + 1);
    *(_DWORD *)(*((void *)AlignedAndAddCleanup + 1) + 4 * v16) = a5;
  }
  else
  {
    *(_DWORD *)(*((void *)AlignedAndAddCleanup + 1) + 4 * v16) = a5;
    int v17 = v16 + 1;
  }
  *(_DWORD *)AlignedAndAddCleanup = v17;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedUInt64(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    int v6 = 3;
    uint64_t v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    int v8 = 351;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(void *)(*(void *)(*(void *)v4 + 8) + 8 * a3);
}

void sub_1891D41D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::ExtensionSet::AddUInt64(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, uint64_t a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  uint64_t v12 = v11;
  std::string v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 11) = a4;
    uint64_t v14 = *(void *)this;
    if (!v14) {
      operator new();
    }
    if (*(unsigned char *)(v14 + 24)) {
    AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v14, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned long long>>);
    }
    *(void *)AlignedAndAddCleanup = 0;
    *((void *)AlignedAndAddCleanup + 1) = v14;
    void *v12 = AlignedAndAddCleanup;
  }
  else
  {
    AlignedAndAddCleanup = (char *)*v11;
  }
  uint64_t v16 = *(unsigned int *)AlignedAndAddCleanup;
  if (v16 == *((_DWORD *)AlignedAndAddCleanup + 1))
  {
    int v17 = v16 + 1;
    google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)AlignedAndAddCleanup, v16 + 1);
    *(void *)(*((void *)AlignedAndAddCleanup + 1) + 8 * v16) = a5;
  }
  else
  {
    *(void *)(*((void *)AlignedAndAddCleanup + 1) + 8 * v16) = a5;
    int v17 = v16 + 1;
  }
  *(_DWORD *)AlignedAndAddCleanup = v17;
}

float google::protobuf::internal::ExtensionSet::GetRepeatedFloat(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    int v6 = 3;
    uint64_t v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    int v8 = 352;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(float *)(*(void *)(*(void *)v4 + 8) + 4 * a3);
}

void sub_1891D43DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::ExtensionSet::AddFloat(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, float a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  uint64_t v12 = v11;
  std::string v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 11) = a4;
    uint64_t v14 = *(void *)this;
    if (!v14) {
      operator new();
    }
    if (*(unsigned char *)(v14 + 24)) {
    AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v14, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<float>>);
    }
    *(void *)AlignedAndAddCleanup = 0;
    *((void *)AlignedAndAddCleanup + 1) = v14;
    void *v12 = AlignedAndAddCleanup;
  }
  else
  {
    AlignedAndAddCleanup = (char *)*v11;
  }
  uint64_t v16 = *(unsigned int *)AlignedAndAddCleanup;
  if (v16 == *((_DWORD *)AlignedAndAddCleanup + 1))
  {
    int v17 = v16 + 1;
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)AlignedAndAddCleanup, v16 + 1);
    *(float *)(*((void *)AlignedAndAddCleanup + 1) + 4 * v16) = a5;
  }
  else
  {
    *(float *)(*((void *)AlignedAndAddCleanup + 1) + 4 * v16) = a5;
    int v17 = v16 + 1;
  }
  *(_DWORD *)AlignedAndAddCleanup = v17;
}

double google::protobuf::internal::ExtensionSet::GetRepeatedDouble(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    int v6 = 3;
    uint64_t v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    int v8 = 353;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(double *)(*(void *)(*(void *)v4 + 8) + 8 * a3);
}

void sub_1891D45EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::ExtensionSet::AddDouble(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, double a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  uint64_t v12 = v11;
  std::string v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 11) = a4;
    uint64_t v14 = *(void *)this;
    if (!v14) {
      operator new();
    }
    if (*(unsigned char *)(v14 + 24)) {
    AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v14, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<double>>);
    }
    *(void *)AlignedAndAddCleanup = 0;
    *((void *)AlignedAndAddCleanup + 1) = v14;
    void *v12 = AlignedAndAddCleanup;
  }
  else
  {
    AlignedAndAddCleanup = (char *)*v11;
  }
  uint64_t v16 = *(unsigned int *)AlignedAndAddCleanup;
  if (v16 == *((_DWORD *)AlignedAndAddCleanup + 1))
  {
    int v17 = v16 + 1;
    google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)AlignedAndAddCleanup, v16 + 1);
    *(double *)(*((void *)AlignedAndAddCleanup + 1) + 8 * v16) = a5;
  }
  else
  {
    *(double *)(*((void *)AlignedAndAddCleanup + 1) + 8 * v16) = a5;
    int v17 = v16 + 1;
  }
  *(_DWORD *)AlignedAndAddCleanup = v17;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedBool(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    int v6 = 3;
    uint64_t v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    int v8 = 354;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(unsigned __int8 *)(*(void *)(*(void *)v4 + 8) + a3);
}

void sub_1891D47FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::ExtensionSet::AddBool(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, char a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  uint64_t v12 = v11;
  std::string v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 11) = a4;
    uint64_t v14 = *(void *)this;
    if (!v14) {
      operator new();
    }
    if (*(unsigned char *)(v14 + 24)) {
    AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v14, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<BOOL>>);
    }
    *(void *)AlignedAndAddCleanup = 0;
    *((void *)AlignedAndAddCleanup + 1) = v14;
    void *v12 = AlignedAndAddCleanup;
  }
  else
  {
    AlignedAndAddCleanup = (char *)*v11;
  }
  uint64_t v16 = *(unsigned int *)AlignedAndAddCleanup;
  if (v16 == *((_DWORD *)AlignedAndAddCleanup + 1))
  {
    int v17 = v16 + 1;
    google::protobuf::RepeatedField<BOOL>::Reserve((unsigned int *)AlignedAndAddCleanup, v16 + 1);
    *(unsigned char *)(*((void *)AlignedAndAddCleanup + 1) + v16) = a5;
  }
  else
  {
    *(unsigned char *)(*((void *)AlignedAndAddCleanup + 1) + v16) = a5;
    int v17 = v16 + 1;
  }
  *(_DWORD *)AlignedAndAddCleanup = v17;
}

uint64_t *google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(google::protobuf::internal::ExtensionSet *this, int a2, int a3, char a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t v9 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  int v10 = v9;
  std::string v9[2] = (uint64_t *)a5;
  if (v11)
  {
    *((unsigned char *)v9 + 9) = 1;
    *((unsigned char *)v9 + 8) = a3;
    *((unsigned char *)v9 + 11) = a4;
    switch(a3)
    {
      case 1:
        uint64_t v12 = *(void *)this;
        if (!v12) {
          goto LABEL_32;
        }
        if (*(unsigned char *)(v12 + 24)) {
        char v13 = google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<double>>;
        }
        goto LABEL_31;
      case 2:
        uint64_t v12 = *(void *)this;
        if (!v12) {
          goto LABEL_32;
        }
        if (*(unsigned char *)(v12 + 24)) {
        char v13 = google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<float>>;
        }
        goto LABEL_31;
      case 3:
      case 16:
      case 18:
        uint64_t v12 = *(void *)this;
        if (!v12) {
          goto LABEL_32;
        }
        if (*(unsigned char *)(v12 + 24)) {
        char v13 = google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<long long>>;
        }
        goto LABEL_31;
      case 4:
      case 6:
        uint64_t v12 = *(void *)this;
        if (!v12) {
          goto LABEL_32;
        }
        if (*(unsigned char *)(v12 + 24)) {
        char v13 = google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned long long>>;
        }
        goto LABEL_31;
      case 5:
      case 14:
      case 15:
      case 17:
        uint64_t v12 = *(void *)this;
        if (!v12) {
          goto LABEL_32;
        }
        if (*(unsigned char *)(v12 + 24)) {
        char v13 = google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<int>>;
        }
        goto LABEL_31;
      case 7:
      case 13:
        uint64_t v12 = *(void *)this;
        if (!v12) {
          goto LABEL_32;
        }
        if (*(unsigned char *)(v12 + 24)) {
        char v13 = google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned int>>;
        }
        goto LABEL_31;
      case 8:
        uint64_t v12 = *(void *)this;
        if (!v12) {
LABEL_32:
        }
          operator new();
        if (*(unsigned char *)(v12 + 24)) {
        char v13 = google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<BOOL>>;
        }
LABEL_31:
        AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v12, 0x10uLL, (void (*)(void *))v13);
        *(void *)AlignedAndAddCleanup = 0;
        *((void *)AlignedAndAddCleanup + 1) = v12;
        goto LABEL_43;
      case 9:
      case 12:
        uint64_t v15 = *(void *)this;
        if (!v15) {
          goto LABEL_42;
        }
        if (*(unsigned char *)(v15 + 24)) {
        uint64_t v16 = (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<std::string>>;
        }
        goto LABEL_41;
      case 10:
      case 11:
        uint64_t v15 = *(void *)this;
        if (!v15) {
LABEL_42:
        }
          operator new();
        if (*(unsigned char *)(v15 + 24)) {
        uint64_t v16 = (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>>;
        }
LABEL_41:
        AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v15, 0x18uLL, v16);
        *((void *)AlignedAndAddCleanup + 2) = 0;
        *(void *)AlignedAndAddCleanup = v15;
        *((void *)AlignedAndAddCleanup + 1) = 0;
LABEL_43:
        uint64_t *v10 = (uint64_t *)AlignedAndAddCleanup;
        break;
      default:
        return *v10;
    }
  }
  return *v10;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedEnum(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    int v6 = 3;
    uint64_t v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    int v8 = 471;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(unsigned int *)(*(void *)(*(void *)v4 + 8) + 4 * a3);
}

void sub_1891D4E78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *google::protobuf::internal::ExtensionSet::MutableString(google::protobuf::internal::ExtensionSet *this, int a2, char a3, const google::protobuf::FieldDescriptor *a4)
{
  uint64_t v7 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  int v8 = v7;
  void v7[2] = (uint64_t *)a4;
  if (v9)
  {
    *((unsigned char *)v7 + 8) = a3;
    *((unsigned char *)v7 + 9) = 0;
    uint64_t v10 = *(void *)this;
    if (!v10) {
      operator new();
    }
    if (*(unsigned char *)(v10 + 24)) {
    uint64_t result = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v10, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
    }
    *(void *)uint64_t result = 0;
    *((void *)result + 1) = 0;
    *((void *)result + 2) = 0;
    *int v8 = (uint64_t *)result;
  }
  else
  {
    uint64_t result = (char *)*v7;
  }
  *((unsigned char *)v8 + 10) &= 0xF0u;
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedString(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    int v6 = 3;
    uint64_t v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    int v8 = 533;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(void *)(*(void *)(*(void *)v4 + 16) + 8 * a3 + 8);
}

void sub_1891D5038(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *google::protobuf::internal::ExtensionSet::AddString(google::protobuf::internal::ExtensionSet *this, int a2, char a3, const google::protobuf::FieldDescriptor *a4)
{
  uint64_t v7 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  int v8 = v7;
  void v7[2] = (uint64_t *)a4;
  if (v9)
  {
    *((unsigned char *)v7 + 8) = a3;
    *((unsigned char *)v7 + 9) = 1;
    *((unsigned char *)v7 + 11) = 0;
    uint64_t v10 = *(void *)this;
    if (!*(void *)this) {
      operator new();
    }
    if (*(unsigned char *)(v10 + 24)) {
    AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v10, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<std::string>>);
    }
    *((void *)AlignedAndAddCleanup + 2) = 0;
    *(void *)AlignedAndAddCleanup = v10;
    *((void *)AlignedAndAddCleanup + 1) = 0;
    *int v8 = AlignedAndAddCleanup;
  }
  else
  {
    AlignedAndAddCleanup = (char *)*v7;
  }
  uint64_t v12 = (int *)*((void *)AlignedAndAddCleanup + 2);
  if (!v12)
  {
    int v13 = *((_DWORD *)AlignedAndAddCleanup + 2);
    int v14 = *((_DWORD *)AlignedAndAddCleanup + 3);
LABEL_13:
    if (v13 <= v14)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)AlignedAndAddCleanup, v14 - v13 + 1);
      uint64_t v12 = (int *)*((void *)AlignedAndAddCleanup + 2);
    }
    int v14 = *v12;
    goto LABEL_16;
  }
  int v13 = *((_DWORD *)AlignedAndAddCleanup + 2);
  int v14 = *v12;
  if (v13 < *v12)
  {
    *((_DWORD *)AlignedAndAddCleanup + 2) = v13 + 1;
    return *(char **)&v12[2 * v13 + 2];
  }
  if (v14 == *((_DWORD *)AlignedAndAddCleanup + 3)) {
    goto LABEL_13;
  }
LABEL_16:
  int *v12 = v14 + 1;
  uint64_t v16 = *(void *)AlignedAndAddCleanup;
  if (!*(void *)AlignedAndAddCleanup) {
    operator new();
  }
  if (*(unsigned char *)(v16 + 24)) {
  uint64_t result = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v16, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
  }
  *(void *)uint64_t result = 0;
  *((void *)result + 1) = 0;
  *((void *)result + 2) = 0;
  uint64_t v17 = *((void *)AlignedAndAddCleanup + 2);
  uint64_t v18 = *((int *)AlignedAndAddCleanup + 2);
  *((_DWORD *)AlignedAndAddCleanup + 2) = v18 + 1;
  *(void *)(v17 + 8 * v18 + 8) = result;
  return result;
}

uint64_t *google::protobuf::internal::ExtensionSet::MutableMessage(google::protobuf::internal::ExtensionSet *this, int a2, char a3, const google::protobuf::MessageLite *a4, const google::protobuf::FieldDescriptor *a5)
{
  char v9 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  uint64_t v10 = v9;
  std::string v9[2] = (uint64_t *)a5;
  if (v11)
  {
    *((unsigned char *)v9 + 8) = a3;
    *((unsigned char *)v9 + 9) = 0;
    *((unsigned char *)v9 + 10) &= 0xFu;
    uint64_t result = (uint64_t *)(*(uint64_t (**)(const google::protobuf::MessageLite *, void))(*(void *)a4 + 32))(a4, *(void *)this);
    uint64_t *v10 = result;
    *((unsigned char *)v10 + 10) &= 0xF0u;
  }
  else
  {
    char v13 = *((unsigned char *)v9 + 10);
    *((unsigned char *)v9 + 10) = v13 & 0xF0;
    uint64_t result = *v9;
    if ((v13 & 0x10) != 0)
    {
      int v14 = *(uint64_t (**)(void))(*result + 32);
      return (uint64_t *)v14();
    }
  }
  return result;
}

unsigned char *google::protobuf::internal::ExtensionSet::UnsafeArenaSetAllocatedMessage(google::protobuf::internal::ExtensionSet *this, int a2, char a3, const google::protobuf::FieldDescriptor *a4, google::protobuf::MessageLite *a5)
{
  if (a5)
  {
    uint64_t result = google::protobuf::internal::ExtensionSet::Insert(this, a2);
    uint64_t v10 = result;
    *((void *)result + 2) = a4;
    if (v11)
    {
      result[8] = a3;
      result[9] = 0;
      result[10] &= 0xFu;
    }
    else
    {
      if ((result[10] & 0x10) != 0)
      {
        uint64_t result = (unsigned char *)(*(uint64_t (**)(void))(**(void **)result + 48))();
        goto LABEL_5;
      }
      if (!*(void *)this)
      {
        uint64_t result = *(unsigned char **)result;
        if (*(void *)v10) {
          uint64_t result = (unsigned char *)(*(uint64_t (**)(unsigned char *))(*(void *)result + 8))(result);
        }
      }
    }
    *(void *)uint64_t v10 = a5;
LABEL_5:
    v10[10] &= 0xF0u;
    return result;
  }
  uint64_t result = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (result)
  {
    return google::protobuf::internal::ExtensionSet::Extension::Clear(result);
  }
  return result;
}

char *google::protobuf::internal::ExtensionSet::Erase(google::protobuf::internal::ExtensionSet *this, int a2)
{
  int v12 = a2;
  unsigned int v3 = *((unsigned __int16 *)this + 4);
  uint64_t result = (char *)*((void *)this + 2);
  if (v3 >= 0x101) {
    return (char *)std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__erase_unique<int>((uint64_t)result, &v12);
  }
  uint64_t v5 = *((unsigned __int16 *)this + 5);
  if (*((_WORD *)this + 5))
  {
    int v6 = &result[32 * v5];
    unint64_t v7 = *((unsigned __int16 *)this + 5);
    do
    {
      unint64_t v8 = v7 >> 1;
      char v9 = (int *)&result[32 * (v7 >> 1)];
      int v11 = *v9;
      uint64_t v10 = (char *)(v9 + 8);
      v7 += ~(v7 >> 1);
      if (v11 < a2) {
        uint64_t result = v10;
      }
      else {
        unint64_t v7 = v8;
      }
    }
    while (v7);
    if (result != v6 && *(_DWORD *)result == a2)
    {
      if (v6 != result + 32)
      {
        uint64_t result = (char *)memmove(result, result + 32, v6 - (result + 32));
        LOWORD(v5) = *((_WORD *)this + 5);
      }
      *((_WORD *)this + 5) = v5 - 1;
    }
  }
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedMessage(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    int v6 = 3;
    unint64_t v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    int v8 = 744;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(void *)(*(void *)(*(void *)v4 + 16) + 8 * a3 + 8);
}

void sub_1891D55E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::ExtensionSet::MutableRepeatedMessage(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    int v6 = 3;
    unint64_t v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    int v8 = 751;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(void *)(*(void *)(*(void *)v4 + 16) + 8 * a3 + 8);
}

void sub_1891D56B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::ExtensionSet::AddMessage(google::protobuf::internal::ExtensionSet *this, int a2, char a3, const google::protobuf::MessageLite *a4, const google::protobuf::FieldDescriptor *a5)
{
  char v9 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  uint64_t v10 = (unsigned int **)v9;
  std::string v9[2] = (uint64_t *)a5;
  if (v11)
  {
    *((unsigned char *)v9 + 8) = a3;
    *((unsigned char *)v9 + 9) = 1;
    uint64_t v12 = *(void *)this;
    if (!*(void *)this) {
      operator new();
    }
    if (*(unsigned char *)(v12 + 24)) {
    AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v12, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>>);
    }
    *((void *)AlignedAndAddCleanup + 2) = 0;
    *(void *)AlignedAndAddCleanup = v12;
    *((void *)AlignedAndAddCleanup + 1) = 0;
    char *v10 = (unsigned int *)AlignedAndAddCleanup;
  }
  else
  {
    AlignedAndAddCleanup = (char *)*v9;
  }
  int v14 = (_DWORD *)*((void *)AlignedAndAddCleanup + 2);
  if (!v14
    || (uint64_t v15 = *((int *)AlignedAndAddCleanup + 2), (int)v15 >= *v14)
    || (*((_DWORD *)AlignedAndAddCleanup + 2) = v15 + 1, (uint64_t v16 = *(void *)&v14[2 * v15 + 2]) == 0))
  {
    uint64_t v16 = (*(uint64_t (**)(const google::protobuf::MessageLite *, void))(*(void *)a4 + 32))(a4, *(void *)this);
    google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(*v10, v16);
  }
  return v16;
}

unsigned char *google::protobuf::internal::ExtensionSet::Clear(unsigned char *this)
{
  int v1 = (void *)*((void *)this + 2);
  if (*((unsigned __int16 *)this + 4) >= 0x101u)
  {
    int v6 = (void *)*v1;
    uint64_t v4 = v1 + 1;
    uint64_t v5 = v6;
    if (v6 != v4)
    {
      do
      {
        this = google::protobuf::internal::ExtensionSet::Extension::Clear((unsigned char *)v5 + 40);
        unint64_t v7 = (void *)v5[1];
        if (v7)
        {
          do
          {
            int v8 = v7;
            unint64_t v7 = (void *)*v7;
          }
          while (v7);
        }
        else
        {
          do
          {
            int v8 = (void *)v5[2];
            BOOL v9 = *v8 == (void)v5;
            uint64_t v5 = v8;
          }
          while (!v9);
        }
        uint64_t v5 = v8;
      }
      while (v8 != v4);
    }
  }
  else if (*((_WORD *)this + 5))
  {
    uint64_t v2 = 32 * *((unsigned __int16 *)this + 5);
    unsigned int v3 = v1 + 1;
    do
    {
      this = google::protobuf::internal::ExtensionSet::Extension::Clear(v3);
      v3 += 32;
      v2 -= 32;
    }
    while (v2);
  }
  return this;
}

void google::protobuf::internal::ExtensionSet::MergeFrom(google::protobuf::internal::ExtensionSet *this, const google::protobuf::internal::ExtensionSet *a2)
{
  if (*((unsigned __int16 *)this + 4) <= 0x100u)
  {
    unsigned int v4 = *((unsigned __int16 *)a2 + 4);
    uint64_t v5 = (char *)*((void *)this + 2);
    uint64_t v6 = *((unsigned __int16 *)this + 5);
    unint64_t v7 = &v5[32 * v6];
    uint64_t v8 = *((void *)a2 + 2);
    if (v4 > 0x100)
    {
    }
    else
    {
      uint64_t v9 = *((unsigned __int16 *)a2 + 5);
      uint64_t v10 = v8 + 32 * v9;
      BOOL v12 = v6 == 0;
      uint64_t v11 = 0;
      BOOL v12 = v12 || v9 == 0;
      if (!v12)
      {
        do
        {
          if (*(_DWORD *)v5 == *(_DWORD *)v8) {
            char v13 = v5 + 32;
          }
          else {
            char v13 = v5;
          }
          if (*(_DWORD *)v5 < *(_DWORD *)v8)
          {
            v5 += 32;
          }
          else
          {
            v8 += 32;
            uint64_t v5 = v13;
          }
          ++v11;
        }
        while (v5 != v7 && v8 != v10);
      }
      unint64_t v14 = v11 + ((v10 - v8) >> 5) + ((v7 - v5) >> 5);
    }
    google::protobuf::internal::ExtensionSet::GrowCapacity(this, v14);
  }
  uint64_t v15 = *((void *)a2 + 2);
  if (*((unsigned __int16 *)a2 + 4) >= 0x101u)
  {
    int v19 = *(void **)v15;
    google::protobuf::internal::ExtensionSet::ForEach<std::__map_iterator<std::__tree_iterator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__tree_node<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,void *> *,long>>,google::protobuf::internal::ExtensionSet::MergeFrom(google::protobuf::internal::ExtensionSet const&)::$_0>(v19, (void *)(v15 + 8), this);
  }
  else if (*((_WORD *)a2 + 5))
  {
    uint64_t v16 = v15 + 32 * *((unsigned __int16 *)a2 + 5);
    do
    {
      uint64_t v17 = (int **)(v15 + 8);
      int v18 = *(_DWORD *)v15;
      v15 += 32;
      google::protobuf::internal::ExtensionSet::InternalExtensionMergeFrom(this, v18, v17);
    }
    while (v15 != v16);
  }
}

void *google::protobuf::internal::ExtensionSet::GrowCapacity(void *this, unint64_t a2)
{
  unint64_t v2 = *((unsigned __int16 *)this + 4);
  if (v2 <= 0x100 && v2 < a2)
  {
    unsigned int v4 = this;
    do
    {
      if ((_WORD)v2) {
        LOWORD(v2) = 4 * v2;
      }
      else {
        LOWORD(v2) = 1;
      }
    }
    while ((unsigned __int16)v2 < a2);
    uint64_t v5 = (char *)this[2];
    uint64_t v6 = *((unsigned __int16 *)this + 5);
    unint64_t v7 = (uint64_t *)*this;
    if ((unsigned __int16)v2 < 0x101u)
    {
      unint64_t v8 = 32 * (unsigned __int16)v2;
      if (v7)
      {
        if (v7[3]) {
        this = google::protobuf::internal::ArenaImpl::AllocateAligned(v7, v8);
        }
      }
      else
      {
        this = operator new[](32 * (unsigned __int16)v2);
      }
      uint64_t v9 = (uint64_t **)this;
      if (v6) {
        this = memmove(this, v5, 32 * v6);
      }
    }
    else
    {
      if (!v7) {
        operator new();
      }
      if (v7[3]) {
      this = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v7, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::map<int,google::protobuf::internal::ExtensionSet::Extension>>);
      }
      uint64_t v9 = (uint64_t **)this;
      this[1] = 0;
      uint64_t v10 = this + 1;
      this[2] = 0;
      *this = this + 1;
      if (v6)
      {
        unint64_t v31 = v5;
        uint8x8_t v32 = v4;
        uint64_t v11 = &v5[32 * v6];
        BOOL v12 = this + 1;
        char v13 = v5;
        while (1)
        {
          int v14 = *(_DWORD *)v13;
          *(_OWORD *)&v33[4] = *(_OWORD *)(v13 + 8);
          *(void *)&v33[20] = *((void *)v13 + 3);
          if (v12 == v10) {
            break;
          }
          int v15 = *((_DWORD *)v10 + 8);
          if (v15 > v14) {
            break;
          }
          if (v15 < v14)
          {
            uint64_t v22 = (uint64_t **)(v10 + 1);
            uint64_t v23 = (uint64_t *)v10[1];
            if (v23)
            {
              do
              {
                uint64_t v22 = (uint64_t **)v23;
                uint64_t v23 = (uint64_t *)*v23;
                uint64_t v10 = (uint64_t *)v22;
                uint64_t v24 = (uint64_t *)v22;
              }
              while (v23);
            }
            else
            {
              uint64_t v24 = v10;
              do
              {
                int v27 = v24;
                uint64_t v24 = (uint64_t *)v24[2];
              }
              while ((uint64_t *)*v24 != v27);
            }
            if (v24 != v12 && *((_DWORD *)v24 + 8) <= v14)
            {
              uint64_t v28 = *v12;
              uint64_t v22 = v9 + 1;
              uint64_t v10 = (uint64_t *)(v9 + 1);
              if (*v12)
              {
                while (1)
                {
                  while (1)
                  {
                    uint64_t v10 = (uint64_t *)v28;
                    int v29 = *(_DWORD *)(v28 + 32);
                    if (v29 <= v14) {
                      break;
                    }
                    uint64_t v28 = *v10;
                    uint64_t v22 = (uint64_t **)v10;
                    if (!*v10) {
                      goto LABEL_60;
                    }
                  }
                  if (v29 >= v14) {
                    goto LABEL_61;
                  }
                  uint64_t v28 = v10[1];
                  if (!v28)
                  {
LABEL_48:
                    uint64_t v22 = (uint64_t **)(v10 + 1);
                    break;
                  }
                }
              }
            }
LABEL_60:
            uint8x8_t v30 = (char *)operator new(0x40uLL);
            *((_DWORD *)v30 + 8) = v14;
            *(_OWORD *)(v30 + 36) = *(_OWORD *)v33;
            *((_OWORD *)v30 + 3) = *(_OWORD *)&v33[12];
            this = std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::__insert_node_at(v9, (uint64_t)v10, v22, (uint64_t *)v30);
            uint64_t v10 = (uint64_t *)v30;
          }
LABEL_61:
          v13 += 32;
          if (v13 == v11)
          {
            uint64_t v5 = v31;
            unsigned int v4 = v32;
            goto LABEL_66;
          }
        }
        uint64_t v16 = *v10;
        uint64_t v17 = v10;
        if (*v9 == v10) {
          goto LABEL_30;
        }
        uint64_t v18 = *v10;
        int v19 = v10;
        if (v16)
        {
          do
          {
            uint64_t v17 = (uint64_t *)v18;
            uint64_t v18 = *(void *)(v18 + 8);
          }
          while (v18);
        }
        else
        {
          do
          {
            uint64_t v17 = (uint64_t *)v19[2];
            BOOL v20 = *v17 == (void)v19;
            int v19 = v17;
          }
          while (v20);
        }
        if (*((_DWORD *)v17 + 8) < v14)
        {
LABEL_30:
          BOOL v20 = v16 == 0;
          if (v16) {
            int v21 = v17;
          }
          else {
            int v21 = v10;
          }
          if (v20) {
            uint64_t v22 = (uint64_t **)v10;
          }
          else {
            uint64_t v22 = (uint64_t **)(v17 + 1);
          }
          uint64_t v10 = *v22;
          if (*v22) {
            goto LABEL_61;
          }
          uint64_t v10 = v21;
        }
        else
        {
          uint64_t v25 = *v12;
          uint64_t v22 = v9 + 1;
          uint64_t v10 = (uint64_t *)(v9 + 1);
          if (*v12)
          {
            while (1)
            {
              while (1)
              {
                uint64_t v10 = (uint64_t *)v25;
                int v26 = *(_DWORD *)(v25 + 32);
                if (v26 <= v14) {
                  break;
                }
                uint64_t v25 = *v10;
                uint64_t v22 = (uint64_t **)v10;
                if (!*v10) {
                  goto LABEL_60;
                }
              }
              if (v26 >= v14) {
                goto LABEL_61;
              }
              uint64_t v25 = v10[1];
              if (!v25) {
                goto LABEL_48;
              }
            }
          }
        }
        goto LABEL_60;
      }
    }
LABEL_66:
    if (!*v4 && v5) {
      this = (void *)MEMORY[0x18C11F560](v5, 0x1062C802AB6010CLL);
    }
    *((_WORD *)v4 + 4) = v2;
    v4[2] = v9;
    if ((unsigned __int16)v2 >= 0x101u) {
      *((_WORD *)v4 + 5) = 0;
    }
  }
  return this;
}

uint64_t google::protobuf::internal::anonymous namespace'::SizeOfUnion<google::protobuf::internal::ExtensionSet::KeyValue *,std::__map_iterator<std::__tree_iterator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__tree_node<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,void *> *,long>>>(char *a1, char *a2, void *a3, void *a4)
{
  uint64_t v4 = 0;
  if (a1 != a2 && a3 != a4)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *((_DWORD *)a3 + 8);
      if (*(_DWORD *)a1 >= v5)
      {
        if (*(_DWORD *)a1 == v5)
        {
          a1 += 32;
          uint64_t v6 = (void *)a3[1];
          if (v6)
          {
            do
            {
              a3 = v6;
              uint64_t v6 = (void *)*v6;
            }
            while (v6);
          }
          else
          {
            do
            {
              unint64_t v7 = a3;
              a3 = (void *)a3[2];
            }
            while ((void *)*a3 != v7);
          }
        }
        else
        {
          unint64_t v8 = (void *)a3[1];
          if (v8)
          {
            do
            {
              a3 = v8;
              unint64_t v8 = (void *)*v8;
            }
            while (v8);
          }
          else
          {
            do
            {
              uint64_t v9 = a3;
              a3 = (void *)a3[2];
            }
            while ((void *)*a3 != v9);
          }
        }
      }
      else
      {
        a1 += 32;
      }
      ++v4;
    }
    while (a1 != a2 && a3 != a4);
  }
  if (a3 == a4)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    do
    {
      uint64_t v11 = (void *)a3[1];
      if (v11)
      {
        do
        {
          BOOL v12 = v11;
          uint64_t v11 = (void *)*v11;
        }
        while (v11);
      }
      else
      {
        do
        {
          BOOL v12 = (void *)a3[2];
          BOOL v13 = *v12 == (void)a3;
          a3 = v12;
        }
        while (!v13);
      }
      ++v10;
      a3 = v12;
    }
    while (v12 != a4);
  }
  return v4 + ((a2 - a1) >> 5) + v10;
}

void google::protobuf::internal::ExtensionSet::InternalExtensionMergeFrom(google::protobuf::internal::ExtensionSet *this, int a2, int **a3)
{
  if (!*((unsigned char *)a3 + 9))
  {
    if (*((unsigned char *)a3 + 10)) {
      return;
    }
    char v12 = *((unsigned char *)a3 + 8);
    switch(v12)
    {
      case 1:
        uint64_t v39 = (uint64_t *)*a3;
        uint64_t v40 = (uint64_t *)a3[2];
        uint64_t v41 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v41[2] = v40;
        if (v42)
        {
          *((unsigned char *)v41 + 8) = v12;
          *((unsigned char *)v41 + 9) = 0;
        }
        *((unsigned char *)v41 + 10) &= 0xF0u;
        int *v41 = v39;
        return;
      case 2:
        int v43 = *(_DWORD *)a3;
        uint64_t v44 = (uint64_t *)a3[2];
        uint64_t v45 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v45[2] = v44;
        if (v46)
        {
          *((unsigned char *)v45 + 8) = v12;
          *((unsigned char *)v45 + 9) = 0;
        }
        *((unsigned char *)v45 + 10) &= 0xF0u;
        *(_DWORD *)uint64_t v45 = v43;
        return;
      case 3:
      case 4:
      case 6:
      case 16:
      case 18:
        uint64_t v33 = (uint64_t *)*a3;
        uint64_t v34 = (uint64_t *)a3[2];
        unint64_t v35 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        std::string v35[2] = v34;
        if (v36)
        {
          *((unsigned char *)v35 + 8) = v12;
          *((unsigned char *)v35 + 9) = 0;
        }
        *((unsigned char *)v35 + 10) &= 0xF0u;
        char *v35 = v33;
        return;
      case 5:
      case 7:
      case 13:
      case 14:
      case 15:
      case 17:
        int v13 = *(_DWORD *)a3;
        int v14 = (uint64_t *)a3[2];
        int v15 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        void v15[2] = v14;
        if (v16)
        {
          *((unsigned char *)v15 + 8) = v12;
          *((unsigned char *)v15 + 9) = 0;
        }
        *((unsigned char *)v15 + 10) &= 0xF0u;
        *(_DWORD *)int v15 = v13;
        return;
      case 8:
        char v47 = *(unsigned char *)a3;
        uint64_t v48 = (uint64_t *)a3[2];
        int v49 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v49[2] = v48;
        if (v50)
        {
          *((unsigned char *)v49 + 8) = v12;
          *((unsigned char *)v49 + 9) = 0;
        }
        *((unsigned char *)v49 + 10) &= 0xF0u;
        *(unsigned char *)int v49 = v47;
        return;
      case 9:
      case 12:
        uint64_t v57 = (long long *)*a3;
        if (*((char *)*a3 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v57, *((void *)v57 + 1));
        }
        else
        {
          long long v58 = *v57;
          __p.__r_.__value_.__r.__words[2] = *((void *)v57 + 2);
          *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v58;
        }
        google::protobuf::internal::ExtensionSet::SetString(this, a2, v12, (__n128 *)&__p, (google::protobuf::FieldDescriptor *)a3[2]);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        return;
      case 10:
      case 11:
        uint64_t v51 = (uint64_t *)a3[2];
        unsigned int v52 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        uint64_t v53 = v52;
        v52[2] = v51;
        if (v54)
        {
          *((unsigned char *)v52 + 8) = *((unsigned char *)a3 + 8);
          *((unsigned char *)v52 + 11) = *((unsigned char *)a3 + 11);
          *((unsigned char *)v52 + 9) = 0;
          char v55 = *((unsigned char *)v52 + 10) & 0xF;
          if ((*((unsigned char *)a3 + 10) & 0x10) != 0)
          {
            *((unsigned char *)v52 + 10) = v55 | 0x10;
            uint64_t v92 = (*(uint64_t (**)(int *, void))(*(void *)*a3 + 16))(*a3, *(void *)this);
            *uint64_t v53 = (uint64_t *)v92;
            (*(void (**)(uint64_t, int *))(*(void *)v92 + 104))(v92, *a3);
            goto LABEL_121;
          }
          *((unsigned char *)v52 + 10) = v55;
          uint64_t v56 = (*(uint64_t (**)(int *, void))(*(void *)*a3 + 32))(*a3, *(void *)this);
          *uint64_t v53 = (uint64_t *)v56;
LABEL_112:
          (*(void (**)(uint64_t, int *))(*(void *)v56 + 64))(v56, *a3);
LABEL_121:
          *((unsigned char *)v53 + 10) &= 0xF0u;
          return;
        }
        int v89 = *v52;
        uint64_t v90 = (uint64_t)*a3;
        if ((*((unsigned char *)a3 + 10) & 0x10) != 0)
        {
          if ((*((unsigned char *)v52 + 10) & 0x10) != 0)
          {
            (*(void (**)(uint64_t *, uint64_t))(*v89 + 104))(*v52, v90);
            goto LABEL_121;
          }
          uint64_t v90 = (*(uint64_t (**)(int *, uint64_t *))(*(void *)v90 + 24))(*a3, *v52);
          uint64_t v91 = *v89;
        }
        else
        {
          uint64_t v91 = *v89;
          if ((*((unsigned char *)v52 + 10) & 0x10) != 0)
          {
            uint64_t v56 = (*(uint64_t (**)(uint64_t *, uint64_t))(v91 + 32))(*v52, v90);
            goto LABEL_112;
          }
        }
        (*(void (**)(uint64_t *, uint64_t))(v91 + 64))(v89, v90);
        goto LABEL_121;
      default:
        return;
    }
  }
  uint64_t v6 = (uint64_t *)a3[2];
  unint64_t v7 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  uint64_t v9 = (unsigned int **)v7;
  void v7[2] = v6;
  if (v8)
  {
    *((unsigned char *)v7 + 8) = *((unsigned char *)a3 + 8);
    *((unsigned char *)v7 + 11) = *((unsigned char *)a3 + 11);
    *((unsigned char *)v7 + 9) = 1;
  }
  switch(*((unsigned char *)a3 + 8))
  {
    case 1:
      if (v8)
      {
        uint64_t v23 = *(void *)this;
        if (!v23) {
          operator new();
        }
        if (*(unsigned char *)(v23 + 24)) {
        AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v23, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<double>>);
        }
        *(void *)AlignedAndAddCleanup = 0;
        *((void *)AlignedAndAddCleanup + 1) = v23;
        void *v9 = (unsigned int *)AlignedAndAddCleanup;
      }
      int v59 = *a3;
      int v60 = **a3;
      if (v60) {
        goto LABEL_86;
      }
      break;
    case 2:
      if (v8)
      {
        uint64_t v25 = *(void *)this;
        if (!v25) {
          operator new();
        }
        if (*(unsigned char *)(v25 + 24)) {
        int v26 = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v25, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<float>>);
        }
        *(void *)int v26 = 0;
        *((void *)v26 + 1) = v25;
        void *v9 = (unsigned int *)v26;
      }
      BOOL v37 = *a3;
      int v38 = **a3;
      if (v38) {
        goto LABEL_89;
      }
      break;
    case 3:
    case 0x10:
    case 0x12:
      if (v8)
      {
        uint64_t v17 = *(void *)this;
        if (!v17) {
          operator new();
        }
        if (*(unsigned char *)(v17 + 24)) {
        uint64_t v18 = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v17, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<long long>>);
        }
        *(void *)uint64_t v18 = 0;
        *((void *)v18 + 1) = v17;
        void *v9 = (unsigned int *)v18;
      }
      int v59 = *a3;
      int v60 = **a3;
      if (v60) {
        goto LABEL_86;
      }
      break;
    case 4:
    case 6:
      if (v8)
      {
        uint64_t v21 = *(void *)this;
        if (!v21) {
          operator new();
        }
        if (*(unsigned char *)(v21 + 24)) {
        uint64_t v22 = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v21, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned long long>>);
        }
        *(void *)uint64_t v22 = 0;
        *((void *)v22 + 1) = v21;
        void *v9 = (unsigned int *)v22;
      }
      int v59 = *a3;
      int v60 = **a3;
      if (v60)
      {
LABEL_86:
        uint64_t v61 = *v9;
        uint64_t v62 = (int)**v9;
        google::protobuf::RepeatedField<long long>::Reserve(v61, v62 + v60);
        uint64_t v63 = *((void *)v61 + 1);
        *v61 += *v59;
        int64_t v64 = (void *)(v63 + 8 * v62);
        int64_t v65 = (const void *)*((void *)v59 + 1);
        size_t v66 = 8 * *v59;
        goto LABEL_93;
      }
      break;
    case 5:
    case 0xE:
    case 0xF:
    case 0x11:
      if (v8)
      {
        uint64_t v10 = *(void *)this;
        if (!v10) {
          operator new();
        }
        if (*(unsigned char *)(v10 + 24)) {
        uint64_t v11 = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v10, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<int>>);
        }
        *(void *)uint64_t v11 = 0;
        *((void *)v11 + 1) = v10;
        void *v9 = (unsigned int *)v11;
      }
      BOOL v37 = *a3;
      int v38 = **a3;
      if (v38) {
        goto LABEL_89;
      }
      break;
    case 7:
    case 0xD:
      if (v8)
      {
        uint64_t v19 = *(void *)this;
        if (!v19) {
          operator new();
        }
        if (*(unsigned char *)(v19 + 24)) {
        BOOL v20 = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v19, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned int>>);
        }
        *(void *)BOOL v20 = 0;
        *((void *)v20 + 1) = v19;
        void *v9 = (unsigned int *)v20;
      }
      BOOL v37 = *a3;
      int v38 = **a3;
      if (v38)
      {
LABEL_89:
        unsigned int v67 = *v9;
        uint64_t v68 = (int)**v9;
        google::protobuf::RepeatedField<int>::Reserve(v67, v68 + v38);
        uint64_t v69 = *((void *)v67 + 1);
        *v67 += *v37;
        int64_t v64 = (void *)(v69 + 4 * v68);
        int64_t v65 = (const void *)*((void *)v37 + 1);
        size_t v66 = 4 * *v37;
        goto LABEL_93;
      }
      break;
    case 8:
      if (v8)
      {
        uint64_t v27 = *(void *)this;
        if (!v27) {
          operator new();
        }
        if (*(unsigned char *)(v27 + 24)) {
        uint64_t v28 = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v27, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<BOOL>>);
        }
        *(void *)uint64_t v28 = 0;
        *((void *)v28 + 1) = v27;
        void *v9 = (unsigned int *)v28;
      }
      uint64_t v70 = *a3;
      int v71 = **a3;
      if (v71)
      {
        unsigned int v72 = *v9;
        uint64_t v73 = (int)**v9;
        google::protobuf::RepeatedField<BOOL>::Reserve(v72, v73 + v71);
        uint64_t v74 = *((void *)v72 + 1);
        *v72 += *v70;
        int64_t v64 = (void *)(v74 + v73);
        int64_t v65 = (const void *)*((void *)v70 + 1);
        size_t v66 = *v70;
LABEL_93:
        memcpy(v64, v65, v66);
      }
      break;
    case 9:
    case 0xC:
      if (v8)
      {
        uint64_t v29 = *(void *)this;
        if (!v29) {
          operator new();
        }
        if (*(unsigned char *)(v29 + 24)) {
        uint8x8_t v30 = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v29, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<std::string>>);
        }
        *((void *)v30 + 2) = 0;
        *(void *)uint8x8_t v30 = v29;
        *((void *)v30 + 1) = 0;
        void *v9 = (unsigned int *)v30;
      }
      uint64_t v82 = *a3;
      unsigned int v83 = (*a3)[2];
      if (v83)
      {
        uint64_t v84 = *v9;
        unint64_t v85 = (const std::string **)(*((void *)v82 + 2) + 8);
        int v86 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)v84, v83);
        google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)v84, (std::string **)v86, v85, v83, **((_DWORD **)v84 + 2) - v84[2]);
        signed int v87 = v84[2] + v83;
        v84[2] = v87;
        uint64_t v88 = (signed int *)*((void *)v84 + 2);
        if (*v88 < v87) {
          *uint64_t v88 = v87;
        }
      }
      break;
    case 0xA:
    case 0xB:
      if (v8)
      {
        uint64_t v31 = *(void *)this;
        if (!*(void *)this) {
          operator new();
        }
        if (*(unsigned char *)(v31 + 24)) {
        uint8x8_t v32 = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v31, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>>);
        }
        *((void *)v32 + 2) = 0;
        *(void *)uint8x8_t v32 = v31;
        *((void *)v32 + 1) = 0;
        void *v9 = (unsigned int *)v32;
      }
      uint64_t v75 = *a3;
      if ((*a3)[2] >= 1)
      {
        uint64_t v76 = 0;
        do
        {
          uint64_t v77 = *(void *)(*((void *)v75 + 2) + 8 * v76 + 8);
          uint64_t v78 = *v9;
          unsigned int v79 = (_DWORD *)*((void *)*v9 + 2);
          if (!v79
            || (uint64_t v80 = (int)v78[2], (int)v80 >= *v79)
            || (v78[2] = v80 + 1, (uint64_t v81 = *(void *)&v79[2 * v80 + 2]) == 0))
          {
            uint64_t v81 = (*(uint64_t (**)(uint64_t, void))(*(void *)v77 + 32))(v77, *(void *)this);
            google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(*v9, v81);
          }
          (*(void (**)(uint64_t, uint64_t))(*(void *)v81 + 64))(v81, v77);
          ++v76;
        }
        while (v76 < v75[2]);
      }
      break;
    default:
      return;
  }
}

void sub_1891D6B54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

__n128 google::protobuf::internal::ExtensionSet::SetString(google::protobuf::internal::ExtensionSet *a1, int a2, char a3, __n128 *a4, google::protobuf::FieldDescriptor *a5)
{
  uint64_t v6 = google::protobuf::internal::ExtensionSet::MutableString(a1, a2, a3, a5);
  unint64_t v7 = (__n128 *)v6;
  if (v6[23] < 0) {
    operator delete(*(void **)v6);
  }
  __n128 result = *a4;
  v7[1].n128_u64[0] = a4[1].n128_u64[0];
  *unint64_t v7 = result;
  a4[1].n128_u8[7] = 0;
  a4->n128_u8[0] = 0;
  return result;
}

void google::protobuf::internal::ExtensionSet::Swap(google::protobuf::internal::ExtensionSet *this, google::protobuf::internal::ExtensionSet *a2)
{
  if (*(void *)this == *(void *)a2)
  {
    __int16 v4 = *((_WORD *)this + 4);
    *((_WORD *)this + 4) = *((_WORD *)a2 + 4);
    *((_WORD *)a2 + 4) = v4;
    __int16 v5 = *((_WORD *)this + 5);
    *((_WORD *)this + 5) = *((_WORD *)a2 + 5);
    *((_WORD *)a2 + 5) = v5;
    uint64_t v6 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v6;
  }
  else
  {
    uint64_t v7 = 0;
    int v8 = 0;
    uint64_t v9 = 0;
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::internal::ExtensionSet *)&v7, a2);
    google::protobuf::internal::ExtensionSet::Clear(a2);
    google::protobuf::internal::ExtensionSet::MergeFrom(a2, this);
    google::protobuf::internal::ExtensionSet::Clear(this);
    google::protobuf::internal::ExtensionSet::MergeFrom(this, (const google::protobuf::internal::ExtensionSet *)&v7);
    google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::internal::ExtensionSet *)&v7);
  }
}

void sub_1891D6CCC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::internal::ExtensionSet *)va);
  _Unwind_Resume(a1);
}

uint64_t **google::protobuf::internal::ExtensionSet::Insert(google::protobuf::internal::ExtensionSet *this, int a2)
{
  unsigned int v3 = *((unsigned __int16 *)this + 4);
  __int16 v4 = (uint64_t **)*((void *)this + 2);
  if (v3 >= 0x101)
  {
    *((void *)&v14 + 1) = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    LODWORD(v14) = a2;
    return std::__tree<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int const,google::protobuf::internal::ExtensionSet::Extension>>(v4, a2, &v14)+ 5;
  }
  uint64_t v6 = *((unsigned __int16 *)this + 5);
  uint64_t v7 = &v4[4 * v6];
  if (!*((_WORD *)this + 5))
  {
    if (!*((_WORD *)this + 4)) {
      goto LABEL_18;
    }
    LOWORD(v6) = 0;
LABEL_17:
    *((_WORD *)this + 5) = v6 + 1;
    *(_DWORD *)uint64_t v7 = a2;
    v7[1] = 0;
    __n128 result = v7 + 1;
    void v7[2] = 0;
    v7[3] = 0;
    return result;
  }
  unint64_t v8 = *((unsigned __int16 *)this + 5);
  do
  {
    unint64_t v9 = v8 >> 1;
    uint64_t v10 = &v4[4 * (v8 >> 1)];
    int v12 = *(_DWORD *)v10;
    uint64_t v11 = v10 + 4;
    v8 += ~(v8 >> 1);
    if (v12 < a2) {
      __int16 v4 = v11;
    }
    else {
      unint64_t v8 = v9;
    }
  }
  while (v8);
  if (v4 != v7)
  {
    if (*(_DWORD *)v4 == a2) {
      return v4 + 1;
    }
    if (v6 < v3)
    {
      memmove(v4 + 4, v4, (char *)v7 - (char *)v4);
      LOWORD(v6) = *((_WORD *)this + 5);
      uint64_t v7 = v4;
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  if (v6 < v3) {
    goto LABEL_17;
  }
LABEL_18:
  google::protobuf::internal::ExtensionSet::GrowCapacity(this, v6 + 1);
  return (uint64_t **)google::protobuf::internal::ExtensionSet::Insert(this, a2);
}

uint64_t google::protobuf::internal::ExtensionSet::IsInitialized(google::protobuf::internal::ExtensionSet *this)
{
  if (*((unsigned __int16 *)this + 4) < 0x101u)
  {
    if (*((_WORD *)this + 5))
    {
      uint64_t v2 = *((void *)this + 2);
      do
      {
        uint64_t result = google::protobuf::internal::ExtensionSet::Extension::IsInitialized((uint64_t **)(v2 + 8));
        if ((result & 1) == 0) {
          break;
        }
        v2 += 32;
      }
      while (v2 != *((void *)this + 2) + 32 * *((unsigned __int16 *)this + 5));
      return result;
    }
    return 1;
  }
  __int16 v4 = (void *)*((void *)this + 2);
  uint64_t v7 = (uint64_t **)*v4;
  __int16 v5 = (uint64_t **)(v4 + 1);
  uint64_t v6 = v7;
  if (v7 == v5) {
    return 1;
  }
  do
  {
    uint64_t result = google::protobuf::internal::ExtensionSet::Extension::IsInitialized(v6 + 5);
    if (!result) {
      break;
    }
    unint64_t v8 = v6[1];
    if (v8)
    {
      do
      {
        unint64_t v9 = (uint64_t **)v8;
        unint64_t v8 = (uint64_t *)*v8;
      }
      while (v8);
    }
    else
    {
      do
      {
        unint64_t v9 = (uint64_t **)v6[2];
        BOOL v10 = *v9 == (uint64_t *)v6;
        uint64_t v6 = v9;
      }
      while (!v10);
    }
    uint64_t v6 = v9;
  }
  while (v9 != v5);
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::Extension::IsInitialized(uint64_t **this)
{
  if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[*((unsigned __int8 *)this + 8)] != 10) {
    return 1;
  }
  if (*((unsigned char *)this + 9))
  {
    uint64_t v2 = *this;
    if (*((int *)*this + 2) >= 1)
    {
      uint64_t v3 = 0;
      while (1)
      {
        uint64_t v4 = *(void *)(v2[2] + 8 * v3 + 8);
        if (((*(uint64_t (**)(uint64_t))(*(void *)v4 + 48))(v4) & 1) == 0) {
          break;
        }
        ++v3;
        uint64_t v2 = *this;
        if (v3 >= *((int *)*this + 2)) {
          return 1;
        }
      }
      return 0;
    }
    return 1;
  }
  if (*((unsigned char *)this + 10)) {
    return 1;
  }
  uint64_t v5 = **this;
  if ((*((unsigned char *)this + 10) & 0x10) != 0) {
    return ((*(uint64_t (**)(void))(v5 + 72))() & 1) != 0;
  }
  uint64_t result = (*(uint64_t (**)(void))(v5 + 48))();
  if (result) {
    return 1;
  }
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::FindExtensionInfoFromFieldNumber(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, unsigned char *a6)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, unsigned __int8 *))(*(void *)a4 + 16))(a4, a3, a5);
  if (result)
  {
    unsigned int v10 = google::protobuf::internal::WireFormatLite::kWireTypeForFieldType[*a5];
    *a6 = 0;
    if (a2 != 2 || !a5[1]) {
      return v10 == a2;
    }
    if (v10 > 5)
    {
      int v11 = 3;
      int v12 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
      int v13 = 82;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "can't reach here.");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v11);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      return v10 == a2;
    }
    uint64_t result = 1;
    if (((1 << v10) & 0x1C) != 0) {
      return v10 == a2;
    }
    *a6 = 1;
  }
  return result;
}

void sub_1891D7100(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unsigned __int8 *google::protobuf::internal::ExtensionSet::_InternalSerialize(google::protobuf::internal::ExtensionSet *this, int a2, signed int a3, unsigned __int8 *a4, google::protobuf::io::EpsCopyOutputStream *a5)
{
  uint64_t v7 = (signed int *)*((void *)this + 2);
  if (*((unsigned __int16 *)this + 4) >= 0x101u)
  {
    uint64_t v17 = *((void *)v7 + 1);
    uint64_t v16 = v7 + 2;
    uint64_t v15 = v17;
    if (v17)
    {
      uint64_t v18 = v16;
      do
      {
        int v19 = *(_DWORD *)(v15 + 32);
        BOOL v20 = v19 < a2;
        if (v19 >= a2) {
          uint64_t v21 = (uint64_t *)v15;
        }
        else {
          uint64_t v21 = (uint64_t *)(v15 + 8);
        }
        if (!v20) {
          uint64_t v18 = (void *)v15;
        }
        uint64_t v15 = *v21;
      }
      while (*v21);
      if (v18 != v16)
      {
        do
        {
          signed int v22 = *((_DWORD *)v18 + 8);
          if (v22 >= a3) {
            break;
          }
          a4 = google::protobuf::internal::ExtensionSet::Extension::InternalSerializeFieldWithCachedSizesToArray((int **)v18 + 5, v22, a4, a5);
          uint64_t v23 = (void *)v18[1];
          if (v23)
          {
            do
            {
              uint64_t v24 = v23;
              uint64_t v23 = (void *)*v23;
            }
            while (v23);
          }
          else
          {
            do
            {
              uint64_t v24 = (void *)v18[2];
              BOOL v25 = *v24 == (void)v18;
              uint64_t v18 = v24;
            }
            while (!v25);
          }
          uint64_t v18 = v24;
        }
        while (v24 != v16);
      }
    }
  }
  else
  {
    unint64_t v8 = *((unsigned __int16 *)this + 5);
    if (*((_WORD *)this + 5))
    {
      unint64_t v9 = &v7[8 * v8];
      do
      {
        unint64_t v10 = v8 >> 1;
        int v11 = &v7[8 * (v8 >> 1)];
        int v13 = *v11;
        int v12 = v11 + 8;
        v8 += ~(v8 >> 1);
        if (v13 < a2) {
          uint64_t v7 = v12;
        }
        else {
          unint64_t v8 = v10;
        }
      }
      while (v8);
      while (v7 != v9 && *v7 < a3)
      {
        a4 = google::protobuf::internal::ExtensionSet::Extension::InternalSerializeFieldWithCachedSizesToArray((int **)v7 + 1, *v7, a4, a5);
        v7 += 8;
      }
    }
  }
  return a4;
}

unsigned __int8 *google::protobuf::internal::ExtensionSet::Extension::InternalSerializeFieldWithCachedSizesToArray(int **this, unsigned int a2, unsigned __int8 *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = a3;
  if (*((unsigned char *)this + 9))
  {
    if (*((unsigned char *)this + 11))
    {
      if (*((_DWORD *)this + 3))
      {
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        unsigned int v8 = (8 * a2) | 2;
        if (v8 > 0x7F)
        {
          unsigned __int8 *v5 = (8 * a2) | 0x82;
          unsigned int v27 = (8 * a2) >> 7;
          if (v8 >> 14)
          {
            unint64_t v9 = v5 + 2;
            do
            {
              *(v9 - 1) = v27 | 0x80;
              unsigned int v28 = v27 >> 7;
              ++v9;
              unsigned int v29 = v27 >> 14;
              v27 >>= 7;
            }
            while (v29);
            *(v9 - 1) = v28;
          }
          else
          {
            v5[1] = v27;
            unint64_t v9 = v5 + 2;
          }
        }
        else
        {
          unsigned __int8 *v5 = v8;
          unint64_t v9 = v5 + 1;
        }
        unint64_t v30 = *((int *)this + 3);
        if (v30 > 0x7F)
        {
          unsigned char *v9 = v30 | 0x80;
          unint64_t v31 = v30 >> 7;
          if (v30 >> 14)
          {
            uint64_t v5 = v9 + 2;
            do
            {
              *(v5 - 1) = v31 | 0x80;
              unint64_t v32 = v31 >> 7;
              ++v5;
              unint64_t v33 = v31 >> 14;
              v31 >>= 7;
            }
            while (v33);
            *(v5 - 1) = v32;
          }
          else
          {
            v9[1] = v31;
            uint64_t v5 = v9 + 2;
          }
        }
        else
        {
          unsigned char *v9 = v30;
          uint64_t v5 = v9 + 1;
        }
        switch(*((unsigned char *)this + 8))
        {
          case 1:
            char v55 = *this;
            if (**this >= 1)
            {
              uint64_t v56 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  char v55 = *this;
                }
                *(void *)uint64_t v5 = *(void *)(*((void *)v55 + 1) + 8 * v56);
                v5 += 8;
                ++v56;
                char v55 = *this;
              }
              while (v56 < **this);
            }
            break;
          case 2:
            uint64_t v57 = *this;
            if (**this >= 1)
            {
              uint64_t v58 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  uint64_t v57 = *this;
                }
                *(_DWORD *)uint64_t v5 = *(_DWORD *)(*((void *)v57 + 1) + 4 * v58);
                v5 += 4;
                ++v58;
                uint64_t v57 = *this;
              }
              while (v58 < **this);
            }
            break;
          case 3:
            int v59 = *this;
            if (**this >= 1)
            {
              uint64_t v60 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  int v59 = *this;
                }
                unint64_t v61 = *(void *)(*((void *)v59 + 1) + 8 * v60);
                if (v61 > 0x7F)
                {
                  unsigned __int8 *v5 = v61 | 0x80;
                  unint64_t v62 = v61 >> 7;
                  if (v61 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v62 | 0x80;
                      unint64_t v63 = v62 >> 7;
                      ++v5;
                      unint64_t v64 = v62 >> 14;
                      v62 >>= 7;
                    }
                    while (v64);
                    *(v5 - 1) = v63;
                  }
                  else
                  {
                    v5[1] = v62;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v61;
                }
                ++v60;
                int v59 = *this;
              }
              while (v60 < **this);
            }
            break;
          case 4:
            int64_t v65 = *this;
            if (**this >= 1)
            {
              uint64_t v66 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  int64_t v65 = *this;
                }
                unint64_t v67 = *(void *)(*((void *)v65 + 1) + 8 * v66);
                if (v67 > 0x7F)
                {
                  unsigned __int8 *v5 = v67 | 0x80;
                  unint64_t v68 = v67 >> 7;
                  if (v67 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v68 | 0x80;
                      unint64_t v69 = v68 >> 7;
                      ++v5;
                      unint64_t v70 = v68 >> 14;
                      v68 >>= 7;
                    }
                    while (v70);
                    *(v5 - 1) = v69;
                  }
                  else
                  {
                    v5[1] = v68;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v67;
                }
                ++v66;
                int64_t v65 = *this;
              }
              while (v66 < **this);
            }
            break;
          case 5:
            uint64_t v34 = *this;
            if (**this >= 1)
            {
              uint64_t v35 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  uint64_t v34 = *this;
                }
                unint64_t v36 = *(int *)(*((void *)v34 + 1) + 4 * v35);
                if (v36 > 0x7F)
                {
                  unsigned __int8 *v5 = v36 | 0x80;
                  unint64_t v37 = v36 >> 7;
                  if (v36 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v37 | 0x80;
                      unint64_t v38 = v37 >> 7;
                      ++v5;
                      unint64_t v39 = v37 >> 14;
                      v37 >>= 7;
                    }
                    while (v39);
                    *(v5 - 1) = v38;
                  }
                  else
                  {
                    v5[1] = v37;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v36;
                }
                ++v35;
                uint64_t v34 = *this;
              }
              while (v35 < **this);
            }
            break;
          case 6:
            int v71 = *this;
            if (**this >= 1)
            {
              uint64_t v72 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  int v71 = *this;
                }
                *(void *)uint64_t v5 = *(void *)(*((void *)v71 + 1) + 8 * v72);
                v5 += 8;
                ++v72;
                int v71 = *this;
              }
              while (v72 < **this);
            }
            break;
          case 7:
            uint64_t v73 = *this;
            if (**this >= 1)
            {
              uint64_t v74 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  uint64_t v73 = *this;
                }
                *(_DWORD *)uint64_t v5 = *(_DWORD *)(*((void *)v73 + 1) + 4 * v74);
                v5 += 4;
                ++v74;
                uint64_t v73 = *this;
              }
              while (v74 < **this);
            }
            break;
          case 8:
            uint64_t v75 = *this;
            if (**this >= 1)
            {
              uint64_t v76 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  uint64_t v75 = *this;
                }
                *v5++ = *(unsigned char *)(*((void *)v75 + 1) + v76++);
                uint64_t v75 = *this;
              }
              while (v76 < **this);
            }
            break;
          case 9:
          case 0xA:
          case 0xB:
          case 0xC:
            int v424 = 3;
            v425 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
            int v426 = 1966;
            memset(&__p, 0, sizeof(__p));
            std::string::append(&__p, "Non-primitive types can't be packed.");
            google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v424);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
            break;
          case 0xD:
            uint64_t v40 = *this;
            if (**this >= 1)
            {
              uint64_t v41 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  uint64_t v40 = *this;
                }
                unsigned int v42 = *(_DWORD *)(*((void *)v40 + 1) + 4 * v41);
                if (v42 > 0x7F)
                {
                  unsigned __int8 *v5 = v42 | 0x80;
                  unsigned int v43 = v42 >> 7;
                  if (v42 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v43 | 0x80;
                      unsigned int v44 = v43 >> 7;
                      ++v5;
                      unsigned int v45 = v43 >> 14;
                      v43 >>= 7;
                    }
                    while (v45);
                    *(v5 - 1) = v44;
                  }
                  else
                  {
                    v5[1] = v43;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v42;
                }
                ++v41;
                uint64_t v40 = *this;
              }
              while (v41 < **this);
            }
            break;
          case 0xE:
            uint64_t v77 = *this;
            if (**this >= 1)
            {
              uint64_t v78 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  uint64_t v77 = *this;
                }
                unint64_t v79 = *(int *)(*((void *)v77 + 1) + 4 * v78);
                if (v79 > 0x7F)
                {
                  unsigned __int8 *v5 = v79 | 0x80;
                  unint64_t v80 = v79 >> 7;
                  if (v79 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v80 | 0x80;
                      unint64_t v81 = v80 >> 7;
                      ++v5;
                      unint64_t v82 = v80 >> 14;
                      v80 >>= 7;
                    }
                    while (v82);
                    *(v5 - 1) = v81;
                  }
                  else
                  {
                    v5[1] = v80;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v79;
                }
                ++v78;
                uint64_t v77 = *this;
              }
              while (v78 < **this);
            }
            break;
          case 0xF:
            char v46 = *this;
            if (**this >= 1)
            {
              uint64_t v47 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  char v46 = *this;
                }
                *(_DWORD *)uint64_t v5 = *(_DWORD *)(*((void *)v46 + 1) + 4 * v47);
                v5 += 4;
                ++v47;
                char v46 = *this;
              }
              while (v47 < **this);
            }
            break;
          case 0x10:
            unsigned int v83 = *this;
            if (**this >= 1)
            {
              uint64_t v84 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  unsigned int v83 = *this;
                }
                *(void *)uint64_t v5 = *(void *)(*((void *)v83 + 1) + 8 * v84);
                v5 += 8;
                ++v84;
                unsigned int v83 = *this;
              }
              while (v84 < **this);
            }
            break;
          case 0x11:
            uint64_t v48 = *this;
            if (**this >= 1)
            {
              uint64_t v49 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  uint64_t v48 = *this;
                }
                int v50 = *(_DWORD *)(*((void *)v48 + 1) + 4 * v49);
                unsigned int v51 = (2 * v50) ^ (v50 >> 31);
                if (v51 > 0x7F)
                {
                  unsigned __int8 *v5 = v51 | 0x80;
                  unsigned int v52 = v51 >> 7;
                  if (v51 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v52 | 0x80;
                      unsigned int v53 = v52 >> 7;
                      ++v5;
                      unsigned int v54 = v52 >> 14;
                      v52 >>= 7;
                    }
                    while (v54);
                    *(v5 - 1) = v53;
                  }
                  else
                  {
                    v5[1] = v52;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v51;
                }
                ++v49;
                uint64_t v48 = *this;
              }
              while (v49 < **this);
            }
            break;
          case 0x12:
            unint64_t v85 = *this;
            if (**this >= 1)
            {
              uint64_t v86 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  unint64_t v85 = *this;
                }
                uint64_t v87 = *(void *)(*((void *)v85 + 1) + 8 * v86);
                unint64_t v88 = (2 * v87) ^ (v87 >> 63);
                if (v88 > 0x7F)
                {
                  unsigned __int8 *v5 = v88 | 0x80;
                  unint64_t v89 = v88 >> 7;
                  if (v88 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v89 | 0x80;
                      unint64_t v90 = v89 >> 7;
                      ++v5;
                      unint64_t v91 = v89 >> 14;
                      v89 >>= 7;
                    }
                    while (v91);
                    *(v5 - 1) = v90;
                  }
                  else
                  {
                    v5[1] = v89;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v88;
                }
                ++v86;
                unint64_t v85 = *this;
              }
              while (v86 < **this);
            }
            break;
          default:
            return v5;
        }
      }
      return v5;
    }
    switch(*((unsigned char *)this + 8))
    {
      case 1:
        uint64_t v16 = *this;
        if (**this >= 1)
        {
          uint64_t v17 = 0;
          unsigned int v18 = (8 * a2) | 1;
          unsigned __int8 v19 = (8 * a2) | 0x81;
          int v20 = (a2 >> 4) & 0x1FFFFFF;
          unsigned int v21 = (8 * a2) >> 7;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              uint64_t v16 = *this;
            }
            uint64_t v22 = *(void *)(*((void *)v16 + 1) + 8 * v17);
            if (v18 > 0x7F)
            {
              unsigned __int8 *v5 = v19;
              if (v18 >= 0x4000)
              {
                uint64_t v23 = v5 + 2;
                unsigned int v24 = v20;
                do
                {
                  *((unsigned char *)v23 - 1) = v24 | 0x80;
                  unsigned int v25 = v24 >> 7;
                  uint64_t v23 = (void *)((char *)v23 + 1);
                  unsigned int v26 = v24 >> 14;
                  v24 >>= 7;
                }
                while (v26);
                *((unsigned char *)v23 - 1) = v25;
              }
              else
              {
                v5[1] = v21;
                uint64_t v23 = v5 + 2;
              }
            }
            else
            {
              unsigned __int8 *v5 = v18;
              uint64_t v23 = v5 + 1;
            }
            void *v23 = v22;
            uint64_t v5 = (unsigned __int8 *)(v23 + 1);
            ++v17;
            uint64_t v16 = *this;
          }
          while (v17 < **this);
        }
        return v5;
      case 2:
        uint64_t v92 = *this;
        if (**this >= 1)
        {
          uint64_t v93 = 0;
          unsigned int v94 = (8 * a2) | 5;
          int v95 = (a2 >> 4) & 0x1FFFFFF;
          unsigned int v96 = (8 * a2) >> 7;
          unsigned __int8 v97 = (8 * a2) | 0x85;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              uint64_t v92 = *this;
            }
            int v98 = *(_DWORD *)(*((void *)v92 + 1) + 4 * v93);
            if (v94 > 0x7F)
            {
              unsigned __int8 *v5 = v97;
              if (v94 >= 0x4000)
              {
                unsigned int v99 = v5 + 2;
                unsigned int v100 = v95;
                do
                {
                  *((unsigned char *)v99 - 1) = v100 | 0x80;
                  unsigned int v101 = v100 >> 7;
                  unsigned int v99 = (_DWORD *)((char *)v99 + 1);
                  unsigned int v102 = v100 >> 14;
                  v100 >>= 7;
                }
                while (v102);
                *((unsigned char *)v99 - 1) = v101;
              }
              else
              {
                v5[1] = v96;
                unsigned int v99 = v5 + 2;
              }
            }
            else
            {
              unsigned __int8 *v5 = v94;
              unsigned int v99 = v5 + 1;
            }
            *unsigned int v99 = v98;
            uint64_t v5 = (unsigned __int8 *)(v99 + 1);
            ++v93;
            uint64_t v92 = *this;
          }
          while (v93 < **this);
        }
        return v5;
      case 3:
        v103 = *this;
        if (**this >= 1)
        {
          uint64_t v104 = 0;
          unsigned int v105 = 8 * a2;
          unsigned __int8 v106 = (8 * a2) | 0x80;
          int v107 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v103 = *this;
            }
            unint64_t v108 = *(void *)(*((void *)v103 + 1) + 8 * v104);
            if (v105 > 0x7F)
            {
              unsigned __int8 *v5 = v106;
              if (v105 >= 0x4000)
              {
                long long v109 = v5 + 2;
                unsigned int v110 = v107;
                do
                {
                  *(v109 - 1) = v110 | 0x80;
                  unsigned int v111 = v110 >> 7;
                  ++v109;
                  unsigned int v112 = v110 >> 14;
                  v110 >>= 7;
                }
                while (v112);
                *(v109 - 1) = v111;
              }
              else
              {
                v5[1] = v105 >> 7;
                long long v109 = v5 + 2;
              }
            }
            else
            {
              long long v109 = v5 + 1;
              unsigned __int8 *v5 = v105;
            }
            if (v108 > 0x7F)
            {
              *long long v109 = v108 | 0x80;
              unint64_t v113 = v108 >> 7;
              if (v108 >> 14)
              {
                uint64_t v5 = v109 + 2;
                do
                {
                  *(v5 - 1) = v113 | 0x80;
                  unint64_t v114 = v113 >> 7;
                  ++v5;
                  unint64_t v115 = v113 >> 14;
                  v113 >>= 7;
                }
                while (v115);
                *(v5 - 1) = v114;
              }
              else
              {
                v109[1] = v113;
                uint64_t v5 = v109 + 2;
              }
            }
            else
            {
              *long long v109 = v108;
              uint64_t v5 = v109 + 1;
            }
            ++v104;
            v103 = *this;
          }
          while (v104 < **this);
        }
        return v5;
      case 4:
        unsigned int v116 = *this;
        if (**this >= 1)
        {
          uint64_t v117 = 0;
          unsigned int v118 = 8 * a2;
          unsigned __int8 v119 = (8 * a2) | 0x80;
          int v120 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              unsigned int v116 = *this;
            }
            unint64_t v121 = *(void *)(*((void *)v116 + 1) + 8 * v117);
            if (v118 > 0x7F)
            {
              unsigned __int8 *v5 = v119;
              if (v118 >= 0x4000)
              {
                uint64_t v122 = v5 + 2;
                unsigned int v123 = v120;
                do
                {
                  *(v122 - 1) = v123 | 0x80;
                  unsigned int v124 = v123 >> 7;
                  ++v122;
                  unsigned int v125 = v123 >> 14;
                  v123 >>= 7;
                }
                while (v125);
                *(v122 - 1) = v124;
              }
              else
              {
                v5[1] = v118 >> 7;
                uint64_t v122 = v5 + 2;
              }
            }
            else
            {
              uint64_t v122 = v5 + 1;
              unsigned __int8 *v5 = v118;
            }
            if (v121 > 0x7F)
            {
              *uint64_t v122 = v121 | 0x80;
              unint64_t v126 = v121 >> 7;
              if (v121 >> 14)
              {
                uint64_t v5 = v122 + 2;
                do
                {
                  *(v5 - 1) = v126 | 0x80;
                  unint64_t v127 = v126 >> 7;
                  ++v5;
                  unint64_t v128 = v126 >> 14;
                  v126 >>= 7;
                }
                while (v128);
                *(v5 - 1) = v127;
              }
              else
              {
                v122[1] = v126;
                uint64_t v5 = v122 + 2;
              }
            }
            else
            {
              *uint64_t v122 = v121;
              uint64_t v5 = v122 + 1;
            }
            ++v117;
            unsigned int v116 = *this;
          }
          while (v117 < **this);
        }
        return v5;
      case 5:
        uint64_t v129 = *this;
        if (**this >= 1)
        {
          uint64_t v130 = 0;
          unsigned int v131 = 8 * a2;
          unsigned __int8 v132 = (8 * a2) | 0x80;
          int v133 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              uint64_t v129 = *this;
            }
            unint64_t v134 = *(int *)(*((void *)v129 + 1) + 4 * v130);
            if (v131 > 0x7F)
            {
              unsigned __int8 *v5 = v132;
              if (v131 >= 0x4000)
              {
                v135 = v5 + 2;
                unsigned int v136 = v133;
                do
                {
                  *(v135 - 1) = v136 | 0x80;
                  unsigned int v137 = v136 >> 7;
                  ++v135;
                  unsigned int v138 = v136 >> 14;
                  v136 >>= 7;
                }
                while (v138);
                *(v135 - 1) = v137;
              }
              else
              {
                v5[1] = v131 >> 7;
                v135 = v5 + 2;
              }
            }
            else
            {
              v135 = v5 + 1;
              unsigned __int8 *v5 = v131;
            }
            if (v134 > 0x7F)
            {
              unsigned char *v135 = v134 | 0x80;
              unint64_t v139 = v134 >> 7;
              if (v134 >> 14)
              {
                uint64_t v5 = v135 + 2;
                do
                {
                  *(v5 - 1) = v139 | 0x80;
                  unint64_t v140 = v139 >> 7;
                  ++v5;
                  unint64_t v141 = v139 >> 14;
                  v139 >>= 7;
                }
                while (v141);
                *(v5 - 1) = v140;
              }
              else
              {
                v135[1] = v139;
                uint64_t v5 = v135 + 2;
              }
            }
            else
            {
              unsigned char *v135 = v134;
              uint64_t v5 = v135 + 1;
            }
            ++v130;
            uint64_t v129 = *this;
          }
          while (v130 < **this);
        }
        return v5;
      case 6:
        unsigned int v142 = *this;
        if (**this >= 1)
        {
          uint64_t v143 = 0;
          unsigned int v144 = (8 * a2) | 1;
          unsigned __int8 v145 = (8 * a2) | 0x81;
          int v146 = (a2 >> 4) & 0x1FFFFFF;
          unsigned int v147 = (8 * a2) >> 7;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              unsigned int v142 = *this;
            }
            uint64_t v148 = *(void *)(*((void *)v142 + 1) + 8 * v143);
            if (v144 > 0x7F)
            {
              unsigned __int8 *v5 = v145;
              if (v144 >= 0x4000)
              {
                v149 = v5 + 2;
                unsigned int v150 = v146;
                do
                {
                  *((unsigned char *)v149 - 1) = v150 | 0x80;
                  unsigned int v151 = v150 >> 7;
                  v149 = (void *)((char *)v149 + 1);
                  unsigned int v152 = v150 >> 14;
                  v150 >>= 7;
                }
                while (v152);
                *((unsigned char *)v149 - 1) = v151;
              }
              else
              {
                v5[1] = v147;
                v149 = v5 + 2;
              }
            }
            else
            {
              unsigned __int8 *v5 = v144;
              v149 = v5 + 1;
            }
            void *v149 = v148;
            uint64_t v5 = (unsigned __int8 *)(v149 + 1);
            ++v143;
            unsigned int v142 = *this;
          }
          while (v143 < **this);
        }
        return v5;
      case 7:
        v153 = *this;
        if (**this >= 1)
        {
          uint64_t v154 = 0;
          unsigned int v155 = (8 * a2) | 5;
          int v156 = (a2 >> 4) & 0x1FFFFFF;
          unsigned int v157 = (8 * a2) >> 7;
          unsigned __int8 v158 = (8 * a2) | 0x85;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v153 = *this;
            }
            int v159 = *(_DWORD *)(*((void *)v153 + 1) + 4 * v154);
            if (v155 > 0x7F)
            {
              unsigned __int8 *v5 = v158;
              if (v155 >= 0x4000)
              {
                v160 = v5 + 2;
                unsigned int v161 = v156;
                do
                {
                  *((unsigned char *)v160 - 1) = v161 | 0x80;
                  unsigned int v162 = v161 >> 7;
                  v160 = (_DWORD *)((char *)v160 + 1);
                  unsigned int v163 = v161 >> 14;
                  v161 >>= 7;
                }
                while (v163);
                *((unsigned char *)v160 - 1) = v162;
              }
              else
              {
                v5[1] = v157;
                v160 = v5 + 2;
              }
            }
            else
            {
              unsigned __int8 *v5 = v155;
              v160 = v5 + 1;
            }
            _DWORD *v160 = v159;
            uint64_t v5 = (unsigned __int8 *)(v160 + 1);
            ++v154;
            v153 = *this;
          }
          while (v154 < **this);
        }
        return v5;
      case 8:
        unsigned int v164 = *this;
        if (**this >= 1)
        {
          uint64_t v165 = 0;
          unsigned int v166 = 8 * a2;
          unsigned __int8 v167 = (8 * a2) | 0x80;
          int v168 = (a2 >> 4) & 0x1FFFFFF;
          unsigned int v169 = (8 * a2) >> 7;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              unsigned int v164 = *this;
            }
            char v170 = *(unsigned char *)(*((void *)v164 + 1) + v165);
            if (v166 > 0x7F)
            {
              unsigned __int8 *v5 = v167;
              if (v166 >= 0x4000)
              {
                v171 = v5 + 2;
                unsigned int v172 = v168;
                do
                {
                  *(v171 - 1) = v172 | 0x80;
                  unsigned int v173 = v172 >> 7;
                  ++v171;
                  unsigned int v174 = v172 >> 14;
                  v172 >>= 7;
                }
                while (v174);
                *(v171 - 1) = v173;
              }
              else
              {
                v5[1] = v169;
                v171 = v5 + 2;
              }
            }
            else
            {
              unsigned __int8 *v5 = v166;
              v171 = v5 + 1;
            }
            unsigned char *v171 = v170;
            uint64_t v5 = v171 + 1;
            ++v165;
            unsigned int v164 = *this;
          }
          while (v165 < **this);
        }
        return v5;
      case 9:
        v175 = *this;
        if ((*this)[2] < 1) {
          return v5;
        }
        uint64_t v176 = 0;
        unsigned int v177 = 8 * a2;
        uint64_t v178 = 4;
        if (((a2 >> 25) & 0xF) != 0) {
          uint64_t v178 = 5;
        }
        unsigned int v179 = (8 * a2) | 2;
        unsigned __int8 v180 = (8 * a2) | 0x82;
        uint64_t v181 = 1;
        if (v177 >= 0x80) {
          uint64_t v181 = 2;
        }
        if (v177 < 0x200000) {
          uint64_t v178 = 3;
        }
        if (v177 >= 0x4000) {
          uint64_t v182 = v178;
        }
        else {
          uint64_t v182 = v181;
        }
        unsigned int v420 = v177 >> 7;
        int v422 = (a2 >> 4) & 0x1FFFFFF;
        while (1)
        {
          if (*(void *)a4 <= (unint64_t)v5)
          {
            uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
            v175 = *this;
          }
          v183 = *(void **)(*((void *)v175 + 2) + 8 * v176 + 8);
          if (*((char *)v183 + 23) < 0)
          {
            int64_t v184 = v183[1];
            if (v184 > 127) {
              goto LABEL_320;
            }
          }
          else
          {
            int64_t v184 = *((unsigned __int8 *)v183 + 23);
          }
          if (*(void *)a4 - (void)&v5[v182] + 15 >= v184)
          {
            if (v179 > 0x7F)
            {
              unsigned __int8 *v5 = v180;
              if (v179 >= 0x4000)
              {
                v185 = v5 + 2;
                unsigned int v186 = v422;
                do
                {
                  *(v185 - 1) = v186 | 0x80;
                  unsigned int v187 = v186 >> 7;
                  ++v185;
                  unsigned int v188 = v186 >> 14;
                  v186 >>= 7;
                }
                while (v188);
                *(v185 - 1) = v187;
              }
              else
              {
                v5[1] = v420;
                v185 = v5 + 2;
              }
            }
            else
            {
              v185 = v5 + 1;
              unsigned __int8 *v5 = v179;
            }
            unsigned char *v185 = v184;
            v189 = v185 + 1;
            if (*((char *)v183 + 23) < 0) {
              v183 = (void *)*v183;
            }
            memcpy(v189, v183, v184);
            uint64_t v5 = (unsigned __int8 *)&v189[v184];
            goto LABEL_318;
          }
LABEL_320:
          uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a4, a2, (uint64_t)v183, v5);
LABEL_318:
          ++v176;
          v175 = *this;
          if (v176 >= (*this)[2]) {
            return v5;
          }
        }
      case 0xA:
        int v190 = *this;
        if ((*this)[2] >= 1)
        {
          uint64_t v191 = 0;
          unsigned int v192 = (8 * a2) | 3;
          unsigned __int8 v193 = (8 * a2) | 0x83;
          int v194 = (a2 >> 4) & 0x1FFFFFF;
          unsigned int v195 = (8 * a2) | 4;
          unsigned int v196 = (8 * a2) >> 7;
          unsigned __int8 v197 = (8 * a2) | 0x84;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              int v190 = *this;
            }
            uint64_t v198 = *(void *)(*((void *)v190 + 2) + 8 * v191 + 8);
            if (v192 > 0x7F)
            {
              unsigned __int8 *v5 = v193;
              if (v192 >= 0x4000)
              {
                int v199 = v5 + 2;
                unsigned int v200 = v194;
                do
                {
                  *(v199 - 1) = v200 | 0x80;
                  unsigned int v201 = v200 >> 7;
                  ++v199;
                  unsigned int v202 = v200 >> 14;
                  v200 >>= 7;
                }
                while (v202);
                *(v199 - 1) = v201;
              }
              else
              {
                v5[1] = v196;
                int v199 = v5 + 2;
              }
            }
            else
            {
              int v199 = v5 + 1;
              unsigned __int8 *v5 = v192;
            }
            v203 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t, unsigned __int8 *, google::protobuf::io::EpsCopyOutputStream *))(*(void *)v198 + 96))(v198, v199, a4);
            if (*(void *)a4 <= (unint64_t)v203) {
              v203 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v203);
            }
            if (v195 > 0x7F)
            {
              unsigned __int8 *v203 = v197;
              if (v195 >= 0x4000)
              {
                uint64_t v5 = v203 + 2;
                unsigned int v204 = v194;
                do
                {
                  *(v5 - 1) = v204 | 0x80;
                  unsigned int v205 = v204 >> 7;
                  ++v5;
                  unsigned int v206 = v204 >> 14;
                  v204 >>= 7;
                }
                while (v206);
                *(v5 - 1) = v205;
              }
              else
              {
                v203[1] = v196;
                uint64_t v5 = v203 + 2;
              }
            }
            else
            {
              uint64_t v5 = v203 + 1;
              unsigned __int8 *v203 = v195;
            }
            ++v191;
            int v190 = *this;
          }
          while (v191 < (*this)[2]);
        }
        return v5;
      case 0xB:
        v207 = *this;
        if ((*this)[2] >= 1)
        {
          uint64_t v208 = 0;
          unsigned int v209 = (8 * a2) | 2;
          int v210 = (a2 >> 4) & 0x1FFFFFF;
          unsigned int v211 = (8 * a2) >> 7;
          unsigned __int8 v212 = (8 * a2) | 0x82;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v207 = *this;
            }
            uint64_t v213 = *(void *)(*((void *)v207 + 2) + 8 * v208 + 8);
            if (v209 > 0x7F)
            {
              unsigned __int8 *v5 = v212;
              if (v209 >= 0x4000)
              {
                v214 = v5 + 2;
                unsigned int v215 = v210;
                do
                {
                  *(v214 - 1) = v215 | 0x80;
                  unsigned int v216 = v215 >> 7;
                  ++v214;
                  unsigned int v217 = v215 >> 14;
                  v215 >>= 7;
                }
                while (v217);
                *(v214 - 1) = v216;
              }
              else
              {
                v5[1] = v211;
                v214 = v5 + 2;
              }
            }
            else
            {
              v214 = v5 + 1;
              unsigned __int8 *v5 = v209;
            }
            unsigned int v218 = (*(uint64_t (**)(uint64_t))(*(void *)v213 + 80))(v213);
            if (v218 > 0x7F)
            {
              unsigned char *v214 = v218 | 0x80;
              unsigned int v220 = v218 >> 7;
              if (v218 >> 14)
              {
                v219 = v214 + 2;
                do
                {
                  *(v219 - 1) = v220 | 0x80;
                  unsigned int v221 = v220 >> 7;
                  ++v219;
                  unsigned int v222 = v220 >> 14;
                  v220 >>= 7;
                }
                while (v222);
                *(v219 - 1) = v221;
              }
              else
              {
                v214[1] = v220;
                v219 = v214 + 2;
              }
            }
            else
            {
              unsigned char *v214 = v218;
              v219 = v214 + 1;
            }
            uint64_t v5 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t, unsigned char *, google::protobuf::io::EpsCopyOutputStream *))(*(void *)v213 + 96))(v213, v219, a4);
            ++v208;
            v207 = *this;
          }
          while (v208 < (*this)[2]);
        }
        return v5;
      case 0xC:
        v223 = *this;
        if ((*this)[2] < 1) {
          return v5;
        }
        uint64_t v224 = 0;
        unsigned int v225 = 8 * a2;
        uint64_t v226 = 4;
        if (((a2 >> 25) & 0xF) != 0) {
          uint64_t v226 = 5;
        }
        unsigned int v227 = (8 * a2) | 2;
        unsigned __int8 v228 = (8 * a2) | 0x82;
        uint64_t v229 = 1;
        if (v225 >= 0x80) {
          uint64_t v229 = 2;
        }
        if (v225 < 0x200000) {
          uint64_t v226 = 3;
        }
        if (v225 >= 0x4000) {
          uint64_t v230 = v226;
        }
        else {
          uint64_t v230 = v229;
        }
        unsigned int v421 = v225 >> 7;
        int v423 = (a2 >> 4) & 0x1FFFFFF;
        break;
      case 0xD:
        v238 = *this;
        if (**this >= 1)
        {
          uint64_t v239 = 0;
          unsigned int v240 = 8 * a2;
          unsigned __int8 v241 = (8 * a2) | 0x80;
          int v242 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v238 = *this;
            }
            unsigned int v243 = *(_DWORD *)(*((void *)v238 + 1) + 4 * v239);
            if (v240 > 0x7F)
            {
              unsigned __int8 *v5 = v241;
              if (v240 >= 0x4000)
              {
                v244 = v5 + 2;
                unsigned int v245 = v242;
                do
                {
                  *(v244 - 1) = v245 | 0x80;
                  unsigned int v246 = v245 >> 7;
                  ++v244;
                  unsigned int v247 = v245 >> 14;
                  v245 >>= 7;
                }
                while (v247);
                *(v244 - 1) = v246;
              }
              else
              {
                v5[1] = v240 >> 7;
                v244 = v5 + 2;
              }
            }
            else
            {
              v244 = v5 + 1;
              unsigned __int8 *v5 = v240;
            }
            if (v243 > 0x7F)
            {
              unsigned char *v244 = v243 | 0x80;
              unsigned int v248 = v243 >> 7;
              if (v243 >> 14)
              {
                uint64_t v5 = v244 + 2;
                do
                {
                  *(v5 - 1) = v248 | 0x80;
                  unsigned int v249 = v248 >> 7;
                  ++v5;
                  unsigned int v250 = v248 >> 14;
                  v248 >>= 7;
                }
                while (v250);
                *(v5 - 1) = v249;
              }
              else
              {
                v244[1] = v248;
                uint64_t v5 = v244 + 2;
              }
            }
            else
            {
              unsigned char *v244 = v243;
              uint64_t v5 = v244 + 1;
            }
            ++v239;
            v238 = *this;
          }
          while (v239 < **this);
        }
        return v5;
      case 0xE:
        v251 = *this;
        if (**this >= 1)
        {
          uint64_t v252 = 0;
          unsigned int v253 = 8 * a2;
          unsigned __int8 v254 = (8 * a2) | 0x80;
          int v255 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v251 = *this;
            }
            unint64_t v256 = *(int *)(*((void *)v251 + 1) + 4 * v252);
            if (v253 > 0x7F)
            {
              unsigned __int8 *v5 = v254;
              if (v253 >= 0x4000)
              {
                v257 = v5 + 2;
                unsigned int v258 = v255;
                do
                {
                  *(v257 - 1) = v258 | 0x80;
                  unsigned int v259 = v258 >> 7;
                  ++v257;
                  unsigned int v260 = v258 >> 14;
                  v258 >>= 7;
                }
                while (v260);
                *(v257 - 1) = v259;
              }
              else
              {
                v5[1] = v253 >> 7;
                v257 = v5 + 2;
              }
            }
            else
            {
              v257 = v5 + 1;
              unsigned __int8 *v5 = v253;
            }
            if (v256 > 0x7F)
            {
              unsigned char *v257 = v256 | 0x80;
              unint64_t v261 = v256 >> 7;
              if (v256 >> 14)
              {
                uint64_t v5 = v257 + 2;
                do
                {
                  *(v5 - 1) = v261 | 0x80;
                  unint64_t v262 = v261 >> 7;
                  ++v5;
                  unint64_t v263 = v261 >> 14;
                  v261 >>= 7;
                }
                while (v263);
                *(v5 - 1) = v262;
              }
              else
              {
                v257[1] = v261;
                uint64_t v5 = v257 + 2;
              }
            }
            else
            {
              unsigned char *v257 = v256;
              uint64_t v5 = v257 + 1;
            }
            ++v252;
            v251 = *this;
          }
          while (v252 < **this);
        }
        return v5;
      case 0xF:
        v264 = *this;
        if (**this >= 1)
        {
          uint64_t v265 = 0;
          unsigned int v266 = (8 * a2) | 5;
          int v267 = (a2 >> 4) & 0x1FFFFFF;
          unsigned int v268 = (8 * a2) >> 7;
          unsigned __int8 v269 = (8 * a2) | 0x85;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v264 = *this;
            }
            int v270 = *(_DWORD *)(*((void *)v264 + 1) + 4 * v265);
            if (v266 > 0x7F)
            {
              unsigned __int8 *v5 = v269;
              if (v266 >= 0x4000)
              {
                v271 = v5 + 2;
                unsigned int v272 = v267;
                do
                {
                  *((unsigned char *)v271 - 1) = v272 | 0x80;
                  unsigned int v273 = v272 >> 7;
                  v271 = (_DWORD *)((char *)v271 + 1);
                  unsigned int v274 = v272 >> 14;
                  v272 >>= 7;
                }
                while (v274);
                *((unsigned char *)v271 - 1) = v273;
              }
              else
              {
                v5[1] = v268;
                v271 = v5 + 2;
              }
            }
            else
            {
              unsigned __int8 *v5 = v266;
              v271 = v5 + 1;
            }
            _DWORD *v271 = v270;
            uint64_t v5 = (unsigned __int8 *)(v271 + 1);
            ++v265;
            v264 = *this;
          }
          while (v265 < **this);
        }
        return v5;
      case 0x10:
        v275 = *this;
        if (**this >= 1)
        {
          uint64_t v276 = 0;
          unsigned int v277 = (8 * a2) | 1;
          unsigned __int8 v278 = (8 * a2) | 0x81;
          int v279 = (a2 >> 4) & 0x1FFFFFF;
          unsigned int v280 = (8 * a2) >> 7;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v275 = *this;
            }
            uint64_t v281 = *(void *)(*((void *)v275 + 1) + 8 * v276);
            if (v277 > 0x7F)
            {
              unsigned __int8 *v5 = v278;
              if (v277 >= 0x4000)
              {
                v282 = v5 + 2;
                unsigned int v283 = v279;
                do
                {
                  *((unsigned char *)v282 - 1) = v283 | 0x80;
                  unsigned int v284 = v283 >> 7;
                  v282 = (void *)((char *)v282 + 1);
                  unsigned int v285 = v283 >> 14;
                  v283 >>= 7;
                }
                while (v285);
                *((unsigned char *)v282 - 1) = v284;
              }
              else
              {
                v5[1] = v280;
                v282 = v5 + 2;
              }
            }
            else
            {
              unsigned __int8 *v5 = v277;
              v282 = v5 + 1;
            }
            void *v282 = v281;
            uint64_t v5 = (unsigned __int8 *)(v282 + 1);
            ++v276;
            v275 = *this;
          }
          while (v276 < **this);
        }
        return v5;
      case 0x11:
        v286 = *this;
        if (**this >= 1)
        {
          uint64_t v287 = 0;
          unsigned int v288 = 8 * a2;
          unsigned __int8 v289 = (8 * a2) | 0x80;
          int v290 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v286 = *this;
            }
            int v291 = *(_DWORD *)(*((void *)v286 + 1) + 4 * v287);
            if (v288 > 0x7F)
            {
              unsigned __int8 *v5 = v289;
              if (v288 >= 0x4000)
              {
                v292 = v5 + 2;
                unsigned int v293 = v290;
                do
                {
                  *(v292 - 1) = v293 | 0x80;
                  unsigned int v294 = v293 >> 7;
                  ++v292;
                  unsigned int v295 = v293 >> 14;
                  v293 >>= 7;
                }
                while (v295);
                *(v292 - 1) = v294;
              }
              else
              {
                v5[1] = v288 >> 7;
                v292 = v5 + 2;
              }
            }
            else
            {
              v292 = v5 + 1;
              unsigned __int8 *v5 = v288;
            }
            unsigned int v296 = (2 * v291) ^ (v291 >> 31);
            if (v296 > 0x7F)
            {
              unsigned char *v292 = v296 | 0x80;
              unsigned int v297 = v296 >> 7;
              if (v296 >> 14)
              {
                uint64_t v5 = v292 + 2;
                do
                {
                  *(v5 - 1) = v297 | 0x80;
                  unsigned int v298 = v297 >> 7;
                  ++v5;
                  unsigned int v299 = v297 >> 14;
                  v297 >>= 7;
                }
                while (v299);
                *(v5 - 1) = v298;
              }
              else
              {
                v292[1] = v297;
                uint64_t v5 = v292 + 2;
              }
            }
            else
            {
              unsigned char *v292 = v296;
              uint64_t v5 = v292 + 1;
            }
            ++v287;
            v286 = *this;
          }
          while (v287 < **this);
        }
        return v5;
      case 0x12:
        v300 = *this;
        if (**this >= 1)
        {
          uint64_t v301 = 0;
          unsigned int v302 = 8 * a2;
          unsigned __int8 v303 = (8 * a2) | 0x80;
          int v304 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v300 = *this;
            }
            uint64_t v305 = *(void *)(*((void *)v300 + 1) + 8 * v301);
            if (v302 > 0x7F)
            {
              unsigned __int8 *v5 = v303;
              if (v302 >= 0x4000)
              {
                v306 = v5 + 2;
                unsigned int v307 = v304;
                do
                {
                  *(v306 - 1) = v307 | 0x80;
                  unsigned int v308 = v307 >> 7;
                  ++v306;
                  unsigned int v309 = v307 >> 14;
                  v307 >>= 7;
                }
                while (v309);
                *(v306 - 1) = v308;
              }
              else
              {
                v5[1] = v302 >> 7;
                v306 = v5 + 2;
              }
            }
            else
            {
              v306 = v5 + 1;
              unsigned __int8 *v5 = v302;
            }
            unint64_t v310 = (2 * v305) ^ (v305 >> 63);
            if (v310 > 0x7F)
            {
              unsigned char *v306 = v310 | 0x80;
              unint64_t v311 = v310 >> 7;
              if (v310 >> 14)
              {
                uint64_t v5 = v306 + 2;
                do
                {
                  *(v5 - 1) = v311 | 0x80;
                  unint64_t v312 = v311 >> 7;
                  ++v5;
                  unint64_t v313 = v311 >> 14;
                  v311 >>= 7;
                }
                while (v313);
                *(v5 - 1) = v312;
              }
              else
              {
                v306[1] = v311;
                uint64_t v5 = v306 + 2;
              }
            }
            else
            {
              unsigned char *v306 = v310;
              uint64_t v5 = v306 + 1;
            }
            ++v301;
            v300 = *this;
          }
          while (v301 < **this);
        }
        return v5;
      default:
        return v5;
    }
    while (1)
    {
      if (*(void *)a4 <= (unint64_t)v5)
      {
        uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
        v223 = *this;
      }
      v231 = *(void **)(*((void *)v223 + 2) + 8 * v224 + 8);
      if (*((char *)v231 + 23) < 0)
      {
        int64_t v232 = v231[1];
        if (v232 > 127) {
          goto LABEL_392;
        }
      }
      else
      {
        int64_t v232 = *((unsigned __int8 *)v231 + 23);
      }
      if (*(void *)a4 - (void)&v5[v230] + 15 >= v232)
      {
        if (v227 > 0x7F)
        {
          unsigned __int8 *v5 = v228;
          if (v227 >= 0x4000)
          {
            v233 = v5 + 2;
            unsigned int v234 = v423;
            do
            {
              *(v233 - 1) = v234 | 0x80;
              unsigned int v235 = v234 >> 7;
              ++v233;
              unsigned int v236 = v234 >> 14;
              v234 >>= 7;
            }
            while (v236);
            *(v233 - 1) = v235;
          }
          else
          {
            v5[1] = v421;
            v233 = v5 + 2;
          }
        }
        else
        {
          v233 = v5 + 1;
          unsigned __int8 *v5 = v227;
        }
        unsigned char *v233 = v232;
        v237 = v233 + 1;
        if (*((char *)v231 + 23) < 0) {
          v231 = (void *)*v231;
        }
        memcpy(v237, v231, v232);
        uint64_t v5 = (unsigned __int8 *)&v237[v232];
        goto LABEL_390;
      }
LABEL_392:
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a4, a2, (uint64_t)v231, v5);
LABEL_390:
      ++v224;
      v223 = *this;
      if (v224 >= (*this)[2]) {
        return v5;
      }
    }
  }
  if ((*((unsigned char *)this + 10) & 1) == 0)
  {
    switch(*((unsigned char *)this + 8))
    {
      case 1:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        unint64_t v10 = *this;
        unsigned int v11 = (8 * a2) | 1;
        if (v11 <= 0x7F) {
          goto LABEL_568;
        }
        unsigned __int8 *v5 = (8 * a2) | 0x81;
        unsigned int v12 = (8 * a2) >> 7;
        if (!(v11 >> 14)) {
          goto LABEL_597;
        }
        int v13 = (int **)(v5 + 2);
        do
        {
          *((unsigned char *)v13 - 1) = v12 | 0x80;
          unsigned int v14 = v12 >> 7;
          int v13 = (int **)((char *)v13 + 1);
          unsigned int v15 = v12 >> 14;
          v12 >>= 7;
        }
        while (v15);
        goto LABEL_688;
      case 2:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        unsigned int v314 = *(_DWORD *)this;
        unsigned int v315 = (8 * a2) | 5;
        if (v315 <= 0x7F) {
          goto LABEL_564;
        }
        unsigned __int8 *v5 = (8 * a2) | 0x85;
        unsigned int v316 = (8 * a2) >> 7;
        if (!(v315 >> 14)) {
          goto LABEL_595;
        }
        v317 = (unsigned int *)(v5 + 2);
        do
        {
          *((unsigned char *)v317 - 1) = v316 | 0x80;
          unsigned int v318 = v316 >> 7;
          v317 = (unsigned int *)((char *)v317 + 1);
          unsigned int v319 = v316 >> 14;
          v316 >>= 7;
        }
        while (v319);
        goto LABEL_684;
      case 3:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        unint64_t v320 = (unint64_t)*this;
        unsigned int v321 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          unsigned __int8 *v5 = v321 | 0x80;
          unsigned int v345 = v321 >> 7;
          if (v321 >> 14)
          {
            v322 = v5 + 2;
            do
            {
              *(v322 - 1) = v345 | 0x80;
              unsigned int v371 = v345 >> 7;
              ++v322;
              unsigned int v372 = v345 >> 14;
              v345 >>= 7;
            }
            while (v372);
            *(v322 - 1) = v371;
          }
          else
          {
            v5[1] = v345;
            v322 = v5 + 2;
          }
        }
        else
        {
          unsigned __int8 *v5 = v321;
          v322 = v5 + 1;
        }
        if (v320 <= 0x7F) {
          goto LABEL_679;
        }
        unsigned __int8 *v322 = v320 | 0x80;
        unint64_t v373 = v320 >> 7;
        if (!(v320 >> 14)) {
          goto LABEL_681;
        }
        uint64_t v5 = v322 + 2;
        do
        {
          *(v5 - 1) = v373 | 0x80;
          unint64_t v374 = v373 >> 7;
          ++v5;
          unint64_t v375 = v373 >> 14;
          v373 >>= 7;
        }
        while (v375);
        goto LABEL_713;
      case 4:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        unint64_t v320 = (unint64_t)*this;
        unsigned int v323 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          unsigned __int8 *v5 = v323 | 0x80;
          unsigned int v346 = v323 >> 7;
          if (v323 >> 14)
          {
            v322 = v5 + 2;
            do
            {
              *(v322 - 1) = v346 | 0x80;
              unsigned int v376 = v346 >> 7;
              ++v322;
              unsigned int v377 = v346 >> 14;
              v346 >>= 7;
            }
            while (v377);
            *(v322 - 1) = v376;
          }
          else
          {
            v5[1] = v346;
            v322 = v5 + 2;
          }
        }
        else
        {
          unsigned __int8 *v5 = v323;
          v322 = v5 + 1;
        }
        if (v320 <= 0x7F) {
          goto LABEL_679;
        }
        unsigned __int8 *v322 = v320 | 0x80;
        unint64_t v373 = v320 >> 7;
        if (!(v320 >> 14)) {
          goto LABEL_681;
        }
        uint64_t v5 = v322 + 2;
        do
        {
          *(v5 - 1) = v373 | 0x80;
          unint64_t v374 = v373 >> 7;
          ++v5;
          unint64_t v378 = v373 >> 14;
          v373 >>= 7;
        }
        while (v378);
        goto LABEL_713;
      case 5:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        unint64_t v320 = *(int *)this;
        unsigned int v324 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          unsigned __int8 *v5 = v324 | 0x80;
          unsigned int v347 = v324 >> 7;
          if (v324 >> 14)
          {
            v322 = v5 + 2;
            do
            {
              *(v322 - 1) = v347 | 0x80;
              unsigned int v379 = v347 >> 7;
              ++v322;
              unsigned int v380 = v347 >> 14;
              v347 >>= 7;
            }
            while (v380);
            *(v322 - 1) = v379;
          }
          else
          {
            v5[1] = v347;
            v322 = v5 + 2;
          }
        }
        else
        {
          unsigned __int8 *v5 = v324;
          v322 = v5 + 1;
        }
        if (v320 <= 0x7F) {
          goto LABEL_679;
        }
        unsigned __int8 *v322 = v320 | 0x80;
        unint64_t v373 = v320 >> 7;
        if (!(v320 >> 14)) {
          goto LABEL_681;
        }
        uint64_t v5 = v322 + 2;
        do
        {
          *(v5 - 1) = v373 | 0x80;
          unint64_t v374 = v373 >> 7;
          ++v5;
          unint64_t v381 = v373 >> 14;
          v373 >>= 7;
        }
        while (v381);
        goto LABEL_713;
      case 6:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        unint64_t v10 = *this;
        unsigned int v11 = (8 * a2) | 1;
        if (v11 <= 0x7F) {
          goto LABEL_568;
        }
        unsigned __int8 *v5 = (8 * a2) | 0x81;
        unsigned int v12 = (8 * a2) >> 7;
        if (!(v11 >> 14)) {
          goto LABEL_597;
        }
        int v13 = (int **)(v5 + 2);
        do
        {
          *((unsigned char *)v13 - 1) = v12 | 0x80;
          unsigned int v14 = v12 >> 7;
          int v13 = (int **)((char *)v13 + 1);
          unsigned int v325 = v12 >> 14;
          v12 >>= 7;
        }
        while (v325);
        goto LABEL_688;
      case 7:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        unsigned int v314 = *(_DWORD *)this;
        unsigned int v315 = (8 * a2) | 5;
        if (v315 <= 0x7F) {
          goto LABEL_564;
        }
        unsigned __int8 *v5 = (8 * a2) | 0x85;
        unsigned int v316 = (8 * a2) >> 7;
        if (!(v315 >> 14)) {
          goto LABEL_595;
        }
        v317 = (unsigned int *)(v5 + 2);
        do
        {
          *((unsigned char *)v317 - 1) = v316 | 0x80;
          unsigned int v318 = v316 >> 7;
          v317 = (unsigned int *)((char *)v317 + 1);
          unsigned int v326 = v316 >> 14;
          v316 >>= 7;
        }
        while (v326);
        goto LABEL_684;
      case 8:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        LOBYTE(v327) = *(unsigned char *)this;
        unsigned int v328 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          unsigned __int8 *v5 = v328 | 0x80;
          unsigned int v348 = v328 >> 7;
          if (v328 >> 14)
          {
            v322 = v5 + 2;
            do
            {
              *(v322 - 1) = v348 | 0x80;
              unsigned int v382 = v348 >> 7;
              ++v322;
              unsigned int v383 = v348 >> 14;
              v348 >>= 7;
            }
            while (v383);
            *(v322 - 1) = v382;
          }
          else
          {
            v5[1] = v348;
            v322 = v5 + 2;
          }
        }
        else
        {
          unsigned __int8 *v5 = v328;
          v322 = v5 + 1;
        }
        goto LABEL_672;
      case 9:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        v329 = *this;
        if (*((char *)*this + 23) < 0)
        {
          int64_t v330 = *((void *)v329 + 1);
          if (v330 > 127) {
            goto LABEL_740;
          }
        }
        else
        {
          int64_t v330 = *((unsigned __int8 *)*this + 23);
        }
        unsigned int v355 = 8 * a2;
        uint64_t v356 = 1;
        uint64_t v357 = 2;
        uint64_t v358 = 3;
        uint64_t v359 = 4;
        if ((8 * a2) >> 28) {
          uint64_t v359 = 5;
        }
        if (v355 >= 0x200000) {
          uint64_t v358 = v359;
        }
        if (v355 >= 0x4000) {
          uint64_t v357 = v358;
        }
        if (v355 >= 0x80) {
          uint64_t v356 = v357;
        }
        if ((uint64_t)(*(void *)a4 + ~(unint64_t)&v5[v356] + 16) < v330) {
          goto LABEL_740;
        }
        unsigned int v360 = v355 | 2;
        if ((v355 | 2) <= 0x7F) {
          goto LABEL_628;
        }
        unsigned __int8 *v5 = v355 | 0x82;
        unsigned int v361 = v355 >> 7;
        if (!(v360 >> 14)) {
          goto LABEL_630;
        }
        v362 = v5 + 2;
        do
        {
          *(v362 - 1) = v361 | 0x80;
          unsigned int v363 = v361 >> 7;
          ++v362;
          unsigned int v364 = v361 >> 14;
          v361 >>= 7;
        }
        while (v364);
        goto LABEL_722;
      case 0xA:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        v331 = *this;
        unsigned int v332 = 8 * a2;
        unsigned int v333 = (8 * a2) | 3;
        unsigned int v334 = (8 * a2) >> 7;
        if (v333 > 0x7F)
        {
          unsigned __int8 *v5 = (8 * a2) | 0x83;
          if (v333 >> 14)
          {
            v335 = v5 + 2;
            unsigned int v384 = v332 >> 7;
            do
            {
              *(v335 - 1) = v384 | 0x80;
              unsigned int v385 = v384 >> 7;
              ++v335;
              unsigned int v386 = v384 >> 14;
              v384 >>= 7;
            }
            while (v386);
            *(v335 - 1) = v385;
          }
          else
          {
            v5[1] = v334;
            v335 = v5 + 2;
          }
        }
        else
        {
          unsigned __int8 *v5 = v333;
          v335 = v5 + 1;
        }
        v322 = (unsigned __int8 *)(*(uint64_t (**)(int *, unsigned __int8 *, google::protobuf::io::EpsCopyOutputStream *))(*(void *)v331 + 96))(v331, v335, a4);
        if (*(void *)a4 <= (unint64_t)v322) {
          v322 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v322);
        }
        unsigned int v327 = v332 | 4;
        if ((v332 | 4) <= 0x7F) {
          goto LABEL_672;
        }
        unsigned __int8 *v322 = v332 | 0x84;
        if (!(v327 >> 14))
        {
          v322[1] = v334;
          return v322 + 2;
        }
        uint64_t v5 = v322 + 2;
        do
        {
          *(v5 - 1) = v334 | 0x80;
          unsigned int v402 = v334 >> 7;
          ++v5;
          unsigned int v403 = v334 >> 14;
          v334 >>= 7;
        }
        while (v403);
        goto LABEL_710;
      case 0xB:
        if ((*((unsigned char *)this + 10) & 0x10) != 0)
        {
          v349 = *(uint64_t (**)(void))(*(void *)*this + 136);
          return (unsigned __int8 *)v349();
        }
        else
        {
          if (*(void *)a4 <= (unint64_t)a3) {
            uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
          }
          v336 = *this;
          unsigned int v337 = (8 * a2) | 2;
          if (v337 > 0x7F)
          {
            unsigned __int8 *v5 = (8 * a2) | 0x82;
            unsigned int v370 = (8 * a2) >> 7;
            if (v337 >> 14)
            {
              v338 = v5 + 2;
              do
              {
                *(v338 - 1) = v370 | 0x80;
                unsigned int v412 = v370 >> 7;
                ++v338;
                unsigned int v413 = v370 >> 14;
                v370 >>= 7;
              }
              while (v413);
              *(v338 - 1) = v412;
            }
            else
            {
              v5[1] = v370;
              v338 = v5 + 2;
            }
          }
          else
          {
            unsigned __int8 *v5 = v337;
            v338 = v5 + 1;
          }
          unsigned int v414 = (*(uint64_t (**)(int *))(*(void *)v336 + 80))(v336);
          if (v414 > 0x7F)
          {
            unsigned char *v338 = v414 | 0x80;
            unsigned int v416 = v414 >> 7;
            if (v414 >> 14)
            {
              v415 = v338 + 2;
              do
              {
                *(v415 - 1) = v416 | 0x80;
                unsigned int v417 = v416 >> 7;
                ++v415;
                unsigned int v418 = v416 >> 14;
                v416 >>= 7;
              }
              while (v418);
              *(v415 - 1) = v417;
            }
            else
            {
              v338[1] = v416;
              v415 = v338 + 2;
            }
          }
          else
          {
            unsigned char *v338 = v414;
            v415 = v338 + 1;
          }
          v419 = *(uint64_t (**)(int *, unsigned char *, google::protobuf::io::EpsCopyOutputStream *))(*(void *)v336 + 96);
          return (unsigned __int8 *)v419(v336, v415, a4);
        }
      case 0xC:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        v329 = *this;
        if (*((char *)*this + 23) < 0)
        {
          int64_t v330 = *((void *)v329 + 1);
          if (v330 > 127) {
            goto LABEL_740;
          }
        }
        else
        {
          int64_t v330 = *((unsigned __int8 *)*this + 23);
        }
        unsigned int v365 = 8 * a2;
        uint64_t v366 = 1;
        uint64_t v367 = 2;
        uint64_t v368 = 3;
        uint64_t v369 = 4;
        if ((8 * a2) >> 28) {
          uint64_t v369 = 5;
        }
        if (v365 >= 0x200000) {
          uint64_t v368 = v369;
        }
        if (v365 >= 0x4000) {
          uint64_t v367 = v368;
        }
        if (v365 >= 0x80) {
          uint64_t v366 = v367;
        }
        if ((uint64_t)(*(void *)a4 + ~(unint64_t)&v5[v366] + 16) >= v330)
        {
          unsigned int v360 = v365 | 2;
          if ((v365 | 2) > 0x7F)
          {
            unsigned __int8 *v5 = v365 | 0x82;
            unsigned int v361 = v365 >> 7;
            if (v360 >> 14)
            {
              v362 = v5 + 2;
              do
              {
                *(v362 - 1) = v361 | 0x80;
                unsigned int v363 = v361 >> 7;
                ++v362;
                unsigned int v410 = v361 >> 14;
                v361 >>= 7;
              }
              while (v410);
LABEL_722:
              *(v362 - 1) = v363;
            }
            else
            {
LABEL_630:
              v5[1] = v361;
              v362 = v5 + 2;
            }
          }
          else
          {
LABEL_628:
            unsigned __int8 *v5 = v360;
            v362 = v5 + 1;
          }
          unsigned char *v362 = v330;
          v411 = v362 + 1;
          if (*((char *)v329 + 23) < 0) {
            v329 = *(int **)v329;
          }
          memcpy(v411, v329, v330);
          return (unsigned __int8 *)&v411[v330];
        }
LABEL_740:
        return google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a4, a2, (uint64_t)v329, v5);
      case 0xD:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        unsigned int v327 = *(_DWORD *)this;
        unsigned int v339 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          unsigned __int8 *v5 = v339 | 0x80;
          unsigned int v351 = v339 >> 7;
          if (v339 >> 14)
          {
            v322 = v5 + 2;
            do
            {
              *(v322 - 1) = v351 | 0x80;
              unsigned int v387 = v351 >> 7;
              ++v322;
              unsigned int v388 = v351 >> 14;
              v351 >>= 7;
            }
            while (v388);
            *(v322 - 1) = v387;
          }
          else
          {
            v5[1] = v351;
            v322 = v5 + 2;
          }
        }
        else
        {
          unsigned __int8 *v5 = v339;
          v322 = v5 + 1;
        }
        if (v327 <= 0x7F)
        {
LABEL_672:
          unsigned __int8 *v322 = v327;
          return v322 + 1;
        }
        unsigned __int8 *v322 = v327 | 0x80;
        unsigned int v389 = v327 >> 7;
        if (!(v327 >> 14))
        {
          v322[1] = v389;
          return v322 + 2;
        }
        uint64_t v5 = v322 + 2;
        do
        {
          *(v5 - 1) = v389 | 0x80;
          unsigned int v402 = v389 >> 7;
          ++v5;
          unsigned int v404 = v389 >> 14;
          v389 >>= 7;
        }
        while (v404);
LABEL_710:
        *(v5 - 1) = v402;
        return v5;
      case 0xE:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        unint64_t v320 = *(int *)this;
        unsigned int v340 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          unsigned __int8 *v5 = v340 | 0x80;
          unsigned int v352 = v340 >> 7;
          if (v340 >> 14)
          {
            v322 = v5 + 2;
            do
            {
              *(v322 - 1) = v352 | 0x80;
              unsigned int v390 = v352 >> 7;
              ++v322;
              unsigned int v391 = v352 >> 14;
              v352 >>= 7;
            }
            while (v391);
            *(v322 - 1) = v390;
          }
          else
          {
            v5[1] = v352;
            v322 = v5 + 2;
          }
        }
        else
        {
          unsigned __int8 *v5 = v340;
          v322 = v5 + 1;
        }
        if (v320 <= 0x7F)
        {
LABEL_679:
          unsigned __int8 *v322 = v320;
          return v322 + 1;
        }
        unsigned __int8 *v322 = v320 | 0x80;
        unint64_t v373 = v320 >> 7;
        if (!(v320 >> 14))
        {
LABEL_681:
          v322[1] = v373;
          return v322 + 2;
        }
        uint64_t v5 = v322 + 2;
        do
        {
          *(v5 - 1) = v373 | 0x80;
          unint64_t v374 = v373 >> 7;
          ++v5;
          unint64_t v405 = v373 >> 14;
          v373 >>= 7;
        }
        while (v405);
LABEL_713:
        *(v5 - 1) = v374;
        return v5;
      case 0xF:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        unsigned int v314 = *(_DWORD *)this;
        unsigned int v315 = (8 * a2) | 5;
        if (v315 > 0x7F)
        {
          unsigned __int8 *v5 = (8 * a2) | 0x85;
          unsigned int v316 = (8 * a2) >> 7;
          if (v315 >> 14)
          {
            v317 = (unsigned int *)(v5 + 2);
            do
            {
              *((unsigned char *)v317 - 1) = v316 | 0x80;
              unsigned int v318 = v316 >> 7;
              v317 = (unsigned int *)((char *)v317 + 1);
              unsigned int v392 = v316 >> 14;
              v316 >>= 7;
            }
            while (v392);
LABEL_684:
            *((unsigned char *)v317 - 1) = v318;
          }
          else
          {
LABEL_595:
            v5[1] = v316;
            v317 = (unsigned int *)(v5 + 2);
          }
        }
        else
        {
LABEL_564:
          unsigned __int8 *v5 = v315;
          v317 = (unsigned int *)(v5 + 1);
        }
        unsigned int *v317 = v314;
        return (unsigned __int8 *)(v317 + 1);
      case 0x10:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        unint64_t v10 = *this;
        unsigned int v11 = (8 * a2) | 1;
        if (v11 > 0x7F)
        {
          unsigned __int8 *v5 = (8 * a2) | 0x81;
          unsigned int v12 = (8 * a2) >> 7;
          if (v11 >> 14)
          {
            int v13 = (int **)(v5 + 2);
            do
            {
              *((unsigned char *)v13 - 1) = v12 | 0x80;
              unsigned int v14 = v12 >> 7;
              int v13 = (int **)((char *)v13 + 1);
              unsigned int v393 = v12 >> 14;
              v12 >>= 7;
            }
            while (v393);
LABEL_688:
            *((unsigned char *)v13 - 1) = v14;
          }
          else
          {
LABEL_597:
            v5[1] = v12;
            int v13 = (int **)(v5 + 2);
          }
        }
        else
        {
LABEL_568:
          unsigned __int8 *v5 = v11;
          int v13 = (int **)(v5 + 1);
        }
        *int v13 = v10;
        return (unsigned __int8 *)(v13 + 1);
      case 0x11:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        int v341 = *(_DWORD *)this;
        unsigned int v342 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          unsigned __int8 *v5 = v342 | 0x80;
          unsigned int v353 = v342 >> 7;
          if (v342 >> 14)
          {
            v322 = v5 + 2;
            do
            {
              *(v322 - 1) = v353 | 0x80;
              unsigned int v394 = v353 >> 7;
              ++v322;
              unsigned int v395 = v353 >> 14;
              v353 >>= 7;
            }
            while (v395);
            *(v322 - 1) = v394;
          }
          else
          {
            v5[1] = v353;
            v322 = v5 + 2;
          }
        }
        else
        {
          unsigned __int8 *v5 = v342;
          v322 = v5 + 1;
        }
        unsigned int v396 = (2 * v341) ^ (v341 >> 31);
        if (v396 <= 0x7F)
        {
          unsigned __int8 *v322 = v396;
          return v322 + 1;
        }
        unsigned __int8 *v322 = v396 | 0x80;
        unsigned int v397 = v396 >> 7;
        if (!(v396 >> 14))
        {
          v322[1] = v397;
          return v322 + 2;
        }
        uint64_t v5 = v322 + 2;
        do
        {
          *(v5 - 1) = v397 | 0x80;
          unsigned int v406 = v397 >> 7;
          ++v5;
          unsigned int v407 = v397 >> 14;
          v397 >>= 7;
        }
        while (v407);
        *(v5 - 1) = v406;
        return v5;
      case 0x12:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        uint64_t v343 = (uint64_t)*this;
        unsigned int v344 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          unsigned __int8 *v5 = v344 | 0x80;
          unsigned int v354 = v344 >> 7;
          if (v344 >> 14)
          {
            v322 = v5 + 2;
            do
            {
              *(v322 - 1) = v354 | 0x80;
              unsigned int v398 = v354 >> 7;
              ++v322;
              unsigned int v399 = v354 >> 14;
              v354 >>= 7;
            }
            while (v399);
            *(v322 - 1) = v398;
          }
          else
          {
            v5[1] = v354;
            v322 = v5 + 2;
          }
        }
        else
        {
          unsigned __int8 *v5 = v344;
          v322 = v5 + 1;
        }
        unint64_t v400 = (2 * v343) ^ (v343 >> 63);
        if (v400 > 0x7F)
        {
          unsigned __int8 *v322 = v400 | 0x80;
          unint64_t v401 = v400 >> 7;
          if (v400 >> 14)
          {
            uint64_t v5 = v322 + 2;
            do
            {
              *(v5 - 1) = v401 | 0x80;
              unint64_t v408 = v401 >> 7;
              ++v5;
              unint64_t v409 = v401 >> 14;
              v401 >>= 7;
            }
            while (v409);
            *(v5 - 1) = v408;
          }
          else
          {
            v322[1] = v401;
            return v322 + 2;
          }
        }
        else
        {
          unsigned __int8 *v322 = v400;
          return v322 + 1;
        }
        return v5;
      default:
        return v5;
    }
  }
  return v5;
}

void sub_1891D9C88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::ExtensionSet::ByteSize(google::protobuf::internal::ExtensionSet *this)
{
  int v1 = (int *)*((void *)this + 2);
  if (*((unsigned __int16 *)this + 4) < 0x101u)
  {
    if (*((_WORD *)this + 5))
    {
      uint64_t v2 = 0;
      uint64_t v3 = &v1[8 * *((unsigned __int16 *)this + 5)];
      do
      {
        uint64_t v4 = (uint64_t **)(v1 + 2);
        int v5 = *v1;
        v1 += 8;
        v2 += google::protobuf::internal::ExtensionSet::Extension::ByteSize(v4, v5);
      }
      while (v1 != v3);
      return v2;
    }
    return 0;
  }
  unsigned int v8 = *(int **)v1;
  uint64_t v6 = v1 + 2;
  uint64_t v7 = v8;
  if (v8 == v6) {
    return 0;
  }
  uint64_t v2 = 0;
  do
  {
    unint64_t v9 = google::protobuf::internal::ExtensionSet::Extension::ByteSize((uint64_t **)v7 + 5, v7[8]);
    unint64_t v10 = (int *)*((void *)v7 + 1);
    if (v10)
    {
      do
      {
        unsigned int v11 = v10;
        unint64_t v10 = *(int **)v10;
      }
      while (v10);
    }
    else
    {
      do
      {
        unsigned int v11 = (int *)*((void *)v7 + 2);
        BOOL v12 = *(void *)v11 == (void)v7;
        uint64_t v7 = v11;
      }
      while (!v12);
    }
    v2 += v9;
    uint64_t v7 = v11;
  }
  while (v11 != v6);
  return v2;
}

unint64_t google::protobuf::internal::ExtensionSet::Extension::ByteSize(uint64_t **this, int a2)
{
  if (*((unsigned char *)this + 9))
  {
    if (*((unsigned char *)this + 11))
    {
      switch(*((unsigned char *)this + 8))
      {
        case 1:
        case 6:
        case 0x10:
          uint64_t v6 = 8 * *(unsigned int *)*this;
          goto LABEL_51;
        case 2:
        case 7:
        case 0xF:
          uint64_t v6 = 4 * *(unsigned int *)*this;
          goto LABEL_51;
        case 3:
          uint64_t v13 = *(unsigned int *)*this;
          if ((int)v13 < 1) {
            goto LABEL_54;
          }
          uint64_t v6 = 0;
          unsigned int v14 = (uint64_t *)(*this)[1];
          do
          {
            uint64_t v15 = *v14++;
            v6 += (9 * (__clz(v15 | 1) ^ 0x3F) + 73) >> 6;
            --v13;
          }
          while (v13);
          goto LABEL_51;
        case 4:
          uint64_t v16 = *(unsigned int *)*this;
          if ((int)v16 < 1) {
            goto LABEL_54;
          }
          uint64_t v6 = 0;
          uint64_t v17 = (uint64_t *)(*this)[1];
          do
          {
            uint64_t v18 = *v17++;
            v6 += (9 * (__clz(v18 | 1) ^ 0x3F) + 73) >> 6;
            --v16;
          }
          while (v16);
          goto LABEL_51;
        case 5:
          uint64_t v19 = *(unsigned int *)*this;
          if ((int)v19 < 1) {
            goto LABEL_54;
          }
          uint64_t v6 = 0;
          int v20 = (int *)(*this)[1];
          do
          {
            int v22 = *v20++;
            int v21 = v22;
            if (v22 < 0) {
              uint64_t v23 = 10;
            }
            else {
              uint64_t v23 = (9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6;
            }
            v6 += v23;
            --v19;
          }
          while (v19);
          goto LABEL_51;
        case 8:
          uint64_t v6 = *(unsigned int *)*this;
          goto LABEL_51;
        case 9:
        case 0xA:
        case 0xB:
        case 0xC:
          int v85 = 3;
          uint64_t v86 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
          int v87 = 1599;
          memset(&__p, 0, sizeof(__p));
          std::string::append(&__p, "Non-primitive types can't be packed.");
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v85);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          goto LABEL_54;
        case 0xD:
          uint64_t v7 = *(unsigned int *)*this;
          if ((int)v7 < 1) {
            goto LABEL_54;
          }
          uint64_t v6 = 0;
          unsigned int v8 = (int *)(*this)[1];
          do
          {
            int v9 = *v8++;
            v6 += (9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6;
            --v7;
          }
          while (v7);
          goto LABEL_51;
        case 0xE:
          uint64_t v24 = *(unsigned int *)*this;
          if ((int)v24 < 1) {
            goto LABEL_54;
          }
          uint64_t v6 = 0;
          unsigned int v25 = (int *)(*this)[1];
          do
          {
            int v27 = *v25++;
            int v26 = v27;
            if (v27 < 0) {
              uint64_t v28 = 10;
            }
            else {
              uint64_t v28 = (9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6;
            }
            v6 += v28;
            --v24;
          }
          while (v24);
          goto LABEL_51;
        case 0x11:
          uint64_t v10 = *(unsigned int *)*this;
          if ((int)v10 < 1) {
            goto LABEL_54;
          }
          uint64_t v6 = 0;
          unsigned int v11 = (int *)(*this)[1];
          do
          {
            int v12 = *v11++;
            v6 += (9 * (__clz((2 * v12) ^ (v12 >> 31) | 1) ^ 0x1F) + 73) >> 6;
            --v10;
          }
          while (v10);
          goto LABEL_51;
        case 0x12:
          uint64_t v29 = *(unsigned int *)*this;
          if ((int)v29 < 1) {
            goto LABEL_54;
          }
          uint64_t v6 = 0;
          unint64_t v30 = (uint64_t *)(*this)[1];
          do
          {
            uint64_t v31 = *v30++;
            v6 += (9 * (__clz((2 * v31) ^ (v31 >> 63) | 1) ^ 0x3F) + 73) >> 6;
            --v29;
          }
          while (v29);
LABEL_51:
          *((_DWORD *)this + 3) = v6;
          unint64_t v32 = v6 + ((9 * (__clz((8 * a2) | 3) ^ 0x1F) + 73) >> 6) + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
          if (v6) {
            unint64_t v3 = v32;
          }
          else {
            unint64_t v3 = 0;
          }
          break;
        default:
LABEL_54:
          unint64_t v3 = 0;
          *((_DWORD *)this + 3) = 0;
          break;
      }
    }
    else
    {
      unint64_t v4 = (unint64_t)((9 * (__clz((8 * a2) | 1) ^ 0x1F) + 73) >> 6) << (*((unsigned char *)this + 8) == 10);
      switch(*((unsigned char *)this + 8))
      {
        case 1:
        case 6:
        case 0x10:
          unsigned int v5 = v4 + 8;
          goto LABEL_15;
        case 2:
        case 7:
        case 0xF:
          unsigned int v5 = v4 + 4;
LABEL_15:
          unint64_t v3 = v5 * (unint64_t)*(unsigned int *)*this;
          break;
        case 3:
          uint64_t v38 = *(unsigned int *)*this;
          unint64_t v3 = v4 * (unint64_t)v38;
          if ((int)v38 >= 1)
          {
            unint64_t v39 = (uint64_t *)(*this)[1];
            do
            {
              uint64_t v40 = *v39++;
              v3 += (9 * (__clz(v40 | 1) ^ 0x3F) + 73) >> 6;
              --v38;
            }
            while (v38);
          }
          break;
        case 4:
          uint64_t v41 = *(unsigned int *)*this;
          unint64_t v3 = v4 * (unint64_t)v41;
          if ((int)v41 >= 1)
          {
            unsigned int v42 = (uint64_t *)(*this)[1];
            do
            {
              uint64_t v43 = *v42++;
              v3 += (9 * (__clz(v43 | 1) ^ 0x3F) + 73) >> 6;
              --v41;
            }
            while (v41);
          }
          break;
        case 5:
          uint64_t v44 = *(unsigned int *)*this;
          unint64_t v3 = v4 * (unint64_t)v44;
          if ((int)v44 >= 1)
          {
            unsigned int v45 = (int *)(*this)[1];
            do
            {
              int v47 = *v45++;
              int v46 = v47;
              if (v47 < 0) {
                uint64_t v48 = 10;
              }
              else {
                uint64_t v48 = (9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6;
              }
              v3 += v48;
              --v44;
            }
            while (v44);
          }
          break;
        case 8:
          unint64_t v3 = *(unsigned int *)*this + *(unsigned int *)*this * (unint64_t)v4;
          break;
        case 9:
          uint64_t v49 = *((unsigned int *)*this + 2);
          unint64_t v3 = v4 * (unint64_t)v49;
          if ((int)v49 >= 1)
          {
            int v50 = (uint64_t *)((*this)[2] + 8);
            do
            {
              uint64_t v51 = *v50++;
              uint64_t v52 = *(unsigned __int8 *)(v51 + 23);
              uint64_t v53 = *(void *)(v51 + 8);
              if ((v52 & 0x80u) == 0) {
                uint64_t v53 = v52;
              }
              v3 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6);
              --v49;
            }
            while (v49);
          }
          break;
        case 0xA:
          unsigned int v54 = (unsigned int *)*this;
          int v55 = *((_DWORD *)*this + 2);
          unint64_t v3 = v4 * (unint64_t)v55;
          if (v55 >= 1)
          {
            uint64_t v56 = 0;
            do
            {
              uint64_t v57 = *(void *)(*((void *)v54 + 2) + 8 * v56 + 8);
              v3 += (*(uint64_t (**)(uint64_t))(*(void *)v57 + 72))(v57);
              ++v56;
              unsigned int v54 = (unsigned int *)*this;
            }
            while (v56 < *((int *)*this + 2));
          }
          break;
        case 0xB:
          uint64_t v58 = (unsigned int *)*this;
          int v59 = *((_DWORD *)*this + 2);
          unint64_t v3 = v4 * (unint64_t)v59;
          if (v59 >= 1)
          {
            uint64_t v60 = 0;
            do
            {
              uint64_t v61 = *(void *)(*((void *)v58 + 2) + 8 * v60 + 8);
              uint64_t v62 = (*(uint64_t (**)(uint64_t))(*(void *)v61 + 72))(v61);
              v3 += v62 + ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6);
              ++v60;
              uint64_t v58 = (unsigned int *)*this;
            }
            while (v60 < *((int *)*this + 2));
          }
          break;
        case 0xC:
          uint64_t v63 = *((unsigned int *)*this + 2);
          unint64_t v3 = v4 * (unint64_t)v63;
          if ((int)v63 >= 1)
          {
            unint64_t v64 = (uint64_t *)((*this)[2] + 8);
            do
            {
              uint64_t v65 = *v64++;
              uint64_t v66 = *(unsigned __int8 *)(v65 + 23);
              uint64_t v67 = *(void *)(v65 + 8);
              if ((v66 & 0x80u) == 0) {
                uint64_t v67 = v66;
              }
              v3 += v67 + ((9 * (__clz(v67 | 1) ^ 0x1F) + 73) >> 6);
              --v63;
            }
            while (v63);
          }
          break;
        case 0xD:
          uint64_t v68 = *(unsigned int *)*this;
          unint64_t v3 = v4 * (unint64_t)v68;
          if ((int)v68 >= 1)
          {
            unint64_t v69 = (int *)(*this)[1];
            do
            {
              int v70 = *v69++;
              v3 += (9 * (__clz(v70 | 1) ^ 0x1F) + 73) >> 6;
              --v68;
            }
            while (v68);
          }
          break;
        case 0xE:
          uint64_t v71 = *(unsigned int *)*this;
          unint64_t v3 = v4 * (unint64_t)v71;
          if ((int)v71 >= 1)
          {
            uint64_t v72 = (int *)(*this)[1];
            do
            {
              int v74 = *v72++;
              int v73 = v74;
              if (v74 < 0) {
                uint64_t v75 = 10;
              }
              else {
                uint64_t v75 = (9 * (__clz(v73 | 1) ^ 0x1F) + 73) >> 6;
              }
              v3 += v75;
              --v71;
            }
            while (v71);
          }
          break;
        case 0x11:
          uint64_t v76 = *(unsigned int *)*this;
          unint64_t v3 = v4 * (unint64_t)v76;
          if ((int)v76 >= 1)
          {
            uint64_t v77 = (int *)(*this)[1];
            do
            {
              int v78 = *v77++;
              v3 += (9 * (__clz((2 * v78) ^ (v78 >> 31) | 1) ^ 0x1F) + 73) >> 6;
              --v76;
            }
            while (v76);
          }
          break;
        case 0x12:
          uint64_t v79 = *(unsigned int *)*this;
          unint64_t v3 = v4 * (unint64_t)v79;
          if ((int)v79 >= 1)
          {
            unint64_t v80 = (uint64_t *)(*this)[1];
            do
            {
              uint64_t v81 = *v80++;
              v3 += (9 * (__clz((2 * v81) ^ (v81 >> 63) | 1) ^ 0x3F) + 73) >> 6;
              --v79;
            }
            while (v79);
          }
          break;
        default:
          return 0;
      }
    }
  }
  else if (*((unsigned char *)this + 10))
  {
    return 0;
  }
  else
  {
    unint64_t v3 = (unint64_t)((9 * (__clz((8 * a2) | 1) ^ 0x1F) + 73) >> 6) << (*((unsigned char *)this + 8) == 10);
    switch(*((unsigned char *)this + 8))
    {
      case 1:
      case 6:
      case 0x10:
        v3 += 8;
        return v3;
      case 2:
      case 7:
      case 0xF:
        v3 += 4;
        return v3;
      case 3:
      case 4:
        uint64_t v34 = (uint64_t)*this;
        goto LABEL_127;
      case 5:
      case 0xE:
        uint64_t v35 = (9 * (__clz(*(_DWORD *)this | 1) ^ 0x1F) + 73) >> 6;
        if (*(int *)this >= 0) {
          uint64_t v36 = v35;
        }
        else {
          uint64_t v36 = 10;
        }
        v3 += v36;
        return v3;
      case 8:
        return ++v3;
      case 9:
      case 0xC:
        uint64_t v37 = (*this)[1];
        if (*((char *)*this + 23) >= 0) {
          uint64_t v37 = *((unsigned __int8 *)*this + 23);
        }
        v3 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
        return v3;
      case 0xA:
        v3 += (*(uint64_t (**)(void))(**this + 72))();
        return v3;
      case 0xB:
        uint64_t v82 = **this;
        if ((*((unsigned char *)this + 10) & 0x10) != 0) {
          uint64_t v83 = (*(uint64_t (**)(void))(v82 + 88))();
        }
        else {
          uint64_t v83 = (*(uint64_t (**)(void))(v82 + 72))();
        }
        v3 += v83 + ((9 * (__clz(v83 | 1) ^ 0x1F) + 73) >> 6);
        return v3;
      case 0xD:
        int v84 = *(_DWORD *)this;
        goto LABEL_125;
      case 0x11:
        int v84 = (2 * *(_DWORD *)this) ^ (*(int *)this >> 31);
LABEL_125:
        v3 += (9 * (__clz(v84 | 1) ^ 0x1F) + 73) >> 6;
        break;
      case 0x12:
        uint64_t v34 = (2 * (void)*this) ^ ((uint64_t)*this >> 63);
LABEL_127:
        v3 += (9 * (__clz(v34 | 1) ^ 0x3F) + 73) >> 6;
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_1891DA790(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void **google::protobuf::internal::ExtensionSet::Extension::Free(void **this)
{
  int v1 = google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[*((unsigned __int8 *)this + 8)];
  if (*((unsigned char *)this + 9))
  {
    switch(*((unsigned char *)this + 8))
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
        uint64_t v2 = (uint64_t)*this;
        if (!*this) {
          return this;
        }
        if (*(int *)(v2 + 4) >= 1)
        {
          uint64_t v3 = *(void *)(v2 + 8);
          uint64_t v5 = *(void *)(v3 - 8);
          unint64_t v4 = (void *)(v3 - 8);
          if (!v5) {
            operator delete(v4);
          }
        }
        break;
      case 9:
      case 0xC:
        if (!*this) {
          return this;
        }
        google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(*this);
        break;
      case 0xA:
      case 0xB:
        if (!*this) {
          return this;
        }
        google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(*this);
        break;
      default:
        return this;
    }
    goto LABEL_27;
  }
  if (v1 == 10)
  {
    char v7 = *((unsigned char *)this + 10);
    this = (void **)*this;
    if ((v7 & 0x10) != 0)
    {
      if (!this) {
        return this;
      }
      unsigned int v8 = (uint64_t (*)(void))(*this)[1];
    }
    else
    {
      if (!this) {
        return this;
      }
      unsigned int v8 = (uint64_t (*)(void))(*this)[1];
    }
    return (void **)v8();
  }
  if (v1 == 9)
  {
    uint64_t v6 = (uint64_t)*this;
    if (*this)
    {
      if (*(char *)(v6 + 23) < 0) {
        operator delete(*(void **)v6);
      }
LABEL_27:
      JUMPOUT(0x18C11F580);
    }
  }
  return this;
}

void google::protobuf::internal::GeneratedExtensionFinder::~GeneratedExtensionFinder(google::protobuf::internal::GeneratedExtensionFinder *this)
{
}

void **google::protobuf::internal::ExtensionSet::ForEach<std::__map_iterator<std::__tree_iterator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__tree_node<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,void *> *,long>>,google::protobuf::internal::ExtensionSet::~()::$_0>(void **result, void *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    do
    {
      uint64_t result = google::protobuf::internal::ExtensionSet::Extension::Free((void **)v3 + 5);
      unint64_t v4 = (void *)v3[1];
      if (v4)
      {
        do
        {
          uint64_t v5 = v4;
          unint64_t v4 = (void *)*v4;
        }
        while (v4);
      }
      else
      {
        do
        {
          uint64_t v5 = (void *)v3[2];
          BOOL v6 = *v5 == (void)v3;
          uint64_t v3 = v5;
        }
        while (!v6);
      }
      uint64_t v3 = v5;
    }
    while (v5 != a2);
  }
  return result;
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<int>>(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<long long>>(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned int>>(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned long long>>(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<float>>(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<double>>(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<BOOL>>(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<std::string>>(void *a1)
{
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(unsigned int *this, uint64_t a2)
{
  uint64_t v2 = (int *)*((void *)this + 2);
  if (!v2) {
    return google::protobuf::internal::RepeatedPtrFieldBase::UnsafeArenaAddAllocated<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(this, a2);
  }
  uint64_t v3 = *v2;
  if ((int)v3 >= (int)this[3]) {
    return google::protobuf::internal::RepeatedPtrFieldBase::UnsafeArenaAddAllocated<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(this, a2);
  }
  unint64_t v4 = v2 + 2;
  uint64_t v5 = (int)this[2];
  if ((int)v5 < (int)v3) {
    *(void *)&v4[2 * v3] = *(void *)&v4[2 * v5];
  }
  *(void *)&v4[2 * v5] = a2;
  this[2] = v5 + 1;
  ++**((_DWORD **)this + 2);
  return this;
}

google::protobuf::internal::ExtensionSet *google::protobuf::internal::ExtensionSet::ForEach<std::__map_iterator<std::__tree_iterator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__tree_node<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,void *> *,long>>,google::protobuf::internal::ExtensionSet::MergeFrom(google::protobuf::internal::ExtensionSet const&)::$_0>(void *a1, void *a2, google::protobuf::internal::ExtensionSet *this)
{
  if (a1 != a2)
  {
    uint64_t v5 = a1;
    do
    {
      google::protobuf::internal::ExtensionSet::InternalExtensionMergeFrom(this, *((_DWORD *)v5 + 8), (int **)v5 + 5);
      BOOL v6 = (void *)v5[1];
      if (v6)
      {
        do
        {
          char v7 = v6;
          BOOL v6 = (void *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          char v7 = (void *)v5[2];
          BOOL v8 = *v7 == (void)v5;
          uint64_t v5 = v7;
        }
        while (!v8);
      }
      uint64_t v5 = v7;
    }
    while (v7 != a2);
  }
  return this;
}

std::string *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(std::string *result, std::string **a2, const std::string **a3, unsigned int a4, unsigned int a5)
{
  int v9 = (std::string::__raw *)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    int v12 = a2;
    do
    {
      unsigned int v14 = *v11++;
      uint64_t v13 = v14;
      uint64_t v15 = *v12++;
      uint64_t result = std::string::operator=(v15, v13);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    std::string::size_type v18 = v9->__words[0];
    uint64_t v19 = &a2[a5];
    int v20 = &a3[a5];
    do
    {
      int v21 = *v20;
      if (!v18) {
        operator new();
      }
      if (*(unsigned char *)(v18 + 24)) {
      AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v18, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
      }
      AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
      AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
      AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
      uint64_t result = std::string::operator=(AlignedAndAddCleanup, v21);
      *v19++ = AlignedAndAddCleanup;
      ++v20;
      --v17;
    }
    while (v17);
  }
  return result;
}

uint64_t google::protobuf::internal::ParseContext::ParseContext<std::string &>(uint64_t a1, int a2, const char *a3, void *a4, uint64_t *a5)
{
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a3;
  *(void *)(a1 + 80) = 0x7FFFFFFF00000000;
  *(_DWORD *)(a1 + 88) = a2;
  *(_DWORD *)(a1 + 92) = 0x80000000;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v8, a5, a3);
  *a4 = google::protobuf::internal::EpsCopyInputStream::InitFrom(a1, v8[0], (int64_t)v8[1]);
  return a1;
}

unsigned char *google::protobuf::internal::EpsCopyInputStream::InitFrom(uint64_t a1, unsigned char *a2, int64_t a3)
{
  *(_DWORD *)(a1 + 84) = 0;
  if (a3 >= 17)
  {
    *(_DWORD *)(a1 + 28) = 16;
    uint64_t v6 = (uint64_t)&a2[a3 - 16];
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = a1 + 40;
    if (*(void *)(a1 + 72) != 1) {
      return a2;
    }
    uint64_t v7 = 2;
    BOOL v8 = a2;
    goto LABEL_6;
  }
  BOOL v8 = (unsigned char *)(a1 + 40);
  memcpy((void *)(a1 + 40), a2, a3);
  *(_DWORD *)(a1 + 28) = 0;
  *(void *)a1 = &v8[a3];
  *(void *)(a1 + 8) = &v8[a3];
  *(void *)(a1 + 16) = 0;
  if (*(void *)(a1 + 72) == 1)
  {
    uint64_t v7 = a2 - v8;
LABEL_6:
    *(void *)(a1 + 72) = v7;
  }
  return v8;
}

uint64_t **std::__tree<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int const,google::protobuf::internal::ExtensionSet::Extension>>(uint64_t **a1, int a2, _OWORD *a3)
{
  uint64_t v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (uint64_t **)v5;
        int v8 = *((_DWORD *)v5 + 8);
        if (v8 <= a2) {
          break;
        }
        uint64_t v5 = *v7;
        uint64_t v6 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (v8 >= a2) {
        break;
      }
      uint64_t v5 = v7[1];
      if (!v5)
      {
        uint64_t v6 = v7 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    uint64_t v7 = a1 + 1;
LABEL_9:
    int v9 = (uint64_t *)operator new(0x40uLL);
    long long v10 = a3[1];
    *((_OWORD *)v9 + 2) = *a3;
    *((_OWORD *)v9 + 3) = v10;
    std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::__insert_node_at(a1, (uint64_t)v7, v6, v9);
    return (uint64_t **)v9;
  }
  return v7;
}

void google::protobuf::internal::arena_destruct_object<std::map<int,google::protobuf::internal::ExtensionSet::Extension>>(uint64_t a1)
{
}

void google::protobuf::FileDescriptorTables::FileDescriptorTables(google::protobuf::FileDescriptorTables *this)
{
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_DWORD *)this + 8) = 1065353216;
  std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>((uint64_t)this, 3uLL);
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 1065353216;
  std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>((uint64_t)this + 40, 3uLL);
  operator new();
}

void sub_1891DB174(_Unwind_Exception *a1)
{
  uint64_t v8 = v5;
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::~__hash_table(v8);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(v7);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(v6);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(v4);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(v3);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(v2);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void sub_1891DB204()
{
}

void google::protobuf::FileDescriptorTables::~FileDescriptorTables(google::protobuf::FileDescriptorTables *this)
{
  std::mutex::~mutex((std::mutex *)this + 5);
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::~__hash_table((uint64_t)this + 280);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)this + 232);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)this + 192);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)this + 152);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)this + 96);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)this + 40);

  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)this);
}

unint64_t google::protobuf::DescriptorPool::Tables::FindByNameHelper(void *a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v8 = *(std::mutex **)a2;
  if (!*(void *)a2) {
    goto LABEL_6;
  }
  std::mutex::lock(*(std::mutex **)a2);
  if (!a1[11] && !a1[6])
  {
    int v21 = a3;
    uint64_t v22 = a4;
    uint64_t v19 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>(a1 + 38, &v21);
    if (v19)
    {
      int v20 = v19 + 4;
    }
    else
    {
      int v20 = &qword_1EB29F2E8;
    }
    unint64_t v13 = *v20;
    if (*v20)
    {
      unint64_t v12 = HIDWORD(v13);
LABEL_14:
      std::mutex::unlock(v8);
      return v13 | (v12 << 32);
    }
  }
  std::mutex::unlock(v8);
  uint64_t v8 = *(std::mutex **)a2;
  if (*(void *)a2)
  {
    std::mutex::lock(*(std::mutex **)a2);
    char v9 = 0;
  }
  else
  {
LABEL_6:
    char v9 = 1;
  }
  if (*(void *)(a2 + 8))
  {
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear((uint64_t)(a1 + 8));
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear((uint64_t)(a1 + 3));
  }
  int v21 = a3;
  uint64_t v22 = a4;
  long long v10 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>(a1 + 38, &v21);
  if (v10)
  {
    unsigned int v11 = v10 + 4;
  }
  else
  {
    unsigned int v11 = &qword_1EB29F2E8;
  }
  LODWORD(v13) = *(_DWORD *)v11;
  unint64_t v12 = *((unsigned int *)v11 + 1);
  if (!*(_DWORD *)v11)
  {
    uint64_t v15 = *(void *)(a2 + 24);
    if (!v15
      || (unint64_t v16 = google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(void *)(v15 + 32), v15, a3, a4),
          unint64_t v12 = HIDWORD(v16),
          (LODWORD(v13) = v16) == 0))
    {
      if (google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase((google::protobuf::DescriptorPool *)a2, (uint64_t)a3, a4))
      {
        int v21 = a3;
        uint64_t v22 = a4;
        int v17 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>(a1 + 38, &v21);
        if (v17)
        {
          std::string::size_type v18 = v17 + 4;
        }
        else
        {
          std::string::size_type v18 = &qword_1EB29F2E8;
        }
        LODWORD(v13) = *(_DWORD *)v18;
        unint64_t v12 = *((unsigned int *)v18 + 1);
      }
      else
      {
        LODWORD(v13) = 0;
      }
    }
  }
  if ((v9 & 1) == 0) {
    goto LABEL_14;
  }
  return v13 | (v12 << 32);
}

void sub_1891DB454(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase(google::protobuf::DescriptorPool *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  if (!*((void *)a1 + 1)) {
    return 0;
  }
  google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v14, v12);
  if (std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((void *)(*((void *)a1 + 4) + 64), (unsigned __int8 *)v12))
  {
    uint64_t v4 = 0;
  }
  else
  {
    google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)v10, 0);
    if ((google::protobuf::DescriptorPool::IsSubSymbolOfBuiltType((uint64_t)a1, v14, v15) & 1) != 0
      || !(*(unsigned int (**)(void, void **, unsigned char *))(**((void **)a1 + 1) + 24))(*((void *)a1 + 1), v12, v10)|| (v6 = *((void *)a1 + 4), google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v9, (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFELL), v5), v16 = v9, (uint64_t v7 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((void *)(v6 + 344), (char **)&v16)) != 0)&& v7[4]|| !google::protobuf::DescriptorPool::BuildFileFromDatabase(a1, (const google::protobuf::FileDescriptorProto *)v10))
    {
      std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string>(*((void *)a1 + 4) + 64, (unsigned __int8 *)v12, (uint64_t)v12);
      uint64_t v4 = 0;
    }
    else
    {
      uint64_t v4 = 1;
    }
    google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v10);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  return v4;
}

void sub_1891DB5B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (*(char *)(v11 - 65) < 0) {
    operator delete(*(void **)(v11 - 88));
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FileDescriptorTables::FieldsByLowercaseNamesLazyInitStatic(uint64_t this, const google::protobuf::FileDescriptorTables *a2)
{
  uint64_t v2 = *(void **)(this + 168);
  if (v2)
  {
    uint64_t v3 = this + 40;
    while (1)
    {
      uint64_t v4 = v2[4];
      if (!*(unsigned char *)(v4 + 67)) {
        break;
      }
      uint64_t v5 = *(void *)(v4 + 96);
      if (!v5)
      {
        uint64_t v6 = (uint64_t *)(v4 + 40);
LABEL_7:
        uint64_t v5 = *v6;
      }
      uint64_t v7 = *(const char **)(v4 + 16);
      if (v7[23] < 0) {
        uint64_t v7 = *(const char **)v7;
      }
      *(void *)&long long v8 = v5;
      google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)((char *)&v8 + 8), v7);
      uint64_t v2 = (void *)*v2;
      if (!v2) {
        return this;
      }
    }
    uint64_t v6 = (uint64_t *)(v4 + 80);
    goto LABEL_7;
  }
  return this;
}

uint64_t google::protobuf::InsertIfNotPresent<std::unordered_map<std::pair<void const*,google::protobuf::StringPiece>,google::protobuf::FieldDescriptor const*,google::protobuf::anonymous namespace'::PointerStringPairHash,std::equal_to<std::pair<void const*,google::protobuf::StringPiece>>,std::allocator<std::pair<std::pair<void const*,google::protobuf::StringPiece> const,google::protobuf::FieldDescriptor const*>>>>(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v29 = *a2;
  uint64_t v5 = *((void *)a2 + 2);
  *(void *)&long long v30 = v5;
  *((void *)&v30 + 1) = a3;
  if (v5 < 1)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = (char *)*((void *)&v29 + 1);
    unint64_t v8 = *((void *)&v29 + 1) + v5;
    do
    {
      uint64_t v9 = *v7++;
      uint64_t v6 = 5 * v6 + v9;
    }
    while ((unint64_t)v7 < v8);
  }
  unint64_t v10 = v6 ^ (16777619 * v29);
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      uint64_t v3 = v6 ^ (16777619 * v29);
      if (v10 >= v11) {
        uint64_t v3 = v10 % v11;
      }
    }
    else
    {
      uint64_t v3 = (v11 - 1) & v10;
    }
    uint64_t v14 = *(void **)(*(void *)a1 + 8 * v3);
    if (v14)
    {
      uint64_t v15 = (void *)*v14;
      if (*v14)
      {
        do
        {
          unint64_t v16 = v15[1];
          if (v16 == v10)
          {
            if (std::equal_to<std::pair<void const*,google::protobuf::StringPiece>>::operator()[abi:ne180100](v15 + 2, &v29))
            {
              return 0;
            }
          }
          else
          {
            if (v13 > 1)
            {
              if (v16 >= v11) {
                v16 %= v11;
              }
            }
            else
            {
              v16 &= v11 - 1;
            }
            if (v16 != v3) {
              break;
            }
          }
          uint64_t v15 = (void *)*v15;
        }
        while (v15);
      }
    }
  }
  int v17 = operator new(0x30uLL);
  *int v17 = 0;
  v17[1] = v10;
  long long v18 = v30;
  *((_OWORD *)v17 + 1) = v29;
  *((_OWORD *)v17 + 2) = v18;
  float v19 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v20 = *(float *)(a1 + 32);
  if (!v11 || (float)(v20 * (float)v11) < v19)
  {
    BOOL v21 = 1;
    if (v11 >= 3) {
      BOOL v21 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v22 = v21 | (2 * v11);
    unint64_t v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23) {
      size_t v24 = v23;
    }
    else {
      size_t v24 = v22;
    }
    std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>(a1, v24);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        uint64_t v3 = v10 % v11;
      }
      else {
        uint64_t v3 = v10;
      }
    }
    else
    {
      uint64_t v3 = (v11 - 1) & v10;
    }
  }
  uint64_t v25 = *(void *)a1;
  int v26 = *(void **)(*(void *)a1 + 8 * v3);
  if (v26)
  {
    *int v17 = *v26;
LABEL_43:
    *int v26 = v17;
    goto LABEL_44;
  }
  *int v17 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v17;
  *(void *)(v25 + 8 * v3) = a1 + 16;
  if (*v17)
  {
    unint64_t v27 = *(void *)(*v17 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v27 >= v11) {
        v27 %= v11;
      }
    }
    else
    {
      v27 &= v11 - 1;
    }
    int v26 = (void *)(*(void *)a1 + 8 * v27);
    goto LABEL_43;
  }
LABEL_44:
  ++*(void *)(a1 + 24);
  return 1;
}

void sub_1891DB8E0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::Tables::AddSymbol(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t *)a2;
  if (a2[23] < 0) {
    a2 = *(const char **)a2;
  }
  google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)&v49, a2);
  unint64_t v8 = v49;
  int64_t v9 = v50;
  if (v50 < 1)
  {
    unint64_t v10 = 0;
  }
  else
  {
    unint64_t v10 = 0;
    unint64_t v11 = v49;
    do
    {
      uint64_t v12 = *v11++;
      unint64_t v10 = 5 * v10 + v12;
    }
    while (v11 < &v49[v50]);
  }
  unint64_t v13 = (uint64_t *)(a1 + 304);
  unint64_t v14 = *(void *)(a1 + 312);
  if (v14)
  {
    uint8x8_t v15 = (uint8x8_t)vcnt_s8((int8x8_t)v14);
    v15.i16[0] = vaddlv_u8(v15);
    unint64_t v16 = v15.u32[0];
    if (v15.u32[0] > 1uLL)
    {
      unint64_t v4 = v10;
      if (v10 >= v14) {
        unint64_t v4 = v10 % v14;
      }
    }
    else
    {
      unint64_t v4 = (v14 - 1) & v10;
    }
    int v17 = *(void **)(*v13 + 8 * v4);
    if (v17)
    {
      uint64_t v47 = a4;
      long long v18 = (void *)*v17;
      if (*v17)
      {
        while (1)
        {
          unint64_t v19 = v18[1];
          if (v19 == v10)
          {
            if (v18[3] == v9)
            {
              if (v9 < 1) {
                return 0;
              }
              float v20 = (const void *)v18[2];
              if (v8 == v20 || !memcmp(v20, v8, v9)) {
                return 0;
              }
            }
          }
          else
          {
            if (v16 > 1)
            {
              if (v19 >= v14) {
                v19 %= v14;
              }
            }
            else
            {
              v19 &= v14 - 1;
            }
            if (v19 != v4)
            {
LABEL_28:
              unint64_t v13 = (uint64_t *)(a1 + 304);
              break;
            }
          }
          long long v18 = (void *)*v18;
          if (!v18) {
            goto LABEL_28;
          }
        }
      }
      a4 = v47;
    }
  }
  BOOL v21 = operator new(0x30uLL);
  *BOOL v21 = 0;
  v21[1] = v10;
  v21[2] = v8;
  v21[3] = v9;
  v21[4] = a3;
  v21[5] = a4;
  float v22 = (float)(unint64_t)(*(void *)(a1 + 328) + 1);
  float v23 = *(float *)(a1 + 336);
  if (!v14 || (float)(v23 * (float)v14) < v22)
  {
    BOOL v24 = 1;
    if (v14 >= 3) {
      BOOL v24 = (v14 & (v14 - 1)) != 0;
    }
    unint64_t v25 = v24 | (2 * v14);
    unint64_t v26 = vcvtps_u32_f32(v22 / v23);
    if (v25 <= v26) {
      size_t v27 = v26;
    }
    else {
      size_t v27 = v25;
    }
    std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>((uint64_t)v13, v27);
    unint64_t v14 = *(void *)(a1 + 312);
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v10 >= v14) {
        unint64_t v4 = v10 % v14;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v14 - 1) & v10;
    }
  }
  uint64_t v28 = *v13;
  long long v29 = *(void **)(*v13 + 8 * v4);
  if (v29)
  {
    *BOOL v21 = *v29;
LABEL_50:
    *long long v29 = v21;
    goto LABEL_51;
  }
  *BOOL v21 = *(void *)(a1 + 320);
  *(void *)(a1 + 320) = v21;
  *(void *)(v28 + 8 * v4) = a1 + 320;
  if (*v21)
  {
    unint64_t v30 = *(void *)(*v21 + 8);
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v30 >= v14) {
        v30 %= v14;
      }
    }
    else
    {
      v30 &= v14 - 1;
    }
    long long v29 = (void *)(*v13 + 8 * v30);
    goto LABEL_50;
  }
LABEL_51:
  ++*(void *)(a1 + 328);
  if (*((char *)v6 + 23) >= 0) {
    uint64_t v31 = v6;
  }
  else {
    uint64_t v31 = (uint64_t *)*v6;
  }
  unint64_t v33 = *(void **)(a1 + 440);
  unint64_t v32 = *(void *)(a1 + 448);
  if ((unint64_t)v33 >= v32)
  {
    uint64_t v35 = *(void *)(a1 + 432);
    uint64_t v36 = ((uint64_t)v33 - v35) >> 3;
    if ((unint64_t)(v36 + 1) >> 61) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v37 = v32 - v35;
    uint64_t v38 = v37 >> 2;
    if (v37 >> 2 <= (unint64_t)(v36 + 1)) {
      uint64_t v38 = v36 + 1;
    }
    if ((unint64_t)v37 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v39 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v39 = v38;
    }
    if (v39) {
      uint64_t v40 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(a1 + 448, v39);
    }
    else {
      uint64_t v40 = 0;
    }
    uint64_t v41 = &v40[8 * v36];
    unsigned int v42 = &v40[8 * v39];
    *(void *)uint64_t v41 = v31;
    uint64_t v34 = v41 + 8;
    uint64_t v44 = *(char **)(a1 + 432);
    uint64_t v43 = *(char **)(a1 + 440);
    if (v43 != v44)
    {
      do
      {
        uint64_t v45 = *((void *)v43 - 1);
        v43 -= 8;
        *((void *)v41 - 1) = v45;
        v41 -= 8;
      }
      while (v43 != v44);
      uint64_t v43 = *(char **)(a1 + 432);
    }
    *(void *)(a1 + 432) = v41;
    *(void *)(a1 + 440) = v34;
    *(void *)(a1 + 448) = v42;
    if (v43) {
      operator delete(v43);
    }
  }
  else
  {
    *unint64_t v33 = v31;
    uint64_t v34 = v33 + 1;
  }
  *(void *)(a1 + 440) = v34;
  return 1;
}

void sub_1891DBC5C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::FileDescriptorTables::AddAliasUnderParent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(char *)(a3 + 23) >= 0) {
    int64_t v9 = (const char *)a3;
  }
  else {
    int64_t v9 = *(const char **)a3;
  }
  *(void *)&long long v32 = a2;
  google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)((char *)&v32 + 8), v9);
  long long v34 = v32;
  *(void *)&long long v35 = v33;
  *((void *)&v35 + 1) = a4;
  uint64_t v36 = a5;
  if (v33 < 1)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v11 = (char *)*((void *)&v34 + 1);
    do
    {
      uint64_t v12 = *v11++;
      uint64_t v10 = 5 * v10 + v12;
    }
    while ((unint64_t)v11 < *((void *)&v34 + 1) + v33);
  }
  unint64_t v13 = v10 ^ (16777619 * v32);
  unint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    uint8x8_t v15 = (uint8x8_t)vcnt_s8((int8x8_t)v14);
    v15.i16[0] = vaddlv_u8(v15);
    unint64_t v16 = v15.u32[0];
    if (v15.u32[0] > 1uLL)
    {
      uint64_t v5 = v10 ^ (16777619 * v32);
      if (v13 >= v14) {
        uint64_t v5 = v13 % v14;
      }
    }
    else
    {
      uint64_t v5 = (v14 - 1) & v13;
    }
    int v17 = *(void **)(*(void *)a1 + 8 * v5);
    if (v17)
    {
      long long v18 = (void *)*v17;
      if (*v17)
      {
        do
        {
          unint64_t v19 = v18[1];
          if (v19 == v13)
          {
            if (std::equal_to<std::pair<void const*,google::protobuf::StringPiece>>::operator()[abi:ne180100](v18 + 2, &v34))
            {
              return 0;
            }
          }
          else
          {
            if (v16 > 1)
            {
              if (v19 >= v14) {
                v19 %= v14;
              }
            }
            else
            {
              v19 &= v14 - 1;
            }
            if (v19 != v5) {
              break;
            }
          }
          long long v18 = (void *)*v18;
        }
        while (v18);
      }
    }
  }
  float v20 = operator new(0x38uLL);
  void *v20 = 0;
  v20[1] = v13;
  long long v21 = v35;
  *((_OWORD *)v20 + 1) = v34;
  *((_OWORD *)v20 + 2) = v21;
  v20[6] = v36;
  float v22 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v23 = *(float *)(a1 + 32);
  if (!v14 || (float)(v23 * (float)v14) < v22)
  {
    BOOL v24 = 1;
    if (v14 >= 3) {
      BOOL v24 = (v14 & (v14 - 1)) != 0;
    }
    unint64_t v25 = v24 | (2 * v14);
    unint64_t v26 = vcvtps_u32_f32(v22 / v23);
    if (v25 <= v26) {
      size_t v27 = v26;
    }
    else {
      size_t v27 = v25;
    }
    std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>(a1, v27);
    unint64_t v14 = *(void *)(a1 + 8);
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v13 >= v14) {
        uint64_t v5 = v13 % v14;
      }
      else {
        uint64_t v5 = v13;
      }
    }
    else
    {
      uint64_t v5 = (v14 - 1) & v13;
    }
  }
  uint64_t v28 = *(void *)a1;
  long long v29 = *(void **)(*(void *)a1 + 8 * v5);
  if (v29)
  {
    void *v20 = *v29;
LABEL_46:
    *long long v29 = v20;
    goto LABEL_47;
  }
  void *v20 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v20;
  *(void *)(v28 + 8 * v5) = a1 + 16;
  if (*v20)
  {
    unint64_t v30 = *(void *)(*v20 + 8);
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v30 >= v14) {
        v30 %= v14;
      }
    }
    else
    {
      v30 &= v14 - 1;
    }
    long long v29 = (void *)(*(void *)a1 + 8 * v30);
    goto LABEL_46;
  }
LABEL_47:
  ++*(void *)(a1 + 24);
  return 1;
}

void sub_1891DBF08(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::FindPtrOrNull<std::unordered_map<std::pair<void const*,google::protobuf::StringPiece>,google::protobuf::FieldDescriptor const*,google::protobuf::anonymous namespace'::PointerStringPairHash,std::equal_to<std::pair<void const*,google::protobuf::StringPiece>>,std::allocator<std::pair<std::pair<void const*,google::protobuf::StringPiece> const,google::protobuf::FieldDescriptor const*>>>>(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v5 = a3[2];
  if (v5 < 1)
  {
    uint64_t v6 = 0;
    if (!a2) {
      return 0;
    }
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = (char *)a3[1];
    unint64_t v8 = &v7[v5];
    do
    {
      uint64_t v9 = *v7++;
      uint64_t v6 = 5 * v6 + v9;
    }
    while (v7 < v8);
    if (!a2) {
      return 0;
    }
  }
  unint64_t v10 = v6 ^ (16777619 * *a3);
  uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
  v11.i16[0] = vaddlv_u8(v11);
  unint64_t v12 = v11.u32[0];
  if (v11.u32[0] > 1uLL)
  {
    uint64_t v13 = v6 ^ (16777619 * *a3);
    if (v10 >= a2) {
      uint64_t v13 = v10 % a2;
    }
  }
  else
  {
    uint64_t v13 = v10 & (a2 - 1);
  }
  unint64_t v14 = *(void **)(a1 + 8 * v13);
  if (v14)
  {
    uint8x8_t v15 = (void *)*v14;
    if (*v14)
    {
      do
      {
        unint64_t v16 = v15[1];
        if (v16 == v10)
        {
          if (std::equal_to<std::pair<void const*,google::protobuf::StringPiece>>::operator()[abi:ne180100](v15 + 2, a3))
          {
            return v15[5];
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v16 >= a2) {
              v16 %= a2;
            }
          }
          else
          {
            v16 &= a2 - 1;
          }
          if (v16 != v13) {
            return 0;
          }
        }
        uint8x8_t v15 = (void *)*v15;
      }
      while (v15);
    }
  }
  return 0;
}

uint64_t google::protobuf::FileDescriptorTables::AddFieldByNumber(google::protobuf::FileDescriptorTables *this, const google::protobuf::FieldDescriptor *a2)
{
  uint64_t v5 = *((void *)a2 + 10);
  int v6 = *((_DWORD *)a2 + 17);
  uint64_t v7 = (uint64_t *)((char *)this + 152);
  unint64_t v8 = (16777619 * v6) ^ (16777499 * v5);
  unint64_t v9 = *((void *)this + 20);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      uint64_t v2 = (16777619 * v6) ^ (16777499 * v5);
      if (v8 >= v9) {
        uint64_t v2 = v8 % v9;
      }
    }
    else
    {
      uint64_t v2 = v8 & (v9 - 1);
    }
    uint8x8_t v11 = *(uint64_t ***)(*v7 + 8 * v2);
    if (v11)
    {
      for (uint64_t i = *v11; i; uint64_t i = (uint64_t *)*i)
      {
        unint64_t v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == v5 && *((_DWORD *)i + 6) == v6) {
            return 0;
          }
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v2) {
            break;
          }
        }
      }
    }
  }
  uint8x8_t v15 = operator new(0x28uLL);
  void *v15 = 0;
  v15[1] = v8;
  void v15[2] = v5;
  *((_DWORD *)v15 + 6) = v6;
  char v15[4] = a2;
  float v16 = (float)(unint64_t)(*((void *)this + 22) + 1);
  float v17 = *((float *)this + 46);
  if (!v9 || (float)(v17 * (float)v9) < v16)
  {
    BOOL v18 = 1;
    if (v9 >= 3) {
      BOOL v18 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v9);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>((uint64_t)v7, v21);
    unint64_t v9 = *((void *)this + 20);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        uint64_t v2 = v8 % v9;
      }
      else {
        uint64_t v2 = (16777619 * v6) ^ (16777499 * v5);
      }
    }
    else
    {
      uint64_t v2 = (v9 - 1) & v8;
    }
  }
  uint64_t v22 = *v7;
  float v23 = *(void **)(*v7 + 8 * v2);
  if (v23)
  {
    void *v15 = *v23;
LABEL_42:
    void *v23 = v15;
    goto LABEL_43;
  }
  void *v15 = *((void *)this + 21);
  *((void *)this + 21) = v15;
  *(void *)(v22 + 8 * v2) = (char *)this + 168;
  if (*v15)
  {
    unint64_t v24 = *(void *)(*v15 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v24 >= v9) {
        v24 %= v9;
      }
    }
    else
    {
      v24 &= v9 - 1;
    }
    float v23 = (void *)(*v7 + 8 * v24);
    goto LABEL_42;
  }
LABEL_43:
  ++*((void *)this + 22);
  return 1;
}

void sub_1891DC290(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::InsertIfNotPresent<std::unordered_map<std::pair<google::protobuf::EnumDescriptor const*,int>,google::protobuf::EnumValueDescriptor const*,google::protobuf::anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::EnumDescriptor const*,int>>,std::equal_to<std::pair<google::protobuf::EnumDescriptor const*,int>>,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const*,int> const,google::protobuf::EnumValueDescriptor const*>>>>(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  unint64_t v8 = (16777619 * (int)v7) ^ (16777499 * *a2);
  unint64_t v9 = *(void *)(a1 + 8);
  uint64_t v25 = v7;
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      uint64_t v3 = (16777619 * (int)v7) ^ (16777499 * *a2);
      if (v8 >= v9) {
        uint64_t v3 = v8 % v9;
      }
    }
    else
    {
      uint64_t v3 = (v9 - 1) & v8;
    }
    uint8x8_t v11 = *(uint64_t ***)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      for (uint64_t i = *v11; i; uint64_t i = (uint64_t *)*i)
      {
        unint64_t v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == v6 && *((_DWORD *)i + 6) == v7) {
            return;
          }
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3) {
            break;
          }
        }
      }
    }
  }
  uint8x8_t v15 = operator new(0x28uLL);
  void *v15 = 0;
  v15[1] = v8;
  void v15[2] = v6;
  void v15[3] = v25;
  char v15[4] = a3;
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v9 || (float)(v17 * (float)v9) < v16)
  {
    BOOL v18 = 1;
    if (v9 >= 3) {
      BOOL v18 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v9);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>(a1, v21);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        uint64_t v3 = v8 % v9;
      }
      else {
        uint64_t v3 = v8;
      }
    }
    else
    {
      uint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v22 = *(void *)a1;
  float v23 = *(void **)(*(void *)a1 + 8 * v3);
  if (v23)
  {
    void *v15 = *v23;
LABEL_42:
    void *v23 = v15;
    goto LABEL_43;
  }
  void *v15 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v15;
  *(void *)(v22 + 8 * v3) = a1 + 16;
  if (*v15)
  {
    unint64_t v24 = *(void *)(*v15 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v24 >= v9) {
        v24 %= v9;
      }
    }
    else
    {
      v24 &= v9 - 1;
    }
    float v23 = (void *)(*(void *)a1 + 8 * v24);
    goto LABEL_42;
  }
LABEL_43:
  ++*(void *)(a1 + 24);
}

void sub_1891DC4E0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::Tables::AddExtension(google::protobuf::DescriptorPool::Tables *this, const google::protobuf::FieldDescriptor *a2)
{
  unint64_t v4 = *((void *)a2 + 10);
  int v5 = *((_DWORD *)a2 + 17);
  uint64_t v6 = (char *)*((void *)this + 49);
  if (!v6)
  {
    uint8x8_t v10 = (uint64_t **)((char *)this + 392);
    uint64_t v7 = (uint64_t **)((char *)this + 392);
    goto LABEL_12;
  }
  do
  {
    while (1)
    {
      uint64_t v7 = (uint64_t **)v6;
      unint64_t v8 = *((void *)v6 + 4);
      if (v8 <= v4) {
        break;
      }
LABEL_5:
      uint64_t v6 = (char *)*v7;
      uint8x8_t v10 = v7;
      if (!*v7) {
        goto LABEL_12;
      }
    }
    if (v8 >= v4)
    {
      int v9 = *((_DWORD *)v7 + 10);
      if (v9 > v5) {
        goto LABEL_5;
      }
      if (v9 >= v5) {
        return 0;
      }
    }
    uint64_t v6 = (char *)v7[1];
  }
  while (v6);
  uint8x8_t v10 = v7 + 1;
LABEL_12:
  uint8x8_t v11 = operator new(0x38uLL);
  v11[4] = v4;
  *((_DWORD *)v11 + 10) = v5;
  v11[6] = a2;
  *uint8x8_t v11 = 0;
  v11[1] = 0;
  std::string v11[2] = v7;
  void *v10 = v11;
  uint64_t v12 = **((void **)this + 48);
  if (v12)
  {
    *((void *)this + 48) = v12;
    unint64_t v13 = *v10;
  }
  else
  {
    unint64_t v13 = v11;
  }
  std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*((uint64_t **)this + 49), v13);
  ++*((void *)this + 50);
  unint64_t v15 = *((void *)this + 61);
  unint64_t v14 = *((void *)this + 62);
  if (v15 >= v14)
  {
    uint64_t v17 = *((void *)this + 60);
    uint64_t v18 = (uint64_t)(v15 - v17) >> 4;
    unint64_t v19 = v18 + 1;
    if ((unint64_t)(v18 + 1) >> 60) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v20 = v14 - v17;
    if (v20 >> 3 > v19) {
      unint64_t v19 = v20 >> 3;
    }
    if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v21 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v21 = v19;
    }
    if (v21) {
      unint64_t v21 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<google::protobuf::Descriptor const*,int>>>(v21);
    }
    else {
      uint64_t v22 = 0;
    }
    unint64_t v23 = v21 + 16 * v18;
    unint64_t v24 = v21 + 16 * v22;
    *(void *)unint64_t v23 = v4;
    *(_DWORD *)(v23 + 8) = v5;
    unint64_t v16 = v23 + 16;
    unint64_t v26 = (char *)*((void *)this + 60);
    uint64_t v25 = (char *)*((void *)this + 61);
    if (v25 != v26)
    {
      do
      {
        *(_OWORD *)(v23 - 16) = *((_OWORD *)v25 - 1);
        v23 -= 16;
        v25 -= 16;
      }
      while (v25 != v26);
      uint64_t v25 = (char *)*((void *)this + 60);
    }
    *((void *)this + 60) = v23;
    *((void *)this + 61) = v16;
    *((void *)this + 62) = v24;
    if (v25) {
      operator delete(v25);
    }
  }
  else
  {
    *(void *)unint64_t v15 = v4;
    *(_DWORD *)(v15 + 8) = v5;
    unint64_t v16 = v15 + 16;
  }
  *((void *)this + 61) = v16;
  return 1;
}

void google::protobuf::DescriptorPool::Tables::AllocateString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = a3;
  operator new();
}

void sub_1891DC7A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::__split_buffer<std::unique_ptr<std::string>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorPool::Tables::AllocateEmptyString(google::protobuf::DescriptorPool::Tables *this)
{
}

void sub_1891DC8E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::unique_ptr<std::string>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorPool::Tables::AllocateOnceDynamic(google::protobuf::DescriptorPool::Tables *this)
{
}

uint64_t google::protobuf::DescriptorPool::Tables::AllocateBytes(google::protobuf::DescriptorPool::Tables *this, int a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v4 = (char *)this + 200;
  unint64_t v5 = *((void *)this + 25);
  unint64_t v6 = *((void *)this + 24);
  if (v6 >= v5)
  {
    uint64_t v9 = *((void *)this + 23);
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - v9) >> 3);
    if (v10 + 1 > 0xAAAAAAAAAAAAAAALL) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - v9) >> 3);
    uint64_t v12 = 2 * v11;
    if (2 * v11 <= v10 + 1) {
      uint64_t v12 = v10 + 1;
    }
    if (v11 >= 0x555555555555555) {
      unint64_t v13 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v13 = v12;
    }
    unint64_t v19 = v4;
    if (v13) {
      unint64_t v13 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<char>>>(v13);
    }
    else {
      uint64_t v14 = 0;
    }
    unint64_t v15 = v13;
    unint64_t v16 = (std::vector<char> *)(v13 + 24 * v10);
    unint64_t v18 = v13 + 24 * v14;
    std::vector<char>::vector(v16, a2);
    uint64_t v17 = v16 + 1;
    std::vector<std::vector<char>>::__swap_out_circular_buffer((void *)this + 23, &v15);
    unint64_t v7 = *((void *)this + 24);
    std::__split_buffer<std::vector<char>>::~__split_buffer((uint64_t)&v15);
  }
  else
  {
    std::vector<char>::vector(*((std::vector<char> **)this + 24), a2);
    unint64_t v7 = v6 + 24;
    *((void *)this + 24) = v6 + 24;
  }
  *((void *)this + 24) = v7;
  return *(void *)(v7 - 24);
}

void sub_1891DCB44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::vector<char>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void google::protobuf::FileDescriptorTables::BuildLocationsByPath(uint64_t *a1, uint64_t a2, char *a3)
{
  *(void *)&v41[31] = *MEMORY[0x1E4F143B8];
  uint64_t v34 = *(unsigned int *)(a1[1] + 24);
  if ((int)v34 >= 1)
  {
    uint64_t v4 = a1;
    for (uint64_t i = 0; i != v34; ++i)
    {
      uint64_t v6 = *v4;
      uint64_t v7 = *(void *)(*(void *)(v4[1] + 32) + 8 * i + 8);
      uint64_t v8 = *(int *)(v7 + 24);
      uint64_t v35 = v7;
      uint64_t v9 = *(void *)(v7 + 32);
      memset(&v37, 0, sizeof(v37));
      if (v8)
      {
        unint64_t v3 = 0;
        uint64_t v10 = 4 * v8;
        do
        {
          if (v3) {
            std::string::append(&v37, ",");
          }
          unint64_t v11 = *(unsigned int *)(v9 + v3);
          __s = &v40;
          uint64_t v12 = &v40;
          if ((v11 & 0x80000000) != 0)
          {
            char v40 = 45;
            unint64_t v11 = -(int)v11;
            uint64_t v12 = v41;
          }
          std::string::size_type v39 = google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)v11, v12, a3) - &v40;
          std::string::append(&v37, __s, v39);
          v3 += 4;
        }
        while (v10 != v3);
      }
      uint64_t v36 = (uint64_t *)(v6 + 280);
      unint64_t v13 = (void *)(v6 + 304);
      unint64_t v14 = std::__string_hash<char>::operator()[abi:ne180100](v6 + 304, (uint64_t)&v37);
      unint64_t v15 = v14;
      unint64_t v16 = *(void *)(v6 + 288);
      if (v16)
      {
        uint8x8_t v17 = (uint8x8_t)vcnt_s8((int8x8_t)v16);
        v17.i16[0] = vaddlv_u8(v17);
        unint64_t v18 = v17.u32[0];
        if (v17.u32[0] > 1uLL)
        {
          unint64_t v3 = v14;
          if (v14 >= v16) {
            unint64_t v3 = v14 % v16;
          }
        }
        else
        {
          unint64_t v3 = (v16 - 1) & v14;
        }
        unint64_t v19 = *(void ***)(*v36 + 8 * v3);
        if (v19)
        {
          uint64_t v20 = *v19;
          if (*v19)
          {
            while (1)
            {
              unint64_t v21 = *((void *)v20 + 1);
              if (v21 == v15)
              {
                if (std::equal_to<std::string>::operator()[abi:ne180100](v6 + 312, (unsigned __int8 *)v20 + 16, (unsigned __int8 *)&v37))
                {
                  uint64_t v4 = a1;
                  uint64_t v32 = v35;
                  goto LABEL_50;
                }
              }
              else
              {
                if (v18 > 1)
                {
                  if (v21 >= v16) {
                    v21 %= v16;
                  }
                }
                else
                {
                  v21 &= v16 - 1;
                }
                if (v21 != v3)
                {
LABEL_26:
                  uint64_t v4 = a1;
                  break;
                }
              }
              uint64_t v20 = *(void **)v20;
              if (!v20) {
                goto LABEL_26;
              }
            }
          }
        }
        unint64_t v13 = (void *)(v6 + 304);
      }
      uint64_t v20 = operator new(0x30uLL);
      *(void *)uint64_t v20 = 0;
      *((void *)v20 + 1) = v15;
      std::string::size_type v22 = v37.__r_.__value_.__r.__words[2];
      *((_OWORD *)v20 + 1) = *(_OWORD *)&v37.__r_.__value_.__l.__data_;
      memset(&v37, 0, sizeof(v37));
      *((void *)v20 + 4) = v22;
      *((void *)v20 + 5) = 0;
      float v23 = (float)(unint64_t)(*(void *)(v6 + 304) + 1);
      float v24 = *(float *)(v6 + 312);
      if (!v16 || (float)(v24 * (float)v16) < v23)
      {
        BOOL v25 = (v16 & (v16 - 1)) != 0;
        if (v16 < 3) {
          BOOL v25 = 1;
        }
        unint64_t v26 = v25 | (2 * v16);
        unint64_t v27 = vcvtps_u32_f32(v23 / v24);
        if (v26 <= v27) {
          size_t v28 = v27;
        }
        else {
          size_t v28 = v26;
        }
        std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>((uint64_t)v36, v28);
        unint64_t v16 = *(void *)(v6 + 288);
        if ((v16 & (v16 - 1)) != 0)
        {
          if (v15 >= v16) {
            unint64_t v3 = v15 % v16;
          }
          else {
            unint64_t v3 = v15;
          }
        }
        else
        {
          unint64_t v3 = (v16 - 1) & v15;
        }
      }
      uint64_t v29 = *v36;
      unint64_t v30 = *(void **)(*v36 + 8 * v3);
      if (v30)
      {
        *(void *)uint64_t v20 = *v30;
        uint64_t v32 = v35;
      }
      else
      {
        *(void *)uint64_t v20 = *(void *)(v6 + 296);
        *(void *)(v6 + 296) = v20;
        *(void *)(v29 + 8 * v3) = v6 + 296;
        uint64_t v32 = v35;
        if (!*(void *)v20) {
          goto LABEL_49;
        }
        unint64_t v31 = *(void *)(*(void *)v20 + 8);
        if ((v16 & (v16 - 1)) != 0)
        {
          if (v31 >= v16) {
            v31 %= v16;
          }
        }
        else
        {
          v31 &= v16 - 1;
        }
        unint64_t v30 = (void *)(*v36 + 8 * v31);
      }
      void *v30 = v20;
LABEL_49:
      ++*v13;
LABEL_50:
      *((void *)v20 + 5) = v32;
      if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v37.__r_.__value_.__l.__data_);
      }
    }
  }
}

void sub_1891DCEE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,void *>>>::operator()[abi:ne180100](1, v20);
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::anonymous namespace'::GeneratedDatabase(google::protobuf::_anonymous_namespace_ *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29F2B8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1EB29F2B8))
  {
    operator new();
  }
  return qword_1EB29F2B0;
}

void sub_1891DCFA8(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F580](v1, 0xA1C40F4AD4952);
  __cxa_guard_abort(&qword_1EB29F2B8);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::internal_generated_pool(google::protobuf::DescriptorPool *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29F2A8, memory_order_acquire) & 1) == 0)
  {
    uint64_t v2 = (google::protobuf::_anonymous_namespace_ *)__cxa_guard_acquire(&qword_1EB29F2A8);
    if (v2) {
  }
    }
  return _MergedGlobals_174;
}

void sub_1891DD058(_Unwind_Exception *a1)
{
}

void google::protobuf::anonymous namespace'::NewGeneratedPool(google::protobuf::_anonymous_namespace_ *this)
{
  uint64_t v1 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1891DD8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, void **a10, uint64_t a11, uint64_t a12, void **a13, void **a14, void **a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void **a23)
{
  while (1)
  {
    if (*((char *)v24 - 9) < 0) {
      operator delete(*(v24 - 4));
    }
    v24 -= 4;
    if (v24 == &a23)
    {
      unint64_t v26 = *(void **)(a21 + 480);
      if (v26)
      {
        *(void *)(a21 + 488) = v26;
        operator delete(v26);
      }
      unint64_t v27 = *(void **)(a21 + 456);
      if (v27)
      {
        *(void *)(a21 + 464) = v27;
        operator delete(v27);
      }
      size_t v28 = *(void **)(a21 + 432);
      if (v28)
      {
        *(void *)(a21 + 440) = v28;
        operator delete(v28);
      }
      uint64_t v29 = *a9;
      if (*a9)
      {
        *(void *)(a21 + 416) = v29;
        operator delete(v29);
      }
      std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::destroy(*a10);
      std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(a11);
      std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(a12);
      a23 = a13;
      std::vector<std::unique_ptr<google::protobuf::FileDescriptorTables>>::__destroy_vector::operator()[abi:ne180100](&a23);
      a23 = (void **)(v23 + 112);
      std::vector<std::unique_ptr<std::once_flag>>::__destroy_vector::operator()[abi:ne180100](&a23);
      a23 = a14;
      std::vector<std::unique_ptr<google::protobuf::Message>>::__destroy_vector::operator()[abi:ne180100](&a23);
      a23 = (void **)(v23 + 64);
      std::vector<std::unique_ptr<std::string>>::__destroy_vector::operator()[abi:ne180100](&a23);
      a23 = a15;
      std::vector<std::vector<char>>::__destroy_vector::operator()[abi:ne180100](&a23);
      std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::~__hash_table(v23);
      std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(a16);
      std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(a17);
      std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(a18);
      a23 = (void **)a21;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a23);
      MEMORY[0x18C11F580](a21, 0x10A0C40292B2256);
      MEMORY[0x18C11F580](a19, 0x1060C40AEB7C726);
      _Unwind_Resume(a1);
    }
  }
}

void google::protobuf::DescriptorPool::InternalAddGeneratedFile(google::protobuf::DescriptorPool *this, const void *a2)
{
  int v2 = (int)a2;
  if ((google::protobuf::EncodedDescriptorDatabase::Add(v4, (char *)this, v2) & 1) == 0)
  {
    int v5 = 3;
    uint64_t v6 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    int v7 = 1374;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: GeneratedDatabase()->Add(encoded_file_descriptor, size): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1891DDB68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorPool::FindFileByName(uint64_t a1, uint64_t *a2, const char *a3)
{
  int v5 = *(std::mutex **)a1;
  if (*(void *)a1) {
    std::mutex::lock(*(std::mutex **)a1);
  }
  if (*(void *)(a1 + 8))
  {
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear(*(void *)(a1 + 32) + 64);
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear(*(void *)(a1 + 32) + 24);
  }
  uint64_t v6 = *(void *)(a1 + 32);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v17, a2, a3);
  long long v18 = v17;
  int v7 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((void *)(v6 + 344), (char **)&v18);
  if (!v7 || (uint64_t FileByName = v7[4]) == 0)
  {
    uint64_t v10 = *(void *)(a1 + 24);
    if (!v10 || (uint64_t FileByName = google::protobuf::DescriptorPool::FindFileByName(v10, a2)) == 0)
    {
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v16, a2, v8);
      if (!google::protobuf::DescriptorPool::TryFindFileInFallbackDatabase((google::protobuf::DescriptorPool *)a1, v16[0], v16[1])|| (v12 = *(void *)(a1 + 32), google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v15, a2, v11), v18 = v15, (unint64_t v13 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((void *)(v12 + 344), (char **)&v18)) == 0)|| (FileByName = v13[4]) == 0)
      {
        uint64_t FileByName = 0;
      }
    }
  }
  if (v5) {
    std::mutex::unlock(v5);
  }
  return FileByName;
}

void sub_1891DDC94(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::mutex::unlock(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorPool::TryFindFileInFallbackDatabase(google::protobuf::DescriptorPool *a1, uint64_t a2, uint64_t a3)
{
  v9[0] = a2;
  v9[1] = a3;
  if (!*((void *)a1 + 1)) {
    return 0;
  }
  google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)v9, v7);
  if (std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((void *)(*((void *)a1 + 4) + 24), (unsigned __int8 *)v7))
  {
    uint64_t v4 = 0;
  }
  else
  {
    google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)v6, 0);
    if ((*(unsigned int (**)(void, void **, unsigned char *))(**((void **)a1 + 1) + 16))(*((void *)a1 + 1), v7, v6)&& google::protobuf::DescriptorPool::BuildFileFromDatabase(a1, (const google::protobuf::FileDescriptorProto *)v6))
    {
      uint64_t v4 = 1;
    }
    else
    {
      std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string>(*((void *)a1 + 4) + 24, (unsigned __int8 *)v7, (uint64_t)v7);
      uint64_t v4 = 0;
    }
    google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v6);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  return v4;
}

void sub_1891DDD9C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 - 33) < 0) {
    operator delete(*(void **)(v1 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::Symbol::GetFile(google::protobuf::Symbol *this)
{
  switch(*(_DWORD *)this)
  {
    case 1:
    case 4:
    case 6:
      uint64_t v1 = *((void *)this + 1);
      goto LABEL_7;
    case 2:
      unint64_t v3 = (uint64_t *)(*((void *)this + 1) + 40);
      goto LABEL_8;
    case 3:
    case 7:
      uint64_t v1 = *(void *)(*((void *)this + 1) + 16);
      goto LABEL_7;
    case 5:
      uint64_t v1 = *(void *)(*((void *)this + 1) + 24);
LABEL_7:
      unint64_t v3 = (uint64_t *)(v1 + 16);
      goto LABEL_8;
    case 8:
      unint64_t v3 = (uint64_t *)((char *)this + 8);
LABEL_8:
      uint64_t result = *v3;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t google::protobuf::DescriptorPool::FindMessageTypeByName(uint64_t a1, uint64_t *a2, const char *a3)
{
  uint64_t v4 = *(void *)(a1 + 32);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v7, a2, a3);
  if (google::protobuf::DescriptorPool::Tables::FindByNameHelper(v4, a1, v7[0], v7[1]) == 1) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t google::protobuf::DescriptorPool::FindExtensionByNumber(std::mutex **this, const google::protobuf::Descriptor *a2, uint64_t a3)
{
  if (!*((_DWORD *)a2 + 31)) {
    return 0;
  }
  uint64_t v6 = *this;
  if (!*this) {
    goto LABEL_10;
  }
  std::mutex::lock(*this);
  int v7 = this[4];
  char v8 = std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::find<std::pair<google::protobuf::Descriptor const*,int>>((uint64_t)&v7[6], (unint64_t)a2, a3);
  if (v7[6].__m_.__opaque == (char *)v8)
  {
    std::mutex::unlock(v6);
  }
  else
  {
    uint64_t ExtensionByNumber = v8[6];
    std::mutex::unlock(v6);
    if (ExtensionByNumber) {
      return ExtensionByNumber;
    }
  }
  uint64_t v6 = *this;
  if (*this)
  {
    std::mutex::lock(*this);
    char v10 = 0;
  }
  else
  {
LABEL_10:
    char v10 = 1;
  }
  if (this[1])
  {
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear((uint64_t)&this[4][1]);
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear((uint64_t)&this[4]->__m_.__opaque[16]);
  }
  unint64_t v11 = this[4];
  uint64_t v12 = std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::find<std::pair<google::protobuf::Descriptor const*,int>>((uint64_t)&v11[6], (unint64_t)a2, a3);
  if (v11[6].__m_.__opaque == (char *)v12 || (uint64_t ExtensionByNumber = v12[6]) == 0)
  {
    unint64_t v13 = (google::protobuf::DescriptorPool *)this[3];
    if (!v13 || (uint64_t ExtensionByNumber = google::protobuf::DescriptorPool::FindExtensionByNumber(v13, a2, a3)) == 0)
    {
      if (!google::protobuf::DescriptorPool::TryFindExtensionInFallbackDatabase((google::protobuf::DescriptorPool *)this, a2, a3)|| (unint64_t v14 = this[4], v15 = std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::find<std::pair<google::protobuf::Descriptor const*,int>>((uint64_t)&v14[6], (unint64_t)a2, a3), v14[6].__m_.__opaque == (char *)v15)|| (ExtensionByNumber = v15[6]) == 0)
      {
        uint64_t ExtensionByNumber = 0;
      }
    }
  }
  if ((v10 & 1) == 0) {
    std::mutex::unlock(v6);
  }
  return ExtensionByNumber;
}

void sub_1891DE00C(_Unwind_Exception *exception_object)
{
  if ((v2 & 1) == 0) {
    std::mutex::unlock(v1);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::DescriptorPool::TryFindExtensionInFallbackDatabase(google::protobuf::DescriptorPool *this, const google::protobuf::Descriptor *a2, uint64_t a3)
{
  if (!*((void *)this + 1)) {
    return 0;
  }
  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)v12, 0);
  v9 = ((*(uint64_t (**)(void, void, uint64_t, unsigned char *))(**((void **)this + 1) + 32))(*((void *)this + 1), *((void *)a2 + 1), a3, v12) & 1) != 0&& ((uint64_t v7 = *((void *)this + 4), google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v11, (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFELL), v6), v14 = v11, (v8 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((void *)(v7 + 344), (char **)&v14)) == 0)|| !v8[4])&& google::protobuf::DescriptorPool::BuildFileFromDatabase(this, (const google::protobuf::FileDescriptorProto *)v12) != 0;
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v12);
  return v9;
}

void sub_1891DE10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::InternalFindExtensionByNumberNoLock(google::protobuf::DescriptorPool *this, const google::protobuf::Descriptor *a2, int a3)
{
  if (!*((_DWORD *)a2 + 31)) {
    return 0;
  }
  uint64_t v6 = *((void *)this + 4);
  uint64_t v7 = std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::find<std::pair<google::protobuf::Descriptor const*,int>>(v6 + 384, (unint64_t)a2, a3);
  if ((uint64_t *)(v6 + 392) == v7 || (uint64_t result = v7[6]) == 0)
  {
    BOOL v9 = (google::protobuf::DescriptorPool *)*((void *)this + 3);
    if (!v9) {
      return 0;
    }
    uint64_t result = google::protobuf::DescriptorPool::InternalFindExtensionByNumberNoLock(v9, a2, a3);
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t google::protobuf::DescriptorPool::FindExtensionByPrintableName(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (!*(_DWORD *)(a2 + 124)) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 32);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v19, a3, (const char *)a3);
  if (google::protobuf::DescriptorPool::Tables::FindByNameHelper(v6, a1, v19, v20) == 2)
  {
    uint64_t result = v7;
    if (*(unsigned char *)(v7 + 67))
    {
      if (*(void *)(v7 + 80) == a2) {
        return result;
      }
    }
  }
  if (!*(unsigned char *)(*(void *)(a2 + 32) + 72)) {
    return 0;
  }
  uint64_t result = google::protobuf::DescriptorPool::FindMessageTypeByName(a1, a3, v8);
  if (!result) {
    return result;
  }
  uint64_t v10 = result;
  int v11 = *(_DWORD *)(result + 128);
  if (v11 < 1) {
    return 0;
  }
  uint64_t v12 = 0;
  uint64_t v13 = 152 * v11;
  while (1)
  {
    uint64_t v14 = *(void *)(v10 + 80);
    if (*(void *)(v14 + v12 + 80) == a2)
    {
      long long v15 = *(std::once_flag::_State_type **)(v14 + v12 + 48);
      if (v15)
      {
        uint64_t v16 = v14 + v12;
        long long v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v15, memory_order_acquire) != -1)
        {
          unint64_t v19 = &v17;
          uint64_t v20 = &v16;
          long long v18 = &v19;
          std::__call_once(v15, &v18, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if (*(_DWORD *)(v14 + v12 + 56) == 11
        && *(_DWORD *)(v14 + v12 + 60) == 1
        && google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)(v14 + v12)) == v10)
      {
        break;
      }
    }
    v12 += 152;
    if (v13 == v12) {
      return 0;
    }
  }
  return v14 + v12;
}

uint64_t google::protobuf::FieldDescriptor::type(google::protobuf::FieldDescriptor *this)
{
  char v2 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v2)
  {
    uint64_t v4 = this;
    uint64_t v5 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v7[0] = &v5;
      v7[1] = &v4;
      uint64_t v6 = v7;
      std::__call_once(v2, &v6, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *((unsigned int *)this + 14);
}

uint64_t google::protobuf::FieldDescriptor::message_type(google::protobuf::FieldDescriptor *this)
{
  char v2 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v2)
  {
    uint64_t v4 = this;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v6[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
      v6[1] = &v4;
      uint64_t v5 = v6;
      std::__call_once(v2, &v5, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *((void *)this + 13);
}

uint64_t google::protobuf::Descriptor::FindFieldByNumber(google::protobuf::Descriptor *this, int a2)
{
  char v2 = *(int8x8_t **)(*((void *)this + 2) + 144);
  int8x8_t v3 = v2[20];
  if (!*(void *)&v3) {
    return 0;
  }
  unint64_t v4 = (16777619 * a2) ^ (16777499 * (void)this);
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    uint64_t v6 = (16777619 * a2) ^ (16777499 * (void)this);
    if (v4 >= *(void *)&v3) {
      uint64_t v6 = v4 % *(void *)&v3;
    }
  }
  else
  {
    uint64_t v6 = (*(void *)&v3 - 1) & v4;
  }
  uint64_t v7 = *(uint64_t ***)(*(void *)&v2[19] + 8 * v6);
  if (!v7) {
    return 0;
  }
  char v8 = *v7;
  if (!v8) {
    return 0;
  }
  while (1)
  {
    unint64_t v9 = v8[1];
    if (v4 == v9) {
      break;
    }
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(void *)&v3) {
        v9 %= *(void *)&v3;
      }
    }
    else
    {
      v9 &= *(void *)&v3 - 1;
    }
    if (v9 != v6) {
      return 0;
    }
LABEL_20:
    char v8 = (uint64_t *)*v8;
    if (!v8) {
      return 0;
    }
  }
  if ((google::protobuf::Descriptor *)v8[2] != this || *((_DWORD *)v8 + 6) != a2) {
    goto LABEL_20;
  }
  uint64_t v12 = v8[4];
  if (!v12) {
    return 0;
  }
  if (*(unsigned char *)(v12 + 67)) {
    return 0;
  }
  else {
    return v8[4];
  }
}

uint64_t google::protobuf::Descriptor::FindFieldByLowercaseName(uint64_t a1, uint64_t *a2, const char *a3)
{
  uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 144);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v8, a2, a3);
  long long v5 = v8;
  uint64_t v11 = v4;
  uint64_t v12 = google::protobuf::FileDescriptorTables::FieldsByLowercaseNamesLazyInitStatic;
  if (atomic_load_explicit((atomic_ullong *volatile)(v4 + 88), memory_order_acquire) != -1)
  {
    unint64_t v9 = &v12;
    *(void *)&long long v10 = &v11;
    uint64_t v13 = &v9;
    long long v7 = v5;
    std::__call_once((std::once_flag::_State_type *)(v4 + 88), &v13, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FileDescriptorTables const*),google::protobuf::FileDescriptorTables const*&&>>);
    long long v5 = v7;
  }
  unint64_t v9 = (uint64_t (**)(uint64_t, const google::protobuf::FileDescriptorTables *))a1;
  long long v10 = v5;
  if (result)
  {
    if (*(unsigned char *)(result + 67)) {
      return 0;
    }
  }
  return result;
}

uint64_t google::protobuf::Descriptor::FindFieldByName(uint64_t a1, uint64_t *a2, const char *a3)
{
  uint64_t v4 = *(void **)(*(void *)(a1 + 16) + 144);
  long long v5 = (google::protobuf::_anonymous_namespace_ *)google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v21, a2, a3);
  uint64_t v6 = v21;
  v23[0] = a1;
  v23[1] = v21;
  void v23[2] = v22;
  if (v22 < 1)
  {
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v7 = 5 * v7 + v8;
    }
    while (v6 < &v21[v22]);
  }
  int8x8_t v9 = (int8x8_t)v4[1];
  if (v9)
  {
    unint64_t v10 = v7 ^ (16777619 * a1);
    uint8x8_t v11 = (uint8x8_t)vcnt_s8(v9);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v13 = v10;
      if (v10 >= *(void *)&v9) {
        unint64_t v13 = v10 % *(void *)&v9;
      }
    }
    else
    {
      unint64_t v13 = (*(void *)&v9 - 1) & v10;
    }
    uint64_t v14 = *(void **)(*v4 + 8 * v13);
    if (v14)
    {
      long long v15 = (void *)*v14;
      if (*v14)
      {
        do
        {
          unint64_t v16 = v15[1];
          if (v10 == v16)
          {
            long long v5 = (google::protobuf::_anonymous_namespace_ *)std::equal_to<std::pair<void const*,google::protobuf::StringPiece>>::operator()[abi:ne180100](v15 + 2, v23);
            if (v5)
            {
              unint64_t v19 = v15 + 5;
              uint64_t v20 = v15 + 6;
              goto LABEL_23;
            }
          }
          else
          {
            if (v12 > 1)
            {
              if (v16 >= *(void *)&v9) {
                v16 %= *(void *)&v9;
              }
            }
            else
            {
              v16 &= *(void *)&v9 - 1;
            }
            if (v16 != v13) {
              break;
            }
          }
          long long v15 = (void *)*v15;
        }
        while (v15);
      }
    }
  }
  uint64_t v20 = &qword_1EB29F2F0;
  unint64_t v19 = &qword_1EB29F2E8;
LABEL_23:
  if (*(_DWORD *)v19 != 2)
  {
    if (!qword_1EB29F2E8) {
      return 0;
    }
    uint64_t v20 = &qword_1EB29F2F0;
  }
  uint64_t v17 = *v20;
  if (*(unsigned char *)(v17 + 67)) {
    return 0;
  }
  else {
    return v17;
  }
}

uint64_t google::protobuf::EnumDescriptor::FindValueByName(uint64_t a1, uint64_t *a2, const char *a3)
{
  uint64_t v4 = *(void **)(*(void *)(a1 + 16) + 144);
  long long v5 = (google::protobuf::_anonymous_namespace_ *)google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v20, a2, a3);
  uint64_t v6 = v20;
  v22[0] = a1;
  v22[1] = v20;
  void v22[2] = v21;
  if (v21 < 1)
  {
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v7 = 5 * v7 + v8;
    }
    while (v6 < &v20[v21]);
  }
  int8x8_t v9 = (int8x8_t)v4[1];
  if (v9)
  {
    unint64_t v10 = v7 ^ (16777619 * a1);
    uint8x8_t v11 = (uint8x8_t)vcnt_s8(v9);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v13 = v10;
      if (v10 >= *(void *)&v9) {
        unint64_t v13 = v10 % *(void *)&v9;
      }
    }
    else
    {
      unint64_t v13 = (*(void *)&v9 - 1) & v10;
    }
    uint64_t v14 = *(void **)(*v4 + 8 * v13);
    if (v14)
    {
      long long v15 = (void *)*v14;
      if (*v14)
      {
        do
        {
          unint64_t v16 = v15[1];
          if (v10 == v16)
          {
            long long v5 = (google::protobuf::_anonymous_namespace_ *)std::equal_to<std::pair<void const*,google::protobuf::StringPiece>>::operator()[abi:ne180100](v15 + 2, v22);
            if (v5)
            {
              long long v18 = v15 + 5;
              unint64_t v19 = v15 + 6;
              goto LABEL_23;
            }
          }
          else
          {
            if (v12 > 1)
            {
              if (v16 >= *(void *)&v9) {
                v16 %= *(void *)&v9;
              }
            }
            else
            {
              v16 &= *(void *)&v9 - 1;
            }
            if (v16 != v13) {
              break;
            }
          }
          long long v15 = (void *)*v15;
        }
        while (v15);
      }
    }
  }
  unint64_t v19 = &qword_1EB29F2F0;
  long long v18 = &qword_1EB29F2E8;
LABEL_23:
  if (*(_DWORD *)v18 == 5) {
    return *v19;
  }
  if (qword_1EB29F2E8) {
    return qword_1EB29F2F0;
  }
  else {
    return 0;
  }
}

uint64_t google::protobuf::FileDescriptorTables::FindEnumValueByNumberCreatingIfUnknown(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v14.__r_.__value_.__r.__words[0] = a2;
  v14.__r_.__value_.__l.__size_ = a3;
  if (!v6)
  {
    std::mutex::lock((std::mutex *)(a1 + 320));
    std::mutex::unlock((std::mutex *)(a1 + 320));
    if (!v6)
    {
      std::mutex::lock((std::mutex *)(a1 + 320));
      if (!v6)
      {
        uint64_t v7 = *(void **)a2;
        if (*(char *)(*(void *)a2 + 23) < 0) {
          uint64_t v7 = (void *)*v7;
        }
        uint64_t v8 = google::protobuf::StringPrintf((google::protobuf *)"UNKNOWN_ENUM_VALUE_%s_%d", &v14, v7, a3);
        uint64_t v9 = google::protobuf::DescriptorPool::internal_generated_pool((google::protobuf::DescriptorPool *)v8);
        google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
        unint64_t v10 = *(google::protobuf::DescriptorPool::Tables **)(v9 + 32);
        google::protobuf::DescriptorPool::Tables::AllocateBytes(v10, 40);
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v13, (uint64_t *)&v14, v11);
        google::protobuf::DescriptorPool::Tables::AllocateString((uint64_t)v10, v13[0], v13[1]);
      }
      std::mutex::unlock((std::mutex *)(a1 + 320));
    }
  }
  return v6;
}

void sub_1891DEB24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (a34 < 0) {
    operator delete(__p);
  }
  std::mutex::unlock(v34);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::BuildFileFromDatabase(google::protobuf::DescriptorPool *this, const google::protobuf::FileDescriptorProto *a2)
{
  if (std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((void *)(*((void *)this + 4) + 24), (unsigned __int8 *)(*((void *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL)))
  {
    return 0;
  }
  uint64_t v4 = (uint64_t *)*((void *)this + 4);
  uint64_t v5 = *((void *)this + 2);
  uint64_t v81 = this;
  int v84 = this;
  int v85 = v4;
  memset(&v91, 0, sizeof(v91));
  v93[0] = 0;
  v93[1] = 0;
  uint64_t v86 = v5;
  uint64_t v87 = 0;
  uint64_t v88 = 0;
  uint64_t v89 = 0;
  char v90 = 0;
  uint64_t v92 = v93;
  v94[0] = 0;
  v94[1] = 0;
  v93[2] = v94;
  long long v96 = 0u;
  long long v95 = 0u;
  std::string::basic_string[abi:ne180100]<0>(v97, "");
  uint64_t v83 = a2;
  std::string::operator=(&v91, (const std::string *)(*((void *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL));
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v100, (uint64_t *)&v91, v6);
  *(_OWORD *)&v103.__r_.__value_.__l.__data_ = v100;
  uint64_t v7 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>(v85 + 43, &v103.__r_.__value_.__l.__data_);
  if (!v7) {
    goto LABEL_35;
  }
  uint64_t v8 = v7[4];
  if (!v8) {
    goto LABEL_35;
  }
  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)&v103, 0);
  google::protobuf::FileDescriptor::CopyTo((long long **)v8, (std::string **)&v103);
  if (*(_DWORD *)(v8 + 60) == 2 && (*((unsigned char *)a2 + 16) & 4) != 0)
  {
    LODWORD(v103.__r_.__value_.__r.__words[2]) |= 4u;
    std::string::basic_string[abi:ne180100]<0>(&v105, "proto2");
    uint64_t v9 = (google::protobuf::internal::ArenaImpl *)(v103.__r_.__value_.__l.__size_ & 0xFFFFFFFFFFFFFFFELL);
    if (v103.__r_.__value_.__s.__data_[8]) {
      uint64_t v9 = *(google::protobuf::internal::ArenaImpl **)v9;
    }
    google::protobuf::internal::ArenaStringPtr::Set(&v104, (char *)&google::protobuf::internal::fixed_address_empty_string, &v105, v9);
    if ((char)v106 < 0) {
      operator delete((void *)v105);
    }
  }
  google::protobuf::MessageLite::SerializeAsString((google::protobuf::MessageLite *)&v103, (uint64_t)&v105);
  google::protobuf::MessageLite::SerializeAsString(a2, (uint64_t)__p);
  unsigned __int8 v10 = v106;
  if ((v106 & 0x80u) == 0) {
    unint64_t v11 = v106;
  }
  else {
    unint64_t v11 = *((void *)&v105 + 1);
  }
  unint64_t v12 = v102;
  int v13 = (char)v102;
  if ((v102 & 0x80u) != 0) {
    unint64_t v12 = (unint64_t)__p[1];
  }
  if (v11 != v12)
  {
    BOOL v23 = 0;
    if (((char)v102 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_29;
  }
  if ((v102 & 0x80u) == 0) {
    std::string v14 = __p;
  }
  else {
    std::string v14 = (void **)__p[0];
  }
  if ((char)v106 < 0)
  {
    BOOL v23 = memcmp((const void *)v105, v14, *((size_t *)&v105 + 1)) == 0;
    goto LABEL_31;
  }
  if (v106)
  {
    uint64_t v15 = v106 - 1;
    unint64_t v16 = &v105;
    do
    {
      int v18 = *(unsigned __int8 *)v16;
      unint64_t v16 = (long long *)((char *)v16 + 1);
      int v17 = v18;
      int v20 = *(unsigned __int8 *)v14;
      std::string v14 = (void **)((char *)v14 + 1);
      int v19 = v20;
      BOOL v22 = v15-- != 0;
      BOOL v23 = v17 == v19;
    }
    while (v17 == v19 && v22);
LABEL_31:
    if ((v13 & 0x80000000) == 0) {
      goto LABEL_32;
    }
LABEL_29:
    operator delete(__p[0]);
    unsigned __int8 v10 = v106;
    goto LABEL_32;
  }
  BOOL v23 = 1;
  if ((char)v102 < 0) {
    goto LABEL_29;
  }
LABEL_32:
  if ((v10 & 0x80) != 0) {
    operator delete((void *)v105);
  }
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)&v103);
  if (v23)
  {
    google::protobuf::DescriptorBuilder::~DescriptorBuilder((void **)&v84);
    return v8;
  }
LABEL_35:
  float v24 = v85;
  uint64_t v26 = *v85;
  unint64_t v25 = v85[1];
  if (v25 == *v85)
  {
LABEL_56:
    if (!*((unsigned char *)v84 + 41) && *((void *)v84 + 1))
    {
      uint64_t v36 = (long long *)(*((void *)v83 + 22) & 0xFFFFFFFFFFFFFFFELL);
      if (v25 >= v85[2])
      {
        uint64_t v38 = std::vector<std::string>::__push_back_slow_path<std::string const&>(v85, v36);
      }
      else
      {
        std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)v85, v36);
        uint64_t v38 = v25 + 24;
      }
      v85[1] = v38;
      if (*((int *)v83 + 8) >= 1)
      {
        uint64_t v51 = 1;
        while (1)
        {
          google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v99, *(uint64_t **)(*((void *)v83 + 5) + 8 * v51), v37);
          *(_OWORD *)&v103.__r_.__value_.__l.__data_ = v99;
          uint64_t v52 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>(v85 + 43, &v103.__r_.__value_.__l.__data_);
          if (v52 && v52[4]) {
            goto LABEL_91;
          }
          uint64_t v53 = v84;
          uint64_t v54 = *((void *)v84 + 3);
          if (!v54) {
            goto LABEL_90;
          }
          if (!google::protobuf::DescriptorPool::FindFileByName(v54, *(uint64_t **)(*((void *)v83 + 5) + 8 * v51), v37))break; {
LABEL_91:
          }
          if (v51++ >= *((int *)v83 + 8)) {
            goto LABEL_92;
          }
        }
        uint64_t v53 = v84;
LABEL_90:
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v98, *(uint64_t **)(*((void *)v83 + 5) + 8 * v51), v37);
        google::protobuf::DescriptorPool::TryFindFileInFallbackDatabase(v53, v98[0], v98[1]);
        goto LABEL_91;
      }
LABEL_92:
      uint64_t v56 = v85[1];
      uint64_t v57 = (void **)(v56 - 24);
      float v24 = v85;
      if (*(char *)(v56 - 1) < 0)
      {
        operator delete(*v57);
        float v24 = v85;
      }
      v85[1] = (uint64_t)v57;
    }
    unint64_t v58 = (unint64_t)(v24[27] - v24[26]) >> 3;
    unint64_t v59 = (unint64_t)(v24[30] - v24[29]) >> 3;
    unint64_t v60 = (unint64_t)(v24[33] - v24[32]) >> 3;
    unint64_t v61 = (unint64_t)(v24[36] - v24[35]) >> 3;
    int v62 = -1431655765 * ((unint64_t)(v24[24] - v24[23]) >> 3);
    unint64_t v63 = (unint64_t)(v24[55] - v24[54]) >> 3;
    unint64_t v64 = (unint64_t)(v24[58] - v24[57]) >> 3;
    unint64_t v65 = (unint64_t)(v24[61] - v24[60]) >> 4;
    uint64_t v67 = (char *)v24[52];
    unint64_t v66 = v24[53];
    if ((unint64_t)v67 >= v66)
    {
      int v70 = (char *)v24[51];
      uint64_t v71 = (v67 - v70) >> 5;
      unint64_t v72 = v71 + 1;
      if ((unint64_t)(v71 + 1) >> 59) {
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v73 = v66 - (void)v70;
      if (v73 >> 4 > v72) {
        unint64_t v72 = v73 >> 4;
      }
      if ((unint64_t)v73 >= 0x7FFFFFFFFFFFFFE0) {
        unint64_t v74 = 0x7FFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v74 = v72;
      }
      if (v74)
      {
        unint64_t v79 = (unint64_t)(v24[33] - v24[32]) >> 3;
        unint64_t v80 = (unint64_t)(v24[30] - v24[29]) >> 3;
        unint64_t v82 = (unint64_t)(v24[27] - v24[26]) >> 3;
        if (v74 >> 59) {
          std::__throw_bad_array_new_length[abi:ne180100]();
        }
        uint64_t v75 = (char *)operator new(32 * v74);
        LODWORD(v58) = v82;
        LODWORD(v60) = v79;
        LODWORD(v59) = v80;
      }
      else
      {
        uint64_t v75 = 0;
      }
      uint64_t v76 = &v75[32 * v71];
      *(_DWORD *)uint64_t v76 = v58;
      *((_DWORD *)v76 + 1) = v59;
      *((_DWORD *)v76 + 2) = v60;
      *((_DWORD *)v76 + 3) = v61;
      *((_DWORD *)v76 + 4) = v62;
      *((_DWORD *)v76 + 5) = v63;
      uint64_t v68 = v76 + 32;
      *((_DWORD *)v76 + 6) = v64;
      *((_DWORD *)v76 + 7) = v65;
      if (v67 == v70)
      {
        unint64_t v69 = v83;
      }
      else
      {
        unint64_t v69 = v83;
        do
        {
          long long v77 = *((_OWORD *)v67 - 1);
          *((_OWORD *)v76 - 2) = *((_OWORD *)v67 - 2);
          *((_OWORD *)v76 - 1) = v77;
          v76 -= 32;
          v67 -= 32;
        }
        while (v67 != v70);
        uint64_t v67 = (char *)v24[51];
      }
      v24[51] = (uint64_t)v76;
      v24[52] = (uint64_t)v68;
      v24[53] = (uint64_t)&v75[32 * v74];
      if (v67) {
        operator delete(v67);
      }
    }
    else
    {
      *(_DWORD *)uint64_t v67 = v58;
      *((_DWORD *)v67 + 1) = v59;
      *((_DWORD *)v67 + 2) = v60;
      *((_DWORD *)v67 + 3) = v61;
      *((_DWORD *)v67 + 4) = v62;
      *((_DWORD *)v67 + 5) = v63;
      uint64_t v68 = v67 + 32;
      *((_DWORD *)v67 + 6) = v64;
      *((_DWORD *)v67 + 7) = v65;
      unint64_t v69 = v83;
    }
    v24[52] = (uint64_t)v68;
    google::protobuf::DescriptorBuilder::BuildFileImpl(&v84, v69);
  }
  uint64_t v27 = 0;
  unint64_t v28 = *((void *)v83 + 22) & 0xFFFFFFFFFFFFFFFELL;
  int v29 = *(char *)(v28 + 23);
  if (v29 >= 0) {
    uint64_t v30 = *(unsigned __int8 *)(v28 + 23);
  }
  else {
    uint64_t v30 = *(void *)(v28 + 8);
  }
  if ((unint64_t)((uint64_t)(v25 - *v85) / 24) <= 1) {
    uint64_t v31 = 1;
  }
  else {
    uint64_t v31 = (uint64_t)(v25 - *v85) / 24;
  }
  while (1)
  {
    uint64_t v32 = (unsigned __int8 *)(v26 + 24 * v27);
    uint64_t v33 = v32[23];
    uint64_t v34 = (v33 & 0x80u) == 0 ? v32[23] : *((void *)v32 + 1);
    if (v34 == v30)
    {
      if (v29 >= 0) {
        uint64_t v35 = (unsigned __int8 *)v28;
      }
      else {
        uint64_t v35 = *(unsigned __int8 **)v28;
      }
      if ((v33 & 0x80) == 0)
      {
        if (!v32[23]) {
          break;
        }
        while (*v32 == *v35)
        {
          ++v32;
          ++v35;
          if (!--v33) {
            goto LABEL_60;
          }
        }
        goto LABEL_55;
      }
      if (!memcmp(*(const void **)v32, v35, *((void *)v32 + 1))) {
        break;
      }
    }
LABEL_55:
    if (++v27 == v31) {
      goto LABEL_56;
    }
  }
LABEL_60:
  std::string::basic_string[abi:ne180100]<0>(&v103, "File recursively imports itself: ");
  uint64_t v39 = *v85;
  if (0xAAAAAAAAAAAAAAABLL * ((v85[1] - *v85) >> 3) > (int)v27)
  {
    uint64_t v40 = 24 * (int)v27;
    unint64_t v41 = (int)v27;
    do
    {
      uint64_t v42 = v39 + v40;
      int v43 = *(char *)(v42 + 23);
      if (v43 >= 0) {
        uint64_t v44 = (const std::string::value_type *)v42;
      }
      else {
        uint64_t v44 = *(const std::string::value_type **)v42;
      }
      if (v43 >= 0) {
        std::string::size_type v45 = *(unsigned __int8 *)(v42 + 23);
      }
      else {
        std::string::size_type v45 = *(void *)(v42 + 8);
      }
      std::string::append(&v103, v44, v45);
      std::string::append(&v103, " -> ");
      ++v41;
      uint64_t v39 = *v85;
      v40 += 24;
    }
    while (0xAAAAAAAAAAAAAAABLL * ((v85[1] - *v85) >> 3) > v41);
  }
  unint64_t v46 = *((void *)v83 + 22) & 0xFFFFFFFFFFFFFFFELL;
  int v47 = *(char *)(v46 + 23);
  if (v47 >= 0) {
    uint64_t v48 = (const std::string::value_type *)(*((void *)v83 + 22) & 0xFFFFFFFFFFFFFFFELL);
  }
  else {
    uint64_t v48 = *(const std::string::value_type **)v46;
  }
  if (v47 >= 0) {
    std::string::size_type v49 = *(unsigned __int8 *)(v46 + 23);
  }
  else {
    std::string::size_type v49 = *(void *)(v46 + 8);
  }
  std::string::append(&v103, v48, v49);
  if (0xAAAAAAAAAAAAAAABLL * ((v85[1] - *v85) >> 3) - 1 <= (int)v27) {
    unint64_t v50 = *((void *)v83 + 22) & 0xFFFFFFFFFFFFFFFELL;
  }
  else {
    unint64_t v50 = *v85 + 24 * (int)((unint64_t)((v27 << 32) + 0x100000000) >> 32);
  }
  google::protobuf::DescriptorBuilder::AddError((uint64_t)&v84, v50, (uint64_t)v83, 9, (uint64_t)&v103);
  if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v103.__r_.__value_.__l.__data_);
  }
  google::protobuf::DescriptorBuilder::~DescriptorBuilder((void **)&v84);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(*((void *)v81 + 4) + 24, (unsigned __int8 *)(*((void *)v83 + 22) & 0xFFFFFFFFFFFFFFFELL), *((void *)v83 + 22) & 0xFFFFFFFFFFFFFFFELL);
  return 0;
}

void sub_1891DFF60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *__p,uint64_t a56,int a57,__int16 a58,char a59,char a60)
{
}

uint64_t google::protobuf::DescriptorPool::IsSubSymbolOfBuiltType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v16, &__str);
  std::string::size_type v4 = std::string::rfind(&__str, 46, 0xFFFFFFFFFFFFFFFFLL);
  if (v4 == -1)
  {
LABEL_10:
    uint64_t v10 = *(void *)(a1 + 24);
    if (v10) {
      uint64_t IsSubSymbolOfBuiltType = google::protobuf::DescriptorPool::IsSubSymbolOfBuiltType(v10, v16, v17);
    }
    else {
      uint64_t IsSubSymbolOfBuiltType = 0;
    }
  }
  else
  {
    std::string::size_type v5 = v4;
    while (1)
    {
      std::string::basic_string(&v14, &__str, 0, v5, (std::allocator<char> *)&v18);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      std::string __str = v14;
      uint64_t v7 = *(void *)(a1 + 32);
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v13, (uint64_t *)&__str, v6);
      *(_OWORD *)&v14.__r_.__value_.__l.__data_ = v13;
      uint64_t v8 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((void *)(v7 + 304), &v14.__r_.__value_.__l.__data_);
      if (v8)
      {
        uint64_t v9 = v8 + 4;
      }
      else
      {
        uint64_t v9 = &qword_1EB29F2E8;
      }
      if ((*(_DWORD *)v9 | 8) != 8) {
        break;
      }
      std::string::size_type v5 = std::string::rfind(&__str, 46, 0xFFFFFFFFFFFFFFFFLL);
      if (v5 == -1) {
        goto LABEL_10;
      }
    }
    uint64_t IsSubSymbolOfBuiltType = 1;
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  return IsSubSymbolOfBuiltType;
}

void sub_1891E0150(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::FieldDescriptor::DefaultValueAsString(std::string *this, google::protobuf::FieldDescriptor *a2, char *a3)
{
  int v3 = (int)a3;
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  if (!*((unsigned char *)a2 + 64))
  {
    LODWORD(v28.__r_.__value_.__l.__data_) = 3;
    v28.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobu"
                                                            "f/src/google/protobuf/descriptor.cc";
    LODWORD(v28.__r_.__value_.__r.__words[2]) = 1985;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: has_default_value(): ");
    std::string::append(&__p, "No default value");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v28);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  uint64_t v6 = (std::once_flag::_State_type *)*((void *)a2 + 6);
  if (v6)
  {
    uint64_t v26 = a2;
    uint64_t v27 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v6, memory_order_acquire) != -1)
    {
      v28.__r_.__value_.__r.__words[0] = (std::string::size_type)&v27;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)&v26;
      v25.__r_.__value_.__r.__words[0] = (std::string::size_type)&v28;
      std::__call_once(v6, &v25, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v7 = *((_DWORD *)a2 + 14);
  switch(v7)
  {
    case 1:
      google::protobuf::DoubleToBuffer((google::protobuf *)&v28, *((double *)a2 + 18), (char *)a2);
      std::string::basic_string[abi:ne180100]<0>(this, (char *)&v28);
      break;
    case 2:
      google::protobuf::FloatToBuffer((google::protobuf *)&v28, *((float *)a2 + 36), (char *)a2);
      std::string::basic_string[abi:ne180100]<0>(this, (char *)&v28);
      break;
    case 3:
    case 16:
    case 18:
      uint64_t v10 = *((void *)a2 + 18);
      v28.__r_.__value_.__r.__words[0] = (std::string::size_type)&v28.__r_.__value_.__r.__words[2];
      if (v10 < 0)
      {
        unint64_t v11 = &v28.__r_.__value_.__s.__data_[17];
        v28.__r_.__value_.__s.__data_[16] = 45;
        uint64_t v10 = -v10;
      }
      else
      {
        unint64_t v11 = &v28.__r_.__value_.__s.__data_[16];
      }
      v28.__r_.__value_.__l.__size_ = google::protobuf::FastUInt64ToBufferLeft((google::protobuf *)v10, v11, a3)
                                    - (unsigned char *)&v28.__r_.__value_.__r.__words[2];
      std::string::basic_string[abi:ne180100](this, v28.__r_.__value_.__l.__data_, v28.__r_.__value_.__l.__size_);
      break;
    case 4:
    case 6:
      long long v13 = (google::protobuf *)*((void *)a2 + 18);
      v28.__r_.__value_.__r.__words[0] = (std::string::size_type)&v28.__r_.__value_.__r.__words[2];
      v28.__r_.__value_.__l.__size_ = google::protobuf::FastUInt64ToBufferLeft(v13, &v28.__r_.__value_.__s.__data_[16], a3)- (unsigned char *)&v28.__r_.__value_.__r.__words[2];
      std::string::basic_string[abi:ne180100](this, v28.__r_.__value_.__l.__data_, v28.__r_.__value_.__l.__size_);
      break;
    case 5:
    case 15:
    case 17:
      unint64_t v8 = *((unsigned int *)a2 + 36);
      v28.__r_.__value_.__r.__words[0] = (std::string::size_type)&v28.__r_.__value_.__r.__words[2];
      if ((v8 & 0x80000000) != 0)
      {
        uint64_t v9 = &v28.__r_.__value_.__s.__data_[17];
        v28.__r_.__value_.__s.__data_[16] = 45;
        unint64_t v8 = -(int)v8;
      }
      else
      {
        uint64_t v9 = &v28.__r_.__value_.__s.__data_[16];
      }
      v28.__r_.__value_.__l.__size_ = google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)v8, v9, a3)
                                    - (unsigned char *)&v28.__r_.__value_.__r.__words[2];
      std::string::basic_string[abi:ne180100](this, v28.__r_.__value_.__l.__data_, v28.__r_.__value_.__l.__size_);
      break;
    case 7:
    case 13:
      unint64_t v12 = (google::protobuf *)*((unsigned int *)a2 + 36);
      v28.__r_.__value_.__r.__words[0] = (std::string::size_type)&v28.__r_.__value_.__r.__words[2];
      v28.__r_.__value_.__l.__size_ = google::protobuf::FastUInt32ToBufferLeft(v12, &v28.__r_.__value_.__s.__data_[16], a3)- (unsigned char *)&v28.__r_.__value_.__r.__words[2];
      std::string::basic_string[abi:ne180100](this, v28.__r_.__value_.__l.__data_, v28.__r_.__value_.__l.__size_);
      break;
    case 8:
      if (*((unsigned char *)a2 + 144)) {
        std::string v14 = "true";
      }
      else {
        std::string v14 = "false";
      }
      std::string::basic_string[abi:ne180100]<0>(this, v14);
      break;
    case 9:
    case 12:
      if (v3)
      {
        google::protobuf::CEscape(*((uint64_t **)a2 + 18), a3, &v25);
        int v19 = std::string::insert(&v25, 0, "\"");
        long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
        v28.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v20;
        v19->__r_.__value_.__l.__size_ = 0;
        v19->__r_.__value_.__r.__words[2] = 0;
        v19->__r_.__value_.__r.__words[0] = 0;
        uint64_t v21 = std::string::append(&v28, "\"");
        long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
        this->__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
        *(_OWORD *)&this->__r_.__value_.__l.__data_ = v22;
        v21->__r_.__value_.__l.__size_ = 0;
        v21->__r_.__value_.__r.__words[2] = 0;
        v21->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v28.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v25.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        BOOL v23 = (std::once_flag::_State_type *)*((void *)a2 + 6);
        if (v23)
        {
          uint64_t v26 = a2;
          uint64_t v27 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v23, memory_order_acquire) != -1)
          {
            v28.__r_.__value_.__r.__words[0] = (std::string::size_type)&v27;
            v28.__r_.__value_.__l.__size_ = (std::string::size_type)&v26;
            v25.__r_.__value_.__r.__words[0] = (std::string::size_type)&v28;
            std::__call_once(v23, &v25, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
          int v7 = *((_DWORD *)a2 + 14);
        }
        float v24 = (long long *)*((void *)a2 + 18);
        if (v7 == 12)
        {
          google::protobuf::CEscape((uint64_t *)v24, a3, this);
        }
        else
        {
          if ((*((char *)v24 + 23) & 0x80000000) == 0)
          {
            long long v17 = *v24;
            std::string::size_type v18 = *((void *)v24 + 2);
            goto LABEL_45;
          }
          std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)v24, *((void *)v24 + 1));
        }
      }
      break;
    case 10:
    case 11:
      LODWORD(v28.__r_.__value_.__l.__data_) = 2;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libproto"
                                                              "buf/src/google/protobuf/descriptor.cc";
      LODWORD(v28.__r_.__value_.__r.__words[2]) = 2023;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Messages can't have default values!");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v28);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      goto LABEL_29;
    case 14:
      uint64_t v15 = google::protobuf::FieldDescriptor::default_value_enum(a2);
      uint64_t v16 = *(long long **)v15;
      if (*(char *)(*(void *)v15 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)v16, *((void *)v16 + 1));
      }
      else
      {
        long long v17 = *v16;
        std::string::size_type v18 = *((void *)v16 + 2);
LABEL_45:
        this->__r_.__value_.__r.__words[2] = v18;
        *(_OWORD *)&this->__r_.__value_.__l.__data_ = v17;
      }
      break;
    default:
LABEL_29:
      LODWORD(v28.__r_.__value_.__l.__data_) = 3;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libproto"
                                                              "buf/src/google/protobuf/descriptor.cc";
      LODWORD(v28.__r_.__value_.__r.__words[2]) = 2026;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Can't get here: failed to get default value as string");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v28);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      std::string::basic_string[abi:ne180100]<0>(this, "");
      break;
  }
}

void sub_1891E0624(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FieldDescriptor::default_value_enum(google::protobuf::FieldDescriptor *this)
{
  char v2 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v2)
  {
    std::string::size_type v4 = this;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v6[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
      v6[1] = &v4;
      std::string::size_type v5 = v6;
      std::__call_once(v2, &v5, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *((void *)this + 18);
}

void google::protobuf::FileDescriptor::CopyTo(long long **this, std::string **a2)
{
  char v2 = (google::protobuf::FileDescriptorProto *)a2;
  int v3 = (google::protobuf::FileDescriptor *)this;
  std::string::size_type v4 = *this;
  *((_DWORD *)a2 + 4) |= 1u;
  std::string::size_type v5 = a2[1];
  uint64_t v6 = (google::protobuf::internal::ArenaImpl *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFFELL);
  if (v5) {
    uint64_t v6 = *(google::protobuf::internal::ArenaImpl **)v6;
  }
  google::protobuf::internal::ArenaStringPtr::Set(a2 + 22, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v4, v6);
  uint64_t v7 = *((void *)v3 + 1);
  if (*(char *)(v7 + 23) < 0)
  {
    if (!*(void *)(v7 + 8)) {
      goto LABEL_10;
    }
  }
  else if (!*(unsigned char *)(v7 + 23))
  {
    goto LABEL_10;
  }
  *((_DWORD *)v2 + 4) |= 2u;
  uint64_t v8 = *((void *)v2 + 1);
  uint64_t v9 = (google::protobuf::internal::ArenaImpl *)(v8 & 0xFFFFFFFFFFFFFFFELL);
  if (v8) {
    uint64_t v9 = *(google::protobuf::internal::ArenaImpl **)v9;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)v2 + 23, (std::string *)&google::protobuf::internal::fixed_address_empty_string, (long long *)v7, v9);
LABEL_10:
  if (*((_DWORD *)v3 + 15) == 3)
  {
    *((_DWORD *)v2 + 4) |= 4u;
    std::string::basic_string[abi:ne180100]<0>(__p, "proto3");
    uint64_t v10 = *((void *)v2 + 1);
    unint64_t v11 = (google::protobuf::internal::ArenaImpl *)(v10 & 0xFFFFFFFFFFFFFFFELL);
    if (v10) {
      unint64_t v11 = *(google::protobuf::internal::ArenaImpl **)v11;
    }
    google::protobuf::internal::ArenaStringPtr::Set((char **)v2 + 24, (char *)&google::protobuf::internal::fixed_address_empty_string, (long long *)__p, v11);
    if (v130 < 0) {
      operator delete(__p[0]);
    }
  }
  unint64_t v126 = v2;
  if (*((int *)v3 + 8) >= 1)
  {
    int v12 = 0;
    long long v13 = (google::protobuf::FileDescriptorProto *)((char *)v2 + 24);
    while (1)
    {
      std::string v14 = *(const std::string **)google::protobuf::FileDescriptor::dependency(v3, v12);
      uint64_t v15 = (int *)*((void *)v2 + 5);
      if (!v15) {
        break;
      }
      int v16 = *((_DWORD *)v2 + 8);
      int v17 = *v15;
      if (v16 >= *v15)
      {
        if (v17 == *((_DWORD *)v2 + 9))
        {
LABEL_22:
          BOOL v19 = __OFSUB__(v17, v16);
          int v20 = v17 - v16;
          if (v20 < 0 == v19)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v13, v20 + 1);
            uint64_t v15 = (int *)*((void *)v2 + 5);
          }
          int v17 = *v15;
        }
        int *v15 = v17 + 1;
        uint64_t v21 = *(void *)v13;
        if (!*(void *)v13) {
          operator new();
        }
        if (*(unsigned char *)(v21 + 24)) {
        AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v21, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
        }
        AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
        AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
        AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
        char v2 = v126;
        uint64_t v22 = *((void *)v126 + 5);
        uint64_t v23 = *((int *)v126 + 8);
        *((_DWORD *)v126 + 8) = v23 + 1;
        *(void *)(v22 + 8 * v23 + 8) = AlignedAndAddCleanup;
        goto LABEL_30;
      }
      *((_DWORD *)v2 + 8) = v16 + 1;
      AlignedAndAddCleanup = *(std::string **)&v15[2 * v16 + 2];
LABEL_30:
      std::string::operator=(AlignedAndAddCleanup, v14);
      if (++v12 >= *((_DWORD *)v3 + 8)) {
        goto LABEL_31;
      }
    }
    int v16 = *((_DWORD *)v2 + 8);
    int v17 = *((_DWORD *)v2 + 9);
    goto LABEL_22;
  }
LABEL_31:
  if (*((int *)v3 + 9) >= 1)
  {
    uint64_t v24 = 0;
    unsigned int v25 = *((_DWORD *)v2 + 36);
    do
    {
      int v26 = *(_DWORD *)(*((void *)v3 + 11) + 4 * v24);
      if (v25 == *((_DWORD *)v2 + 37)) {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v2 + 36, v25 + 1);
      }
      *(_DWORD *)(*((void *)v2 + 19) + 4 * v25++) = v26;
      *((_DWORD *)v2 + 36) = v25;
      ++v24;
    }
    while (v24 < *((int *)v3 + 9));
  }
  if (*((int *)v3 + 10) >= 1)
  {
    uint64_t v27 = 0;
    unsigned int v28 = *((_DWORD *)v2 + 40);
    do
    {
      int v29 = *(_DWORD *)(*((void *)v3 + 12) + 4 * v27);
      if (v28 == *((_DWORD *)v2 + 41)) {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v2 + 40, v28 + 1);
      }
      *(_DWORD *)(*((void *)v2 + 21) + 4 * v28++) = v29;
      *((_DWORD *)v2 + 40) = v28;
      ++v27;
    }
    while (v27 < *((int *)v3 + 10));
  }
  if (*((int *)v3 + 11) >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    while (1)
    {
      uint64_t v32 = *((void *)v3 + 13);
      uint64_t v33 = (int *)*((void *)v2 + 8);
      if (!v33) {
        break;
      }
      int v34 = *((_DWORD *)v2 + 14);
      int v35 = *v33;
      if (v34 >= *v33)
      {
        if (v35 == *((_DWORD *)v2 + 15))
        {
LABEL_48:
          if (v34 <= v35)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)v2 + 48), v35 - v34 + 1);
            uint64_t v33 = (int *)*((void *)v2 + 8);
          }
          int v35 = *v33;
        }
        *uint64_t v33 = v35 + 1;
        uint64_t v36 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(*((google::protobuf::internal::ArenaImpl **)v2
                                                                                             + 6));
        uint64_t v37 = *((void *)v2 + 8);
        uint64_t v38 = *((int *)v2 + 14);
        *((_DWORD *)v2 + 14) = v38 + 1;
        *(void *)(v37 + 8 * v38 + 8) = v36;
        goto LABEL_52;
      }
      *((_DWORD *)v2 + 14) = v34 + 1;
      uint64_t v36 = *(char **)&v33[2 * v34 + 2];
LABEL_52:
      google::protobuf::Descriptor::CopyTo((google::protobuf::Descriptor *)(v32 + v30), (google::protobuf::DescriptorProto *)v36);
      ++v31;
      v30 += 144;
      if (v31 >= *((int *)v3 + 11)) {
        goto LABEL_53;
      }
    }
    int v34 = *((_DWORD *)v2 + 14);
    int v35 = *((_DWORD *)v2 + 15);
    goto LABEL_48;
  }
LABEL_53:
  if (*((int *)v3 + 12) >= 1)
  {
    uint64_t v39 = 0;
    uint64_t v40 = 0;
    while (1)
    {
      uint64_t v41 = *((void *)v3 + 14);
      uint64_t v42 = (int *)*((void *)v2 + 11);
      if (!v42) {
        break;
      }
      int v43 = *((_DWORD *)v2 + 20);
      int v44 = *v42;
      if (v43 >= *v42)
      {
        if (v44 == *((_DWORD *)v2 + 21))
        {
LABEL_60:
          if (v43 <= v44)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)v2 + 72), v44 - v43 + 1);
            uint64_t v42 = (int *)*((void *)v2 + 11);
          }
          int v44 = *v42;
        }
        int *v42 = v44 + 1;
        std::string::size_type v45 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(*((google::protobuf::internal::ArenaImpl **)v2
                                                                                                 + 9));
        uint64_t v46 = *((void *)v2 + 11);
        uint64_t v47 = *((int *)v2 + 20);
        *((_DWORD *)v2 + 20) = v47 + 1;
        *(void *)(v46 + 8 * v47 + 8) = v45;
        goto LABEL_64;
      }
      *((_DWORD *)v2 + 20) = v43 + 1;
      std::string::size_type v45 = *(char **)&v42[2 * v43 + 2];
LABEL_64:
      google::protobuf::EnumDescriptor::CopyTo((google::protobuf::EnumDescriptor *)(v41 + v39), (google::protobuf::EnumDescriptorProto *)v45);
      ++v40;
      v39 += 80;
      if (v40 >= *((int *)v3 + 12)) {
        goto LABEL_65;
      }
    }
    int v43 = *((_DWORD *)v2 + 20);
    int v44 = *((_DWORD *)v2 + 21);
    goto LABEL_60;
  }
LABEL_65:
  if (*((int *)v3 + 13) >= 1)
  {
    uint64_t v48 = 0;
    unsigned int v124 = (google::protobuf::FileDescriptorProto *)((char *)v2 + 96);
    unsigned int v125 = (int *)v3;
    while (1)
    {
      uint64_t v49 = *((void *)v3 + 15);
      unint64_t v50 = (int *)*((void *)v2 + 14);
      if (!v50) {
        break;
      }
      int v51 = *((_DWORD *)v2 + 26);
      int v52 = *v50;
      if (v51 < *v50)
      {
        *((_DWORD *)v2 + 26) = v51 + 1;
        uint64_t v53 = *(char **)&v50[2 * v51 + 2];
        goto LABEL_76;
      }
      if (v52 == *((_DWORD *)v2 + 27)) {
        goto LABEL_72;
      }
LABEL_75:
      int *v50 = v52 + 1;
      uint64_t v54 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(*((google::protobuf::internal::ArenaImpl **)v2
                                                                                                  + 12));
      int v55 = v2;
      uint64_t v53 = v54;
      uint64_t v56 = *((void *)v55 + 14);
      uint64_t v57 = *((int *)v55 + 26);
      *((_DWORD *)v55 + 26) = v57 + 1;
      *(void *)(v56 + 8 * v57 + 8) = v54;
LABEL_76:
      unint64_t v58 = *(long long **)(v49 + 48 * v48);
      *((_DWORD *)v53 + 4) |= 1u;
      uint64_t v59 = *((void *)v53 + 1);
      unint64_t v60 = (google::protobuf::internal::ArenaImpl *)(v59 & 0xFFFFFFFFFFFFFFFELL);
      if (v59) {
        unint64_t v60 = *(google::protobuf::internal::ArenaImpl **)v60;
      }
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)v53 + 6, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v58, v60);
      uint64_t v127 = v49;
      uint64_t v128 = v48;
      uint64_t v61 = v49 + 48 * v48;
      int v63 = *(_DWORD *)(v61 + 40);
      int v62 = (int *)(v61 + 40);
      if (v63 >= 1)
      {
        uint64_t v64 = 0;
        uint64_t v65 = 0;
        while (1)
        {
          uint64_t v66 = *(void *)(v127 + 48 * v128 + 32);
          uint64_t v67 = (int *)*((void *)v53 + 5);
          if (!v67) {
            break;
          }
          int v68 = *((_DWORD *)v53 + 8);
          int v69 = *v67;
          if (v68 >= *v67)
          {
            if (v69 == *((_DWORD *)v53 + 9))
            {
LABEL_85:
              BOOL v19 = __OFSUB__(v69, v68);
              int v71 = v69 - v68;
              if (v71 < 0 == v19)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v53 + 24), v71 + 1);
                uint64_t v67 = (int *)*((void *)v53 + 5);
              }
              int v69 = *v67;
            }
            *uint64_t v67 = v69 + 1;
            int v70 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>(*((google::protobuf::internal::ArenaImpl **)v53 + 3));
            uint64_t v72 = *((void *)v53 + 5);
            uint64_t v73 = *((int *)v53 + 8);
            *((_DWORD *)v53 + 8) = v73 + 1;
            *(void *)(v72 + 8 * v73 + 8) = v70;
            goto LABEL_89;
          }
          *((_DWORD *)v53 + 8) = v68 + 1;
          int v70 = *(char **)&v67[2 * v68 + 2];
LABEL_89:
          unint64_t v74 = *(long long **)(v66 + v64);
          *((_DWORD *)v70 + 4) |= 1u;
          uint64_t v75 = *((void *)v70 + 1);
          uint64_t v76 = (google::protobuf::internal::ArenaImpl *)(v75 & 0xFFFFFFFFFFFFFFFELL);
          if (v75) {
            uint64_t v76 = *(google::protobuf::internal::ArenaImpl **)v76;
          }
          google::protobuf::internal::ArenaStringPtr::Set((std::string **)v70 + 3, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v74, v76);
          long long v77 = (google::protobuf::internal::LazyDescriptor *)(v66 + v64 + 24);
          google::protobuf::internal::LazyDescriptor::Once(v77);
          if (!*(unsigned char *)(*(void *)v77 + 141))
          {
            *((_DWORD *)v70 + 4) |= 2u;
            std::string::basic_string[abi:ne180100]<0>(__p, ".");
            uint64_t v78 = *((void *)v70 + 1);
            unint64_t v79 = (google::protobuf::internal::ArenaImpl *)(v78 & 0xFFFFFFFFFFFFFFFELL);
            if (v78) {
              unint64_t v79 = *(google::protobuf::internal::ArenaImpl **)v79;
            }
            google::protobuf::internal::ArenaStringPtr::Set((char **)v70 + 4, (char *)&google::protobuf::internal::fixed_address_empty_string, (long long *)__p, v79);
            if (v130 < 0) {
              operator delete(__p[0]);
            }
          }
          *((_DWORD *)v70 + 4) |= 2u;
          uint64_t v80 = *((void *)v70 + 1);
          uint64_t v81 = (google::protobuf::internal::ArenaImpl *)(v80 & 0xFFFFFFFFFFFFFFFELL);
          if (v80) {
            uint64_t v81 = *(google::protobuf::internal::ArenaImpl **)v81;
          }
          unint64_t v82 = (std::string *)*((void *)v70 + 4);
          if (v82 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            unint64_t v82 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>((char **)v70 + 4, v81);
          }
          google::protobuf::internal::LazyDescriptor::Once((google::protobuf::internal::LazyDescriptor *)(v66 + v64 + 24));
          uint64_t v83 = *(void *)(*(void *)v77 + 8);
          int v84 = *(char *)(v83 + 23);
          if (v84 >= 0) {
            int v85 = *(const std::string::value_type **)(*(void *)v77 + 8);
          }
          else {
            int v85 = *(const std::string::value_type **)v83;
          }
          if (v84 >= 0) {
            std::string::size_type v86 = *(unsigned __int8 *)(v83 + 23);
          }
          else {
            std::string::size_type v86 = *(void *)(v83 + 8);
          }
          std::string::append(v82, v85, v86);
          uint64_t v87 = (google::protobuf::internal::LazyDescriptor *)(v66 + v64 + 56);
          google::protobuf::internal::LazyDescriptor::Once(v87);
          if (!*(unsigned char *)(*(void *)v87 + 141))
          {
            *((_DWORD *)v70 + 4) |= 4u;
            std::string::basic_string[abi:ne180100]<0>(__p, ".");
            uint64_t v88 = *((void *)v70 + 1);
            uint64_t v89 = (google::protobuf::internal::ArenaImpl *)(v88 & 0xFFFFFFFFFFFFFFFELL);
            if (v88) {
              uint64_t v89 = *(google::protobuf::internal::ArenaImpl **)v89;
            }
            google::protobuf::internal::ArenaStringPtr::Set((char **)v70 + 5, (char *)&google::protobuf::internal::fixed_address_empty_string, (long long *)__p, v89);
            if (v130 < 0) {
              operator delete(__p[0]);
            }
          }
          *((_DWORD *)v70 + 4) |= 4u;
          uint64_t v90 = *((void *)v70 + 1);
          std::string v91 = (google::protobuf::internal::ArenaImpl *)(v90 & 0xFFFFFFFFFFFFFFFELL);
          if (v90) {
            std::string v91 = *(google::protobuf::internal::ArenaImpl **)v91;
          }
          uint64_t v92 = (std::string *)*((void *)v70 + 5);
          if (v92 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            uint64_t v92 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>((char **)v70 + 5, v91);
          }
          google::protobuf::internal::LazyDescriptor::Once((google::protobuf::internal::LazyDescriptor *)(v66 + v64 + 56));
          uint64_t v93 = *(void *)(*(void *)v87 + 8);
          int v94 = *(char *)(v93 + 23);
          if (v94 >= 0) {
            long long v95 = *(const std::string::value_type **)(*(void *)v87 + 8);
          }
          else {
            long long v95 = *(const std::string::value_type **)v93;
          }
          if (v94 >= 0) {
            std::string::size_type v96 = *(unsigned __int8 *)(v93 + 23);
          }
          else {
            std::string::size_type v96 = *(void *)(v93 + 8);
          }
          std::string::append(v92, v95, v96);
          unsigned __int8 v97 = *(void **)(v66 + v64 + 88);
          if (atomic_load_explicit(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
            google::protobuf::internal::InitSCCImpl(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto);
          }
          if (v97 != &google::protobuf::_MethodOptions_default_instance_)
          {
            *((_DWORD *)v70 + 4) |= 8u;
            int v98 = (char *)*((void *)v70 + 6);
            if (!v98)
            {
              uint64_t v99 = *((void *)v70 + 1);
              long long v100 = (google::protobuf::internal::ArenaImpl *)(v99 & 0xFFFFFFFFFFFFFFFELL);
              if (v99) {
                long long v100 = *(google::protobuf::internal::ArenaImpl **)v100;
              }
              int v98 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(v100);
              *((void *)v70 + 6) = v98;
            }
            unsigned int v101 = *(const google::protobuf::MethodOptions **)(v66 + v64 + 88);
            if (v101 != (const google::protobuf::MethodOptions *)v98)
            {
              google::protobuf::MethodOptions::Clear((google::protobuf::MethodOptions *)v98);
              google::protobuf::MethodOptions::MergeFrom((google::protobuf::MethodOptions *)v98, v101);
            }
          }
          if (*(unsigned char *)(v66 + v64 + 96))
          {
            *((_DWORD *)v70 + 4) |= 0x10u;
            v70[56] = 1;
          }
          if (*(unsigned char *)(v66 + v64 + 97))
          {
            *((_DWORD *)v70 + 4) |= 0x20u;
            v70[57] = 1;
          }
          ++v65;
          v64 += 104;
          if (v65 >= *v62) {
            goto LABEL_135;
          }
        }
        int v68 = *((_DWORD *)v53 + 8);
        int v69 = *((_DWORD *)v53 + 9);
        goto LABEL_85;
      }
LABEL_135:
      uint64_t v102 = v127 + 48 * v128;
      long long v105 = *(void **)(v102 + 24);
      std::string v103 = (const google::protobuf::EnumValueOptions **)(v102 + 24);
      uint64_t v104 = v105;
      if (atomic_load_explicit(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
        google::protobuf::internal::InitSCCImpl(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto);
      }
      int v3 = (google::protobuf::FileDescriptor *)v125;
      if (v104 != &google::protobuf::_ServiceOptions_default_instance_)
      {
        *((_DWORD *)v53 + 4) |= 2u;
        unsigned __int8 v106 = (char *)*((void *)v53 + 7);
        if (!v106)
        {
          uint64_t v107 = *((void *)v53 + 1);
          unint64_t v108 = (google::protobuf::internal::ArenaImpl *)(v107 & 0xFFFFFFFFFFFFFFFELL);
          if (v107) {
            unint64_t v108 = *(google::protobuf::internal::ArenaImpl **)v108;
          }
          unsigned __int8 v106 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>(v108);
          *((void *)v53 + 7) = v106;
        }
        long long v109 = *v103;
        if (*v103 != (const google::protobuf::EnumValueOptions *)v106)
        {
          google::protobuf::ServiceOptions::Clear((google::protobuf::ServiceOptions *)v106);
          google::protobuf::EnumValueOptions::MergeFrom((google::protobuf::EnumValueOptions *)v106, v109);
        }
      }
      uint64_t v48 = v128 + 1;
      char v2 = v126;
      if (v128 + 1 >= v125[13]) {
        goto LABEL_145;
      }
    }
    int v51 = *((_DWORD *)v2 + 26);
    int v52 = *((_DWORD *)v2 + 27);
LABEL_72:
    if (v51 <= v52)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v124, v52 - v51 + 1);
      unint64_t v50 = (int *)*((void *)v2 + 14);
    }
    int v52 = *v50;
    goto LABEL_75;
  }
LABEL_145:
  if (*((int *)v3 + 14) >= 1)
  {
    uint64_t v110 = 0;
    uint64_t v111 = 0;
    while (1)
    {
      uint64_t v112 = *((void *)v3 + 16);
      unint64_t v113 = (int *)*((void *)v2 + 17);
      if (!v113) {
        break;
      }
      int v114 = *((_DWORD *)v2 + 32);
      int v115 = *v113;
      if (v114 >= *v113)
      {
        if (v115 == *((_DWORD *)v2 + 33))
        {
LABEL_152:
          if (v114 <= v115)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)v2 + 120), v115 - v114 + 1);
            unint64_t v113 = (int *)*((void *)v2 + 17);
          }
          int v115 = *v113;
        }
        *unint64_t v113 = v115 + 1;
        unsigned int v116 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*((google::protobuf::internal::ArenaImpl **)v2 + 15));
        uint64_t v117 = *((void *)v2 + 17);
        uint64_t v118 = *((int *)v2 + 32);
        *((_DWORD *)v2 + 32) = v118 + 1;
        *(void *)(v117 + 8 * v118 + 8) = v116;
        goto LABEL_156;
      }
      *((_DWORD *)v2 + 32) = v114 + 1;
      unsigned int v116 = *(char **)&v113[2 * v114 + 2];
LABEL_156:
      google::protobuf::FieldDescriptor::CopyTo((google::protobuf::FieldDescriptor *)(v112 + v110), (google::protobuf::FieldDescriptorProto *)v116);
      ++v111;
      v110 += 152;
      if (v111 >= *((int *)v3 + 14)) {
        goto LABEL_157;
      }
    }
    int v114 = *((_DWORD *)v2 + 32);
    int v115 = *((_DWORD *)v2 + 33);
    goto LABEL_152;
  }
LABEL_157:
  unsigned __int8 v119 = (void *)*((void *)v3 + 17);
  if (atomic_load_explicit(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  if (v119 != &google::protobuf::_FileOptions_default_instance_)
  {
    *((_DWORD *)v2 + 4) |= 8u;
    int v120 = (char *)*((void *)v2 + 25);
    if (!v120)
    {
      uint64_t v121 = *((void *)v2 + 1);
      uint64_t v122 = (google::protobuf::internal::ArenaImpl *)(v121 & 0xFFFFFFFFFFFFFFFELL);
      if (v121) {
        uint64_t v122 = *(google::protobuf::internal::ArenaImpl **)v122;
      }
      int v120 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>(v122);
      *((void *)v2 + 25) = v120;
    }
    unsigned int v123 = (const google::protobuf::FileOptions *)*((void *)v3 + 17);
    if (v123 != (const google::protobuf::FileOptions *)v120)
    {
      google::protobuf::FileOptions::Clear((google::protobuf::FileOptions *)v120);
      google::protobuf::FileOptions::MergeFrom((google::protobuf::FileOptions *)v120, v123);
    }
  }
}

void sub_1891E1280(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FileDescriptor::dependency(google::protobuf::FileDescriptor *this, int a2)
{
  std::string::size_type v4 = (std::once_flag::_State_type *)*((void *)this + 3);
  if (v4)
  {
    uint64_t v6 = this;
    if (atomic_load_explicit((atomic_ullong *volatile)v4, memory_order_acquire) != -1)
    {
      v8[0] = google::protobuf::FileDescriptor::DependenciesOnceInit;
      v8[1] = &v6;
      uint64_t v7 = v8;
      std::__call_once(v4, &v7, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FileDescriptor const*),google::protobuf::FileDescriptor const*&&>>);
    }
  }
  return *(void *)(*((void *)this + 9) + 8 * a2);
}

void google::protobuf::Descriptor::CopyTo(google::protobuf::Descriptor *this, google::protobuf::DescriptorProto *a2)
{
  std::string::size_type v4 = *(long long **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  uint64_t v5 = *((void *)a2 + 1);
  uint64_t v6 = (google::protobuf::internal::ArenaImpl *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  if (v5) {
    uint64_t v6 = *(google::protobuf::internal::ArenaImpl **)v6;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 27, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v4, v6);
  if (*((int *)this + 26) >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *((void *)this + 5);
      uint64_t v10 = (int *)*((void *)a2 + 5);
      if (!v10) {
        break;
      }
      int v11 = *((_DWORD *)a2 + 8);
      int v12 = *v10;
      if (v11 >= *v10)
      {
        if (v12 == *((_DWORD *)a2 + 9))
        {
LABEL_10:
          if (v11 <= v12)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)a2 + 24), v12 - v11 + 1);
            uint64_t v10 = (int *)*((void *)a2 + 5);
          }
          int v12 = *v10;
        }
        int *v10 = v12 + 1;
        long long v13 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*((google::protobuf::internal::ArenaImpl **)a2
                                                                                                  + 3));
        uint64_t v14 = *((void *)a2 + 5);
        uint64_t v15 = *((int *)a2 + 8);
        *((_DWORD *)a2 + 8) = v15 + 1;
        *(void *)(v14 + 8 * v15 + 8) = v13;
        goto LABEL_14;
      }
      *((_DWORD *)a2 + 8) = v11 + 1;
      long long v13 = *(char **)&v10[2 * v11 + 2];
LABEL_14:
      google::protobuf::FieldDescriptor::CopyTo((google::protobuf::FieldDescriptor *)(v9 + v7), (google::protobuf::FieldDescriptorProto *)v13);
      ++v8;
      v7 += 152;
      if (v8 >= *((int *)this + 26)) {
        goto LABEL_15;
      }
    }
    int v11 = *((_DWORD *)a2 + 8);
    int v12 = *((_DWORD *)a2 + 9);
    goto LABEL_10;
  }
LABEL_15:
  if (*((int *)this + 27) >= 1)
  {
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    while (1)
    {
      uint64_t v18 = *((void *)this + 6);
      BOOL v19 = (int *)*((void *)a2 + 20);
      if (!v19) {
        break;
      }
      int v20 = *((_DWORD *)a2 + 38);
      int v21 = *v19;
      if (v20 >= *v19)
      {
        if (v21 == *((_DWORD *)a2 + 39))
        {
LABEL_22:
          if (v20 <= v21)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)a2 + 144), v21 - v20 + 1);
            BOOL v19 = (int *)*((void *)a2 + 20);
          }
          int v21 = *v19;
        }
        int *v19 = v21 + 1;
        uint64_t v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(*((google::protobuf::internal::ArenaImpl **)a2
                                                                                                  + 18));
        uint64_t v23 = *((void *)a2 + 20);
        uint64_t v24 = *((int *)a2 + 38);
        *((_DWORD *)a2 + 38) = v24 + 1;
        *(void *)(v23 + 8 * v24 + 8) = v22;
        goto LABEL_26;
      }
      *((_DWORD *)a2 + 38) = v20 + 1;
      uint64_t v22 = *(char **)&v19[2 * v20 + 2];
LABEL_26:
      unsigned int v25 = *(long long **)(v18 + v16);
      *((_DWORD *)v22 + 4) |= 1u;
      uint64_t v26 = *((void *)v22 + 1);
      uint64_t v27 = (google::protobuf::internal::ArenaImpl *)(v26 & 0xFFFFFFFFFFFFFFFELL);
      if (v26) {
        uint64_t v27 = *(google::protobuf::internal::ArenaImpl **)v27;
      }
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)v22 + 3, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v25, v27);
      uint64_t v28 = v18 + v16;
      int v29 = *(void **)(v18 + v16 + 40);
      if (atomic_load_explicit(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
        google::protobuf::internal::InitSCCImpl(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto);
      }
      if (v29 != &google::protobuf::_OneofOptions_default_instance_)
      {
        *((_DWORD *)v22 + 4) |= 2u;
        uint64_t v30 = (char *)*((void *)v22 + 4);
        if (!v30)
        {
          uint64_t v31 = *((void *)v22 + 1);
          uint64_t v32 = (google::protobuf::internal::ArenaImpl *)(v31 & 0xFFFFFFFFFFFFFFFELL);
          if (v31) {
            uint64_t v32 = *(google::protobuf::internal::ArenaImpl **)v32;
          }
          uint64_t v30 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>(v32);
          *((void *)v22 + 4) = v30;
        }
        uint64_t v33 = *(const google::protobuf::ExtensionRangeOptions **)(v28 + 40);
        if (v33 != (const google::protobuf::ExtensionRangeOptions *)v30)
        {
          google::protobuf::OneofOptions::Clear((google::protobuf::OneofOptions *)v30);
          google::protobuf::ExtensionRangeOptions::MergeFrom((google::protobuf::ExtensionRangeOptions *)v30, v33);
        }
      }
      ++v17;
      v16 += 48;
      if (v17 >= *((int *)this + 27)) {
        goto LABEL_38;
      }
    }
    int v20 = *((_DWORD *)a2 + 38);
    int v21 = *((_DWORD *)a2 + 39);
    goto LABEL_22;
  }
LABEL_38:
  if (*((int *)this + 29) >= 1)
  {
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    while (1)
    {
      uint64_t v36 = *((void *)this + 7);
      uint64_t v37 = (int *)*((void *)a2 + 8);
      if (!v37) {
        break;
      }
      int v38 = *((_DWORD *)a2 + 14);
      int v39 = *v37;
      if (v38 >= *v37)
      {
        if (v39 == *((_DWORD *)a2 + 15))
        {
LABEL_45:
          if (v38 <= v39)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)a2 + 48), v39 - v38 + 1);
            uint64_t v37 = (int *)*((void *)a2 + 8);
          }
          int v39 = *v37;
        }
        *uint64_t v37 = v39 + 1;
        uint64_t v40 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(*((google::protobuf::internal::ArenaImpl **)a2
                                                                                             + 6));
        uint64_t v41 = *((void *)a2 + 8);
        uint64_t v42 = *((int *)a2 + 14);
        *((_DWORD *)a2 + 14) = v42 + 1;
        *(void *)(v41 + 8 * v42 + 8) = v40;
        goto LABEL_49;
      }
      *((_DWORD *)a2 + 14) = v38 + 1;
      uint64_t v40 = *(char **)&v37[2 * v38 + 2];
LABEL_49:
      google::protobuf::Descriptor::CopyTo((google::protobuf::Descriptor *)(v36 + v34), (google::protobuf::DescriptorProto *)v40);
      ++v35;
      v34 += 144;
      if (v35 >= *((int *)this + 29)) {
        goto LABEL_50;
      }
    }
    int v38 = *((_DWORD *)a2 + 14);
    int v39 = *((_DWORD *)a2 + 15);
    goto LABEL_45;
  }
LABEL_50:
  if (*((int *)this + 30) >= 1)
  {
    uint64_t v43 = 0;
    uint64_t v44 = 0;
    while (1)
    {
      uint64_t v45 = *((void *)this + 8);
      uint64_t v46 = (int *)*((void *)a2 + 11);
      if (!v46) {
        break;
      }
      int v47 = *((_DWORD *)a2 + 20);
      int v48 = *v46;
      if (v47 >= *v46)
      {
        if (v48 == *((_DWORD *)a2 + 21))
        {
LABEL_57:
          if (v47 <= v48)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)a2 + 72), v48 - v47 + 1);
            uint64_t v46 = (int *)*((void *)a2 + 11);
          }
          int v48 = *v46;
        }
        *uint64_t v46 = v48 + 1;
        uint64_t v49 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(*((google::protobuf::internal::ArenaImpl **)a2
                                                                                                 + 9));
        uint64_t v50 = *((void *)a2 + 11);
        uint64_t v51 = *((int *)a2 + 20);
        *((_DWORD *)a2 + 20) = v51 + 1;
        *(void *)(v50 + 8 * v51 + 8) = v49;
        goto LABEL_61;
      }
      *((_DWORD *)a2 + 20) = v47 + 1;
      uint64_t v49 = *(char **)&v46[2 * v47 + 2];
LABEL_61:
      google::protobuf::EnumDescriptor::CopyTo((google::protobuf::EnumDescriptor *)(v45 + v43), (google::protobuf::EnumDescriptorProto *)v49);
      ++v44;
      v43 += 80;
      if (v44 >= *((int *)this + 30)) {
        goto LABEL_62;
      }
    }
    int v47 = *((_DWORD *)a2 + 20);
    int v48 = *((_DWORD *)a2 + 21);
    goto LABEL_57;
  }
LABEL_62:
  if (*((int *)this + 31) >= 1)
  {
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    while (1)
    {
      uint64_t v54 = *((void *)this + 9);
      int v55 = (int *)*((void *)a2 + 14);
      if (!v55) {
        break;
      }
      int v56 = *((_DWORD *)a2 + 26);
      int v57 = *v55;
      if (v56 >= *v55)
      {
        if (v57 == *((_DWORD *)a2 + 27))
        {
LABEL_69:
          if (v56 <= v57)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)a2 + 96), v57 - v56 + 1);
            int v55 = (int *)*((void *)a2 + 14);
          }
          int v57 = *v55;
        }
        *int v55 = v57 + 1;
        unint64_t v58 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>(*((google::protobuf::internal::ArenaImpl **)a2 + 12));
        uint64_t v59 = *((void *)a2 + 14);
        uint64_t v60 = *((int *)a2 + 26);
        *((_DWORD *)a2 + 26) = v60 + 1;
        *(void *)(v59 + 8 * v60 + 8) = v58;
        goto LABEL_73;
      }
      *((_DWORD *)a2 + 26) = v56 + 1;
      unint64_t v58 = *(char **)&v55[2 * v56 + 2];
LABEL_73:
      uint64_t v61 = (int *)(v54 + v52);
      int v62 = *v61;
      int v63 = *((_DWORD *)v58 + 4);
      *((_DWORD *)v58 + 4) = v63 | 2;
      int v64 = v61[1];
      *((_DWORD *)v58 + 4) = v63 | 6;
      *((_DWORD *)v58 + 8) = v62;
      *((_DWORD *)v58 + 9) = v64;
      uint64_t v65 = (void *)*((void *)v61 + 1);
      if (atomic_load_explicit(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire))
      {
        google::protobuf::internal::InitSCCImpl(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto);
      }
      if (v65 != &google::protobuf::_ExtensionRangeOptions_default_instance_)
      {
        uint64_t v66 = (const google::protobuf::ExtensionRangeOptions *)*((void *)v61 + 1);
        *((_DWORD *)v58 + 4) |= 1u;
        uint64_t v67 = (char *)*((void *)v58 + 3);
        if (!v67)
        {
          uint64_t v68 = *((void *)v58 + 1);
          int v69 = (google::protobuf::internal::ArenaImpl *)(v68 & 0xFFFFFFFFFFFFFFFELL);
          if (v68) {
            int v69 = *(google::protobuf::internal::ArenaImpl **)v69;
          }
          uint64_t v67 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(v69);
          *((void *)v58 + 3) = v67;
        }
        if (v66 != (const google::protobuf::ExtensionRangeOptions *)v67)
        {
          google::protobuf::ExtensionRangeOptions::Clear((google::protobuf::ExtensionRangeOptions *)v67);
          google::protobuf::ExtensionRangeOptions::MergeFrom((google::protobuf::ExtensionRangeOptions *)v67, v66);
        }
      }
      ++v53;
      v52 += 16;
      if (v53 >= *((int *)this + 31)) {
        goto LABEL_83;
      }
    }
    int v56 = *((_DWORD *)a2 + 26);
    int v57 = *((_DWORD *)a2 + 27);
    goto LABEL_69;
  }
LABEL_83:
  if (*((int *)this + 32) >= 1)
  {
    uint64_t v70 = 0;
    uint64_t v71 = 0;
    while (1)
    {
      uint64_t v72 = *((void *)this + 10);
      uint64_t v73 = (int *)*((void *)a2 + 17);
      if (!v73) {
        break;
      }
      int v74 = *((_DWORD *)a2 + 32);
      int v75 = *v73;
      if (v74 >= *v73)
      {
        if (v75 == *((_DWORD *)a2 + 33))
        {
LABEL_90:
          if (v74 <= v75)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)a2 + 120), v75 - v74 + 1);
            uint64_t v73 = (int *)*((void *)a2 + 17);
          }
          int v75 = *v73;
        }
        int *v73 = v75 + 1;
        uint64_t v76 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*((google::protobuf::internal::ArenaImpl **)a2
                                                                                                  + 15));
        uint64_t v77 = *((void *)a2 + 17);
        uint64_t v78 = *((int *)a2 + 32);
        *((_DWORD *)a2 + 32) = v78 + 1;
        *(void *)(v77 + 8 * v78 + 8) = v76;
        goto LABEL_94;
      }
      *((_DWORD *)a2 + 32) = v74 + 1;
      uint64_t v76 = *(char **)&v73[2 * v74 + 2];
LABEL_94:
      google::protobuf::FieldDescriptor::CopyTo((google::protobuf::FieldDescriptor *)(v72 + v70), (google::protobuf::FieldDescriptorProto *)v76);
      ++v71;
      v70 += 152;
      if (v71 >= *((int *)this + 32)) {
        goto LABEL_95;
      }
    }
    int v74 = *((_DWORD *)a2 + 32);
    int v75 = *((_DWORD *)a2 + 33);
    goto LABEL_90;
  }
LABEL_95:
  if (*((int *)this + 33) >= 1)
  {
    uint64_t v79 = 0;
    uint64_t v80 = 0;
    while (1)
    {
      uint64_t v81 = (int *)*((void *)a2 + 23);
      if (!v81) {
        break;
      }
      int v82 = *((_DWORD *)a2 + 44);
      int v83 = *v81;
      if (v82 >= *v81)
      {
        if (v83 == *((_DWORD *)a2 + 45))
        {
LABEL_102:
          if (v82 <= v83)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)a2 + 168), v83 - v82 + 1);
            uint64_t v81 = (int *)*((void *)a2 + 23);
          }
          int v83 = *v81;
        }
        *uint64_t v81 = v83 + 1;
        int v84 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>(*((google::protobuf::internal::ArenaImpl **)a2 + 21));
        uint64_t v85 = *((void *)a2 + 23);
        uint64_t v86 = *((int *)a2 + 44);
        *((_DWORD *)a2 + 44) = v86 + 1;
        *(void *)(v85 + 8 * v86 + 8) = v84;
        goto LABEL_106;
      }
      *((_DWORD *)a2 + 44) = v82 + 1;
      int v84 = *(char **)&v81[2 * v82 + 2];
LABEL_106:
      uint64_t v87 = (int *)(*((void *)this + 11) + v79);
      int v88 = *v87;
      int v89 = *((_DWORD *)v84 + 4);
      *((_DWORD *)v84 + 4) = v89 | 1;
      LODWORD(v87) = v87[1];
      *((_DWORD *)v84 + 4) = v89 | 3;
      *((_DWORD *)v84 + 6) = v88;
      *((_DWORD *)v84 + 7) = v87;
      ++v80;
      v79 += 8;
      if (v80 >= *((int *)this + 33)) {
        goto LABEL_107;
      }
    }
    int v82 = *((_DWORD *)a2 + 44);
    int v83 = *((_DWORD *)a2 + 45);
    goto LABEL_102;
  }
LABEL_107:
  if (*((int *)this + 34) >= 1)
  {
    uint64_t v90 = 0;
    std::string v91 = (uint64_t *)((char *)a2 + 192);
    while (1)
    {
      uint64_t v92 = *(const std::string **)(*((void *)this + 12) + 8 * v90);
      uint64_t v93 = (int *)*((void *)a2 + 26);
      if (!v93) {
        break;
      }
      int v94 = *((_DWORD *)a2 + 50);
      int v95 = *v93;
      if (v94 >= *v93)
      {
        if (v95 == *((_DWORD *)a2 + 51))
        {
LABEL_114:
          BOOL v97 = __OFSUB__(v95, v94);
          int v98 = v95 - v94;
          if (v98 < 0 == v97)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)a2 + 192), v98 + 1);
            uint64_t v93 = (int *)*((void *)a2 + 26);
          }
          int v95 = *v93;
        }
        int *v93 = v95 + 1;
        uint64_t v99 = *v91;
        if (!*v91) {
          operator new();
        }
        if (*(unsigned char *)(v99 + 24)) {
        AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v99, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
        }
        AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
        AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
        AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
        uint64_t v100 = *((void *)a2 + 26);
        uint64_t v101 = *((int *)a2 + 50);
        *((_DWORD *)a2 + 50) = v101 + 1;
        *(void *)(v100 + 8 * v101 + 8) = AlignedAndAddCleanup;
        goto LABEL_122;
      }
      *((_DWORD *)a2 + 50) = v94 + 1;
      AlignedAndAddCleanup = *(std::string **)&v93[2 * v94 + 2];
LABEL_122:
      std::string::operator=(AlignedAndAddCleanup, v92);
      if (++v90 >= *((int *)this + 34)) {
        goto LABEL_123;
      }
    }
    int v94 = *((_DWORD *)a2 + 50);
    int v95 = *((_DWORD *)a2 + 51);
    goto LABEL_114;
  }
LABEL_123:
  uint64_t v102 = (void *)*((void *)this + 4);
  if (atomic_load_explicit(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  if (v102 != &google::protobuf::_MessageOptions_default_instance_)
  {
    *((_DWORD *)a2 + 4) |= 2u;
    std::string v103 = (char *)*((void *)a2 + 28);
    if (!v103)
    {
      uint64_t v104 = *((void *)a2 + 1);
      long long v105 = (google::protobuf::internal::ArenaImpl *)(v104 & 0xFFFFFFFFFFFFFFFELL);
      if (v104) {
        long long v105 = *(google::protobuf::internal::ArenaImpl **)v105;
      }
      std::string v103 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>(v105);
      *((void *)a2 + 28) = v103;
    }
    unsigned __int8 v106 = (const google::protobuf::MessageOptions *)*((void *)this + 4);
    if (v106 != (const google::protobuf::MessageOptions *)v103)
    {
      google::protobuf::MessageOptions::Clear((google::protobuf::MessageOptions *)v103);
      google::protobuf::MessageOptions::MergeFrom((google::protobuf::MessageOptions *)v103, v106);
    }
  }
}

void google::protobuf::EnumDescriptor::CopyTo(google::protobuf::EnumDescriptor *this, google::protobuf::EnumDescriptorProto *a2)
{
  std::string::size_type v4 = *(long long **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  uint64_t v5 = *((void *)a2 + 1);
  uint64_t v6 = (google::protobuf::internal::ArenaImpl *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  if (v5) {
    uint64_t v6 = *(google::protobuf::internal::ArenaImpl **)v6;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 12, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v4, v6);
  if (*((int *)this + 11) >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *((void *)this + 6);
      uint64_t v10 = (int *)*((void *)a2 + 5);
      if (!v10) {
        break;
      }
      int v11 = *((_DWORD *)a2 + 8);
      int v12 = *v10;
      if (v11 >= *v10)
      {
        if (v12 == *((_DWORD *)a2 + 9))
        {
LABEL_10:
          if (v11 <= v12)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::EnumDescriptorProto *)((char *)a2 + 24), v12 - v11 + 1);
            uint64_t v10 = (int *)*((void *)a2 + 5);
          }
          int v12 = *v10;
        }
        int *v10 = v12 + 1;
        long long v13 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueDescriptorProto>(*((google::protobuf::internal::ArenaImpl **)a2 + 3));
        uint64_t v14 = *((void *)a2 + 5);
        uint64_t v15 = *((int *)a2 + 8);
        *((_DWORD *)a2 + 8) = v15 + 1;
        *(void *)(v14 + 8 * v15 + 8) = v13;
        goto LABEL_14;
      }
      *((_DWORD *)a2 + 8) = v11 + 1;
      long long v13 = *(char **)&v10[2 * v11 + 2];
LABEL_14:
      uint64_t v16 = *(long long **)(v9 + v7);
      *((_DWORD *)v13 + 4) |= 1u;
      uint64_t v17 = *((void *)v13 + 1);
      uint64_t v18 = (google::protobuf::internal::ArenaImpl *)(v17 & 0xFFFFFFFFFFFFFFFELL);
      if (v17) {
        uint64_t v18 = *(google::protobuf::internal::ArenaImpl **)v18;
      }
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)v13 + 3, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v16, v18);
      uint64_t v19 = v9 + v7;
      int v20 = *(_DWORD *)(v9 + v7 + 16);
      *((_DWORD *)v13 + 4) |= 4u;
      *((_DWORD *)v13 + 10) = v20;
      int v21 = *(void **)(v9 + v7 + 32);
      if (atomic_load_explicit(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
        google::protobuf::internal::InitSCCImpl(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto);
      }
      if (v21 != &google::protobuf::_EnumValueOptions_default_instance_)
      {
        *((_DWORD *)v13 + 4) |= 2u;
        uint64_t v22 = (char *)*((void *)v13 + 4);
        if (!v22)
        {
          uint64_t v23 = *((void *)v13 + 1);
          uint64_t v24 = (google::protobuf::internal::ArenaImpl *)(v23 & 0xFFFFFFFFFFFFFFFELL);
          if (v23) {
            uint64_t v24 = *(google::protobuf::internal::ArenaImpl **)v24;
          }
          uint64_t v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>(v24);
          *((void *)v13 + 4) = v22;
        }
        unsigned int v25 = *(const google::protobuf::EnumValueOptions **)(v19 + 32);
        if (v25 != (const google::protobuf::EnumValueOptions *)v22)
        {
          google::protobuf::EnumValueOptions::Clear((google::protobuf::EnumValueOptions *)v22);
          google::protobuf::EnumValueOptions::MergeFrom((google::protobuf::EnumValueOptions *)v22, v25);
        }
      }
      ++v8;
      v7 += 40;
      if (v8 >= *((int *)this + 11)) {
        goto LABEL_26;
      }
    }
    int v11 = *((_DWORD *)a2 + 8);
    int v12 = *((_DWORD *)a2 + 9);
    goto LABEL_10;
  }
LABEL_26:
  if (*((int *)this + 14) >= 1)
  {
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = (int *)*((void *)a2 + 8);
      if (!v28) {
        break;
      }
      int v29 = *((_DWORD *)a2 + 14);
      int v30 = *v28;
      if (v29 >= *v28)
      {
        if (v30 == *((_DWORD *)a2 + 15))
        {
LABEL_33:
          if (v29 <= v30)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::EnumDescriptorProto *)((char *)a2 + 48), v30 - v29 + 1);
            uint64_t v28 = (int *)*((void *)a2 + 8);
          }
          int v30 = *v28;
        }
        int *v28 = v30 + 1;
        uint64_t v31 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>(*((google::protobuf::internal::ArenaImpl **)a2 + 6));
        uint64_t v32 = *((void *)a2 + 8);
        uint64_t v33 = *((int *)a2 + 14);
        *((_DWORD *)a2 + 14) = v33 + 1;
        *(void *)(v32 + 8 * v33 + 8) = v31;
        goto LABEL_37;
      }
      *((_DWORD *)a2 + 14) = v29 + 1;
      uint64_t v31 = *(char **)&v28[2 * v29 + 2];
LABEL_37:
      uint64_t v34 = (int *)(*((void *)this + 8) + v26);
      int v35 = *v34;
      int v36 = *((_DWORD *)v31 + 4);
      *((_DWORD *)v31 + 4) = v36 | 1;
      LODWORD(v34) = v34[1];
      *((_DWORD *)v31 + 4) = v36 | 3;
      *((_DWORD *)v31 + 6) = v35;
      *((_DWORD *)v31 + 7) = v34;
      ++v27;
      v26 += 8;
      if (v27 >= *((int *)this + 14)) {
        goto LABEL_38;
      }
    }
    int v29 = *((_DWORD *)a2 + 14);
    int v30 = *((_DWORD *)a2 + 15);
    goto LABEL_33;
  }
LABEL_38:
  if (*((int *)this + 15) >= 1)
  {
    uint64_t v37 = 0;
    int v38 = (uint64_t *)((char *)a2 + 72);
    while (1)
    {
      int v39 = *(const std::string **)(*((void *)this + 9) + 8 * v37);
      uint64_t v40 = (int *)*((void *)a2 + 11);
      if (!v40) {
        break;
      }
      int v41 = *((_DWORD *)a2 + 20);
      int v42 = *v40;
      if (v41 >= *v40)
      {
        if (v42 == *((_DWORD *)a2 + 21))
        {
LABEL_45:
          BOOL v44 = __OFSUB__(v42, v41);
          int v45 = v42 - v41;
          if (v45 < 0 == v44)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::EnumDescriptorProto *)((char *)a2 + 72), v45 + 1);
            uint64_t v40 = (int *)*((void *)a2 + 11);
          }
          int v42 = *v40;
        }
        int *v40 = v42 + 1;
        uint64_t v46 = *v38;
        if (!*v38) {
          operator new();
        }
        if (*(unsigned char *)(v46 + 24)) {
        AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v46, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
        }
        AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
        AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
        AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
        uint64_t v47 = *((void *)a2 + 11);
        uint64_t v48 = *((int *)a2 + 20);
        *((_DWORD *)a2 + 20) = v48 + 1;
        *(void *)(v47 + 8 * v48 + 8) = AlignedAndAddCleanup;
        goto LABEL_53;
      }
      *((_DWORD *)a2 + 20) = v41 + 1;
      AlignedAndAddCleanup = *(std::string **)&v40[2 * v41 + 2];
LABEL_53:
      std::string::operator=(AlignedAndAddCleanup, v39);
      if (++v37 >= *((int *)this + 15)) {
        goto LABEL_54;
      }
    }
    int v41 = *((_DWORD *)a2 + 20);
    int v42 = *((_DWORD *)a2 + 21);
    goto LABEL_45;
  }
LABEL_54:
  uint64_t v49 = (void *)*((void *)this + 4);
  if (atomic_load_explicit(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  if (v49 != &google::protobuf::_EnumOptions_default_instance_)
  {
    *((_DWORD *)a2 + 4) |= 2u;
    uint64_t v50 = (char *)*((void *)a2 + 13);
    if (!v50)
    {
      uint64_t v51 = *((void *)a2 + 1);
      uint64_t v52 = (google::protobuf::internal::ArenaImpl *)(v51 & 0xFFFFFFFFFFFFFFFELL);
      if (v51) {
        uint64_t v52 = *(google::protobuf::internal::ArenaImpl **)v52;
      }
      uint64_t v50 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>(v52);
      *((void *)a2 + 13) = v50;
    }
    uint64_t v53 = (const google::protobuf::EnumOptions *)*((void *)this + 4);
    if (v53 != (const google::protobuf::EnumOptions *)v50)
    {
      google::protobuf::EnumOptions::Clear((google::protobuf::EnumOptions *)v50);
      google::protobuf::EnumOptions::MergeFrom((google::protobuf::EnumOptions *)v50, v53);
    }
  }
}

void google::protobuf::FieldDescriptor::CopyTo(google::protobuf::FieldDescriptor *this, google::protobuf::FieldDescriptorProto *a2)
{
  std::string::size_type v4 = *(long long **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  uint64_t v5 = *((void *)a2 + 1);
  uint64_t v6 = (google::protobuf::internal::ArenaImpl *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  if (v5) {
    uint64_t v6 = *(google::protobuf::internal::ArenaImpl **)v6;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 3, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v4, v6);
  int v7 = *((_DWORD *)this + 17);
  int v8 = *((_DWORD *)a2 + 4);
  int v9 = v8 | 0x40;
  *((_DWORD *)a2 + 4) = v8 | 0x40;
  *((_DWORD *)a2 + 18) = v7;
  if (*((unsigned char *)this + 66))
  {
    uint64_t v10 = (long long *)*((void *)this + 4);
    *((_DWORD *)a2 + 4) = v8 | 0x50;
    uint64_t v11 = *((void *)a2 + 1);
    int v12 = (google::protobuf::internal::ArenaImpl *)(v11 & 0xFFFFFFFFFFFFFFFELL);
    if (v11) {
      int v12 = *(google::protobuf::internal::ArenaImpl **)v12;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 7, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v10, v12);
    int v9 = *((_DWORD *)a2 + 4);
  }
  if (*((unsigned char *)this + 65))
  {
    v9 |= 0x100u;
    *((_DWORD *)a2 + 4) = v9;
    *((unsigned char *)a2 + 80) = 1;
  }
  int v13 = *((_DWORD *)this + 15);
  int v14 = v9 | 0x200;
  *((_DWORD *)a2 + 4) = v14;
  *((_DWORD *)a2 + 21) = v13;
  uint64_t v15 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v15)
  {
    uint64_t v53 = this;
    uint64_t v54 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v15, memory_order_acquire) != -1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v54;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v53;
      std::__split_buffer<std::string>::pointer p_p = &__p;
      std::__call_once(v15, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    int v14 = *((_DWORD *)a2 + 4);
  }
  int v16 = *((_DWORD *)this + 14);
  int v17 = v14 | 0x400;
  *((_DWORD *)a2 + 4) = v14 | 0x400;
  *((_DWORD *)a2 + 22) = v16;
  if (*((unsigned char *)this + 67))
  {
    if (!*(unsigned char *)(*((void *)this + 10) + 141))
    {
      *((_DWORD *)a2 + 4) = v14 | 0x402;
      std::string::basic_string[abi:ne180100]<0>(&__p, ".");
      uint64_t v18 = *((void *)a2 + 1);
      uint64_t v19 = (google::protobuf::internal::ArenaImpl *)(v18 & 0xFFFFFFFFFFFFFFFELL);
      if (v18) {
        uint64_t v19 = *(google::protobuf::internal::ArenaImpl **)v19;
      }
      google::protobuf::internal::ArenaStringPtr::Set((char **)a2 + 4, (char *)&google::protobuf::internal::fixed_address_empty_string, (long long *)&__p, v19);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      int v17 = *((_DWORD *)a2 + 4);
    }
    *((_DWORD *)a2 + 4) = v17 | 2;
    uint64_t v20 = *((void *)a2 + 1);
    int v21 = (google::protobuf::internal::ArenaImpl *)(v20 & 0xFFFFFFFFFFFFFFFELL);
    if (v20) {
      int v21 = *(google::protobuf::internal::ArenaImpl **)v21;
    }
    uint64_t v22 = (std::string *)*((void *)a2 + 4);
    if (v22 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      uint64_t v22 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>((char **)a2 + 4, v21);
    }
    uint64_t v23 = *(void *)(*((void *)this + 10) + 8);
    int v24 = *(char *)(v23 + 23);
    if (v24 >= 0) {
      unsigned int v25 = *(const std::string::value_type **)(*((void *)this + 10) + 8);
    }
    else {
      unsigned int v25 = *(const std::string::value_type **)v23;
    }
    if (v24 >= 0) {
      std::string::size_type v26 = *(unsigned __int8 *)(v23 + 23);
    }
    else {
      std::string::size_type v26 = *(void *)(v23 + 8);
    }
    std::string::append(v22, v25, v26);
  }
  uint64_t v27 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v27)
  {
    uint64_t v53 = this;
    uint64_t v54 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v27, memory_order_acquire) != -1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v54;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v53;
      std::__split_buffer<std::string>::pointer p_p = &__p;
      std::__call_once(v27, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v28 = *((_DWORD *)this + 14);
  if ((v28 & 0xFFFFFFFE) == 0xA)
  {
    if (*(unsigned char *)(google::protobuf::FieldDescriptor::message_type(this) + 140))
    {
      *((_DWORD *)a2 + 22) = 1;
      *((_DWORD *)a2 + 4) &= ~0x400u;
    }
    if (!*(unsigned char *)(google::protobuf::FieldDescriptor::message_type(this) + 141))
    {
      *((_DWORD *)a2 + 4) |= 4u;
      std::string::basic_string[abi:ne180100]<0>(&__p, ".");
      uint64_t v29 = *((void *)a2 + 1);
      int v30 = (google::protobuf::internal::ArenaImpl *)(v29 & 0xFFFFFFFFFFFFFFFELL);
      if (v29) {
        int v30 = *(google::protobuf::internal::ArenaImpl **)v30;
      }
      google::protobuf::internal::ArenaStringPtr::Set((char **)a2 + 5, (char *)&google::protobuf::internal::fixed_address_empty_string, (long long *)&__p, v30);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    *((_DWORD *)a2 + 4) |= 4u;
    uint64_t v31 = *((void *)a2 + 1);
    uint64_t v32 = (google::protobuf::internal::ArenaImpl *)(v31 & 0xFFFFFFFFFFFFFFFELL);
    if (v31) {
      uint64_t v32 = *(google::protobuf::internal::ArenaImpl **)v32;
    }
    uint64_t v33 = (std::string *)*((void *)a2 + 5);
    if (v33 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      uint64_t v33 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>((char **)a2 + 5, v32);
    }
    uint64_t v34 = google::protobuf::FieldDescriptor::message_type(this);
LABEL_62:
    uint64_t v40 = *(void *)(v34 + 8);
    int v41 = *(char *)(v40 + 23);
    if (v41 >= 0) {
      int v42 = *(const std::string::value_type **)(v34 + 8);
    }
    else {
      int v42 = *(const std::string::value_type **)v40;
    }
    if (v41 >= 0) {
      std::string::size_type v43 = *(unsigned __int8 *)(v40 + 23);
    }
    else {
      std::string::size_type v43 = *(void *)(v40 + 8);
    }
    std::string::append(v33, v42, v43);
    goto LABEL_69;
  }
  int v35 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v35)
  {
    uint64_t v53 = this;
    uint64_t v54 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v35, memory_order_acquire) != -1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v54;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v53;
      std::__split_buffer<std::string>::pointer p_p = &__p;
      std::__call_once(v35, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    int v28 = *((_DWORD *)this + 14);
  }
  if (v28 == 14)
  {
    if (!*(unsigned char *)(google::protobuf::FieldDescriptor::enum_type(this) + 41))
    {
      *((_DWORD *)a2 + 4) |= 4u;
      std::string::basic_string[abi:ne180100]<0>(&__p, ".");
      uint64_t v36 = *((void *)a2 + 1);
      uint64_t v37 = (google::protobuf::internal::ArenaImpl *)(v36 & 0xFFFFFFFFFFFFFFFELL);
      if (v36) {
        uint64_t v37 = *(google::protobuf::internal::ArenaImpl **)v37;
      }
      google::protobuf::internal::ArenaStringPtr::Set((char **)a2 + 5, (char *)&google::protobuf::internal::fixed_address_empty_string, (long long *)&__p, v37);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    *((_DWORD *)a2 + 4) |= 4u;
    uint64_t v38 = *((void *)a2 + 1);
    int v39 = (google::protobuf::internal::ArenaImpl *)(v38 & 0xFFFFFFFFFFFFFFFELL);
    if (v38) {
      int v39 = *(google::protobuf::internal::ArenaImpl **)v39;
    }
    uint64_t v33 = (std::string *)*((void *)a2 + 5);
    if (v33 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      uint64_t v33 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>((char **)a2 + 5, v39);
    }
    uint64_t v34 = google::protobuf::FieldDescriptor::enum_type(this);
    goto LABEL_62;
  }
LABEL_69:
  if (*((unsigned char *)this + 64))
  {
    google::protobuf::FieldDescriptor::DefaultValueAsString(&__p, this, 0);
    *((_DWORD *)a2 + 4) |= 8u;
    uint64_t v44 = *((void *)a2 + 1);
    int v45 = (google::protobuf::internal::ArenaImpl *)(v44 & 0xFFFFFFFFFFFFFFFELL);
    if (v44) {
      int v45 = *(google::protobuf::internal::ArenaImpl **)v45;
    }
    google::protobuf::internal::ArenaStringPtr::Set((char **)a2 + 6, (char *)&google::protobuf::internal::fixed_address_empty_string, (long long *)&__p, v45);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  uint64_t v46 = *((void *)this + 11);
  if (v46 && !*((unsigned char *)this + 67))
  {
    int v47 = -1431655765 * ((unint64_t)(v46 - *(void *)(*(void *)(v46 + 16) + 48)) >> 4);
    *((_DWORD *)a2 + 4) |= 0x80u;
    *((_DWORD *)a2 + 19) = v47;
  }
  uint64_t v48 = (void *)*((void *)this + 15);
  if (atomic_load_explicit(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  if (v48 != &google::protobuf::_FieldOptions_default_instance_)
  {
    *((_DWORD *)a2 + 4) |= 0x20u;
    uint64_t v49 = (char *)*((void *)a2 + 8);
    if (!v49)
    {
      uint64_t v50 = *((void *)a2 + 1);
      uint64_t v51 = (google::protobuf::internal::ArenaImpl *)(v50 & 0xFFFFFFFFFFFFFFFELL);
      if (v50) {
        uint64_t v51 = *(google::protobuf::internal::ArenaImpl **)v51;
      }
      uint64_t v49 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldOptions>(v51);
      *((void *)a2 + 8) = v49;
    }
    uint64_t v52 = (const google::protobuf::FieldOptions *)*((void *)this + 15);
    if (v52 != (const google::protobuf::FieldOptions *)v49)
    {
      google::protobuf::FieldOptions::Clear((google::protobuf::FieldOptions *)v49);
      google::protobuf::FieldOptions::MergeFrom((google::protobuf::FieldOptions *)v49, v52);
    }
  }
}

void sub_1891E270C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FieldDescriptor::enum_type(google::protobuf::FieldDescriptor *this)
{
  char v2 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v2)
  {
    std::string::size_type v4 = this;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v6[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
      v6[1] = &v4;
      uint64_t v5 = v6;
      std::__call_once(v2, &v5, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *((void *)this + 14);
}

void google::protobuf::anonymous namespace'::SourceLocationCommentPrinter::AddPreComment(uint64_t a1, std::string *a2)
{
  if (*(unsigned char *)a1)
  {
    uint64_t v4 = *(void *)(a1 + 72);
    for (uint64_t i = *(void *)(a1 + 80); v4 != i; v4 += 24)
    {
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::__split_buffer<std::string>::pointer p_p = &__p;
      }
      else {
        std::__split_buffer<std::string>::pointer p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = __p.__r_.__value_.__l.__size_;
      }
      std::string::append(a2, (const std::string::value_type *)p_p, size);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      std::string::append(a2, "\n");
    }
    if (*(char *)(a1 + 47) < 0)
    {
      if (!*(void *)(a1 + 32)) {
        return;
      }
    }
    else if (!*(unsigned char *)(a1 + 47))
    {
      return;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v8 = &__p;
    }
    else {
      int v8 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v9 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v9 = __p.__r_.__value_.__l.__size_;
    }
    std::string::append(a2, (const std::string::value_type *)v8, v9);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1891E28C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::anonymous namespace'::SourceLocationCommentPrinter::AddPostComment(uint64_t a1, std::string *a2)
{
  if (*(unsigned char *)a1)
  {
    if (*(char *)(a1 + 71) < 0)
    {
      if (!*(void *)(a1 + 56)) {
        return;
      }
    }
    else if (!*(unsigned char *)(a1 + 71))
    {
      return;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::__split_buffer<std::string>::pointer p_p = &__p;
    }
    else {
      std::__split_buffer<std::string>::pointer p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    std::string::append(a2, (const std::string::value_type *)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1891E2970(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::anonymous namespace'::SourceLocationCommentPrinter::~SourceLocationCommentPrinter(void **this)
{
  if (*((char *)this + 127) < 0) {
    operator delete(this[13]);
  }
  char v2 = this + 9;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*((char *)this + 71) < 0) {
    operator delete(this[6]);
  }
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
}

void google::protobuf::anonymous namespace'::FormatLineOptions(uint64_t a1, const google::protobuf::Message *a2, uint64_t a3, std::string *a4)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  std::string::basic_string[abi:ne180100](&__p, 2 * (int)a1, 32);
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  {
    uint64_t v8 = v16;
    for (uint64_t i = v17; v8 != i; v8 += 24)
    {
      int v10 = v21;
      std::__split_buffer<std::string>::pointer p_p = (void **)__p;
      if ((v21 & 0x80u) == 0) {
        std::__split_buffer<std::string>::pointer p_p = &__p;
      }
      uint64_t v40 = p_p;
      if ((v21 & 0x80u) != 0) {
        int v10 = v20;
      }
      int v41 = v10;
      LODWORD(v12) = *(char *)(v8 + 23);
      uint64_t v13 = *(void *)v8;
      BOOL v14 = (int)v12 < 0;
      if ((int)v12 >= 0) {
        uint64_t v13 = v8;
      }
      uint64_t v38 = v13;
      LODWORD(v12) = v12;
      if (v14) {
        uint64_t v12 = *(void *)(v8 + 8);
      }
      int v39 = v12;
      uint64_t v36 = 0;
      int v37 = -1;
      uint64_t v34 = 0;
      int v35 = -1;
      uint64_t v32 = 0;
      int v33 = -1;
      uint64_t v30 = 0;
      int v31 = -1;
      uint64_t v28 = 0;
      int v29 = -1;
      uint64_t v26 = 0;
      int v27 = -1;
      uint64_t v24 = 0;
      int v25 = -1;
      uint64_t v22 = 0;
      int v23 = -1;
      *(void *)&long long v15 = &v28;
      *((void *)&v15 + 1) = &v26;
      google::protobuf::strings::SubstituteAndAppend(a4, "$0option $1;\n",
        (uint64_t)&v40,
        (uint64_t)&v38,
        (uint64_t)&v36,
        (uint64_t)&v34,
        (uint64_t)&v32,
        (uint64_t)&v30,
        v15,
        (uint64_t)&v24,
        (uint64_t)&v22);
    }
  }
  uint64_t v40 = (void **)&v16;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v40);
  if ((char)v21 < 0) {
    operator delete(__p);
  }
}

void sub_1891E2BB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  *(void *)(v21 - 144) = &a13;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v21 - 144));
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::EnumDescriptor::DebugString(uint64_t *a1, int a2, uint64_t a3, __int16 *a4)
{
  uint64_t v100 = *MEMORY[0x1E4F143B8];
  std::string::basic_string[abi:ne180100](&__b, 2 * a2, 32);
  uint64_t v63 = 0;
  long long v61 = 0u;
  long long v62 = 0u;
  *(_OWORD *)uint64_t v59 = 0u;
  *(_OWORD *)uint64_t v60 = 0u;
  __int16 v64 = *a4;
  char v65 = *((unsigned char *)a4 + 2);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v66, __b.__r_.__value_.__l.__data_, __b.__r_.__value_.__l.__size_);
  }
  else {
    std::string v66 = __b;
  }
  if (*(unsigned char *)a4)
  {
    uint64_t v90 = 0;
    v91[0] = 0;
    v91[1] = 0;
    google::protobuf::EnumDescriptor::GetLocationPath((uint64_t)a1, (char **)&v90);
    char SourceLocation = google::protobuf::FileDescriptor::GetSourceLocation(a1[2], (uint64_t *)&v90, (uint64_t)&v58);
    if (v90)
    {
      v91[0] = v90;
      operator delete(v90);
    }
  }
  else
  {
    char SourceLocation = 0;
  }
  v57[0] = SourceLocation;
  int v9 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
  p_b = &__b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    p_b = (std::string *)__b.__r_.__value_.__r.__words[0];
  }
  uint64_t v90 = p_b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v9 = __b.__r_.__value_.__r.__words[1];
  }
  LODWORD(v91[0]) = v9;
  uint64_t v11 = (void *)*a1;
  int v12 = *(char *)(*a1 + 23);
  uint64_t v13 = *(void *)(*a1 + 8);
  if (v12 < 0) {
    uint64_t v11 = *(void **)*a1;
  }
  std::string __p = v11;
  int v14 = v12;
  if (v12 < 0) {
    int v14 = v13;
  }
  LODWORD(v89[0]) = v14;
  uint64_t v86 = 0;
  int v87 = -1;
  int v83 = 0;
  int v84 = -1;
  uint64_t v81 = 0;
  int v82 = -1;
  uint64_t v79 = 0;
  int v80 = -1;
  uint64_t v77 = 0;
  int v78 = -1;
  uint64_t v75 = 0;
  int v76 = -1;
  uint64_t v73 = 0;
  int v74 = -1;
  uint64_t v71 = 0;
  int v72 = -1;
  *(void *)&long long v47 = &v77;
  *((void *)&v47 + 1) = &v75;
  google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0enum $1 {\n", (uint64_t)&v90, (uint64_t)&__p, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, v47, (uint64_t)&v73, (uint64_t)&v71);
  unsigned int v56 = a2 + 1;
  if (*((int *)a1 + 11) >= 1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    do
    {
      uint64_t v17 = a1[6];
      std::string::basic_string[abi:ne180100](&v69, (int)(2 * v56), 32);
      uint64_t v96 = 0;
      long long v94 = 0u;
      long long v95 = 0u;
      long long v92 = 0u;
      long long v93 = 0u;
      __int16 v97 = *a4;
      char v98 = *((unsigned char *)a4 + 2);
      if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0) {
        std::string::__init_copy_ctor_external(&v99, v69.__r_.__value_.__l.__data_, v69.__r_.__value_.__l.__size_);
      }
      else {
        std::string v99 = v69;
      }
      if (*(unsigned char *)a4)
      {
        v89[0] = 0;
        std::string __p = 0;
        v89[1] = 0;
        google::protobuf::EnumValueDescriptor::GetLocationPath(v17 + v15, (char **)&__p);
        char v18 = google::protobuf::FileDescriptor::GetSourceLocation(*(void *)(*(void *)(v17 + v15 + 24) + 16), (uint64_t *)&__p, (uint64_t)v91);
        if (__p)
        {
          v89[0] = __p;
          operator delete(__p);
        }
      }
      else
      {
        char v18 = 0;
      }
      LOBYTE(v90) = v18;
      int v20 = HIBYTE(v69.__r_.__value_.__r.__words[2]);
      uint64_t v21 = (std::string *)v69.__r_.__value_.__r.__words[0];
      if ((v69.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v21 = &v69;
      }
      std::string __p = v21;
      if ((v69.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v20 = v69.__r_.__value_.__r.__words[1];
      }
      LODWORD(v89[0]) = v20;
      uint64_t v22 = (uint64_t ***)(v17 + v15);
      int v23 = *v22;
      int v24 = *((char *)*v22 + 23);
      int v25 = (*v22)[1];
      if (v24 < 0) {
        int v23 = (uint64_t **)**v22;
      }
      uint64_t v86 = v23;
      int v26 = v24;
      if (v24 < 0) {
        int v26 = (int)v25;
      }
      int v87 = v26;
      int v83 = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*((unsigned int *)v22 + 4), v85, v19);
      int v84 = strlen(v83);
      uint64_t v81 = 0;
      int v82 = -1;
      uint64_t v79 = 0;
      int v80 = -1;
      uint64_t v77 = 0;
      int v78 = -1;
      uint64_t v75 = 0;
      int v76 = -1;
      uint64_t v73 = 0;
      int v74 = -1;
      uint64_t v71 = 0;
      int v72 = -1;
      v70[0].__r_.__value_.__r.__words[0] = 0;
      LODWORD(v70[0].__r_.__value_.__r.__words[1]) = -1;
      *((void *)&v48 + 1) = &v73;
      *(void *)&long long v48 = &v75;
      google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0$1 = $2", (uint64_t)&__p, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, (uint64_t)&v77, v48, (uint64_t)&v71, (uint64_t)v70);
      memset(&v68, 0, sizeof(v68));
      {
        int v27 = HIBYTE(v68.__r_.__value_.__r.__words[2]);
        uint64_t v28 = (std::string *)v68.__r_.__value_.__r.__words[0];
        if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v28 = &v68;
        }
        std::string __p = v28;
        if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          int v27 = v68.__r_.__value_.__r.__words[1];
        }
        LODWORD(v89[0]) = v27;
        uint64_t v86 = 0;
        int v87 = -1;
        int v83 = 0;
        int v84 = -1;
        uint64_t v81 = 0;
        int v82 = -1;
        uint64_t v79 = 0;
        int v80 = -1;
        uint64_t v77 = 0;
        int v78 = -1;
        uint64_t v75 = 0;
        int v76 = -1;
        uint64_t v73 = 0;
        int v74 = -1;
        uint64_t v71 = 0;
        int v72 = -1;
        v70[0].__r_.__value_.__r.__words[0] = 0;
        LODWORD(v70[0].__r_.__value_.__r.__words[1]) = -1;
        *((void *)&v49 + 1) = &v73;
        *(void *)&long long v49 = &v75;
        google::protobuf::strings::SubstituteAndAppend((std::string *)a3, " [$0]", (uint64_t)&__p, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, (uint64_t)&v77, v49, (uint64_t)&v71, (uint64_t)v70);
      }
      std::string::append((std::string *)a3, ";\n");
      if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v68.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v99.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v99.__r_.__value_.__l.__data_);
      }
      std::string __p = &v95;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
      if (SHIBYTE(v94) < 0) {
        operator delete(*((void **)&v93 + 1));
      }
      if (SBYTE7(v93) < 0) {
        operator delete((void *)v92);
      }
      if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v69.__r_.__value_.__l.__data_);
      }
      ++v16;
      v15 += 40;
    }
    while (v16 < *((int *)a1 + 11));
  }
  if (*((int *)a1 + 14) > 0)
  {
    int v29 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
    uint64_t v30 = &__b;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v30 = (std::string *)__b.__r_.__value_.__r.__words[0];
    }
    uint64_t v90 = v30;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v29 = __b.__r_.__value_.__r.__words[1];
    }
    LODWORD(v91[0]) = v29;
    std::string __p = 0;
    LODWORD(v89[0]) = -1;
    uint64_t v86 = 0;
    int v87 = -1;
    int v83 = 0;
    int v84 = -1;
    uint64_t v81 = 0;
    int v82 = -1;
    uint64_t v79 = 0;
    int v80 = -1;
    uint64_t v77 = 0;
    int v78 = -1;
    uint64_t v75 = 0;
    int v76 = -1;
    uint64_t v73 = 0;
    int v74 = -1;
    uint64_t v71 = 0;
    int v72 = -1;
    *(void *)&long long v50 = &v77;
    *((void *)&v50 + 1) = &v75;
    google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  reserved ", (uint64_t)&v90, (uint64_t)&__p, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, v50, (uint64_t)&v73, (uint64_t)&v71);
    if (*((int *)a1 + 14) >= 1)
    {
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      do
      {
        uint64_t v34 = (unsigned int *)(a1[8] + v32);
        int v35 = (AddrObjGoogle::protobuf *)v34[1];
        if (v35 == *v34)
        {
          uint64_t v90 = (std::string *)AddrObjGoogle::protobuf::FastInt32ToBuffer(v35, (unsigned char *)v91 + 4, v31);
          LODWORD(v91[0]) = strlen((const char *)v90);
          std::string __p = 0;
          LODWORD(v89[0]) = -1;
          uint64_t v86 = 0;
          int v87 = -1;
          int v83 = 0;
          int v84 = -1;
          uint64_t v81 = 0;
          int v82 = -1;
          uint64_t v79 = 0;
          int v80 = -1;
          uint64_t v77 = 0;
          int v78 = -1;
          uint64_t v75 = 0;
          int v76 = -1;
          uint64_t v73 = 0;
          int v74 = -1;
          uint64_t v71 = 0;
          int v72 = -1;
          *((void *)&v51 + 1) = &v75;
          *(void *)&long long v51 = &v77;
          google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0, ", (uint64_t)&v90, (uint64_t)&__p, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, v51, (uint64_t)&v73, (uint64_t)&v71);
        }
        else
        {
          uint64_t v90 = (std::string *)AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*v34, (unsigned char *)v91 + 4, v31);
          LODWORD(v91[0]) = strlen((const char *)v90);
          std::string __p = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)v34[1], (unsigned char *)v89 + 4, v36);
          LODWORD(v89[0]) = strlen((const char *)__p);
          uint64_t v86 = 0;
          int v87 = -1;
          int v83 = 0;
          int v84 = -1;
          uint64_t v81 = 0;
          int v82 = -1;
          uint64_t v79 = 0;
          int v80 = -1;
          uint64_t v77 = 0;
          int v78 = -1;
          uint64_t v75 = 0;
          int v76 = -1;
          uint64_t v73 = 0;
          int v74 = -1;
          uint64_t v71 = 0;
          int v72 = -1;
          *((void *)&v52 + 1) = &v75;
          *(void *)&long long v52 = &v77;
          google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0 to $1, ", (uint64_t)&v90, (uint64_t)&__p, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, v52, (uint64_t)&v73, (uint64_t)&v71);
        }
        ++v33;
        v32 += 8;
      }
      while (v33 < *((int *)a1 + 14));
    }
    if (*(char *)(a3 + 23) < 0) {
      uint64_t v37 = *(void *)(a3 + 8);
    }
    else {
      uint64_t v37 = *(unsigned __int8 *)(a3 + 23);
    }
    std::string::replace((std::string *)a3, v37 - 2, 2uLL, ";\n");
  }
  if (*((int *)a1 + 15) >= 1)
  {
    int v38 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
    int v39 = &__b;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v39 = (std::string *)__b.__r_.__value_.__r.__words[0];
    }
    uint64_t v90 = v39;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v38 = __b.__r_.__value_.__r.__words[1];
    }
    LODWORD(v91[0]) = v38;
    std::string __p = 0;
    LODWORD(v89[0]) = -1;
    uint64_t v86 = 0;
    int v87 = -1;
    int v83 = 0;
    int v84 = -1;
    uint64_t v81 = 0;
    int v82 = -1;
    uint64_t v79 = 0;
    int v80 = -1;
    uint64_t v77 = 0;
    int v78 = -1;
    uint64_t v75 = 0;
    int v76 = -1;
    uint64_t v73 = 0;
    int v74 = -1;
    uint64_t v71 = 0;
    int v72 = -1;
    *(void *)&long long v53 = &v77;
    *((void *)&v53 + 1) = &v75;
    google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  reserved ", (uint64_t)&v90, (uint64_t)&__p, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, v53, (uint64_t)&v73, (uint64_t)&v71);
    if (*((int *)a1 + 15) >= 1)
    {
      uint64_t v41 = 0;
      do
      {
        google::protobuf::CEscape(*(uint64_t **)(a1[9] + 8 * v41), v40, v70);
        uint64_t v42 = (std::string *)v70[0].__r_.__value_.__r.__words[0];
        if ((v70[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v42 = v70;
        }
        uint64_t v90 = v42;
        int v43 = HIBYTE(v70[0].__r_.__value_.__r.__words[2]);
        if ((v70[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          int v43 = v70[0].__r_.__value_.__r.__words[1];
        }
        LODWORD(v91[0]) = v43;
        std::string __p = 0;
        LODWORD(v89[0]) = -1;
        uint64_t v86 = 0;
        int v87 = -1;
        int v83 = 0;
        int v84 = -1;
        uint64_t v81 = 0;
        int v82 = -1;
        uint64_t v79 = 0;
        int v80 = -1;
        uint64_t v77 = 0;
        int v78 = -1;
        uint64_t v75 = 0;
        int v76 = -1;
        uint64_t v73 = 0;
        int v74 = -1;
        uint64_t v71 = 0;
        int v72 = -1;
        *(void *)&long long v54 = &v77;
        *((void *)&v54 + 1) = &v75;
        google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "\"$0\", ", (uint64_t)&v90, (uint64_t)&__p, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, v54, (uint64_t)&v73, (uint64_t)&v71);
        if (SHIBYTE(v70[0].__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v70[0].__r_.__value_.__l.__data_);
        }
        ++v41;
      }
      while (v41 < *((int *)a1 + 15));
    }
    if (*(char *)(a3 + 23) < 0) {
      uint64_t v44 = *(void *)(a3 + 8);
    }
    else {
      uint64_t v44 = *(unsigned __int8 *)(a3 + 23);
    }
    std::string::replace((std::string *)a3, v44 - 2, 2uLL, ";\n");
  }
  int v45 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
  uint64_t v46 = &__b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v46 = (std::string *)__b.__r_.__value_.__r.__words[0];
  }
  uint64_t v90 = v46;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v45 = __b.__r_.__value_.__r.__words[1];
  }
  LODWORD(v91[0]) = v45;
  std::string __p = 0;
  LODWORD(v89[0]) = -1;
  uint64_t v86 = 0;
  int v87 = -1;
  int v83 = 0;
  int v84 = -1;
  uint64_t v81 = 0;
  int v82 = -1;
  uint64_t v79 = 0;
  int v80 = -1;
  uint64_t v77 = 0;
  int v78 = -1;
  uint64_t v75 = 0;
  int v76 = -1;
  uint64_t v73 = 0;
  int v74 = -1;
  uint64_t v71 = 0;
  int v72 = -1;
  *(void *)&long long v55 = &v77;
  *((void *)&v55 + 1) = &v75;
  google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0}\n", (uint64_t)&v90, (uint64_t)&__p, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, v55, (uint64_t)&v73, (uint64_t)&v71);
  if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v66.__r_.__value_.__l.__data_);
  }
  uint64_t v90 = (std::string *)&v62;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v90);
  if (SHIBYTE(v61) < 0) {
    operator delete(v60[1]);
  }
  if (SHIBYTE(v60[0]) < 0) {
    operator delete(v59[0]);
  }
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__b.__r_.__value_.__l.__data_);
  }
}

void sub_1891E36E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  *(void *)(v47 - 224) = &a35;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v47 - 224));
  if (a34 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a47 < 0) {
    operator delete(a42);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::Descriptor::DebugString(uint64_t *a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  v129[5] = *MEMORY[0x1E4F143B8];
  if (!*(unsigned char *)(a1[4] + 75))
  {
    std::string::basic_string[abi:ne180100](&__b, 2 * a2, 32);
    uint64_t v103 = 0;
    long long v101 = 0u;
    long long v102 = 0u;
    *(_OWORD *)std::string v99 = 0u;
    *(_OWORD *)uint64_t v100 = 0u;
    __int16 v104 = *(_WORD *)a4;
    char v105 = *(unsigned char *)(a4 + 2);
    if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0) {
      std::string::__init_copy_ctor_external(&v106, __b.__r_.__value_.__l.__data_, __b.__r_.__value_.__l.__size_);
    }
    else {
      std::string v106 = __b;
    }
    if (*(unsigned char *)a4)
    {
      p_unsigned int data = 0;
      v129[0] = 0;
      v129[1] = 0;
      google::protobuf::Descriptor::GetLocationPath((uint64_t)a1, (uint64_t)&p_data);
      char SourceLocation = google::protobuf::FileDescriptor::GetSourceLocation(a1[2], (uint64_t *)&p_data, (uint64_t)&v98);
      if (p_data)
      {
        v129[0] = p_data;
        operator delete(p_data);
      }
    }
    else
    {
      char SourceLocation = 0;
    }
    v97[0] = SourceLocation;
    if (a5)
    {
      int v11 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
      p_b = &__b;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        p_b = (std::string *)__b.__r_.__value_.__r.__words[0];
      }
      p_unsigned int data = (const char **)&p_b->__r_.__value_.__l.__data_;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v11 = __b.__r_.__value_.__r.__words[1];
      }
      LODWORD(v129[0]) = v11;
      uint64_t v13 = (const char *)*a1;
      int v14 = *(char *)(*a1 + 23);
      uint64_t v15 = *(void *)(*a1 + 8);
      if (v14 < 0) {
        uint64_t v13 = *(const char **)*a1;
      }
      p_p_unsigned int data = v13;
      int v16 = v14;
      if (v14 < 0) {
        int v16 = v15;
      }
      int v126 = v16;
      uint64_t v122 = 0;
      int v123 = -1;
      uint64_t v120 = 0;
      int v121 = -1;
      uint64_t v118 = 0;
      int v119 = -1;
      uint64_t v116 = 0;
      int v117 = -1;
      uint64_t v114 = 0;
      int v115 = -1;
      uint64_t v112 = 0;
      int v113 = -1;
      uint64_t v110 = 0;
      int v111 = -1;
      uint64_t v108 = 0;
      int v109 = -1;
      *(void *)&long long v82 = &v114;
      *((void *)&v82 + 1) = &v112;
      google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0message $1", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v122, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, v82, (uint64_t)&v110, (uint64_t)&v108);
    }
    std::string::append((std::string *)a3, " {\n");
    uint64_t v17 = (a2 + 1);
    int v93 = a2;
    v96[0] = 0;
    v96[1] = 0;
    long long v95 = v96;
    if (*((int *)a1 + 26) >= 1)
    {
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      do
      {
        uint64_t v21 = a1[5];
        uint64_t v22 = v21 + v19;
        int v23 = *(std::once_flag::_State_type **)(v21 + v19 + 48);
        if (v23)
        {
          uint64_t v122 = (const char *)google::protobuf::FieldDescriptor::TypeOnceInit;
          uint64_t v120 = v21 + v19;
          if (atomic_load_explicit((atomic_ullong *volatile)v23, memory_order_acquire) != -1)
          {
            p_unsigned int data = &v122;
            v129[0] = &v120;
            p_p_unsigned int data = (const char *)&p_data;
            std::__call_once(v23, &p_p_data, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if (*(_DWORD *)(v22 + 56) == 10)
        {
          uint64_t v24 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)(a1[5] + v19));
          std::__tree<google::protobuf::Descriptor const*>::__emplace_unique_key_args<google::protobuf::Descriptor const*,google::protobuf::Descriptor const*>((uint64_t *)&v95, v24, v24);
        }
        ++v20;
        v19 += 152;
      }
      while (v20 < *((int *)a1 + 26));
    }
    if (*((int *)a1 + 32) >= 1)
    {
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      do
      {
        uint64_t v27 = a1[10];
        uint64_t v28 = v27 + v25;
        int v29 = *(std::once_flag::_State_type **)(v27 + v25 + 48);
        if (v29)
        {
          uint64_t v122 = (const char *)google::protobuf::FieldDescriptor::TypeOnceInit;
          uint64_t v120 = v27 + v25;
          if (atomic_load_explicit((atomic_ullong *volatile)v29, memory_order_acquire) != -1)
          {
            p_unsigned int data = &v122;
            v129[0] = &v120;
            p_p_unsigned int data = (const char *)&p_data;
            std::__call_once(v29, &p_p_data, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if (*(_DWORD *)(v28 + 56) == 10)
        {
          uint64_t v30 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)(a1[10] + v25));
          std::__tree<google::protobuf::Descriptor const*>::__emplace_unique_key_args<google::protobuf::Descriptor const*,google::protobuf::Descriptor const*>((uint64_t *)&v95, v30, v30);
        }
        ++v26;
        v25 += 152;
      }
      while (v26 < *((int *)a1 + 32));
    }
    int v31 = *((_DWORD *)a1 + 29);
    if (v31 >= 1)
    {
      for (uint64_t i = 0; i < v31; ++i)
      {
        unint64_t v33 = a1[7] + 144 * i;
        for (j = v96[0]; j; j = (void *)*j)
        {
          unint64_t v35 = j[4];
          if (v33 >= v35)
          {
            if (v35 >= v33) {
              goto LABEL_43;
            }
            ++j;
          }
        }
        google::protobuf::Descriptor::DebugString(v33, v17, a3, a4, 1);
        int v31 = *((_DWORD *)a1 + 29);
LABEL_43:
        ;
      }
    }
    if (*((int *)a1 + 30) >= 1)
    {
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      do
      {
        google::protobuf::EnumDescriptor::DebugString((uint64_t *)(a1[8] + v36), v17, a3, (__int16 *)a4);
        ++v37;
        v36 += 80;
      }
      while (v37 < *((int *)a1 + 30));
    }
    if (*((int *)a1 + 26) >= 1)
    {
      uint64_t v38 = 0;
      uint64_t v39 = 88;
      do
      {
        uint64_t v40 = (uint64_t *)(a1[5] + v39);
        uint64_t v43 = *v40;
        uint64_t v41 = v40 - 11;
        uint64_t v42 = v43;
        if (v43)
        {
          if (v41 == **(uint64_t ***)(v42 + 32)) {
            google::protobuf::OneofDescriptor::DebugString((int *)v42, v17, (std::string *)a3, (__int16 *)a4);
          }
        }
        else
        {
          google::protobuf::FieldDescriptor::DebugString(v41, v17, a3, a4);
        }
        ++v38;
        v39 += 152;
      }
      while (v38 < *((int *)a1 + 26));
    }
    if (*((int *)a1 + 31) >= 1)
    {
      uint64_t v44 = 0;
      uint64_t v45 = 0;
      do
      {
        int v46 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
        uint64_t v47 = (std::string *)__b.__r_.__value_.__r.__words[0];
        if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v47 = &__b;
        }
        p_unsigned int data = (const char **)&v47->__r_.__value_.__l.__data_;
        if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          int v46 = __b.__r_.__value_.__r.__words[1];
        }
        LODWORD(v129[0]) = v46;
        p_p_unsigned int data = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*(unsigned int *)(a1[9] + v44), v127, v18);
        int v126 = strlen(p_p_data);
        uint64_t v122 = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)(*(_DWORD *)(a1[9] + v44 + 4) - 1), v124, v48);
        int v123 = strlen(v122);
        uint64_t v120 = 0;
        int v121 = -1;
        uint64_t v118 = 0;
        int v119 = -1;
        uint64_t v116 = 0;
        int v117 = -1;
        uint64_t v114 = 0;
        int v115 = -1;
        uint64_t v112 = 0;
        int v113 = -1;
        uint64_t v110 = 0;
        int v111 = -1;
        uint64_t v108 = 0;
        int v109 = -1;
        *((void *)&v83 + 1) = &v112;
        *(void *)&long long v83 = &v114;
        google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  extensions $1 to $2;\n",
          (uint64_t)&p_data,
          (uint64_t)&p_p_data,
          (uint64_t)&v122,
          (uint64_t)&v120,
          (uint64_t)&v118,
          (uint64_t)&v116,
          v83,
          (uint64_t)&v110,
          (uint64_t)&v108);
        ++v45;
        v44 += 16;
      }
      while (v45 < *((int *)a1 + 31));
    }
    if (*((int *)a1 + 32) >= 1)
    {
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v51 = 80;
      do
      {
        uint64_t v52 = a1[10];
        if (*(void *)(v52 + v51) != v50)
        {
          if (v49)
          {
            int v53 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
            long long v54 = (std::string *)__b.__r_.__value_.__r.__words[0];
            if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              long long v54 = &__b;
            }
            p_unsigned int data = (const char **)&v54->__r_.__value_.__l.__data_;
            if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              int v53 = __b.__r_.__value_.__r.__words[1];
            }
            LODWORD(v129[0]) = v53;
            p_p_unsigned int data = 0;
            int v126 = -1;
            uint64_t v122 = 0;
            int v123 = -1;
            uint64_t v120 = 0;
            int v121 = -1;
            uint64_t v118 = 0;
            int v119 = -1;
            uint64_t v116 = 0;
            int v117 = -1;
            uint64_t v114 = 0;
            int v115 = -1;
            uint64_t v112 = 0;
            int v113 = -1;
            uint64_t v110 = 0;
            int v111 = -1;
            uint64_t v108 = 0;
            int v109 = -1;
            *((void *)&v84 + 1) = &v112;
            *(void *)&long long v84 = &v114;
            google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  }\n", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v122, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, v84, (uint64_t)&v110, (uint64_t)&v108);
            uint64_t v50 = *(void *)(a1[10] + v51);
          }
          else
          {
            uint64_t v50 = *(void *)(v52 + v51);
          }
          int v55 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
          unsigned int v56 = (std::string *)__b.__r_.__value_.__r.__words[0];
          if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            unsigned int v56 = &__b;
          }
          p_unsigned int data = (const char **)&v56->__r_.__value_.__l.__data_;
          if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            int v55 = __b.__r_.__value_.__r.__words[1];
          }
          LODWORD(v129[0]) = v55;
          int v57 = *(const char **)(v50 + 8);
          int v58 = v57[23];
          uint64_t v59 = *((void *)v57 + 1);
          if (v58 < 0) {
            int v57 = *(const char **)v57;
          }
          p_p_unsigned int data = v57;
          int v60 = v58;
          if (v58 < 0) {
            int v60 = v59;
          }
          int v126 = v60;
          uint64_t v122 = 0;
          int v123 = -1;
          uint64_t v120 = 0;
          int v121 = -1;
          uint64_t v118 = 0;
          int v119 = -1;
          uint64_t v116 = 0;
          int v117 = -1;
          uint64_t v114 = 0;
          int v115 = -1;
          uint64_t v112 = 0;
          int v113 = -1;
          uint64_t v110 = 0;
          int v111 = -1;
          uint64_t v108 = 0;
          int v109 = -1;
          *((void *)&v85 + 1) = &v112;
          *(void *)&long long v85 = &v114;
          google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  extend .$1 {\n", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v122, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, v85, (uint64_t)&v110, (uint64_t)&v108);
          uint64_t v52 = a1[10];
        }
        google::protobuf::FieldDescriptor::DebugString(v52 + v51 - 80, (v93 + 2), a3, a4);
        ++v49;
        uint64_t v61 = *((int *)a1 + 32);
        v51 += 152;
      }
      while (v49 < v61);
      if ((int)v61 > 0)
      {
        int v62 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
        uint64_t v63 = &__b;
        if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          uint64_t v63 = (std::string *)__b.__r_.__value_.__r.__words[0];
        }
        p_unsigned int data = (const char **)&v63->__r_.__value_.__l.__data_;
        if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          int v62 = __b.__r_.__value_.__r.__words[1];
        }
        LODWORD(v129[0]) = v62;
        p_p_unsigned int data = 0;
        int v126 = -1;
        uint64_t v122 = 0;
        int v123 = -1;
        uint64_t v120 = 0;
        int v121 = -1;
        uint64_t v118 = 0;
        int v119 = -1;
        uint64_t v116 = 0;
        int v117 = -1;
        uint64_t v114 = 0;
        int v115 = -1;
        uint64_t v112 = 0;
        int v113 = -1;
        uint64_t v110 = 0;
        int v111 = -1;
        uint64_t v108 = 0;
        int v109 = -1;
        *(void *)&long long v86 = &v114;
        *((void *)&v86 + 1) = &v112;
        google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  }\n", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v122, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, v86, (uint64_t)&v110, (uint64_t)&v108);
      }
    }
    if (*((int *)a1 + 33) >= 1)
    {
      int v64 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
      char v65 = &__b;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        char v65 = (std::string *)__b.__r_.__value_.__r.__words[0];
      }
      p_unsigned int data = (const char **)&v65->__r_.__value_.__l.__data_;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v64 = __b.__r_.__value_.__r.__words[1];
      }
      LODWORD(v129[0]) = v64;
      p_p_unsigned int data = 0;
      int v126 = -1;
      uint64_t v122 = 0;
      int v123 = -1;
      uint64_t v120 = 0;
      int v121 = -1;
      uint64_t v118 = 0;
      int v119 = -1;
      uint64_t v116 = 0;
      int v117 = -1;
      uint64_t v114 = 0;
      int v115 = -1;
      uint64_t v112 = 0;
      int v113 = -1;
      uint64_t v110 = 0;
      int v111 = -1;
      uint64_t v108 = 0;
      int v109 = -1;
      *(void *)&long long v87 = &v114;
      *((void *)&v87 + 1) = &v112;
      google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  reserved ", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v122, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, v87, (uint64_t)&v110, (uint64_t)&v108);
      if (*((int *)a1 + 33) >= 1)
      {
        uint64_t v67 = 0;
        uint64_t v68 = 0;
        do
        {
          std::string v69 = (unsigned int *)(a1[11] + v67);
          uint64_t v70 = (AddrObjGoogle::protobuf *)*v69;
          if (v69[1] == v70 + 1)
          {
            p_unsigned int data = (const char **)AddrObjGoogle::protobuf::FastInt32ToBuffer(v70, (unsigned char *)v129 + 4, v66);
            LODWORD(v129[0]) = strlen((const char *)p_data);
            p_p_unsigned int data = 0;
            int v126 = -1;
            uint64_t v122 = 0;
            int v123 = -1;
            uint64_t v120 = 0;
            int v121 = -1;
            uint64_t v118 = 0;
            int v119 = -1;
            uint64_t v116 = 0;
            int v117 = -1;
            uint64_t v114 = 0;
            int v115 = -1;
            uint64_t v112 = 0;
            int v113 = -1;
            uint64_t v110 = 0;
            int v111 = -1;
            uint64_t v108 = 0;
            int v109 = -1;
            *((void *)&v88 + 1) = &v112;
            *(void *)&long long v88 = &v114;
            google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0, ", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v122, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, v88, (uint64_t)&v110, (uint64_t)&v108);
          }
          else
          {
            p_unsigned int data = (const char **)AddrObjGoogle::protobuf::FastInt32ToBuffer(v70, (unsigned char *)v129 + 4, v66);
            LODWORD(v129[0]) = strlen((const char *)p_data);
            p_p_unsigned int data = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)(v69[1] - 1), v127, v71);
            int v126 = strlen(p_p_data);
            uint64_t v122 = 0;
            int v123 = -1;
            uint64_t v120 = 0;
            int v121 = -1;
            uint64_t v118 = 0;
            int v119 = -1;
            uint64_t v116 = 0;
            int v117 = -1;
            uint64_t v114 = 0;
            int v115 = -1;
            uint64_t v112 = 0;
            int v113 = -1;
            uint64_t v110 = 0;
            int v111 = -1;
            uint64_t v108 = 0;
            int v109 = -1;
            *((void *)&v89 + 1) = &v112;
            *(void *)&long long v89 = &v114;
            google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0 to $1, ", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v122, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, v89, (uint64_t)&v110, (uint64_t)&v108);
          }
          ++v68;
          v67 += 8;
        }
        while (v68 < *((int *)a1 + 33));
      }
      if (*(char *)(a3 + 23) < 0) {
        uint64_t v72 = *(void *)(a3 + 8);
      }
      else {
        uint64_t v72 = *(unsigned __int8 *)(a3 + 23);
      }
      std::string::replace((std::string *)a3, v72 - 2, 2uLL, ";\n");
    }
    if (*((int *)a1 + 34) >= 1)
    {
      int v73 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
      int v74 = &__b;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v74 = (std::string *)__b.__r_.__value_.__r.__words[0];
      }
      p_unsigned int data = (const char **)&v74->__r_.__value_.__l.__data_;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v73 = __b.__r_.__value_.__r.__words[1];
      }
      LODWORD(v129[0]) = v73;
      p_p_unsigned int data = 0;
      int v126 = -1;
      uint64_t v122 = 0;
      int v123 = -1;
      uint64_t v120 = 0;
      int v121 = -1;
      uint64_t v118 = 0;
      int v119 = -1;
      uint64_t v116 = 0;
      int v117 = -1;
      uint64_t v114 = 0;
      int v115 = -1;
      uint64_t v112 = 0;
      int v113 = -1;
      uint64_t v110 = 0;
      int v111 = -1;
      uint64_t v108 = 0;
      int v109 = -1;
      *(void *)&long long v90 = &v114;
      *((void *)&v90 + 1) = &v112;
      google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  reserved ", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v122, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, v90, (uint64_t)&v110, (uint64_t)&v108);
      if (*((int *)a1 + 34) >= 1)
      {
        uint64_t v76 = 0;
        do
        {
          google::protobuf::CEscape(*(uint64_t **)(a1[12] + 8 * v76), v75, &__p);
          std::__split_buffer<std::string>::pointer p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::__split_buffer<std::string>::pointer p_p = &__p;
          }
          p_unsigned int data = (const char **)&p_p->__r_.__value_.__l.__data_;
          int v78 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            int v78 = __p.__r_.__value_.__r.__words[1];
          }
          LODWORD(v129[0]) = v78;
          p_p_unsigned int data = 0;
          int v126 = -1;
          uint64_t v122 = 0;
          int v123 = -1;
          uint64_t v120 = 0;
          int v121 = -1;
          uint64_t v118 = 0;
          int v119 = -1;
          uint64_t v116 = 0;
          int v117 = -1;
          uint64_t v114 = 0;
          int v115 = -1;
          uint64_t v112 = 0;
          int v113 = -1;
          uint64_t v110 = 0;
          int v111 = -1;
          uint64_t v108 = 0;
          int v109 = -1;
          *(void *)&long long v91 = &v114;
          *((void *)&v91 + 1) = &v112;
          google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "\"$0\", ", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v122, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, v91, (uint64_t)&v110, (uint64_t)&v108);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          ++v76;
        }
        while (v76 < *((int *)a1 + 34));
      }
      if (*(char *)(a3 + 23) < 0) {
        uint64_t v79 = *(void *)(a3 + 8);
      }
      else {
        uint64_t v79 = *(unsigned __int8 *)(a3 + 23);
      }
      std::string::replace((std::string *)a3, v79 - 2, 2uLL, ";\n");
    }
    int v80 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
    uint64_t v81 = &__b;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v81 = (std::string *)__b.__r_.__value_.__r.__words[0];
    }
    p_unsigned int data = (const char **)&v81->__r_.__value_.__l.__data_;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v80 = __b.__r_.__value_.__r.__words[1];
    }
    LODWORD(v129[0]) = v80;
    p_p_unsigned int data = 0;
    int v126 = -1;
    uint64_t v122 = 0;
    int v123 = -1;
    uint64_t v120 = 0;
    int v121 = -1;
    uint64_t v118 = 0;
    int v119 = -1;
    uint64_t v116 = 0;
    int v117 = -1;
    uint64_t v114 = 0;
    int v115 = -1;
    uint64_t v112 = 0;
    int v113 = -1;
    uint64_t v110 = 0;
    int v111 = -1;
    uint64_t v108 = 0;
    int v109 = -1;
    *(void *)&long long v92 = &v114;
    *((void *)&v92 + 1) = &v112;
    google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0}\n", (uint64_t)&p_data, (uint64_t)&p_p_data, (uint64_t)&v122, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, v92, (uint64_t)&v110, (uint64_t)&v108);
    std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::destroy(v96[0]);
    if (SHIBYTE(v106.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v106.__r_.__value_.__l.__data_);
    }
    p_unsigned int data = (const char **)&v102;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_data);
    if (SHIBYTE(v101) < 0) {
      operator delete(v100[1]);
    }
    if (SHIBYTE(v100[0]) < 0) {
      operator delete(v99[0]);
    }
    if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__b.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1891E4650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49,void *__p,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  if (a55 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::FieldDescriptor::DebugString(uint64_t a1, uint64_t a2, std::string *a3, uint64_t a4)
{
  uint64_t v79 = *MEMORY[0x1E4F143B8];
  std::string::basic_string[abi:ne180100](&__b, 2 * (int)a2, 32);
  memset(&v48, 0, sizeof(v48));
  uint64_t v8 = *(std::once_flag::_State_type **)(a1 + 48);
  if (v8)
  {
    uint64_t v76 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
    int v74 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))a1;
    if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
    {
      v53.__r_.__value_.__r.__words[0] = (std::string::size_type)&v76;
      v53.__r_.__value_.__l.__size_ = (std::string::size_type)&v74;
      v78[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v53;
      std::__call_once(v8, v78, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*(_DWORD *)(a1 + 56) == 11 && *(unsigned char *)(*(void *)(*(void *)(a1 + 104) + 32) + 75))
  {
    uint64_t v9 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a1);
    google::protobuf::FieldDescriptor::FieldTypeNameDebugString((google::protobuf::FieldDescriptor *)&v50, *(void *)(v9 + 40));
    int v10 = v50;
    if ((v52 & 0x80u) == 0) {
      int v10 = &v50;
    }
    v53.__r_.__value_.__r.__words[0] = (std::string::size_type)v10;
    int v11 = v52;
    if ((v52 & 0x80u) != 0) {
      int v11 = v51;
    }
    LODWORD(v53.__r_.__value_.__r.__words[1]) = v11;
    uint64_t v12 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a1);
    google::protobuf::FieldDescriptor::FieldTypeNameDebugString((google::protobuf::FieldDescriptor *)&__p, *(void *)(v12 + 40) + 152);
    std::__split_buffer<std::string>::pointer p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::__split_buffer<std::string>::pointer p_p = &__p;
    }
    v78[0].__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
    int v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v14 = __p.__r_.__value_.__r.__words[1];
    }
    LODWORD(v78[0].__r_.__value_.__r.__words[1]) = v14;
    uint64_t v76 = 0;
    LODWORD(v77) = -1;
    int v74 = 0;
    int v75 = -1;
    uint64_t v72 = 0;
    int v73 = -1;
    uint64_t v70 = 0;
    LODWORD(v71) = -1;
    uint64_t v68 = 0;
    int v69 = -1;
    std::string v66 = 0;
    int v67 = -1;
    uint64_t v64 = 0;
    int v65 = -1;
    uint64_t v62 = 0;
    int v63 = -1;
    *(void *)&long long v43 = &v68;
    *((void *)&v43 + 1) = &v66;
    google::protobuf::strings::SubstituteAndAppend(&v48, "map<$0, $1>", (uint64_t)&v53, (uint64_t)v78, (uint64_t)&v76, (uint64_t)&v74, (uint64_t)&v72, (uint64_t)&v70, v43, (uint64_t)&v64, (uint64_t)&v62);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if ((char)v52 < 0) {
      operator delete(v50);
    }
  }
  else
  {
    google::protobuf::FieldDescriptor::FieldTypeNameDebugString((google::protobuf::FieldDescriptor *)&v53, a1);
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v48.__r_.__value_.__l.__data_);
    }
    std::string v48 = v53;
  }
  v53.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::kLabelToName[*(unsigned int *)(a1 + 60)];
  v53.__r_.__value_.__l.__size_ = strlen(v53.__r_.__value_.__l.__data_);
  v78[0].__r_.__value_.__r.__words[0] = (std::string::size_type)" ";
  v78[0].__r_.__value_.__l.__size_ = 1;
  google::protobuf::StrCat((uint64_t)&v53, (uint64_t)v78, &__p);
  uint64_t v15 = *(std::once_flag::_State_type **)(a1 + 48);
  if (v15)
  {
    uint64_t v76 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
    int v74 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))a1;
    if (atomic_load_explicit((atomic_ullong *volatile)v15, memory_order_acquire) != -1)
    {
      v53.__r_.__value_.__r.__words[0] = (std::string::size_type)&v76;
      v53.__r_.__value_.__l.__size_ = (std::string::size_type)&v74;
      v78[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v53;
      std::__call_once(v15, v78, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*(_DWORD *)(a1 + 56) == 11 && *(unsigned char *)(*(void *)(*(void *)(a1 + 104) + 32) + 75)
    || *(void *)(a1 + 88)
    || *(_DWORD *)(a1 + 60) == 1 && !*(unsigned char *)(a1 + 65) && *(_DWORD *)(*(void *)(a1 + 40) + 60) != 2)
  {
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      *__p.__r_.__value_.__l.__data_ = 0;
      __p.__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      __p.__r_.__value_.__s.__data_[0] = 0;
      *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
    }
  }
  uint64_t v58 = 0;
  long long v57 = 0u;
  long long v56 = 0u;
  long long v55 = 0u;
  long long v54 = 0u;
  __int16 v59 = *(_WORD *)a4;
  char v60 = *(unsigned char *)(a4 + 2);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v61, __b.__r_.__value_.__l.__data_, __b.__r_.__value_.__l.__size_);
  }
  else {
    std::string v61 = __b;
  }
  if (*(unsigned char *)a4)
  {
    memset(v78, 0, 24);
    google::protobuf::FieldDescriptor::GetLocationPath(a1, &v78[0].__r_.__value_.__l.__data_);
    std::string::value_type SourceLocation = google::protobuf::FileDescriptor::GetSourceLocation(*(void *)(a1 + 40), (uint64_t *)v78, (uint64_t)&v53.__r_.__value_.__l.__size_);
    if (v78[0].__r_.__value_.__r.__words[0])
    {
      v78[0].__r_.__value_.__l.__size_ = v78[0].__r_.__value_.__r.__words[0];
      operator delete(v78[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string::value_type SourceLocation = 0;
  }
  v53.__r_.__value_.__s.__data_[0] = SourceLocation;
  int v18 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
  p_b = &__b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    p_b = (std::string *)__b.__r_.__value_.__r.__words[0];
  }
  v78[0].__r_.__value_.__r.__words[0] = (std::string::size_type)p_b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v18 = __b.__r_.__value_.__r.__words[1];
  }
  LODWORD(v78[0].__r_.__value_.__r.__words[1]) = v18;
  int v20 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  uint64_t v21 = &__p;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v21 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  uint64_t v76 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v21;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v20 = __p.__r_.__value_.__r.__words[1];
  }
  LODWORD(v77) = v20;
  int v22 = HIBYTE(v48.__r_.__value_.__r.__words[2]);
  int v23 = &v48;
  if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v23 = (std::string *)v48.__r_.__value_.__r.__words[0];
  }
  int v74 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v23;
  if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v22 = v48.__r_.__value_.__r.__words[1];
  }
  int v75 = v22;
  uint64_t v24 = *(std::once_flag::_State_type **)(a1 + 48);
  if (v24)
  {
    std::string v66 = google::protobuf::FieldDescriptor::TypeOnceInit;
    uint64_t v64 = a1;
    if (atomic_load_explicit((atomic_ullong *volatile)v24, memory_order_acquire) != -1)
    {
      uint64_t v70 = (const char *)&v66;
      uint64_t v71 = &v64;
      uint64_t v68 = &v70;
      std::__call_once(v24, &v68, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  uint64_t v25 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))a1;
  if (*(_DWORD *)(a1 + 56) == 10) {
    uint64_t v25 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a1);
  }
  uint64_t v26 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))*v25;
  int v27 = *((char *)*v25 + 23);
  uint64_t v28 = (*v25)[1];
  if (v27 < 0) {
    uint64_t v26 = **v25;
  }
  uint64_t v72 = v26;
  int v29 = v27;
  if (v27 < 0) {
    int v29 = (int)v28;
  }
  int v73 = v29;
  uint64_t v70 = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*(unsigned int *)(a1 + 68), (unsigned char *)&v71 + 4, v17);
  LODWORD(v71) = strlen(v70);
  uint64_t v68 = 0;
  int v69 = -1;
  std::string v66 = 0;
  int v67 = -1;
  uint64_t v64 = 0;
  int v65 = -1;
  uint64_t v62 = 0;
  int v63 = -1;
  uint64_t v50 = 0;
  LODWORD(v51) = -1;
  *(void *)&long long v44 = &v66;
  *((void *)&v44 + 1) = &v64;
  google::protobuf::strings::SubstituteAndAppend(a3, "$0$1$2 $3 = $4", (uint64_t)v78, (uint64_t)&v76, (uint64_t)&v74, (uint64_t)&v72, (uint64_t)&v70, (uint64_t)&v68, v44, (uint64_t)&v62, (uint64_t)&v50);
  if (*(unsigned char *)(a1 + 64))
  {
    google::protobuf::FieldDescriptor::DefaultValueAsString(&v46, (google::protobuf::FieldDescriptor *)a1, (char *)1);
    uint64_t v30 = (std::string *)v46.__r_.__value_.__r.__words[0];
    if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v30 = &v46;
    }
    v78[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v30;
    int v31 = HIBYTE(v46.__r_.__value_.__r.__words[2]);
    if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v31 = v46.__r_.__value_.__r.__words[1];
    }
    LODWORD(v78[0].__r_.__value_.__r.__words[1]) = v31;
    uint64_t v76 = 0;
    LODWORD(v77) = -1;
    int v74 = 0;
    int v75 = -1;
    uint64_t v72 = 0;
    int v73 = -1;
    uint64_t v70 = 0;
    LODWORD(v71) = -1;
    uint64_t v68 = 0;
    int v69 = -1;
    std::string v66 = 0;
    int v67 = -1;
    uint64_t v64 = 0;
    int v65 = -1;
    uint64_t v62 = 0;
    int v63 = -1;
    uint64_t v50 = 0;
    LODWORD(v51) = -1;
    *(void *)&long long v45 = &v66;
    *((void *)&v45 + 1) = &v64;
    google::protobuf::strings::SubstituteAndAppend(a3, " [default = $0", (uint64_t)v78, (uint64_t)&v76, (uint64_t)&v74, (uint64_t)&v72, (uint64_t)&v70, (uint64_t)&v68, v45, (uint64_t)&v62, (uint64_t)&v50);
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v46.__r_.__value_.__l.__data_);
    }
    if (!*(unsigned char *)(a1 + 66)) {
      goto LABEL_81;
    }
    uint64_t v32 = ", ";
LABEL_72:
    std::string::append(a3, v32);
    std::string::append(a3, "json_name = \"");
    google::protobuf::CEscape(*(uint64_t **)(a1 + 32), v33, v78);
    if ((v78[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v34 = v78;
    }
    else {
      uint64_t v34 = (std::string *)v78[0].__r_.__value_.__r.__words[0];
    }
    if ((v78[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v78[0].__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v78[0].__r_.__value_.__l.__size_;
    }
    std::string::append(a3, (const std::string::value_type *)v34, size);
    if (SHIBYTE(v78[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v78[0].__r_.__value_.__l.__data_);
    }
    std::string::append(a3, "\"");
LABEL_81:
    int v36 = 1;
    goto LABEL_82;
  }
  if (*(unsigned char *)(a1 + 66))
  {
    uint64_t v32 = " [";
    goto LABEL_72;
  }
  int v36 = 0;
LABEL_82:
  memset(v78, 0, 24);
  {
    if (v36) {
      uint64_t v37 = ", ";
    }
    else {
      uint64_t v37 = " [";
    }
    std::string::append(a3, v37);
    if ((v78[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v38 = v78;
    }
    else {
      uint64_t v38 = (std::string *)v78[0].__r_.__value_.__r.__words[0];
    }
    if ((v78[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v39 = HIBYTE(v78[0].__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v39 = v78[0].__r_.__value_.__l.__size_;
    }
    std::string::append(a3, (const std::string::value_type *)v38, v39);
    goto LABEL_94;
  }
  if (v36) {
LABEL_94:
  }
    std::string::append(a3, "]");
  uint64_t v40 = *(std::once_flag::_State_type **)(a1 + 48);
  if (v40)
  {
    uint64_t v72 = google::protobuf::FieldDescriptor::TypeOnceInit;
    uint64_t v70 = (const char *)a1;
    if (atomic_load_explicit((atomic_ullong *volatile)v40, memory_order_acquire) != -1)
    {
      uint64_t v76 = &v72;
      uint64_t v77 = &v70;
      int v74 = &v76;
      std::__call_once(v40, &v74, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*(_DWORD *)(a1 + 56) != 10)
  {
    uint64_t v41 = ";\n";
    goto LABEL_102;
  }
  if (*(unsigned char *)(a4 + 1))
  {
    uint64_t v41 = " { ... };\n";
LABEL_102:
    std::string::append(a3, v41);
    goto LABEL_103;
  }
  uint64_t v42 = (uint64_t *)google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a1);
  google::protobuf::Descriptor::DebugString(v42, a2, (uint64_t)a3, a4, 0);
LABEL_103:
  if (SHIBYTE(v78[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v78[0].__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v61.__r_.__value_.__l.__data_);
  }
  v78[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v57;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)v78);
  if (SHIBYTE(v56) < 0) {
    operator delete(*((void **)&v55 + 1));
  }
  if (SBYTE7(v55) < 0) {
    operator delete((void *)v54);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v48.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__b.__r_.__value_.__l.__data_);
  }
}

void sub_1891E4FF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a40 < 0) {
    operator delete(a35);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::OneofDescriptor::DebugString(int *a1, int a2, std::string *a3, __int16 *a4)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  std::string::basic_string[abi:ne180100](&__b, 2 * a2, 32);
  uint64_t v27 = 0;
  long long v26 = 0u;
  long long v25 = 0u;
  *(_OWORD *)uint64_t v24 = 0u;
  *(_OWORD *)int v23 = 0u;
  __int16 v28 = *a4;
  char v29 = *((unsigned char *)a4 + 2);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&__p, __b.__r_.__value_.__l.__data_, __b.__r_.__value_.__l.__size_);
  }
  else {
    std::string __p = __b;
  }
  if (*(unsigned char *)a4)
  {
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    google::protobuf::OneofDescriptor::GetLocationPath((uint64_t)a1, (char **)&v50);
    char SourceLocation = google::protobuf::FileDescriptor::GetSourceLocation(*(void *)(*((void *)a1 + 2) + 16), (uint64_t *)&v50, (uint64_t)&v22);
    if (v50)
    {
      uint64_t v51 = (char *)v50;
      operator delete(v50);
    }
  }
  else
  {
    char SourceLocation = 0;
  }
  v21[0] = SourceLocation;
  int v9 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
  p_b = &__b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    p_b = (std::string *)__b.__r_.__value_.__r.__words[0];
  }
  uint64_t v50 = p_b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v9 = __b.__r_.__value_.__r.__words[1];
  }
  LODWORD(v51) = v9;
  int v11 = *(uint64_t **)a1;
  int v12 = *(char *)(*(void *)a1 + 23);
  uint64_t v13 = *(void *)(*(void *)a1 + 8);
  if (v12 < 0) {
    int v11 = **(uint64_t ***)a1;
  }
  std::string v48 = v11;
  int v14 = v12;
  if (v12 < 0) {
    int v14 = v13;
  }
  int v49 = v14;
  uint64_t v46 = 0;
  int v47 = -1;
  uint64_t v44 = 0;
  int v45 = -1;
  uint64_t v42 = 0;
  int v43 = -1;
  uint64_t v40 = 0;
  int v41 = -1;
  uint64_t v38 = 0;
  int v39 = -1;
  uint64_t v36 = 0;
  int v37 = -1;
  uint64_t v34 = 0;
  int v35 = -1;
  uint64_t v32 = 0;
  int v33 = -1;
  *(void *)&long long v19 = &v38;
  *((void *)&v19 + 1) = &v36;
  google::protobuf::strings::SubstituteAndAppend(a3, "$0oneof $1 {", (uint64_t)&v50, (uint64_t)&v48, (uint64_t)&v46, (uint64_t)&v44, (uint64_t)&v42, (uint64_t)&v40, v19, (uint64_t)&v34, (uint64_t)&v32);
  uint64_t v15 = (a2 + 1);
  if (*((unsigned char *)a4 + 2))
  {
    std::string::append(a3, " ... }\n");
  }
  else
  {
    std::string::append(a3, "\n");
    if (a1[6] >= 1)
    {
      uint64_t v16 = 0;
      do
        google::protobuf::FieldDescriptor::DebugString(*(void *)(*((void *)a1 + 4) + 8 * v16++), v15, a3, a4);
      while (v16 < a1[6]);
    }
    int v17 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
    int v18 = &__b;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v18 = (std::string *)__b.__r_.__value_.__r.__words[0];
    }
    uint64_t v50 = v18;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v17 = __b.__r_.__value_.__r.__words[1];
    }
    LODWORD(v51) = v17;
    std::string v48 = 0;
    int v49 = -1;
    uint64_t v46 = 0;
    int v47 = -1;
    uint64_t v44 = 0;
    int v45 = -1;
    uint64_t v42 = 0;
    int v43 = -1;
    uint64_t v40 = 0;
    int v41 = -1;
    uint64_t v38 = 0;
    int v39 = -1;
    uint64_t v36 = 0;
    int v37 = -1;
    uint64_t v34 = 0;
    int v35 = -1;
    uint64_t v32 = 0;
    int v33 = -1;
    *(void *)&long long v20 = &v38;
    *((void *)&v20 + 1) = &v36;
    google::protobuf::strings::SubstituteAndAppend(a3, "$0}\n", (uint64_t)&v50, (uint64_t)&v48, (uint64_t)&v46, (uint64_t)&v44, (uint64_t)&v42, (uint64_t)&v40, v20, (uint64_t)&v34, (uint64_t)&v32);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  uint64_t v50 = (std::string *)&v26;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v50);
  if (SHIBYTE(v25) < 0) {
    operator delete(v24[1]);
  }
  if (SHIBYTE(v24[0]) < 0) {
    operator delete(v23[0]);
  }
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__b.__r_.__value_.__l.__data_);
  }
}

void sub_1891E54C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (a43 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::FieldDescriptor::DebugStringWithOptions(std::string *this, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  *(_OWORD *)&this->__r_.__value_.__l.__data_ = 0uLL;
  this->__r_.__value_.__r.__words[2] = 0;
  if (*(unsigned char *)(a2 + 67))
  {
    uint64_t v6 = *(uint64_t **)(*(void *)(a2 + 80) + 8);
    int v7 = *((char *)v6 + 23);
    uint64_t v8 = v6[1];
    if (v7 < 0) {
      uint64_t v6 = (uint64_t *)*v6;
    }
    uint64_t v30 = v6;
    int v9 = v7;
    if (v7 < 0) {
      int v9 = v8;
    }
    int v31 = v9;
    uint64_t v28 = 0;
    int v29 = -1;
    uint64_t v26 = 0;
    int v27 = -1;
    uint64_t v24 = 0;
    int v25 = -1;
    uint64_t v22 = 0;
    int v23 = -1;
    uint64_t v20 = 0;
    int v21 = -1;
    uint64_t v18 = 0;
    int v19 = -1;
    uint64_t v16 = 0;
    int v17 = -1;
    uint64_t v14 = 0;
    int v15 = -1;
    uint64_t v12 = 0;
    int v13 = -1;
    *(void *)&long long v11 = &v18;
    *((void *)&v11 + 1) = &v16;
    google::protobuf::strings::SubstituteAndAppend(this, "extend .$0 {\n", (uint64_t)&v30, (uint64_t)&v28, (uint64_t)&v26, (uint64_t)&v24, (uint64_t)&v22, (uint64_t)&v20, v11, (uint64_t)&v14, (uint64_t)&v12);
    uint64_t v10 = 1;
  }
  else
  {
    uint64_t v10 = 0;
  }
  google::protobuf::FieldDescriptor::DebugString(a2, v10, this, a3);
  if (*(unsigned char *)(a2 + 67)) {
    std::string::append(this, "}\n");
  }
}

void sub_1891E56BC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *google::protobuf::FieldDescriptor::FieldTypeNameDebugString(google::protobuf::FieldDescriptor *this, uint64_t a2)
{
  uint64_t v4 = *(std::once_flag::_State_type **)(a2 + 48);
  if (v4)
  {
    uint64_t v8 = a2;
    int v9 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v4, memory_order_acquire) != -1)
    {
      long long v11 = &v9;
      uint64_t v12 = &v8;
      uint64_t v10 = &v11;
      std::__call_once(v4, &v10, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v5 = *(_DWORD *)(a2 + 56);
  if (v5 == 14)
  {
    google::protobuf::FieldDescriptor::enum_type((google::protobuf::FieldDescriptor *)a2);
    return (void *)std::operator+<char>();
  }
  if (v5 == 11)
  {
    google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a2);
    return (void *)std::operator+<char>();
  }
  int v7 = *(std::once_flag::_State_type **)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = a2;
    int v9 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
    {
      long long v11 = &v9;
      uint64_t v12 = &v8;
      uint64_t v10 = &v11;
      std::__call_once(v7, &v10, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    int v5 = *(_DWORD *)(a2 + 56);
  }
  return std::string::basic_string[abi:ne180100]<0>(this, google::protobuf::FieldDescriptor::kTypeToName[v5]);
}

BOOL google::protobuf::anonymous namespace'::FormatBracketedOptions(uint64_t a1, const google::protobuf::Message *a2, uint64_t a3, std::string *a4)
{
  uint64_t v10 = 0;
  long long v11 = 0;
  uint64_t v12 = 0;
  {
    google::protobuf::Join<std::vector<std::string>>(", ", &v10, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::__split_buffer<std::string>::pointer p_p = &__p;
    }
    else {
      std::__split_buffer<std::string>::pointer p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    std::string::append(a4, (const std::string::value_type *)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  BOOL v7 = v10 != v11;
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v10;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  return v7;
}

void sub_1891E58A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  std::string __p = &a15;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::FileDescriptor::GetSourceLocation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v47 = *MEMORY[0x1E4F143B8];
  if (!a3)
  {
    LODWORD(__s) = 3;
    uint64_t v44 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    int v45 = 2966;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: out_location != nullptr: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__s);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  uint64_t v6 = *(void *)(a1 + 152);
  if (!v6) {
    return 0;
  }
  BOOL v7 = *(std::once_flag::_State_type **)(a1 + 144);
  v42[0] = v7;
  v42[1] = v6;
  int v41 = v42;
  if (atomic_load_explicit((atomic_ullong *volatile)v7 + 34, memory_order_acquire) != -1)
  {
    __s = (std::string::value_type *)google::protobuf::FileDescriptorTables::BuildLocationsByPath;
    uint64_t v44 = (const char *)&v41;
    v40.__r_.__value_.__r.__words[0] = (std::string::size_type)&__s;
    std::__call_once(v7 + 34, &v40, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(std::pair<google::protobuf::FileDescriptorTables const*,google::protobuf::SourceCodeInfo const*> *),std::pair<google::protobuf::FileDescriptorTables const*,google::protobuf::SourceCodeInfo const*> *&&>>);
  }
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  memset(&v40, 0, sizeof(v40));
  if (v8 != v9)
  {
    uint64_t v10 = 0;
    do
    {
      if (v10) {
        std::string::append(&v40, ",");
      }
      unint64_t v11 = *(unsigned int *)(v8 + v10);
      __s = (std::string::value_type *)&v45;
      uint64_t v12 = &v45;
      if ((v11 & 0x80000000) != 0)
      {
        LOBYTE(v45) = 45;
        unint64_t v11 = -(int)v11;
        uint64_t v12 = (int *)((char *)&v45 + 1);
      }
      uint64_t v44 = (const char *)(google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)v11, v12, (char *)a3)
                         - (unsigned char *)&v45);
      std::string::append(&v40, __s, (std::string::size_type)v44);
      v10 += 4;
    }
    while (v8 + v10 != v9);
  }
  unint64_t v13 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)(v7 + 38), (uint64_t)&v40);
  int8x8_t v14 = (int8x8_t)v7[36];
  if (v14)
  {
    unint64_t v15 = v13;
    uint8x8_t v16 = (uint8x8_t)vcnt_s8(v14);
    v16.i16[0] = vaddlv_u8(v16);
    unint64_t v17 = v16.u32[0];
    if (v16.u32[0] > 1uLL)
    {
      unint64_t v18 = v13;
      if (v13 >= *(void *)&v14) {
        unint64_t v18 = v13 % *(void *)&v14;
      }
    }
    else
    {
      unint64_t v18 = (*(void *)&v14 - 1) & v13;
    }
    int v19 = *(int8x8_t ***)(v7[35] + 8 * v18);
    if (v19)
    {
      uint64_t v20 = *v19;
      if (*v19)
      {
        uint64_t v21 = (uint64_t)(v7 + 39);
        do
        {
          int8x8_t v22 = v20[1];
          if (*(void *)&v22 == v15)
          {
            if (std::equal_to<std::string>::operator()[abi:ne180100](v21, (unsigned __int8 *)&v20[2], (unsigned __int8 *)&v40))
            {
              int8x8_t v14 = v20[5];
              goto LABEL_32;
            }
          }
          else
          {
            if (v17 > 1)
            {
              if (*(void *)&v22 >= *(void *)&v14) {
                *(void *)&v22 %= *(void *)&v14;
              }
            }
            else
            {
              *(void *)&v22 &= *(void *)&v14 - 1;
            }
            if (*(void *)&v22 != v18) {
              break;
            }
          }
          uint64_t v20 = (int8x8_t *)*v20;
        }
        while (v20);
      }
    }
    int8x8_t v14 = 0;
  }
LABEL_32:
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v40.__r_.__value_.__l.__data_);
    if (!*(void *)&v14) {
      return 0;
    }
  }
  else if (!*(void *)&v14)
  {
    return 0;
  }
  int v23 = *(_DWORD *)(*(void *)&v14 + 48);
  if ((v23 - 3) >= 2) {
    return 0;
  }
  uint64_t v24 = *(_DWORD **)(*(void *)&v14 + 56);
  *(_DWORD *)a3 = *v24;
  *(_DWORD *)(a3 + 8) = v24[1];
  *(_DWORD *)(a3 + 4) = v24[2 * (v23 != 3)];
  *(_DWORD *)(a3 + 12) = v24[v23 - 1];
  std::string::operator=((std::string *)(a3 + 16), (const std::string *)(*(void *)(*(void *)&v14 + 96) & 0xFFFFFFFFFFFFFFFELL));
  std::string::operator=((std::string *)(a3 + 40), (const std::string *)(*(void *)(*(void *)&v14 + 104) & 0xFFFFFFFFFFFFFFFELL));
  int v25 = *(std::string **)(a3 + 64);
  uint64_t v26 = *(void *)(*(void *)&v14 + 88);
  if (v26) {
    int v27 = (const std::string **)(v26 + 8);
  }
  else {
    int v27 = 0;
  }
  unint64_t v28 = *(int *)(*(void *)&v14 + 80);
  int v29 = (long long **)&v27[v28];
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a3 + 80) - (void)v25) >> 3) >= v28)
  {
    uint64_t v34 = *(std::string **)(a3 + 72);
    unint64_t v35 = 0xAAAAAAAAAAAAAAABLL * (((char *)v34 - (char *)v25) >> 3);
    if (v35 >= v28)
    {
      if (v28)
      {
        uint64_t v38 = 8 * v28;
        int v39 = *(std::string **)(a3 + 64);
        do
        {
          std::string::operator=(v25++, *v27++);
          ++v39;
          v38 -= 8;
        }
        while (v38);
        uint64_t v34 = *(std::string **)(a3 + 72);
      }
      else
      {
        int v39 = *(std::string **)(a3 + 64);
      }
      while (v34 != v39)
      {
        if (SHIBYTE(v34[-1].__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v34[-1].__r_.__value_.__l.__data_);
        }
        --v34;
      }
      *(void *)(a3 + 72) = v39;
      return 1;
    }
    if (v34 != v25)
    {
      uint64_t v36 = 0x5555555555555558 * (((char *)v34 - (char *)v25) >> 3);
      int v37 = v27;
      do
      {
        std::string::operator=(v25++, *v37++);
        v36 -= 8;
      }
      while (v36);
      int v25 = *(std::string **)(a3 + 72);
    }
    uint64_t v32 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,google::protobuf::internal::RepeatedPtrIterator<std::string const>,google::protobuf::internal::RepeatedPtrIterator<std::string const>,std::string*>(a3 + 80, (long long **)&v27[v35], v29, v25);
  }
  else
  {
    std::vector<std::string>::__vdeallocate((std::vector<std::string> *)(a3 + 64));
    if ((v28 & 0x80000000) != 0) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v30 = 0x5555555555555556 * ((uint64_t)(*(void *)(a3 + 80) - *(void *)(a3 + 64)) >> 3);
    if (v30 <= v28) {
      unint64_t v30 = v28;
    }
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a3 + 80) - *(void *)(a3 + 64)) >> 3) >= 0x555555555555555) {
      unint64_t v31 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v31 = v30;
    }
    std::vector<zilch::TrafficDynamicTile::Flow>::__vallocate[abi:ne180100]((void *)(a3 + 64), v31);
    uint64_t v32 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,google::protobuf::internal::RepeatedPtrIterator<std::string const>,google::protobuf::internal::RepeatedPtrIterator<std::string const>,std::string*>(a3 + 80, (long long **)v27, (long long **)&v27[v28], *(std::string **)(a3 + 72));
  }
  *(void *)(a3 + 72) = v32;
  return 1;
}

void sub_1891E5D64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  *(void *)(v27 + 72) = v28;
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::FieldDescriptor::is_packed(google::protobuf::FieldDescriptor *this)
{
  if (*((_DWORD *)this + 15) != 3) {
    return 0;
  }
  char v2 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v2)
  {
    int v5 = this;
    uint64_t v6 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v8[0] = &v6;
      v8[1] = &v5;
      BOOL v7 = v8;
      std::__call_once(v2, &v7, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)this + 14) - 13) > 0xFFFFFFFB) {
    return 0;
  }
  uint64_t v3 = *((void *)this + 15);
  if (*(_DWORD *)(*((void *)this + 5) + 60) != 2)
  {
    if (!v3 || (*(unsigned char *)(v3 + 40) & 2) == 0) {
      return 1;
    }
    return *(unsigned __int8 *)(v3 + 76) != 0;
  }
  if (v3) {
    return *(unsigned __int8 *)(v3 + 76) != 0;
  }
  return 0;
}

void google::protobuf::Descriptor::GetLocationPath(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 24);
  if (!v4)
  {
    uint64_t v10 = (void *)(a2 + 16);
    unint64_t v9 = *(void *)(a2 + 16);
    unint64_t v11 = *(_DWORD **)(a2 + 8);
    if ((unint64_t)v11 >= v9)
    {
      unint64_t v18 = *(_DWORD **)a2;
      uint64_t v19 = ((uint64_t)v11 - *(void *)a2) >> 2;
      unint64_t v20 = v19 + 1;
      if ((unint64_t)(v19 + 1) >> 62) {
        goto LABEL_70;
      }
      uint64_t v21 = v9 - (void)v18;
      if (v21 >> 1 > v20) {
        unint64_t v20 = v21 >> 1;
      }
      if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v22 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v22 = v20;
      }
      if (v22)
      {
        int v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>(a2 + 16, v22);
        unint64_t v18 = *(_DWORD **)a2;
        unint64_t v11 = *(_DWORD **)(a2 + 8);
      }
      else
      {
        int v23 = 0;
      }
      std::string v40 = &v23[4 * v19];
      int v41 = &v23[4 * v22];
      *(_DWORD *)std::string v40 = 4;
      uint64_t v8 = v40 + 4;
      while (v11 != v18)
      {
        int v42 = *--v11;
        *((_DWORD *)v40 - 1) = v42;
        v40 -= 4;
      }
      *(void *)a2 = v40;
      *(void *)(a2 + 8) = v8;
      *(void *)(a2 + 16) = v41;
      if (v18) {
        operator delete(v18);
      }
    }
    else
    {
      *unint64_t v11 = 4;
      uint64_t v8 = v11 + 1;
    }
    *(void *)(a2 + 8) = v8;
    uint64_t v43 = *(void *)(a1 + 24);
    if (v43) {
      uint64_t v44 = (void *)(v43 + 56);
    }
    else {
      uint64_t v44 = (void *)(*(void *)(a1 + 16) + 104);
    }
    int v29 = 954437177 * ((unint64_t)(a1 - *v44) >> 4);
    if ((unint64_t)v8 >= *v10)
    {
      unint64_t v30 = *(_DWORD **)a2;
      uint64_t v45 = ((uint64_t)v8 - *(void *)a2) >> 2;
      unint64_t v46 = v45 + 1;
      if (!((unint64_t)(v45 + 1) >> 62))
      {
        uint64_t v47 = *v10 - (void)v30;
        if (v47 >> 1 > v46) {
          unint64_t v46 = v47 >> 1;
        }
        if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v48 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v48 = v46;
        }
        if (v48)
        {
          int v49 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>(a2 + 16, v48);
          unint64_t v30 = *(_DWORD **)a2;
          uint64_t v8 = *(_DWORD **)(a2 + 8);
        }
        else
        {
          int v49 = 0;
        }
        uint64_t v36 = &v49[4 * v45];
        int v37 = &v49[4 * v48];
        *(_DWORD *)uint64_t v36 = v29;
        uint64_t v38 = v36 + 4;
        while (v8 != v30)
        {
          int v50 = *--v8;
          *((_DWORD *)v36 - 1) = v50;
          v36 -= 4;
        }
        goto LABEL_67;
      }
LABEL_70:
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
LABEL_54:
    *uint64_t v8 = v29;
    uint64_t v38 = v8 + 1;
    goto LABEL_69;
  }
  google::protobuf::Descriptor::GetLocationPath(v4, a2);
  uint64_t v6 = (void *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  BOOL v7 = *(_DWORD **)(a2 + 8);
  if ((unint64_t)v7 >= v5)
  {
    uint64_t v12 = *(_DWORD **)a2;
    uint64_t v13 = ((uint64_t)v7 - *(void *)a2) >> 2;
    unint64_t v14 = v13 + 1;
    if ((unint64_t)(v13 + 1) >> 62) {
      goto LABEL_70;
    }
    uint64_t v15 = v5 - (void)v12;
    if (v15 >> 1 > v14) {
      unint64_t v14 = v15 >> 1;
    }
    if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v16 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v16 = v14;
    }
    if (v16)
    {
      unint64_t v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>(a2 + 16, v16);
      uint64_t v12 = *(_DWORD **)a2;
      BOOL v7 = *(_DWORD **)(a2 + 8);
    }
    else
    {
      unint64_t v17 = 0;
    }
    uint64_t v24 = &v17[4 * v13];
    int v25 = &v17[4 * v16];
    *(_DWORD *)uint64_t v24 = 3;
    uint64_t v8 = v24 + 4;
    while (v7 != v12)
    {
      int v26 = *--v7;
      *((_DWORD *)v24 - 1) = v26;
      v24 -= 4;
    }
    *(void *)a2 = v24;
    *(void *)(a2 + 8) = v8;
    *(void *)(a2 + 16) = v25;
    if (v12) {
      operator delete(v12);
    }
  }
  else
  {
    *BOOL v7 = 3;
    uint64_t v8 = v7 + 1;
  }
  *(void *)(a2 + 8) = v8;
  uint64_t v27 = *(void *)(a1 + 24);
  if (v27) {
    uint64_t v28 = (void *)(v27 + 56);
  }
  else {
    uint64_t v28 = (void *)(*(void *)(a1 + 16) + 104);
  }
  int v29 = 954437177 * ((unint64_t)(a1 - *v28) >> 4);
  if ((unint64_t)v8 < *v6) {
    goto LABEL_54;
  }
  unint64_t v30 = *(_DWORD **)a2;
  uint64_t v31 = ((uint64_t)v8 - *(void *)a2) >> 2;
  unint64_t v32 = v31 + 1;
  if ((unint64_t)(v31 + 1) >> 62) {
    goto LABEL_70;
  }
  uint64_t v33 = *v6 - (void)v30;
  if (v33 >> 1 > v32) {
    unint64_t v32 = v33 >> 1;
  }
  if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v34 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v34 = v32;
  }
  if (v34)
  {
    unint64_t v35 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>(a2 + 16, v34);
    unint64_t v30 = *(_DWORD **)a2;
    uint64_t v8 = *(_DWORD **)(a2 + 8);
  }
  else
  {
    unint64_t v35 = 0;
  }
  uint64_t v36 = &v35[4 * v31];
  int v37 = &v35[4 * v34];
  *(_DWORD *)uint64_t v36 = v29;
  uint64_t v38 = v36 + 4;
  while (v8 != v30)
  {
    int v39 = *--v8;
    *((_DWORD *)v36 - 1) = v39;
    v36 -= 4;
  }
LABEL_67:
  *(void *)a2 = v36;
  *(void *)(a2 + 8) = v38;
  *(void *)(a2 + 16) = v37;
  if (v30) {
    operator delete(v30);
  }
LABEL_69:
  *(void *)(a2 + 8) = v38;
}

void google::protobuf::FieldDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  if (!*(unsigned char *)(a1 + 67))
  {
    google::protobuf::Descriptor::GetLocationPath(*(void *)(a1 + 80), (uint64_t)a2);
    uint64_t v10 = a2 + 2;
    unint64_t v9 = (unint64_t)a2[2];
    unint64_t v11 = a2[1];
    if ((unint64_t)v11 >= v9)
    {
      uint64_t v21 = *a2;
      uint64_t v22 = (v11 - *a2) >> 2;
      unint64_t v23 = v22 + 1;
      if ((unint64_t)(v22 + 1) >> 62) {
        goto LABEL_109;
      }
      uint64_t v24 = v9 - (void)v21;
      if (v24 >> 1 > v23) {
        unint64_t v23 = v24 >> 1;
      }
      if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v25 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v25 = v23;
      }
      if (v25)
      {
        int v26 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v25);
        uint64_t v21 = *a2;
        unint64_t v11 = a2[1];
      }
      else
      {
        int v26 = 0;
      }
      int v49 = &v26[4 * v22];
      int v50 = &v26[4 * v25];
      *(_DWORD *)int v49 = 2;
      uint64_t v8 = v49 + 4;
      while (v11 != v21)
      {
        int v51 = *((_DWORD *)v11 - 1);
        v11 -= 4;
        *((_DWORD *)v49 - 1) = v51;
        v49 -= 4;
      }
      *a2 = v49;
      a2[1] = v8;
      a2[2] = v50;
      if (v21) {
        operator delete(v21);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v11 = 2;
      uint64_t v8 = v11 + 4;
    }
    a2[1] = v8;
    if (*(unsigned char *)(a1 + 67))
    {
      uint64_t v52 = *(void *)(a1 + 96);
      if (v52) {
        uint64_t v53 = (void *)(v52 + 80);
      }
      else {
        uint64_t v53 = (void *)(*(void *)(a1 + 40) + 128);
      }
    }
    else
    {
      uint64_t v53 = (void *)(*(void *)(a1 + 80) + 40);
    }
    int v38 = 678152731 * ((unint64_t)(a1 - *v53) >> 3);
    if ((unint64_t)v8 < *v10) {
      goto LABEL_93;
    }
    int v39 = *a2;
    uint64_t v54 = (v8 - *a2) >> 2;
    unint64_t v55 = v54 + 1;
    if (!((unint64_t)(v54 + 1) >> 62))
    {
      uint64_t v56 = *v10 - (void)v39;
      if (v56 >> 1 > v55) {
        unint64_t v55 = v56 >> 1;
      }
      if ((unint64_t)v56 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v57 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v57 = v55;
      }
      if (v57)
      {
        uint64_t v58 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v57);
        int v39 = *a2;
        uint64_t v8 = a2[1];
      }
      else
      {
        uint64_t v58 = 0;
      }
      uint64_t v45 = &v58[4 * v54];
      unint64_t v46 = &v58[4 * v57];
      *(_DWORD *)uint64_t v45 = v38;
      uint64_t v47 = v45 + 4;
      while (v8 != v39)
      {
        int v59 = *((_DWORD *)v8 - 1);
        v8 -= 4;
        *((_DWORD *)v45 - 1) = v59;
        v45 -= 4;
      }
      goto LABEL_106;
    }
    goto LABEL_109;
  }
  uint64_t v4 = *(void *)(a1 + 96);
  if (!v4)
  {
    uint64_t v13 = a2 + 2;
    unint64_t v12 = (unint64_t)a2[2];
    unint64_t v14 = a2[1];
    if ((unint64_t)v14 >= v12)
    {
      uint64_t v27 = *a2;
      uint64_t v28 = (v14 - *a2) >> 2;
      unint64_t v29 = v28 + 1;
      if ((unint64_t)(v28 + 1) >> 62) {
        goto LABEL_109;
      }
      uint64_t v30 = v12 - (void)v27;
      if (v30 >> 1 > v29) {
        unint64_t v29 = v30 >> 1;
      }
      if ((unint64_t)v30 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v31 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v31 = v29;
      }
      if (v31)
      {
        unint64_t v32 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v31);
        uint64_t v27 = *a2;
        unint64_t v14 = a2[1];
      }
      else
      {
        unint64_t v32 = 0;
      }
      char v60 = &v32[4 * v28];
      std::string v61 = &v32[4 * v31];
      *(_DWORD *)char v60 = 7;
      uint64_t v8 = v60 + 4;
      while (v14 != v27)
      {
        int v62 = *((_DWORD *)v14 - 1);
        v14 -= 4;
        *((_DWORD *)v60 - 1) = v62;
        v60 -= 4;
      }
      *a2 = v60;
      a2[1] = v8;
      a2[2] = v61;
      if (v27) {
        operator delete(v27);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v14 = 7;
      uint64_t v8 = v14 + 4;
    }
    a2[1] = v8;
    if (*(unsigned char *)(a1 + 67))
    {
      uint64_t v63 = *(void *)(a1 + 96);
      if (v63) {
        uint64_t v64 = (void *)(v63 + 80);
      }
      else {
        uint64_t v64 = (void *)(*(void *)(a1 + 40) + 128);
      }
    }
    else
    {
      uint64_t v64 = (void *)(*(void *)(a1 + 80) + 40);
    }
    int v38 = 678152731 * ((unint64_t)(a1 - *v64) >> 3);
    if ((unint64_t)v8 < *v13)
    {
LABEL_93:
      *(_DWORD *)uint64_t v8 = v38;
      uint64_t v47 = v8 + 4;
      goto LABEL_108;
    }
    int v39 = *a2;
    uint64_t v65 = (v8 - *a2) >> 2;
    unint64_t v66 = v65 + 1;
    if (!((unint64_t)(v65 + 1) >> 62))
    {
      uint64_t v67 = *v13 - (void)v39;
      if (v67 >> 1 > v66) {
        unint64_t v66 = v67 >> 1;
      }
      if ((unint64_t)v67 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v68 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v68 = v66;
      }
      if (v68)
      {
        int v69 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v68);
        int v39 = *a2;
        uint64_t v8 = a2[1];
      }
      else
      {
        int v69 = 0;
      }
      uint64_t v45 = &v69[4 * v65];
      unint64_t v46 = &v69[4 * v68];
      *(_DWORD *)uint64_t v45 = v38;
      uint64_t v47 = v45 + 4;
      while (v8 != v39)
      {
        int v70 = *((_DWORD *)v8 - 1);
        v8 -= 4;
        *((_DWORD *)v45 - 1) = v70;
        v45 -= 4;
      }
      goto LABEL_106;
    }
LABEL_109:
    std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
  }
  google::protobuf::Descriptor::GetLocationPath(v4, (uint64_t)a2);
  uint64_t v6 = a2 + 2;
  unint64_t v5 = (unint64_t)a2[2];
  BOOL v7 = a2[1];
  if ((unint64_t)v7 >= v5)
  {
    uint64_t v15 = *a2;
    uint64_t v16 = (v7 - *a2) >> 2;
    unint64_t v17 = v16 + 1;
    if ((unint64_t)(v16 + 1) >> 62) {
      goto LABEL_109;
    }
    uint64_t v18 = v5 - (void)v15;
    if (v18 >> 1 > v17) {
      unint64_t v17 = v18 >> 1;
    }
    if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v19 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v19 = v17;
    }
    if (v19)
    {
      unint64_t v20 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v19);
      uint64_t v15 = *a2;
      BOOL v7 = a2[1];
    }
    else
    {
      unint64_t v20 = 0;
    }
    uint64_t v33 = &v20[4 * v16];
    unint64_t v34 = &v20[4 * v19];
    *(_DWORD *)uint64_t v33 = 6;
    uint64_t v8 = v33 + 4;
    while (v7 != v15)
    {
      int v35 = *((_DWORD *)v7 - 1);
      v7 -= 4;
      *((_DWORD *)v33 - 1) = v35;
      v33 -= 4;
    }
    *a2 = v33;
    a2[1] = v8;
    a2[2] = v34;
    if (v15) {
      operator delete(v15);
    }
  }
  else
  {
    *(_DWORD *)BOOL v7 = 6;
    uint64_t v8 = v7 + 4;
  }
  a2[1] = v8;
  if (*(unsigned char *)(a1 + 67))
  {
    uint64_t v36 = *(void *)(a1 + 96);
    if (v36) {
      int v37 = (void *)(v36 + 80);
    }
    else {
      int v37 = (void *)(*(void *)(a1 + 40) + 128);
    }
  }
  else
  {
    int v37 = (void *)(*(void *)(a1 + 80) + 40);
  }
  int v38 = 678152731 * ((unint64_t)(a1 - *v37) >> 3);
  if ((unint64_t)v8 < *v6) {
    goto LABEL_93;
  }
  int v39 = *a2;
  uint64_t v40 = (v8 - *a2) >> 2;
  unint64_t v41 = v40 + 1;
  if ((unint64_t)(v40 + 1) >> 62) {
    goto LABEL_109;
  }
  uint64_t v42 = *v6 - (void)v39;
  if (v42 >> 1 > v41) {
    unint64_t v41 = v42 >> 1;
  }
  if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v43 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v43 = v41;
  }
  if (v43)
  {
    uint64_t v44 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v43);
    int v39 = *a2;
    uint64_t v8 = a2[1];
  }
  else
  {
    uint64_t v44 = 0;
  }
  uint64_t v45 = &v44[4 * v40];
  unint64_t v46 = &v44[4 * v43];
  *(_DWORD *)uint64_t v45 = v38;
  uint64_t v47 = v45 + 4;
  while (v8 != v39)
  {
    int v48 = *((_DWORD *)v8 - 1);
    v8 -= 4;
    *((_DWORD *)v45 - 1) = v48;
    v45 -= 4;
  }
LABEL_106:
  *a2 = v45;
  a2[1] = v47;
  a2[2] = v46;
  if (v39) {
    operator delete(v39);
  }
LABEL_108:
  a2[1] = v47;
}

void google::protobuf::OneofDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  google::protobuf::Descriptor::GetLocationPath(*(void *)(a1 + 16), (uint64_t)a2);
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[1];
  if (v5 >= v4)
  {
    BOOL v7 = *a2;
    uint64_t v8 = (v5 - *a2) >> 2;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62) {
      goto LABEL_34;
    }
    uint64_t v10 = v4 - v7;
    if (v10 >> 1 > v9) {
      unint64_t v9 = v10 >> 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      unint64_t v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v11);
      BOOL v7 = *a2;
      unint64_t v5 = a2[1];
    }
    else
    {
      unint64_t v12 = 0;
    }
    uint64_t v13 = &v12[4 * v8];
    uint64_t v4 = &v12[4 * v11];
    *(_DWORD *)uint64_t v13 = 8;
    uint64_t v6 = v13 + 4;
    while (v5 != v7)
    {
      int v14 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - 1) = v14;
      v13 -= 4;
    }
    *a2 = v13;
    a2[1] = v6;
    a2[2] = v4;
    if (v7)
    {
      operator delete(v7);
      uint64_t v4 = a2[2];
    }
  }
  else
  {
    *(_DWORD *)unint64_t v5 = 8;
    uint64_t v6 = v5 + 4;
  }
  a2[1] = v6;
  int v15 = -1431655765 * ((unint64_t)(a1 - *(void *)(*(void *)(a1 + 16) + 48)) >> 4);
  if (v6 < v4)
  {
    *(_DWORD *)uint64_t v6 = v15;
    uint64_t v16 = v6 + 4;
    goto LABEL_33;
  }
  unint64_t v17 = *a2;
  uint64_t v18 = (v6 - *a2) >> 2;
  unint64_t v19 = v18 + 1;
  if ((unint64_t)(v18 + 1) >> 62) {
LABEL_34:
  }
    std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
  uint64_t v20 = v4 - v17;
  if (v20 >> 1 > v19) {
    unint64_t v19 = v20 >> 1;
  }
  if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v21 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v21 = v19;
  }
  if (v21)
  {
    uint64_t v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v21);
    unint64_t v17 = *a2;
    uint64_t v6 = a2[1];
  }
  else
  {
    uint64_t v22 = 0;
  }
  unint64_t v23 = &v22[4 * v18];
  uint64_t v24 = &v22[4 * v21];
  *(_DWORD *)unint64_t v23 = v15;
  uint64_t v16 = v23 + 4;
  while (v6 != v17)
  {
    int v25 = *((_DWORD *)v6 - 1);
    v6 -= 4;
    *((_DWORD *)v23 - 1) = v25;
    v23 -= 4;
  }
  *a2 = v23;
  a2[1] = v16;
  a2[2] = v24;
  if (v17) {
    operator delete(v17);
  }
LABEL_33:
  a2[1] = v16;
}

void google::protobuf::EnumDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  uint64_t v4 = *(void *)(a1 + 24);
  if (!v4)
  {
    uint64_t v10 = a2 + 2;
    unint64_t v9 = (unint64_t)a2[2];
    unint64_t v11 = a2[1];
    if ((unint64_t)v11 >= v9)
    {
      uint64_t v18 = *a2;
      uint64_t v19 = (v11 - *a2) >> 2;
      unint64_t v20 = v19 + 1;
      if ((unint64_t)(v19 + 1) >> 62) {
        goto LABEL_70;
      }
      uint64_t v21 = v9 - (void)v18;
      if (v21 >> 1 > v20) {
        unint64_t v20 = v21 >> 1;
      }
      if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v22 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v22 = v20;
      }
      if (v22)
      {
        unint64_t v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v22);
        uint64_t v18 = *a2;
        unint64_t v11 = a2[1];
      }
      else
      {
        unint64_t v23 = 0;
      }
      uint64_t v40 = &v23[4 * v19];
      unint64_t v41 = &v23[4 * v22];
      *(_DWORD *)uint64_t v40 = 5;
      uint64_t v8 = v40 + 4;
      while (v11 != v18)
      {
        int v42 = *((_DWORD *)v11 - 1);
        v11 -= 4;
        *((_DWORD *)v40 - 1) = v42;
        v40 -= 4;
      }
      *a2 = v40;
      a2[1] = v8;
      a2[2] = v41;
      if (v18) {
        operator delete(v18);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v11 = 5;
      uint64_t v8 = v11 + 4;
    }
    a2[1] = v8;
    uint64_t v43 = *(void *)(a1 + 24);
    if (v43) {
      uint64_t v44 = (void *)(v43 + 64);
    }
    else {
      uint64_t v44 = (void *)(*(void *)(a1 + 16) + 112);
    }
    int v29 = -858993459 * ((unint64_t)(a1 - *v44) >> 4);
    if ((unint64_t)v8 >= *v10)
    {
      uint64_t v30 = *a2;
      uint64_t v45 = (v8 - *a2) >> 2;
      unint64_t v46 = v45 + 1;
      if (!((unint64_t)(v45 + 1) >> 62))
      {
        uint64_t v47 = *v10 - (void)v30;
        if (v47 >> 1 > v46) {
          unint64_t v46 = v47 >> 1;
        }
        if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v48 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v48 = v46;
        }
        if (v48)
        {
          int v49 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v48);
          uint64_t v30 = *a2;
          uint64_t v8 = a2[1];
        }
        else
        {
          int v49 = 0;
        }
        uint64_t v36 = &v49[4 * v45];
        int v37 = &v49[4 * v48];
        *(_DWORD *)uint64_t v36 = v29;
        int v38 = v36 + 4;
        while (v8 != v30)
        {
          int v50 = *((_DWORD *)v8 - 1);
          v8 -= 4;
          *((_DWORD *)v36 - 1) = v50;
          v36 -= 4;
        }
        goto LABEL_67;
      }
LABEL_70:
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
LABEL_54:
    *(_DWORD *)uint64_t v8 = v29;
    int v38 = v8 + 4;
    goto LABEL_69;
  }
  google::protobuf::Descriptor::GetLocationPath(v4, (uint64_t)a2);
  uint64_t v6 = a2 + 2;
  unint64_t v5 = (unint64_t)a2[2];
  BOOL v7 = a2[1];
  if ((unint64_t)v7 >= v5)
  {
    unint64_t v12 = *a2;
    uint64_t v13 = (v7 - *a2) >> 2;
    unint64_t v14 = v13 + 1;
    if ((unint64_t)(v13 + 1) >> 62) {
      goto LABEL_70;
    }
    uint64_t v15 = v5 - (void)v12;
    if (v15 >> 1 > v14) {
      unint64_t v14 = v15 >> 1;
    }
    if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v16 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v16 = v14;
    }
    if (v16)
    {
      unint64_t v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v16);
      unint64_t v12 = *a2;
      BOOL v7 = a2[1];
    }
    else
    {
      unint64_t v17 = 0;
    }
    uint64_t v24 = &v17[4 * v13];
    int v25 = &v17[4 * v16];
    *(_DWORD *)uint64_t v24 = 4;
    uint64_t v8 = v24 + 4;
    while (v7 != v12)
    {
      int v26 = *((_DWORD *)v7 - 1);
      v7 -= 4;
      *((_DWORD *)v24 - 1) = v26;
      v24 -= 4;
    }
    *a2 = v24;
    a2[1] = v8;
    a2[2] = v25;
    if (v12) {
      operator delete(v12);
    }
  }
  else
  {
    *(_DWORD *)BOOL v7 = 4;
    uint64_t v8 = v7 + 4;
  }
  a2[1] = v8;
  uint64_t v27 = *(void *)(a1 + 24);
  if (v27) {
    uint64_t v28 = (void *)(v27 + 64);
  }
  else {
    uint64_t v28 = (void *)(*(void *)(a1 + 16) + 112);
  }
  int v29 = -858993459 * ((unint64_t)(a1 - *v28) >> 4);
  if ((unint64_t)v8 < *v6) {
    goto LABEL_54;
  }
  uint64_t v30 = *a2;
  uint64_t v31 = (v8 - *a2) >> 2;
  unint64_t v32 = v31 + 1;
  if ((unint64_t)(v31 + 1) >> 62) {
    goto LABEL_70;
  }
  uint64_t v33 = *v6 - (void)v30;
  if (v33 >> 1 > v32) {
    unint64_t v32 = v33 >> 1;
  }
  if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v34 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v34 = v32;
  }
  if (v34)
  {
    int v35 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v34);
    uint64_t v30 = *a2;
    uint64_t v8 = a2[1];
  }
  else
  {
    int v35 = 0;
  }
  uint64_t v36 = &v35[4 * v31];
  int v37 = &v35[4 * v34];
  *(_DWORD *)uint64_t v36 = v29;
  int v38 = v36 + 4;
  while (v8 != v30)
  {
    int v39 = *((_DWORD *)v8 - 1);
    v8 -= 4;
    *((_DWORD *)v36 - 1) = v39;
    v36 -= 4;
  }
LABEL_67:
  *a2 = v36;
  a2[1] = v38;
  a2[2] = v37;
  if (v30) {
    operator delete(v30);
  }
LABEL_69:
  a2[1] = v38;
}

void google::protobuf::ServiceDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  unint64_t v5 = a2 + 2;
  uint64_t v4 = a2[2];
  uint64_t v6 = a2[1];
  if (v6 >= v4)
  {
    uint64_t v8 = *a2;
    uint64_t v9 = (v6 - *a2) >> 2;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 62) {
      goto LABEL_34;
    }
    uint64_t v11 = v4 - v8;
    if (v11 >> 1 > v10) {
      unint64_t v10 = v11 >> 1;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v12 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      uint64_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)v5, v12);
      uint64_t v8 = *a2;
      uint64_t v6 = a2[1];
    }
    else
    {
      uint64_t v13 = 0;
    }
    unint64_t v14 = &v13[4 * v9];
    uint64_t v4 = &v13[4 * v12];
    *(_DWORD *)unint64_t v14 = 6;
    BOOL v7 = v14 + 4;
    while (v6 != v8)
    {
      int v15 = *((_DWORD *)v6 - 1);
      v6 -= 4;
      *((_DWORD *)v14 - 1) = v15;
      v14 -= 4;
    }
    *a2 = v14;
    a2[1] = v7;
    a2[2] = v4;
    if (v8)
    {
      operator delete(v8);
      uint64_t v4 = *v5;
    }
  }
  else
  {
    *(_DWORD *)uint64_t v6 = 6;
    BOOL v7 = v6 + 4;
  }
  a2[1] = v7;
  int v16 = -1431655765 * ((unint64_t)(a1 - *(void *)(*(void *)(a1 + 16) + 120)) >> 4);
  if (v7 < v4)
  {
    *(_DWORD *)BOOL v7 = v16;
    unint64_t v17 = v7 + 4;
    goto LABEL_33;
  }
  uint64_t v18 = *a2;
  uint64_t v19 = (v7 - *a2) >> 2;
  unint64_t v20 = v19 + 1;
  if ((unint64_t)(v19 + 1) >> 62) {
LABEL_34:
  }
    std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
  uint64_t v21 = v4 - v18;
  if (v21 >> 1 > v20) {
    unint64_t v20 = v21 >> 1;
  }
  if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v22 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v22 = v20;
  }
  if (v22)
  {
    unint64_t v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)v5, v22);
    uint64_t v18 = *a2;
    BOOL v7 = a2[1];
  }
  else
  {
    unint64_t v23 = 0;
  }
  uint64_t v24 = &v23[4 * v19];
  int v25 = &v23[4 * v22];
  *(_DWORD *)uint64_t v24 = v16;
  unint64_t v17 = v24 + 4;
  while (v7 != v18)
  {
    int v26 = *((_DWORD *)v7 - 1);
    v7 -= 4;
    *((_DWORD *)v24 - 1) = v26;
    v24 -= 4;
  }
  *a2 = v24;
  a2[1] = v17;
  a2[2] = v25;
  if (v18) {
    operator delete(v18);
  }
LABEL_33:
  a2[1] = v17;
}

void google::protobuf::EnumValueDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  google::protobuf::EnumDescriptor::GetLocationPath(*(void *)(a1 + 24), a2);
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[1];
  if (v5 >= v4)
  {
    BOOL v7 = *a2;
    uint64_t v8 = (v5 - *a2) >> 2;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62) {
      goto LABEL_34;
    }
    uint64_t v10 = v4 - v7;
    if (v10 >> 1 > v9) {
      unint64_t v9 = v10 >> 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      unint64_t v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v11);
      BOOL v7 = *a2;
      unint64_t v5 = a2[1];
    }
    else
    {
      unint64_t v12 = 0;
    }
    uint64_t v13 = &v12[4 * v8];
    uint64_t v4 = &v12[4 * v11];
    *(_DWORD *)uint64_t v13 = 2;
    uint64_t v6 = v13 + 4;
    while (v5 != v7)
    {
      int v14 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - 1) = v14;
      v13 -= 4;
    }
    *a2 = v13;
    a2[1] = v6;
    a2[2] = v4;
    if (v7)
    {
      operator delete(v7);
      uint64_t v4 = a2[2];
    }
  }
  else
  {
    *(_DWORD *)unint64_t v5 = 2;
    uint64_t v6 = v5 + 4;
  }
  a2[1] = v6;
  int v15 = -858993459 * ((unint64_t)(a1 - *(void *)(*(void *)(a1 + 24) + 48)) >> 3);
  if (v6 < v4)
  {
    *(_DWORD *)uint64_t v6 = v15;
    int v16 = v6 + 4;
    goto LABEL_33;
  }
  unint64_t v17 = *a2;
  uint64_t v18 = (v6 - *a2) >> 2;
  unint64_t v19 = v18 + 1;
  if ((unint64_t)(v18 + 1) >> 62) {
LABEL_34:
  }
    std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
  uint64_t v20 = v4 - v17;
  if (v20 >> 1 > v19) {
    unint64_t v19 = v20 >> 1;
  }
  if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v21 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v21 = v19;
  }
  if (v21)
  {
    unint64_t v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>((uint64_t)(a2 + 2), v21);
    unint64_t v17 = *a2;
    uint64_t v6 = a2[1];
  }
  else
  {
    unint64_t v22 = 0;
  }
  unint64_t v23 = &v22[4 * v18];
  uint64_t v24 = &v22[4 * v21];
  *(_DWORD *)unint64_t v23 = v15;
  int v16 = v23 + 4;
  while (v6 != v17)
  {
    int v25 = *((_DWORD *)v6 - 1);
    v6 -= 4;
    *((_DWORD *)v23 - 1) = v25;
    v23 -= 4;
  }
  *a2 = v23;
  a2[1] = v16;
  a2[2] = v24;
  if (v17) {
    operator delete(v17);
  }
LABEL_33:
  a2[1] = v16;
}

void **std::vector<google::protobuf::anonymous namespace'::OptionsToInterpret>::~vector[abi:ne180100](void **a1)
{
  char v2 = *a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t)a1[1];
    uint64_t v4 = *a1;
    if ((void *)v3 != v2)
    {
      do
      {
        v3 -= 88;
      }
      while ((void *)v3 != v2);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void google::protobuf::DescriptorBuilder::~DescriptorBuilder(void **this)
{
  if (*((char *)this + 199) < 0) {
    operator delete(this[22]);
  }
  if (*((char *)this + 175) < 0) {
    operator delete(this[19]);
  }
  std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::destroy(this[16]);
  std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::destroy(this[13]);
  if (*((char *)this + 79) < 0) {
    operator delete(this[7]);
  }
}

void google::protobuf::DescriptorBuilder::AddError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v8 + 16))(v8, a1 + 56, a2, a3, a4, a5);
  }
  else
  {
    if (!*(unsigned char *)(a1 + 48))
    {
      int v18 = 2;
      unint64_t v19 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
      int v20 = 3623;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Invalid proto descriptor for file \"");
      int v9 = *(char *)(a1 + 79);
      uint64_t v10 = v9 >= 0 ? (const std::string::value_type *)(a1 + 56) : *(const std::string::value_type **)(a1 + 56);
      std::string::size_type v11 = v9 >= 0 ? *(unsigned __int8 *)(a1 + 79) : *(void *)(a1 + 64);
      std::string::append(&__p, v10, v11);
      std::string::append(&__p, "\":");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v18);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    int v18 = 2;
    unint64_t v19 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    int v20 = 3626;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "  ");
    int v12 = *(char *)(a2 + 23);
    if (v12 >= 0) {
      uint64_t v13 = (const std::string::value_type *)a2;
    }
    else {
      uint64_t v13 = *(const std::string::value_type **)a2;
    }
    if (v12 >= 0) {
      std::string::size_type v14 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      std::string::size_type v14 = *(void *)(a2 + 8);
    }
    std::string::append(&__p, v13, v14);
    std::string::append(&__p, ": ");
    int v15 = *(char *)(a5 + 23);
    if (v15 >= 0) {
      int v16 = (const std::string::value_type *)a5;
    }
    else {
      int v16 = *(const std::string::value_type **)a5;
    }
    if (v15 >= 0) {
      std::string::size_type v17 = *(unsigned __int8 *)(a5 + 23);
    }
    else {
      std::string::size_type v17 = *(void *)(a5 + 8);
    }
    std::string::append(&__p, v16, v17);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v18);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  *(unsigned char *)(a1 + 48) = 1;
}

void sub_1891E719C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *__s)
{
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (uint64_t)__p);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1891E7234(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddNotDefinedError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(void *)(a1 + 144))
  {
    std::operator+<char>();
    char v10 = std::string::append(&v47, "\" seems to be defined in \"");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    uint64_t v12 = **(void **)(a1 + 144);
    int v13 = *(char *)(v12 + 23);
    if (v13 >= 0) {
      std::string::size_type v14 = **(const std::string::value_type ***)(a1 + 144);
    }
    else {
      std::string::size_type v14 = *(const std::string::value_type **)v12;
    }
    if (v13 >= 0) {
      std::string::size_type v15 = *(unsigned __int8 *)(v12 + 23);
    }
    else {
      std::string::size_type v15 = *(void *)(v12 + 8);
    }
    int v16 = std::string::append(&v48, v14, v15);
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    int v18 = std::string::append(&v49, "\", which is not imported by \"");
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    int v20 = *(char *)(a1 + 79);
    if (v20 >= 0) {
      unint64_t v21 = (const std::string::value_type *)(a1 + 56);
    }
    else {
      unint64_t v21 = *(const std::string::value_type **)(a1 + 56);
    }
    if (v20 >= 0) {
      std::string::size_type v22 = *(unsigned __int8 *)(a1 + 79);
    }
    else {
      std::string::size_type v22 = *(void *)(a1 + 64);
    }
    unint64_t v23 = std::string::append(&v50, v21, v22);
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    int v25 = std::string::append(&v51, "\".  To use it here, please add the necessary import.");
    long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
    std::string::size_type v53 = v25->__r_.__value_.__r.__words[2];
    long long v52 = v26;
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (uint64_t)&v52);
    if (SHIBYTE(v53) < 0) {
      operator delete((void *)v52);
    }
    if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v51.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v50.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v49.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v48.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v47.__r_.__value_.__l.__data_);
    }
    LOBYTE(v27) = *(unsigned char *)(a1 + 199);
LABEL_27:
    if ((v27 & 0x80) != 0)
    {
      if (!*(void *)(a1 + 184)) {
        return;
      }
    }
    else if (!(_BYTE)v27)
    {
      return;
    }
    std::operator+<char>();
    uint64_t v28 = std::string::append(&v47, "\" is resolved to \"");
    long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    int v30 = *(char *)(a1 + 199);
    if (v30 >= 0) {
      uint64_t v31 = (const std::string::value_type *)(a1 + 176);
    }
    else {
      uint64_t v31 = *(const std::string::value_type **)(a1 + 176);
    }
    if (v30 >= 0) {
      std::string::size_type v32 = *(unsigned __int8 *)(a1 + 199);
    }
    else {
      std::string::size_type v32 = *(void *)(a1 + 184);
    }
    uint64_t v33 = std::string::append(&v48, v31, v32);
    long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v34;
    v33->__r_.__value_.__l.__size_ = 0;
    v33->__r_.__value_.__r.__words[2] = 0;
    v33->__r_.__value_.__r.__words[0] = 0;
    int v35 = std::string::append(&v49, "\", which is not defined. The innermost scope is searched first in name resolution. Consider using a leading '.'(i.e., \".");
    long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v36;
    v35->__r_.__value_.__l.__size_ = 0;
    v35->__r_.__value_.__r.__words[2] = 0;
    v35->__r_.__value_.__r.__words[0] = 0;
    int v37 = *(char *)(a5 + 23);
    if (v37 >= 0) {
      int v38 = (const std::string::value_type *)a5;
    }
    else {
      int v38 = *(const std::string::value_type **)a5;
    }
    if (v37 >= 0) {
      std::string::size_type v39 = *(unsigned __int8 *)(a5 + 23);
    }
    else {
      std::string::size_type v39 = *(void *)(a5 + 8);
    }
    uint64_t v40 = std::string::append(&v50, v38, v39);
    long long v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v41;
    v40->__r_.__value_.__l.__size_ = 0;
    v40->__r_.__value_.__r.__words[2] = 0;
    v40->__r_.__value_.__r.__words[0] = 0;
    int v42 = std::string::append(&v51, "\") to start from the outermost scope.");
    long long v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
    std::string::size_type v53 = v42->__r_.__value_.__r.__words[2];
    long long v52 = v43;
    v42->__r_.__value_.__l.__size_ = 0;
    v42->__r_.__value_.__r.__words[2] = 0;
    v42->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (uint64_t)&v52);
    if (SHIBYTE(v53) < 0) {
      operator delete((void *)v52);
    }
    if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v51.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v50.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v49.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v48.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
    {
      uint64_t v44 = (void *)v47.__r_.__value_.__r.__words[0];
LABEL_63:
      operator delete(v44);
      return;
    }
    return;
  }
  int v27 = *(char *)(a1 + 199);
  if (v27 < 0)
  {
    if (*(void *)(a1 + 184)) {
      goto LABEL_27;
    }
  }
  else if (*(unsigned char *)(a1 + 199))
  {
    goto LABEL_27;
  }
  std::operator+<char>();
  uint64_t v45 = std::string::append(&v51, "\" is not defined.");
  long long v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
  std::string::size_type v53 = v45->__r_.__value_.__r.__words[2];
  long long v52 = v46;
  v45->__r_.__value_.__l.__size_ = 0;
  v45->__r_.__value_.__r.__words[2] = 0;
  v45->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (uint64_t)&v52);
  if (SHIBYTE(v53) < 0) {
    operator delete((void *)v52);
  }
  if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
  {
    uint64_t v44 = (void *)v51.__r_.__value_.__r.__words[0];
    goto LABEL_63;
  }
}

void sub_1891E7654(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (*(char *)(v42 - 73) < 0) {
    operator delete(*(void **)(v42 - 96));
  }
  if (a42 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddWarning(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = a1 + 56;
    int v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v7 + 24);
    uint64_t v10 = *(void *)(a1 + 16);
    v9(v10, v8, a2, a3, a4, a5);
  }
  else
  {
    int v23 = 1;
    long long v24 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    int v25 = 3677;
    memset(&__p, 0, sizeof(__p));
    int v13 = *(const std::string::value_type **)(a1 + 56);
    uint64_t v11 = a1 + 56;
    uint64_t v12 = v13;
    int v14 = *(char *)(v11 + 23);
    if (v14 >= 0) {
      std::string::size_type v15 = (const std::string::value_type *)v11;
    }
    else {
      std::string::size_type v15 = v12;
    }
    if (v14 >= 0) {
      std::string::size_type v16 = *(unsigned __int8 *)(v11 + 23);
    }
    else {
      std::string::size_type v16 = *(void *)(v11 + 8);
    }
    std::string::append(&__p, v15, v16);
    std::string::append(&__p, " ");
    int v17 = *(char *)(a2 + 23);
    if (v17 >= 0) {
      int v18 = (const std::string::value_type *)a2;
    }
    else {
      int v18 = *(const std::string::value_type **)a2;
    }
    if (v17 >= 0) {
      std::string::size_type v19 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      std::string::size_type v19 = *(void *)(a2 + 8);
    }
    std::string::append(&__p, v18, v19);
    std::string::append(&__p, ": ");
    int v20 = *(char *)(a5 + 23);
    if (v20 >= 0) {
      unint64_t v21 = (const std::string::value_type *)a5;
    }
    else {
      unint64_t v21 = *(const std::string::value_type **)a5;
    }
    if (v20 >= 0) {
      std::string::size_type v22 = *(unsigned __int8 *)(a5 + 23);
    }
    else {
      std::string::size_type v22 = *(void *)(a5 + 8);
    }
    std::string::append(&__p, v21, v22);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v23);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1891E788C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::DescriptorBuilder::IsInPackage(uint64_t a1, uint64_t a2, const char *a3)
{
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(__s1, *(uint64_t **)(a1 + 8), a3);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&__s2, (uint64_t *)a2, v5);
  if ((uint64_t)__s1[1] < (uint64_t)__n || memcmp(__s1[0], __s2, __n)) {
    return 0;
  }
  uint64_t v7 = *(uint64_t **)(a1 + 8);
  if (*((char *)v7 + 23) < 0) {
    uint64_t v8 = v7[1];
  }
  else {
    uint64_t v8 = *((unsigned __int8 *)v7 + 23);
  }
  if (*(char *)(a2 + 23) < 0) {
    uint64_t v9 = *(void *)(a2 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(a2 + 23);
  }
  if (v8 == v9) {
    return 1;
  }
  if ((*((unsigned char *)v7 + 23) & 0x80) != 0) {
    uint64_t v7 = (uint64_t *)*v7;
  }
  return *((unsigned char *)v7 + v9) == 46;
}

uint64_t google::protobuf::DescriptorBuilder::RecordPublicDependencies(uint64_t this, const google::protobuf::FileDescriptor *a2)
{
  if (a2)
  {
    uint64_t v3 = (google::protobuf::DescriptorBuilder *)this;
    this = std::__tree<google::protobuf::FileDescriptor const*>::__emplace_unique_key_args<google::protobuf::FileDescriptor const*,google::protobuf::FileDescriptor const* const&>((uint64_t **)(this + 96), (unint64_t)a2, (uint64_t)a2);
    if ((this & 1) != 0 && *((int *)a2 + 9) >= 1)
    {
      uint64_t v4 = 0;
      do
      {
        unint64_t v5 = (const google::protobuf::FileDescriptor *)google::protobuf::FileDescriptor::dependency(a2, *(_DWORD *)(*((void *)a2 + 11) + 4 * v4));
        this = google::protobuf::DescriptorBuilder::RecordPublicDependencies(v3, v5);
        ++v4;
      }
      while (v4 < *((int *)a2 + 9));
    }
  }
  return this;
}

unint64_t google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper(void *a1, uint64_t a2, uint64_t *a3, int a4)
{
  if (*a1 == a2)
  {
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = *(std::mutex **)a2;
    if (*(void *)a2)
    {
      std::mutex::lock(*(std::mutex **)a2);
      char v9 = 0;
      goto LABEL_6;
    }
  }
  char v9 = 1;
LABEL_6:
  uint64_t v10 = *(void *)(a2 + 32);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v25, a3, (const char *)a3);
  long long v26 = v25;
  uint64_t v11 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((void *)(v10 + 304), (char **)&v26);
  if (v11)
  {
    int v13 = v11 + 4;
  }
  else
  {
    int v13 = &qword_1EB29F2E8;
  }
  unsigned int v14 = *(_DWORD *)v13;
  unint64_t v15 = *((unsigned int *)v13 + 1);
  if (*(_DWORD *)v13) {
    goto LABEL_10;
  }
  uint64_t v17 = *(void *)(a2 + 24);
  if (v17)
  {
    unint64_t SymbolNotEnforcingDepsHelper = google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper(a1, v17, a3, 1);
    unsigned int v14 = SymbolNotEnforcingDepsHelper;
    unint64_t v15 = HIDWORD(SymbolNotEnforcingDepsHelper);
    if (SymbolNotEnforcingDepsHelper) {
      goto LABEL_10;
    }
  }
  else
  {
    unsigned int v14 = 0;
  }
  if (a4)
  {
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v24, a3, v12);
    if (google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase(a2, v24[0], v24[1]))
    {
      uint64_t v20 = *(void *)(a2 + 32);
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v23, a3, v19);
      long long v26 = v23;
      unint64_t v21 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((void *)(v20 + 304), (char **)&v26);
      if (v21)
      {
        std::string::size_type v22 = v21 + 4;
      }
      else
      {
        std::string::size_type v22 = &qword_1EB29F2E8;
      }
      unsigned int v14 = *(_DWORD *)v22;
      unint64_t v15 = *((unsigned int *)v22 + 1);
    }
    else
    {
      unsigned int v14 = 0;
    }
  }
LABEL_10:
  if ((v9 & 1) == 0) {
    std::mutex::unlock(v8);
  }
  return v14 | (v15 << 32);
}

void sub_1891E7B80(_Unwind_Exception *exception_object)
{
  if ((v2 & 1) == 0) {
    std::mutex::unlock(v1);
  }
  _Unwind_Resume(exception_object);
}

unint64_t google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDeps(uint64_t a1, uint64_t *a2, int a3)
{
  unint64_t SymbolNotEnforcingDepsHelper = google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper((void *)a1, *(void *)a1, a2, a3);
  v10[0] = SymbolNotEnforcingDepsHelper;
  v10[1] = v5;
  unint64_t File = google::protobuf::Symbol::GetFile((google::protobuf::Symbol *)v10);
  if (File == *(void *)(a1 + 80))
  {
LABEL_8:
    std::__tree<google::protobuf::FileDescriptor const*>::__erase_unique<google::protobuf::FileDescriptor const*>((uint64_t **)(a1 + 120), File);
  }
  else
  {
    for (uint64_t i = *(void **)(a1 + 104); i; uint64_t i = (void *)*i)
    {
      unint64_t v8 = i[4];
      if (File >= v8)
      {
        if (v8 >= File) {
          goto LABEL_8;
        }
        ++i;
      }
    }
  }
  return SymbolNotEnforcingDepsHelper;
}

uint64_t google::protobuf::DescriptorBuilder::FindSymbol(uint64_t a1, std::string *a2, int a3)
{
  unint64_t SymbolNotEnforcingDeps = google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDeps(a1, (uint64_t *)a2, a3);
  v21[0] = SymbolNotEnforcingDeps;
  v21[1] = v6;
  if (SymbolNotEnforcingDeps)
  {
    if (*(unsigned char *)(*(void *)a1 + 40))
    {
      unint64_t File = google::protobuf::Symbol::GetFile((google::protobuf::Symbol *)v21);
      uint64_t v9 = *(void *)(a1 + 80);
      if (File != v9)
      {
        uint64_t v11 = (void *)(a1 + 104);
        for (uint64_t i = *(void **)(a1 + 104); i; uint64_t i = (void *)*i)
        {
          unint64_t v12 = i[4];
          if (File >= v12)
          {
            if (v12 >= File) {
              return SymbolNotEnforcingDeps;
            }
            ++i;
          }
        }
        if (SymbolNotEnforcingDeps != 8) {
          goto LABEL_20;
        }
        if (google::protobuf::DescriptorBuilder::IsInPackage(v9, (uint64_t)a2, v7)) {
          return SymbolNotEnforcingDeps;
        }
        unsigned int v14 = *(void **)(a1 + 96);
        if (v14 == v11)
        {
LABEL_20:
          *(void *)(a1 + 144) = File;
          std::string::size_type v19 = std::string::operator=((std::string *)(a1 + 152), a2);
          return qword_1EB29F2E8;
        }
        while (1)
        {
          uint64_t v15 = v14[4];
          if (v15)
          {
            if (google::protobuf::DescriptorBuilder::IsInPackage(v15, (uint64_t)a2, v13)) {
              break;
            }
          }
          std::string::size_type v16 = (void *)v14[1];
          if (v16)
          {
            do
            {
              uint64_t v17 = v16;
              std::string::size_type v16 = (void *)*v16;
            }
            while (v16);
          }
          else
          {
            do
            {
              uint64_t v17 = (void *)v14[2];
              BOOL v18 = *v17 == (void)v14;
              unsigned int v14 = v17;
            }
            while (!v18);
          }
          unsigned int v14 = v17;
          if (v17 == v11) {
            goto LABEL_20;
          }
        }
      }
    }
  }
  return SymbolNotEnforcingDeps;
}

void google::protobuf::anonymous namespace'::kNullSymbol(google::protobuf::_anonymous_namespace_ *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29F2C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1EB29F2C0))
  {
    LODWORD(qword_1EB29F2E8) = 0;
    qword_1EB29F2F0 = 0;
    __cxa_guard_release(&qword_1EB29F2C0);
  }
}

unint64_t google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder(uint64_t a1, std::string *__str, uint64_t a3, int a4, int a5)
{
  *(void *)(a1 + 144) = 0;
  if (*(char *)(a1 + 199) < 0)
  {
    **(unsigned char **)(a1 + 176) = 0;
    *(void *)(a1 + 184) = 0;
  }
  else
  {
    *(unsigned char *)(a1 + 176) = 0;
    *(unsigned char *)(a1 + 199) = 0;
  }
  if ((SHIBYTE(__str->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    uint64_t v10 = __str;
    if (!*((unsigned char *)&__str->__r_.__value_.__s + 23)) {
      goto LABEL_13;
    }
LABEL_9:
    if (v10->__r_.__value_.__s.__data_[0] == 46)
    {
      std::string::basic_string(&v24, __str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&__stra);
      uint64_t Symbol = google::protobuf::DescriptorBuilder::FindSymbol(a1, &v24, a5);
      if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v24.__r_.__value_.__l.__data_);
      }
      unsigned int v12 = Symbol;
      return Symbol & 0xFFFFFFFF00000000 | v12;
    }
    goto LABEL_13;
  }
  if (__str->__r_.__value_.__l.__size_)
  {
    uint64_t v10 = (std::string *)__str->__r_.__value_.__r.__words[0];
    goto LABEL_9;
  }
LABEL_13:
  std::string::size_type v13 = std::string::find(__str, 46, 0);
  memset(&v24, 0, sizeof(v24));
  if (v13 == -1)
  {
    std::string::operator=(&v24, __str);
  }
  else
  {
    std::string::basic_string(&__stra, __str, 0, v13, (std::allocator<char> *)&v25);
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v24.__r_.__value_.__l.__data_);
    }
    std::string v24 = __stra;
  }
  if (*(char *)(a3 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__stra, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string __stra = *(std::string *)a3;
  }
  while (1)
  {
    std::string::size_type v14 = std::string::rfind(&__stra, 46, 0xFFFFFFFFFFFFFFFFLL);
    if (v14 == -1)
    {
      uint64_t Symbol = google::protobuf::DescriptorBuilder::FindSymbol(a1, __str, a5);
      goto LABEL_48;
    }
    std::string::erase(&__stra, v14, 0xFFFFFFFFFFFFFFFFLL);
    std::string::size_type v15 = (__stra.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? HIBYTE(__stra.__r_.__value_.__r.__words[2])
        : __stra.__r_.__value_.__l.__size_;
    std::string::append(&__stra, 1uLL, 46);
    std::string::size_type v16 = (v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &v24
        : (std::string *)v24.__r_.__value_.__r.__words[0];
    std::string::size_type v17 = (v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? HIBYTE(v24.__r_.__value_.__r.__words[2])
        : v24.__r_.__value_.__l.__size_;
    std::string::append(&__stra, (const std::string::value_type *)v16, v17);
    uint64_t v18 = google::protobuf::DescriptorBuilder::FindSymbol(a1, &__stra, a5);
    uint64_t Symbol = v18;
    if (v18) {
      break;
    }
LABEL_44:
    std::string::erase(&__stra, v15, 0xFFFFFFFFFFFFFFFFLL);
  }
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v24.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v24.__r_.__value_.__l.__size_;
  }
  std::string::size_type v20 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  if ((v20 & 0x80u) != 0) {
    std::string::size_type v20 = __str->__r_.__value_.__l.__size_;
  }
  if (v20 <= size)
  {
    if (a4 != 1 || v18 == 1) {
      goto LABEL_48;
    }
    unsigned int v12 = v18;
    if (v18 == 4) {
      goto LABEL_49;
    }
    goto LABEL_44;
  }
  if (v18 > 8 || ((1 << v18) & 0x152) == 0) {
    goto LABEL_44;
  }
  std::string::append(&__stra, __str, size, v20 - size);
  uint64_t v21 = google::protobuf::DescriptorBuilder::FindSymbol(a1, &__stra, a5);
  uint64_t Symbol = v21;
  if (!v21)
  {
    std::string::operator=((std::string *)(a1 + 176), &__stra);
    unsigned int v12 = 0;
    goto LABEL_49;
  }
LABEL_48:
  unsigned int v12 = Symbol;
LABEL_49:
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
  return Symbol & 0xFFFFFFFF00000000 | v12;
}

void sub_1891E8100(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

unint64_t google::protobuf::DescriptorBuilder::LookupSymbol(uint64_t *a1, std::string *a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  unint64_t v8 = google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder((uint64_t)a1, a2, a3, a5, a6);
  if (v8)
  {
LABEL_23:
    unsigned int v17 = v8;
    return v8 & 0xFFFFFFFF00000000 | v17;
  }
  uint64_t v10 = *a1;
  if (*(unsigned char *)(v10 + 42))
  {
    uint64_t v11 = (google::protobuf::_anonymous_namespace_ *)google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v22, (uint64_t *)a2, v9);
    if (v23)
    {
      char v12 = 0;
      std::string::size_type v13 = &v22[v23];
      std::string::size_type v14 = v22;
      do
      {
        while (1)
        {
          int v15 = *v14;
          if ((v15 & 0xFFFFFFDF) - 65 >= 0x1A && v15 != 95 && (v15 - 48) >= 0xA) {
            break;
          }
          char v12 = 0;
          if (++v14 == v13)
          {
            int v18 = *v22;
            if (v18 == 46) {
              uint64_t v19 = (uint64_t)(v22 + 1);
            }
            else {
              uint64_t v19 = (uint64_t)v22;
            }
            if (v18 == 46) {
              uint64_t v20 = v23 - 1;
            }
            else {
              uint64_t v20 = v23;
            }
            google::protobuf::DescriptorPool::Tables::AllocateString(*(void *)(v10 + 32), v19, v20);
          }
        }
        if (v12 & 1 | (v15 != 46)) {
          break;
        }
        ++v14;
        char v12 = 1;
      }
      while (v14 != v13);
    }
    unint64_t v8 = qword_1EB29F2E8;
    goto LABEL_23;
  }
  unsigned int v17 = 0;
  return v8 & 0xFFFFFFFF00000000 | v17;
}

void sub_1891E8684(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorPool::NewPlaceholderFileWithMutexHeld(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Bytes = (_OWORD *)google::protobuf::DescriptorPool::Tables::AllocateBytes(*(google::protobuf::DescriptorPool::Tables **)(a1 + 32), 160);
  _OWORD *Bytes = 0u;
  Bytes[1] = 0u;
  Bytes[2] = 0u;
  Bytes[3] = 0u;
  Bytes[4] = 0u;
  Bytes[5] = 0u;
  Bytes[6] = 0u;
  Bytes[7] = 0u;
  Bytes[8] = 0u;
  Bytes[9] = 0u;
  google::protobuf::DescriptorPool::Tables::AllocateString(*(void *)(a1 + 32), a2, a3);
}

void sub_1891E881C(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F580](v1, 0x10A0C40C644375CLL);
  __cxa_guard_abort(&qword_1EB29F2D0);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorBuilder::AddSymbol(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = a3;
  if (!a3) {
    uint64_t v11 = *(void *)(a1 + 80);
  }
  if (!google::protobuf::DescriptorPool::Tables::AddSymbol(*(void *)(a1 + 8), (const char *)a2, a6, a7))
  {
    uint64_t v16 = *(void *)(a1 + 8);
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v56, (uint64_t *)a2, v14);
    long long v57 = v56;
    unsigned int v17 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((void *)(v16 + 304), (char **)&v57);
    if (v17)
    {
      int v18 = v17 + 4;
      uint64_t v19 = v17 + 5;
    }
    else
    {
      int v18 = &qword_1EB29F2E8;
      uint64_t v19 = &qword_1EB29F2F0;
    }
    uint64_t v24 = *v19;
    *(void *)&long long v57 = *v18;
    *((void *)&v57 + 1) = v24;
    uint64_t File = google::protobuf::Symbol::GetFile((google::protobuf::Symbol *)&v57);
    if (File == *(void *)(a1 + 80))
    {
      std::string::size_type v31 = std::string::rfind((const std::string *)a2, 46, 0xFFFFFFFFFFFFFFFFLL);
      if (v31 == -1)
      {
        std::operator+<char>();
        std::string v49 = std::string::append(&v55, "\" is already defined.");
        long long v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
        std::string::size_type v58 = v49->__r_.__value_.__r.__words[2];
        long long v57 = v50;
        v49->__r_.__value_.__l.__size_ = 0;
        v49->__r_.__value_.__r.__words[2] = 0;
        v49->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(a1, a2, a5, 0, (uint64_t)&v57);
        if (SHIBYTE(v58) < 0) {
          operator delete((void *)v57);
        }
        if ((SHIBYTE(v55.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          return 0;
        }
        uint64_t v23 = (void *)v55.__r_.__value_.__r.__words[0];
      }
      else
      {
        std::string::size_type v32 = v31;
        std::string::basic_string(&v52, (const std::string *)a2, v31 + 1, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v51);
        uint64_t v33 = std::string::insert(&v52, 0, "\"");
        long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
        v53.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v34;
        v33->__r_.__value_.__l.__size_ = 0;
        v33->__r_.__value_.__r.__words[2] = 0;
        v33->__r_.__value_.__r.__words[0] = 0;
        int v35 = std::string::append(&v53, "\" is already defined in \"");
        long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
        v54.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v36;
        v35->__r_.__value_.__l.__size_ = 0;
        v35->__r_.__value_.__r.__words[2] = 0;
        v35->__r_.__value_.__r.__words[0] = 0;
        std::string::basic_string(&v51, (const std::string *)a2, 0, v32, (std::allocator<char> *)&v60);
        if ((v51.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          int v37 = &v51;
        }
        else {
          int v37 = (std::string *)v51.__r_.__value_.__r.__words[0];
        }
        if ((v51.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type size = HIBYTE(v51.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type size = v51.__r_.__value_.__l.__size_;
        }
        std::string::size_type v39 = std::string::append(&v54, (const std::string::value_type *)v37, size);
        long long v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
        v55.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v40;
        v39->__r_.__value_.__l.__size_ = 0;
        v39->__r_.__value_.__r.__words[2] = 0;
        v39->__r_.__value_.__r.__words[0] = 0;
        long long v41 = std::string::append(&v55, "\".");
        long long v42 = *(_OWORD *)&v41->__r_.__value_.__l.__data_;
        std::string::size_type v58 = v41->__r_.__value_.__r.__words[2];
        long long v57 = v42;
        v41->__r_.__value_.__l.__size_ = 0;
        v41->__r_.__value_.__r.__words[2] = 0;
        v41->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(a1, a2, a5, 0, (uint64_t)&v57);
        if (SHIBYTE(v58) < 0) {
          operator delete((void *)v57);
        }
        if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v55.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v51.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v54.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v53.__r_.__value_.__l.__data_);
        }
        if ((SHIBYTE(v52.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          return 0;
        }
        uint64_t v23 = (void *)v52.__r_.__value_.__r.__words[0];
      }
    }
    else
    {
      uint64_t v26 = File;
      std::operator+<char>();
      int v27 = std::string::append(&v53, "\" is already defined in file \"");
      long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
      v54.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v28;
      v27->__r_.__value_.__l.__size_ = 0;
      v27->__r_.__value_.__r.__words[2] = 0;
      v27->__r_.__value_.__r.__words[0] = 0;
      if (v26)
      {
        long long v29 = *(long long **)v26;
        if (*(char *)(*(void *)v26 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(&v52, *(const std::string::value_type **)v29, *((void *)v29 + 1));
        }
        else
        {
          long long v30 = *v29;
          v52.__r_.__value_.__r.__words[2] = *((void *)v29 + 2);
          *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v30;
        }
      }
      else
      {
        std::string::basic_string[abi:ne180100]<0>(&v52, "null");
      }
      if ((v52.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        long long v43 = &v52;
      }
      else {
        long long v43 = (std::string *)v52.__r_.__value_.__r.__words[0];
      }
      if ((v52.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v44 = HIBYTE(v52.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v44 = v52.__r_.__value_.__l.__size_;
      }
      uint64_t v45 = std::string::append(&v54, (const std::string::value_type *)v43, v44);
      long long v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
      v55.__r_.__value_.__r.__words[2] = v45->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v46;
      v45->__r_.__value_.__l.__size_ = 0;
      v45->__r_.__value_.__r.__words[2] = 0;
      v45->__r_.__value_.__r.__words[0] = 0;
      std::string v47 = std::string::append(&v55, "\".");
      long long v48 = *(_OWORD *)&v47->__r_.__value_.__l.__data_;
      std::string::size_type v58 = v47->__r_.__value_.__r.__words[2];
      long long v57 = v48;
      v47->__r_.__value_.__l.__size_ = 0;
      v47->__r_.__value_.__r.__words[2] = 0;
      v47->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(a1, a2, a5, 0, (uint64_t)&v57);
      if (SHIBYTE(v58) < 0) {
        operator delete((void *)v57);
      }
      if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v55.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v52.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v54.__r_.__value_.__l.__data_);
      }
      if ((SHIBYTE(v53.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return 0;
      }
      uint64_t v23 = (void *)v53.__r_.__value_.__r.__words[0];
    }
    goto LABEL_59;
  }
  if (google::protobuf::FileDescriptorTables::AddAliasUnderParent(*(void *)(a1 + 88), v11, a4, a6, a7)) {
    return 1;
  }
  if (!*(unsigned char *)(a1 + 48))
  {
    LODWORD(v57) = 2;
    *((void *)&v57 + 1) = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    LODWORD(v58) = 4030;
    memset(&v59, 0, sizeof(v59));
    std::string::append(&v59, "\"");
    int v20 = *(char *)(a2 + 23);
    uint64_t v21 = v20 >= 0 ? (const std::string::value_type *)a2 : *(const std::string::value_type **)a2;
    std::string::size_type v22 = v20 >= 0 ? *(unsigned __int8 *)(a2 + 23) : *(void *)(a2 + 8);
    std::string::append(&v59, v21, v22);
    std::string::append(&v59, "\" not previously defined in symbols_by_name_, but was defined in symbols_by_parent_; this shouldn't be possible.");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v57);
    if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
    {
      uint64_t v23 = (void *)v59.__r_.__value_.__r.__words[0];
LABEL_59:
      operator delete(v23);
    }
  }
  return 0;
}

void sub_1891E8D28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (*(char *)(v42 - 105) < 0) {
    operator delete(*(void **)(v42 - 128));
  }
  if (a42 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddPackage(uint64_t a1, std::string *a2, uint64_t a3, uint64_t a4)
{
  if (google::protobuf::DescriptorPool::Tables::AddSymbol(*(void *)(a1 + 8), (const char *)a2, 8, a4))
  {
    std::string::size_type v8 = std::string::rfind(a2, 46, 0xFFFFFFFFFFFFFFFFLL);
    if (v8 != -1)
    {
      uint64_t v9 = *(void *)(a1 + 8);
      std::string::basic_string(&v31, a2, 0, v8, (std::allocator<char> *)&v28);
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v32, (uint64_t *)&v31, v10);
      google::protobuf::DescriptorPool::Tables::AllocateString(v9, v32[0], v32[1]);
    }
    google::protobuf::DescriptorBuilder::ValidateSymbolName(a1, (unsigned __int8 *)a2, (uint64_t)a2, a3);
  }
  else
  {
    uint64_t v11 = *(void *)(a1 + 8);
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v29, (uint64_t *)a2, v7);
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v29;
    char v12 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((void *)(v11 + 304), &v31.__r_.__value_.__l.__data_);
    if (v12)
    {
      std::string::size_type v13 = v12 + 4;
      std::string::size_type v14 = v12 + 5;
    }
    else
    {
      std::string::size_type v13 = &qword_1EB29F2E8;
      std::string::size_type v14 = &qword_1EB29F2F0;
    }
    uint64_t v15 = *v14;
    v30[0] = *v13;
    v30[1] = v15;
    if (LODWORD(v30[0]) != 8)
    {
      std::operator+<char>();
      uint64_t v16 = std::string::append(&v26, "\" is already defined (as something other than a package) in file \"");
      long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
      v27.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v17;
      v16->__r_.__value_.__l.__size_ = 0;
      v16->__r_.__value_.__r.__words[2] = 0;
      v16->__r_.__value_.__r.__words[0] = 0;
      uint64_t File = (const std::string::value_type ***)google::protobuf::Symbol::GetFile((google::protobuf::Symbol *)v30);
      int v19 = *((char *)*File + 23);
      if (v19 >= 0) {
        int v20 = (const std::string::value_type *)*File;
      }
      else {
        int v20 = **File;
      }
      if (v19 >= 0) {
        std::string::size_type v21 = *((unsigned __int8 *)*File + 23);
      }
      else {
        std::string::size_type v21 = (std::string::size_type)(*File)[1];
      }
      std::string::size_type v22 = std::string::append(&v27, v20, v21);
      long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
      v28.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v23;
      v22->__r_.__value_.__l.__size_ = 0;
      v22->__r_.__value_.__r.__words[2] = 0;
      v22->__r_.__value_.__r.__words[0] = 0;
      uint64_t v24 = std::string::append(&v28, "\".");
      long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
      v31.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v25;
      v24->__r_.__value_.__l.__size_ = 0;
      v24->__r_.__value_.__r.__words[2] = 0;
      v24->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(a1, (uint64_t)a2, a3, 0, (uint64_t)&v31);
      if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v31.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v28.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v27.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v26.__r_.__value_.__l.__data_);
      }
    }
  }
}

void sub_1891E910C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (*(char *)(v28 - 73) < 0) {
    operator delete(*(void **)(v28 - 96));
  }
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::ValidateSymbolName(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  if ((char)a2[23] < 0)
  {
    uint64_t v7 = *((void *)a2 + 1);
    if (v7)
    {
      std::string::size_type v8 = *(unsigned __int8 **)a2;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v7 = a2[23];
    if (a2[23])
    {
      std::string::size_type v8 = a2;
      do
      {
LABEL_6:
        int v9 = *v8;
        if ((v9 & 0xFFFFFFDF) - 91 <= 0xFFFFFFE5 && v9 != 95 && (v9 - 58) <= 0xFFFFFFF5)
        {
          std::operator+<char>();
          uint64_t v11 = std::string::append(&v13, "\" is not a valid identifier.");
          long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
          std::string::size_type v15 = v11->__r_.__value_.__r.__words[2];
          *(_OWORD *)std::string __p = v12;
          v11->__r_.__value_.__l.__size_ = 0;
          v11->__r_.__value_.__r.__words[2] = 0;
          v11->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::DescriptorBuilder::AddError(a1, a3, a4, 0, (uint64_t)__p);
          if (SHIBYTE(v15) < 0) {
            operator delete(__p[0]);
          }
          if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v13.__r_.__value_.__l.__data_);
          }
        }
        ++v8;
        --v7;
      }
      while (v7);
      return;
    }
  }

  google::protobuf::DescriptorBuilder::AddError(a1, a3, a4, 0, "Missing name.");
}

void sub_1891E92E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::BuildFileImpl(google::protobuf::DescriptorPool::Tables **this, const google::protobuf::FileDescriptorProto *a2)
{
  uint64_t Bytes = google::protobuf::DescriptorPool::Tables::AllocateBytes(this[1], 160);
  this[10] = (google::protobuf::DescriptorPool::Tables *)Bytes;
  uint64_t v5 = (google::protobuf::FileDescriptor *)Bytes;
  *(_WORD *)(Bytes + 64) = 0;
  if ((*((unsigned char *)a2 + 16) & 0x10) == 0)
  {
    if (atomic_load_explicit(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
      google::protobuf::internal::InitSCCImpl(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto);
    }
    *((void *)v5 + 19) = &google::protobuf::_SourceCodeInfo_default_instance_;
    operator new();
  }
  operator new();
}

void sub_1891EE060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40)
{
}

void google::protobuf::DescriptorBuilder::BuildMessage(google::protobuf::DescriptorBuilder *this, const google::protobuf::DescriptorProto *a2, const google::protobuf::Descriptor *a3, google::protobuf::Descriptor *a4)
{
  if (a3) {
    uint64_t v4 = (uint64_t *)((char *)a3 + 8);
  }
  else {
    uint64_t v4 = (uint64_t *)(*((void *)this + 10) + 8);
  }
  google::protobuf::DescriptorBuilder::AllocateNameString(*((google::protobuf::DescriptorPool::Tables **)this + 1), *v4, (uint64_t *)(*((void *)a2 + 27) & 0xFFFFFFFFFFFFFFFELL));
}

void sub_1891F09A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v73 = (void *)STACK[0x220];
  if (STACK[0x220])
  {
    STACK[0x228] = (unint64_t)v73;
    operator delete(v73);
  }
  if (SLOBYTE(STACK[0x207]) < 0) {
    operator delete(a71);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::BuildEnum(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    uint64_t v3 = (uint64_t *)(a3 + 8);
  }
  else {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 80) + 8);
  }
  google::protobuf::DescriptorBuilder::AllocateNameString(*(google::protobuf::DescriptorPool::Tables **)(a1 + 8), *v3, (uint64_t *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL));
}

void sub_1891F273C(_Unwind_Exception *a1)
{
  uint64_t v3 = (void *)STACK[0x230];
  if (STACK[0x230])
  {
    STACK[0x238] = (unint64_t)v3;
    operator delete(v3);
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete((void *)STACK[0x200]);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::DetectMapConflicts(google::protobuf::DescriptorBuilder *this, const google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  uint64_t v3 = a3;
  long long v46 = 0;
  uint64_t v47 = 0;
  uint64_t v45 = &v46;
  if (*((int *)a2 + 29) >= 1)
  {
    for (uint64_t i = 0; i < *((int *)a2 + 29); ++i)
    {
      uint64_t v7 = *((void *)a2 + 7);
      std::string::size_type v8 = (long long **)(v7 + 144 * i);
      int v9 = *v8;
      if (*((char *)*v8 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v43, *(const std::string::value_type **)v9, *((void *)v9 + 1));
      }
      else
      {
        long long v10 = *v9;
        v43.__r_.__value_.__r.__words[2] = *((void *)v9 + 2);
        *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v10;
      }
      uint64_t v44 = v7 + 144 * i;
      uint64_t v11 = v46;
      long long v12 = (void **)&v46;
      std::string v13 = &v46;
      if (!v46) {
        goto LABEL_16;
      }
      long long v12 = (void **)&v46;
      while (1)
      {
        while (1)
        {
          std::string v13 = (uint64_t **)v11;
          std::string::size_type v14 = (const void **)(v11 + 4);
          if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)&v47, (const void **)&v43.__r_.__value_.__l.__data_, (const void **)v11 + 4))break; {
          uint64_t v11 = *v13;
          }
          long long v12 = (void **)v13;
          if (!*v13) {
            goto LABEL_16;
          }
        }
        if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)&v47, v14, (const void **)&v43.__r_.__value_.__l.__data_))break; {
        long long v12 = (void **)(v13 + 1);
        }
        uint64_t v11 = v13[1];
        if (!v11) {
          goto LABEL_16;
        }
      }
      std::string::size_type v15 = *v12;
      if (*v12)
      {
        int v16 = 1;
      }
      else
      {
LABEL_16:
        std::string::size_type v15 = operator new(0x40uLL);
        void v15[2] = *(_OWORD *)&v43.__r_.__value_.__l.__data_;
        std::string::size_type v17 = v43.__r_.__value_.__r.__words[2];
        uint64_t v18 = v44;
        memset(&v43, 0, sizeof(v43));
        *((void *)v15 + 6) = v17;
        *((void *)v15 + 7) = v18;
        *(void *)std::string::size_type v15 = 0;
        *((void *)v15 + 1) = 0;
        *((void *)v15 + 2) = v13;
        void *v12 = v15;
        int v19 = (uint64_t *)v15;
        if (*v45)
        {
          uint64_t v45 = (uint64_t **)*v45;
          int v19 = (uint64_t *)*v12;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(v46, v19);
        int v16 = 0;
        ++v47;
      }
      uint64_t v3 = a3;
      if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v43.__r_.__value_.__l.__data_);
        if (v16)
        {
LABEL_23:
          if (*(unsigned char *)(*(void *)(*((void *)v15 + 7) + 32) + 75)
            || *(unsigned char *)(*(void *)(v7 + 144 * i + 32) + 75))
          {
            uint64_t v20 = *((void *)a2 + 1);
            std::operator+<char>();
            std::string::size_type v21 = std::string::append(&v42, " conflicts with an existing nested message type.");
            long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
            v43.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v22;
            v21->__r_.__value_.__l.__size_ = 0;
            v21->__r_.__value_.__r.__words[2] = 0;
            v21->__r_.__value_.__r.__words[0] = 0;
            google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v20, (uint64_t)a3, 0, (uint64_t)&v43);
            if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v43.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v42.__r_.__value_.__l.__data_);
            }
          }
        }
      }
      else if (v16)
      {
        goto LABEL_23;
      }
      google::protobuf::DescriptorBuilder::DetectMapConflicts(this, (const google::protobuf::Descriptor *)(*((void *)a2 + 7) + 144 * i), *(const google::protobuf::DescriptorProto **)(*((void *)a3 + 8) + 8 * i + 8));
    }
  }
  if (*((int *)a2 + 26) >= 1)
  {
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    do
    {
      uint64_t v25 = std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::find<std::string>((uint64_t)&v45, *(const void ***)(*((void *)a2 + 5) + v23));
      if (&v46 != (uint64_t **)v25 && *(unsigned char *)(*(void *)(*(void *)(v25 + 56) + 32) + 75))
      {
        uint64_t v26 = *((void *)a2 + 1);
        std::operator+<char>();
        std::string v27 = std::string::append(&v42, " conflicts with an existing field.");
        long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
        v43.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v28;
        v27->__r_.__value_.__l.__size_ = 0;
        v27->__r_.__value_.__r.__words[2] = 0;
        v27->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v26, (uint64_t)v3, 0, (uint64_t)&v43);
        if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v43.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v42.__r_.__value_.__l.__data_);
        }
      }
      ++v24;
      v23 += 152;
    }
    while (v24 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 30) >= 1)
  {
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    do
    {
      uint64_t v31 = std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::find<std::string>((uint64_t)&v45, *(const void ***)(*((void *)a2 + 8) + v29));
      if (&v46 != (uint64_t **)v31 && *(unsigned char *)(*(void *)(*(void *)(v31 + 56) + 32) + 75))
      {
        uint64_t v32 = *((void *)a2 + 1);
        std::operator+<char>();
        uint64_t v33 = std::string::append(&v42, " conflicts with an existing enum type.");
        long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
        v43.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v34;
        v33->__r_.__value_.__l.__size_ = 0;
        v33->__r_.__value_.__r.__words[2] = 0;
        v33->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v32, (uint64_t)v3, 0, (uint64_t)&v43);
        if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v43.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v42.__r_.__value_.__l.__data_);
        }
      }
      ++v30;
      v29 += 80;
    }
    while (v30 < *((int *)a2 + 30));
  }
  if (*((int *)a2 + 27) >= 1)
  {
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    do
    {
      uint64_t v37 = std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::find<std::string>((uint64_t)&v45, *(const void ***)(*((void *)a2 + 6) + v35));
      if (&v46 != (uint64_t **)v37 && *(unsigned char *)(*(void *)(*(void *)(v37 + 56) + 32) + 75))
      {
        uint64_t v38 = *((void *)a2 + 1);
        std::operator+<char>();
        std::string::size_type v39 = std::string::append(&v42, " conflicts with an existing oneof type.");
        long long v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
        v43.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v40;
        v39->__r_.__value_.__l.__size_ = 0;
        v39->__r_.__value_.__r.__words[2] = 0;
        v39->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v38, (uint64_t)v3, 0, (uint64_t)&v43);
        if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v43.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v42.__r_.__value_.__l.__data_);
        }
      }
      ++v36;
      v35 += 48;
    }
    while (v36 < *((int *)a2 + 27));
  }
  std::__tree<std::__value_type<std::string,BOOL>,std::__map_value_compare<std::string,std::__value_type<std::string,BOOL>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,BOOL>>>::destroy((char *)v46);
}

void sub_1891F2EE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char *a25)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  std::__tree<std::__value_type<std::string,BOOL>,std::__map_value_compare<std::string,std::__value_type<std::string,BOOL>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,BOOL>>>::destroy(a25);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::AllocateNameString(google::protobuf::DescriptorPool::Tables *this, uint64_t a2, uint64_t *a3)
{
  v5[20] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(unsigned __int8 *)(a2 + 23);
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  if (v4) {
    google::protobuf::DescriptorPool::Tables::AllocateEmptyString(this);
  }
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v5, a3, (const char *)a3);
  google::protobuf::DescriptorPool::Tables::AllocateString((uint64_t)this, v5[0], v5[1]);
}

void google::protobuf::DescriptorBuilder::BuildFieldOrExtension(google::protobuf::DescriptorBuilder *this, const google::protobuf::FieldDescriptorProto *a2, google::protobuf::Descriptor *a3, google::protobuf::FieldDescriptor *a4)
{
  if (a3) {
    uint64_t v4 = (uint64_t *)((char *)a3 + 8);
  }
  else {
    uint64_t v4 = (uint64_t *)(*((void *)this + 10) + 8);
  }
  google::protobuf::DescriptorBuilder::AllocateNameString(*((google::protobuf::DescriptorPool::Tables **)this + 1), *v4, (uint64_t *)(*((void *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL));
}

void sub_1891F4354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (a34 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::anonymous namespace'::ToCamelCase(std::string *a1, unsigned __int8 *a2, char a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  a1->__r_.__value_.__r.__words[0] = 0;
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  if ((a2[23] & 0x80u) == 0) {
    std::string::size_type v6 = a2[23];
  }
  else {
    std::string::size_type v6 = *((void *)a2 + 1);
  }
  std::string::reserve(a1, v6);
  uint64_t v7 = *((void *)v4 + 1);
  if ((v4[23] & 0x80u) == 0)
  {
    uint64_t v8 = v4[23];
  }
  else
  {
    uint64_t v4 = *(unsigned __int8 **)v4;
    uint64_t v8 = v7;
  }
  if (v8)
  {
    unsigned __int8 v9 = a3 ^ 1;
    do
    {
      int v10 = *v4;
      BOOL v11 = v10 == 95;
      if (v10 != 95)
      {
        if ((v9 & ((v10 - 97) < 0x1A)) != 0) {
          std::string::value_type v12 = v10 - 32;
        }
        else {
          std::string::value_type v12 = *v4;
        }
        std::string::push_back(v5, v12);
      }
      ++v4;
      unsigned __int8 v9 = v11;
      --v8;
    }
    while (v8);
  }
  if (a3)
  {
    if (SHIBYTE(v5->__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v5->__r_.__value_.__l.__size_) {
        return;
      }
      uint64_t v5 = (std::string *)v5->__r_.__value_.__r.__words[0];
    }
    else if (!*((unsigned char *)&v5->__r_.__value_.__s + 23))
    {
      return;
    }
    int v13 = v5->__r_.__value_.__s.__data_[0];
    if ((v13 - 65) < 0x1A) {
      LOBYTE(v13) = v13 + 32;
    }
    v5->__r_.__value_.__s.__data_[0] = v13;
  }
}

void sub_1891F4600(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::anonymous namespace'::ToJsonName(std::string *a1, unsigned __int8 *a2)
{
  char v2 = a2;
  a1->__r_.__value_.__r.__words[0] = 0;
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  if ((a2[23] & 0x80u) == 0) {
    std::string::size_type v4 = a2[23];
  }
  else {
    std::string::size_type v4 = *((void *)a2 + 1);
  }
  std::string::reserve(a1, v4);
  uint64_t v5 = *((void *)v2 + 1);
  if ((v2[23] & 0x80u) == 0)
  {
    uint64_t v6 = v2[23];
  }
  else
  {
    char v2 = *(unsigned __int8 **)v2;
    uint64_t v6 = v5;
  }
  if (v6)
  {
    BOOL v7 = 0;
    do
    {
      int v8 = *v2;
      BOOL v9 = v8 == 95;
      if (v8 != 95)
      {
        if (v7 && (v8 - 97) < 0x1A) {
          std::string::value_type v10 = v8 - 32;
        }
        else {
          std::string::value_type v10 = *v2;
        }
        std::string::push_back(a1, v10);
      }
      ++v2;
      BOOL v7 = v9;
      --v6;
    }
    while (v6);
  }
}

void sub_1891F46D0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

BOOL std::operator!=[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 1;
  }
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*(const void **)a1, a2, *((void *)a1 + 1)) != 0;
  }
  if (a1[23])
  {
    uint64_t v6 = v2 - 1;
    do
    {
      int v8 = *a1++;
      int v7 = v8;
      int v9 = *a2++;
      BOOL v10 = v7 == v9;
      uint64_t v2 = v7 != v9;
      BOOL v10 = !v10 || v6-- == 0;
    }
    while (!v10);
  }
  return v2;
}

void google::protobuf::DescriptorBuilder::CrossLinkMessage(google::protobuf::DescriptorPool::Tables **this, google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  uint64_t v97 = *MEMORY[0x1E4F143B8];
  if (!*((void *)a2 + 4))
  {
    if (atomic_load_explicit(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
      google::protobuf::internal::InitSCCImpl(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto);
    }
    *((void *)a2 + 4) = &google::protobuf::_MessageOptions_default_instance_;
  }
  if (*((int *)a2 + 29) >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::CrossLinkMessage((google::protobuf::DescriptorBuilder *)this, (google::protobuf::Descriptor *)(*((void *)a2 + 7) + v6), *(const google::protobuf::DescriptorProto **)(*((void *)a3 + 8) + 8 * v7++ + 8));
      v6 += 144;
    }
    while (v7 < *((int *)a2 + 29));
  }
  if (*((int *)a2 + 30) >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::CrossLinkEnum(*((void *)a2 + 8) + v8);
      ++v9;
      v8 += 80;
    }
    while (v9 < *((int *)a2 + 30));
  }
  if (*((int *)a2 + 26) >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::CrossLinkField((google::protobuf::DescriptorBuilder *)this, (google::protobuf::FieldDescriptor *)(*((void *)a2 + 5) + v10), *(const google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 5) + 8 * v11++ + 8));
      v10 += 152;
    }
    while (v11 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 32) >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::CrossLinkField((google::protobuf::DescriptorBuilder *)this, (google::protobuf::FieldDescriptor *)(*((void *)a2 + 10) + v12), *(const google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 17) + 8 * v13++ + 8));
      v12 += 152;
    }
    while (v13 < *((int *)a2 + 32));
  }
  int v14 = *((_DWORD *)a2 + 31);
  if (v14 >= 1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = 8;
    do
    {
      uint64_t v17 = *((void *)a2 + 9);
      if (!*(void *)(v17 + v16))
      {
        if (atomic_load_explicit(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire))
        {
          google::protobuf::internal::InitSCCImpl(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto);
        }
        *(void *)(v17 + v16) = &google::protobuf::_ExtensionRangeOptions_default_instance_;
        int v14 = *((_DWORD *)a2 + 31);
      }
      ++v15;
      v16 += 16;
    }
    while (v15 < v14);
  }
  int v18 = *((_DWORD *)a2 + 26);
  if (v18 >= 1)
  {
    uint64_t v19 = 0;
    for (uint64_t i = 0; i < v18; ++i)
    {
      uint64_t v21 = *((void *)a2 + 5);
      uint64_t v22 = *(void *)(v21 + v19 + 88);
      if (v22)
      {
        if (*(int *)(v22 + 24) >= 1 && *(void *)(v21 + v19 - 64) != v22)
        {
          uint64_t v23 = (const void **)*((void *)a2 + 1);
          if (*((char *)v23 + 23) >= 0) {
            size_t v24 = *((unsigned __int8 *)v23 + 23);
          }
          else {
            size_t v24 = (size_t)v23[1];
          }
          std::string::basic_string[abi:ne180100]((uint64_t)&v75, v24 + 1);
          if ((v75.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v25 = &v75;
          }
          else {
            uint64_t v25 = (std::string *)v75.__r_.__value_.__r.__words[0];
          }
          if (v24)
          {
            if (*((char *)v23 + 23) >= 0) {
              uint64_t v26 = v23;
            }
            else {
              uint64_t v26 = *v23;
            }
            memmove(v25, v26, v24);
          }
          *(_WORD *)((char *)&v25->__r_.__value_.__l.__data_ + v24) = 46;
          uint64_t v27 = *(void *)(*((void *)a2 + 5) + v19 - 152);
          int v28 = *(char *)(v27 + 23);
          if (v28 >= 0) {
            uint64_t v29 = *(const std::string::value_type **)(*((void *)a2 + 5) + v19 - 152);
          }
          else {
            uint64_t v29 = *(const std::string::value_type **)v27;
          }
          if (v28 >= 0) {
            std::string::size_type v30 = *(unsigned __int8 *)(v27 + 23);
          }
          else {
            std::string::size_type v30 = *(void *)(v27 + 8);
          }
          uint64_t v31 = std::string::append(&v75, v29, v30);
          long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
          std::string::size_type v77 = v31->__r_.__value_.__r.__words[2];
          *(_OWORD *)uint64_t v76 = v32;
          v31->__r_.__value_.__l.__size_ = 0;
          v31->__r_.__value_.__r.__words[2] = 0;
          v31->__r_.__value_.__r.__words[0] = 0;
          uint64_t v33 = *(void *)(*((void *)a3 + 5) + 8 * i);
          long long v34 = *(uint64_t ***)(*((void *)a2 + 5) + v19 - 152);
          int v35 = *((char *)v34 + 23);
          uint64_t v36 = v34[1];
          if (v35 < 0) {
            long long v34 = (uint64_t **)*v34;
          }
          *(void *)&long long v95 = v34;
          int v37 = v35;
          if (v35 < 0) {
            int v37 = (int)v36;
          }
          DWORD2(v95) = v37;
          std::string::size_type v38 = *(void *)v22;
          int v39 = *(char *)(*(void *)v22 + 23);
          uint64_t v40 = *(void *)(*(void *)v22 + 8);
          if (v39 < 0) {
            std::string::size_type v38 = **(void **)v22;
          }
          v94.__r_.__value_.__r.__words[0] = v38;
          int v41 = v39;
          if (v39 < 0) {
            int v41 = v40;
          }
          LODWORD(v94.__r_.__value_.__r.__words[1]) = v41;
          uint64_t v92 = 0;
          int v93 = -1;
          uint64_t v90 = 0;
          int v91 = -1;
          uint64_t v88 = 0;
          int v89 = -1;
          uint64_t v86 = 0;
          int v87 = -1;
          uint64_t v84 = 0;
          int v85 = -1;
          uint64_t v82 = 0;
          int v83 = -1;
          uint64_t v80 = 0;
          int v81 = -1;
          uint64_t v78 = 0;
          int v79 = -1;
          *((void *)&v73 + 1) = &v80;
          *(void *)&long long v73 = &v82;
          google::protobuf::strings::Substitute("Fields in the same oneof must be defined consecutively. \"$0\" cannot be defined before the completion of the \"$1\" oneof definition.", (uint64_t)&v95, (uint64_t)&v94, (uint64_t)&v92, (uint64_t)&v90, (uint64_t)&v88, (uint64_t)&v86, (uint64_t)&v84, &__p, v73, (uint64_t)&v78);
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, (uint64_t)v76, v33, 2, (uint64_t)&__p);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v77) < 0) {
            operator delete(v76[0]);
          }
          if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v75.__r_.__value_.__l.__data_);
          }
          int v18 = *((_DWORD *)a2 + 26);
        }
        uint64_t v42 = *((void *)a2 + 6)
            + 48 * (int)(-1431655765 * ((unint64_t)(v22 - *(void *)(*(void *)(v22 + 16) + 48)) >> 4));
        ++*(_DWORD *)(v42 + 24);
      }
      v19 += 152;
    }
  }
  LODWORD(v43) = *((_DWORD *)a2 + 27);
  if ((int)v43 >= 1)
  {
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    do
    {
      uint64_t v46 = *((void *)a2 + 6);
      uint64_t v47 = v46 + v44;
      int v48 = *(_DWORD *)(v46 + v44 + 24);
      if (!v48)
      {
        std::string v49 = (const void **)*((void *)a2 + 1);
        if (*((char *)v49 + 23) >= 0) {
          size_t v50 = *((unsigned __int8 *)v49 + 23);
        }
        else {
          size_t v50 = (size_t)v49[1];
        }
        std::string::basic_string[abi:ne180100]((uint64_t)&v94, v50 + 1);
        if ((v94.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string v51 = &v94;
        }
        else {
          std::string v51 = (std::string *)v94.__r_.__value_.__r.__words[0];
        }
        if (v50)
        {
          if (*((char *)v49 + 23) >= 0) {
            std::string v52 = v49;
          }
          else {
            std::string v52 = *v49;
          }
          memmove(v51, v52, v50);
        }
        *(_WORD *)((char *)&v51->__r_.__value_.__l.__data_ + v50) = 46;
        uint64_t v53 = *(void *)(v46 + v44);
        int v54 = *(char *)(v53 + 23);
        if (v54 >= 0) {
          std::string v55 = *(const std::string::value_type **)(v46 + v44);
        }
        else {
          std::string v55 = *(const std::string::value_type **)v53;
        }
        if (v54 >= 0) {
          std::string::size_type v56 = *(unsigned __int8 *)(v53 + 23);
        }
        else {
          std::string::size_type v56 = *(void *)(v53 + 8);
        }
        long long v57 = std::string::append(&v94, v55, v56);
        long long v58 = *(_OWORD *)&v57->__r_.__value_.__l.__data_;
        std::string::size_type v96 = v57->__r_.__value_.__r.__words[2];
        long long v95 = v58;
        v57->__r_.__value_.__l.__size_ = 0;
        v57->__r_.__value_.__r.__words[2] = 0;
        v57->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, (uint64_t)&v95, *(void *)(*((void *)a3 + 20) + 8 * v45 + 8), 0, "Oneof must have at least one field.");
        if (SHIBYTE(v96) < 0) {
          operator delete((void *)v95);
        }
        if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v94.__r_.__value_.__l.__data_);
        }
        int v48 = *(_DWORD *)(v47 + 24);
      }
      *(void *)(v46 + v44 + 32) = google::protobuf::DescriptorPool::Tables::AllocateBytes(this[1], 8 * v48);
      *(_DWORD *)(v47 + 24) = 0;
      if (!*(void *)(v46 + v44 + 40))
      {
        if (atomic_load_explicit(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
          google::protobuf::internal::InitSCCImpl(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto);
        }
        *(void *)(v46 + v44 + 40) = &google::protobuf::_OneofOptions_default_instance_;
      }
      ++v45;
      uint64_t v43 = *((int *)a2 + 27);
      v44 += 48;
    }
    while (v45 < v43);
    int v18 = *((_DWORD *)a2 + 26);
  }
  if (v18 >= 1)
  {
    uint64_t v59 = 0;
    do
    {
      uint64_t v60 = *((void *)a2 + 5) + v59;
      uint64_t v61 = *(void *)(v60 + 88);
      if (v61)
      {
        uint64_t v62 = *((void *)a2 + 6)
            + 48 * (int)(-1431655765 * ((unint64_t)(v61 - *(void *)(*(void *)(v61 + 16) + 48)) >> 4));
        uint64_t v63 = *(int *)(v62 + 24);
        *(_DWORD *)(v60 + 72) = v63;
        uint64_t v64 = *(void *)(v62 + 32);
        *(_DWORD *)(v62 + 24) = v63 + 1;
        *(void *)(v64 + 8 * v63) = v60;
      }
      v59 += 152;
    }
    while (152 * v18 != v59);
    uint64_t v65 = 0;
    for (uint64_t j = 0; j < v18; ++j)
    {
      uint64_t v67 = *((void *)a2 + 5) + v65;
      if (*(unsigned char *)(v67 + 65))
      {
        uint64_t v68 = *(void *)(v67 + 88);
        if (!v68 || *(_DWORD *)(v68 + 24) != 1 || !*(unsigned char *)(**(void **)(v68 + 32) + 65))
        {
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), *(void *)(*((void *)a3 + 5) + 8 * j + 8), 10, "Fields with proto3_optional set must be a member of a one-field oneof");
          int v18 = *((_DWORD *)a2 + 26);
        }
      }
      v65 += 152;
    }
    LODWORD(v43) = *((_DWORD *)a2 + 27);
  }
  if ((int)v43 >= 1)
  {
    uint64_t v69 = 0;
    uint64_t v70 = 0;
    int v71 = -1;
    do
    {
      uint64_t v72 = *((void *)a2 + 6) + v69;
      if (*(_DWORD *)(v72 + 24) == 1 && *(unsigned char *)(**(void **)(v72 + 32) + 65))
      {
        if (v71 == -1) {
          int v71 = v70;
        }
      }
      else if (v71 != -1)
      {
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), *(void *)(*((void *)a3 + 20) + 8 * v70 + 8), 10, "Synthetic oneofs must be after all other oneofs");
        LODWORD(v43) = *((_DWORD *)a2 + 27);
      }
      ++v70;
      v69 += 48;
    }
    while (v70 < (int)v43);
    if (v71 != -1) {
      LODWORD(v43) = v71;
    }
  }
  *((_DWORD *)a2 + 28) = v43;
}

void sub_1891F4EF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::CrossLinkField(google::protobuf::DescriptorBuilder *this, google::protobuf::FieldDescriptor *a2, const google::protobuf::FieldDescriptorProto *a3)
{
  uint64_t v144 = *MEMORY[0x1E4F143B8];
  if (!*((void *)a2 + 15))
  {
    if (atomic_load_explicit(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
      google::protobuf::internal::InitSCCImpl(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto);
    }
    *((void *)a2 + 15) = &google::protobuf::_FieldOptions_default_instance_;
  }
  if (*((unsigned char *)a2 + 67))
  {
    std::string::size_type v6 = *((void *)a2 + 12);
    if (v6) {
      goto LABEL_10;
    }
    uint64_t v7 = (char *)a2 + 40;
  }
  else
  {
    uint64_t v7 = (char *)a2 + 80;
  }
  std::string::size_type v6 = *(void *)v7;
LABEL_10:
  uint64_t v8 = (const char *)*((void *)a2 + 2);
  if (v8[23] < 0) {
    uint64_t v8 = *(const char **)v8;
  }
  uint64_t v9 = *((void *)this + 11);
  v143.__r_.__value_.__r.__words[0] = v6;
  google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)&v143.__r_.__value_.__r.__words[1], v8);
  {
  }
  uint64_t v11 = (const char *)*((void *)a2 + 3);
  if (v11[23] < 0) {
    uint64_t v11 = *(const char **)v11;
  }
  v142.__r_.__value_.__r.__words[0] = v6;
  google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)&v142.__r_.__value_.__r.__words[1], v11);
  {
  }
  if ((*((unsigned char *)a3 + 16) & 2) == 0) {
    goto LABEL_19;
  }
  int v25 = google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t *)this, (std::string *)(*((void *)a3 + 4) & 0xFFFFFFFFFFFFFFFELL), *((void *)a2 + 1), 2, 0, 1);
  if (v25 != 1)
  {
    if (!v25)
    {
      uint64_t v28 = *((void *)a2 + 1);
      unint64_t v29 = *((void *)a3 + 4) & 0xFFFFFFFFFFFFFFFELL;
      google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, v28, (uint64_t)a3, 3, v29);
      return;
    }
    uint64_t v46 = *((void *)a2 + 1);
    std::operator+<char>();
    uint64_t v47 = std::string::append(&v142, "\" is not a message type.");
    long long v48 = *(_OWORD *)&v47->__r_.__value_.__l.__data_;
    v143.__r_.__value_.__r.__words[2] = v47->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v143.__r_.__value_.__l.__data_ = v48;
    v47->__r_.__value_.__l.__size_ = 0;
    v47->__r_.__value_.__r.__words[2] = 0;
    v47->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v46, (uint64_t)a3, 3, (uint64_t)&v143);
    goto LABEL_137;
  }
  uint64_t v40 = v26;
  *((void *)a2 + 10) = v26;
  int v41 = (AddrObjGoogle::protobuf *)*((unsigned int *)a2 + 17);
  uint64_t v42 = *(unsigned int *)(v26 + 124);
  if ((int)v42 < 1)
  {
LABEL_58:
    if (*(unsigned char *)(*(void *)this + 42))
    {
      uint64_t v44 = (void *)(*((void *)a3 + 4) & 0xFFFFFFFFFFFFFFFELL);
      int v45 = *((char *)v44 + 23);
      if ((v45 & 0x80000000) == 0)
      {
        if (v45 != 33) {
          goto LABEL_128;
        }
LABEL_127:
        if (!memcmp(v44, "google.protobuf.bridge.MessageSet", 0x21uLL)) {
          goto LABEL_19;
        }
        goto LABEL_128;
      }
      if (v44[1] == 33)
      {
        uint64_t v44 = (void *)*v44;
        goto LABEL_127;
      }
    }
LABEL_128:
    uint64_t v74 = *((void *)a2 + 1);
    std::string::size_type v75 = *(void *)(v40 + 8);
    int v76 = *(char *)(v75 + 23);
    uint64_t v77 = *(void *)(v75 + 8);
    if (v76 < 0) {
      std::string::size_type v75 = *(void *)v75;
    }
    v143.__r_.__value_.__r.__words[0] = v75;
    int v78 = v76;
    if (v76 < 0) {
      int v78 = v77;
    }
    LODWORD(v143.__r_.__value_.__r.__words[1]) = v78;
    v142.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer(v41, &v142.__r_.__value_.__s.__data_[12], v27);
    LODWORD(v142.__r_.__value_.__r.__words[1]) = strlen(v142.__r_.__value_.__l.__data_);
    v141.__r_.__value_.__r.__words[0] = 0;
    LODWORD(v141.__r_.__value_.__r.__words[1]) = -1;
    v140.__r_.__value_.__r.__words[0] = 0;
    LODWORD(v140.__r_.__value_.__r.__words[1]) = -1;
    uint64_t v138 = 0;
    int v139 = -1;
    uint64_t v136 = 0;
    int v137 = -1;
    uint64_t v134 = 0;
    int v135 = -1;
    uint64_t v132 = 0;
    int v133 = -1;
    uint64_t v130 = 0;
    int v131 = -1;
    uint64_t v128 = 0;
    int v129 = -1;
    *(void *)&long long v122 = &v132;
    *((void *)&v122 + 1) = &v130;
    google::protobuf::strings::Substitute("\"$0\" does not declare $1 as an extension number.", (uint64_t)&v143, (uint64_t)&v142, (uint64_t)&v141, (uint64_t)&v140, (uint64_t)&v138, (uint64_t)&v136, (uint64_t)&v134, &v127, v122, (uint64_t)&v128);
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v74, (uint64_t)a3, 1, (uint64_t)&v127);
    if (SHIBYTE(v127.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v127.__r_.__value_.__l.__data_);
    }
    goto LABEL_19;
  }
  uint64_t v43 = (_DWORD *)(*(void *)(v26 + 72) + 4);
  while (*(v43 - 1) > (int)v41 || *v43 <= (int)v41)
  {
    v43 += 4;
    if (!--v42) {
      goto LABEL_58;
    }
  }
LABEL_19:
  if (*((void *)a2 + 11) && *((_DWORD *)a2 + 15) != 1) {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 0, "Fields of oneofs must themselves have label LABEL_OPTIONAL.");
  }
  unsigned int v13 = *((_DWORD *)a3 + 4);
  if ((v13 & 4) == 0)
  {
    int v14 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    if (v14)
    {
      v141.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v140.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      if (atomic_load_explicit((atomic_ullong *volatile)v14, memory_order_acquire) != -1)
      {
        v143.__r_.__value_.__r.__words[0] = (std::string::size_type)&v141;
        v143.__r_.__value_.__l.__size_ = (std::string::size_type)&v140;
        v142.__r_.__value_.__r.__words[0] = (std::string::size_type)&v143;
        std::__call_once(v14, &v142, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    int v15 = *((_DWORD *)a2 + 14);
    if ((v15 & 0xFFFFFFFE) == 0xA) {
      goto LABEL_32;
    }
    uint64_t v16 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    if (v16)
    {
      v141.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v140.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      if (atomic_load_explicit((atomic_ullong *volatile)v16, memory_order_acquire) != -1)
      {
        v143.__r_.__value_.__r.__words[0] = (std::string::size_type)&v141;
        v143.__r_.__value_.__l.__size_ = (std::string::size_type)&v140;
        v142.__r_.__value_.__r.__words[0] = (std::string::size_type)&v143;
        std::__call_once(v16, &v142, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      int v15 = *((_DWORD *)a2 + 14);
    }
    if (v15 == 14) {
LABEL_32:
    }
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 2, "Field with message or enum type missing type_name.");
    goto LABEL_33;
  }
  unsigned int v30 = (v13 >> 3) & 1;
  if (*((_DWORD *)a3 + 22) == 14) {
    uint64_t v31 = 1;
  }
  else {
    uint64_t v31 = v30;
  }
  if (*(unsigned char *)(*(void *)this + 43))
  {
    BOOL v32 = 0;
  }
  else
  {
    std::string v49 = (unsigned __int8 *)&google::protobuf::_FieldOptions_default_instance_;
    if (*((void *)a3 + 8)) {
      std::string v49 = (unsigned __int8 *)*((void *)a3 + 8);
    }
    BOOL v32 = v49[79] != 0;
  }
  if (*(unsigned char *)(*(void *)this + 41)) {
    int v50 = v32;
  }
  else {
    int v50 = 1;
  }
  int Symbol = google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t *)this, (std::string *)(*((void *)a3 + 5) & 0xFFFFFFFFFFFFFFFELL), *((void *)a2 + 1), v31, 1, v50);
  uint64_t v53 = v52;
  if (!Symbol)
  {
    if ((v50 & 1) == 0)
    {
      unint64_t v63 = *((void *)a3 + 5) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v63 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v143, *(const std::string::value_type **)v63, *(void *)(v63 + 8));
      }
      else
      {
        long long v64 = *(_OWORD *)v63;
        v143.__r_.__value_.__r.__words[2] = *(void *)(v63 + 16);
        *(_OWORD *)&v143.__r_.__value_.__l.__data_ = v64;
      }
      google::protobuf::DescriptorPool::Tables::AllocateOnceDynamic(*((google::protobuf::DescriptorPool::Tables **)this
                                                                    + 1));
    }
    if (v32)
    {
      std::string::basic_string[abi:ne180100]<0>(&v143, "google.protobuf.Empty");
      int Symbol = google::protobuf::DescriptorBuilder::FindSymbol((uint64_t)this, &v143, 1);
      uint64_t v53 = v55;
      if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v143.__r_.__value_.__l.__data_);
      }
    }
    if (!Symbol)
    {
      google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 2, *((void *)a3 + 5) & 0xFFFFFFFFFFFFFFFELL);
      return;
    }
  }
  if ((*((unsigned char *)a3 + 17) & 4) == 0)
  {
    if (Symbol == 1)
    {
      int v54 = 11;
    }
    else
    {
      if (Symbol != 4)
      {
        uint64_t v71 = *((void *)a2 + 1);
        std::operator+<char>();
        uint64_t v72 = std::string::append(&v142, "\" is not a type.");
        long long v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
        v143.__r_.__value_.__r.__words[2] = v72->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v143.__r_.__value_.__l.__data_ = v73;
        v72->__r_.__value_.__l.__size_ = 0;
        v72->__r_.__value_.__r.__words[2] = 0;
        v72->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v71, (uint64_t)a3, 2, (uint64_t)&v143);
        goto LABEL_137;
      }
      int v54 = 14;
    }
    *((_DWORD *)a2 + 14) = v54;
  }
  uint64_t v65 = (std::once_flag::_State_type *)*((void *)a2 + 6);
  if (v65)
  {
    v141.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v140.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    if (atomic_load_explicit((atomic_ullong *volatile)v65, memory_order_acquire) != -1)
    {
      v143.__r_.__value_.__r.__words[0] = (std::string::size_type)&v141;
      v143.__r_.__value_.__l.__size_ = (std::string::size_type)&v140;
      v142.__r_.__value_.__r.__words[0] = (std::string::size_type)&v143;
      std::__call_once(v65, &v142, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v66 = *((_DWORD *)a2 + 14);
  if ((v66 & 0xFFFFFFFE) != 0xA)
  {
    uint64_t v67 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    if (v67)
    {
      v141.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v140.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      if (atomic_load_explicit((atomic_ullong *volatile)v67, memory_order_acquire) != -1)
      {
        v143.__r_.__value_.__r.__words[0] = (std::string::size_type)&v141;
        v143.__r_.__value_.__l.__size_ = (std::string::size_type)&v140;
        v142.__r_.__value_.__r.__words[0] = (std::string::size_type)&v143;
        std::__call_once(v67, &v142, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      int v66 = *((_DWORD *)a2 + 14);
    }
    if (v66 != 14)
    {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 2, "Field with primitive type has type_name.");
      goto LABEL_33;
    }
    if (Symbol != 4)
    {
      uint64_t v79 = *((void *)a2 + 1);
      std::operator+<char>();
      uint64_t v80 = std::string::append(&v142, "\" is not an enum type.");
      long long v81 = *(_OWORD *)&v80->__r_.__value_.__l.__data_;
      v143.__r_.__value_.__r.__words[2] = v80->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v143.__r_.__value_.__l.__data_ = v81;
      v80->__r_.__value_.__l.__size_ = 0;
      v80->__r_.__value_.__r.__words[2] = 0;
      v80->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v79, (uint64_t)a3, 2, (uint64_t)&v143);
      goto LABEL_137;
    }
    *((void *)a2 + 14) = v53;
    if (*(unsigned char *)(google::protobuf::FieldDescriptor::enum_type(a2) + 40))
    {
      *((unsigned char *)a2 + 64) = 0;
    }
    else if (*((unsigned char *)a2 + 64))
    {
      if (google::protobuf::io::Tokenizer::IsIdentifier(*((void *)a3 + 6) & 0xFFFFFFFFFFFFFFFELL))
      {
        uint64_t v106 = *((void *)a3 + 6);
        uint64_t v107 = google::protobuf::FieldDescriptor::enum_type(a2);
        if (google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder((uint64_t)this, (std::string *)(v106 & 0xFFFFFFFFFFFFFFFELL), *(void *)(v107 + 8), 0, 1) == 5&& (uint64_t v109 = v108, v110 = *(void *)(v108 + 24), v110 == google::protobuf::FieldDescriptor::enum_type(a2)))
        {
          *((void *)a2 + 18) = v109;
        }
        else
        {
          uint64_t v111 = *((void *)a2 + 1);
          google::protobuf::FieldDescriptor::enum_type(a2);
          std::operator+<char>();
          uint64_t v112 = std::string::append(&v140, "\" has no value named \"");
          long long v113 = *(_OWORD *)&v112->__r_.__value_.__l.__data_;
          v141.__r_.__value_.__r.__words[2] = v112->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v141.__r_.__value_.__l.__data_ = v113;
          v112->__r_.__value_.__l.__size_ = 0;
          v112->__r_.__value_.__r.__words[2] = 0;
          v112->__r_.__value_.__r.__words[0] = 0;
          unint64_t v114 = *((void *)a3 + 6) & 0xFFFFFFFFFFFFFFFELL;
          int v115 = *(char *)(v114 + 23);
          if (v115 >= 0) {
            uint64_t v116 = (const std::string::value_type *)(*((void *)a3 + 6) & 0xFFFFFFFFFFFFFFFELL);
          }
          else {
            uint64_t v116 = *(const std::string::value_type **)v114;
          }
          if (v115 >= 0) {
            std::string::size_type v117 = *(unsigned __int8 *)(v114 + 23);
          }
          else {
            std::string::size_type v117 = *(void *)(v114 + 8);
          }
          uint64_t v118 = std::string::append(&v141, v116, v117);
          long long v119 = *(_OWORD *)&v118->__r_.__value_.__l.__data_;
          v142.__r_.__value_.__r.__words[2] = v118->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v142.__r_.__value_.__l.__data_ = v119;
          v118->__r_.__value_.__l.__size_ = 0;
          v118->__r_.__value_.__r.__words[2] = 0;
          v118->__r_.__value_.__r.__words[0] = 0;
          uint64_t v120 = std::string::append(&v142, "\".");
          long long v121 = *(_OWORD *)&v120->__r_.__value_.__l.__data_;
          v143.__r_.__value_.__r.__words[2] = v120->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v143.__r_.__value_.__l.__data_ = v121;
          v120->__r_.__value_.__l.__size_ = 0;
          v120->__r_.__value_.__r.__words[2] = 0;
          v120->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v111, (uint64_t)a3, 4, (uint64_t)&v143);
          if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v143.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v142.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v141.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v140.__r_.__value_.__l.__data_);
          }
        }
      }
      else
      {
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 4, "Default value for an enum field must be an identifier.");
      }
LABEL_33:
      if ((google::protobuf::FileDescriptorTables::AddFieldByNumber(*((google::protobuf::FileDescriptorTables **)this + 11), a2) & 1) == 0)
      {
        uint64_t v33 = (int8x8_t *)*((void *)this + 11);
        uint64_t v34 = *((void *)a2 + 10);
        int8x8_t v35 = v33[20];
        if (v35)
        {
          int v36 = *((_DWORD *)a2 + 17);
          unint64_t v37 = (16777619 * v36) ^ (16777499 * v34);
          uint8x8_t v38 = (uint8x8_t)vcnt_s8(v35);
          v38.i16[0] = vaddlv_u8(v38);
          if (v38.u32[0] > 1uLL)
          {
            uint64_t v39 = (16777619 * v36) ^ (16777499 * v34);
            if (v37 >= *(void *)&v35) {
              uint64_t v39 = v37 % *(void *)&v35;
            }
          }
          else
          {
            uint64_t v39 = v37 & (*(void *)&v35 - 1);
          }
          std::string::size_type v56 = *(uint64_t ***)(*(void *)&v33[19] + 8 * v39);
          if (v56)
          {
            for (uint64_t i = *v56; i; uint64_t i = (uint64_t *)*i)
            {
              unint64_t v58 = i[1];
              if (v37 == v58)
              {
                if (i[2] == v34 && *((_DWORD *)i + 6) == v36)
                {
                  uint64_t v60 = (std::string::size_type *)i[4];
                  if (!v34)
                  {
LABEL_158:
                    std::string::basic_string[abi:ne180100]<0>(&v127, "unknown");
LABEL_159:
                    uint64_t v93 = *((void *)a2 + 1);
                    if (*((unsigned char *)a2 + 67))
                    {
                      v143.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*((unsigned int *)a2 + 17), &v143.__r_.__value_.__s.__data_[12], v17);
                      LODWORD(v143.__r_.__value_.__r.__words[1]) = strlen(v143.__r_.__value_.__l.__data_);
                      int v94 = HIBYTE(v127.__r_.__value_.__r.__words[2]);
                      long long v95 = &v127;
                      if ((v127.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                        long long v95 = (std::string *)v127.__r_.__value_.__r.__words[0];
                      }
                      v142.__r_.__value_.__r.__words[0] = (std::string::size_type)v95;
                      if ((v127.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                        int v94 = v127.__r_.__value_.__r.__words[1];
                      }
                      LODWORD(v142.__r_.__value_.__r.__words[1]) = v94;
                      std::string::size_type v96 = v60[1];
                      int v97 = *(char *)(v96 + 23);
                      uint64_t v98 = *(void *)(v96 + 8);
                      if (v97 < 0) {
                        std::string::size_type v96 = *(void *)v96;
                      }
                      v141.__r_.__value_.__r.__words[0] = v96;
                      int v99 = v97;
                      if (v97 < 0) {
                        int v99 = v98;
                      }
                      LODWORD(v141.__r_.__value_.__r.__words[1]) = v99;
                      v140.__r_.__value_.__r.__words[0] = 0;
                      LODWORD(v140.__r_.__value_.__r.__words[1]) = -1;
                      uint64_t v138 = 0;
                      int v139 = -1;
                      uint64_t v136 = 0;
                      int v137 = -1;
                      uint64_t v134 = 0;
                      int v135 = -1;
                      uint64_t v132 = 0;
                      int v133 = -1;
                      uint64_t v130 = 0;
                      int v131 = -1;
                      uint64_t v128 = 0;
                      int v129 = -1;
                      *(void *)&long long v124 = &v132;
                      *((void *)&v124 + 1) = &v130;
                      google::protobuf::strings::Substitute("Extension number $0 has already been used in \"$1\" by extension \"$2\".", (uint64_t)&v143, (uint64_t)&v142, (uint64_t)&v141, (uint64_t)&v140, (uint64_t)&v138, (uint64_t)&v136, (uint64_t)&v134, &__p, v124, (uint64_t)&v128);
                      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v93, (uint64_t)a3, 1, (uint64_t)&__p);
                    }
                    else
                    {
                      v143.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*((unsigned int *)a2 + 17), &v143.__r_.__value_.__s.__data_[12], v17);
                      LODWORD(v143.__r_.__value_.__r.__words[1]) = strlen(v143.__r_.__value_.__l.__data_);
                      int v100 = HIBYTE(v127.__r_.__value_.__r.__words[2]);
                      long long v101 = &v127;
                      if ((v127.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                        long long v101 = (std::string *)v127.__r_.__value_.__r.__words[0];
                      }
                      v142.__r_.__value_.__r.__words[0] = (std::string::size_type)v101;
                      if ((v127.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                        int v100 = v127.__r_.__value_.__r.__words[1];
                      }
                      LODWORD(v142.__r_.__value_.__r.__words[1]) = v100;
                      std::string::size_type v102 = *v60;
                      int v103 = *(char *)(*v60 + 23);
                      uint64_t v104 = *(void *)(*v60 + 8);
                      if (v103 < 0) {
                        std::string::size_type v102 = *(void *)*v60;
                      }
                      v141.__r_.__value_.__r.__words[0] = v102;
                      int v105 = v103;
                      if (v103 < 0) {
                        int v105 = v104;
                      }
                      LODWORD(v141.__r_.__value_.__r.__words[1]) = v105;
                      v140.__r_.__value_.__r.__words[0] = 0;
                      LODWORD(v140.__r_.__value_.__r.__words[1]) = -1;
                      uint64_t v138 = 0;
                      int v139 = -1;
                      uint64_t v136 = 0;
                      int v137 = -1;
                      uint64_t v134 = 0;
                      int v135 = -1;
                      uint64_t v132 = 0;
                      int v133 = -1;
                      uint64_t v130 = 0;
                      int v131 = -1;
                      uint64_t v128 = 0;
                      int v129 = -1;
                      *(void *)&long long v125 = &v132;
                      *((void *)&v125 + 1) = &v130;
                      google::protobuf::strings::Substitute("Field number $0 has already been used in \"$1\" by field \"$2\".", (uint64_t)&v143, (uint64_t)&v142, (uint64_t)&v141, (uint64_t)&v140, (uint64_t)&v138, (uint64_t)&v136, (uint64_t)&v134, &__p, v125, (uint64_t)&v128);
                      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v93, (uint64_t)a3, 1, (uint64_t)&__p);
                    }
LABEL_178:
                    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                      operator delete(__p.__r_.__value_.__l.__data_);
                    }
                    if (SHIBYTE(v127.__r_.__value_.__r.__words[2]) < 0)
                    {
                      uint64_t v82 = (void *)v127.__r_.__value_.__r.__words[0];
LABEL_182:
                      operator delete(v82);
                    }
                    return;
                  }
LABEL_98:
                  uint64_t v61 = *(long long **)(v34 + 8);
                  if (*((char *)v61 + 23) < 0)
                  {
                    std::string::__init_copy_ctor_external(&v127, *(const std::string::value_type **)v61, *((void *)v61 + 1));
                  }
                  else
                  {
                    long long v62 = *v61;
                    v127.__r_.__value_.__r.__words[2] = *((void *)v61 + 2);
                    *(_OWORD *)&v127.__r_.__value_.__l.__data_ = v62;
                  }
                  goto LABEL_159;
                }
              }
              else
              {
                if (v38.u32[0] > 1uLL)
                {
                  if (v58 >= *(void *)&v35) {
                    v58 %= *(void *)&v35;
                  }
                }
                else
                {
                  v58 &= *(void *)&v35 - 1;
                }
                if (v58 != v39) {
                  break;
                }
              }
            }
          }
        }
        uint64_t v60 = 0;
        if (!v34) {
          goto LABEL_158;
        }
        goto LABEL_98;
      }
      if (!*((unsigned char *)a2 + 67)
        || (google::protobuf::DescriptorPool::Tables::AddExtension(*((google::protobuf::DescriptorPool::Tables **)this + 1), a2) & 1) != 0)
      {
        return;
      }
      uint64_t v18 = *((void *)this + 1);
      unint64_t v19 = *((void *)a2 + 10);
      uint64_t v20 = std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::find<std::pair<google::protobuf::Descriptor const*,int>>(v18 + 384, v19, *((_DWORD *)a2 + 17));
      if ((uint64_t *)(v18 + 392) == v20)
      {
        uint64_t v22 = 0;
        if (v19)
        {
LABEL_38:
          uint64_t v23 = *(long long **)(v19 + 8);
          if (*((char *)v23 + 23) < 0)
          {
            std::string::__init_copy_ctor_external(&v127, *(const std::string::value_type **)v23, *((void *)v23 + 1));
          }
          else
          {
            long long v24 = *v23;
            v127.__r_.__value_.__r.__words[2] = *((void *)v23 + 2);
            *(_OWORD *)&v127.__r_.__value_.__l.__data_ = v24;
          }
          goto LABEL_144;
        }
      }
      else
      {
        uint64_t v22 = v20[6];
        if (v19) {
          goto LABEL_38;
        }
      }
      std::string::basic_string[abi:ne180100]<0>(&v127, "unknown");
LABEL_144:
      v143.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*((unsigned int *)a2 + 17), &v143.__r_.__value_.__s.__data_[12], v21);
      LODWORD(v143.__r_.__value_.__r.__words[1]) = strlen(v143.__r_.__value_.__l.__data_);
      int v83 = HIBYTE(v127.__r_.__value_.__r.__words[2]);
      uint64_t v84 = &v127;
      if ((v127.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        uint64_t v84 = (std::string *)v127.__r_.__value_.__r.__words[0];
      }
      v142.__r_.__value_.__r.__words[0] = (std::string::size_type)v84;
      if ((v127.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v83 = v127.__r_.__value_.__r.__words[1];
      }
      LODWORD(v142.__r_.__value_.__r.__words[1]) = v83;
      std::string::size_type v85 = *(void *)(v22 + 8);
      int v86 = *(char *)(v85 + 23);
      uint64_t v87 = *(void *)(v85 + 8);
      if (v86 < 0) {
        std::string::size_type v85 = *(void *)v85;
      }
      v141.__r_.__value_.__r.__words[0] = v85;
      int v88 = v86;
      if (v86 < 0) {
        int v88 = v87;
      }
      LODWORD(v141.__r_.__value_.__r.__words[1]) = v88;
      std::string::size_type v89 = **(void **)(v22 + 40);
      int v90 = *(char *)(v89 + 23);
      uint64_t v91 = *(void *)(v89 + 8);
      if (v90 < 0) {
        std::string::size_type v89 = *(void *)v89;
      }
      v140.__r_.__value_.__r.__words[0] = v89;
      int v92 = v90;
      if (v90 < 0) {
        int v92 = v91;
      }
      LODWORD(v140.__r_.__value_.__r.__words[1]) = v92;
      uint64_t v138 = 0;
      int v139 = -1;
      uint64_t v136 = 0;
      int v137 = -1;
      uint64_t v134 = 0;
      int v135 = -1;
      uint64_t v132 = 0;
      int v133 = -1;
      uint64_t v130 = 0;
      int v131 = -1;
      uint64_t v128 = 0;
      int v129 = -1;
      *(void *)&long long v123 = &v132;
      *((void *)&v123 + 1) = &v130;
      google::protobuf::strings::Substitute("Extension number $0 has already been used in \"$1\" by extension \"$2\" defined in $3.", (uint64_t)&v143, (uint64_t)&v142, (uint64_t)&v141, (uint64_t)&v140, (uint64_t)&v138, (uint64_t)&v136, (uint64_t)&v134, &__p, v123, (uint64_t)&v128);
      google::protobuf::DescriptorBuilder::AddWarning((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 1, (uint64_t)&__p);
      goto LABEL_178;
    }
    if (*(int *)(google::protobuf::FieldDescriptor::enum_type(a2) + 44) >= 1) {
      *((void *)a2 + 18) = *(void *)(google::protobuf::FieldDescriptor::enum_type(a2) + 48);
    }
    goto LABEL_33;
  }
  if (Symbol == 1)
  {
    *((void *)a2 + 13) = v53;
    if (*((unsigned char *)a2 + 64)) {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 4, "Messages can't have default values.");
    }
    goto LABEL_33;
  }
  uint64_t v68 = *((void *)a2 + 1);
  std::operator+<char>();
  uint64_t v69 = std::string::append(&v142, "\" is not a message type.");
  long long v70 = *(_OWORD *)&v69->__r_.__value_.__l.__data_;
  v143.__r_.__value_.__r.__words[2] = v69->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v143.__r_.__value_.__l.__data_ = v70;
  v69->__r_.__value_.__l.__size_ = 0;
  v69->__r_.__value_.__r.__words[2] = 0;
  v69->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v68, (uint64_t)a3, 2, (uint64_t)&v143);
LABEL_137:
  if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v143.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0)
  {
    uint64_t v82 = (void *)v142.__r_.__value_.__r.__words[0];
    goto LABEL_182;
  }
}

void sub_1891F5F68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *__p,uint64_t a60,int a61,__int16 a62,char a63)
{
  if (*(char *)(v64 - 121) < 0) {
    operator delete(*(void **)(v64 - 144));
  }
  if (*(char *)(v64 - 169) < 0) {
    operator delete(*(void **)(v64 - 192));
  }
  if (*(char *)(v64 - 217) < 0) {
    operator delete(*(void **)(v64 - 240));
  }
  if (a64 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::CrossLinkEnum(uint64_t a1)
{
  if (!*(void *)(a1 + 32))
  {
    if (atomic_load_explicit(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
      google::protobuf::internal::InitSCCImpl(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto);
    }
    *(void *)(a1 + 32) = &google::protobuf::_EnumOptions_default_instance_;
  }
  int v2 = *(_DWORD *)(a1 + 44);
  if (v2 >= 1)
  {
    uint64_t v3 = 0;
    uint64_t v4 = 32;
    do
    {
      uint64_t v5 = *(void *)(a1 + 48);
      if (!*(void *)(v5 + v4))
      {
        if (atomic_load_explicit(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire))
        {
          google::protobuf::internal::InitSCCImpl(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto);
        }
        *(void *)(v5 + v4) = &google::protobuf::_EnumValueOptions_default_instance_;
        int v2 = *(_DWORD *)(a1 + 44);
      }
      ++v3;
      v4 += 40;
    }
    while (v3 < v2);
  }
}

void google::protobuf::internal::LazyDescriptor::SetLazy(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*a1)
  {
    int v9 = 3;
    uint64_t v10 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    int v11 = 7417;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: !descriptor_: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v9);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (a1[3])
  {
    int v9 = 3;
    uint64_t v10 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    int v11 = 7418;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: !file_: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v9);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (a1[1])
  {
    int v9 = 3;
    uint64_t v10 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    int v11 = 7419;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: !name_: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v9);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (a1[2]
    && (int v9 = 3,
        uint64_t v10 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc",
        int v11 = 7420,
        memset(&__p, 0, sizeof(__p)),
        std::string::append(&__p, "CHECK failed: !once_: "),
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v9),
        SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0))
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (a4)
    {
LABEL_13:
      uint64_t v8 = *(void *)(a4 + 16);
      if (v8) {
        goto LABEL_19;
      }
    }
  }
  else if (a4)
  {
    goto LABEL_13;
  }
  int v9 = 3;
  uint64_t v10 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
  int v11 = 7421;
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "CHECK failed: file && file->pool_: ");
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v9);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  uint64_t v8 = *(void *)(a4 + 16);
LABEL_19:
  if (!*(unsigned char *)(v8 + 41))
  {
    int v9 = 3;
    uint64_t v10 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    int v11 = 7422;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: file->pool_->lazily_build_dependencies_: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v9);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (*(unsigned char *)(a4 + 65))
  {
    int v9 = 3;
    uint64_t v10 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    int v11 = 7423;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: !file->finished_building_: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v9);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  a1[3] = a4;
  google::protobuf::DescriptorPool::Tables::AllocateString(*(void *)(*(void *)(a4 + 16) + 32), a2, a3);
}

void sub_1891F63EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::LazyDescriptor::Set(google::protobuf::internal::LazyDescriptor *this, const google::protobuf::Descriptor *a2)
{
  if (*((void *)this + 1))
  {
    int v4 = 3;
    uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    int v6 = 7408;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: !name_: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (*((void *)this + 2))
  {
    int v4 = 3;
    uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    int v6 = 7409;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: !once_: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (*((void *)this + 3))
  {
    int v4 = 3;
    uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    int v6 = 7410;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: !file_: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  *(void *)this = a2;
}

void sub_1891F656C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::ValidateMessageOptions(google::protobuf::DescriptorBuilder *this, google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  if (*((int *)a2 + 26) >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateFieldOptions(this, (google::protobuf::FieldDescriptor *)(*((void *)a2 + 5) + v6), *(const google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 5) + 8 * v7++ + 8));
      v6 += 152;
    }
    while (v7 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 29) >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateMessageOptions(this, (google::protobuf::Descriptor *)(*((void *)a2 + 7) + v8), *(const google::protobuf::DescriptorProto **)(*((void *)a3 + 8) + 8 * v9++ + 8));
      v8 += 144;
    }
    while (v9 < *((int *)a2 + 29));
  }
  if (*((int *)a2 + 30) >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateEnumOptions((uint64_t)this, *((void *)a2 + 8) + v10, *(void *)(*((void *)a3 + 11) + 8 * v11++ + 8));
      v10 += 80;
    }
    while (v11 < *((int *)a2 + 30));
  }
  if (*((int *)a2 + 32) >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateFieldOptions(this, (google::protobuf::FieldDescriptor *)(*((void *)a2 + 10) + v12), *(const google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 17) + 8 * v13++ + 8));
      v12 += 152;
    }
    while (v13 < *((int *)a2 + 32));
  }
  if (*(unsigned char *)(*((void *)a2 + 4) + 72)) {
    unint64_t v14 = 0x7FFFFFFFLL;
  }
  else {
    unint64_t v14 = 0x1FFFFFFFLL;
  }
  int v15 = *((_DWORD *)a2 + 31);
  if (v15 >= 1)
  {
    uint64_t v16 = 0;
    uint64_t v17 = 4;
    do
    {
      if ((uint64_t)(v14 + 1) < *(int *)(*((void *)a2 + 9) + v17))
      {
        uint64_t v18 = *((void *)a2 + 1);
        uint64_t v19 = *(void *)(*((void *)a3 + 14) + 8 * v16 + 8);
        uint64_t v40 = AddrObjGoogle::protobuf::FastInt64ToBuffer(v14, v42, (char *)a3);
        int v41 = strlen(v40);
        uint64_t v38 = 0;
        int v39 = -1;
        uint64_t v36 = 0;
        int v37 = -1;
        uint64_t v34 = 0;
        int v35 = -1;
        uint64_t v32 = 0;
        int v33 = -1;
        uint64_t v30 = 0;
        int v31 = -1;
        uint64_t v28 = 0;
        int v29 = -1;
        uint64_t v26 = 0;
        int v27 = -1;
        uint64_t v24 = 0;
        int v25 = -1;
        uint64_t v22 = 0;
        int v23 = -1;
        *((void *)&v20 + 1) = &v24;
        *(void *)&long long v20 = &v26;
        google::protobuf::strings::Substitute("Extension numbers cannot be greater than $0.", (uint64_t)&v40, (uint64_t)&v38, (uint64_t)&v36, (uint64_t)&v34, (uint64_t)&v32, (uint64_t)&v30, (uint64_t)&v28, &__p, v20, (uint64_t)&v22);
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v18, v19, 1, (uint64_t)&__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        int v15 = *((_DWORD *)a2 + 31);
      }
      ++v16;
      v17 += 16;
    }
    while (v16 < v15);
  }
}

void sub_1891F6868(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
}

void google::protobuf::DescriptorBuilder::ValidateEnumOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 32);
  if ((*(unsigned char *)(v6 + 40) & 1) == 0 || !*(unsigned char *)(v6 + 72))
  {
    v42[1] = 0;
    int v41 = v42;
    v42[0] = 0;
    if (*(int *)(a2 + 44) < 1)
    {
      uint64_t v34 = 0;
    }
    else
    {
      uint64_t v7 = 0;
      do
      {
        uint64_t v8 = *(void *)(a2 + 48);
        uint64_t v9 = v8 + 40 * v7;
        int v12 = *(_DWORD *)(v9 + 16);
        uint64_t v11 = (int *)(v9 + 16);
        int v10 = v12;
        uint64_t v13 = v42[0];
        if (!v42[0]) {
          goto LABEL_14;
        }
        unint64_t v14 = v42;
        do
        {
          int v15 = (uint64_t *)v13;
          uint64_t v16 = v14;
          int v17 = *(_DWORD *)(v13 + 32);
          uint64_t v18 = (uint64_t *)(v13 + 8);
          if (v17 >= v10)
          {
            uint64_t v18 = v15;
            unint64_t v14 = v15;
          }
          uint64_t v13 = *v18;
        }
        while (v13);
        if (v14 == v42) {
          goto LABEL_14;
        }
        if (v17 < v10) {
          int v15 = v16;
        }
        if (v10 >= *((_DWORD *)v15 + 8))
        {
          std::operator+<char>();
          uint64_t v21 = std::string::append(&v36, "\" uses the same enum value as \"");
          long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
          v37.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v22;
          v21->__r_.__value_.__l.__size_ = 0;
          v21->__r_.__value_.__r.__words[2] = 0;
          v21->__r_.__value_.__r.__words[0] = 0;
          int v35 = *v11;
          uint64_t v43 = &v35;
          int v23 = std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int &&>,std::tuple<>>(&v41, &v35, (uint64_t)&std::piecewise_construct, &v43);
          uint64_t v26 = v23[5];
          uint64_t v24 = v23 + 5;
          int v25 = (const std::string::value_type *)v26;
          int v27 = *((char *)v24 + 23);
          if (v27 >= 0) {
            uint64_t v28 = (const std::string::value_type *)v24;
          }
          else {
            uint64_t v28 = v25;
          }
          if (v27 >= 0) {
            std::string::size_type v29 = *((unsigned __int8 *)v24 + 23);
          }
          else {
            std::string::size_type v29 = (std::string::size_type)v24[1];
          }
          uint64_t v30 = std::string::append(&v37, v28, v29);
          long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
          v38.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v31;
          v30->__r_.__value_.__l.__size_ = 0;
          v30->__r_.__value_.__r.__words[2] = 0;
          v30->__r_.__value_.__r.__words[0] = 0;
          uint64_t v32 = std::string::append(&v38, "\". If this is intended, set 'option allow_alias = true;' to the enum definition.");
          long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
          std::string::size_type v40 = v32->__r_.__value_.__r.__words[2];
          *(_OWORD *)std::string __p = v33;
          v32->__r_.__value_.__l.__size_ = 0;
          v32->__r_.__value_.__r.__words[2] = 0;
          v32->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v38.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v37.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v36.__r_.__value_.__l.__data_);
          }
          if (!*(unsigned char *)(*(void *)(a2 + 32) + 72)) {
            google::protobuf::DescriptorBuilder::AddError(a1, *(void *)(a2 + 8), *(void *)(*(void *)(a3 + 40) + 8 * v7 + 8), 1, (uint64_t)__p);
          }
          if (SHIBYTE(v40) < 0) {
            operator delete(__p[0]);
          }
        }
        else
        {
LABEL_14:
          uint64_t v19 = *(const std::string **)(v8 + 40 * v7 + 8);
          LODWORD(v38.__r_.__value_.__l.__data_) = v10;
          __p[0] = &v38;
          long long v20 = std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int &&>,std::tuple<>>(&v41, (int *)&v38, (uint64_t)&std::piecewise_construct, (_DWORD **)__p);
          std::string::operator=((std::string *)(v20 + 5), v19);
        }
        ++v7;
      }
      while (v7 < *(int *)(a2 + 44));
      uint64_t v34 = (char *)v42[0];
    }
    std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy((uint64_t)&v41, v34);
  }
}

void sub_1891F6B10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36,char *a37)
{
  if (a35 < 0) {
    operator delete(__p);
  }
  std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy((uint64_t)&a36, a37);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::ValidateFieldOptions(google::protobuf::DescriptorBuilder *this, google::protobuf::FieldDescriptor *a2, const google::protobuf::FieldDescriptorProto *a3)
{
  if (*(unsigned char *)(*(void *)this + 41) && (!a2 || !google::protobuf::FieldDescriptor::message_type(a2))) {
    return;
  }
  if (*(unsigned char *)(*((void *)a2 + 15) + 77))
  {
    uint64_t v6 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    if (v6)
    {
      std::string::size_type v56 = a2;
      long long v57 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v6, memory_order_acquire) != -1)
      {
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v57;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v56;
        v54.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
        std::__call_once(v6, &v54, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    if (*((_DWORD *)a2 + 14) != 11) {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 2, "[lazy = true] can only be specified for submessage fields.");
    }
  }
  if (*(unsigned char *)(*((void *)a2 + 15) + 76))
  {
    if (*((_DWORD *)a2 + 15) != 3) {
      goto LABEL_16;
    }
    uint64_t v7 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    if (v7)
    {
      std::string::size_type v56 = a2;
      long long v57 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
      {
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v57;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v56;
        v54.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
        std::__call_once(v7, &v54, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    if ((*((_DWORD *)a2 + 14) - 13) >= 0xFFFFFFFC) {
LABEL_16:
    }
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 2, "[packed = true] can only be specified for repeated primitive fields.");
  }
  uint64_t v8 = *((void *)a2 + 10);
  if (v8)
  {
    uint64_t v9 = *(void **)(v8 + 32);
    if (atomic_load_explicit(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
      google::protobuf::internal::InitSCCImpl(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto);
    }
    if (v9 != &google::protobuf::_MessageOptions_default_instance_
      && *(unsigned char *)(*(void *)(*((void *)a2 + 10) + 32) + 72))
    {
      if (!*((unsigned char *)a2 + 67))
      {
        uint64_t v11 = *((void *)a2 + 1);
        int v12 = "MessageSets cannot have fields, only extensions.";
        uint64_t v13 = this;
        unint64_t v14 = a3;
        uint64_t v15 = 0;
        goto LABEL_30;
      }
      if (*((_DWORD *)a2 + 15) != 1) {
        goto LABEL_28;
      }
      int v10 = (std::once_flag::_State_type *)*((void *)a2 + 6);
      if (v10)
      {
        std::string::size_type v56 = a2;
        long long v57 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
        {
          __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v57;
          __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v56;
          v54.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
          std::__call_once(v10, &v54, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if (*((_DWORD *)a2 + 14) != 11)
      {
LABEL_28:
        uint64_t v11 = *((void *)a2 + 1);
        int v12 = "Extensions of MessageSets must be optional messages.";
        uint64_t v13 = this;
        unint64_t v14 = a3;
        uint64_t v15 = 2;
LABEL_30:
        google::protobuf::DescriptorBuilder::AddError((uint64_t)v13, v11, (uint64_t)v14, v15, v12);
      }
    }
  }
  uint64_t v16 = *((void *)a2 + 5);
  if (v16)
  {
    int v17 = *(void **)(v16 + 136);
    if (atomic_load_explicit(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
      google::protobuf::internal::InitSCCImpl(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto);
    }
    if (v17 != &google::protobuf::_FileOptions_default_instance_ && *(_DWORD *)(*(void *)(v16 + 136) + 160) == 3)
    {
      uint64_t v18 = *((void *)a2 + 10);
      if (v18)
      {
        uint64_t v19 = *(void *)(v18 + 16);
        if (!v19) {
          goto LABEL_42;
        }
        long long v20 = *(void **)(v19 + 136);
        if (atomic_load_explicit(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
          google::protobuf::internal::InitSCCImpl(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto);
        }
        if (v20 == &google::protobuf::_FileOptions_default_instance_
          || *(_DWORD *)(*(void *)(v19 + 136) + 160) != 3)
        {
LABEL_42:
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 3, "Extensions to non-lite types can only be declared in non-lite files.  Note that you cannot extend a non-lite type to contain a lite type, but the reverse is allowed.");
        }
      }
    }
  }
  uint64_t v21 = (std::once_flag::_State_type *)*((void *)a2 + 6);
  if (v21)
  {
    std::string::size_type v56 = a2;
    long long v57 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v21, memory_order_acquire) != -1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v57;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v56;
      v54.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
      std::__call_once(v21, &v54, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a2 + 14) == 11 && *(unsigned char *)(*(void *)(*((void *)a2 + 13) + 32) + 75))
  {
    uint64_t v22 = google::protobuf::FieldDescriptor::message_type(a2);
    if (*(_DWORD *)(v22 + 128)) {
      goto LABEL_80;
    }
    if (*((_DWORD *)a2 + 15) != 3) {
      goto LABEL_80;
    }
    int v23 = (void *)v22;
    if (*(_DWORD *)(v22 + 124) || *(_DWORD *)(v22 + 116) || *(_DWORD *)(v22 + 120) || *(_DWORD *)(v22 + 104) != 2) {
      goto LABEL_80;
    }
    uint64_t v24 = *(unsigned __int8 **)v22;
    int v25 = std::string::append(&v54, "Entry");
    std::string __p = *v25;
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    BOOL v26 = std::operator!=[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(v24, (unsigned __int8 *)&__p)
       || *((void *)a2 + 10) != v23[3];
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v54.__r_.__value_.__l.__data_);
    }
    if (v26) {
      goto LABEL_80;
    }
    if (*(unsigned char *)(v23[4] + 75))
    {
      int v27 = (_DWORD *)v23[5];
      uint64_t v28 = (google::protobuf::FieldDescriptor *)(v27 + 38);
    }
    else
    {
      int v27 = 0;
      uint64_t v28 = 0;
    }
    if (v27[15] != 1 || v27[17] != 1) {
      goto LABEL_80;
    }
    uint64_t v53 = v28;
    std::string::size_type v29 = (google::protobuf::FieldDescriptor *)v27;
    uint64_t v30 = *(unsigned __int16 **)v27;
    int v31 = *((char *)v30 + 23);
    if (v31 < 0)
    {
      if (*((void *)v30 + 1) != 3)
      {
LABEL_80:
        int v35 = "map_entry should not be set explicitly. Use map<KeyType, ValueType> instead.";
LABEL_81:
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 2, v35);
        goto LABEL_82;
      }
      uint64_t v30 = *(unsigned __int16 **)v30;
    }
    else if (v31 != 3)
    {
      goto LABEL_80;
    }
    int v32 = *v30;
    int v33 = *((unsigned __int8 *)v30 + 2);
    BOOL v34 = v32 == 25963 && v33 == 121;
    if (!v34
      || *((_DWORD *)v53 + 15) != 1
      || *((_DWORD *)v53 + 17) != 2
      || std::operator!=[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(*(void **)v53, "value"))
    {
      goto LABEL_80;
    }
    unsigned int v52 = google::protobuf::FieldDescriptor::type(v29) - 1;
    if (v52 <= 0xD && ((0x2E03u >> v52) & 1) != 0) {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 2, off_1E53D7550[v52]);
    }
    if (google::protobuf::FieldDescriptor::type(v53) == 14
      && *(_DWORD *)(*(void *)(google::protobuf::FieldDescriptor::enum_type(v53) + 48) + 16))
    {
      int v35 = "Enum value in map must define 0 as the first value.";
      goto LABEL_81;
    }
  }
LABEL_82:
  unsigned int v36 = *(_DWORD *)(*((void *)a2 + 15) + 80);
  if (v36)
  {
    std::string v37 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    if (v37)
    {
      std::string::size_type v56 = a2;
      long long v57 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v37, memory_order_acquire) != -1)
      {
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v57;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v56;
        v54.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
        std::__call_once(v37, &v54, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    unsigned int v38 = *((_DWORD *)a2 + 14);
    if (v38 <= 0x12 && ((1 << v38) & 0x50058) != 0)
    {
      if (v36 >= 3)
      {
        uint64_t v39 = *((void *)a2 + 1);
        google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
        std::operator+<char>();
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v39, (uint64_t)a3, 2, (uint64_t)&__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
    }
    else
    {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 2, "jstype is only allowed on int64, uint64, sint64, fixed64 or sfixed64 fields.");
    }
  }
  if (*((unsigned char *)a2 + 67) && *((unsigned char *)a2 + 66))
  {
    std::string::size_type v40 = (unsigned __int8 *)*((void *)a2 + 4);
    uint64_t v41 = v40[23];
    if ((v41 & 0x80u) == 0) {
      uint64_t v42 = v40[23];
    }
    else {
      uint64_t v42 = *((void *)v40 + 1);
    }
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    int v44 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    if (v42 == size)
    {
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::__split_buffer<std::string>::pointer p_p = &__p;
      }
      else {
        std::__split_buffer<std::string>::pointer p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((v41 & 0x80) != 0)
      {
        BOOL v50 = memcmp(*(const void **)v40, p_p, *((void *)v40 + 1)) != 0;
        goto LABEL_115;
      }
      if (v40[23])
      {
        uint64_t v46 = v41 - 1;
        do
        {
          int v48 = *v40++;
          int v47 = v48;
          int v49 = p_p->__r_.__value_.__s.__data_[0];
          std::__split_buffer<std::string>::pointer p_p = (std::string *)((char *)p_p + 1);
          BOOL v50 = v47 != v49;
        }
        while (v47 == v49 && v46-- != 0);
LABEL_115:
        if ((v44 & 0x80000000) == 0) {
          goto LABEL_117;
        }
        goto LABEL_116;
      }
      BOOL v50 = 0;
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_117:
        if (v50) {
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 7, "option json_name is not allowed on extension fields.");
        }
        return;
      }
    }
    else
    {
      BOOL v50 = 1;
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_117;
      }
    }
LABEL_116:
    operator delete(__p.__r_.__value_.__l.__data_);
    goto LABEL_117;
  }
}

void sub_1891F7310(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::ValidateProto3Field(google::protobuf::DescriptorBuilder *this, google::protobuf::FieldDescriptor *a2, const google::protobuf::FieldDescriptorProto *a3)
{
  if (*((unsigned char *)a2 + 67))
  {
    uint64_t v6 = *(const void ***)(*((void *)a2 + 10) + 8);
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29F2E0, memory_order_acquire) & 1) == 0)
    {
      BOOL v26 = (google::protobuf::_anonymous_namespace_ *)__cxa_guard_acquire(&qword_1EB29F2E0);
      if (v26) {
    }
      }
    uint64_t v7 = qword_1EB29F2D8 + 8;
    uint64_t v8 = *(void *)(qword_1EB29F2D8 + 8);
    if (!v8) {
      goto LABEL_10;
    }
    uint64_t v9 = qword_1EB29F2D8 + 16;
    uint64_t v10 = qword_1EB29F2D8 + 8;
    do
    {
      BOOL v11 = std::less<std::string>::operator()[abi:ne180100](v9, (const void **)(v8 + 32), v6);
      int v12 = (uint64_t *)(v8 + 8);
      if (!v11)
      {
        int v12 = (uint64_t *)v8;
        uint64_t v10 = v8;
      }
      uint64_t v8 = *v12;
    }
    while (*v12);
    if (v10 == v7 || std::less<std::string>::operator()[abi:ne180100](v9, v6, (const void **)(v10 + 32))) {
LABEL_10:
    }
      uint64_t v10 = v7;
    if (qword_1EB29F2D8 + 8 == v10) {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 3, "Extensions in proto3 are only allowed for defining options.");
    }
  }
  if (*((_DWORD *)a2 + 15) == 2) {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 2, "Required fields are not allowed in proto3.");
  }
  if (*((unsigned char *)a2 + 64)) {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 4, "Explicit default values are not allowed in proto3.");
  }
  uint64_t v13 = (std::once_flag::_State_type *)*((void *)a2 + 6);
  if (v13)
  {
    v28.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v27.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
    {
      __p[0] = &v28;
      __p[1] = &v27;
      v29.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
      std::__call_once(v13, &v29, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a2 + 14) == 14
    && google::protobuf::FieldDescriptor::enum_type(a2)
    && *(_DWORD *)(*(void *)(google::protobuf::FieldDescriptor::enum_type(a2) + 16) + 60) != 3
    && *(_DWORD *)(*(void *)(google::protobuf::FieldDescriptor::enum_type(a2) + 16) + 60))
  {
    uint64_t v14 = *((void *)a2 + 1);
    google::protobuf::FieldDescriptor::enum_type(a2);
    std::operator+<char>();
    uint64_t v15 = std::string::append(&v27, "\" is not a proto3 enum, but is used in \"");
    long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    v28.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v16;
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    uint64_t v17 = *(void *)(*((void *)a2 + 10) + 8);
    int v18 = *(char *)(v17 + 23);
    if (v18 >= 0) {
      uint64_t v19 = *(const std::string::value_type **)(*((void *)a2 + 10) + 8);
    }
    else {
      uint64_t v19 = *(const std::string::value_type **)v17;
    }
    if (v18 >= 0) {
      std::string::size_type v20 = *(unsigned __int8 *)(v17 + 23);
    }
    else {
      std::string::size_type v20 = *(void *)(v17 + 8);
    }
    uint64_t v21 = std::string::append(&v28, v19, v20);
    long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
    v29.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = v22;
    v21->__r_.__value_.__l.__size_ = 0;
    v21->__r_.__value_.__r.__words[2] = 0;
    v21->__r_.__value_.__r.__words[0] = 0;
    int v23 = std::string::append(&v29, "\" which is a proto3 message type.");
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    std::string::size_type v31 = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v14, (uint64_t)a3, 2, (uint64_t)__p);
    if (SHIBYTE(v31) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v29.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v28.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v27.__r_.__value_.__l.__data_);
    }
  }
  int v25 = (std::once_flag::_State_type *)*((void *)a2 + 6);
  if (v25)
  {
    v28.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v27.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    if (atomic_load_explicit((atomic_ullong *volatile)v25, memory_order_acquire) != -1)
    {
      __p[0] = &v28;
      __p[1] = &v27;
      v29.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
      std::__call_once(v25, &v29, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a2 + 14) == 10) {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 2, "Groups are not supported in proto3 syntax.");
  }
}

void sub_1891F76EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
}

void google::protobuf::DescriptorBuilder::ValidateProto3Message(google::protobuf::DescriptorBuilder *this, google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  if (*((int *)a2 + 29) >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateProto3Message(this, (google::protobuf::Descriptor *)(*((void *)a2 + 7) + v6), *(const google::protobuf::DescriptorProto **)(*((void *)a3 + 8) + 8 * v7++ + 8));
      v6 += 144;
    }
    while (v7 < *((int *)a2 + 29));
  }
  if (*((int *)a2 + 30) >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateProto3Enum((uint64_t)this, *((void *)a2 + 8) + v8, *(void *)(*(void *)(*((void *)a3 + 11) + 8 * v9++ + 8) + 40));
      v8 += 80;
    }
    while (v9 < *((int *)a2 + 30));
  }
  if (*((int *)a2 + 26) >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateProto3Field(this, (google::protobuf::FieldDescriptor *)(*((void *)a2 + 5) + v10), *(const google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 5) + 8 * v11++ + 8));
      v10 += 152;
    }
    while (v11 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 32) >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateProto3Field(this, (google::protobuf::FieldDescriptor *)(*((void *)a2 + 10) + v12), *(const google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 17) + 8 * v13++ + 8));
      v12 += 152;
    }
    while (v13 < *((int *)a2 + 32));
  }
  if (*((int *)a2 + 31) > 0) {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), *(void *)(*((void *)a3 + 14) + 8), 1, "Extension ranges are not allowed in proto3.");
  }
  if (*(unsigned char *)(*((void *)a2 + 4) + 72)) {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 0, "MessageSet is not supported in proto3.");
  }
  unsigned int v52 = 0;
  uint64_t v53 = 0;
  std::string v51 = &v52;
  if (*((int *)a2 + 26) < 1)
  {
    uint64_t v43 = 0;
  }
  else
  {
    uint64_t v14 = 0;
    do
    {
      uint64_t v15 = *(unsigned __int8 **)(*((void *)a2 + 5) + 152 * v14);
      memset(&v50, 0, sizeof(v50));
      int v16 = (char)v15[23];
      if (v16 >= 0) {
        uint64_t v17 = v15;
      }
      else {
        uint64_t v17 = *(unsigned __int8 **)v15;
      }
      if (v16 >= 0) {
        uint64_t v18 = v15[23];
      }
      else {
        uint64_t v18 = *((void *)v15 + 1);
      }
      for (; v18; --v18)
      {
        int v19 = *v17;
        if (v19 != 95)
        {
          if ((v19 - 65) < 0x1A) {
            LOBYTE(v19) = v19 + 32;
          }
          std::string::push_back(&v50, v19);
        }
        ++v17;
      }
      std::string::size_type v20 = v52;
      if (!v52) {
        goto LABEL_45;
      }
      uint64_t v21 = &v52;
      do
      {
        long long v22 = v21;
        int v23 = (const void **)(v20 + 32);
        BOOL v24 = std::less<std::string>::operator()[abi:ne180100]((uint64_t)&v53, (const void **)v20 + 4, (const void **)&v50.__r_.__value_.__l.__data_);
        if (v24) {
          int v25 = (char **)(v20 + 8);
        }
        else {
          int v25 = (char **)v20;
        }
        if (v24) {
          uint64_t v21 = v22;
        }
        else {
          uint64_t v21 = (char **)v20;
        }
        std::string::size_type v20 = *v25;
      }
      while (*v25);
      if (v21 == &v52
        || (!v24 ? (BOOL v26 = v23) : (BOOL v26 = (const void **)(v22 + 4)),
            std::less<std::string>::operator()[abi:ne180100]((uint64_t)&v53, (const void **)&v50.__r_.__value_.__l.__data_, v26)))
      {
LABEL_45:
        uint64_t v27 = *((void *)a2 + 5);
        __p[0] = &v50;
        std::__tree<std::__value_type<std::string,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::FieldDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::FieldDescriptor const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t **)&v51, (const void **)&v50.__r_.__value_.__l.__data_, (long long **)__p)[7] = v27 + 152 * v14;
      }
      else
      {
        uint64_t v28 = *((void *)a2 + 1);
        uint64_t v29 = *(void *)(*((void *)a3 + 5) + 8 * v14 + 8);
        std::operator+<char>();
        uint64_t v30 = std::string::append(&v44, "\" conflicts with field \"");
        long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
        v45.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v31;
        v30->__r_.__value_.__l.__size_ = 0;
        v30->__r_.__value_.__r.__words[2] = 0;
        v30->__r_.__value_.__r.__words[0] = 0;
        std::string v54 = &v50;
        int v32 = std::__tree<std::__value_type<std::string,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::FieldDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::FieldDescriptor const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t **)&v51, (const void **)&v50.__r_.__value_.__l.__data_, (long long **)&v54);
        uint64_t v33 = *(void *)v32[7];
        int v34 = *(char *)(v33 + 23);
        if (v34 >= 0) {
          int v35 = *(const std::string::value_type **)v32[7];
        }
        else {
          int v35 = *(const std::string::value_type **)v33;
        }
        if (v34 >= 0) {
          std::string::size_type v36 = *(unsigned __int8 *)(v33 + 23);
        }
        else {
          std::string::size_type v36 = *(void *)(v33 + 8);
        }
        std::string v37 = std::string::append(&v45, v35, v36);
        long long v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
        v46.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v38;
        v37->__r_.__value_.__l.__size_ = 0;
        v37->__r_.__value_.__r.__words[2] = 0;
        v37->__r_.__value_.__r.__words[0] = 0;
        uint64_t v39 = std::string::append(&v46, "\". This is not ");
        long long v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
        v47.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v40;
        v39->__r_.__value_.__l.__size_ = 0;
        v39->__r_.__value_.__r.__words[2] = 0;
        v39->__r_.__value_.__r.__words[0] = 0;
        uint64_t v41 = std::string::append(&v47, "allowed in proto3.");
        long long v42 = *(_OWORD *)&v41->__r_.__value_.__l.__data_;
        std::string::size_type v49 = v41->__r_.__value_.__r.__words[2];
        *(_OWORD *)std::string __p = v42;
        v41->__r_.__value_.__l.__size_ = 0;
        v41->__r_.__value_.__r.__words[2] = 0;
        v41->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v28, v29, 0, (uint64_t)__p);
        if (SHIBYTE(v49) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v47.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v46.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v45.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v44.__r_.__value_.__l.__data_);
        }
      }
      if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v50.__r_.__value_.__l.__data_);
      }
      ++v14;
    }
    while (v14 < *((int *)a2 + 26));
    uint64_t v43 = v52;
  }
  std::__tree<std::__value_type<std::string,BOOL>,std::__map_value_compare<std::string,std::__value_type<std::string,BOOL>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,BOOL>>>::destroy(v43);
}

void sub_1891F7BC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (a42 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (*(char *)(v42 - 121) < 0) {
    operator delete(*(void **)(v42 - 144));
  }
  std::__tree<std::__value_type<std::string,BOOL>,std::__map_value_compare<std::string,std::__value_type<std::string,BOOL>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,BOOL>>>::destroy(*(char **)(v42 - 112));
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::ValidateProto3Enum(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(int *)(a2 + 44) >= 1)
  {
    if (*(_DWORD *)(*(void *)(a2 + 48) + 16)) {
      google::protobuf::DescriptorBuilder::AddError(a1, *(void *)(a2 + 8), *(void *)(a3 + 8), 1, "The first enum value must be zero in proto3.");
    }
  }
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::~OptionInterpreter(google::protobuf::DescriptorBuilder::OptionInterpreter *this)
{
}

BOOL google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = *(_DWORD **)a6;
  uint64_t v10 = *(void *)(a6 + 8) - *(void *)a6;
  unint64_t v11 = (unint64_t)v10 >> 4;
  if (a2 != a3)
  {
    if ((int)v11 >= 1)
    {
      uint64_t v15 = 0;
      int v16 = a2 + 1;
      do
      {
        uint64_t v17 = *a2;
        if (v9[4 * v15] == *(_DWORD *)(*a2 + 68))
        {
          uint64_t v18 = *(std::once_flag::_State_type **)(v17 + 48);
          if (v18)
          {
            uint64_t v45 = *a2;
            std::string v46 = google::protobuf::FieldDescriptor::TypeOnceInit;
            if (atomic_load_explicit((atomic_ullong *volatile)v18, memory_order_acquire) != -1)
            {
              *(void *)__s = &v46;
              *(void *)&std::string::value_type __s[8] = &v45;
              __p.__r_.__value_.__r.__words[0] = (std::string::size_type)__s;
              std::__call_once(v18, &__p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
          }
          int v19 = *(_DWORD *)(v17 + 56);
          if (v19 == 10)
          {
            uint64_t v28 = &v9[4 * v15];
            if (v28[1] == 4
              && (google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(a1, v16, a3, a4, a5, *((void *)v28 + 1)) & 1) == 0)
            {
              return 0;
            }
          }
          else
          {
            if (v19 != 11)
            {
              LODWORD(__p.__r_.__value_.__l.__data_) = 3;
              __p.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/"
                                                                      "libprotobuf/src/google/protobuf/descriptor.cc";
              LODWORD(__p.__r_.__value_.__r.__words[2]) = 6836;
              memset(&v44, 0, sizeof(v44));
              std::string::append(&v44, "Invalid wire type for CPPTYPE_MESSAGE: ");
              snprintf(__s, 0x80uLL, "%d", v19);
              char v50 = 0;
              std::string::append(&v44, __s);
              google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__p);
              if ((SHIBYTE(v44.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                return 0;
              }
              uint64_t v39 = (void *)v44.__r_.__value_.__r.__words[0];
              goto LABEL_47;
            }
            std::string::size_type v20 = &v9[4 * v15];
            if (v20[1] == 3)
            {
              memset(&__p, 0, sizeof(__p));
              uint64_t v21 = (uint64_t *)*((void *)v20 + 1);
              int v22 = *((unsigned __int8 *)v21 + 23);
              int v23 = *((_DWORD *)v21 + 2);
              if ((v22 & 0x80u) != 0)
              {
                uint64_t v21 = (uint64_t *)*v21;
                int v22 = v23;
              }
              *(void *)__s = &unk_1ED515A70;
              *(void *)&std::string::value_type __s[8] = v21;
              LODWORD(v48) = v22;
              HIDWORD(v48) = v22;
              uint64_t v49 = 0;
              if (google::protobuf::UnknownFieldSet::ParseFromZeroCopyStream((google::protobuf::UnknownFieldSet *)&__p, __s)&& (google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(a1, v16, a3, a4, a5, &__p) & 1) == 0)
              {
                uint64_t v39 = (void *)__p.__r_.__value_.__r.__words[0];
                if (__p.__r_.__value_.__r.__words[0] != __p.__r_.__value_.__l.__size_)
                {
                  uint64_t v40 = (int)((uint64_t)(__p.__r_.__value_.__l.__size_ - __p.__r_.__value_.__r.__words[0]) >> 4);
                  uint64_t v41 = v40 + 1;
                  uint64_t v42 = 16 * v40 - 16;
                  do
                  {
                    google::protobuf::UnknownField::Delete(__p.__r_.__value_.__r.__words[0] + v42);
                    --v41;
                    v42 -= 16;
                  }
                  while (v41 > 1);
                  uint64_t v39 = (void *)__p.__r_.__value_.__r.__words[0];
                }
                if (v39)
                {
                  __p.__r_.__value_.__l.__size_ = (std::string::size_type)v39;
LABEL_47:
                  operator delete(v39);
                }
                return 0;
              }
              BOOL v24 = (void *)__p.__r_.__value_.__r.__words[0];
              if (__p.__r_.__value_.__r.__words[0] != __p.__r_.__value_.__l.__size_)
              {
                uint64_t v25 = (int)((uint64_t)(__p.__r_.__value_.__l.__size_ - __p.__r_.__value_.__r.__words[0]) >> 4);
                uint64_t v26 = v25 + 1;
                uint64_t v27 = 16 * v25 - 16;
                do
                {
                  google::protobuf::UnknownField::Delete(__p.__r_.__value_.__r.__words[0] + v27);
                  --v26;
                  v27 -= 16;
                }
                while (v26 > 1);
                BOOL v24 = (void *)__p.__r_.__value_.__r.__words[0];
              }
              if (v24)
              {
                __p.__r_.__value_.__l.__size_ = (std::string::size_type)v24;
                operator delete(v24);
              }
            }
          }
        }
        ++v15;
        uint64_t v9 = *(_DWORD **)a6;
      }
      while (v15 < (int)((*(void *)(a6 + 8) - *(void *)a6) >> 4));
    }
    return 1;
  }
  if ((int)v11 < 1) {
    return 1;
  }
  int v29 = *(_DWORD *)(a4 + 68);
  if (*v9 == v29)
  {
    BOOL v30 = 0;
  }
  else
  {
    uint64_t v32 = (int)(v10 >> 4);
    uint64_t v33 = ((unint64_t)v10 >> 4);
    int v34 = v9 + 4;
    uint64_t v35 = 1;
    do
    {
      if (v33 == v35) {
        return v35 >= v32;
      }
      int v36 = *v34;
      v34 += 4;
      ++v35;
    }
    while (v36 != v29);
    BOOL v30 = v35 - 1 >= v32;
  }
  std::operator+<char>();
  std::string v37 = std::string::append(&__p, "\" was already set.");
  long long v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
  std::string::size_type v48 = v37->__r_.__value_.__r.__words[2];
  *(_OWORD *)__s = v38;
  v37->__r_.__value_.__l.__size_ = 0;
  v37->__r_.__value_.__r.__words[2] = 0;
  v37->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::DescriptorBuilder::AddError(*a1, a1[1] + 24, a1[2], 7, (uint64_t)__s);
  if (SHIBYTE(v48) < 0) {
    operator delete(*(void **)__s);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v30;
}

void sub_1891F80E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::SetOptionValue(google::protobuf::DescriptorBuilder::OptionInterpreter *this, const std::string::value_type ***a2, google::protobuf::UnknownFieldSet *a3)
{
  uint64_t v142 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = (std::once_flag::_State_type *)a2[6];
  if (v6)
  {
    v133.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    __str.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    if (atomic_load_explicit((atomic_ullong *volatile)v6, memory_order_acquire) != -1)
    {
      __s.__r_.__value_.__r.__words[0] = (std::string::size_type)&v133;
      __s.__r_.__value_.__l.__size_ = (std::string::size_type)&__str;
      v131.__r_.__value_.__r.__words[0] = (std::string::size_type)&__s;
      std::__call_once(v6, &v131, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v7 = *((_DWORD *)a2 + 14);
  switch(v7)
  {
    case 1:
      uint64_t v14 = *((void *)this + 2);
      int v15 = *(_DWORD *)(v14 + 16);
      if ((v15 & 0x20) != 0)
      {
        double v43 = *(double *)(v14 + 88);
      }
      else if ((v15 & 8) != 0)
      {
        double v43 = (double)*(unint64_t *)(v14 + 72);
      }
      else
      {
        if ((v15 & 0x10) == 0) {
          goto LABEL_231;
        }
        double v43 = (double)*(uint64_t *)(v14 + 80);
      }
      google::protobuf::UnknownFieldSet::AddFixed64(a3, *((_DWORD *)a2 + 17), *(uint64_t *)&v43);
      return 1;
    case 2:
      uint64_t v16 = *((void *)this + 2);
      int v17 = *(_DWORD *)(v16 + 16);
      if ((v17 & 0x20) != 0)
      {
        float v44 = *(double *)(v16 + 88);
      }
      else if ((v17 & 8) != 0)
      {
        float v44 = (float)*(unint64_t *)(v16 + 72);
      }
      else
      {
        if ((v17 & 0x10) == 0) {
          goto LABEL_231;
        }
        float v44 = (float)*(uint64_t *)(v16 + 80);
      }
      google::protobuf::UnknownFieldSet::AddFixed32(a3, *((_DWORD *)a2 + 17), SLODWORD(v44));
      return 1;
    case 3:
    case 16:
    case 18:
      uint64_t v10 = *((void *)this + 2);
      int v11 = *(_DWORD *)(v10 + 16);
      if ((v11 & 8) != 0)
      {
        uint64_t v36 = *(void *)(v10 + 72);
        if (v36 < 0) {
          goto LABEL_231;
        }
        unsigned int v37 = *((_DWORD *)a2 + 17);
        long long v38 = (std::once_flag::_State_type *)a2[6];
        if (v38)
        {
          v133.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
          __str.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
          if (atomic_load_explicit((atomic_ullong *volatile)v38, memory_order_acquire) != -1)
          {
            __s.__r_.__value_.__r.__words[0] = (std::string::size_type)&v133;
            __s.__r_.__value_.__l.__size_ = (std::string::size_type)&__str;
            v131.__r_.__value_.__r.__words[0] = (std::string::size_type)&__s;
            std::__call_once(v38, &v131, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
          int v7 = *((_DWORD *)a2 + 14);
        }
      }
      else
      {
        if ((v11 & 0x10) == 0) {
          goto LABEL_231;
        }
        unsigned int v37 = *((_DWORD *)a2 + 17);
        uint64_t v36 = *(void *)(v10 + 80);
        uint64_t v65 = (std::once_flag::_State_type *)a2[6];
        if (v65)
        {
          v133.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
          __str.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
          if (atomic_load_explicit((atomic_ullong *volatile)v65, memory_order_acquire) != -1)
          {
            __s.__r_.__value_.__r.__words[0] = (std::string::size_type)&v133;
            __s.__r_.__value_.__l.__size_ = (std::string::size_type)&__str;
            v131.__r_.__value_.__r.__words[0] = (std::string::size_type)&__s;
            std::__call_once(v65, &v131, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
          int v7 = *((_DWORD *)a2 + 14);
        }
      }
      google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt64(v37, v36, v7, a3);
      return 1;
    case 4:
    case 6:
      uint64_t v13 = *((void *)this + 2);
      if ((*(unsigned char *)(v13 + 16) & 8) == 0) {
        goto LABEL_231;
      }
      unsigned int v40 = *((_DWORD *)a2 + 17);
      uint64_t v41 = *(void *)(v13 + 72);
      uint64_t v42 = (std::once_flag::_State_type *)a2[6];
      if (v42)
      {
        v133.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        __str.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
        if (atomic_load_explicit((atomic_ullong *volatile)v42, memory_order_acquire) != -1)
        {
          __s.__r_.__value_.__r.__words[0] = (std::string::size_type)&v133;
          __s.__r_.__value_.__l.__size_ = (std::string::size_type)&__str;
          v131.__r_.__value_.__r.__words[0] = (std::string::size_type)&__s;
          std::__call_once(v42, &v131, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        int v7 = *((_DWORD *)a2 + 14);
      }
      if (v7 == 6)
      {
        google::protobuf::UnknownFieldSet::AddFixed64(a3, v40, v41);
        return 1;
      }
      if (v7 == 4)
      {
        google::protobuf::UnknownFieldSet::AddVarint(a3, v40, v41);
        return 1;
      }
      LODWORD(v131.__r_.__value_.__l.__data_) = 3;
      v131.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprot"
                                                               "obuf/src/google/protobuf/descriptor.cc";
      LODWORD(v131.__r_.__value_.__r.__words[2]) = 7257;
      memset(&v132, 0, sizeof(v132));
      std::string::append(&v132, "Invalid wire type for CPPTYPE_UINT64: ");
      snprintf((char *)&__s, 0x80uLL, "%d", v7);
      char v141 = 0;
      std::string::append(&v132, (const std::string::value_type *)&__s);
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v131);
      goto LABEL_227;
    case 5:
    case 15:
    case 17:
      uint64_t v8 = *((void *)this + 2);
      int v9 = *(_DWORD *)(v8 + 16);
      if ((v9 & 8) != 0)
      {
        unint64_t v35 = *(void *)(v8 + 72);
        if (v35 >> 31) {
          goto LABEL_231;
        }
        unsigned int v66 = *((_DWORD *)a2 + 17);
        uint64_t v67 = (std::once_flag::_State_type *)a2[6];
        if (v67)
        {
          v133.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
          __str.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
          if (atomic_load_explicit((atomic_ullong *volatile)v67, memory_order_acquire) != -1)
          {
            __s.__r_.__value_.__r.__words[0] = (std::string::size_type)&v133;
            __s.__r_.__value_.__l.__size_ = (std::string::size_type)&__str;
            v131.__r_.__value_.__r.__words[0] = (std::string::size_type)&__s;
            std::__call_once(v67, &v131, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
          int v7 = *((_DWORD *)a2 + 14);
        }
        google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt32(v66, v35, v7, a3);
        return 1;
      }
      if ((v9 & 0x10) != 0)
      {
        int64_t v64 = *(void *)(v8 + 80);
        if (v64 > (uint64_t)0xFFFFFFFF7FFFFFFFLL)
        {
          unsigned int v83 = *((_DWORD *)a2 + 17);
          int v84 = google::protobuf::FieldDescriptor::type((google::protobuf::FieldDescriptor *)a2);
          google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt32(v83, v64, v84, a3);
          return 1;
        }
      }
      goto LABEL_231;
    case 7:
    case 13:
      uint64_t v12 = *((void *)this + 2);
      if ((*(unsigned char *)(v12 + 16) & 8) == 0) {
        goto LABEL_231;
      }
      unint64_t v39 = *(void *)(v12 + 72);
      if (HIDWORD(v39)) {
        goto LABEL_231;
      }
      unsigned int v68 = *((_DWORD *)a2 + 17);
      uint64_t v69 = (std::once_flag::_State_type *)a2[6];
      if (v69)
      {
        v133.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        __str.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
        if (atomic_load_explicit((atomic_ullong *volatile)v69, memory_order_acquire) != -1)
        {
          __s.__r_.__value_.__r.__words[0] = (std::string::size_type)&v133;
          __s.__r_.__value_.__l.__size_ = (std::string::size_type)&__str;
          v131.__r_.__value_.__r.__words[0] = (std::string::size_type)&__s;
          std::__call_once(v69, &v131, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        int v7 = *((_DWORD *)a2 + 14);
      }
      if (v7 == 7)
      {
        google::protobuf::UnknownFieldSet::AddFixed32(a3, v68, v39);
      }
      else if (v7 == 13)
      {
        google::protobuf::UnknownFieldSet::AddVarint(a3, v68, v39);
      }
      else
      {
        LODWORD(v131.__r_.__value_.__l.__data_) = 3;
        v131.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libpr"
                                                                 "otobuf/src/google/protobuf/descriptor.cc";
        LODWORD(v131.__r_.__value_.__r.__words[2]) = 7239;
        memset(&v132, 0, sizeof(v132));
        std::string::append(&v132, "Invalid wire type for CPPTYPE_UINT32: ");
        snprintf((char *)&__s, 0x80uLL, "%d", v7);
        char v141 = 0;
        std::string::append(&v132, (const std::string::value_type *)&__s);
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v131);
LABEL_227:
        if (SHIBYTE(v132.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v132.__r_.__value_.__l.__data_);
        }
      }
      return 1;
    case 8:
      uint64_t v18 = *((void *)this + 2);
      if ((*(unsigned char *)(v18 + 16) & 1) == 0) {
        goto LABEL_231;
      }
      unint64_t v45 = *(void *)(v18 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v45 + 23) < 0)
      {
        uint64_t v76 = *(void *)(v45 + 8);
        if (v76 != 4)
        {
          if (v76 != 5) {
            goto LABEL_231;
          }
          unint64_t v45 = *(void *)v45;
LABEL_124:
          int v77 = *(_DWORD *)v45;
          int v78 = *(unsigned __int8 *)(v45 + 4);
          if (v77 != 1936482662 || v78 != 101)
          {
LABEL_231:
            std::operator+<char>();
            uint64_t v128 = std::string::append(&v131, "\".");
            long long v129 = *(_OWORD *)&v128->__r_.__value_.__l.__data_;
            __s.__r_.__value_.__r.__words[2] = v128->__r_.__value_.__r.__words[2];
            *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v129;
            v128->__r_.__value_.__l.__size_ = 0;
            v128->__r_.__value_.__r.__words[2] = 0;
            v128->__r_.__value_.__r.__words[0] = 0;
            google::protobuf::DescriptorBuilder::AddError(*(void *)this, *((void *)this + 1) + 24, *((void *)this + 2), 8, (uint64_t)&__s);
            if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__s.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0)
            {
              std::string v127 = (void *)v131.__r_.__value_.__r.__words[0];
              goto LABEL_235;
            }
            return 0;
          }
          uint64_t v80 = 0;
LABEL_238:
          google::protobuf::UnknownFieldSet::AddVarint(a3, *((_DWORD *)a2 + 17), v80);
          return 1;
        }
        unint64_t v45 = *(void *)v45;
      }
      else
      {
        int v46 = *(unsigned __int8 *)(v45 + 23);
        if (v46 != 4)
        {
          if (v46 != 5) {
            goto LABEL_231;
          }
          goto LABEL_124;
        }
      }
      if (*(_DWORD *)v45 != 1702195828) {
        goto LABEL_231;
      }
      uint64_t v80 = 1;
      goto LABEL_238;
    case 9:
    case 12:
      if ((*(unsigned char *)(*((void *)this + 2) + 16) & 2) != 0) {
        google::protobuf::UnknownFieldSet::AddLengthDelimited(a3);
      }
      goto LABEL_231;
    case 10:
    case 11:
      if ((*(unsigned char *)(*((void *)this + 2) + 16) & 4) == 0)
      {
        std::operator+<char>();
        int v19 = std::string::append(&v135, "\" is a message. To set the entire message, use syntax like \"");
        long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
        v136.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v136.__r_.__value_.__l.__data_ = v20;
        v19->__r_.__value_.__l.__size_ = 0;
        v19->__r_.__value_.__r.__words[2] = 0;
        v19->__r_.__value_.__r.__words[0] = 0;
        int v21 = *((char *)*a2 + 23);
        if (v21 >= 0) {
          int v22 = (const std::string::value_type *)*a2;
        }
        else {
          int v22 = **a2;
        }
        if (v21 >= 0) {
          std::string::size_type v23 = *((unsigned __int8 *)*a2 + 23);
        }
        else {
          std::string::size_type v23 = (std::string::size_type)(*a2)[1];
        }
        BOOL v24 = std::string::append(&v136, v22, v23);
        long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
        __str.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v25;
        v24->__r_.__value_.__l.__size_ = 0;
        v24->__r_.__value_.__r.__words[2] = 0;
        v24->__r_.__value_.__r.__words[0] = 0;
        uint64_t v26 = std::string::append(&__str, " = { <proto text format> }\". To set fields within it, use syntax like \"");
        long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
        v133.__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v133.__r_.__value_.__l.__data_ = v27;
        v26->__r_.__value_.__l.__size_ = 0;
        v26->__r_.__value_.__r.__words[2] = 0;
        v26->__r_.__value_.__r.__words[0] = 0;
        int v28 = *((char *)*a2 + 23);
        if (v28 >= 0) {
          int v29 = (const std::string::value_type *)*a2;
        }
        else {
          int v29 = **a2;
        }
        if (v28 >= 0) {
          std::string::size_type v30 = *((unsigned __int8 *)*a2 + 23);
        }
        else {
          std::string::size_type v30 = (std::string::size_type)(*a2)[1];
        }
        long long v31 = std::string::append(&v133, v29, v30);
        long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
        v131.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v131.__r_.__value_.__l.__data_ = v32;
        v31->__r_.__value_.__l.__size_ = 0;
        v31->__r_.__value_.__r.__words[2] = 0;
        v31->__r_.__value_.__r.__words[0] = 0;
        uint64_t v33 = std::string::append(&v131, ".foo = value\".");
        long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
        __s.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v34;
        v33->__r_.__value_.__l.__size_ = 0;
        v33->__r_.__value_.__r.__words[2] = 0;
        v33->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(*(void *)this, *((void *)this + 1) + 24, *((void *)this + 2), 8, (uint64_t)&__s);
        goto LABEL_213;
      }
      uint64_t v55 = (const google::protobuf::Descriptor *)google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a2);
      uint64_t Prototype = google::protobuf::DynamicMessageFactory::GetPrototype((float **)this + 9, v55);
      long long v57 = (char *)(*(uint64_t (**)(uint64_t))(*(void *)Prototype + 24))(Prototype);
      if (!v57)
      {
        LODWORD(__s.__r_.__value_.__l.__data_) = 3;
        __s.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libpro"
                                                                "tobuf/src/google/protobuf/descriptor.cc";
        LODWORD(__s.__r_.__value_.__r.__words[2]) = 7151;
        memset(__p, 0, 24);
        std::string::append(__p, "CHECK failed: dynamic.get() != nullptr: ");
        std::string::append(__p, "Could not create an instance of ");
        LOWORD(v133.__r_.__value_.__l.__data_) = 0;
        v133.__r_.__value_.__s.__data_[2] = 0;
        google::protobuf::FieldDescriptor::DebugStringWithOptions(&v131, (uint64_t)a2, (uint64_t)&v133);
        if ((v131.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          unint64_t v58 = &v131;
        }
        else {
          unint64_t v58 = (std::string *)v131.__r_.__value_.__r.__words[0];
        }
        if ((v131.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type size = HIBYTE(v131.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type size = v131.__r_.__value_.__l.__size_;
        }
        std::string::append(__p, (const std::string::value_type *)v58, size);
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__s);
        if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v131.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p[0].__r_.__value_.__l.__data_);
        }
      }
      v133.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_1ED514988;
      *(_OWORD *)&v133.__r_.__value_.__r.__words[1] = 0uLL;
      uint64_t v134 = 0;
      std::string::size_type v60 = *(void *)this;
      v135.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_1ED514F70;
      v135.__r_.__value_.__l.__size_ = v60;
      v132.__r_.__value_.__r.__words[0] = 0;
      LODWORD(v132.__r_.__value_.__r.__words[1]) = 0x7FFFFFFF;
      v131.__r_.__value_.__r.__words[0] = (std::string::size_type)&v133;
      *(_OWORD *)&v131.__r_.__value_.__r.__words[1] = (unint64_t)&v135;
      int v61 = google::protobuf::TextFormat::Parser::ParseFromString(&v131.__r_.__value_.__l.__data_, *(void *)(*((void *)this + 2) + 64) & 0xFFFFFFFFFFFFFFFELL, v57);
      if (v61)
      {
        memset(&__str, 0, sizeof(__str));
        google::protobuf::MessageLite::AppendPartialToString((uint64_t)v57, &__str);
        long long v62 = (std::once_flag::_State_type *)a2[6];
        if (v62)
        {
          v130.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
          uint64_t v138 = a2;
          if (atomic_load_explicit((atomic_ullong *volatile)v62, memory_order_acquire) != -1)
          {
            __s.__r_.__value_.__r.__words[0] = (std::string::size_type)&v130;
            __s.__r_.__value_.__l.__size_ = (std::string::size_type)&v138;
            v136.__r_.__value_.__r.__words[0] = (std::string::size_type)&__s;
            std::__call_once(v62, &v136, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        int v63 = *((_DWORD *)a2 + 14);
        if (v63 == 11) {
          google::protobuf::UnknownFieldSet::AddLengthDelimited(a3);
        }
        std::string::size_type v85 = (std::once_flag::_State_type *)a2[6];
        if (v85)
        {
          v130.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
          uint64_t v138 = a2;
          if (atomic_load_explicit((atomic_ullong *volatile)v85, memory_order_acquire) != -1)
          {
            __s.__r_.__value_.__r.__words[0] = (std::string::size_type)&v130;
            __s.__r_.__value_.__l.__size_ = (std::string::size_type)&v138;
            v136.__r_.__value_.__r.__words[0] = (std::string::size_type)&__s;
            std::__call_once(v85, &v136, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
          int v63 = *((_DWORD *)a2 + 14);
        }
        if (v63 != 10)
        {
          LODWORD(__s.__r_.__value_.__l.__data_) = 3;
          __s.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libp"
                                                                  "rotobuf/src/google/protobuf/descriptor.cc";
          LODWORD(__s.__r_.__value_.__r.__words[2]) = 7171;
          memset(__p, 0, 24);
          std::string::append(__p, "CHECK failed: (option_field->type()) == (FieldDescriptor::TYPE_GROUP): ");
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__s);
          if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p[0].__r_.__value_.__l.__data_);
          }
        }
        google::protobuf::UnknownFieldSet::AddGroup(a3);
      }
      std::operator+<char>();
      long long v70 = std::string::append(&v136, "\": ");
      long long v71 = *(_OWORD *)&v70->__r_.__value_.__l.__data_;
      __str.__r_.__value_.__r.__words[2] = v70->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v71;
      v70->__r_.__value_.__l.__size_ = 0;
      v70->__r_.__value_.__r.__words[2] = 0;
      v70->__r_.__value_.__r.__words[0] = 0;
      if (v134 >= 0) {
        uint64_t v72 = &v133.__r_.__value_.__s.__data_[8];
      }
      else {
        uint64_t v72 = (const std::string::value_type *)v133.__r_.__value_.__l.__size_;
      }
      if (v134 >= 0) {
        std::string::size_type v73 = HIBYTE(v134);
      }
      else {
        std::string::size_type v73 = v133.__r_.__value_.__r.__words[2];
      }
      uint64_t v74 = std::string::append(&__str, v72, v73);
      long long v75 = *(_OWORD *)&v74->__r_.__value_.__l.__data_;
      __s.__r_.__value_.__r.__words[2] = v74->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v75;
      v74->__r_.__value_.__l.__size_ = 0;
      v74->__r_.__value_.__r.__words[2] = 0;
      v74->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(*(void *)this, *((void *)this + 1) + 24, *((void *)this + 2), 8, (uint64_t)&__s);
      if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__s.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v136.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v136.__r_.__value_.__l.__data_);
      }
      v133.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_1ED514988;
      if (SHIBYTE(v134) < 0) {
        operator delete((void *)v133.__r_.__value_.__l.__size_);
      }
      if (v57)
      {
        (*(void (**)(char *))(*(void *)v57 + 8))(v57);
        if (v61) {
          return 1;
        }
      }
      else if (v61)
      {
        return 1;
      }
      return 0;
    case 14:
      if ((*(unsigned char *)(*((void *)this + 2) + 16) & 1) == 0) {
        goto LABEL_231;
      }
      std::string v47 = (google::protobuf::DescriptorPool *)google::protobuf::FieldDescriptor::enum_type((google::protobuf::FieldDescriptor *)a2);
      uint64_t v48 = *(void *)(*((void *)this + 2) + 48);
      uint64_t v49 = *(void *)(*((void *)v47 + 2) + 16);
      uint64_t v50 = google::protobuf::DescriptorPool::internal_generated_pool(v47);
      google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
      unint64_t v52 = v48 & 0xFFFFFFFFFFFFFFFELL;
      if (v49 == v50)
      {
        uint64_t ValueByName = google::protobuf::EnumDescriptor::FindValueByName((uint64_t)v47, (uint64_t *)v52, v51);
        goto LABEL_198;
      }
      uint64_t v53 = (long long *)*((void *)v47 + 1);
      if (*((char *)v53 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&__s, *(const std::string::value_type **)v53, *((void *)v53 + 1));
      }
      else
      {
        long long v54 = *v53;
        __s.__r_.__value_.__r.__words[2] = *((void *)v53 + 2);
        *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v54;
      }
      std::string::size_type v86 = HIBYTE(__s.__r_.__value_.__r.__words[2]);
      if ((__s.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type v86 = __s.__r_.__value_.__l.__size_;
      }
      if (*(char *)(*(void *)v47 + 23) < 0) {
        uint64_t v87 = *(void *)(*(void *)v47 + 8);
      }
      else {
        uint64_t v87 = *(unsigned __int8 *)(*(void *)v47 + 23);
      }
      std::string::resize(&__s, v86 - v87, 0);
      int v88 = *(char *)(v52 + 23);
      if (v88 >= 0) {
        std::string::size_type v89 = (const std::string::value_type *)v52;
      }
      else {
        std::string::size_type v89 = *(const std::string::value_type **)v52;
      }
      if (v88 >= 0) {
        std::string::size_type v90 = *(unsigned __int8 *)(v52 + 23);
      }
      else {
        std::string::size_type v90 = *(void *)(v52 + 8);
      }
      std::string::append(&__s, v89, v90);
      if (google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDeps(*(void *)this, (uint64_t *)&__s, 1) != 5)
      {
        uint64_t ValueByName = 0;
        goto LABEL_194;
      }
      uint64_t ValueByName = v91;
      if (*(google::protobuf::DescriptorPool **)(v91 + 24) == v47)
      {
LABEL_194:
        char v109 = 1;
        goto LABEL_195;
      }
      std::operator+<char>();
      int v92 = std::string::append(&v130, "\" has no value named \"");
      long long v93 = *(_OWORD *)&v92->__r_.__value_.__l.__data_;
      v135.__r_.__value_.__r.__words[2] = v92->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v135.__r_.__value_.__l.__data_ = v93;
      v92->__r_.__value_.__l.__size_ = 0;
      v92->__r_.__value_.__r.__words[2] = 0;
      v92->__r_.__value_.__r.__words[0] = 0;
      int v94 = *(char *)(v52 + 23);
      if (v94 >= 0) {
        long long v95 = (const std::string::value_type *)v52;
      }
      else {
        long long v95 = *(const std::string::value_type **)v52;
      }
      if (v94 >= 0) {
        std::string::size_type v96 = *(unsigned __int8 *)(v52 + 23);
      }
      else {
        std::string::size_type v96 = *(void *)(v52 + 8);
      }
      int v97 = std::string::append(&v135, v95, v96);
      long long v98 = *(_OWORD *)&v97->__r_.__value_.__l.__data_;
      v136.__r_.__value_.__r.__words[2] = v97->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v136.__r_.__value_.__l.__data_ = v98;
      v97->__r_.__value_.__l.__size_ = 0;
      v97->__r_.__value_.__r.__words[2] = 0;
      v97->__r_.__value_.__r.__words[0] = 0;
      int v99 = std::string::append(&v136, "\" for option \"");
      long long v100 = *(_OWORD *)&v99->__r_.__value_.__l.__data_;
      __str.__r_.__value_.__r.__words[2] = v99->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v100;
      v99->__r_.__value_.__l.__size_ = 0;
      v99->__r_.__value_.__r.__words[2] = 0;
      v99->__r_.__value_.__r.__words[0] = 0;
      long long v101 = a2[1];
      int v102 = *((char *)v101 + 23);
      if (v102 >= 0) {
        int v103 = (const std::string::value_type *)a2[1];
      }
      else {
        int v103 = *v101;
      }
      if (v102 >= 0) {
        std::string::size_type v104 = *((unsigned __int8 *)v101 + 23);
      }
      else {
        std::string::size_type v104 = (std::string::size_type)v101[1];
      }
      int v105 = std::string::append(&__str, v103, v104);
      long long v106 = *(_OWORD *)&v105->__r_.__value_.__l.__data_;
      v133.__r_.__value_.__r.__words[2] = v105->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v133.__r_.__value_.__l.__data_ = v106;
      v105->__r_.__value_.__l.__size_ = 0;
      v105->__r_.__value_.__r.__words[2] = 0;
      v105->__r_.__value_.__r.__words[0] = 0;
      uint64_t v107 = std::string::append(&v133, "\". This appears to be a value from a sibling type.");
      long long v108 = *(_OWORD *)&v107->__r_.__value_.__l.__data_;
      v131.__r_.__value_.__r.__words[2] = v107->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v131.__r_.__value_.__l.__data_ = v108;
      v107->__r_.__value_.__l.__size_ = 0;
      v107->__r_.__value_.__r.__words[2] = 0;
      v107->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(*(void *)this, *((void *)this + 1) + 24, *((void *)this + 2), 8, (uint64_t)&v131);
      if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v131.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v133.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v133.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v136.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v136.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v135.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v135.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v130.__r_.__value_.__l.__data_);
      }
      char v109 = 0;
      uint64_t ValueByName = 0;
LABEL_195:
      if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__s.__r_.__value_.__l.__data_);
      }
      if ((v109 & 1) == 0) {
        return 0;
      }
LABEL_198:
      if (!ValueByName)
      {
        google::protobuf::FieldDescriptor::enum_type((google::protobuf::FieldDescriptor *)a2);
        std::operator+<char>();
        uint64_t v110 = std::string::append(&v135, "\" has no value named \"");
        long long v111 = *(_OWORD *)&v110->__r_.__value_.__l.__data_;
        v136.__r_.__value_.__r.__words[2] = v110->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v136.__r_.__value_.__l.__data_ = v111;
        v110->__r_.__value_.__l.__size_ = 0;
        v110->__r_.__value_.__r.__words[2] = 0;
        v110->__r_.__value_.__r.__words[0] = 0;
        int v112 = *(char *)(v52 + 23);
        if (v112 >= 0) {
          long long v113 = (const std::string::value_type *)v52;
        }
        else {
          long long v113 = *(const std::string::value_type **)v52;
        }
        if (v112 >= 0) {
          std::string::size_type v114 = *(unsigned __int8 *)(v52 + 23);
        }
        else {
          std::string::size_type v114 = *(void *)(v52 + 8);
        }
        int v115 = std::string::append(&v136, v113, v114);
        long long v116 = *(_OWORD *)&v115->__r_.__value_.__l.__data_;
        __str.__r_.__value_.__r.__words[2] = v115->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v116;
        v115->__r_.__value_.__l.__size_ = 0;
        v115->__r_.__value_.__r.__words[2] = 0;
        v115->__r_.__value_.__r.__words[0] = 0;
        std::string::size_type v117 = std::string::append(&__str, "\" for option \"");
        long long v118 = *(_OWORD *)&v117->__r_.__value_.__l.__data_;
        v133.__r_.__value_.__r.__words[2] = v117->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v133.__r_.__value_.__l.__data_ = v118;
        v117->__r_.__value_.__l.__size_ = 0;
        v117->__r_.__value_.__r.__words[2] = 0;
        v117->__r_.__value_.__r.__words[0] = 0;
        long long v119 = a2[1];
        int v120 = *((char *)v119 + 23);
        if (v120 >= 0) {
          long long v121 = (const std::string::value_type *)a2[1];
        }
        else {
          long long v121 = *v119;
        }
        if (v120 >= 0) {
          std::string::size_type v122 = *((unsigned __int8 *)v119 + 23);
        }
        else {
          std::string::size_type v122 = (std::string::size_type)v119[1];
        }
        long long v123 = std::string::append(&v133, v121, v122);
        long long v124 = *(_OWORD *)&v123->__r_.__value_.__l.__data_;
        v131.__r_.__value_.__r.__words[2] = v123->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v131.__r_.__value_.__l.__data_ = v124;
        v123->__r_.__value_.__l.__size_ = 0;
        v123->__r_.__value_.__r.__words[2] = 0;
        v123->__r_.__value_.__r.__words[0] = 0;
        long long v125 = std::string::append(&v131, "\".");
        long long v126 = *(_OWORD *)&v125->__r_.__value_.__l.__data_;
        __s.__r_.__value_.__r.__words[2] = v125->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v126;
        v125->__r_.__value_.__l.__size_ = 0;
        v125->__r_.__value_.__r.__words[2] = 0;
        v125->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(*(void *)this, *((void *)this + 1) + 24, *((void *)this + 2), 8, (uint64_t)&__s);
LABEL_213:
        if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__s.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v131.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v131.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v133.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v133.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v136.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v136.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v135.__r_.__value_.__r.__words[2]) < 0)
        {
          std::string v127 = (void *)v135.__r_.__value_.__r.__words[0];
LABEL_235:
          operator delete(v127);
        }
        return 0;
      }
      google::protobuf::UnknownFieldSet::AddVarint(a3, *((_DWORD *)a2 + 17), *(int *)(ValueByName + 16));
      return 1;
    default:
      return 1;
  }
}

void sub_1891F9640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,void *__p,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (a49 < 0) {
    operator delete(__p);
  }
  if (a39 < 0) {
    operator delete(a34);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  if (v49) {
    (*(void (**)(uint64_t))(*(void *)v49 + 8))(v49);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt32(unsigned int a1, int a2, int a3, google::protobuf::UnknownFieldSet *this)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  switch(a3)
  {
    case 17:
      uint64_t v5 = (2 * a2) ^ (a2 >> 31);
      goto LABEL_6;
    case 15:
      google::protobuf::UnknownFieldSet::AddFixed32(this, a1, a2);
      break;
    case 5:
      uint64_t v5 = a2;
LABEL_6:
      google::protobuf::UnknownFieldSet::AddVarint(this, a1, v5);
      return;
    default:
      int v6 = 3;
      int v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
      int v8 = 7198;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Invalid wire type for CPPTYPE_INT32: ");
      snprintf(__str, 0x80uLL, "%d", a3);
      __str[127] = 0;
      std::string::append(&__p, __str);
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      break;
  }
}

void sub_1891F9B08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt64(unsigned int a1, uint64_t a2, int a3, google::protobuf::UnknownFieldSet *this)
{
  uint64_t v5 = a2;
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  switch(a3)
  {
    case 18:
      uint64_t v5 = (2 * a2) ^ (a2 >> 63);
LABEL_6:
      google::protobuf::UnknownFieldSet::AddVarint(this, a1, v5);
      return;
    case 16:
      google::protobuf::UnknownFieldSet::AddFixed64(this, a1, a2);
      break;
    case 3:
      goto LABEL_6;
    default:
      int v6 = 3;
      int v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
      int v8 = 7221;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Invalid wire type for CPPTYPE_INT64: ");
      snprintf(__str, 0x80uLL, "%d", a3);
      __str[127] = 0;
      std::string::append(&__p, __str);
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      break;
  }
}

void sub_1891F9CB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::anonymous namespace'::AggregateErrorCollector::~AggregateErrorCollector(void **this)
{
  *this = &unk_1ED514988;
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
}

{
  uint64_t vars8;

  *this = &unk_1ED514988;
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  JUMPOUT(0x18C11F580);
}

unint64_t google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v12[0] = a2;
  v12[1] = a3;
  google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)v12, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
  {
    if (!__str.__r_.__value_.__l.__size_) {
      goto LABEL_10;
    }
    p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
  }
  else
  {
    if (!*((unsigned char *)&__str.__r_.__value_.__s + 23)) {
      goto LABEL_10;
    }
    p_str = &__str;
  }
  if (p_str->__r_.__value_.__s.__data_[0] == 46)
  {
    std::string::basic_string(&v10, &__str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v13);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::string __str = v10;
  }
LABEL_10:
  int v6 = *(void **)(a1 + 32);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v9, (uint64_t *)&__str, v4);
  unint64_t v7 = google::protobuf::DescriptorPool::Tables::FindByNameHelper(v6, a1, v9[0], (uint64_t)v9[1]);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_1891F9E04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::FieldDescriptor::TypeOnceInit(google::protobuf::FieldDescriptor *this, const google::protobuf::FieldDescriptor *a2, const char *a3)
{
  v31[2] = *MEMORY[0x1E4F143B8];
  if (!*(unsigned char *)(*((void *)this + 5) + 65))
  {
    LODWORD(__str.__r_.__value_.__l.__data_) = 3;
    __str.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libproto"
                                                              "buf/src/google/protobuf/descriptor.cc";
    LODWORD(__str.__r_.__value_.__r.__words[2]) = 7299;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: file()->finished_building_ == true: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__str);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  int v4 = (uint64_t *)*((void *)this + 16);
  if (v4)
  {
    uint64_t v5 = *(void *)(*((void *)this + 5) + 16);
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v27, v4, a3);
    int v6 = google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(v5, v27[0], v27[1]);
    if (v6 == 4)
    {
      *((_DWORD *)this + 14) = 14;
      int v8 = (char *)this + 112;
      goto LABEL_9;
    }
    if (v6 == 1)
    {
      *((_DWORD *)this + 14) = 11;
      int v8 = (char *)this + 104;
LABEL_9:
      *(void *)int v8 = v7;
    }
  }
  uint64_t v9 = *((void *)this + 14);
  if (!v9 || *((void *)this + 18)) {
    return;
  }
  if (!*((void *)this + 17)) {
    goto LABEL_36;
  }
  std::string v10 = *(long long **)(v9 + 8);
  if (*((char *)v10 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(&__str, *(const std::string::value_type **)v10, *((void *)v10 + 1));
  }
  else
  {
    long long v11 = *v10;
    __str.__r_.__value_.__r.__words[2] = *((void *)v10 + 2);
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v11;
  }
  std::string::size_type v12 = std::string::rfind(&__str, 46, 0xFFFFFFFFFFFFFFFFLL);
  if (v12 == -1)
  {
    std::string::operator=(&__str, *((const std::string **)this + 17));
  }
  else
  {
    std::string::basic_string(&v25, &__str, 0, v12, (std::allocator<char> *)&v30);
    char v13 = std::string::append(&v25, ".");
    long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    v26.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v14;
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    uint64_t v15 = *((void *)this + 17);
    int v16 = *(char *)(v15 + 23);
    if (v16 >= 0) {
      int v17 = (const std::string::value_type *)*((void *)this + 17);
    }
    else {
      int v17 = *(const std::string::value_type **)v15;
    }
    if (v16 >= 0) {
      std::string::size_type v18 = *(unsigned __int8 *)(v15 + 23);
    }
    else {
      std::string::size_type v18 = *(void *)(v15 + 8);
    }
    int v19 = std::string::append(&v26, v17, v18);
    std::string::size_type v21 = v19->__r_.__value_.__r.__words[0];
    v31[0] = v19->__r_.__value_.__l.__size_;
    *(void *)((char *)v31 + 7) = *(std::string::size_type *)((char *)&v19->__r_.__value_.__r.__words[1] + 7);
    char v22 = HIBYTE(v19->__r_.__value_.__r.__words[2]);
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    __str.__r_.__value_.__r.__words[0] = v21;
    __str.__r_.__value_.__l.__size_ = v31[0];
    *(std::string::size_type *)((char *)&__str.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v31 + 7);
    *((unsigned char *)&__str.__r_.__value_.__s + 23) = v22;
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v26.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v25.__r_.__value_.__l.__data_);
    }
  }
  uint64_t v23 = *(void *)(*((void *)this + 5) + 16);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v26, (uint64_t *)&__str, v20);
  if (google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(v23, (uint64_t)v26.__r_.__value_.__l.__data_, v26.__r_.__value_.__l.__size_) == 5)*((void *)this + 18) = v24; {
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
  }
    operator delete(__str.__r_.__value_.__l.__data_);
  if (!*((void *)this + 18))
  {
    uint64_t v9 = *((void *)this + 14);
LABEL_36:
    if (!*(_DWORD *)(v9 + 44))
    {
      LODWORD(__str.__r_.__value_.__l.__data_) = 3;
      __str.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libpro"
                                                                "tobuf/src/google/protobuf/descriptor.cc";
      LODWORD(__str.__r_.__value_.__r.__words[2]) = 7331;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "CHECK failed: enum_type_->value_count(): ");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__str);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      uint64_t v9 = *((void *)this + 14);
    }
    *((void *)this + 18) = *(void *)(v9 + 48);
  }
}

void sub_1891FA110(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (a36 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FieldDescriptor::PrintableNameForExtension(google::protobuf::FieldDescriptor *this)
{
  if (!*((unsigned char *)this + 67) || !*(unsigned char *)(*(void *)(*((void *)this + 10) + 32) + 72)) {
    goto LABEL_9;
  }
  int v2 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v2)
  {
    int v6 = this;
    uint64_t v7 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v9[0] = &v7;
      v9[1] = &v6;
      int v8 = v9;
      std::__call_once(v2, &v8, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)this + 14) == 11
    && *((_DWORD *)this + 15) == 1
    && (uint64_t v3 = *((void *)this + 12), v3 == google::protobuf::FieldDescriptor::message_type(this)))
  {
    int v4 = (char *)(google::protobuf::FieldDescriptor::message_type(this) + 8);
  }
  else
  {
LABEL_9:
    int v4 = (char *)this + 8;
  }
  return *(void *)v4;
}

void google::protobuf::FileDescriptor::DependenciesOnceInit(google::protobuf::FileDescriptor *this, const google::protobuf::FileDescriptor *a2, const char *a3)
{
  if (!*((unsigned char *)this + 65))
  {
    int v7 = 3;
    int v8 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    int v9 = 7375;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: finished_building_ == true: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v7);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  int v4 = *((_DWORD *)this + 8);
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i < v4; ++i)
    {
      int v6 = *(uint64_t **)(*((void *)this + 10) + 8 * i);
      if (v6)
      {
        *(void *)(*((void *)this + 9) + 8 * i) = google::protobuf::DescriptorPool::FindFileByName(*((void *)this + 2), v6, a3);
        int v4 = *((_DWORD *)this + 8);
      }
    }
  }
}

void sub_1891FA31C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::LazyDescriptor::Once(google::protobuf::internal::LazyDescriptor *this)
{
  int v2 = (std::once_flag::_State_type *)*((void *)this + 2);
  if (v2)
  {
    uint64_t v3 = this;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v5[0] = google::protobuf::internal::LazyDescriptor::OnceStatic;
      v5[1] = &v3;
      int v4 = v5;
      std::__call_once(v2, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::internal::LazyDescriptor *),google::protobuf::internal::LazyDescriptor *&&>>);
    }
  }
}

void google::protobuf::internal::LazyDescriptor::OnceStatic(google::protobuf::internal::LazyDescriptor *this, google::protobuf::internal::LazyDescriptor *a2, const char *a3)
{
  if (!*(unsigned char *)(*((void *)this + 3) + 65))
  {
    LODWORD(v7) = 3;
    int v8 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.cc";
    int v9 = 7438;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: file_->finished_building_: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v7);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (!*(void *)this)
  {
    int v4 = (uint64_t *)*((void *)this + 1);
    if (v4)
    {
      uint64_t v5 = *(void *)(*((void *)this + 3) + 16);
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v7, v4, a3);
      if (google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(v5, v7, v8) == 1) {
        *(void *)this = v6;
      }
    }
  }
}

void sub_1891FA468(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>(void *a1, char **a2)
{
  uint64_t v3 = (uint64_t)a2[1];
  if (v3 < 1)
  {
    unint64_t v4 = 0;
  }
  else
  {
    unint64_t v4 = 0;
    uint64_t v5 = *a2;
    unint64_t v6 = (unint64_t)&(*a2)[v3];
    do
    {
      uint64_t v7 = *v5++;
      unint64_t v4 = 5 * v4 + v7;
    }
    while ((unint64_t)v5 < v6);
  }
  int8x8_t v8 = (int8x8_t)a1[1];
  if (!*(void *)&v8) {
    return 0;
  }
  uint8x8_t v9 = (uint8x8_t)vcnt_s8(v8);
  v9.i16[0] = vaddlv_u8(v9);
  unint64_t v10 = v9.u32[0];
  if (v9.u32[0] > 1uLL)
  {
    unint64_t v11 = v4;
    if (v4 >= *(void *)&v8) {
      unint64_t v11 = v4 % *(void *)&v8;
    }
  }
  else
  {
    unint64_t v11 = (*(void *)&v8 - 1) & v4;
  }
  std::string::size_type v12 = *(void **)(*a1 + 8 * v11);
  if (!v12) {
    return 0;
  }
  char v13 = (void *)*v12;
  if (*v12)
  {
    uint64_t v14 = (uint64_t)(a1 + 4);
    do
    {
      unint64_t v15 = v13[1];
      if (v4 == v15)
      {
        if (std::equal_to<google::protobuf::StringPiece>::operator()[abi:ne180100](v14, (uint64_t)(v13 + 2), (uint64_t)a2))
        {
          return v13;
        }
      }
      else
      {
        if (v10 > 1)
        {
          if (v15 >= *(void *)&v8) {
            v15 %= *(void *)&v8;
          }
        }
        else
        {
          v15 &= *(void *)&v8 - 1;
        }
        if (v15 != v11) {
          return 0;
        }
      }
      char v13 = (void *)*v13;
    }
    while (v13);
  }
  return v13;
}

BOOL std::equal_to<google::protobuf::StringPiece>::operator()[abi:ne180100](uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = *(void *)(a2 + 8);
  if (v4 != *(void *)(a3 + 8)) {
    return 0;
  }
  uint64_t v5 = *(const void **)a2;
  unint64_t v6 = *(const void **)a3;
  return v4 < 1 || v5 == v6 || memcmp(v5, v6, v4) == 0;
}

uint64_t google::protobuf::internal::OnShutdownDelete<google::protobuf::EncodedDescriptorDatabase>(google::protobuf::EncodedDescriptorDatabase *)::{lambda(void const*)#1}::__invoke(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t *std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::find<std::pair<google::protobuf::Descriptor const*,int>>(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v5 = *(uint64_t **)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  int64_t v4 = v5;
  if (!v5) {
    return v3;
  }
  unint64_t v6 = v3;
  do
  {
    unint64_t v7 = v4[4];
    if (v7 >= a2)
    {
      if (v7 <= a2)
      {
        if (*((_DWORD *)v4 + 10) < a3) {
          ++v4;
        }
        else {
          unint64_t v6 = v4;
        }
      }
      else
      {
        unint64_t v6 = v4;
      }
    }
    else
    {
      ++v4;
    }
    int64_t v4 = (uint64_t *)*v4;
  }
  while (v4);
  if (v6 == v3) {
    return v3;
  }
  unint64_t v8 = v6[4];
  if (v8 > a2 || v8 >= a2 && *((_DWORD *)v6 + 10) > a3) {
    return v3;
  }
  return v6;
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FileDescriptorTables const*),google::protobuf::FileDescriptorTables const*&&>>(uint64_t a1)
{
  return (***(uint64_t (****)(void))a1)(**(void **)(*(void *)a1 + 8));
}

BOOL std::equal_to<std::pair<void const*,google::protobuf::StringPiece>>::operator()[abi:ne180100](void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  int64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  uint64_t v3 = (const void *)a1[1];
  int64_t v4 = (const void *)a2[1];
  return v2 < 1 || v3 == v4 || memcmp(v3, v4, v2) == 0;
}

uint64_t google::protobuf::FindPtrOrNull<std::unordered_map<std::pair<google::protobuf::EnumDescriptor const*,int>,google::protobuf::EnumValueDescriptor const*,google::protobuf::anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::EnumDescriptor const*,int>>,std::equal_to<std::pair<google::protobuf::EnumDescriptor const*,int>>,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const*,int> const,google::protobuf::EnumValueDescriptor const*>>>>(void *a1, uint64_t a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (v2)
  {
    int v3 = *(_DWORD *)(a2 + 8);
    unint64_t v4 = (16777619 * v3) ^ (16777499 * *(void *)a2);
    uint8x8_t v5 = (uint8x8_t)vcnt_s8(v2);
    v5.i16[0] = vaddlv_u8(v5);
    if (v5.u32[0] > 1uLL)
    {
      uint64_t v6 = (16777619 * v3) ^ (16777499 * *(void *)a2);
      if (v4 >= *(void *)&v2) {
        uint64_t v6 = v4 % *(void *)&v2;
      }
    }
    else
    {
      uint64_t v6 = v4 & (*(void *)&v2 - 1);
    }
    unint64_t v7 = *(uint64_t ***)(*a1 + 8 * v6);
    if (v7)
    {
      for (uint64_t i = *v7; i; uint64_t i = (uint64_t *)*i)
      {
        unint64_t v9 = i[1];
        if (v4 == v9)
        {
          if (i[2] == *(void *)a2 && *((_DWORD *)i + 6) == v3) {
            return i[4];
          }
        }
        else
        {
          if (v5.u32[0] > 1uLL)
          {
            if (v9 >= *(void *)&v2) {
              v9 %= *(void *)&v2;
            }
          }
          else
          {
            v9 &= *(void *)&v2 - 1;
          }
          if (v9 != v6) {
            return 0;
          }
        }
      }
    }
  }
  return 0;
}

uint64_t google::protobuf::FindPtrOrNull<std::unordered_map<std::pair<google::protobuf::EnumDescriptor const*,int>,google::protobuf::EnumValueDescriptor const*,google::protobuf::anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::EnumDescriptor const*,int>>,std::equal_to<std::pair<google::protobuf::EnumDescriptor const*,int>>,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const*,int> const,google::protobuf::EnumValueDescriptor const*>>>>(uint64_t a1, unint64_t a2, uint64_t a3, int a4)
{
  if (a2)
  {
    unint64_t v4 = (16777619 * a4) ^ (16777499 * a3);
    uint8x8_t v5 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
    v5.i16[0] = vaddlv_u8(v5);
    if (v5.u32[0] > 1uLL)
    {
      uint64_t v6 = (16777619 * a4) ^ (16777499 * a3);
      if (v4 >= a2) {
        uint64_t v6 = v4 % a2;
      }
    }
    else
    {
      uint64_t v6 = v4 & (a2 - 1);
    }
    unint64_t v7 = *(uint64_t ***)(a1 + 8 * v6);
    if (v7)
    {
      for (uint64_t i = *v7; i; uint64_t i = (uint64_t *)*i)
      {
        unint64_t v9 = i[1];
        if (v9 == v4)
        {
          if (i[2] == a3 && *((_DWORD *)i + 6) == a4) {
            return i[4];
          }
        }
        else
        {
          if (v5.u32[0] > 1uLL)
          {
            if (v9 >= a2) {
              v9 %= a2;
            }
          }
          else
          {
            v9 &= a2 - 1;
          }
          if (v9 != v6) {
            return 0;
          }
        }
      }
    }
  }
  return 0;
}

void google::protobuf::anonymous namespace'::SourceLocationCommentPrinter::FormatComment(std::string *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  if (*(char *)(a3 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v18, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string v18 = *(std::string *)a3;
  }
  google::protobuf::StripWhitespace(&v18);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v16, (uint64_t *)&v18, v5);
  memset(&v17, 0, sizeof(v17));
  google::protobuf::SplitStringUsing(v16[0], (unint64_t)v16[1], "\n", &v17);
  a1->__r_.__value_.__r.__words[0] = 0;
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  std::vector<std::string>::pointer begin = v17.__begin_;
  for (std::vector<std::string>::pointer i = v17.__end_; begin != i; ++begin)
  {
    int v8 = *(char *)(a2 + 127);
    BOOL v9 = v8 < 0;
    unint64_t v10 = *(void ***)(a2 + 104);
    uint64_t v11 = *(void *)(a2 + 112);
    if (v8 >= 0) {
      unint64_t v10 = (void **)(a2 + 104);
    }
    unsigned int v37 = (std::vector<std::string> *)v10;
    int v8 = v8;
    if (v9) {
      int v8 = v11;
    }
    int v38 = v8;
    LODWORD(size) = SHIBYTE(begin->__r_.__value_.__r.__words[2]);
    std::vector<std::string>::pointer v13 = (std::vector<std::string>::pointer)begin->__r_.__value_.__r.__words[0];
    BOOL v14 = (size & 0x80000000) != 0;
    if ((size & 0x80000000) == 0) {
      std::vector<std::string>::pointer v13 = begin;
    }
    std::vector<std::string>::pointer v35 = v13;
    LODWORD(size) = size;
    if (v14) {
      std::string::size_type size = begin->__r_.__value_.__l.__size_;
    }
    int v36 = size;
    uint64_t v33 = 0;
    int v34 = -1;
    uint64_t v31 = 0;
    int v32 = -1;
    uint64_t v29 = 0;
    int v30 = -1;
    uint64_t v27 = 0;
    int v28 = -1;
    uint64_t v25 = 0;
    int v26 = -1;
    uint64_t v23 = 0;
    int v24 = -1;
    uint64_t v21 = 0;
    int v22 = -1;
    uint64_t v19 = 0;
    int v20 = -1;
    *(void *)&long long v15 = &v25;
    *((void *)&v15 + 1) = &v23;
    google::protobuf::strings::SubstituteAndAppend(a1, "$0// $1\n", (uint64_t)&v37, (uint64_t)&v35, (uint64_t)&v33, (uint64_t)&v31, (uint64_t)&v29, (uint64_t)&v27, v15, (uint64_t)&v21, (uint64_t)&v19);
  }
  unsigned int v37 = &v17;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v37);
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
}

void sub_1891FAAB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
}

BOOL google::protobuf::anonymous namespace'::RetrieveOptions(uint64_t a1, const google::protobuf::Message *a2, uint64_t a3, uint64_t *a4)
{
  if (*(void *)(*(void *)((*(uint64_t (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2)
                             + 16)
                 + 16) != a3)
  {
    uint64_t v8 = (*(uint64_t (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2);
    if (google::protobuf::DescriptorPool::FindMessageTypeByName(a3, *(uint64_t **)(v8 + 8), v9)) {
      operator new();
    }
  }
}

void sub_1891FADFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (v22) {
    (*(void (**)(uint64_t))(*(void *)v22 + 8))(v22);
  }
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)&a22);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::anonymous namespace'::RetrieveOptionsAssumingRightPool(uint64_t a1, const google::protobuf::Message *a2, uint64_t *a3)
{
  void v24[2] = *MEMORY[0x1E4F143B8];
  std::vector<std::string>::__clear[abi:ne180100](a3);
  (*(void (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  int v20 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  BOOL v14 = (google::protobuf::_anonymous_namespace_ **)v5;
  google::protobuf::Reflection::ListFieldsMayFailOnStripped(v5, a2, 0, (uint64_t)&v20);
  uint64_t v8 = v20;
  long long v15 = v21;
  if (v20 != v21)
  {
    do
    {
      uint64_t v9 = *(void *)v8;
      int v16 = v8;
      if (*(_DWORD *)(*(void *)v8 + 60) != 3
        || (int)google::protobuf::Reflection::FieldSize(v14, a2, (const google::protobuf::FieldDescriptor *)v9, v6, v7) >= 1)
      {
        memset(&v19, 0, sizeof(v19));
        unint64_t v10 = *(std::once_flag::_State_type **)(v9 + 48);
        if (v10)
        {
          v23.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
          v24[0] = v9;
          if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
          {
            v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&v23;
            v17.__r_.__value_.__l.__size_ = (std::string::size_type)v24;
            __p[0] = &v17;
            std::__call_once(v10, __p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if ((*(_DWORD *)(v9 + 56) & 0xFFFFFFFE) == 0xA)
        {
          memset(__p, 0, sizeof(__p));
          google::protobuf::TextFormat::Printer::Printer((google::protobuf::TextFormat::Printer *)&v17);
        }
        google::protobuf::TextFormat::PrintFieldValueToString();
      }
      uint64_t v8 = v16 + 8;
    }
    while (v16 + 8 != v15);
    uint64_t v8 = v20;
  }
  uint64_t v12 = *a3;
  uint64_t v11 = a3[1];
  if (v8)
  {
    uint64_t v21 = v8;
    operator delete(v8);
  }
  return v12 != v11;
}

void sub_1891FB3DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__split_buffer<std::string> *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *a31,void *__pa,int a33,__int16 a34,char a35,char a36)
{
  int v38 = *(void **)(v36 - 160);
  if (v38)
  {
    *(void *)(v36 - 152) = v38;
    operator delete(v38);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::Printer::~Printer(google::protobuf::TextFormat::Printer *this)
{
  std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy((uint64_t)this + 56, *((void **)this + 8));
  std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>>>::destroy((uint64_t)this + 32, *((void **)this + 5));
  uint64_t v2 = *((void *)this + 3);
  *((void *)this + 3) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
}

void std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy(a1, a2[1]);
    uint64_t v4 = a2[5];
    a2[5] = 0;
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    operator delete(a2);
  }
}

void std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>>>::destroy(a1, a2[1]);
    uint64_t v4 = a2[5];
    a2[5] = 0;
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    operator delete(a2);
  }
}

std::string *google::protobuf::Join<std::vector<std::string>>@<X0>(std::string::value_type *__s@<X1>, std::string **a2@<X0>, std::string *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  return google::protobuf::Join<std::__wrap_iter<std::string const*>>(*a2, a2[1], __s, a3);
}

void sub_1891FB64C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *google::protobuf::Join<std::__wrap_iter<std::string const*>>(std::string *result, std::string *a2, std::string::value_type *__s, std::string *this)
{
  if (result != a2)
  {
    uint64_t v7 = (uint64_t)result;
    uint64_t v8 = 0;
    do
    {
      if (v8) {
        std::string::append(this, __s);
      }
      int v9 = *(char *)(v7 + 23);
      if (v9 >= 0) {
        unint64_t v10 = (const std::string::value_type *)v7;
      }
      else {
        unint64_t v10 = *(const std::string::value_type **)v7;
      }
      if (v9 >= 0) {
        std::string::size_type v11 = *(unsigned __int8 *)(v7 + 23);
      }
      else {
        std::string::size_type v11 = *(void *)(v7 + 8);
      }
      uint64_t result = std::string::append(this, v10, v11);
      v7 += 24;
      v8 -= 24;
    }
    while ((std::string *)v7 != a2);
  }
  return result;
}

google::protobuf::FileDescriptorTables *google::protobuf::internal::OnShutdownDelete<google::protobuf::FileDescriptorTables>(google::protobuf::FileDescriptorTables *)::{lambda(void const*)#1}::__invoke(google::protobuf::FileDescriptorTables *result)
{
  if (result)
  {
    google::protobuf::FileDescriptorTables::~FileDescriptorTables(result);
    JUMPOUT(0x18C11F580);
  }
  return result;
}

void google::protobuf::anonymous namespace'::NewAllowedProto3Extendee(google::protobuf::_anonymous_namespace_ *this)
{
}

void sub_1891FB8C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::OnShutdownDelete<std::set<std::string>>(std::set<std::string> *)::{lambda(void const*)#1}::__invoke(uint64_t result)
{
  if (result)
  {
    std::__tree<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>>>::destroy(result, *(char **)(result + 8));
    JUMPOUT(0x18C11F580);
  }
  return result;
}

std::string *google::protobuf::anonymous namespace'::AggregateErrorCollector::AddError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (std::string *)(a1 + 8);
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(a1 + 31)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*(void *)(a1 + 16)) {
LABEL_3:
  }
    std::string::append((std::string *)(a1 + 8), "; ");
LABEL_4:
  int v6 = *(char *)(a4 + 23);
  if (v6 >= 0) {
    uint64_t v7 = (const std::string::value_type *)a4;
  }
  else {
    uint64_t v7 = *(const std::string::value_type **)a4;
  }
  if (v6 >= 0) {
    std::string::size_type v8 = *(unsigned __int8 *)(a4 + 23);
  }
  else {
    std::string::size_type v8 = *(void *)(a4 + 8);
  }

  return std::string::append(v5, v7, v8);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder::~AggregateOptionFinder(google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder *this)
{
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder::FindExtension(uint64_t a1, uint64_t a2, std::string *a3)
{
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 152))(a2);
  int v6 = google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder(*(void *)(a1 + 8), a3, *(void *)(v5 + 8), 0, 1);
  uint64_t v8 = v7;
  if (v6 == 1)
  {
    if (!*(unsigned char *)(*(void *)(v5 + 32) + 72) || *(int *)(v7 + 128) < 1) {
      return 0;
    }
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *(void *)(v8 + 80);
      if (*(void *)(v11 + v9 + 80) == v5)
      {
        uint64_t v12 = *(std::once_flag::_State_type **)(v11 + v9 + 48);
        if (v12)
        {
          uint64_t v14 = v11 + v9;
          long long v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
          {
            v17[0] = &v15;
            v17[1] = &v14;
            int v16 = v17;
            std::__call_once(v12, &v16, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if (*(_DWORD *)(v11 + v9 + 56) == 11
          && *(_DWORD *)(v11 + v9 + 60) == 1
          && google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)(v11 + v9)) == v8)
        {
          break;
        }
      }
      ++v10;
      v9 += 152;
      if (v10 >= *(int *)(v8 + 128)) {
        return 0;
      }
    }
    return v11 + v9;
  }
  else if (v6 != 2 || !*(unsigned char *)(v7 + 67))
  {
    return 0;
  }
  return v8;
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder::FindAnyType(uint64_t a1, uint64_t a2, uint64_t *a3, std::string *a4)
{
  int v4 = *((char *)a3 + 23);
  if (v4 < 0)
  {
    if (a3[1] != 20) {
      return 0;
    }
    a3 = (uint64_t *)*a3;
  }
  else if (v4 != 20)
  {
    return 0;
  }
  if (*a3 != *(void *)"type.googleapis.com/"
    || a3[1] != *(void *)"gleapis.com/"
    || *((_DWORD *)a3 + 4) != (unint64_t)*(unsigned int *)"com/")
  {
    BOOL v7 = *a3 == *(void *)"type.googleprod.com/" && a3[1] == *(void *)"gleprod.com/";
    if (!v7 || *((_DWORD *)a3 + 4) != (unint64_t)*(unsigned int *)"com/") {
      return 0;
    }
  }
  if (google::protobuf::DescriptorBuilder::FindSymbol(*(void *)(a1 + 8), a4, 1) == 1) {
    return v10;
  }
  else {
    return 0;
  }
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::~__hash_table(uint64_t a1)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2)
  {
    do
    {
      int v3 = (void **)*v2;
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  int v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void std::vector<std::vector<char>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    int v4 = (char *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      int v6 = (char *)v1[1];
      do
      {
        uint64_t v8 = (void *)*((void *)v6 - 3);
        v6 -= 24;
        BOOL v7 = v8;
        if (v8)
        {
          *((void *)v4 - 2) = v7;
          operator delete(v7);
        }
        int v4 = v6;
      }
      while (v6 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::vector<std::unique_ptr<std::string>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = (uint64_t **)*a1;
  if (*v2)
  {
    std::vector<std::unique_ptr<std::string>>::__base_destruct_at_end[abi:ne180100]((uint64_t)v2, *v2);
    int v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<std::unique_ptr<std::string>>::__base_destruct_at_end[abi:ne180100](uint64_t a1, uint64_t *a2)
{
  int v4 = *(uint64_t **)(a1 + 8);
  if (v4 != a2)
  {
    uint64_t v5 = v4 - 1;
    do
    {
      uint64_t v6 = *v5;
      uint64_t *v5 = 0;
      if (v6) {
        std::default_delete<std::string>::operator()[abi:ne180100]((uint64_t)v5, v6);
      }
    }
    while (v5-- != a2);
  }
  *(void *)(a1 + 8) = a2;
}

void std::vector<std::unique_ptr<google::protobuf::Message>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    int v4 = v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        uint64_t v7 = *--v4;
        uint64_t v6 = v7;
        *int v4 = 0;
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
        }
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::vector<std::unique_ptr<std::once_flag>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<std::unique_ptr<std::once_flag>>::__base_destruct_at_end[abi:ne180100]((uint64_t)v2, *v2);
    int v3 = **a1;
    operator delete(v3);
  }
}

uint64_t std::vector<std::unique_ptr<std::once_flag>>::__base_destruct_at_end[abi:ne180100](uint64_t result, void *a2)
{
  uint64_t v3 = result;
  int v4 = *(void **)(result + 8);
  while (v4 != a2)
  {
    uint64_t v5 = *--v4;
    uint64_t result = v5;
    *int v4 = 0;
    if (v5) {
      uint64_t result = MEMORY[0x18C11F580](result, 0x1000C4000313F17);
    }
  }
  *(void *)(v3 + 8) = a2;
  return result;
}

void std::vector<std::unique_ptr<google::protobuf::FileDescriptorTables>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (google::protobuf::FileDescriptorTables **)**a1;
  if (v2)
  {
    int v4 = (google::protobuf::FileDescriptorTables **)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
        std::unique_ptr<google::protobuf::FileDescriptorTables>::reset[abi:ne180100](--v4);
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

google::protobuf::FileDescriptorTables *std::unique_ptr<google::protobuf::FileDescriptorTables>::reset[abi:ne180100](google::protobuf::FileDescriptorTables **a1)
{
  uint64_t result = *a1;
  *a1 = 0;
  if (result)
  {
    google::protobuf::FileDescriptorTables::~FileDescriptorTables(result);
    JUMPOUT(0x18C11F580);
  }
  return result;
}

void std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,void *>>>::operator()[abi:ne180100](char a1, void **__p)
{
  if (a1)
  {
    if (*((char *)__p + 39) < 0) {
      operator delete(__p[2]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

uint64_t std::unique_ptr<std::unordered_map<std::pair<void const*,google::protobuf::StringPiece>,google::protobuf::FieldDescriptor const*,google::protobuf::anonymous namespace'::PointerStringPairHash,std::equal_to<std::pair<void const*,google::protobuf::StringPiece>>,std::allocator<std::pair<std::pair<void const*,google::protobuf::StringPiece> const,google::protobuf::FieldDescriptor const*>>>>::reset[abi:ne180100](uint64_t *a1)
{
  uint64_t result = *a1;
  *a1 = 0;
  if (result)
  {
    std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(result);
    JUMPOUT(0x18C11F580);
  }
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<google::protobuf::Descriptor const*,int>>>(unint64_t a1)
{
  if (a1 >> 60) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(16 * a1);
}

uint64_t std::vector<std::unique_ptr<std::string>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::unique_ptr<std::string>>,std::reverse_iterator<std::unique_ptr<std::string>*>,std::reverse_iterator<std::unique_ptr<std::string>*>,std::reverse_iterator<std::unique_ptr<std::string>*>>((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::unique_ptr<std::string>>,std::reverse_iterator<std::unique_ptr<std::string>*>,std::reverse_iterator<std::unique_ptr<std::string>*>,std::reverse_iterator<std::unique_ptr<std::string>*>>(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  uint64_t v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    uint64_t v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<std::string>>,std::reverse_iterator<std::unique_ptr<std::string>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v13);
  return v11;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<std::string>>,std::reverse_iterator<std::unique_ptr<std::string>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<std::string>>,std::reverse_iterator<std::unique_ptr<std::string>*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<std::string>>,std::reverse_iterator<std::unique_ptr<std::string>*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(uint64_t **)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *v1;
    *uint64_t v1 = 0;
    if (v3) {
      std::default_delete<std::string>::operator()[abi:ne180100]((uint64_t)v1, v3);
    }
    ++v1;
  }
}

uint64_t std::__split_buffer<std::unique_ptr<std::string>>::~__split_buffer(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::__split_buffer<std::unique_ptr<std::string>>::__destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(void *)(a1 + 16); i != a2; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 8;
    uint64_t v5 = *(void *)(i - 8);
    *(void *)(i - 8) = 0;
    if (v5) {
      std::default_delete<std::string>::operator()[abi:ne180100](i - 8, v5);
    }
  }
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(unint64_t a1)
{
  if (a1 >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(8 * a1);
}

uint64_t std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 8;
    uint64_t v4 = *(void *)(i - 8);
    *(void *)(i - 8) = 0;
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t std::__split_buffer<std::unique_ptr<std::once_flag>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 8;
    uint64_t v4 = *(void *)(i - 8);
    *(void *)(i - 8) = 0;
    if (v4) {
      MEMORY[0x18C11F580](v4, 0x1000C4000313F17);
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t std::__split_buffer<std::unique_ptr<google::protobuf::FileDescriptorTables>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 8;
    std::unique_ptr<google::protobuf::FileDescriptorTables>::reset[abi:ne180100]((google::protobuf::FileDescriptorTables **)(i - 8));
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void *std::vector<std::vector<char>>::__swap_out_circular_buffer(void *result, void *a2)
{
  uint64_t v3 = (void *)*result;
  uint64_t v2 = (void *)result[1];
  uint64_t v4 = a2[1];
  while (v2 != v3)
  {
    *(void *)(v4 - 24) = 0;
    *(void *)(v4 - 16) = 0;
    v4 -= 24;
    *(void *)(v4 + 16) = 0;
    long long v5 = *(_OWORD *)(v2 - 3);
    v2 -= 3;
    *(_OWORD *)uint64_t v4 = v5;
    *(void *)(v4 + 16) = v2[2];
    void *v2 = 0;
    v2[1] = 0;
    void v2[2] = 0;
  }
  a2[1] = v4;
  uint64_t v6 = (void *)*result;
  *uint64_t result = v4;
  a2[1] = v6;
  uint64_t v7 = result[1];
  result[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = result[2];
  result[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<char>>>(unint64_t a1)
{
  if (a1 >= 0xAAAAAAAAAAAAAABLL) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(24 * a1);
}

uint64_t std::__split_buffer<std::vector<char>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != v3)
  {
    uint64_t v4 = *(void **)(v2 - 24);
    *(void *)(a1 + 16) = v2 - 24;
    if (v4)
    {
      *(void *)(v2 - 16) = v4;
      operator delete(v4);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 24;
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__deallocate_node(a1, *(void ***)(a1 + 16));
    *(void *)(a1 + 16) = 0;
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      for (uint64_t i = 0; i != v2; ++i)
        *(void *)(*(void *)a1 + 8 * i) = 0;
    }
    *(void *)(a1 + 24) = 0;
  }
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(std::pair<google::protobuf::FileDescriptorTables const*,google::protobuf::SourceCodeInfo const*> *),std::pair<google::protobuf::FileDescriptorTables const*,google::protobuf::SourceCodeInfo const*> *&&>>(uint64_t a1)
{
  return (**(uint64_t (***)(void))a1)(**(void **)(*(void *)a1 + 8));
}

void std::__tree<std::__value_type<std::string,BOOL>,std::__map_value_compare<std::string,std::__value_type<std::string,BOOL>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,BOOL>>>::destroy(char *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::string,BOOL>,std::__map_value_compare<std::string,std::__value_type<std::string,BOOL>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,BOOL>>>::destroy(*(void *)a1);
    std::__tree<std::__value_type<std::string,BOOL>,std::__map_value_compare<std::string,std::__value_type<std::string,BOOL>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,BOOL>>>::destroy(*((void *)a1 + 1));
    if (a1[55] < 0) {
      operator delete(*((void **)a1 + 4));
    }
    operator delete(a1);
  }
}

std::mutex **google::protobuf::internal::OnShutdownDelete<google::protobuf::DescriptorPool>(google::protobuf::DescriptorPool *)::{lambda(void const*)#1}::__invoke(std::mutex **result)
{
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = *result;
    if (v2)
    {
      std::mutex::~mutex(v2);
      MEMORY[0x18C11F580]();
    }
    std::__tree<std::__value_type<std::string,BOOL>,std::__map_value_compare<std::string,std::__value_type<std::string,BOOL>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,BOOL>>>::destroy((char *)v1[7]);
    uint64_t v3 = v1[4];
    v1[4] = 0;
    if (v3)
    {
      uint64_t v4 = *(void **)&v3[7].__m_.__opaque[24];
      if (v4)
      {
        *(void *)&v3[7].__m_.__opaque[32] = v4;
        operator delete(v4);
      }
      long long v5 = *(void **)v3[7].__m_.__opaque;
      if (v5)
      {
        *(void *)&v3[7].__m_.__opaque[8] = v5;
        operator delete(v5);
      }
      uint64_t v6 = *(void **)&v3[6].__m_.__opaque[40];
      if (v6)
      {
        *(void *)&v3[6].__m_.__opaque[48] = v6;
        operator delete(v6);
      }
      uint64_t v7 = *(void **)&v3[6].__m_.__opaque[16];
      if (v7)
      {
        *(void *)&v3[6].__m_.__opaque[24] = v7;
        operator delete(v7);
      }
      std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::destroy(*(void **)v3[6].__m_.__opaque);
      std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)&v3[5].__m_.__opaque[16]);
      std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)&v3[4].__m_.__opaque[40]);
      uint64_t v8 = (void **)&v3[4].__m_.__opaque[16];
      std::vector<std::unique_ptr<google::protobuf::FileDescriptorTables>>::__destroy_vector::operator()[abi:ne180100](&v8);
      uint64_t v8 = (void **)&v3[4];
      std::vector<std::unique_ptr<std::once_flag>>::__destroy_vector::operator()[abi:ne180100](&v8);
      uint64_t v8 = (void **)&v3[3].__m_.__opaque[32];
      std::vector<std::unique_ptr<google::protobuf::Message>>::__destroy_vector::operator()[abi:ne180100](&v8);
      uint64_t v8 = (void **)&v3[3].__m_.__opaque[8];
      std::vector<std::unique_ptr<std::string>>::__destroy_vector::operator()[abi:ne180100](&v8);
      uint64_t v8 = (void **)&v3[2].__m_.__opaque[48];
      std::vector<std::vector<char>>::__destroy_vector::operator()[abi:ne180100](&v8);
      std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::~__hash_table((uint64_t)&v3[2].__m_.__opaque[8]);
      std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)&v3[1].__m_.__opaque[32]);
      std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v3[1]);
      std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v3->__m_.__opaque[16]);
      uint64_t v8 = (void **)v3;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v8);
      MEMORY[0x18C11F580](v3, 0x10A0C40292B2256);
    }
    JUMPOUT(0x18C11F580);
  }
  return result;
}

unsigned __int8 *std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>(void *a1, unsigned __int8 *a2)
{
  unint64_t v4 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)(a1 + 3), (uint64_t)a2);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v5 - 1) & v4;
  }
  uint64_t v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10) {
    return 0;
  }
  uint64_t v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = (uint64_t)(a1 + 4);
    do
    {
      unint64_t v13 = *((void *)v11 + 1);
      if (v6 == v13)
      {
        if (std::equal_to<std::string>::operator()[abi:ne180100](v12, v11 + 16, a2)) {
          return v11;
        }
      }
      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(void *)&v5) {
            v13 %= *(void *)&v5;
          }
        }
        else
        {
          v13 &= *(void *)&v5 - 1;
        }
        if (v13 != v9) {
          return 0;
        }
      }
      uint64_t v11 = *(unsigned __int8 **)v11;
    }
    while (v11);
  }
  return v11;
}

{
  unint64_t v4;
  int8x8_t v5;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned __int8 **v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unint64_t v13;

  unint64_t v4 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)(a1 + 3), (uint64_t)a2);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v5 - 1) & v4;
  }
  uint64_t v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10) {
    return 0;
  }
  uint64_t v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = (uint64_t)(a1 + 4);
    do
    {
      unint64_t v13 = *((void *)v11 + 1);
      if (v13 == v6)
      {
        if (std::equal_to<std::string>::operator()[abi:ne180100](v12, v11 + 16, a2)) {
          return v11;
        }
      }
      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(void *)&v5) {
            v13 %= *(void *)&v5;
          }
        }
        else
        {
          v13 &= *(void *)&v5 - 1;
        }
        if (v13 != v9) {
          return 0;
        }
      }
      uint64_t v11 = *(unsigned __int8 **)v11;
    }
    while (v11);
  }
  return v11;
}

void std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string>(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint8x8_t v7 = (void *)(a1 + 24);
  unint64_t v8 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }
    unint64_t v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2)) {
            return;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  long long v16 = (void *)(a1 + 16);
  std::string v17 = operator new(0x28uLL);
  *std::string v17 = 0;
  v17[1] = v9;
  *((_OWORD *)v17 + 1) = *(_OWORD *)a3;
  unsigned char v17[4] = *(void *)(a3 + 16);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  float v18 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v19 = *(float *)(a1 + 32);
  if (!v10 || (float)(v19 * (float)v10) < v18)
  {
    BOOL v20 = 1;
    if (v10 >= 3) {
      BOOL v20 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v21 = v20 | (2 * v10);
    unint64_t v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22) {
      size_t v23 = v22;
    }
    else {
      size_t v23 = v21;
    }
    std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::__rehash<true>(a1, v23);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  uint64_t v24 = *(void *)a1;
  uint64_t v25 = *(void **)(*(void *)a1 + 8 * v3);
  if (v25)
  {
    *std::string v17 = *v25;
LABEL_38:
    *uint64_t v25 = v17;
    goto LABEL_39;
  }
  *std::string v17 = *v16;
  *long long v16 = v17;
  *(void *)(v24 + 8 * v3) = v16;
  if (*v17)
  {
    unint64_t v26 = *(void *)(*v17 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v26 >= v10) {
        v26 %= v10;
      }
    }
    else
    {
      v26 &= v10 - 1;
    }
    uint64_t v25 = (void *)(*(void *)a1 + 8 * v26);
    goto LABEL_38;
  }
LABEL_39:
  ++*v7;
}

void sub_1891FCBD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](v11, v10);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<google::protobuf::Descriptor const*>::__emplace_unique_key_args<google::protobuf::Descriptor const*,google::protobuf::Descriptor const*>(uint64_t *result, unint64_t a2, uint64_t a3)
{
  unint64_t v4 = result;
  unint64_t v6 = (uint64_t **)(result + 1);
  int8x8_t v5 = (uint64_t *)result[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        uint8x8_t v7 = (uint64_t **)v5;
        unint64_t v8 = v5[4];
        if (v8 <= a2) {
          break;
        }
        int8x8_t v5 = *v7;
        unint64_t v6 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (v8 >= a2) {
        break;
      }
      int8x8_t v5 = v7[1];
      if (!v5)
      {
        unint64_t v6 = v7 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    uint8x8_t v7 = (uint64_t **)(result + 1);
LABEL_9:
    unint64_t v9 = (uint64_t *)operator new(0x28uLL);
    char v9[4] = a3;
    uint64_t *v9 = 0;
    v9[1] = 0;
    void v9[2] = (uint64_t)v7;
    void *v6 = v9;
    uint64_t v10 = *(void *)*v4;
    if (v10)
    {
      *unint64_t v4 = v10;
      uint64_t v11 = *v6;
    }
    else
    {
      uint64_t v11 = v9;
    }
    uint64_t result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)v4[1], v11);
    ++v4[2];
  }
  return result;
}

std::string *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,google::protobuf::internal::RepeatedPtrIterator<std::string const>,google::protobuf::internal::RepeatedPtrIterator<std::string const>,std::string*>(uint64_t a1, long long **a2, long long **a3, std::string *this)
{
  unint64_t v4 = this;
  unint64_t v12 = this;
  unint64_t v13 = this;
  v10[0] = a1;
  v10[1] = &v12;
  void v10[2] = &v13;
  char v11 = 0;
  if (a2 != a3)
  {
    unint64_t v6 = a2;
    do
    {
      uint8x8_t v7 = *v6;
      if (*((char *)*v6 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(v4, *(const std::string::value_type **)v7, *((void *)v7 + 1));
        unint64_t v4 = v13;
      }
      else
      {
        long long v8 = *v7;
        v4->__r_.__value_.__r.__words[2] = *((void *)v7 + 2);
        *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v8;
      }
      ++v6;
      unint64_t v13 = ++v4;
    }
    while (v6 != a3);
  }
  char v11 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v10);
  return v4;
}

void sub_1891FCD54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    uint64_t result = std::vector<int>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1891FCDC8(_Unwind_Exception *exception_object)
{
  unint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void std::allocator_traits<std::allocator<google::protobuf::anonymous namespace'::OptionsToInterpret>>::destroy[abi:ne180100]<google::protobuf::anonymous namespace'::OptionsToInterpret,void>(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    unint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

void google::protobuf::anonymous namespace'::OptionsToInterpret::~OptionsToInterpret(google::protobuf::_anonymous_namespace_::OptionsToInterpret *this)
{
  uint64_t v2 = (void *)*((void *)this + 6);
  if (v2)
  {
    *((void *)this + 7) = v2;
    operator delete(v2);
  }
  if (*((char *)this + 47) < 0) {
    operator delete(*((void **)this + 3));
  }
  if (*((char *)this + 23) < 0) {
    operator delete(*(void **)this);
  }
}

uint64_t std::__tree<google::protobuf::FileDescriptor const*>::__emplace_unique_key_args<google::protobuf::FileDescriptor const*,google::protobuf::FileDescriptor const* const&>(uint64_t **a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6 = a1 + 1;
  int8x8_t v5 = a1[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (uint64_t **)v5;
        unint64_t v8 = v5[4];
        if (v8 <= a2) {
          break;
        }
        int8x8_t v5 = *v7;
        unint64_t v6 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (v8 >= a2) {
        return 0;
      }
      int8x8_t v5 = v7[1];
      if (!v5)
      {
        unint64_t v6 = v7 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    uint64_t v7 = a1 + 1;
LABEL_9:
    unint64_t v9 = (uint64_t *)operator new(0x28uLL);
    char v9[4] = a3;
    uint64_t *v9 = 0;
    v9[1] = 0;
    void v9[2] = (uint64_t)v7;
    void *v6 = v9;
    uint64_t v10 = (uint64_t *)**a1;
    if (v10)
    {
      *a1 = v10;
      char v11 = *v6;
    }
    else
    {
      char v11 = v9;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v11);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
    return 1;
  }
}

void std::__tree<google::protobuf::FileDescriptor const*>::__erase_unique<google::protobuf::FileDescriptor const*>(uint64_t **a1, unint64_t a2)
{
  unint64_t v4 = (uint64_t *)(a1 + 1);
  unint64_t v3 = a1[1];
  if (v3)
  {
    int8x8_t v5 = v4;
    unint64_t v6 = v3;
    do
    {
      unint64_t v7 = v6[4];
      BOOL v8 = v7 >= a2;
      if (v7 >= a2) {
        unint64_t v9 = (uint64_t **)v6;
      }
      else {
        unint64_t v9 = (uint64_t **)(v6 + 1);
      }
      if (v8) {
        int8x8_t v5 = v6;
      }
      unint64_t v6 = *v9;
    }
    while (*v9);
    if (v5 != v4 && v5[4] <= a2)
    {
      uint64_t v10 = (uint64_t *)v5[1];
      if (v10)
      {
        do
        {
          char v11 = v10;
          uint64_t v10 = (uint64_t *)*v10;
        }
        while (v10);
      }
      else
      {
        unint64_t v12 = v5;
        do
        {
          char v11 = (uint64_t *)v12[2];
          BOOL v13 = *v11 == (void)v12;
          unint64_t v12 = v11;
        }
        while (!v13);
      }
      if (*a1 == v5) {
        *a1 = v11;
      }
      a1[2] = (uint64_t *)((char *)a1[2] - 1);
      std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(v3, v5);
      operator delete(v5);
    }
  }
}

void std::vector<google::protobuf::anonymous namespace'::OptionsToInterpret>::push_back[abi:ne180100](void **a1, long long *a2)
{
  unint64_t v4 = (char *)a1[1];
  int8x8_t v5 = (char *)a1[2];
  if (v4 >= v5)
  {
    uint64_t v9 = 0x2E8BA2E8BA2E8BA3 * ((v4 - (unsigned char *)*a1) >> 3);
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) > 0x2E8BA2E8BA2E8BALL) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v11 = 0x2E8BA2E8BA2E8BA3 * ((v5 - (unsigned char *)*a1) >> 3);
    if (2 * v11 > v10) {
      unint64_t v10 = 2 * v11;
    }
    if (v11 >= 0x1745D1745D1745DLL) {
      unint64_t v12 = 0x2E8BA2E8BA2E8BALL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      if (v12 > 0x2E8BA2E8BA2E8BALL) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      BOOL v13 = (char *)operator new(88 * v12);
    }
    else
    {
      BOOL v13 = 0;
    }
    char v14 = &v13[88 * v9];
    *((void *)v14 + 2) = *((void *)a2 + 2);
    *(_OWORD *)char v14 = *a2;
    unint64_t v15 = &v13[88 * v12];
    *(void *)a2 = 0;
    *((void *)a2 + 1) = 0;
    long long v16 = *(long long *)((char *)a2 + 24);
    *((void *)a2 + 2) = 0;
    *((void *)a2 + 3) = 0;
    *(_OWORD *)(v14 + 24) = v16;
    *((void *)v14 + 5) = *((void *)a2 + 5);
    *((void *)a2 + 4) = 0;
    *((void *)a2 + 5) = 0;
    *((void *)v14 + 8) = 0;
    *((_OWORD *)v14 + 3) = a2[3];
    *((void *)v14 + 8) = *((void *)a2 + 8);
    *((void *)a2 + 6) = 0;
    *((void *)a2 + 7) = 0;
    *((void *)a2 + 8) = 0;
    *(_OWORD *)(v14 + 72) = *(long long *)((char *)a2 + 72);
    BOOL v8 = v14 + 88;
    std::string v17 = (char *)*a1;
    float v18 = (char *)a1[1];
    if (v18 == *a1)
    {
      *a1 = v14;
      a1[1] = v8;
      a1[2] = v15;
    }
    else
    {
      do
      {
        long long v19 = *(_OWORD *)(v18 - 88);
        *((void *)v14 - 9) = *((void *)v18 - 9);
        *(_OWORD *)(v14 - 88) = v19;
        *((void *)v18 - 10) = 0;
        *((void *)v18 - 9) = 0;
        *((void *)v18 - 11) = 0;
        long long v20 = *((_OWORD *)v18 - 4);
        *((void *)v14 - 6) = *((void *)v18 - 6);
        *((_OWORD *)v14 - 4) = v20;
        *((void *)v18 - 7) = 0;
        *((void *)v18 - 6) = 0;
        *((void *)v18 - 8) = 0;
        *((void *)v14 - 5) = 0;
        *((void *)v14 - 4) = 0;
        *((void *)v14 - 3) = 0;
        *(_OWORD *)(v14 - 40) = *(_OWORD *)(v18 - 40);
        *((void *)v14 - 3) = *((void *)v18 - 3);
        *((void *)v18 - 5) = 0;
        *((void *)v18 - 4) = 0;
        *((void *)v18 - 3) = 0;
        *((_OWORD *)v14 - 1) = *((_OWORD *)v18 - 1);
        v14 -= 88;
        v18 -= 88;
      }
      while (v18 != v17);
      float v18 = (char *)*a1;
      uint64_t v21 = (uint64_t)a1[1];
      *a1 = v14;
      a1[1] = v8;
      a1[2] = v15;
      while ((char *)v21 != v18)
      {
        v21 -= 88;
      }
    }
    if (v18) {
      operator delete(v18);
    }
  }
  else
  {
    long long v6 = *a2;
    *((void *)v4 + 2) = *((void *)a2 + 2);
    *(_OWORD *)unint64_t v4 = v6;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    long long v7 = *(long long *)((char *)a2 + 24);
    *((void *)v4 + 5) = *((void *)a2 + 5);
    *(_OWORD *)(v4 + 24) = v7;
    *((void *)a2 + 4) = 0;
    *((void *)a2 + 5) = 0;
    *((void *)a2 + 3) = 0;
    *((void *)v4 + 6) = 0;
    *((void *)v4 + 7) = 0;
    *((void *)v4 + 8) = 0;
    *((_OWORD *)v4 + 3) = a2[3];
    *((void *)v4 + 8) = *((void *)a2 + 8);
    *((void *)a2 + 6) = 0;
    *((void *)a2 + 7) = 0;
    *((void *)a2 + 8) = 0;
    *(_OWORD *)(v4 + 72) = *(long long *)((char *)a2 + 72);
    BOOL v8 = v4 + 88;
  }
  a1[1] = v8;
}

std::string *google::protobuf::anonymous namespace'::OptionsToInterpret::OptionsToInterpret(std::string *this, long long *a2, long long *a3, uint64_t a4, std::string::size_type a5, std::string::size_type a6)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v11 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v11;
  }
  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this + 1, *(const std::string::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v12 = *a3;
    this[1].__r_.__value_.__r.__words[2] = *((void *)a3 + 2);
    *(_OWORD *)&this[1].__r_.__value_.__l.__data_ = v12;
  }
  this[2].__r_.__value_.__r.__words[0] = 0;
  this[2].__r_.__value_.__l.__size_ = 0;
  this[2].__r_.__value_.__r.__words[2] = 0;
  std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(this[2].__r_.__value_.__r.__words, *(const void **)a4, *(void *)(a4 + 8), (uint64_t)(*(void *)(a4 + 8) - *(void *)a4) >> 2);
  this[3].__r_.__value_.__r.__words[0] = a5;
  this[3].__r_.__value_.__l.__size_ = a6;
  return this;
}

void sub_1891FD338(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *std::__tree<std::__value_type<std::string,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::FieldDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::FieldDescriptor const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t **a1, const void **a2, long long **a3)
{
  long long v6 = a1 + 1;
  int8x8_t v5 = a1[1];
  if (!v5)
  {
    BOOL v8 = a1 + 1;
LABEL_9:
    unint64_t v10 = *a3;
    long long v11 = (uint64_t *)operator new(0x40uLL);
    long long v12 = (std::string *)(v11 + 4);
    if (*((char *)v10 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(v12, *(const std::string::value_type **)v10, *((void *)v10 + 1));
    }
    else
    {
      long long v13 = *v10;
      v11[6] = *((void *)v10 + 2);
      *(_OWORD *)&v12->__r_.__value_.__l.__data_ = v13;
    }
    v11[7] = 0;
    *long long v11 = 0;
    v11[1] = 0;
    std::string v11[2] = (uint64_t)v8;
    uint64_t *v6 = v11;
    char v14 = (uint64_t *)**a1;
    unint64_t v15 = v11;
    if (v14)
    {
      *a1 = v14;
      unint64_t v15 = *v6;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v15);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
    return v11;
  }
  while (1)
  {
    while (1)
    {
      BOOL v8 = (uint64_t **)v5;
      uint64_t v9 = (const void **)(v5 + 4);
      if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), a2, (const void **)v5 + 4)) {
        break;
      }
      int8x8_t v5 = *v8;
      long long v6 = v8;
      if (!*v8) {
        goto LABEL_9;
      }
    }
    if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), v9, a2)) {
      break;
    }
    long long v6 = v8 + 1;
    int8x8_t v5 = v8[1];
    if (!v5) {
      goto LABEL_9;
    }
  }
  long long v11 = *v6;
  if (!*v6) {
    goto LABEL_9;
  }
  return v11;
}

void sub_1891FD598(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::destroy(*a1);
    std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::vector<int> const,std::vector<int>>,0>((uint64_t)(a1 + 4));
    operator delete(a1);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::vector<int> const,std::vector<int>>,0>(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(void *)(a1 + 32) = v2;
    operator delete(v2);
  }
  unint64_t v3 = *(void **)a1;
  if (*(void *)a1)
  {
    *(void *)(a1 + 8) = v3;
    operator delete(v3);
  }
}

void std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::destroy(*a1);
    std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::destroy(a1[1]);
    uint64_t v2 = (void *)a1[4];
    if (v2)
    {
      a1[5] = v2;
      operator delete(v2);
    }
    operator delete(a1);
  }
}

void std::default_delete<google::protobuf::UnknownFieldSet>::operator()[abi:ne180100](google::protobuf::UnknownFieldSet *a1)
{
  uint64_t v2 = *(void **)a1;
  if (v2 != *((void **)a1 + 1))
  {
    google::protobuf::UnknownFieldSet::ClearFallback(a1);
    uint64_t v2 = *(void **)a1;
  }
  if (v2)
  {
    *((void *)a1 + 1) = v2;
    operator delete(v2);
  }

  JUMPOUT(0x18C11F580);
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::vector<int>,std::vector<int>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::vector<int>,std::vector<int>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::vector<int> const,std::vector<int>>,0>((uint64_t)v1 + 32);
    }
    operator delete(v1);
  }
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>(void *a1)
{
  uint64_t v2 = (google::protobuf::SourceCodeInfo_Location **)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::SourceCodeInfo_Location::~SourceCodeInfo_Location(*v3);
          MEMORY[0x18C11F580]();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (google::protobuf::SourceCodeInfo_Location **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>(google::protobuf::internal::ArenaImpl **a1, google::protobuf::SourceCodeInfo_Location **a2, const google::protobuf::SourceCodeInfo_Location **a3, unsigned int a4, unsigned int a5)
{
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    long long v11 = a3;
    long long v12 = a2;
    do
    {
      char v14 = *v11++;
      long long v13 = v14;
      unint64_t v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::SourceCodeInfo_Location>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    float v18 = *a1;
    long long v19 = (char **)&a2[a5];
    long long v20 = &a3[a5];
    do
    {
      uint64_t v21 = *v20++;
      unint64_t v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::SourceCodeInfo_Location>::Merge(v21, (google::protobuf::SourceCodeInfo_Location *)v22);
      *v19++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::SourceCodeInfo_Location>::Merge(const google::protobuf::SourceCodeInfo_Location *a1, google::protobuf::SourceCodeInfo_Location *a2)
{
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>(uint64_t a1)
{
  return (**(uint64_t (***)(void))a1)(**(void **)(*(void *)a1 + 8));
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FileDescriptor const*),google::protobuf::FileDescriptor const*&&>>(uint64_t a1)
{
  return (**(uint64_t (***)(void))a1)(**(void **)(*(void *)a1 + 8));
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::internal::LazyDescriptor *),google::protobuf::internal::LazyDescriptor *&&>>(uint64_t a1)
{
  return (**(uint64_t (***)(void))a1)(**(void **)(*(void *)a1 + 8));
}

BOOL google::protobuf::TextFormat::Printer::PrintToString(google::protobuf::TextFormat::Printer *a1, const google::protobuf::Message *a2, uint64_t a3)
{
  if (*(char *)(a3 + 23) < 0)
  {
    **(unsigned char **)a3 = 0;
    *(void *)(a3 + 8) = 0;
  }
  else
  {
    *(unsigned char *)a3 = 0;
    *(unsigned char *)(a3 + 23) = 0;
  }
  v4[0] = &unk_1ED515AB0;
  v4[1] = a3;
  return google::protobuf::TextFormat::Printer::Print(a1, a2, (google::protobuf::io::ZeroCopyOutputStream *)v4);
}

void google::protobuf::Message::ShortDebugString(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  google::protobuf::TextFormat::Printer::Printer((google::protobuf::TextFormat::Printer *)v2);
}

void sub_1891FDA4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::TextFormat::Printer::~Printer((google::protobuf::TextFormat::Printer *)va);
  if (*(char *)(v2 + 23) < 0) {
    operator delete(*(void **)v2);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::TextFormat::Printer::SetUseUtf8StringEscaping(google::protobuf::TextFormat::Printer *this)
{
}

uint64_t google::protobuf::TextFormat::Finder::FindExtensionByNumber(google::protobuf::TextFormat::Finder *this, const google::protobuf::Descriptor *a2, uint64_t a3)
{
  return google::protobuf::DescriptorPool::FindExtensionByNumber(*(std::mutex ***)(*((void *)a2 + 2) + 16), a2, a3);
}

uint64_t google::protobuf::anonymous namespace'::DefaultFinderFindAnyType(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  int v4 = *((char *)a2 + 23);
  if (v4 < 0)
  {
    if (a2[1] != 20) {
      return 0;
    }
    a2 = (uint64_t *)*a2;
  }
  else if (v4 != 20)
  {
    return 0;
  }
  if (*a2 != *(void *)"type.googleapis.com/"
    || a2[1] != *(void *)"gleapis.com/"
    || *((_DWORD *)a2 + 4) != (unint64_t)*(unsigned int *)"com/")
  {
    BOOL v7 = *a2 == *(void *)"type.googleprod.com/" && a2[1] == *(void *)"gleprod.com/";
    if (!v7 || *((_DWORD *)a2 + 4) != (unint64_t)*(unsigned int *)"com/") {
      return 0;
    }
  }
  uint64_t v10 = *(void *)(*(void *)((*(uint64_t (**)(uint64_t))(*(void *)a1 + 152))(a1) + 16) + 16);

  return google::protobuf::DescriptorPool::FindMessageTypeByName(v10, a3, v11);
}

uint64_t google::protobuf::TextFormat::Finder::FindExtensionFactory(google::protobuf::TextFormat::Finder *this, const google::protobuf::FieldDescriptor *a2)
{
  return 0;
}

uint64_t google::protobuf::TextFormat::Parser::Parse(long long *a1, uint64_t a2, google::protobuf::Message *a3)
{
  (*(void (**)(google::protobuf::Message *))(*(void *)a3 + 40))(a3);
  BOOL v6 = *((unsigned char *)a1 + 31) == 0;
  uint64_t v7 = (*(uint64_t (**)(google::protobuf::Message *))(*(void *)a3 + 152))(a3);
  uint64_t v8 = *((void *)a1 + 2);
  char v9 = *((unsigned char *)a1 + 29);
  int v10 = *((unsigned __int8 *)a1 + 30);
  char v11 = *((unsigned char *)a1 + 24);
  int v12 = *((_DWORD *)a1 + 8);
  long long v18 = *a1;
  uint64_t v19 = v8;
  v20[0] = &unk_1ED514658;
  v20[1] = &v18;
  int v13 = *(_DWORD *)((char *)a1 + 25);
  google::protobuf::io::Tokenizer::Tokenizer((uint64_t)v21, a2, (uint64_t)v20);
  uint64_t v25 = v7;
  BOOL v26 = v6;
  int v27 = v13;
  char v28 = v9;
  char v29 = v11;
  int v30 = v12;
  int v31 = v12;
  char v32 = 0;
  char v22 = 1;
  int v23 = 1;
  if (v10) {
    __int16 v24 = 256;
  }
  google::protobuf::io::Tokenizer::Next((google::protobuf::io::Tokenizer *)v21);
  while (v21[0] != 1)
  {
    if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeField((google::protobuf::TextFormat::Parser::ParserImpl *)&v18, a3) & 1) == 0)goto LABEL_8; {
  }
    }
  if (v32)
  {
LABEL_8:
    uint64_t v14 = 0;
    goto LABEL_9;
  }
  if (!*((unsigned char *)a1 + 24)
    && ((*(uint64_t (**)(google::protobuf::Message *))(*(void *)a3 + 48))(a3) & 1) == 0)
  {
    memset(v36, 0, 24);
    google::protobuf::Message::FindInitializationErrors(a3, (uint64_t)v36);
    google::protobuf::Join<std::vector<std::string>>(", ", v36, &v33);
    BOOL v16 = std::string::insert(&v33, 0, "Message missing required fields: ");
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    std::string::size_type v35 = v16->__r_.__value_.__r.__words[2];
    long long v34 = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)&v18, -1, 0, (uint64_t)&v34);
    if (SHIBYTE(v35) < 0) {
      operator delete((void *)v34);
    }
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v33.__r_.__value_.__l.__data_);
    }
    *(void *)&long long v34 = v36;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v34);
    goto LABEL_8;
  }
  uint64_t v14 = 1;
LABEL_9:
  google::protobuf::io::Tokenizer::~Tokenizer((google::protobuf::io::Tokenizer *)v21);
  return v14;
}

void sub_1891FDE80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, google::protobuf::io::Tokenizer *a10)
{
  if (*(char *)(v10 - 121) < 0) {
    operator delete(*(void **)(v10 - 144));
  }
  if (*(char *)(v10 - 145) < 0) {
    operator delete(*(void **)(v10 - 168));
  }
  *(void *)(v10 - 144) = v10 - 112;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v10 - 144));
  google::protobuf::io::Tokenizer::~Tokenizer(a10);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::TextFormat::Parser::ParseFromString(char **a1, uint64_t a2, char *a3)
{
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v15, (uint64_t *)a2, a3);
  if (result)
  {
    int v7 = *(char *)(a2 + 23);
    uint64_t v8 = *(void *)a2;
    BOOL v9 = v7 < 0;
    if (v7 >= 0) {
      uint64_t v8 = a2;
    }
    int v10 = *(unsigned __int8 *)(a2 + 23);
    if (v9) {
      int v10 = *(_DWORD *)(a2 + 8);
    }
    v11[0] = &unk_1ED515A70;
    v11[1] = v8;
    int v12 = v10;
    int v13 = v10;
    uint64_t v14 = 0;
    return google::protobuf::TextFormat::Parser::Parse((long long *)a1, (uint64_t)v11, (google::protobuf::Message *)a3);
  }
  return result;
}

BOOL google::protobuf::anonymous namespace'::CheckParseInputSize(int a1, google::protobuf *this, char *a3)
{
  v16[6] = *MEMORY[0x1E4F143B8];
  if ((uint64_t)this >= 0x80000000)
  {
    v16[0] = "Input size too large: ";
    v16[1] = 22;
    v14[0] = v15;
    v14[1] = google::protobuf::FastUInt64ToBufferLeft(this, v15, a3) - v15;
    v13[0] = " bytes";
    v13[1] = 6;
    v12[0] = " > ";
    v12[1] = 3;
    v10[0] = v11;
    v10[1] = google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)0x7FFFFFFF, v11, v5) - v11;
    v9[0] = " bytes.";
    v9[1] = 7;
    google::protobuf::StrCat((uint64_t)v16, (uint64_t)v14, (uint64_t)v13, (uint64_t)v12, (uint64_t)v10, (uint64_t)v9, (uint64_t)__p);
    (*(void (**)(char *, uint64_t, void, void **))(*(void *)a3 + 16))(a3, 0xFFFFFFFFLL, 0, __p);
    if (v8 < 0) {
      operator delete(__p[0]);
    }
  }
  return (uint64_t)this < 0x80000000;
}

void sub_1891FE0F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::Parser::ParserImpl::ReportError(uint64_t *a1, int a2, int a3, uint64_t a4)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  *((unsigned char *)a1 + 244) = 1;
  uint64_t v8 = *a1;
  if (v8)
  {
    BOOL v9 = *(void (**)(void))(*(void *)v8 + 16);
    v9();
    return;
  }
  if (a2 < 0)
  {
    *(_DWORD *)std::string __str = 2;
    int v30 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/text_format.cc";
    int v31 = 323;
    memset(__p, 0, 24);
    std::string::append(__p, "Error parsing text-format ");
    uint64_t v18 = *(void *)(a1[27] + 8);
    int v19 = *(char *)(v18 + 23);
    if (v19 >= 0) {
      long long v20 = *(const std::string::value_type **)(a1[27] + 8);
    }
    else {
      long long v20 = *(const std::string::value_type **)v18;
    }
    if (v19 >= 0) {
      std::string::size_type v21 = *(unsigned __int8 *)(v18 + 23);
    }
    else {
      std::string::size_type v21 = *(void *)(v18 + 8);
    }
    std::string::append(__p, v20, v21);
    std::string::append(__p, ": ");
    int v22 = *(char *)(a4 + 23);
    if (v22 >= 0) {
      int v23 = (const std::string::value_type *)a4;
    }
    else {
      int v23 = *(const std::string::value_type **)a4;
    }
    if (v22 >= 0) {
      std::string::size_type v24 = *(unsigned __int8 *)(a4 + 23);
    }
    else {
      std::string::size_type v24 = *(void *)(a4 + 8);
    }
    std::string::append(__p, v23, v24);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)__str);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    {
      long long v17 = (void *)__p[0].__r_.__value_.__r.__words[0];
      goto LABEL_34;
    }
  }
  else
  {
    int v25 = 2;
    BOOL v26 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/text_format.cc";
    int v27 = 319;
    memset(&v28, 0, sizeof(v28));
    std::string::append(&v28, "Error parsing text-format ");
    uint64_t v10 = *(void *)(a1[27] + 8);
    int v11 = *(char *)(v10 + 23);
    if (v11 >= 0) {
      int v12 = *(const std::string::value_type **)(a1[27] + 8);
    }
    else {
      int v12 = *(const std::string::value_type **)v10;
    }
    if (v11 >= 0) {
      std::string::size_type v13 = *(unsigned __int8 *)(v10 + 23);
    }
    else {
      std::string::size_type v13 = *(void *)(v10 + 8);
    }
    std::string::append(&v28, v12, v13);
    std::string::append(&v28, ": ");
    snprintf(__str, 0x80uLL, "%d", a2 + 1);
    char v33 = 0;
    std::string::append(&v28, __str);
    std::string::append(&v28, ":");
    snprintf(__str, 0x80uLL, "%d", a3 + 1);
    char v33 = 0;
    std::string::append(&v28, __str);
    std::string::append(&v28, ": ");
    int v14 = *(char *)(a4 + 23);
    if (v14 >= 0) {
      unint64_t v15 = (const std::string::value_type *)a4;
    }
    else {
      unint64_t v15 = *(const std::string::value_type **)a4;
    }
    if (v14 >= 0) {
      std::string::size_type v16 = *(unsigned __int8 *)(a4 + 23);
    }
    else {
      std::string::size_type v16 = *(void *)(a4 + 8);
    }
    std::string::append(&v28, v15, v16);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v25);
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
    {
      long long v17 = (void *)v28.__r_.__value_.__r.__words[0];
LABEL_34:
      operator delete(v17);
    }
  }
}

void sub_1891FE3D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintBool(uint64_t a1, int a2, uint64_t a3)
{
  unint64_t v3 = *(uint64_t (**)(uint64_t, const char *, uint64_t))(*(void *)a3 + 40);
  if (a2) {
    return v3(a3, "true", 4);
  }
  else {
    return v3(a3, "false", 5);
  }
}

void google::protobuf::TextFormat::FastFieldValuePrinter::PrintInt32(uint64_t a1, google::protobuf *a2, char *a3)
{
  int v4 = a2;
  *(void *)&v13[31] = *MEMORY[0x1E4F143B8];
  int __src = &v12;
  if ((a2 & 0x80000000) != 0)
  {
    int8x8_t v5 = v13;
    char v12 = 45;
    int v4 = (google::protobuf *)-(int)v4;
  }
  else
  {
    int8x8_t v5 = &v12;
  }
  size_t v11 = google::protobuf::FastUInt32ToBufferLeft(v4, v5, a3) - &v12;
  std::string::basic_string[abi:ne180100](__p, __src, v11);
  if ((v9 & 0x80u) == 0) {
    BOOL v6 = __p;
  }
  else {
    BOOL v6 = (void **)__p[0];
  }
  if ((v9 & 0x80u) == 0) {
    unint64_t v7 = v9;
  }
  else {
    unint64_t v7 = (unint64_t)__p[1];
  }
  (*(void (**)(char *, void **, unint64_t))(*(void *)a3 + 40))(a3, v6, v7);
  if ((char)v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1891FE548(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt32(int a1, google::protobuf *this, char *a3)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  int __src = v10;
  size_t v9 = google::protobuf::FastUInt32ToBufferLeft(this, v10, a3) - v10;
  std::string::basic_string[abi:ne180100](__p, v10, v9);
  if ((v7 & 0x80u) == 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    unint64_t v5 = v7;
  }
  else {
    unint64_t v5 = (unint64_t)__p[1];
  }
  (*(void (**)(char *, void **, unint64_t))(*(void *)a3 + 40))(a3, v4, v5);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1891FE64C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::FastFieldValuePrinter::PrintInt64(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4 = a2;
  *(void *)&v13[31] = *MEMORY[0x1E4F143B8];
  int __src = &v12;
  if (a2 < 0)
  {
    unint64_t v5 = v13;
    char v12 = 45;
    uint64_t v4 = -v4;
  }
  else
  {
    unint64_t v5 = &v12;
  }
  size_t v11 = google::protobuf::FastUInt64ToBufferLeft((google::protobuf *)v4, v5, a3) - &v12;
  std::string::basic_string[abi:ne180100](__p, __src, v11);
  if ((v9 & 0x80u) == 0) {
    BOOL v6 = __p;
  }
  else {
    BOOL v6 = (void **)__p[0];
  }
  if ((v9 & 0x80u) == 0) {
    unint64_t v7 = v9;
  }
  else {
    unint64_t v7 = (unint64_t)__p[1];
  }
  (*(void (**)(char *, void **, unint64_t))(*(void *)a3 + 40))(a3, v6, v7);
  if ((char)v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1891FE75C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt64(int a1, google::protobuf *this, char *a3)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  int __src = v10;
  size_t v9 = google::protobuf::FastUInt64ToBufferLeft(this, v10, a3) - v10;
  std::string::basic_string[abi:ne180100](__p, v10, v9);
  if ((v7 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    unint64_t v5 = v7;
  }
  else {
    unint64_t v5 = (unint64_t)__p[1];
  }
  (*(void (**)(char *, void **, unint64_t))(*(void *)a3 + 40))(a3, v4, v5);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1891FE854(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::FastFieldValuePrinter::PrintFloat(float a1, uint64_t a2, char *a3)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  google::protobuf::FloatToBuffer((google::protobuf *)__s, a1, a3);
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  if ((v7 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    unint64_t v5 = v7;
  }
  else {
    unint64_t v5 = (unint64_t)__p[1];
  }
  (*(void (**)(char *, void **, unint64_t))(*(void *)a3 + 40))(a3, v4, v5);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1891FE950(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::FastFieldValuePrinter::PrintDouble(double a1, uint64_t a2, char *a3)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  google::protobuf::DoubleToBuffer((google::protobuf *)__s, a1, a3);
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  if ((v7 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    unint64_t v5 = v7;
  }
  else {
    unint64_t v5 = (unint64_t)__p[1];
  }
  (*(void (**)(char *, void **, unint64_t))(*(void *)a3 + 40))(a3, v4, v5);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1891FEA4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintString(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  (*(void (**)(uint64_t, const char *, uint64_t))(*(void *)a3 + 40))(a3, "\"", 1);
  google::protobuf::CEscape(a2, v5, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::__split_buffer<std::string>::pointer p_p = &__p;
  }
  else {
    std::__split_buffer<std::string>::pointer p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  (*(void (**)(uint64_t, std::string *, std::string::size_type))(*(void *)a3 + 40))(a3, p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return (*(uint64_t (**)(uint64_t, const char *, uint64_t))(*(void *)a3 + 40))(a3, "\"", 1);
}

void sub_1891FEB6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintEnum(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  int v4 = *((char *)a3 + 23);
  if (v4 >= 0) {
    unint64_t v5 = a3;
  }
  else {
    unint64_t v5 = (uint64_t *)*a3;
  }
  if (v4 >= 0) {
    uint64_t v6 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    uint64_t v6 = a3[1];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a4 + 40))(a4, v5, v6);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName(int a1, int a2, int a3, std::once_flag::_State_type **this, uint64_t a5)
{
  if (*((unsigned char *)this + 67))
  {
    (*(void (**)(uint64_t, const char *, uint64_t))(*(void *)a5 + 40))(a5, "[", 1);
    uint64_t v7 = google::protobuf::FieldDescriptor::PrintableNameForExtension((google::protobuf::FieldDescriptor *)this);
    int v8 = *(char *)(v7 + 23);
    if (v8 >= 0) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = *(void *)v7;
    }
    if (v8 >= 0) {
      uint64_t v10 = *(unsigned __int8 *)(v7 + 23);
    }
    else {
      uint64_t v10 = *(void *)(v7 + 8);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a5 + 40))(a5, v9, v10);
    uint64_t v11 = *(uint64_t (**)(uint64_t, const char *, uint64_t))(*(void *)a5 + 40);
    return v11(a5, "]", 1);
  }
  else
  {
    std::string::size_type v13 = this[6];
    if (v13)
    {
      uint64_t v18 = (google::protobuf::FieldDescriptor *)this;
      int v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
      {
        v21[0] = &v19;
        v21[1] = &v18;
        long long v20 = v21;
        std::__call_once(v13, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    if (*((_DWORD *)this + 14) == 10) {
      int v14 = *(std::once_flag::_State_type **)google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)this);
    }
    else {
      int v14 = *this;
    }
    int v15 = *((char *)v14 + 23);
    if (v15 >= 0) {
      std::once_flag::_State_type v16 = (std::once_flag::_State_type)v14;
    }
    else {
      std::once_flag::_State_type v16 = *v14;
    }
    if (v15 >= 0) {
      std::once_flag::_State_type v17 = *((unsigned __int8 *)v14 + 23);
    }
    else {
      std::once_flag::_State_type v17 = v14[1];
    }
    return (*(uint64_t (**)(uint64_t, std::once_flag::_State_type, std::once_flag::_State_type))(*(void *)a5 + 40))(a5, v16, v17);
  }
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintMessageStart(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  if (a5) {
    uint64_t v6 = " { ";
  }
  else {
    uint64_t v6 = " {\n";
  }
  return (*(uint64_t (**)(uint64_t, const char *, uint64_t))(*(void *)a6 + 40))(a6, v6, 3);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintMessageEnd(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  if (a5) {
    uint64_t v6 = "} ";
  }
  else {
    uint64_t v6 = "}\n";
  }
  return (*(uint64_t (**)(uint64_t, const char *, uint64_t))(*(void *)a6 + 40))(a6, v6, 2);
}

void google::protobuf::TextFormat::FastFieldValuePrinter::~FastFieldValuePrinter(google::protobuf::TextFormat::FastFieldValuePrinter *this)
{
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintBytes(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 72))();
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 104))(a1, a2, a5, a6, a7);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintMessageContent()
{
  return 0;
}

void google::protobuf::TextFormat::Printer::Printer(google::protobuf::TextFormat::Printer *this)
{
  *((void *)this + 5) = 0;
  *((void *)this + 4) = (char *)this + 40;
  *((void *)this + 6) = 0;
  *(void *)this = 0;
  *((_WORD *)this + 4) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 7) = (char *)this + 64;
  *((void *)this + 9) = 0;
  *((void *)this + 10) = 0;
  google::protobuf::TextFormat::Printer::SetUseUtf8StringEscaping(this);
}

void sub_1891FEED8(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;
  std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy(v4, *(void **)(v1 + 64));
  std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>>>::destroy(v2, *(void **)(v1 + 40));
  uint64_t v6 = *(void *)(v1 + 24);
  *(void *)(v1 + 24) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  _Unwind_Resume(a1);
}

BOOL google::protobuf::TextFormat::Printer::Print(google::protobuf::TextFormat::Printer *this, const google::protobuf::Message *a2, google::protobuf::io::ZeroCopyOutputStream *a3)
{
  int v3 = *(_DWORD *)this;
  v6[0] = &unk_1ED514688;
  v6[1] = a3;
  void v6[2] = 0;
  int v7 = 0;
  __int16 v8 = 1;
  int v9 = v3;
  int v10 = v3;
  google::protobuf::TextFormat::Printer::Print(this, a2, (google::protobuf::TextFormat::Printer::TextGenerator *)v6);
  BOOL v4 = HIBYTE(v8) == 0;
  google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator((google::protobuf::TextFormat::Printer::TextGenerator *)v6);
  return v4;
}

void sub_1891FEFAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator((google::protobuf::TextFormat::Printer::TextGenerator *)va);
  _Unwind_Resume(a1);
}

void google::protobuf::TextFormat::Printer::Print(google::protobuf::TextFormat::Printer *this, const google::protobuf::Message *a2, google::protobuf::TextFormat::Printer::TextGenerator *a3)
{
  BOOL v4 = a2;
  uint64_t v77 = *MEMORY[0x1E4F143B8];
  (*(void (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  uint64_t v59 = v6;
  if (v6)
  {
    unint64_t v7 = (*(uint64_t (**)(const google::protobuf::Message *))(*(void *)v4 + 152))(v4);
    unint64_t v9 = v7;
    int v10 = (void *)*((void *)this + 8);
    if (v10)
    {
      uint64_t v11 = (char *)this + 64;
      do
      {
        unint64_t v12 = v10[4];
        BOOL v13 = v12 >= v7;
        if (v12 >= v7) {
          int v14 = v10;
        }
        else {
          int v14 = v10 + 1;
        }
        if (v13) {
          uint64_t v11 = (char *)v10;
        }
        int v10 = (void *)*v14;
      }
      while (*v14);
      if (v11 != (char *)this + 64 && *((void *)v11 + 4) <= v7)
      {
        uint64_t v49 = *(void (**)(void))(**((void **)v11 + 5) + 16);
        v49();
        return;
      }
    }
    int v15 = *(uint64_t **)(v7 + 8);
    int v16 = *((char *)v15 + 23);
    if (v16 < 0)
    {
      if (v15[1] != 19) {
        goto LABEL_38;
      }
      int v15 = (uint64_t *)*v15;
    }
    else if (v16 != 19)
    {
      goto LABEL_38;
    }
    int v23 = (uint64_t *)*v15;
    uint64_t v24 = v15[1];
    uint64_t v25 = *(uint64_t *)((char *)v15 + 11);
    if (v23 == *(uint64_t **)"google.protobuf.Any" && v24 == *(void *)"rotobuf.Any" && v25 == *(void *)"obuf.Any")
    {
      if (*((unsigned char *)this + 9))
      {
        uint64_t v67 = 0;
        int64_t v64 = 0;
        if (google::protobuf::internal::GetAnyFieldDescriptors(v4, (const google::protobuf::Message *)&v67, &v64, v8))
        {
          (*(void (**)(const google::protobuf::Message *))(*(void *)v4 + 152))(v4);
          google::protobuf::Reflection::GetString(v50, v4, v67, v51, &v73);
          __p[0] = 0;
          __p[1] = 0;
          uint64_t v66 = 0;
          int v61 = 0;
          long long v62 = 0;
          int v63 = 0;
          google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v60, (uint64_t *)&v73, v52);
          if (google::protobuf::internal::ParseAnyTypeUrl(v60[0], v60[1], (uint64_t)__p, (uint64_t)&v61))
          {
            uint64_t v53 = *((void *)this + 10);
            if (v53) {
              uint64_t AnyType = (*(uint64_t (**)(uint64_t, const google::protobuf::Message *, void **, void **))(*(void *)v53 + 32))(v53, v4, __p, &v61);
            }
            else {
            if (AnyType) {
              google::protobuf::DynamicMessageFactory::DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)&v68);
            }
            LODWORD(v68) = 1;
            p_unsigned int data = (void **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/text_format.cc";
            int v70 = 1992;
            memset(v72, 0, 24);
            std::string::append(v72, "Can't print proto content: proto type ");
            if ((v73.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              uint64_t v55 = &v73;
            }
            else {
              uint64_t v55 = (std::string *)v73.__r_.__value_.__r.__words[0];
            }
            if ((v73.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type size = HIBYTE(v73.__r_.__value_.__r.__words[2]);
            }
            else {
              std::string::size_type size = v73.__r_.__value_.__l.__size_;
            }
            std::string::append(v72, (const std::string::value_type *)v55, size);
            std::string::append(v72, " not found");
            google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v68);
            if (SHIBYTE(v72[0].__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v72[0].__r_.__value_.__l.__data_);
            }
          }
          if (SHIBYTE(v63) < 0) {
            operator delete(v61);
          }
          if (SHIBYTE(v66) < 0) {
            operator delete(__p[0]);
          }
          if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v73.__r_.__value_.__l.__data_);
          }
        }
      }
    }
LABEL_38:
    int v61 = 0;
    long long v62 = 0;
    int v63 = 0;
    unint64_t v58 = v4;
    if (*(unsigned char *)(*(void *)(v9 + 32) + 75))
    {
      uint64_t v28 = *(void *)(v9 + 40);
      char v29 = (uint64_t *)operator new(8uLL);
      *char v29 = v28;
      int v61 = v29;
      int v63 = v29 + 1;
      uint64_t v30 = *(void *)(v9 + 40);
      int v31 = (uint64_t *)operator new(0x10uLL);
      *int v31 = v28;
      v31[1] = v30 + 152;
      char v32 = v31 + 2;
      int v61 = v31;
      long long v62 = (char *)(v31 + 2);
      int v63 = v31 + 2;
      operator delete(v29);
      long long v62 = (char *)v32;
      BOOL v4 = v58;
    }
    else
    {
      google::protobuf::Reflection::ListFieldsMayFailOnStripped((uint64_t)v59, v4, 0, (uint64_t)&v61);
      char v33 = (google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(const google::protobuf::Message *))(*(void *)v4 + 152))(v4);
    }
    uint64_t v36 = (char *)v61;
    if (*((unsigned char *)this + 8))
    {
      unint64_t v37 = 126 - 2 * __clz((v62 - (unsigned char *)v61) >> 3);
      if (v62 == v61) {
        uint64_t v38 = 0;
      }
      else {
        uint64_t v38 = v37;
      }
      uint64_t v36 = (char *)v61;
    }
    for (uint64_t i = v62; v36 != i; v36 += 8)
    {
      uint64_t v39 = *(void *)v36;
      if (!*((unsigned char *)this + 6) || *(_DWORD *)(v39 + 60) != 3) {
        goto LABEL_57;
      }
      unsigned int v40 = *(std::once_flag::_State_type **)(v39 + 48);
      if (v40)
      {
        v73.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        __p[0] = (void *)v39;
        if (atomic_load_explicit((atomic_ullong *volatile)v40, memory_order_acquire) != -1)
        {
          unsigned int v68 = &v73;
          p_unsigned int data = __p;
          uint64_t v74 = &v68;
          std::__call_once(v40, &v74, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      int v41 = *(_DWORD *)(v39 + 56);
      if (v41 == 9 || v41 == 12) {
        goto LABEL_57;
      }
      double v43 = *(std::once_flag::_State_type **)(v39 + 48);
      if (v43)
      {
        v73.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        __p[0] = (void *)v39;
        if (atomic_load_explicit((atomic_ullong *volatile)v43, memory_order_acquire) != -1)
        {
          unsigned int v68 = &v73;
          p_unsigned int data = __p;
          uint64_t v74 = &v68;
          std::__call_once(v43, &v74, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        int v41 = *(_DWORD *)(v39 + 56);
      }
      if ((v41 & 0xFFFFFFFE) == 0xA)
      {
LABEL_57:
        if (*(_DWORD *)(v39 + 60) == 3) {
          google::protobuf::Reflection::FieldSize((google::protobuf::_anonymous_namespace_ **)v59, v4, (const google::protobuf::FieldDescriptor *)v39, v34, v35);
        }
        else {
          google::protobuf::Reflection::HasField((google::protobuf::_anonymous_namespace_ **)v59, v4, (const google::protobuf::FieldDescriptor *)v39, v34, v35);
        }
        unsigned int v68 = (std::string *)&unk_1ED515480;
        p_unsigned int data = 0;
        LOBYTE(v70) = 0;
        operator new();
      }
      int v44 = google::protobuf::Reflection::FieldSize((google::protobuf::_anonymous_namespace_ **)v59, v4, (const google::protobuf::FieldDescriptor *)v39, v34, v35);
      google::protobuf::TextFormat::Printer::PrintFieldName(this, v4, (char *)0xFFFFFFFFLL, v44, v59, (const google::protobuf::FieldDescriptor *)v39, a3);
      (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(void *)a3 + 40))(a3, ": [", 3);
      if (v44 >= 1)
      {
        for (int j = 0; j != v44; ++j)
        {
          if (j) {
            (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(void *)a3 + 40))(a3, ", ", 2);
          }
          google::protobuf::TextFormat::Printer::PrintFieldValue(this, v4, v59, (const google::protobuf::FieldDescriptor *)v39, j, a3);
        }
      }
      if (*((unsigned char *)this + 4)) {
        int v46 = "] ";
      }
      else {
        int v46 = "]\n";
      }
      char v33 = (google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(void *)a3 + 40))(a3, v46, 2);
    }
    if (!*((unsigned char *)this + 7))
    {
      uint64_t v47 = *(void *)((char *)v4 + *((unsigned int *)v59 + 9));
      if (v47) {
        uint64_t v48 = (const google::protobuf::UnknownFieldSet *)((v47 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else {
        uint64_t v48 = (const google::protobuf::UnknownFieldSet *)google::protobuf::UnknownFieldSet::default_instance(v33);
      }
      google::protobuf::TextFormat::Printer::PrintUnknownFields(this, v48, a3, 10);
    }
    int v19 = (std::string **)v61;
    if (v61)
    {
      long long v62 = (char *)v61;
      goto LABEL_83;
    }
    return;
  }
  uint64_t v74 = 0;
  long long v75 = 0;
  uint64_t v76 = 0;
  google::protobuf::MessageLite::SerializeAsString(v4, (uint64_t)&v73);
  int v17 = HIBYTE(v73.__r_.__value_.__r.__words[2]);
  if ((v73.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v18 = &v73;
  }
  else {
    uint64_t v18 = (std::string *)v73.__r_.__value_.__r.__words[0];
  }
  if ((v73.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v17 = v73.__r_.__value_.__r.__words[1];
  }
  unsigned int v68 = (std::string *)&unk_1ED515A70;
  p_unsigned int data = (void **)&v18->__r_.__value_.__l.__data_;
  int v70 = v17;
  int v71 = v17;
  v72[0].__r_.__value_.__r.__words[0] = 0;
  google::protobuf::UnknownFieldSet::ParseFromZeroCopyStream((google::protobuf::UnknownFieldSet *)&v74, (char *)&v68);
  if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v73.__r_.__value_.__l.__data_);
  }
  google::protobuf::TextFormat::Printer::PrintUnknownFields(this, (const google::protobuf::UnknownFieldSet *)&v74, a3, 10);
  int v19 = v74;
  if (v74 != v75)
  {
    uint64_t v20 = (int)(((char *)v75 - (char *)v74) >> 4);
    uint64_t v21 = v20 + 1;
    uint64_t v22 = 16 * v20 - 16;
    do
    {
      google::protobuf::UnknownField::Delete((uint64_t)v74 + v22);
      --v21;
      v22 -= 16;
    }
    while (v21 > 1);
    int v19 = v74;
  }
  if (v19)
  {
    long long v75 = v19;
LABEL_83:
    operator delete(v19);
  }
}

void sub_189200770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
  if (*(char *)(v55 - 121) < 0) {
    operator delete(*(void **)(v55 - 144));
  }
  if (a29 < 0) {
    operator delete(__p);
  }
  if (v54) {
    (*(void (**)(uint64_t))(*(void *)v54 + 8))(v54);
  }
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)&a46);
  if (a37 < 0) {
    operator delete(a32);
  }
  if (a44 < 0) {
    operator delete(a39);
  }
  if (*(char *)(v55 - 217) < 0) {
    operator delete(*(void **)(v55 - 240));
  }
  _Unwind_Resume(a1);
}

void google::protobuf::TextFormat::Printer::PrintUnknownFields(google::protobuf::TextFormat::Printer *this, const google::protobuf::UnknownFieldSet *a2, google::protobuf::TextFormat::Printer::TextGenerator *a3, uint64_t a4)
{
  uint64_t v79 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void *)a2;
  if ((int)((*((void *)a2 + 1) - *(void *)a2) >> 4) >= 1)
  {
    uint64_t v5 = a4;
    unint64_t v7 = a2;
    uint64_t v9 = 0;
    uint64_t v10 = (a4 - 1);
    do
    {
      unint64_t v11 = *(unsigned int *)(v4 + 16 * v9);
      int __src = &v69;
      unint64_t v12 = &v69;
      if ((v11 & 0x80000000) != 0)
      {
        LOBYTE(v69) = 45;
        unint64_t v11 = -(int)v11;
        unint64_t v12 = (uint64_t *)((char *)&v69 + 1);
      }
      size_t v68 = google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)v11, v12, (char *)a3) - (unsigned char *)&v69;
      std::string::basic_string[abi:ne180100](&__dst, __src, v68);
      switch(*(_DWORD *)(v4 + 16 * v9 + 4))
      {
        case 0:
          if ((v66 & 0x80u) == 0) {
            p_dst = &__dst;
          }
          else {
            p_dst = __dst;
          }
          if ((v66 & 0x80u) == 0) {
            uint64_t v14 = v66;
          }
          else {
            uint64_t v14 = v65;
          }
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, void *, uint64_t))(*(void *)a3 + 40))(a3, p_dst, v14);
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(void *)a3 + 40))(a3, ": ", 2);
          int v15 = *(google::protobuf **)(v4 + 16 * v9 + 8);
          int __src = &v69;
          size_t v68 = google::protobuf::FastUInt64ToBufferLeft(v15, &v69, v16) - (unsigned char *)&v69;
          std::string::basic_string[abi:ne180100](&__p, __src, v68);
          if (v63 >= 0) {
            std::__split_buffer<std::string>::pointer p_p = &__p;
          }
          else {
            std::__split_buffer<std::string>::pointer p_p = __p;
          }
          if (v63 >= 0) {
            uint64_t v18 = (unsigned char *)HIBYTE(v63);
          }
          else {
            uint64_t v18 = v62;
          }
          goto LABEL_46;
        case 1:
          if ((v66 & 0x80u) == 0) {
            int v19 = &__dst;
          }
          else {
            int v19 = __dst;
          }
          if ((v66 & 0x80u) == 0) {
            uint64_t v20 = v66;
          }
          else {
            uint64_t v20 = v65;
          }
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, void *, uint64_t))(*(void *)a3 + 40))(a3, v19, v20);
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(void *)a3 + 40))(a3, ": 0x", 4);
          uint64_t v21 = 0;
          unint64_t v22 = *(unsigned int *)(v4 + 16 * v9 + 8);
          unint64_t v23 = v22 | 0x10000000;
          do
          {
            *((unsigned char *)&v74 + v21 + 3) = google::protobuf::strings::AlphaNum::AlphaNum(google::protobuf::strings::Hex)::hexdigits[v22 & 0xF];
            v22 >>= 4;
            --v21;
            BOOL v24 = v23 > 0xF;
            v23 >>= 4;
          }
          while (v24);
          int __src = (char *)&v74 + v21 + 4;
          size_t v68 = -v21;
          std::string::basic_string[abi:ne180100](&__p, (char *)&v74 + v21 + 4, -v21);
          if (v63 >= 0) {
            std::__split_buffer<std::string>::pointer p_p = &__p;
          }
          else {
            std::__split_buffer<std::string>::pointer p_p = __p;
          }
          if (v63 >= 0) {
            uint64_t v18 = (unsigned char *)HIBYTE(v63);
          }
          else {
            uint64_t v18 = v62;
          }
          goto LABEL_46;
        case 2:
          if ((v66 & 0x80u) == 0) {
            uint64_t v25 = &__dst;
          }
          else {
            uint64_t v25 = __dst;
          }
          if ((v66 & 0x80u) == 0) {
            uint64_t v26 = v66;
          }
          else {
            uint64_t v26 = v65;
          }
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, void *, uint64_t))(*(void *)a3 + 40))(a3, v25, v26);
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(void *)a3 + 40))(a3, ": 0x", 4);
          uint64_t v27 = 0;
          unint64_t v28 = *(void *)(v4 + 16 * v9 + 8);
          unint64_t v29 = v28 | 0x1000000000000000;
          do
          {
            *((unsigned char *)&v74 + v27 + 3) = google::protobuf::strings::AlphaNum::AlphaNum(google::protobuf::strings::Hex)::hexdigits[v28 & 0xF];
            v28 >>= 4;
            --v27;
            BOOL v24 = v29 > 0xF;
            v29 >>= 4;
          }
          while (v24);
          int __src = (char *)&v74 + v27 + 4;
          size_t v68 = -v27;
          std::string::basic_string[abi:ne180100](&__p, (char *)&v74 + v27 + 4, -v27);
          if (v63 >= 0) {
            std::__split_buffer<std::string>::pointer p_p = &__p;
          }
          else {
            std::__split_buffer<std::string>::pointer p_p = __p;
          }
          if (v63 >= 0) {
            uint64_t v18 = (unsigned char *)HIBYTE(v63);
          }
          else {
            uint64_t v18 = v62;
          }
LABEL_46:
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, void *, unsigned char *))(*(void *)a3 + 40))(a3, p_p, v18);
          if (SHIBYTE(v63) < 0) {
            operator delete(__p);
          }
          uint64_t v30 = (void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(void *)a3 + 40);
          if (*((unsigned char *)this + 4)) {
            int v31 = " ";
          }
          else {
            int v31 = "\n";
          }
          uint64_t v32 = 1;
          goto LABEL_100;
        case 3:
          if ((v66 & 0x80u) == 0) {
            char v33 = &__dst;
          }
          else {
            char v33 = __dst;
          }
          if ((v66 & 0x80u) == 0) {
            uint64_t v34 = v66;
          }
          else {
            uint64_t v34 = v65;
          }
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, void *, uint64_t))(*(void *)a3 + 40))(a3, v33, v34);
          uint64_t v37 = *(void *)(v4 + 16 * v9 + 8);
          if (*(char *)(v37 + 23) < 0)
          {
            uint64_t v39 = *(void **)v37;
            uint64_t v38 = *(void *)(v37 + 8);
          }
          else
          {
            LODWORD(v38) = *(unsigned __int8 *)(v37 + 23);
            uint64_t v39 = (void *)v37;
          }
          int __src = v39;
          size_t v68 = (size_t)v39 + (int)v38;
          uint64_t v69 = 0;
          uint64_t v71 = 0;
          __int16 v72 = 0;
          int v70 = v38;
          int v73 = v38;
          uint64_t v74 = 0x7FFFFFFF00000000;
          uint64_t v77 = 0;
          uint64_t v78 = 0;
          int v75 = v5;
          int v76 = v5;
          long long v62 = 0;
          uint64_t v63 = 0;
          std::string __p = 0;
          if (*(char *)(v37 + 23) < 0) {
            uint64_t v43 = *(void *)(v37 + 8);
          }
          else {
            uint64_t v43 = *(unsigned __int8 *)(v37 + 23);
          }
          if ((int)v5 >= 1
            && v43
            && google::protobuf::UnknownFieldSet::ParseFromCodedStream((google::protobuf::UnknownFieldSet *)&__p, (char **)&__src, v35, v36))
          {
            unint64_t v45 = *(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(void *)a3 + 40);
            if (*((unsigned char *)this + 4))
            {
              v45(a3, " { ", 3);
            }
            else
            {
              v45(a3, " {\n", 3);
              (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *))(*(void *)a3 + 16))(a3);
            }
            google::protobuf::TextFormat::Printer::PrintUnknownFields(this, (const google::protobuf::UnknownFieldSet *)&__p, a3, v10);
            uint64_t v59 = *(void *)a3;
            if (*((unsigned char *)this + 4))
            {
              uint64_t v49 = (void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(v59 + 40);
              uint64_t v50 = "} ";
            }
            else
            {
              (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *))(v59 + 24))(a3);
              uint64_t v49 = (void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(void *)a3 + 40);
              uint64_t v50 = "}\n";
            }
          }
          else
          {
            (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(void *)a3 + 40))(a3, ": \"", 3);
            google::protobuf::CEscape((uint64_t *)v37, v46, &v60);
            if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              uint64_t v47 = &v60;
            }
            else {
              uint64_t v47 = (std::string *)v60.__r_.__value_.__r.__words[0];
            }
            if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type size = HIBYTE(v60.__r_.__value_.__r.__words[2]);
            }
            else {
              std::string::size_type size = v60.__r_.__value_.__l.__size_;
            }
            (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, std::string *, std::string::size_type))(*(void *)a3 + 40))(a3, v47, size);
            if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v60.__r_.__value_.__l.__data_);
            }
            uint64_t v49 = (void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(void *)a3 + 40);
            if (*((unsigned char *)this + 4)) {
              uint64_t v50 = "\" ";
            }
            else {
              uint64_t v50 = "\"\n";
            }
          }
          (*v49)(a3, v50, 2);
          uint64_t v51 = __p;
          if (__p != v62)
          {
            unint64_t v52 = v7;
            uint64_t v53 = this;
            uint64_t v54 = v5;
            uint64_t v55 = v10;
            uint64_t v56 = (int)((v62 - (unsigned char *)__p) >> 4);
            uint64_t v57 = v56 + 1;
            uint64_t v58 = 16 * v56 - 16;
            do
            {
              google::protobuf::UnknownField::Delete((uint64_t)__p + v58);
              --v57;
              v58 -= 16;
            }
            while (v57 > 1);
            uint64_t v51 = __p;
            uint64_t v10 = v55;
            uint64_t v5 = v54;
            this = v53;
            unint64_t v7 = v52;
          }
          if (v51)
          {
            long long v62 = v51;
            operator delete(v51);
          }
          google::protobuf::io::CodedInputStream::~CodedInputStream((google::protobuf::io::CodedInputStream *)&__src);
          break;
        case 4:
          if ((v66 & 0x80u) == 0) {
            unsigned int v40 = &__dst;
          }
          else {
            unsigned int v40 = __dst;
          }
          if ((v66 & 0x80u) == 0) {
            uint64_t v41 = v66;
          }
          else {
            uint64_t v41 = v65;
          }
          (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, void *, uint64_t))(*(void *)a3 + 40))(a3, v40, v41);
          uint64_t v42 = *(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(void *)a3 + 40);
          if (*((unsigned char *)this + 4))
          {
            v42(a3, " { ", 3);
          }
          else
          {
            v42(a3, " {\n", 3);
            (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *))(*(void *)a3 + 16))(a3);
          }
          google::protobuf::TextFormat::Printer::PrintUnknownFields(this, *(const google::protobuf::UnknownFieldSet **)(v4 + 16 * v9 + 8), a3, v10);
          uint64_t v44 = *(void *)a3;
          if (*((unsigned char *)this + 4))
          {
            uint64_t v30 = (void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(v44 + 40);
            int v31 = "} ";
          }
          else
          {
            (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *))(v44 + 24))(a3);
            uint64_t v30 = (void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, const char *, uint64_t))(*(void *)a3 + 40);
            int v31 = "}\n";
          }
          uint64_t v32 = 2;
LABEL_100:
          (*v30)(a3, v31, v32);
          break;
        default:
          break;
      }
      if ((char)v66 < 0) {
        operator delete(__dst);
      }
      ++v9;
      uint64_t v4 = *(void *)v7;
    }
    while (v9 < (int)((*((void *)v7 + 1) - *(void *)v7) >> 4));
  }
}

void sub_18920135C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  google::protobuf::UnknownFieldSet::~UnknownFieldSet((google::protobuf::UnknownFieldSet *)&a20);
  google::protobuf::io::CodedInputStream::~CodedInputStream((google::protobuf::io::CodedInputStream *)&a32);
  if (a31 < 0) {
    operator delete(a26);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::TextFormat::Printer::PrintFieldValueToString(google::protobuf::TextFormat::Printer *a1, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, const char *a4, uint64_t a5)
{
  if (*(char *)(a5 + 23) < 0)
  {
    **(unsigned char **)a5 = 0;
    *(void *)(a5 + 8) = 0;
  }
  else
  {
    *(unsigned char *)a5 = 0;
    *(unsigned char *)(a5 + 23) = 0;
  }
  v16[0] = &unk_1ED515AB0;
  v16[1] = a5;
  int v9 = *(_DWORD *)a1;
  v11[0] = &unk_1ED514688;
  v11[1] = v16;
  void v11[2] = 0;
  int v12 = 0;
  __int16 v13 = 1;
  int v14 = v9;
  int v15 = v9;
  (*(void (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  google::protobuf::TextFormat::Printer::PrintFieldValue(a1, a2, v10, a3, a4, (google::protobuf::TextFormat::Printer::TextGenerator *)v11);
  google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator((google::protobuf::TextFormat::Printer::TextGenerator *)v11);
}

void sub_1892014F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator((google::protobuf::TextFormat::Printer::TextGenerator *)va);
  _Unwind_Resume(a1);
}

void google::protobuf::TextFormat::Printer::PrintFieldValue(google::protobuf::TextFormat::Printer *this, const google::protobuf::Message *a2, google::protobuf::_anonymous_namespace_ **a3, const google::protobuf::FieldDescriptor *a4, const char *a5, google::protobuf::TextFormat::Printer::TextGenerator *a6)
{
  int v7 = (int)a5;
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  int v12 = (void *)*((void *)this + 5);
  if (!v12) {
    goto LABEL_12;
  }
  __int16 v13 = (void *)((char *)this + 40);
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a4;
    if (v14 >= (unint64_t)a4) {
      int v16 = v12;
    }
    else {
      int v16 = v12 + 1;
    }
    if (v15) {
      __int16 v13 = v12;
    }
    int v12 = (void *)*v16;
  }
  while (*v16);
  if (v13 != (void *)((char *)this + 40) && v13[4] <= (unint64_t)a4) {
    int v17 = (uint64_t **)(v13 + 5);
  }
  else {
LABEL_12:
  }
    int v17 = (uint64_t **)((char *)this + 24);
  uint64_t v18 = *v17;
  int v19 = (std::once_flag::_State_type *)*((void *)a4 + 6);
  if (v19)
  {
    v47.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    *(void *)uint64_t v55 = a4;
    if (atomic_load_explicit((atomic_ullong *volatile)v19, memory_order_acquire) != -1)
    {
      int __src = &v47;
      size_t v53 = (size_t)v55;
      std::string __p = &__src;
      std::__call_once(v19, &__p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  switch(*((_DWORD *)a4 + 14))
  {
    case 1:
      if (*((_DWORD *)a4 + 15) == 3) {
        v24.n128_f64[0] = google::protobuf::Reflection::GetRepeatedDouble(a3, a2, a4, v7, a5);
      }
      else {
        v24.n128_f64[0] = google::protobuf::Reflection::GetDouble(a3, a2, a4, (uint64_t)a4, a5);
      }
      (*(void (**)(uint64_t *, google::protobuf::TextFormat::Printer::TextGenerator *, __n128))(*v18 + 64))(v18, a6, v24);
      break;
    case 2:
      if (*((_DWORD *)a4 + 15) == 3) {
        v25.n128_f32[0] = google::protobuf::Reflection::GetRepeatedFloat(a3, a2, a4, v7, a5);
      }
      else {
        v25.n128_f32[0] = google::protobuf::Reflection::GetFloat(a3, a2, a4, (uint64_t)a4, a5);
      }
      (*(void (**)(uint64_t *, google::protobuf::TextFormat::Printer::TextGenerator *, __n128))(*v18 + 56))(v18, a6, v25);
      break;
    case 3:
    case 0x10:
    case 0x12:
      if (*((_DWORD *)a4 + 15) == 3) {
        uint64_t RepeatedInt64 = google::protobuf::Reflection::GetRepeatedInt64(a3, a2, a4, v7, a5);
      }
      else {
        uint64_t RepeatedInt64 = google::protobuf::Reflection::GetInt64(a3, a2, a4, (uint64_t)a4, a5);
      }
      (*(void (**)(uint64_t *, uint64_t, google::protobuf::TextFormat::Printer::TextGenerator *))(*v18 + 40))(v18, RepeatedInt64, a6);
      break;
    case 4:
    case 6:
      if (*((_DWORD *)a4 + 15) == 3) {
        uint64_t RepeatedUInt64 = google::protobuf::Reflection::GetRepeatedUInt64(a3, a2, a4, v7, a5);
      }
      else {
        uint64_t RepeatedUInt64 = google::protobuf::Reflection::GetUInt64(a3, a2, a4, (uint64_t)a4, a5);
      }
      (*(void (**)(uint64_t *, uint64_t, google::protobuf::TextFormat::Printer::TextGenerator *))(*v18 + 48))(v18, RepeatedUInt64, a6);
      break;
    case 5:
    case 0xF:
    case 0x11:
      if (*((_DWORD *)a4 + 15) == 3) {
        uint64_t RepeatedInt32 = google::protobuf::Reflection::GetRepeatedInt32(a3, a2, a4, v7, a5);
      }
      else {
        uint64_t RepeatedInt32 = google::protobuf::Reflection::GetInt32(a3, a2, a4, (uint64_t)a4, a5);
      }
      (*(void (**)(uint64_t *, uint64_t, google::protobuf::TextFormat::Printer::TextGenerator *))(*v18 + 24))(v18, RepeatedInt32, a6);
      break;
    case 7:
    case 0xD:
      if (*((_DWORD *)a4 + 15) == 3) {
        uint64_t RepeatedUInt32 = google::protobuf::Reflection::GetRepeatedUInt32(a3, a2, a4, v7, a5);
      }
      else {
        uint64_t RepeatedUInt32 = google::protobuf::Reflection::GetUInt32(a3, a2, a4, (uint64_t)a4, a5);
      }
      (*(void (**)(uint64_t *, uint64_t, google::protobuf::TextFormat::Printer::TextGenerator *))(*v18 + 32))(v18, RepeatedUInt32, a6);
      break;
    case 8:
      if (*((_DWORD *)a4 + 15) == 3) {
        uint64_t RepeatedBool = google::protobuf::Reflection::GetRepeatedBool(a3, a2, a4, v7, a5);
      }
      else {
        uint64_t RepeatedBool = google::protobuf::Reflection::GetBool(a3, a2, a4, (uint64_t)a4, a5);
      }
      (*(void (**)(uint64_t *, uint64_t, google::protobuf::TextFormat::Printer::TextGenerator *))(*v18 + 16))(v18, RepeatedBool, a6);
      break;
    case 9:
    case 0xC:
      int __src = 0;
      size_t v53 = 0;
      v54[0] = 0;
      if (*((_DWORD *)a4 + 15) == 3) {
        unint64_t RepeatedStringReference = google::protobuf::Reflection::GetRepeatedStringReference((uint64_t)a3, (uint64_t)a2, a4, v7, (const char *)&__src);
      }
      else {
        unint64_t RepeatedStringReference = google::protobuf::Reflection::GetStringReference((uint64_t)a3, (uint64_t)a2, a4, (uint64_t)&__src, a5);
      }
      std::__split_buffer<std::string>::pointer p_p = (void **)RepeatedStringReference;
      std::string __p = 0;
      long long v49 = 0uLL;
      int64_t v36 = *((void *)this + 2);
      if (v36 >= 1)
      {
        unint64_t v37 = *(char *)(RepeatedStringReference + 23) < 0
            ? *(void *)(RepeatedStringReference + 8)
            : *(unsigned __int8 *)(RepeatedStringReference + 23);
        if (v36 < v37)
        {
          std::string::basic_string(&v47, (const std::string *)RepeatedStringReference, 0, v36, (std::allocator<char> *)&v51);
          uint64_t v41 = std::string::append(&v47, "...<truncated>...");
          uint64_t v42 = (void *)v41->__r_.__value_.__r.__words[0];
          *(void *)uint64_t v55 = v41->__r_.__value_.__l.__size_;
          *(void *)&v55[7] = *(std::string::size_type *)((char *)&v41->__r_.__value_.__r.__words[1] + 7);
          char v43 = HIBYTE(v41->__r_.__value_.__r.__words[2]);
          v41->__r_.__value_.__l.__size_ = 0;
          v41->__r_.__value_.__r.__words[2] = 0;
          v41->__r_.__value_.__r.__words[0] = 0;
          *(void *)((char *)&v49 + 7) = *(void *)&v55[7];
          std::string __p = v42;
          *(void *)&long long v49 = *(void *)v55;
          HIBYTE(v49) = v43;
          if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v47.__r_.__value_.__l.__data_);
          }
          std::__split_buffer<std::string>::pointer p_p = &__p;
        }
      }
      uint64_t v44 = (std::once_flag::_State_type *)*((void *)a4 + 6);
      if (v44)
      {
        uint64_t v50 = a4;
        uint64_t v51 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v44, memory_order_acquire) != -1)
        {
          v47.__r_.__value_.__r.__words[0] = (std::string::size_type)&v51;
          v47.__r_.__value_.__l.__size_ = (std::string::size_type)&v50;
          *(void *)uint64_t v55 = &v47;
          std::__call_once(v44, v55, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      uint64_t v45 = *v18;
      if (*((_DWORD *)a4 + 14) == 9) {
        int v46 = (void (**)(uint64_t *, void **, google::protobuf::TextFormat::Printer::TextGenerator *))(v45 + 72);
      }
      else {
        int v46 = (void (**)(uint64_t *, void **, google::protobuf::TextFormat::Printer::TextGenerator *))(v45 + 80);
      }
      (*v46)(v18, p_p, a6);
      if (SHIBYTE(v49) < 0) {
        operator delete(__p);
      }
      if (SHIBYTE(v54[0]) < 0)
      {
        unsigned int v40 = __src;
        goto LABEL_80;
      }
      break;
    case 0xA:
    case 0xB:
      if (*((_DWORD *)a4 + 15) == 3) {
        uint64_t RepeatedMessage = (const google::protobuf::Message *)google::protobuf::Reflection::GetRepeatedMessage(a3, a2, a4, v7, a5);
      }
      else {
        uint64_t RepeatedMessage = (const google::protobuf::Message *)google::protobuf::Reflection::GetMessage(a3, a2, a4, 0, a5);
      }
      google::protobuf::TextFormat::Printer::Print(this, RepeatedMessage, a6);
      break;
    case 0xE:
      if (*((_DWORD *)a4 + 15) == 3) {
        Repeateduint64_t EnumValue = google::protobuf::Reflection::GetRepeatedEnumValue(a3, a2, a4, v7, a5);
      }
      else {
        Repeateduint64_t EnumValue = google::protobuf::Reflection::GetEnumValue(a3, a2, a4, (uint64_t)a4, a5);
      }
      uint64_t v30 = RepeatedEnumValue;
      int v31 = (void *)google::protobuf::FieldDescriptor::enum_type(a4);
      uint64_t v32 = (void *)(*(void *)(v31[2] + 144) + 192);
      int __src = v31;
      size_t v53 = v30;
      if (v33)
      {
        (*(void (**)(uint64_t *, uint64_t, void, google::protobuf::TextFormat::Printer::TextGenerator *))(*v18 + 88))(v18, v30, *v33, a6);
      }
      else
      {
        int __src = v54;
        uint64_t v38 = v54;
        uint64_t v39 = v30;
        if ((v30 & 0x80000000) != 0)
        {
          uint64_t v38 = (char *)v54 + 1;
          LOBYTE(v54[0]) = 45;
          uint64_t v39 = -(int)v30;
        }
        size_t v53 = google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)v39, v38, v34) - (unsigned char *)v54;
        std::string::basic_string[abi:ne180100](&__p, __src, v53);
        (*(void (**)(uint64_t *, uint64_t, void **, google::protobuf::TextFormat::Printer::TextGenerator *))(*v18 + 88))(v18, v30, &__p, a6);
        if (SHIBYTE(v49) < 0)
        {
          unsigned int v40 = __p;
LABEL_80:
          operator delete(v40);
        }
      }
      break;
    default:
      return;
  }
}

void sub_189201C68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::Printer::PrintFieldName(google::protobuf::TextFormat::Printer *this, const google::protobuf::Message *a2, char *a3, int a4, const google::protobuf::Reflection *a5, const google::protobuf::FieldDescriptor *a6, google::protobuf::TextFormat::Printer::TextGenerator *a7)
{
  *(void *)&v24[31] = *MEMORY[0x1E4F143B8];
  if (*((unsigned char *)this + 5))
  {
    unint64_t v8 = *((unsigned int *)a6 + 17);
    int __src = &v23;
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = v24;
      char v23 = 45;
      unint64_t v8 = -(int)v8;
    }
    else
    {
      int v9 = &v23;
    }
    size_t v22 = google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)v8, v9, a3) - &v23;
    std::string::basic_string[abi:ne180100](__p, __src, v22);
    if ((v20 & 0x80u) == 0) {
      int v17 = __p;
    }
    else {
      int v17 = (void **)__p[0];
    }
    if ((v20 & 0x80u) == 0) {
      unint64_t v18 = v20;
    }
    else {
      unint64_t v18 = (unint64_t)__p[1];
    }
    (*(void (**)(google::protobuf::TextFormat::Printer::TextGenerator *, void **, unint64_t))(*(void *)a7 + 40))(a7, v17, v18);
    if ((char)v20 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    uint64_t v10 = (void *)*((void *)this + 5);
    if (!v10) {
      goto LABEL_15;
    }
    unint64_t v11 = (void *)((char *)this + 40);
    do
    {
      unint64_t v12 = v10[4];
      BOOL v13 = v12 >= (unint64_t)a6;
      if (v12 >= (unint64_t)a6) {
        unint64_t v14 = v10;
      }
      else {
        unint64_t v14 = v10 + 1;
      }
      if (v13) {
        unint64_t v11 = v10;
      }
      uint64_t v10 = (void *)*v14;
    }
    while (*v14);
    if (v11 != (void *)((char *)this + 40) && v11[4] <= (unint64_t)a6) {
      BOOL v15 = (char *)(v11 + 5);
    }
    else {
LABEL_15:
    }
      BOOL v15 = (char *)this + 24;
    int v16 = *(void (**)(void))(**(void **)v15 + 96);
    v16();
  }
}

void sub_189201E98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::PrintFieldValueToString()
{
  google::protobuf::TextFormat::Printer::Printer((google::protobuf::TextFormat::Printer *)v0);
}

void sub_189201F6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::TextFormat::Printer::~Printer((google::protobuf::TextFormat::Printer *)va);
  _Unwind_Resume(a1);
}

void google::protobuf::TextFormat::Parser::ParserImpl::ParserErrorCollector::~ParserErrorCollector(google::protobuf::TextFormat::Parser::ParserImpl::ParserErrorCollector *this)
{
}

void google::protobuf::TextFormat::Parser::ParserImpl::ParserErrorCollector::AddError(uint64_t a1, int a2, int a3, uint64_t a4)
{
}

void google::protobuf::TextFormat::Parser::ParserImpl::ParserErrorCollector::AddWarning(uint64_t a1, int a2, int a3, uint64_t a4)
{
}

void google::protobuf::TextFormat::Parser::ParserImpl::ReportWarning(uint64_t *a1, int a2, int a3, uint64_t a4)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = *a1;
  if (v8)
  {
    int v9 = *(void (**)(void))(*(void *)v8 + 24);
    v9();
    return;
  }
  if (a2 < 0)
  {
    *(_DWORD *)std::string __str = 1;
    uint64_t v30 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/text_format.cc";
    int v31 = 338;
    memset(__p, 0, 24);
    std::string::append(__p, "Warning parsing text-format ");
    uint64_t v18 = *(void *)(a1[27] + 8);
    int v19 = *(char *)(v18 + 23);
    if (v19 >= 0) {
      unsigned __int8 v20 = *(const std::string::value_type **)(a1[27] + 8);
    }
    else {
      unsigned __int8 v20 = *(const std::string::value_type **)v18;
    }
    if (v19 >= 0) {
      std::string::size_type v21 = *(unsigned __int8 *)(v18 + 23);
    }
    else {
      std::string::size_type v21 = *(void *)(v18 + 8);
    }
    std::string::append(__p, v20, v21);
    std::string::append(__p, ": ");
    int v22 = *(char *)(a4 + 23);
    if (v22 >= 0) {
      char v23 = (const std::string::value_type *)a4;
    }
    else {
      char v23 = *(const std::string::value_type **)a4;
    }
    if (v22 >= 0) {
      std::string::size_type v24 = *(unsigned __int8 *)(a4 + 23);
    }
    else {
      std::string::size_type v24 = *(void *)(a4 + 8);
    }
    std::string::append(__p, v23, v24);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)__str);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    {
      int v17 = (void *)__p[0].__r_.__value_.__r.__words[0];
      goto LABEL_34;
    }
  }
  else
  {
    int v25 = 1;
    uint64_t v26 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/text_format.cc";
    int v27 = 334;
    memset(&v28, 0, sizeof(v28));
    std::string::append(&v28, "Warning parsing text-format ");
    uint64_t v10 = *(void *)(a1[27] + 8);
    int v11 = *(char *)(v10 + 23);
    if (v11 >= 0) {
      unint64_t v12 = *(const std::string::value_type **)(a1[27] + 8);
    }
    else {
      unint64_t v12 = *(const std::string::value_type **)v10;
    }
    if (v11 >= 0) {
      std::string::size_type v13 = *(unsigned __int8 *)(v10 + 23);
    }
    else {
      std::string::size_type v13 = *(void *)(v10 + 8);
    }
    std::string::append(&v28, v12, v13);
    std::string::append(&v28, ": ");
    snprintf(__str, 0x80uLL, "%d", a2 + 1);
    char v33 = 0;
    std::string::append(&v28, __str);
    std::string::append(&v28, ":");
    snprintf(__str, 0x80uLL, "%d", a3 + 1);
    char v33 = 0;
    std::string::append(&v28, __str);
    std::string::append(&v28, ": ");
    int v14 = *(char *)(a4 + 23);
    if (v14 >= 0) {
      BOOL v15 = (const std::string::value_type *)a4;
    }
    else {
      BOOL v15 = *(const std::string::value_type **)a4;
    }
    if (v14 >= 0) {
      std::string::size_type v16 = *(unsigned __int8 *)(a4 + 23);
    }
    else {
      std::string::size_type v16 = *(void *)(a4 + 8);
    }
    std::string::append(&v28, v15, v16);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v25);
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
    {
      int v17 = (void *)v28.__r_.__value_.__r.__words[0];
LABEL_34:
      operator delete(v17);
    }
  }
}

void sub_18920225C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeField(google::protobuf::TextFormat::Parser::ParserImpl *this, google::protobuf::Message *a2)
{
  uint64_t v194 = *MEMORY[0x1E4F143B8];
  (*(void (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  uint64_t v5 = v4;
  uint64_t v6 = (*(uint64_t (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  memset(&v187, 0, sizeof(v187));
  uint64_t v7 = *((void *)this + 9);
  v185 = 0;
  unsigned int v186 = 0;
  if (google::protobuf::internal::GetAnyFieldDescriptors(a2, (const google::protobuf::Message *)&v186, &v185, v8))
  {
    std::string::basic_string[abi:ne180100]<0>(&v192, "[");
    int v9 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v192);
    int v10 = v9;
    if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v192.__r_.__value_.__l.__data_);
      if (v10)
      {
LABEL_4:
        memset(&__p, 0, sizeof(__p));
        memset(&v183, 0, sizeof(v183));
        if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &v183)) {
          goto LABEL_62;
        }
        while (1)
        {
          std::string::basic_string[abi:ne180100]<0>(&v192, ".");
          int v11 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v192);
          if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v192.__r_.__value_.__l.__data_);
          }
          if (!v11) {
            break;
          }
          memset(&v192, 0, sizeof(v192));
          char v12 = google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &v192);
          if (v12)
          {
            std::operator+<char>();
            std::string::size_type v13 = (v191.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                ? &v191
                : (std::string *)v191.__r_.__value_.__r.__words[0];
            std::string::size_type v14 = (v191.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                ? HIBYTE(v191.__r_.__value_.__r.__words[2])
                : v191.__r_.__value_.__l.__size_;
            std::string::append(&v183, (const std::string::value_type *)v13, v14);
            if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v191.__r_.__value_.__l.__data_);
            }
          }
          if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v192.__r_.__value_.__l.__data_);
            if ((v12 & 1) == 0) {
              goto LABEL_62;
            }
          }
          else if ((v12 & 1) == 0)
          {
            goto LABEL_62;
          }
        }
        std::string::basic_string[abi:ne180100]<0>(&v192, "/");
        char v32 = google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)&v192);
        if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v192.__r_.__value_.__l.__data_);
        }
        if ((v32 & 1) == 0) {
          goto LABEL_62;
        }
        std::string::append(&v183, "/");
        if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFullTypeName((uint64_t)this, &__p) & 1) == 0) {
          goto LABEL_62;
        }
        std::string::basic_string[abi:ne180100]<0>(&v192, "]");
        char v33 = google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)&v192);
        if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v192.__r_.__value_.__l.__data_);
        }
        if (v33)
        {
          std::string::basic_string[abi:ne180100]<0>(&v192, ":");
          google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v192);
          if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v192.__r_.__value_.__l.__data_);
          }
          uint64_t v34 = *((void *)this + 1);
          if (v34) {
            uint64_t AnyType = (*(uint64_t (**)(uint64_t, google::protobuf::Message *, std::string *, std::string *))(*(void *)v34 + 32))(v34, a2, &v183, &__p);
          }
          else {
          if (AnyType)
          {
            v192.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_1ED515480;
            v192.__r_.__value_.__l.__size_ = 0;
            v192.__r_.__value_.__s.__data_[16] = 0;
            operator new();
          }
          std::operator+<char>();
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::__split_buffer<std::string>::pointer p_p = &__p;
          }
          else {
            std::__split_buffer<std::string>::pointer p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type size = __p.__r_.__value_.__l.__size_;
          }
          unsigned int v150 = std::string::append(&v190, (const std::string::value_type *)p_p, size);
          long long v151 = *(_OWORD *)&v150->__r_.__value_.__l.__data_;
          v191.__r_.__value_.__r.__words[2] = v150->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v191.__r_.__value_.__l.__data_ = v151;
          v150->__r_.__value_.__l.__size_ = 0;
          v150->__r_.__value_.__r.__words[2] = 0;
          v150->__r_.__value_.__r.__words[0] = 0;
          unsigned int v152 = std::string::append(&v191, "\" stored in google.protobuf.Any.");
          long long v153 = *(_OWORD *)&v152->__r_.__value_.__l.__data_;
          v192.__r_.__value_.__r.__words[2] = v152->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v192.__r_.__value_.__l.__data_ = v153;
          v152->__r_.__value_.__l.__size_ = 0;
          v152->__r_.__value_.__r.__words[2] = 0;
          v152->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)&v192);
          if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v192.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v191.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v190.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v190.__r_.__value_.__l.__data_);
          }
          uint64_t v36 = 0;
        }
        else
        {
LABEL_62:
          uint64_t v36 = 0;
        }
        if (SHIBYTE(v183.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v183.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        goto LABEL_291;
      }
    }
    else if (v9)
    {
      goto LABEL_4;
    }
  }
  std::string::basic_string[abi:ne180100]<0>(&v192, "[");
  int v15 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v192);
  int v16 = v15;
  if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v192.__r_.__value_.__l.__data_);
    if (v16) {
      goto LABEL_25;
    }
  }
  else if (v15)
  {
LABEL_25:
    if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFullTypeName((uint64_t)this, &v187) & 1) == 0) {
      goto LABEL_290;
    }
    std::string::basic_string[abi:ne180100]<0>(&v192, "]");
    char v17 = google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)&v192);
    char v18 = v17;
    if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v192.__r_.__value_.__l.__data_);
      if ((v18 & 1) == 0) {
        goto LABEL_290;
      }
    }
    else if ((v17 & 1) == 0)
    {
      goto LABEL_290;
    }
    uint64_t v30 = *((void *)this + 1);
    if (v30)
    {
      uint64_t ExtensionByPrintableName = (*(uint64_t (**)(uint64_t, google::protobuf::Message *, std::string *))(*(void *)v30 + 16))(v30, a2, &v187);
    }
    else
    {
      uint64_t v37 = (*(uint64_t (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2);
      uint64_t ExtensionByPrintableName = google::protobuf::DescriptorPool::FindExtensionByPrintableName(*(void *)(*(void *)(v37 + 16) + 16), v37, (uint64_t *)&v187);
    }
    unint64_t FieldByName = ExtensionByPrintableName;
    if (!ExtensionByPrintableName)
    {
      if (*((unsigned char *)this + 229) || *((unsigned char *)this + 230))
      {
        std::operator+<char>();
        uint64_t v38 = std::string::append(&v189, "\" which is not defined or is not an extension of \"");
        long long v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
        v190.__r_.__value_.__r.__words[2] = v38->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v190.__r_.__value_.__l.__data_ = v39;
        v38->__r_.__value_.__l.__size_ = 0;
        v38->__r_.__value_.__r.__words[2] = 0;
        v38->__r_.__value_.__r.__words[0] = 0;
        uint64_t v40 = *(void *)(v6 + 8);
        int v41 = *(char *)(v40 + 23);
        if (v41 >= 0) {
          uint64_t v42 = *(const std::string::value_type **)(v6 + 8);
        }
        else {
          uint64_t v42 = *(const std::string::value_type **)v40;
        }
        if (v41 >= 0) {
          std::string::size_type v43 = *(unsigned __int8 *)(v40 + 23);
        }
        else {
          std::string::size_type v43 = *(void *)(v40 + 8);
        }
        uint64_t v44 = std::string::append(&v190, v42, v43);
        long long v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
        v191.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v191.__r_.__value_.__l.__data_ = v45;
        v44->__r_.__value_.__l.__size_ = 0;
        v44->__r_.__value_.__r.__words[2] = 0;
        v44->__r_.__value_.__r.__words[0] = 0;
        int v46 = std::string::append(&v191, "\".");
        long long v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
        v192.__r_.__value_.__r.__words[2] = v46->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v192.__r_.__value_.__l.__data_ = v47;
        v46->__r_.__value_.__l.__size_ = 0;
        v46->__r_.__value_.__r.__words[2] = 0;
        v46->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::TextFormat::Parser::ParserImpl::ReportWarning((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)&v192);
LABEL_161:
        if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v192.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v191.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v190.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v190.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v189.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v189.__r_.__value_.__l.__data_);
        }
        BOOL v28 = 0;
        goto LABEL_256;
      }
      std::operator+<char>();
      int v137 = std::string::append(&v189, "\" is not defined or is not an extension of \"");
      long long v138 = *(_OWORD *)&v137->__r_.__value_.__l.__data_;
      v190.__r_.__value_.__r.__words[2] = v137->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v190.__r_.__value_.__l.__data_ = v138;
      v137->__r_.__value_.__l.__size_ = 0;
      v137->__r_.__value_.__r.__words[2] = 0;
      v137->__r_.__value_.__r.__words[0] = 0;
      uint64_t v139 = *(void *)(v6 + 8);
      int v140 = *(char *)(v139 + 23);
      if (v140 >= 0) {
        char v141 = *(const std::string::value_type **)(v6 + 8);
      }
      else {
        char v141 = *(const std::string::value_type **)v139;
      }
      if (v140 >= 0) {
        std::string::size_type v142 = *(unsigned __int8 *)(v139 + 23);
      }
      else {
        std::string::size_type v142 = *(void *)(v139 + 8);
      }
      std::string v143 = std::string::append(&v190, v141, v142);
      long long v144 = *(_OWORD *)&v143->__r_.__value_.__l.__data_;
      v191.__r_.__value_.__r.__words[2] = v143->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v191.__r_.__value_.__l.__data_ = v144;
      v143->__r_.__value_.__l.__size_ = 0;
      v143->__r_.__value_.__r.__words[2] = 0;
      v143->__r_.__value_.__r.__words[0] = 0;
      unsigned __int8 v145 = std::string::append(&v191, "\".");
      long long v146 = *(_OWORD *)&v145->__r_.__value_.__l.__data_;
      v192.__r_.__value_.__r.__words[2] = v145->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v192.__r_.__value_.__l.__data_ = v146;
      v145->__r_.__value_.__l.__size_ = 0;
      v145->__r_.__value_.__r.__words[2] = 0;
      v145->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)&v192);
LABEL_281:
      if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v192.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v191.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v190.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v190.__r_.__value_.__l.__data_);
      }
      if ((SHIBYTE(v189.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_290;
      }
      std::string::size_type v89 = (void *)v189.__r_.__value_.__r.__words[0];
      goto LABEL_289;
    }
    goto LABEL_171;
  }
  if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &v187)) {
    goto LABEL_290;
  }
  LODWORD(__p.__r_.__value_.__l.__data_) = 0;
  if (*((unsigned char *)this + 232) && google::protobuf::safe_strto32((uint64_t)&v187, (int *)&__p))
  {
    uint64_t v20 = *(unsigned int *)(v6 + 124);
    if ((int)v20 < 1)
    {
LABEL_38:
      uint64_t v22 = *(unsigned int *)(v6 + 132);
      if ((int)v22 >= 1)
      {
        char v23 = (_DWORD *)(*(void *)(v6 + 88) + 4);
        while (*(v23 - 1) > SLODWORD(__p.__r_.__value_.__l.__data_) || *v23 <= SLODWORD(__p.__r_.__value_.__l.__data_))
        {
          v23 += 2;
          if (!--v22) {
            goto LABEL_43;
          }
        }
        BOOL v28 = 1;
LABEL_256:
        if (!*((unsigned char *)this + 229) && !v28 && *((unsigned char *)this + 230) == 0)
        {
          LODWORD(v192.__r_.__value_.__l.__data_) = 3;
          v192.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/lib"
                                                                   "protobuf/src/google/protobuf/text_format.cc";
          LODWORD(v192.__r_.__value_.__r.__words[2]) = 516;
          memset(v193, 0, 24);
          std::string::append(v193, "CHECK failed: allow_unknown_field_ || allow_unknown_extension_ || reserved_field: ");
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v192);
          if (SHIBYTE(v193[0].__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v193[0].__r_.__value_.__l.__data_);
          }
        }
        std::string::basic_string[abi:ne180100]<0>(&v192, ":");
        if (google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v192))
        {
          std::string::basic_string[abi:ne180100]<0>(&v191, "{");
          if (AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)&v191))
          {
            int v135 = 0;
          }
          else
          {
            std::string::basic_string[abi:ne180100]<0>(&v190, "<");
            int v135 = AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)&v190) ^ 1;
            if (SHIBYTE(v190.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v190.__r_.__value_.__l.__data_);
            }
          }
          if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v191.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          int v135 = 0;
        }
        if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v192.__r_.__value_.__l.__data_);
          if (v135) {
            goto LABEL_270;
          }
        }
        else if (v135)
        {
LABEL_270:
          uint64_t v136 = google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldValue(this, v133, v134);
LABEL_273:
          uint64_t v36 = v136;
          goto LABEL_291;
        }
        uint64_t v136 = google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldMessage(this, v133, v134);
        goto LABEL_273;
      }
LABEL_43:
      uint64_t FieldByNumber = google::protobuf::Descriptor::FindFieldByNumber((google::protobuf::Descriptor *)v6, (int)__p.__r_.__value_.__l.__data_);
    }
    else
    {
      std::string::size_type v21 = (_DWORD *)(*(void *)(v6 + 72) + 4);
      while (*(v21 - 1) > SLODWORD(__p.__r_.__value_.__l.__data_) || *v21 <= SLODWORD(__p.__r_.__value_.__l.__data_))
      {
        v21 += 4;
        if (!--v20) {
          goto LABEL_38;
        }
      }
      uint64_t v61 = *((void *)this + 1);
      if (v61) {
        uint64_t FieldByNumber = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v61 + 24))(v61, v6);
      }
      else {
        uint64_t FieldByNumber = google::protobuf::DescriptorPool::FindExtensionByNumber(*(std::mutex ***)(*(void *)(v6 + 16) + 16), (const google::protobuf::Descriptor *)v6, LODWORD(__p.__r_.__value_.__l.__data_));
      }
    }
    unint64_t FieldByName = FieldByNumber;
    BOOL v28 = 0;
  }
  else
  {
    unint64_t FieldByName = google::protobuf::Descriptor::FindFieldByName(v6, (uint64_t *)&v187, v19);
    if (FieldByName) {
      goto LABEL_95;
    }
    if (SHIBYTE(v187.__r_.__value_.__r.__words[2]) < 0) {
      std::string::__init_copy_ctor_external(&v192, v187.__r_.__value_.__l.__data_, v187.__r_.__value_.__l.__size_);
    }
    else {
      std::string v192 = v187;
    }
    uint64_t v48 = (std::string *)((char *)&v192 + HIBYTE(v192.__r_.__value_.__r.__words[2]));
    if ((v192.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    {
      long long v49 = &v192;
    }
    else
    {
      uint64_t v48 = (std::string *)(v192.__r_.__value_.__r.__words[0] + v192.__r_.__value_.__l.__size_);
      long long v49 = (std::string *)v192.__r_.__value_.__r.__words[0];
    }
    while (v49 != v48)
    {
      int v50 = v49->__r_.__value_.__s.__data_[0];
      if ((v50 - 65) <= 0x19) {
        v49->__r_.__value_.__s.__data_[0] = v50 + 32;
      }
      long long v49 = (std::string *)((char *)v49 + 1);
    }
    uint64_t v51 = google::protobuf::Descriptor::FindFieldByName(v6, (uint64_t *)&v192, v29);
    unint64_t FieldByName = v51;
    if (v51)
    {
      size_t v53 = *(std::once_flag::_State_type **)(v51 + 48);
      if (v53)
      {
        v189.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        v188.__r_.__value_.__r.__words[0] = FieldByName;
        if (atomic_load_explicit((atomic_ullong *volatile)v53, memory_order_acquire) != -1)
        {
          v191.__r_.__value_.__r.__words[0] = (std::string::size_type)&v189;
          v191.__r_.__value_.__l.__size_ = (std::string::size_type)&v188;
          v190.__r_.__value_.__r.__words[0] = (std::string::size_type)&v191;
          std::__call_once(v53, &v190, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if (*(_DWORD *)(FieldByName + 56) != 10) {
        unint64_t FieldByName = 0;
      }
    }
    if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v192.__r_.__value_.__l.__data_);
    }
    if (FieldByName)
    {
LABEL_95:
      uint64_t v54 = *(std::once_flag::_State_type **)(FieldByName + 48);
      if (v54)
      {
        v190.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        v189.__r_.__value_.__r.__words[0] = FieldByName;
        if (atomic_load_explicit((atomic_ullong *volatile)v54, memory_order_acquire) != -1)
        {
          v192.__r_.__value_.__r.__words[0] = (std::string::size_type)&v190;
          v192.__r_.__value_.__l.__size_ = (std::string::size_type)&v189;
          v191.__r_.__value_.__r.__words[0] = (std::string::size_type)&v192;
          std::__call_once(v54, &v191, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if (*(_DWORD *)(FieldByName + 56) != 10) {
        goto LABEL_171;
      }
      uint64_t v55 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)FieldByName);
      uint64_t v56 = *(const void ***)v55;
      uint64_t v57 = *(unsigned __int8 *)(*(void *)v55 + 23);
      unint64_t v52 = *(const char **)(*(void *)v55 + 8);
      if ((v57 & 0x80u) == 0) {
        uint64_t v58 = *(unsigned __int8 *)(*(void *)v55 + 23);
      }
      else {
        uint64_t v58 = *(void *)(*(void *)v55 + 8);
      }
      std::string::size_type v59 = HIBYTE(v187.__r_.__value_.__r.__words[2]);
      if ((v187.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type v59 = v187.__r_.__value_.__l.__size_;
      }
      if (v58 == v59)
      {
        if ((v187.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string v60 = &v187;
        }
        else {
          std::string v60 = (std::string *)v187.__r_.__value_.__r.__words[0];
        }
        if ((v57 & 0x80) != 0)
        {
          if (!memcmp(*v56, v60, (size_t)v52)) {
            goto LABEL_171;
          }
        }
        else
        {
          if (!*(unsigned char *)(*(void *)v55 + 23)) {
            goto LABEL_171;
          }
          while (*(unsigned __int8 *)v56 == v60->__r_.__value_.__s.__data_[0])
          {
            uint64_t v56 = (const void **)((char *)v56 + 1);
            std::string v60 = (std::string *)((char *)v60 + 1);
            if (!--v57) {
              goto LABEL_171;
            }
          }
        }
      }
    }
    if (*((unsigned char *)this + 228))
    {
      if (SHIBYTE(v187.__r_.__value_.__r.__words[2]) < 0) {
        std::string::__init_copy_ctor_external(&v192, v187.__r_.__value_.__l.__data_, v187.__r_.__value_.__l.__size_);
      }
      else {
        std::string v192 = v187;
      }
      long long v62 = (std::string *)((char *)&v192 + HIBYTE(v192.__r_.__value_.__r.__words[2]));
      if ((v192.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      {
        uint64_t v63 = &v192;
      }
      else
      {
        long long v62 = (std::string *)(v192.__r_.__value_.__r.__words[0] + v192.__r_.__value_.__l.__size_);
        uint64_t v63 = (std::string *)v192.__r_.__value_.__r.__words[0];
      }
      while (v63 != v62)
      {
        int v64 = v63->__r_.__value_.__s.__data_[0];
        if ((v64 - 65) <= 0x19) {
          v63->__r_.__value_.__s.__data_[0] = v64 + 32;
        }
        uint64_t v63 = (std::string *)((char *)v63 + 1);
      }
      unint64_t FieldByName = google::protobuf::Descriptor::FindFieldByLowercaseName(v6, (uint64_t *)&v192, v52);
      if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v192.__r_.__value_.__l.__data_);
      }
      if (FieldByName) {
        goto LABEL_171;
      }
    }
    unint64_t v65 = *(unsigned int *)(v6 + 136);
    if ((int)v65 < 1)
    {
      BOOL v28 = 0;
      unint64_t FieldByName = 0;
    }
    else
    {
      uint64_t v182 = v5;
      uint64_t v66 = 0;
      uint64_t v67 = *(void *)(v6 + 96);
      uint64_t v68 = HIBYTE(v187.__r_.__value_.__r.__words[2]);
      long long v69 = *(_OWORD *)&v187.__r_.__value_.__l.__data_;
      if ((v187.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v70 = HIBYTE(v187.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v70 = v187.__r_.__value_.__l.__size_;
      }
      BOOL v28 = 1;
      do
      {
        uint64_t v71 = *(unsigned __int8 ***)(v67 + 8 * v66);
        __int16 v72 = (unsigned __int8 *)*((unsigned __int8 *)v71 + 23);
        int v73 = (char)v72;
        if ((char)v72 < 0) {
          __int16 v72 = v71[1];
        }
        if ((unsigned __int8 *)v70 == v72)
        {
          if (v73 >= 0) {
            uint64_t v74 = *(unsigned __int8 **)(v67 + 8 * v66);
          }
          else {
            uint64_t v74 = *v71;
          }
          if ((v68 & 0x80) != 0)
          {
            unint64_t v180 = v65;
            uint64_t v181 = v6;
            std::string::size_type v77 = v70;
            int v78 = memcmp((const void *)v69, v74, *((size_t *)&v69 + 1));
            std::string::size_type v70 = v77;
            unint64_t v65 = v180;
            uint64_t v6 = v181;
            if (!v78) {
              break;
            }
          }
          else
          {
            if (!v68) {
              break;
            }
            int v75 = &v187;
            uint64_t v76 = v68;
            while (v75->__r_.__value_.__s.__data_[0] == *v74)
            {
              int v75 = (std::string *)((char *)v75 + 1);
              ++v74;
              if (!--v76) {
                goto LABEL_149;
              }
            }
          }
        }
        BOOL v28 = ++v66 < v65;
      }
      while (v66 != v65);
LABEL_149:
      unint64_t FieldByName = 0;
      uint64_t v5 = v182;
    }
  }
  if (!v28 && !FieldByName)
  {
    if (*((unsigned char *)this + 229))
    {
      std::operator+<char>();
      uint64_t v79 = std::string::append(&v189, "\" has no field named \"");
      long long v80 = *(_OWORD *)&v79->__r_.__value_.__l.__data_;
      v190.__r_.__value_.__r.__words[2] = v79->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v190.__r_.__value_.__l.__data_ = v80;
      v79->__r_.__value_.__l.__size_ = 0;
      v79->__r_.__value_.__r.__words[2] = 0;
      v79->__r_.__value_.__r.__words[0] = 0;
      if ((v187.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        long long v81 = &v187;
      }
      else {
        long long v81 = (std::string *)v187.__r_.__value_.__r.__words[0];
      }
      if ((v187.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v82 = HIBYTE(v187.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v82 = v187.__r_.__value_.__l.__size_;
      }
      unsigned int v83 = std::string::append(&v190, (const std::string::value_type *)v81, v82);
      long long v84 = *(_OWORD *)&v83->__r_.__value_.__l.__data_;
      v191.__r_.__value_.__r.__words[2] = v83->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v191.__r_.__value_.__l.__data_ = v84;
      v83->__r_.__value_.__l.__size_ = 0;
      v83->__r_.__value_.__r.__words[2] = 0;
      v83->__r_.__value_.__r.__words[0] = 0;
      std::string::size_type v85 = std::string::append(&v191, "\".");
      long long v86 = *(_OWORD *)&v85->__r_.__value_.__l.__data_;
      v192.__r_.__value_.__r.__words[2] = v85->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v192.__r_.__value_.__l.__data_ = v86;
      v85->__r_.__value_.__l.__size_ = 0;
      v85->__r_.__value_.__r.__words[2] = 0;
      v85->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::TextFormat::Parser::ParserImpl::ReportWarning((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)&v192);
      goto LABEL_161;
    }
    std::operator+<char>();
    long long v125 = std::string::append(&v189, "\" has no field named \"");
    long long v126 = *(_OWORD *)&v125->__r_.__value_.__l.__data_;
    v190.__r_.__value_.__r.__words[2] = v125->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v190.__r_.__value_.__l.__data_ = v126;
    v125->__r_.__value_.__l.__size_ = 0;
    v125->__r_.__value_.__r.__words[2] = 0;
    v125->__r_.__value_.__r.__words[0] = 0;
    if ((v187.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string v127 = &v187;
    }
    else {
      std::string v127 = (std::string *)v187.__r_.__value_.__r.__words[0];
    }
    if ((v187.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v128 = HIBYTE(v187.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v128 = v187.__r_.__value_.__l.__size_;
    }
    long long v129 = std::string::append(&v190, (const std::string::value_type *)v127, v128);
    long long v130 = *(_OWORD *)&v129->__r_.__value_.__l.__data_;
    v191.__r_.__value_.__r.__words[2] = v129->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v191.__r_.__value_.__l.__data_ = v130;
    v129->__r_.__value_.__l.__size_ = 0;
    v129->__r_.__value_.__r.__words[2] = 0;
    v129->__r_.__value_.__r.__words[0] = 0;
    std::string v131 = std::string::append(&v191, "\".");
    long long v132 = *(_OWORD *)&v131->__r_.__value_.__l.__data_;
    v192.__r_.__value_.__r.__words[2] = v131->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v192.__r_.__value_.__l.__data_ = v132;
    v131->__r_.__value_.__l.__size_ = 0;
    v131->__r_.__value_.__r.__words[2] = 0;
    v131->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)&v192);
    goto LABEL_281;
  }
  if (!FieldByName) {
    goto LABEL_256;
  }
LABEL_171:
  if (*((_DWORD *)this + 56) == 1)
  {
    if (*(_DWORD *)(FieldByName + 60) != 3
      && google::protobuf::Reflection::HasField(v5, a2, (const google::protobuf::FieldDescriptor *)FieldByName, v25, v26))
    {
      std::operator+<char>();
      uint64_t v87 = std::string::append(&v191, "\" is specified multiple times.");
      long long v88 = *(_OWORD *)&v87->__r_.__value_.__l.__data_;
      v192.__r_.__value_.__r.__words[2] = v87->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v192.__r_.__value_.__l.__data_ = v88;
      v87->__r_.__value_.__l.__size_ = 0;
      v87->__r_.__value_.__r.__words[2] = 0;
      v87->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)&v192);
      if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v192.__r_.__value_.__l.__data_);
      }
      if ((SHIBYTE(v191.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_290;
      }
      std::string::size_type v89 = (void *)v191.__r_.__value_.__r.__words[0];
      goto LABEL_289;
    }
    std::string::size_type v90 = *(const std::string::value_type ***)(FieldByName + 88);
    if (v90
      && google::protobuf::Reflection::HasOneof((uint64_t)v5, a2, *(void *)(FieldByName + 88), v25, v26))
    {
      OneofFieldDescriptor = (const std::string::value_type ***)google::protobuf::Reflection::GetOneofFieldDescriptor((uint64_t)v5, a2, (uint64_t)v90, v91, v92);
      std::operator+<char>();
      int v94 = std::string::append(&__p, "\" is specified along with field \"");
      long long v95 = *(_OWORD *)&v94->__r_.__value_.__l.__data_;
      v188.__r_.__value_.__r.__words[2] = v94->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v188.__r_.__value_.__l.__data_ = v95;
      v94->__r_.__value_.__l.__size_ = 0;
      v94->__r_.__value_.__r.__words[2] = 0;
      v94->__r_.__value_.__r.__words[0] = 0;
      int v96 = *((char *)*OneofFieldDescriptor + 23);
      if (v96 >= 0) {
        int v97 = (const std::string::value_type *)*OneofFieldDescriptor;
      }
      else {
        int v97 = **OneofFieldDescriptor;
      }
      if (v96 >= 0) {
        std::string::size_type v98 = *((unsigned __int8 *)*OneofFieldDescriptor + 23);
      }
      else {
        std::string::size_type v98 = (std::string::size_type)(*OneofFieldDescriptor)[1];
      }
      int v99 = std::string::append(&v188, v97, v98);
      long long v100 = *(_OWORD *)&v99->__r_.__value_.__l.__data_;
      v189.__r_.__value_.__r.__words[2] = v99->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v189.__r_.__value_.__l.__data_ = v100;
      v99->__r_.__value_.__l.__size_ = 0;
      v99->__r_.__value_.__r.__words[2] = 0;
      v99->__r_.__value_.__r.__words[0] = 0;
      long long v101 = std::string::append(&v189, "\", another member of oneof \"");
      long long v102 = *(_OWORD *)&v101->__r_.__value_.__l.__data_;
      v190.__r_.__value_.__r.__words[2] = v101->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v190.__r_.__value_.__l.__data_ = v102;
      v101->__r_.__value_.__l.__size_ = 0;
      v101->__r_.__value_.__r.__words[2] = 0;
      v101->__r_.__value_.__r.__words[0] = 0;
      int v103 = (*v90)[23];
      if (v103 >= 0) {
        std::string::size_type v104 = *v90;
      }
      else {
        std::string::size_type v104 = *(const std::string::value_type **)*v90;
      }
      if (v103 >= 0) {
        std::string::size_type v105 = *((unsigned __int8 *)*v90 + 23);
      }
      else {
        std::string::size_type v105 = *((void *)*v90 + 1);
      }
      long long v106 = std::string::append(&v190, v104, v105);
      long long v107 = *(_OWORD *)&v106->__r_.__value_.__l.__data_;
      v191.__r_.__value_.__r.__words[2] = v106->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v191.__r_.__value_.__l.__data_ = v107;
      v106->__r_.__value_.__l.__size_ = 0;
      v106->__r_.__value_.__r.__words[2] = 0;
      v106->__r_.__value_.__r.__words[0] = 0;
      long long v108 = std::string::append(&v191, "\".");
      long long v109 = *(_OWORD *)&v108->__r_.__value_.__l.__data_;
      v192.__r_.__value_.__r.__words[2] = v108->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v192.__r_.__value_.__l.__data_ = v109;
      v108->__r_.__value_.__l.__size_ = 0;
      v108->__r_.__value_.__r.__words[2] = 0;
      v108->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)&v192);
      if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v192.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v191.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v190.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v190.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v189.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v189.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v188.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v188.__r_.__value_.__l.__data_);
      }
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_290;
      }
      std::string::size_type v89 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_289:
      operator delete(v89);
      goto LABEL_290;
    }
  }
  uint64_t v110 = *(std::once_flag::_State_type **)(FieldByName + 48);
  if (v110)
  {
    v190.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v189.__r_.__value_.__r.__words[0] = FieldByName;
    if (atomic_load_explicit((atomic_ullong *volatile)v110, memory_order_acquire) != -1)
    {
      v192.__r_.__value_.__r.__words[0] = (std::string::size_type)&v190;
      v192.__r_.__value_.__l.__size_ = (std::string::size_type)&v189;
      v191.__r_.__value_.__r.__words[0] = (std::string::size_type)&v192;
      std::__call_once(v110, &v191, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*(_DWORD *)(FieldByName + 56) & 0xFFFFFFFE) != 0xA)
  {
    std::string::basic_string[abi:ne180100]<0>(&v192, ":");
    char v118 = google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)&v192);
    if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v192.__r_.__value_.__l.__data_);
    }
    if ((v118 & 1) == 0) {
      goto LABEL_290;
    }
LABEL_219:
    if (*(_DWORD *)(FieldByName + 60) == 3)
    {
      std::string::basic_string[abi:ne180100]<0>(&v192, "[");
      int v119 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v192);
      if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v192.__r_.__value_.__l.__data_);
      }
      if (v119)
      {
        std::string::basic_string[abi:ne180100]<0>(&v192, "]");
        char v120 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v192);
        if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v192.__r_.__value_.__l.__data_);
        }
        if ((v120 & 1) == 0)
        {
          while (1)
          {
            long long v121 = *(std::once_flag::_State_type **)(FieldByName + 48);
            if (v121)
            {
              v190.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
              v189.__r_.__value_.__r.__words[0] = FieldByName;
              if (atomic_load_explicit((atomic_ullong *volatile)v121, memory_order_acquire) != -1)
              {
                v192.__r_.__value_.__r.__words[0] = (std::string::size_type)&v190;
                v192.__r_.__value_.__l.__size_ = (std::string::size_type)&v189;
                v191.__r_.__value_.__r.__words[0] = (std::string::size_type)&v192;
                std::__call_once(v121, &v191, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
              }
            }
            if ((*(_DWORD *)(FieldByName + 56) & 0xFFFFFFFE) == 0xA)
            {
              if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldMessage(this, a2, v5, (std::once_flag::_State_type **)FieldByName) & 1) == 0)goto LABEL_290; {
            }
              }
            else if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldValue(this, a2, v5, (const google::protobuf::FieldDescriptor *)FieldByName))
            {
              goto LABEL_290;
            }
            std::string::basic_string[abi:ne180100]<0>(&v192, "]");
            char v122 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v192);
            if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v192.__r_.__value_.__l.__data_);
            }
            if (v122) {
              break;
            }
            std::string::basic_string[abi:ne180100]<0>(&v192, ",");
            char v123 = google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)&v192);
            if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v192.__r_.__value_.__l.__data_);
            }
            uint64_t v36 = 0;
            if ((v123 & 1) == 0) {
              goto LABEL_291;
            }
          }
        }
        goto LABEL_315;
      }
    }
    long long v124 = *(std::once_flag::_State_type **)(FieldByName + 48);
    if (v124)
    {
      v190.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v189.__r_.__value_.__r.__words[0] = FieldByName;
      if (atomic_load_explicit((atomic_ullong *volatile)v124, memory_order_acquire) != -1)
      {
        v192.__r_.__value_.__r.__words[0] = (std::string::size_type)&v190;
        v192.__r_.__value_.__l.__size_ = (std::string::size_type)&v189;
        v191.__r_.__value_.__r.__words[0] = (std::string::size_type)&v192;
        std::__call_once(v124, &v191, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    if ((*(_DWORD *)(FieldByName + 56) & 0xFFFFFFFE) == 0xA)
    {
      if (google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldMessage(this, a2, v5, (std::once_flag::_State_type **)FieldByName))goto LABEL_315; {
    }
      }
    else if (google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldValue(this, a2, v5, (const google::protobuf::FieldDescriptor *)FieldByName))
    {
      goto LABEL_315;
    }
LABEL_290:
    uint64_t v36 = 0;
    goto LABEL_291;
  }
  std::string::basic_string[abi:ne180100]<0>(&v192, ":");
  int v113 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v192);
  if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v192.__r_.__value_.__l.__data_);
  }
  if (!v113 || !*(unsigned char *)(*(void *)(FieldByName + 120) + 79) || *((_DWORD *)this + 10) != 5) {
    goto LABEL_219;
  }
  memset(&v192, 0, sizeof(v192));
  BOOL v115 = google::protobuf::TextFormat::Parser::ParserImpl::ConsumeString((uint64_t)this, &v192, v111, v112);
  if (v115)
  {
    uint64_t v116 = *((void *)this + 1);
    if (v116) {
      std::string::size_type v117 = (google::protobuf::MessageFactory *)(*(uint64_t (**)(uint64_t, unint64_t))(*(void *)v116 + 40))(v116, FieldByName);
    }
    else {
      std::string::size_type v117 = 0;
    }
    uint64_t v154 = (google::protobuf::MessageLite *)google::protobuf::Reflection::MutableMessage(v5, a2, (const google::protobuf::FieldDescriptor *)FieldByName, v117, v114);
    google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,std::string>(v154, (uint64_t *)&v192);
  }
  if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v192.__r_.__value_.__l.__data_);
  }
  if (!v115) {
    goto LABEL_290;
  }
LABEL_315:
  std::string::basic_string[abi:ne180100]<0>(&v192, ";");
  uint64_t v155 = v7;
  if ((google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v192) & 1) == 0)
  {
    std::string::basic_string[abi:ne180100]<0>(&v191, ",");
    google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v191);
    if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v191.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v192.__r_.__value_.__l.__data_);
  }
  if (*(unsigned char *)(*(void *)(FieldByName + 120) + 78))
  {
    std::operator+<char>();
    int v156 = std::string::append(&v191, "\"");
    long long v157 = *(_OWORD *)&v156->__r_.__value_.__l.__data_;
    v192.__r_.__value_.__r.__words[2] = v156->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v192.__r_.__value_.__l.__data_ = v157;
    v156->__r_.__value_.__l.__size_ = 0;
    v156->__r_.__value_.__r.__words[2] = 0;
    v156->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::TextFormat::Parser::ParserImpl::ReportWarning((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)&v192);
    if (SHIBYTE(v192.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v192.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v191.__r_.__value_.__l.__data_);
    }
  }
  unsigned __int8 v158 = (uint64_t **)*((void *)this + 2);
  if (v158)
  {
    v160 = v158 + 1;
    int v159 = v158[1];
    if (v159)
    {
      while (1)
      {
        while (1)
        {
          unsigned int v161 = (uint64_t **)v159;
          unint64_t v162 = v159[4];
          if (v162 <= FieldByName) {
            break;
          }
          int v159 = *v161;
          v160 = v161;
          if (!*v161) {
            goto LABEL_334;
          }
        }
        if (v162 >= FieldByName) {
          break;
        }
        int v159 = v161[1];
        if (!v159)
        {
          v160 = v161 + 1;
          goto LABEL_334;
        }
      }
      unsigned int v163 = (uint64_t *)v161;
    }
    else
    {
      unsigned int v161 = v158 + 1;
LABEL_334:
      unsigned int v163 = (uint64_t *)operator new(0x40uLL);
      v163[4] = FieldByName;
      v163[5] = 0;
      v163[6] = 0;
      v163[7] = 0;
      *unsigned int v163 = 0;
      v163[1] = 0;
      v163[2] = (uint64_t)v161;
      _DWORD *v160 = v163;
      unsigned int v164 = (uint64_t *)**v158;
      uint64_t v165 = v163;
      if (v164)
      {
        std::once_flag::_State_type *v158 = v164;
        uint64_t v165 = *v160;
      }
      std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(v158[1], v165);
      v158[2] = (uint64_t *)((char *)v158[2] + 1);
    }
    unsigned __int8 v167 = (void *)v163[6];
    unint64_t v166 = v163[7];
    if ((unint64_t)v167 >= v166)
    {
      uint64_t v169 = v163[5];
      uint64_t v170 = ((uint64_t)v167 - v169) >> 3;
      if ((unint64_t)(v170 + 1) >> 61) {
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v171 = v166 - v169;
      uint64_t v172 = v171 >> 2;
      if (v171 >> 2 <= (unint64_t)(v170 + 1)) {
        uint64_t v172 = v170 + 1;
      }
      if ((unint64_t)v171 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v173 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v173 = v172;
      }
      if (v173)
      {
        if (v173 >> 61) {
          std::__throw_bad_array_new_length[abi:ne180100]();
        }
        unsigned int v174 = (char *)operator new(8 * v173);
      }
      else
      {
        unsigned int v174 = 0;
      }
      v175 = &v174[8 * v170];
      uint64_t v176 = &v174[8 * v173];
      *(void *)v175 = v155;
      int v168 = v175 + 8;
      uint64_t v178 = (char *)v163[5];
      unsigned int v177 = (char *)v163[6];
      if (v177 != v178)
      {
        do
        {
          uint64_t v179 = *((void *)v177 - 1);
          v177 -= 8;
          *((void *)v175 - 1) = v179;
          v175 -= 8;
        }
        while (v177 != v178);
        unsigned int v177 = (char *)v163[5];
      }
      v163[5] = (uint64_t)v175;
      v163[6] = (uint64_t)v168;
      v163[7] = (uint64_t)v176;
      if (v177) {
        operator delete(v177);
      }
    }
    else
    {
      void *v167 = v155;
      int v168 = v167 + 1;
    }
    v163[6] = (uint64_t)v168;
  }
  uint64_t v36 = 1;
LABEL_291:
  if (SHIBYTE(v187.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v187.__r_.__value_.__l.__data_);
  }
  return v36;
}

void sub_189203C0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,uint64_t a51,void *__p,uint64_t a53,int a54,__int16 a55,char a56,char a57)
{
  if (a57 < 0) {
    operator delete(__p);
  }
  if (a50 < 0) {
    operator delete(a45);
  }
  if (*(char *)(v58 - 217) < 0) {
    operator delete(*(void **)(v58 - 240));
  }
  if (v57) {
    (*(void (**)(uint64_t))(*(void *)v57 + 8))(v57);
  }
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)(v58 - 208));
  if (a24 < 0) {
    operator delete(a19);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  if (a36 < 0) {
    operator delete(a31);
  }
  if (a44 < 0) {
    operator delete(a39);
  }
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::TryConsume(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 71);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = *(unsigned __int8 *)(a1 + 71);
  }
  else {
    uint64_t v3 = *(void *)(a1 + 56);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 0;
  }
  uint64_t v7 = (const void **)(a1 + 48);
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0)
  {
    if (!memcmp(*v7, a2, *(void *)(a1 + 56))) {
      goto LABEL_16;
    }
    return 0;
  }
  if (*(unsigned char *)(a1 + 71))
  {
    while (*(unsigned __int8 *)v7 == *a2)
    {
      uint64_t v7 = (const void **)((char *)v7 + 1);
      ++a2;
      if (!--v2) {
        goto LABEL_16;
      }
    }
    return 0;
  }
LABEL_16:
  google::protobuf::io::Tokenizer::Next((google::protobuf::io::Tokenizer *)(a1 + 40));
  return 1;
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::Consume(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3 = (const void **)(a1 + 48);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 71);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = *(unsigned __int8 *)(a1 + 71);
  }
  else {
    uint64_t v5 = *(void *)(a1 + 56);
  }
  uint64_t v6 = a2[23];
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *((void *)a2 + 1);
  }
  if (v5 == v6)
  {
    if (v7 < 0) {
      a2 = *(unsigned __int8 **)a2;
    }
    if ((v4 & 0x80) == 0)
    {
      if (*(unsigned char *)(a1 + 71))
      {
        uint64_t v8 = (unsigned __int8 *)(a1 + 48);
        while (*v8 == *a2)
        {
          ++v8;
          ++a2;
          if (!--v4) {
            goto LABEL_31;
          }
        }
        goto LABEL_16;
      }
LABEL_31:
      google::protobuf::io::Tokenizer::Next((google::protobuf::io::Tokenizer *)(a1 + 40));
      return 1;
    }
    if (!memcmp(*v3, a2, *(void *)(a1 + 56))) {
      goto LABEL_31;
    }
  }
LABEL_16:
  std::operator+<char>();
  int v9 = std::string::append(&v19, "\", found \"");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v20.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v20.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  int v11 = *(char *)(a1 + 71);
  if (v11 >= 0) {
    char v12 = (const std::string::value_type *)v3;
  }
  else {
    char v12 = *(const std::string::value_type **)(a1 + 48);
  }
  if (v11 >= 0) {
    std::string::size_type v13 = *(unsigned __int8 *)(a1 + 71);
  }
  else {
    std::string::size_type v13 = *(void *)(a1 + 56);
  }
  std::string::size_type v14 = std::string::append(&v20, v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  int v16 = std::string::append(&v21, "\".");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  std::string::size_type v23 = v16->__r_.__value_.__r.__words[2];
  long long v22 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (uint64_t)&v22);
  if (SHIBYTE(v23) < 0) {
    operator delete((void *)v22);
  }
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_189204260(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (*(char *)(v28 - 41) < 0) {
    operator delete(*(void **)(v28 - 64));
  }
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFullTypeName(uint64_t a1, std::string *a2)
{
  uint64_t result = google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier(a1, a2);
  if (result)
  {
    while (1)
    {
      std::string::basic_string[abi:ne180100]<0>(&__p, ".");
      int v5 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume(a1, (unsigned __int8 *)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (!v5) {
        break;
      }
      memset(&__p, 0, sizeof(__p));
      char v6 = google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier(a1, &__p);
      if (v6)
      {
        std::string::append(a2, ".");
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::__split_buffer<std::string>::pointer p_p = &__p;
        }
        else {
          std::__split_buffer<std::string>::pointer p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type size = __p.__r_.__value_.__l.__size_;
        }
        std::string::append(a2, (const std::string::value_type *)p_p, size);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__p.__r_.__value_.__l.__data_);
        if ((v6 & 1) == 0) {
          return v5 ^ 1u;
        }
      }
      else if ((v6 & 1) == 0)
      {
        return v5 ^ 1u;
      }
    }
    return v5 ^ 1u;
  }
  return result;
}

void sub_1892043AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier(uint64_t a1, std::string *this)
{
  uint64_t v4 = (google::protobuf::io::Tokenizer *)(a1 + 40);
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2) {
    goto LABEL_5;
  }
  if (*(unsigned char *)(a1 + 232) || *(unsigned char *)(a1 + 229))
  {
    if (v3 == 3)
    {
LABEL_5:
      std::string::operator=(this, (const std::string *)(a1 + 48));
      google::protobuf::io::Tokenizer::Next(v4);
      return 1;
    }
  }
  else if (v3 == 3 && *(unsigned char *)(a1 + 230) != 0)
  {
    goto LABEL_5;
  }
  std::operator+<char>();
  google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  return 0;
}

void sub_189204484(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldValue(google::protobuf::TextFormat::Parser::ParserImpl *this, uint64_t a2, char *a3)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  int v4 = *((_DWORD *)this + 60);
  *((_DWORD *)this + 60) = v4 - 1;
  if (v4 <= 0)
  {
    v32.__r_.__value_.__r.__words[0] = (std::string::size_type)"Message is too deep, the parser exceeded the configured r"
                                                               "ecursion limit of ";
    v32.__r_.__value_.__l.__size_ = 75;
    unint64_t v6 = *((unsigned int *)this + 59);
    __p[0] = &v30;
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = v31;
      char v30 = 45;
      unint64_t v6 = -(int)v6;
    }
    else
    {
      int v7 = &v30;
    }
    __p[1] = (void *)(google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)v6, v7, a3) - &v30);
    v28[0] = ".";
    v28[1] = 1;
    google::protobuf::StrCat((uint64_t)&v32, (uint64_t)__p, (uint64_t)v28, &v27);
    google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)&v27);
    if ((SHIBYTE(v27.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return 0;
    }
    long long v17 = (void *)v27.__r_.__value_.__r.__words[0];
LABEL_30:
    operator delete(v17);
    return 0;
  }
  int v5 = (_DWORD *)((char *)this + 40);
  if (*((_DWORD *)this + 10) == 5)
  {
    do
      google::protobuf::io::Tokenizer::Next((google::protobuf::TextFormat::Parser::ParserImpl *)((char *)this + 40));
    while (*v5 == 5);
    goto LABEL_37;
  }
  std::string::basic_string[abi:ne180100]<0>(&v32, "[");
  int v8 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v32);
  int v9 = v8;
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v32.__r_.__value_.__l.__data_);
    if (!v9) {
      goto LABEL_33;
    }
    while (1)
    {
LABEL_9:
      std::string::basic_string[abi:ne180100]<0>(&v32, "{");
      if (AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)&v32))
      {
        int v12 = 0;
      }
      else
      {
        std::string::basic_string[abi:ne180100]<0>(__p, "<");
        int v13 = AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)__p);
        if ((v31[6] & 0x80000000) != 0) {
          operator delete(__p[0]);
        }
        int v12 = v13 ^ 1;
      }
      if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v32.__r_.__value_.__l.__data_);
        if (v12)
        {
LABEL_16:
          if ((google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldValue(this) & 1) == 0) {
            return 0;
          }
          goto LABEL_20;
        }
      }
      else if (v12)
      {
        goto LABEL_16;
      }
      uint64_t result = google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldMessage(this, v10, v11);
      if (!result) {
        return result;
      }
LABEL_20:
      std::string::basic_string[abi:ne180100]<0>(&v32, "]");
      char v15 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v32);
      if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v32.__r_.__value_.__l.__data_);
      }
      if (v15) {
        goto LABEL_37;
      }
      std::string::basic_string[abi:ne180100]<0>(&v32, ",");
      char v16 = google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)&v32);
      if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v32.__r_.__value_.__l.__data_);
      }
      if ((v16 & 1) == 0) {
        return 0;
      }
    }
  }
  if (v8) {
    goto LABEL_9;
  }
LABEL_33:
  std::string::basic_string[abi:ne180100]<0>(&v32, "-");
  int v18 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v32);
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v32.__r_.__value_.__l.__data_);
  }
  if ((*v5 - 3) < 2) {
    goto LABEL_36;
  }
  if (*v5 != 2)
  {
    if (*((char *)this + 71) < 0) {
      std::string::__init_copy_ctor_external(&v32, *((const std::string::value_type **)this + 6), *((void *)this + 7));
    }
    else {
      std::string v32 = *(std::string *)((unsigned char *)this + 2);
    }
LABEL_46:
    std::operator+<char>();
    google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)__p);
    if ((v31[6] & 0x80000000) != 0) {
      operator delete(__p[0]);
    }
    ++*((_DWORD *)this + 60);
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return 0;
    }
    long long v17 = (void *)v32.__r_.__value_.__r.__words[0];
    goto LABEL_30;
  }
  if (v18)
  {
    if (*((char *)this + 71) < 0) {
      std::string::__init_copy_ctor_external(&v32, *((const std::string::value_type **)this + 6), *((void *)this + 7));
    }
    else {
      std::string v32 = *(std::string *)((unsigned char *)this + 2);
    }
    int v19 = HIBYTE(v32.__r_.__value_.__r.__words[2]);
    std::string v20 = (std::string *)v32.__r_.__value_.__r.__words[0];
    if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string v21 = (std::string *)((char *)&v32 + HIBYTE(v32.__r_.__value_.__r.__words[2]));
    }
    else {
      std::string v21 = (std::string *)(v32.__r_.__value_.__r.__words[0] + v32.__r_.__value_.__l.__size_);
    }
    if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string v20 = &v32;
    }
    if (v20 != v21)
    {
      do
      {
        int v22 = v20->__r_.__value_.__s.__data_[0];
        if ((v22 - 65) <= 0x19) {
          v20->__r_.__value_.__s.__data_[0] = v22 + 32;
        }
        std::string v20 = (std::string *)((char *)v20 + 1);
      }
      while (v20 != v21);
      int v19 = HIBYTE(v32.__r_.__value_.__r.__words[2]);
    }
    if ((v19 & 0x80) != 0)
    {
      if (v32.__r_.__value_.__l.__size_ == 3)
      {
        std::string::size_type v23 = (std::string *)v32.__r_.__value_.__r.__words[0];
LABEL_66:
        int data_low = LOWORD(v23->__r_.__value_.__l.__data_);
        int v25 = v23->__r_.__value_.__s.__data_[2];
        if (data_low == 28265 && v25 == 102)
        {
LABEL_72:
          if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v32.__r_.__value_.__l.__data_);
          }
          goto LABEL_36;
        }
      }
    }
    else if (v19 == 3)
    {
      std::string::size_type v23 = &v32;
      goto LABEL_66;
    }
    if (!std::operator!=[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&v32, "infinity")
      || !std::operator!=[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&v32, "nan"))
    {
      goto LABEL_72;
    }
    goto LABEL_46;
  }
LABEL_36:
  google::protobuf::io::Tokenizer::Next((google::protobuf::TextFormat::Parser::ParserImpl *)((char *)this + 40));
LABEL_37:
  ++*((_DWORD *)this + 60);
  return 1;
}

void sub_18920491C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v27 - 89) < 0) {
    operator delete(*(void **)(v27 - 112));
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldMessage(google::protobuf::TextFormat::Parser::ParserImpl *this, uint64_t a2, char *a3)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  int v4 = *((_DWORD *)this + 60);
  *((_DWORD *)this + 60) = v4 - 1;
  if (v4 <= 0)
  {
    v25.__r_.__value_.__r.__words[0] = (std::string::size_type)"Message is too deep, the parser exceeded the configured r"
                                                               "ecursion limit of ";
    v25.__r_.__value_.__l.__size_ = 75;
    unint64_t v15 = *((unsigned int *)this + 59);
    __p[0] = &v23;
    if ((v15 & 0x80000000) != 0)
    {
      char v16 = v24;
      char v23 = 45;
      unint64_t v15 = -(int)v15;
    }
    else
    {
      char v16 = &v23;
    }
    __p[1] = (void *)(google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)v15, v16, a3) - &v23);
    v20[0] = ".";
    v20[1] = (void *)1;
    google::protobuf::StrCat((uint64_t)&v25, (uint64_t)__p, (uint64_t)v20, &v19);
    google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)&v19);
    if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v19.__r_.__value_.__l.__data_);
    }
    return 0;
  }
  memset(&v19, 0, sizeof(v19));
  if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeMessageDelimiter((uint64_t)this, (uint64_t)&v19))goto LABEL_63; {
  while (1)
  }
  {
    std::string::basic_string[abi:ne180100]<0>(&v25, ">");
    if (AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)&v25))
    {
      int v5 = 0;
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "}");
      int v6 = AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)__p);
      if ((v24[6] & 0x80000000) != 0) {
        operator delete(__p[0]);
      }
      int v5 = v6 ^ 1;
    }
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v25.__r_.__value_.__l.__data_);
    }
    if (!v5) {
      break;
    }
    std::string::basic_string[abi:ne180100]<0>(&v25, "[");
    int v7 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v25);
    int v8 = v7;
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v25.__r_.__value_.__l.__data_);
      if (v8)
      {
LABEL_13:
        memset(&v25, 0, sizeof(v25));
        if (google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &v25))
        {
          do
          {
            std::string::basic_string[abi:ne180100]<0>(__p, ".");
            if (google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)__p))
            {
              int v9 = 1;
            }
            else
            {
              std::string::basic_string[abi:ne180100]<0>(v20, "/");
              int v9 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)v20);
              if (v21 < 0) {
                operator delete(v20[0]);
              }
            }
            if ((v24[6] & 0x80000000) != 0) {
              operator delete(__p[0]);
            }
          }
          while (v9
               && (google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &v25) & 1) != 0);
          char v10 = v9 ^ 1;
        }
        else
        {
          char v10 = 0;
        }
        if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v25.__r_.__value_.__l.__data_);
        }
        if ((v10 & 1) == 0) {
          goto LABEL_63;
        }
        std::string::basic_string[abi:ne180100]<0>(&v25, "]");
        char v12 = google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)&v25);
        if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v25.__r_.__value_.__l.__data_);
        }
        if ((v12 & 1) == 0) {
          goto LABEL_63;
        }
        goto LABEL_35;
      }
    }
    else if (v7)
    {
      goto LABEL_13;
    }
    memset(&v25, 0, sizeof(v25));
    int v11 = google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &v25);
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v25.__r_.__value_.__l.__data_);
    }
    if (!v11) {
      goto LABEL_63;
    }
LABEL_35:
    std::string::basic_string[abi:ne180100]<0>(&v25, ":");
    if (google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v25))
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "{");
      if (AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)__p))
      {
        int v13 = 0;
      }
      else
      {
        std::string::basic_string[abi:ne180100]<0>(v20, "<");
        int v14 = AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)v20);
        if (v21 < 0) {
          operator delete(v20[0]);
        }
        int v13 = v14 ^ 1;
      }
      if ((v24[6] & 0x80000000) != 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
      int v13 = 0;
    }
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v25.__r_.__value_.__l.__data_);
      if (v13)
      {
LABEL_46:
        if ((google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldValue(this) & 1) == 0) {
          goto LABEL_63;
        }
        goto LABEL_50;
      }
    }
    else if (v13)
    {
      goto LABEL_46;
    }
    if (!google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldMessage(this)) {
      goto LABEL_63;
    }
LABEL_50:
    std::string::basic_string[abi:ne180100]<0>(&v25, ";");
    if ((google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v25) & 1) == 0)
    {
      std::string::basic_string[abi:ne180100]<0>(__p, ",");
      google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)__p);
      if ((v24[6] & 0x80000000) != 0) {
        operator delete(__p[0]);
      }
    }
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v25.__r_.__value_.__l.__data_);
    }
  }
  if (!google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)&v19))
  {
LABEL_63:
    uint64_t v17 = 0;
    goto LABEL_64;
  }
  ++*((_DWORD *)this + 60);
  uint64_t v17 = 1;
LABEL_64:
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  return v17;
}

void sub_189204E00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::TextFormat::Parser::ParserImpl::ConsumeString(uint64_t a1, std::string *this, uint64_t a3, unsigned int *a4)
{
  int v5 = (google::protobuf::io::Tokenizer *)(a1 + 40);
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6 == 5)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
    {
      *this->__r_.__value_.__l.__data_ = 0;
      this->__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      this->__r_.__value_.__s.__data_[0] = 0;
      *((unsigned char *)&this->__r_.__value_.__s + 23) = 0;
    }
    if (*(_DWORD *)v5 == 5)
    {
      int v8 = (unsigned __int8 *)(a1 + 48);
      do
      {
        google::protobuf::io::Tokenizer::ParseStringAppend(v8, this, a3, a4);
        google::protobuf::io::Tokenizer::Next(v5);
      }
      while (*(_DWORD *)v5 == 5);
    }
  }
  else
  {
    std::operator+<char>();
    google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (uint64_t)&__p);
    if (v11 < 0) {
      operator delete(__p);
    }
  }
  return v6 == 5;
}

void sub_189204F80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldMessage(google::protobuf::TextFormat::Parser::ParserImpl *this, google::protobuf::Message *a2, google::protobuf::_anonymous_namespace_ **a3, std::once_flag::_State_type **a4)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  int v5 = *((_DWORD *)this + 60);
  *((_DWORD *)this + 60) = v5 - 1;
  if (v5 > 0)
  {
    uint64_t v9 = *((void *)this + 2);
    if (v9)
    {
      char v11 = (uint64_t **)(v9 + 32);
      char v10 = *(uint64_t **)(v9 + 32);
      if (v10)
      {
        do
        {
          while (1)
          {
            char v12 = (uint64_t **)v10;
            unint64_t v13 = v10[4];
            if (v13 <= (unint64_t)a4) {
              break;
            }
            char v10 = *v12;
            char v11 = v12;
            if (!*v12) {
              goto LABEL_13;
            }
          }
          if (v13 >= (unint64_t)a4) {
            goto LABEL_16;
          }
          char v10 = v12[1];
        }
        while (v10);
        char v11 = v12 + 1;
      }
      else
      {
        char v12 = (uint64_t **)(v9 + 32);
      }
LABEL_13:
      char v16 = (uint64_t *)operator new(0x40uLL);
      v16[4] = (uint64_t)a4;
      v16[5] = 0;
      v16[6] = 0;
      void v16[7] = 0;
      *char v16 = 0;
      v16[1] = 0;
      void v16[2] = (uint64_t)v12;
      *char v11 = v16;
      uint64_t v17 = **(void **)(v9 + 24);
      int v18 = v16;
      if (v17)
      {
        *(void *)(v9 + 24) = v17;
        int v18 = *v11;
      }
      std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(v9 + 32), v18);
      ++*(void *)(v9 + 40);
LABEL_16:
      operator new();
    }
    memset(v35, 0, 24);
    if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeMessageDelimiter((uint64_t)this, (uint64_t)v35) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v21 = *((void *)this + 1);
    if (v21) {
      int v22 = (google::protobuf::MessageFactory *)(*(uint64_t (**)(uint64_t, std::once_flag::_State_type **))(*(void *)v21 + 40))(v21, a4);
    }
    else {
      int v22 = 0;
    }
    if (*((_DWORD *)a4 + 15) == 3)
    {
      char v23 = (google::protobuf::Message *)google::protobuf::Reflection::AddMessage(a3, a2, a4, v22, v20);
      if (SHIBYTE(v35[0].__r_.__value_.__r.__words[2]) < 0) {
        std::string::__init_copy_ctor_external(&v29, v35[0].__r_.__value_.__l.__data_, v35[0].__r_.__value_.__l.__size_);
      }
      else {
        std::string v29 = v35[0];
      }
      char v25 = google::protobuf::TextFormat::Parser::ParserImpl::ConsumeMessage(this, v23, (unsigned __int8 *)&v29);
      if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v26 = (void *)v29.__r_.__value_.__r.__words[0];
        goto LABEL_38;
      }
    }
    else
    {
      std::string::size_type v24 = (google::protobuf::Message *)google::protobuf::Reflection::MutableMessage(a3, a2, (const google::protobuf::FieldDescriptor *)a4, v22, v20);
      if (SHIBYTE(v35[0].__r_.__value_.__r.__words[2]) < 0) {
        std::string::__init_copy_ctor_external(&v28, v35[0].__r_.__value_.__l.__data_, v35[0].__r_.__value_.__l.__size_);
      }
      else {
        std::string v28 = v35[0];
      }
      char v25 = google::protobuf::TextFormat::Parser::ParserImpl::ConsumeMessage(this, v24, (unsigned __int8 *)&v28);
      if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v26 = (void *)v28.__r_.__value_.__r.__words[0];
LABEL_38:
        operator delete(v26);
        if ((v25 & 1) == 0) {
          goto LABEL_39;
        }
        goto LABEL_36;
      }
    }
    if ((v25 & 1) == 0)
    {
LABEL_39:
      uint64_t v19 = 0;
LABEL_40:
      if (SHIBYTE(v35[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v35[0].__r_.__value_.__l.__data_);
      }
      return v19;
    }
LABEL_36:
    ++*((_DWORD *)this + 60);
    *((void *)this + 2) = 0;
    uint64_t v19 = 1;
    goto LABEL_40;
  }
  v35[0].__r_.__value_.__r.__words[0] = (std::string::size_type)"Message is too deep, the parser exceeded the configured "
                                                                "recursion limit of ";
  v35[0].__r_.__value_.__l.__size_ = 75;
  unint64_t v14 = *((unsigned int *)this + 59);
  v32[0] = &v33;
  if ((v14 & 0x80000000) != 0)
  {
    unint64_t v15 = v34;
    char v33 = 45;
    unint64_t v14 = -(int)v14;
  }
  else
  {
    unint64_t v15 = &v33;
  }
  v32[1] = google::protobuf::FastUInt32ToBufferLeft((google::protobuf *)v14, v15, (char *)a3) - &v33;
  v31[0] = ".";
  v31[1] = 1;
  google::protobuf::StrCat((uint64_t)v35, (uint64_t)v32, (uint64_t)v31, &__p);
  google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_1892053D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v28 - 113) < 0) {
    operator delete(*(void **)(v28 - 136));
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldValue(google::protobuf::TextFormat::Parser::ParserImpl *this, google::protobuf::Message *a2, google::protobuf::_anonymous_namespace_ **a3, const google::protobuf::FieldDescriptor *a4)
{
  int v4 = (const std::string::value_type ***)a4;
  uint64_t v76 = *MEMORY[0x1E4F143B8];
  int v8 = (std::once_flag::_State_type *)*((void *)a4 + 6);
  if (v8)
  {
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v69.__r_.__value_.__r.__words[0] = (std::string::size_type)a4;
    if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
    {
      v74.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
      v74.__r_.__value_.__l.__size_ = (std::string::size_type)&v69;
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v74;
      std::__call_once(v8, &__p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  switch(*((_DWORD *)v4 + 14))
  {
    case 1:
      v74.__r_.__value_.__r.__words[0] = 0;
      if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeDouble(this, (double *)&v74)) {
        goto LABEL_165;
      }
      if (*((_DWORD *)v4 + 15) == 3) {
        google::protobuf::Reflection::AddDouble(a3, a2, (const google::protobuf::FieldDescriptor *)v4, *(double *)&v74.__r_.__value_.__l.__data_, v10, v11);
      }
      else {
        google::protobuf::Reflection::SetDouble(a3, a2, (const google::protobuf::FieldDescriptor *)v4, *(double *)&v74.__r_.__value_.__l.__data_, v10, v11);
      }
      goto LABEL_164;
    case 2:
      v74.__r_.__value_.__r.__words[0] = 0;
      if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeDouble(this, (double *)&v74)) {
        goto LABEL_165;
      }
      if (*(double *)&v74.__r_.__value_.__l.__data_ <= 3.40282347e38)
      {
        if (*(double *)&v74.__r_.__value_.__l.__data_ >= -3.40282347e38)
        {
          float v34 = *(double *)&v74.__r_.__value_.__l.__data_;
          goto LABEL_116;
        }
        if (*(double *)&v74.__r_.__value_.__l.__data_ >= -3.40282357e38) {
          int v20 = -8388609;
        }
        else {
          int v20 = -8388608;
        }
      }
      else if (*(double *)&v74.__r_.__value_.__l.__data_ <= 3.40282357e38)
      {
        int v20 = 2139095039;
      }
      else
      {
        int v20 = 2139095040;
      }
      float v34 = *(float *)&v20;
LABEL_116:
      if (*((_DWORD *)v4 + 15) == 3) {
        google::protobuf::Reflection::AddFloat(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v34, v18, v19);
      }
      else {
        google::protobuf::Reflection::SetFloat(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v34, v18, v19);
      }
      goto LABEL_164;
    case 3:
    case 0x10:
    case 0x12:
      v74.__r_.__value_.__r.__words[0] = 0;
      if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeSignedInteger(this, (uint64_t *)&v74, 0x7FFFFFFFFFFFFFFFLL))goto LABEL_165; {
      if (*((_DWORD *)v4 + 15) == 3)
      }
        google::protobuf::Reflection::AddInt64(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (uint64_t)v74.__r_.__value_.__l.__data_, v13);
      else {
        google::protobuf::Reflection::SetInt64(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (uint64_t)v74.__r_.__value_.__l.__data_, v13);
      }
      goto LABEL_164;
    case 4:
    case 6:
      v74.__r_.__value_.__r.__words[0] = 0;
      if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeUnsignedInteger(this, (unint64_t *)&v74, 0xFFFFFFFFFFFFFFFFLL))goto LABEL_165; {
      if (*((_DWORD *)v4 + 15) == 3)
      }
        google::protobuf::Reflection::AddUInt64(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (uint64_t)v74.__r_.__value_.__l.__data_, v14);
      else {
        google::protobuf::Reflection::SetUInt64(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (uint64_t)v74.__r_.__value_.__l.__data_, v14);
      }
      goto LABEL_164;
    case 5:
    case 0xF:
    case 0x11:
      v74.__r_.__value_.__r.__words[0] = 0;
      if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeSignedInteger(this, (uint64_t *)&v74, 0x7FFFFFFFLL))goto LABEL_165; {
      if (*((_DWORD *)v4 + 15) == 3)
      }
        google::protobuf::Reflection::AddInt32(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (int)v74.__r_.__value_.__l.__data_, v9);
      else {
        google::protobuf::Reflection::SetInt32(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (int)v74.__r_.__value_.__l.__data_, v9);
      }
      goto LABEL_164;
    case 7:
    case 0xD:
      v74.__r_.__value_.__r.__words[0] = 0;
      if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeUnsignedInteger(this, (unint64_t *)&v74, 0xFFFFFFFFuLL))goto LABEL_165; {
      if (*((_DWORD *)v4 + 15) == 3)
      }
        google::protobuf::Reflection::AddUInt32(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (int)v74.__r_.__value_.__l.__data_, v12);
      else {
        google::protobuf::Reflection::SetUInt32(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (int)v74.__r_.__value_.__l.__data_, v12);
      }
      goto LABEL_164;
    case 8:
      if (*((_DWORD *)this + 10) == 3)
      {
        v74.__r_.__value_.__r.__words[0] = 0;
        if (!google::protobuf::TextFormat::Parser::ParserImpl::ConsumeUnsignedInteger(this, (unint64_t *)&v74, 1uLL))goto LABEL_165; {
        if (*((_DWORD *)v4 + 15) == 3)
        }
          google::protobuf::Reflection::AddBool(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v74.__r_.__value_.__r.__words[0] != 0, v21);
        else {
          google::protobuf::Reflection::SetBool(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v74.__r_.__value_.__r.__words[0] != 0, v21);
        }
        goto LABEL_164;
      }
      memset(&v74, 0, sizeof(v74));
      if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &v74) & 1) == 0) {
        goto LABEL_160;
      }
      if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
      {
        if (v74.__r_.__value_.__l.__size_ != 4) {
          goto LABEL_79;
        }
        char v25 = (std::string *)v74.__r_.__value_.__r.__words[0];
      }
      else
      {
        if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) != 4) {
          goto LABEL_79;
        }
        char v25 = &v74;
      }
      if (LODWORD(v25->__r_.__value_.__l.__data_) == 1702195828)
      {
LABEL_81:
        int v37 = *((_DWORD *)v4 + 15);
        char v38 = 1;
LABEL_82:
        if (v37 == 3) {
          google::protobuf::Reflection::AddBool(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v38, v24);
        }
        else {
          google::protobuf::Reflection::SetBool(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v38, v24);
        }
        char v39 = 1;
        goto LABEL_161;
      }
LABEL_79:
      if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&v74, "True")
        || std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&v74, "t"))
      {
        goto LABEL_81;
      }
      if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&v74, "false")
        || std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&v74, "False")
        || std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&v74, "f"))
      {
        char v38 = 0;
        int v37 = *((_DWORD *)v4 + 15);
        goto LABEL_82;
      }
      std::operator+<char>();
      uint64_t v58 = std::string::append(&v68, "\". Value: \"");
      long long v59 = *(_OWORD *)&v58->__r_.__value_.__l.__data_;
      v69.__r_.__value_.__r.__words[2] = v58->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v69.__r_.__value_.__l.__data_ = v59;
      v58->__r_.__value_.__l.__size_ = 0;
      v58->__r_.__value_.__r.__words[2] = 0;
      v58->__r_.__value_.__r.__words[0] = 0;
      if ((v74.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string v60 = &v74;
      }
      else {
        std::string v60 = (std::string *)v74.__r_.__value_.__r.__words[0];
      }
      if ((v74.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v74.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v74.__r_.__value_.__l.__size_;
      }
      long long v62 = std::string::append(&v69, (const std::string::value_type *)v60, size);
      long long v63 = *(_OWORD *)&v62->__r_.__value_.__l.__data_;
      __dst.__r_.__value_.__r.__words[2] = v62->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v63;
      v62->__r_.__value_.__l.__size_ = 0;
      v62->__r_.__value_.__r.__words[2] = 0;
      v62->__r_.__value_.__r.__words[0] = 0;
      int v64 = std::string::append(&__dst, "\".");
      long long v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
      __p.__r_.__value_.__r.__words[2] = v64->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v65;
      v64->__r_.__value_.__l.__size_ = 0;
      v64->__r_.__value_.__r.__words[2] = 0;
      v64->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v69.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v68.__r_.__value_.__l.__data_);
      }
LABEL_160:
      char v39 = 0;
LABEL_161:
      if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v74.__r_.__value_.__l.__data_);
      }
      if ((v39 & 1) == 0) {
        goto LABEL_165;
      }
      goto LABEL_164;
    case 9:
    case 0xC:
      memset(&v74, 0, sizeof(v74));
      BOOL v23 = google::protobuf::TextFormat::Parser::ParserImpl::ConsumeString((uint64_t)this, &v74, (uint64_t)a3, (unsigned int *)a4);
      if (!v23) {
        goto LABEL_90;
      }
      if (*((_DWORD *)v4 + 15) == 3)
      {
        if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0) {
          std::string::__init_copy_ctor_external(&v73, v74.__r_.__value_.__l.__data_, v74.__r_.__value_.__l.__size_);
        }
        else {
          std::string v73 = v74;
        }
        google::protobuf::Reflection::AddString((uint64_t)a3, (uint64_t)a2, (google::protobuf::FieldDescriptor *)v4, (uint64_t *)&v73, v22);
        if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v36 = &v73;
LABEL_89:
          operator delete(v36->__r_.__value_.__l.__data_);
        }
      }
      else
      {
        if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0) {
          std::string::__init_copy_ctor_external(&v72, v74.__r_.__value_.__l.__data_, v74.__r_.__value_.__l.__size_);
        }
        else {
          std::string v72 = v74;
        }
        google::protobuf::Reflection::SetString((uint64_t)a3, a2, (google::protobuf::FieldDescriptor *)v4, (uint64_t *)&v72, v22);
        if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v36 = &v72;
          goto LABEL_89;
        }
      }
LABEL_90:
      if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v74.__r_.__value_.__l.__data_);
        if (v23) {
          goto LABEL_164;
        }
      }
      else if (v23)
      {
        goto LABEL_164;
      }
LABEL_165:
      LOBYTE(v4) = 0;
      return v4 & 1;
    case 0xA:
    case 0xB:
      LODWORD(v74.__r_.__value_.__l.__data_) = 3;
      v74.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libproto"
                                                              "buf/src/google/protobuf/text_format.cc";
      LODWORD(v74.__r_.__value_.__r.__words[2]) = 834;
      memset(&v75, 0, sizeof(v75));
      std::string::append(&v75, "Reached an unintended state: CPPTYPE_MESSAGE");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v74);
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v75.__r_.__value_.__l.__data_);
      }
      goto LABEL_164;
    case 0xE:
      memset(&__p, 0, sizeof(__p));
      uint64_t v67 = 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v15 = google::protobuf::FieldDescriptor::enum_type((google::protobuf::FieldDescriptor *)v4);
      if (*((_DWORD *)this + 10) == 2)
      {
        if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &__p) & 1) == 0) {
          goto LABEL_134;
        }
        uint64_t ValueByName = google::protobuf::EnumDescriptor::FindValueByName(v15, (uint64_t *)&__p, v16);
        if (!ValueByName) {
          goto LABEL_99;
        }
      }
      else
      {
        std::string::basic_string[abi:ne180100]<0>(&v74, "-");
        if (AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)&v74))
        {
          if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v74.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          int v26 = *((_DWORD *)this + 10);
          if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v74.__r_.__value_.__l.__data_);
          }
          if (v26 != 3)
          {
            std::operator+<char>();
            google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)&v74);
            if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
            {
              std::string::size_type v35 = (void *)v74.__r_.__value_.__r.__words[0];
LABEL_133:
              operator delete(v35);
            }
LABEL_134:
            LOBYTE(v4) = 0;
LABEL_135:
            char v33 = 1;
            goto LABEL_136;
          }
        }
        if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeSignedInteger(this, &v67, 0x7FFFFFFFLL) & 1) == 0) {
          goto LABEL_134;
        }
        uint64_t v28 = v67;
        v74.__r_.__value_.__r.__words[0] = (std::string::size_type)&v74.__r_.__value_.__r.__words[2];
        std::string v29 = &v74.__r_.__value_.__s.__data_[16];
        uint64_t v30 = v67;
        if (v67 < 0)
        {
          std::string v29 = &v74.__r_.__value_.__s.__data_[17];
          v74.__r_.__value_.__s.__data_[16] = 45;
          uint64_t v30 = -v67;
        }
        v74.__r_.__value_.__l.__size_ = google::protobuf::FastUInt64ToBufferLeft((google::protobuf *)v30, v29, v27)
                                      - (unsigned char *)&v74.__r_.__value_.__r.__words[2];
        std::string::basic_string[abi:ne180100](&__dst, v74.__r_.__value_.__l.__data_, v74.__r_.__value_.__l.__size_);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        std::string __p = __dst;
        int v31 = (void *)(*(void *)(*(void *)(v15 + 16) + 144) + 192);
        v74.__r_.__value_.__r.__words[0] = v15;
        v74.__r_.__value_.__l.__size_ = v28;
        if (!ValueByName)
        {
          if (v28 != 0x7FFFFFFFFFFFFFFFLL && *(_DWORD *)(*((void *)*a3 + 2) + 60) == 3)
          {
            if (*((_DWORD *)v4 + 15) == 3) {
              google::protobuf::Reflection::AddEnumValue(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v28, v32);
            }
            else {
              google::protobuf::Reflection::SetEnumValue(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v28, v32);
            }
LABEL_145:
            LOBYTE(v4) = 1;
            goto LABEL_135;
          }
LABEL_99:
          if (*((unsigned char *)this + 231))
          {
            std::operator+<char>();
            uint64_t v40 = std::string::append(&v68, "\" for field \"");
            long long v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
            v69.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v69.__r_.__value_.__l.__data_ = v41;
            v40->__r_.__value_.__l.__size_ = 0;
            v40->__r_.__value_.__r.__words[2] = 0;
            v40->__r_.__value_.__r.__words[0] = 0;
            int v42 = *((char *)*v4 + 23);
            if (v42 >= 0) {
              std::string::size_type v43 = (const std::string::value_type *)*v4;
            }
            else {
              std::string::size_type v43 = **v4;
            }
            if (v42 >= 0) {
              std::string::size_type v44 = *((unsigned __int8 *)*v4 + 23);
            }
            else {
              std::string::size_type v44 = (std::string::size_type)(*v4)[1];
            }
            long long v45 = std::string::append(&v69, v43, v44);
            long long v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
            __dst.__r_.__value_.__r.__words[2] = v45->__r_.__value_.__r.__words[2];
            *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v46;
            v45->__r_.__value_.__l.__size_ = 0;
            v45->__r_.__value_.__r.__words[2] = 0;
            v45->__r_.__value_.__r.__words[0] = 0;
            long long v47 = std::string::append(&__dst, "\".");
            long long v48 = *(_OWORD *)&v47->__r_.__value_.__l.__data_;
            v74.__r_.__value_.__r.__words[2] = v47->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v74.__r_.__value_.__l.__data_ = v48;
            v47->__r_.__value_.__l.__size_ = 0;
            v47->__r_.__value_.__r.__words[2] = 0;
            v47->__r_.__value_.__r.__words[0] = 0;
            google::protobuf::TextFormat::Parser::ParserImpl::ReportWarning((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)&v74);
            if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v74.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__dst.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v69.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v68.__r_.__value_.__l.__data_);
            }
            goto LABEL_145;
          }
          std::operator+<char>();
          long long v49 = std::string::append(&v68, "\" for field \"");
          long long v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
          v69.__r_.__value_.__r.__words[2] = v49->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v69.__r_.__value_.__l.__data_ = v50;
          v49->__r_.__value_.__l.__size_ = 0;
          v49->__r_.__value_.__r.__words[2] = 0;
          v49->__r_.__value_.__r.__words[0] = 0;
          int v51 = *((char *)*v4 + 23);
          if (v51 >= 0) {
            unint64_t v52 = (const std::string::value_type *)*v4;
          }
          else {
            unint64_t v52 = **v4;
          }
          if (v51 >= 0) {
            std::string::size_type v53 = *((unsigned __int8 *)*v4 + 23);
          }
          else {
            std::string::size_type v53 = (std::string::size_type)(*v4)[1];
          }
          uint64_t v54 = std::string::append(&v69, v52, v53);
          long long v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
          __dst.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v55;
          v54->__r_.__value_.__l.__size_ = 0;
          v54->__r_.__value_.__r.__words[2] = 0;
          v54->__r_.__value_.__r.__words[0] = 0;
          uint64_t v56 = std::string::append(&__dst, "\".");
          long long v57 = *(_OWORD *)&v56->__r_.__value_.__l.__data_;
          v74.__r_.__value_.__r.__words[2] = v56->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v74.__r_.__value_.__l.__data_ = v57;
          v56->__r_.__value_.__l.__size_ = 0;
          v56->__r_.__value_.__r.__words[2] = 0;
          v56->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)&v74);
          if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v74.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__dst.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v69.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0)
          {
            std::string::size_type v35 = (void *)v68.__r_.__value_.__r.__words[0];
            goto LABEL_133;
          }
          goto LABEL_134;
        }
      }
      if (*((_DWORD *)v4 + 15) == 3) {
        google::protobuf::Reflection::AddEnum((uint64_t *)a3, a2, (google::protobuf::FieldDescriptor *)v4, ValueByName);
      }
      else {
        google::protobuf::Reflection::SetEnum((uint64_t *)a3, a2, (google::protobuf::FieldDescriptor *)v4, ValueByName);
      }
      char v33 = 0;
LABEL_136:
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if ((v33 & 1) == 0) {
LABEL_164:
      }
        LOBYTE(v4) = 1;
      return v4 & 1;
    default:
      goto LABEL_164;
  }
}

void sub_189205F50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (a35 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (*(char *)(v49 - 105) < 0) {
    operator delete(*(void **)(v49 - 128));
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeMessageDelimiter(uint64_t a1, uint64_t a2)
{
  std::string::basic_string[abi:ne180100]<0>(__p, "<");
  char v4 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume(a1, (unsigned __int8 *)__p);
  char v5 = v4;
  if (v11 < 0)
  {
    operator delete(__p[0]);
    if (v5) {
      goto LABEL_3;
    }
  }
  else if (v4)
  {
LABEL_3:
    int v6 = ">";
LABEL_8:
    MEMORY[0x18C11F1C0](a2, v6);
    return 1;
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "{");
  char v7 = google::protobuf::TextFormat::Parser::ParserImpl::Consume(a1, (unsigned __int8 *)__p);
  char v8 = v7;
  if (v11 < 0)
  {
    operator delete(__p[0]);
    if (v8) {
      goto LABEL_7;
    }
  }
  else if (v7)
  {
LABEL_7:
    int v6 = "}";
    goto LABEL_8;
  }
  return 0;
}

void sub_1892061C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeMessage(google::protobuf::TextFormat::Parser::ParserImpl *a1, google::protobuf::Message *a2, unsigned __int8 *a3)
{
  while (1)
  {
    std::string::basic_string[abi:ne180100]<0>(v11, ">");
    if (AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)a1, (unsigned __int8 *)v11))
    {
      int v6 = 0;
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "}");
      int v7 = AddrObjGoogle::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)a1, (unsigned __int8 *)__p);
      if (v10 < 0) {
        operator delete(__p[0]);
      }
      int v6 = v7 ^ 1;
    }
    if (v12 < 0) {
      operator delete(v11[0]);
    }
    if (!v6) {
      break;
    }
    if ((google::protobuf::TextFormat::Parser::ParserImpl::ConsumeField(a1, a2) & 1) == 0) {
      return 0;
    }
  }
  return google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)a1, a3);
}

void sub_1892062BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeSignedInteger(google::protobuf::TextFormat::Parser::ParserImpl *this, uint64_t *a2, uint64_t a3)
{
  std::string::basic_string[abi:ne180100]<0>(__p, "-");
  unsigned int v6 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)__p);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = 0;
  uint64_t result = google::protobuf::TextFormat::Parser::ParserImpl::ConsumeUnsignedInteger(this, (unint64_t *)__p, a3 + v6);
  if (result)
  {
    uint64_t v8 = (uint64_t)__p[0];
    if (v6) {
      uint64_t v8 = -(uint64_t)__p[0];
    }
    *a2 = v8;
  }
  return result;
}

void sub_189206368(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeUnsignedInteger(google::protobuf::TextFormat::Parser::ParserImpl *this, unint64_t *a2, unint64_t a3)
{
  char v4 = (google::protobuf::TextFormat::Parser::ParserImpl *)((char *)this + 40);
  if (*((_DWORD *)this + 10) == 3)
  {
    if (google::protobuf::io::Tokenizer::ParseInteger((unsigned __int8 *)this + 48, a3, a2))
    {
      google::protobuf::io::Tokenizer::Next(v4);
      return 1;
    }
    std::operator+<char>();
    int v7 = std::string::append(&v9, ")");
    long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
    std::string::size_type v11 = v7->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v8;
    v7->__r_.__value_.__l.__size_ = 0;
    v7->__r_.__value_.__r.__words[2] = 0;
    v7->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)__p);
    if (SHIBYTE(v11) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
    {
      unsigned int v6 = (void *)v9.__r_.__value_.__r.__words[0];
      goto LABEL_10;
    }
  }
  else
  {
    std::operator+<char>();
    google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)__p);
    if (SHIBYTE(v11) < 0)
    {
      unsigned int v6 = __p[0];
LABEL_10:
      operator delete(v6);
    }
  }
  return 0;
}

void sub_189206494(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Parser::ParserImpl::ConsumeDouble(google::protobuf::TextFormat::Parser::ParserImpl *this, double *a2)
{
  std::string::basic_string[abi:ne180100]<0>(&__p, "-");
  int v6 = google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v7 = *((_DWORD *)this + 10);
  if (v7 == 2)
  {
    if (*((char *)this + 71) < 0) {
      std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)this + 6), *((void *)this + 7));
    }
    else {
      std::string __p = *(std::string *)((unsigned char *)this + 2);
    }
    char v11 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    std::__split_buffer<std::string>::pointer p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    unint64_t v13 = (std::string *)((char *)&__p + HIBYTE(__p.__r_.__value_.__r.__words[2]));
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::__split_buffer<std::string>::pointer p_p = &__p;
    }
    else {
      unint64_t v13 = (std::string *)(__p.__r_.__value_.__r.__words[0] + __p.__r_.__value_.__l.__size_);
    }
    if (p_p != v13)
    {
      do
      {
        int v14 = p_p->__r_.__value_.__s.__data_[0];
        if ((v14 - 65) <= 0x19) {
          p_p->__r_.__value_.__s.__data_[0] = v14 + 32;
        }
        std::__split_buffer<std::string>::pointer p_p = (std::string *)((char *)p_p + 1);
      }
      while (p_p != v13);
      char v11 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    if (v11 < 0)
    {
      if (__p.__r_.__value_.__l.__size_ != 3)
      {
        if (__p.__r_.__value_.__l.__size_ != 8) {
          goto LABEL_61;
        }
        std::string::size_type v15 = *(void *)__p.__r_.__value_.__l.__data_;
        goto LABEL_43;
      }
      int v20 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if (*(_WORD *)__p.__r_.__value_.__l.__data_ == 28265 && *(unsigned char *)(__p.__r_.__value_.__r.__words[0] + 2) == 102) {
        goto LABEL_66;
      }
    }
    else
    {
      if (v11 != 3)
      {
        if (v11 != 8) {
          goto LABEL_61;
        }
        std::string::size_type v15 = __p.__r_.__value_.__r.__words[0];
LABEL_43:
        if (v15 == 0x7974696E69666E69)
        {
LABEL_66:
          uint64_t v25 = 0x7FF0000000000000;
          goto LABEL_68;
        }
LABEL_61:
        std::operator+<char>();
        google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)&v26);
        if (v27 < 0) {
          operator delete(v26);
        }
        goto LABEL_63;
      }
      if (LOWORD(__p.__r_.__value_.__l.__data_) == 28265 && __p.__r_.__value_.__s.__data_[2] == 102) {
        goto LABEL_66;
      }
      int v20 = &__p;
    }
    int data_low = LOWORD(v20->__r_.__value_.__l.__data_);
    int v23 = v20->__r_.__value_.__s.__data_[2];
    if (data_low == 24942 && v23 == 110)
    {
      uint64_t v25 = 0x7FF8000000000000;
LABEL_68:
      *(void *)a2 = v25;
      google::protobuf::io::Tokenizer::Next((google::protobuf::TextFormat::Parser::ParserImpl *)((char *)this + 40));
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
LABEL_7:
      if (!v6) {
        return 1;
      }
LABEL_8:
      *a2 = -*a2;
      return 1;
    }
    goto LABEL_61;
  }
  if (v7 != 3)
  {
    if (v7 == 4)
    {
      *a2 = google::protobuf::io::Tokenizer::ParseFloat((uint64_t)this + 48, v4, v5);
      google::protobuf::io::Tokenizer::Next((google::protobuf::TextFormat::Parser::ParserImpl *)((char *)this + 40));
      goto LABEL_7;
    }
    goto LABEL_37;
  }
  std::string v9 = (char *)this + 48;
  if (*((char *)this + 71) < 0)
  {
    if (*((void *)this + 7) <= 1uLL || **(unsigned char **)v9 != 48) {
      goto LABEL_38;
    }
    unsigned int v10 = *(unsigned __int8 *)(*(void *)v9 + 1);
    if ((v10 | 0x20) == 0x78) {
      goto LABEL_37;
    }
    if ((char)v10 < 48) {
      goto LABEL_38;
    }
  }
  else
  {
    if (*((unsigned __int8 *)this + 71) < 2u || *v9 != 48) {
      goto LABEL_38;
    }
    unsigned int v10 = *((unsigned __int8 *)this + 49);
    if ((v10 | 0x20) == 0x78) {
      goto LABEL_37;
    }
    if ((char)v10 <= 47)
    {
LABEL_38:
      __p.__r_.__value_.__r.__words[0] = 0;
      if (google::protobuf::io::Tokenizer::ParseInteger((unsigned __int8 *)this + 48, 0xFFFFFFFFFFFFFFFFLL, (unint64_t *)&__p))double v18 = (double)__p.__r_.__value_.__r.__words[0]; {
      else
      }
        double v18 = google::protobuf::io::Tokenizer::ParseFloat((uint64_t)this + 48, v16, v17);
      *a2 = v18;
      google::protobuf::io::Tokenizer::Next((google::protobuf::TextFormat::Parser::ParserImpl *)((char *)this + 40));
      if ((v6 & 1) == 0) {
        return 1;
      }
      goto LABEL_8;
    }
  }
  if (v10 > 0x37) {
    goto LABEL_38;
  }
LABEL_37:
  std::operator+<char>();
  google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18), *((_DWORD *)this + 19), (uint64_t)&__p);
LABEL_63:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_189206858(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::anonymous namespace'::FastFieldValuePrinterUtf8Escaping::~FastFieldValuePrinterUtf8Escaping(google::protobuf::_anonymous_namespace_::FastFieldValuePrinterUtf8Escaping *this)
{
}

void google::protobuf::anonymous namespace'::FastFieldValuePrinterUtf8Escaping::PrintString(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1892069B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator(google::protobuf::TextFormat::Printer::TextGenerator *this)
{
  google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator(this);

  JUMPOUT(0x18C11F580);
}

{
  *(void *)this = &unk_1ED514688;
  if (!*((unsigned char *)this + 29) && *((int *)this + 6) >= 1) {
    (*(void (**)(void))(**((void **)this + 1) + 24))(*((void *)this + 1));
  }
}

uint64_t google::protobuf::TextFormat::Printer::TextGenerator::Indent(uint64_t this)
{
  return this;
}

void google::protobuf::TextFormat::Printer::TextGenerator::Outdent(google::protobuf::TextFormat::Printer::TextGenerator *this)
{
  int v1 = *((_DWORD *)this + 8);
  if (v1 && v1 >= *((_DWORD *)this + 9))
  {
    *((_DWORD *)this + 8) = v1 - 1;
  }
  else
  {
    int v2 = 2;
    int v3 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/text_format.cc";
    int v4 = 1268;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, " Outdent() without matching Indent().");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v2);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_189206AAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Printer::TextGenerator::GetCurrentIndentationSize(google::protobuf::TextFormat::Printer::TextGenerator *this)
{
  return 2 * *((int *)this + 8);
}

uint64_t google::protobuf::TextFormat::Printer::TextGenerator::Print(google::protobuf::TextFormat::Printer::TextGenerator *this, const char *__src, size_t a3)
{
  if (*((int *)this + 8) < 1)
  {
    uint64_t result = google::protobuf::TextFormat::Printer::TextGenerator::Write((uint64_t)this, __src, a3);
    if (a3 && __src[a3 - 1] == 10) {
      *((unsigned char *)this + 28) = 1;
    }
  }
  else
  {
    if (a3)
    {
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      do
      {
        if (__src[v6] == 10)
        {
          google::protobuf::TextFormat::Printer::TextGenerator::Write((uint64_t)this, &__src[v7], ++v6 - v7);
          *((unsigned char *)this + 28) = 1;
          uint64_t v7 = v6;
        }
        else
        {
          ++v6;
        }
      }
      while (v6 != a3);
    }
    else
    {
      uint64_t v7 = 0;
    }
    return google::protobuf::TextFormat::Printer::TextGenerator::Write((uint64_t)this, &__src[v7], a3 - v7);
  }
  return result;
}

uint64_t google::protobuf::TextFormat::Printer::TextGenerator::Write(uint64_t this, const char *__src, size_t a3)
{
  if (!a3) {
    return this;
  }
  uint64_t v3 = this;
  if (*(unsigned char *)(this + 29)) {
    return this;
  }
  size_t v4 = a3;
  if (!*(unsigned char *)(this + 28)) {
    goto LABEL_13;
  }
  *(unsigned char *)(this + 28) = 0;
  if (!*(_DWORD *)(this + 32)) {
    goto LABEL_13;
  }
  int v6 = (*(uint64_t (**)(uint64_t))(*(void *)this + 32))(this);
  int v7 = *(_DWORD *)(v3 + 24);
  if (v7 < v6)
  {
    while (1)
    {
      if (v7 >= 1)
      {
        memset(*(void **)(v3 + 16), 32, v7);
        int v7 = *(_DWORD *)(v3 + 24);
      }
      unint64_t v13 = 0;
      this = (*(uint64_t (**)(void, void **, uint64_t))(**(void **)(v3 + 8) + 16))(*(void *)(v3 + 8), &v13, v3 + 24);
      *(unsigned char *)(v3 + 29) = this ^ 1;
      if ((this ^ 1)) {
        return this;
      }
      v6 -= v7;
      long long v8 = v13;
      *(void *)(v3 + 16) = v13;
      int v7 = *(_DWORD *)(v3 + 24);
      if (v6 <= v7) {
        goto LABEL_12;
      }
    }
  }
  long long v8 = *(void **)(v3 + 16);
LABEL_12:
  this = (uint64_t)memset(v8, 32, v6);
  *(void *)(v3 + 16) += v6;
  *(_DWORD *)(v3 + 24) -= v6;
  if (!*(unsigned char *)(v3 + 29))
  {
LABEL_13:
    int v9 = *(_DWORD *)(v3 + 24);
    size_t v10 = v9;
    if (v9 >= v4)
    {
      char v12 = *(void **)(v3 + 16);
LABEL_20:
      this = (uint64_t)memcpy(v12, __src, v4);
      *(void *)(v3 + 16) += v4;
      *(_DWORD *)(v3 + 24) -= v4;
    }
    else
    {
      while (1)
      {
        if (v9 >= 1)
        {
          memcpy(*(void **)(v3 + 16), __src, v10);
          uint64_t v11 = *(int *)(v3 + 24);
          __src += v11;
          v4 -= v11;
        }
        unint64_t v13 = 0;
        this = (*(uint64_t (**)(void, void **, uint64_t))(**(void **)(v3 + 8) + 16))(*(void *)(v3 + 8), &v13, v3 + 24);
        *(unsigned char *)(v3 + 29) = this ^ 1;
        if ((this & 1) == 0) {
          break;
        }
        char v12 = v13;
        *(void *)(v3 + 16) = v13;
        int v9 = *(_DWORD *)(v3 + 24);
        size_t v10 = v9;
        if (v4 <= v9) {
          goto LABEL_20;
        }
      }
    }
  }
  return this;
}

uint64_t *std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>::reset[abi:ne180100](uint64_t *result)
{
  uint64_t v1 = *result;
  *uint64_t result = 0;
  if (v1)
  {
    std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>>>::destroy(*(void **)(v1 + 32));
    std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>>>::destroy(*(void **)(v1 + 8));
    JUMPOUT(0x18C11F580);
  }
  return result;
}

void std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>>>::destroy(*a1);
    std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>>>>>::destroy(a1[1]);
    uint64_t v2 = a1[5];
    if (v2)
    {
      uint64_t v3 = a1[6];
      size_t v4 = (void *)a1[5];
      if (v3 != v2)
      {
        do
        {
          v3 -= 8;
          std::unique_ptr<google::protobuf::TextFormat::ParseInfoTree>::reset[abi:ne180100](v3);
        }
        while (v3 != v2);
        size_t v4 = (void *)a1[5];
      }
      a1[6] = v2;
      operator delete(v4);
    }
    operator delete(a1);
  }
}

void std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>>>::destroy(*a1);
    std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::vector<google::protobuf::TextFormat::ParseLocation>>>>::destroy(a1[1]);
    uint64_t v2 = (void *)a1[5];
    if (v2)
    {
      a1[6] = v2;
      operator delete(v2);
    }
    operator delete(a1);
  }
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,google::protobuf::anonymous namespace'::FieldIndexSorter &,google::protobuf::FieldDescriptor const**,false>(uint64_t result, uint64_t *a2, uint64_t a3, char a4)
{
  long long v8 = (uint64_t *)result;
  while (2)
  {
    int v9 = a2;
    int v99 = a2 - 1;
    size_t v10 = v8;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          long long v8 = v10;
          uint64_t v11 = (char *)v9 - (char *)v10;
          uint64_t v12 = v11 >> 3;
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0:
              case 1:
                return result;
              case 2:
                uint64_t v39 = *(a2 - 1);
                uint64_t v40 = *v8;
                if (result)
                {
                  *long long v8 = v39;
                  *(a2 - 1) = v40;
                }
                break;
              case 3:
                break;
              case 4:
                break;
              case 5:
                long long v41 = v8 + 2;
                int v42 = v8 + 3;
                uint64_t v43 = *(a2 - 1);
                uint64_t v44 = v8[3];
                if (result)
                {
                  uint64_t *v42 = v43;
                  *(a2 - 1) = v44;
                  uint64_t v45 = *v42;
                  uint64_t v46 = *v41;
                  if (result)
                  {
                    uint64_t *v41 = v45;
                    uint64_t *v42 = v46;
                    uint64_t v47 = v8[1];
                    if (result)
                    {
                      v8[1] = v45;
                      void v8[2] = v47;
                      uint64_t v48 = *v8;
                      if (result)
                      {
                        *long long v8 = v45;
                        v8[1] = v48;
                      }
                    }
                  }
                }
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v11 <= 191)
          {
            uint64_t v49 = v8 + 1;
            BOOL v51 = v8 == v9 || v49 == v9;
            if (a4)
            {
              if (!v51)
              {
                uint64_t v52 = 8;
                std::string::size_type v53 = v8;
                do
                {
                  uint64_t v55 = *v53;
                  uint64_t v54 = v53[1];
                  std::string::size_type v53 = v49;
                  if (result)
                  {
                    uint64_t v56 = v52;
                    do
                    {
                      *(uint64_t *)((char *)v8 + v56) = v55;
                      uint64_t v57 = v56 - 8;
                      if (v56 == 8)
                      {
                        uint64_t v58 = v8;
                        goto LABEL_84;
                      }
                      uint64_t v55 = *(uint64_t *)((char *)v8 + v56 - 16);
                      uint64_t v56 = v57;
                    }
                    while ((result & 1) != 0);
                    uint64_t v58 = (uint64_t *)((char *)v8 + v57);
LABEL_84:
                    *uint64_t v58 = v54;
                  }
                  uint64_t v49 = v53 + 1;
                  v52 += 8;
                }
                while (v53 + 1 != a2);
              }
            }
            else if (!v51)
            {
              do
              {
                uint64_t v95 = *v8;
                uint64_t v94 = v8[1];
                long long v8 = v49;
                if (result)
                {
                  int v96 = v8;
                  do
                  {
                    *int v96 = v95;
                    uint64_t v95 = *(v96 - 2);
                    --v96;
                  }
                  while ((result & 1) != 0);
                  *int v96 = v94;
                }
                uint64_t v49 = v8 + 1;
              }
              while (v8 + 1 != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v8 != v9)
            {
              int64_t v59 = (unint64_t)(v12 - 2) >> 1;
              int64_t v60 = v59;
              do
              {
                int64_t v61 = v60;
                if (v59 >= v60)
                {
                  uint64_t v62 = (2 * v60) | 1;
                  long long v63 = &v8[v62];
                  uint64_t v64 = 2 * v60 + 2;
                  uint64_t v65 = *v63;
                  if (v64 < v12)
                  {
                    uint64_t v66 = v63[1];
                    if (v67) {
                      uint64_t v65 = v66;
                    }
                    int64_t v59 = (unint64_t)(v12 - 2) >> 1;
                    if (v67)
                    {
                      ++v63;
                      uint64_t v62 = v64;
                    }
                  }
                  std::string v68 = &v8[v61];
                  uint64_t v69 = *v68;
                  if ((result & 1) == 0)
                  {
                    uint64_t v100 = v69;
                    int64_t v97 = v61;
                    do
                    {
                      std::string::size_type v70 = v63;
                      *std::string v68 = v65;
                      if (v59 < v62) {
                        break;
                      }
                      uint64_t v71 = (2 * v62) | 1;
                      long long v63 = &v8[v71];
                      uint64_t v72 = 2 * v62 + 2;
                      uint64_t v65 = *v63;
                      if (v72 < v12)
                      {
                        uint64_t v73 = v63[1];
                        if (v74)
                        {
                          uint64_t v65 = v73;
                          ++v63;
                        }
                        int64_t v59 = (unint64_t)(v12 - 2) >> 1;
                        if (v74) {
                          uint64_t v71 = v72;
                        }
                      }
                      std::string v68 = v70;
                      uint64_t v62 = v71;
                    }
                    while (!result);
                    *std::string::size_type v70 = v100;
                    int64_t v61 = v97;
                  }
                }
                int64_t v60 = v61 - 1;
              }
              while (v61);
              uint64_t v75 = (unint64_t)v11 >> 3;
              std::string::size_type v98 = v8;
              do
              {
                uint64_t v76 = 0;
                uint64_t v77 = *v8;
                int v78 = v8;
                do
                {
                  uint64_t v79 = &v78[v76];
                  uint64_t v82 = v79[1];
                  long long v80 = v79 + 1;
                  uint64_t v81 = v82;
                  uint64_t v83 = (2 * v76) | 1;
                  uint64_t v84 = 2 * v76 + 2;
                  if (v84 < v75)
                  {
                    uint64_t v85 = v80[1];
                    if (result)
                    {
                      uint64_t v81 = v85;
                      ++v80;
                      uint64_t v83 = v84;
                    }
                  }
                  uint64_t *v78 = v81;
                  int v78 = v80;
                  uint64_t v76 = v83;
                }
                while (v83 <= (uint64_t)((unint64_t)(v75 - 2) >> 1));
                long long v86 = a2 - 1;
                BOOL v5 = v80 == --a2;
                if (v5)
                {
                  uint64_t *v80 = v77;
                }
                else
                {
                  uint64_t *v80 = *v86;
                  *long long v86 = v77;
                  uint64_t v87 = (char *)v80 - (char *)v98 + 8;
                  if (v87 >= 9)
                  {
                    unint64_t v88 = (((unint64_t)v87 >> 3) - 2) >> 1;
                    std::string::size_type v89 = &v98[v88];
                    uint64_t v90 = *v89;
                    uint64_t v91 = *v80;
                    if (result)
                    {
                      do
                      {
                        int v92 = v89;
                        uint64_t *v80 = v90;
                        if (!v88) {
                          break;
                        }
                        unint64_t v88 = (v88 - 1) >> 1;
                        std::string::size_type v89 = &v98[v88];
                        uint64_t v90 = *v89;
                        long long v80 = v92;
                      }
                      while ((result & 1) != 0);
                      uint64_t *v92 = v91;
                    }
                  }
                }
                BOOL v93 = v75-- <= 2;
                long long v8 = v98;
              }
              while (!v93);
            }
            return result;
          }
          unint64_t v13 = (unint64_t)v12 >> 1;
          int v14 = &v8[(unint64_t)v12 >> 1];
          if ((unint64_t)v11 < 0x401)
          {
          }
          else
          {
            uint64_t v15 = *v8;
            *long long v8 = *v14;
            uint64_t *v14 = v15;
          }
          --a3;
          uint64_t v16 = *v8;
            break;
          if (result)
          {
            size_t v10 = v8;
            do
            {
              uint64_t v30 = v10[1];
              ++v10;
            }
            while ((result & 1) == 0);
          }
          else
          {
            int v31 = v8 + 1;
            do
            {
              size_t v10 = v31;
              if (v31 >= v9) {
                break;
              }
              ++v31;
            }
            while (!result);
          }
          std::string v32 = v9;
          if (v10 < v9)
          {
            std::string v32 = v9;
            do
            {
              uint64_t v33 = *--v32;
            }
            while ((result & 1) != 0);
          }
          if (v10 < v32)
          {
            uint64_t v34 = *v10;
            uint64_t v35 = *v32;
            do
            {
              uint64_t *v10 = v35;
              uint64_t *v32 = v34;
              do
              {
                uint64_t v36 = v10[1];
                ++v10;
                uint64_t v34 = v36;
              }
              do
              {
                uint64_t v37 = *--v32;
                uint64_t v35 = v37;
              }
              while ((result & 1) != 0);
            }
            while (v10 < v32);
          }
          char v38 = v10 - 1;
          BOOL v4 = v10 - 1 >= v8;
          BOOL v5 = v10 - 1 == v8;
          if (v10 - 1 != v8) {
            *long long v8 = *v38;
          }
          a4 = 0;
          *char v38 = v16;
        }
        uint64_t v17 = 0;
        do
          uint64_t v18 = v8[++v17];
        uint64_t v19 = &v8[v17];
        int v20 = v9;
        if (v17 == 1)
        {
          int v20 = v9;
          do
          {
            if (v19 >= v20) {
              break;
            }
            uint64_t v22 = *--v20;
          }
        }
        else
        {
          do
            uint64_t v21 = *--v20;
        }
        if (v19 >= v20)
        {
          uint64_t v28 = v19 - 1;
        }
        else
        {
          uint64_t v23 = *v20;
          std::string::size_type v24 = &v8[v17];
          uint64_t v25 = v20;
          do
          {
            uint64_t *v24 = v23;
            *uint64_t v25 = v18;
            do
            {
              uint64_t v26 = v24[1];
              ++v24;
              uint64_t v18 = v26;
            }
            do
            {
              uint64_t v27 = *--v25;
              uint64_t v23 = v27;
            }
          }
          while (v24 < v25);
          uint64_t v28 = v24 - 1;
          int v9 = a2;
        }
        if (v28 != v8) {
          *long long v8 = *v28;
        }
        uint64_t *v28 = v16;
        if (v19 >= v20) {
          break;
        }
LABEL_33:
        a4 = 0;
        size_t v10 = v28 + 1;
      }
      size_t v10 = v28 + 1;
      if (result) {
        break;
      }
      if (!v29) {
        goto LABEL_33;
      }
    }
    a2 = v28;
    if (!v29) {
      continue;
    }
    return result;
  }
}

BOOL google::protobuf::anonymous namespace'::FieldIndexSorter::operator()(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 67))
  {
    if (!*(unsigned char *)(a2 + 67)) {
      return 0;
    }
    int v2 = *(_DWORD *)(a1 + 68);
    int v3 = *(_DWORD *)(a2 + 68);
  }
  else
  {
    if (*(unsigned char *)(a2 + 67)) {
      return 1;
    }
    int v2 = 678152731 * ((unint64_t)(a1 - *(void *)(*(void *)(a1 + 80) + 40)) >> 3);
    int v3 = 678152731 * ((unint64_t)(a2 - *(void *)(*(void *)(a2 + 80) + 40)) >> 3);
  }
  return v2 < v3;
}

BOOL std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::anonymous namespace'::FieldIndexSorter &,google::protobuf::FieldDescriptor const**>(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  uint64_t v9 = *a3;
  if (v8)
  {
    if (result)
    {
      *a1 = v9;
    }
    else
    {
      *a1 = v6;
      *a2 = v7;
      uint64_t v13 = *a3;
      if (!result) {
        return result;
      }
      *a2 = v13;
    }
    *a3 = v7;
  }
  else if (result)
  {
    *a2 = v9;
    *a3 = v6;
    uint64_t v11 = *a2;
    uint64_t v12 = *a1;
    if (result)
    {
      *a1 = v11;
      *a2 = v12;
    }
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::anonymous namespace'::FieldIndexSorter &,google::protobuf::FieldDescriptor const**>(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v6 = *(a2 - 1);
      uint64_t v7 = *a1;
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return 1;
    case 3:
      return 1;
    case 4:
      return 1;
    case 5:
      uint64_t v18 = a1 + 2;
      uint64_t v19 = a1 + 3;
      uint64_t v20 = *(a2 - 1);
      uint64_t v21 = a1[3];
      {
        uint64_t *v19 = v20;
        *(a2 - 1) = v21;
        uint64_t v22 = *v19;
        uint64_t v23 = *v18;
        {
          *uint64_t v18 = v22;
          uint64_t *v19 = v23;
          uint64_t v24 = a1[1];
          {
            a1[1] = v22;
            a1[2] = v24;
            uint64_t v25 = *a1;
            {
              *a1 = v22;
              a1[1] = v25;
            }
          }
        }
      }
      return 1;
    default:
      BOOL v8 = a1 + 2;
      uint64_t v9 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v10 = 0;
      uint64_t v11 = 24;
      break;
  }
  while (1)
  {
    uint64_t v12 = *v9;
    uint64_t v13 = *v8;
    {
      uint64_t v14 = v11;
      while (1)
      {
        *(uint64_t *)((char *)a1 + v14) = v13;
        uint64_t v15 = v14 - 8;
        if (v14 == 8) {
          break;
        }
        uint64_t v13 = *(uint64_t *)((char *)a1 + v14 - 16);
        uint64_t v14 = v15;
        if (!v16)
        {
          uint64_t v17 = (uint64_t *)((char *)a1 + v15);
          goto LABEL_13;
        }
      }
      uint64_t v17 = a1;
LABEL_13:
      *uint64_t v17 = v12;
      if (++v10 == 8) {
        return v9 + 1 == a2;
      }
    }
    BOOL v8 = v9;
    v11 += 8;
    if (++v9 == a2) {
      return 1;
    }
  }
}

BOOL std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::anonymous namespace'::FieldIndexSorter &,google::protobuf::FieldDescriptor const**>(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v8 = *a4;
  uint64_t v9 = *a3;
  if (result)
  {
    *a3 = v8;
    *a4 = v9;
    uint64_t v11 = *a3;
    uint64_t v12 = *a2;
    if (result)
    {
      *a2 = v11;
      *a3 = v12;
      uint64_t v13 = *a2;
      uint64_t v14 = *a1;
      if (result)
      {
        *a1 = v13;
        *a2 = v14;
      }
    }
  }
  return result;
}

void *std::get_temporary_buffer[abi:ne180100]<google::protobuf::Message const*>(uint64_t a1)
{
  if (a1 < 1) {
    return 0;
  }
  if (a1 >= 0xFFFFFFFFFFFFFFFLL) {
    unint64_t v1 = 0xFFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v1 = a1;
  }
  int v2 = (const std::nothrow_t *)MEMORY[0x1E4FBA2D0];
  while (1)
  {
    BOOL result = operator new(8 * v1, v2);
    if (result) {
      break;
    }
    BOOL v4 = v1 > 1;
    v1 >>= 1;
    if (!v4) {
      return 0;
    }
  }
  return result;
}

const google::protobuf::Message **std::__stable_sort<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(const google::protobuf::Message **result, const google::protobuf::Message **a2, const google::protobuf::FieldDescriptor **a3, unint64_t a4, const google::protobuf::Message **a5, uint64_t a6)
{
  if (a4 >= 2)
  {
    uint64_t v8 = result;
    if (a4 == 2)
    {
      BOOL result = (const google::protobuf::Message **)google::protobuf::MapEntryMessageComparator::operator()(a3, *(a2 - 1), *result);
      if (result)
      {
        uint64_t v9 = *v8;
        *uint64_t v8 = *(a2 - 1);
        *(a2 - 1) = v9;
      }
    }
    else if ((uint64_t)a4 > 128)
    {
      uint64_t v19 = a5;
      unint64_t v20 = a4 >> 1;
      uint64_t v21 = &result[a4 >> 1];
      unint64_t v22 = a4 >> 1;
      if ((uint64_t)a4 <= a6)
      {
        std::__stable_sort_move<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(result, v21, a3, v22, a5);
        uint64_t v23 = &v19[v20];
        BOOL result = std::__stable_sort_move<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(&v8[a4 >> 1], a2, a3, a4 - (a4 >> 1), v23);
        uint64_t v24 = &v19[a4];
        uint64_t v25 = v23;
        while (v25 != v24)
        {
          BOOL result = (const google::protobuf::Message **)google::protobuf::MapEntryMessageComparator::operator()(a3, *v25, *v19);
          if (result) {
            uint64_t v26 = v25;
          }
          else {
            uint64_t v26 = v19;
          }
          v19 += result ^ 1;
          v25 += result;
          *v8++ = *v26;
          if (v19 == v23)
          {
            if (v25 != v24)
            {
              uint64_t v27 = 0;
              do
              {
                v8[v27] = v25[v27];
                ++v27;
              }
              while (&v25[v27] != v24);
            }
            return result;
          }
        }
        if (v19 != v23)
        {
          uint64_t v28 = 0;
          do
          {
            v8[v28] = v19[v28];
            ++v28;
          }
          while (&v19[v28] != v23);
        }
      }
      else
      {
        std::__stable_sort<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(result, v21, a3, v22, a5, a6);
        std::__stable_sort<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(&v8[a4 >> 1], a2, a3, a4 - (a4 >> 1), v19, a6);
        return (const google::protobuf::Message **)std::__inplace_merge<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>((uint64_t)v8, &v8[a4 >> 1], a2, a3, a4 >> 1, a4 - (a4 >> 1), v19, a6);
      }
    }
    else if (result != a2)
    {
      uint64_t v11 = result + 1;
      if (result + 1 != a2)
      {
        uint64_t v12 = 0;
        uint64_t v13 = result;
        do
        {
          uint64_t v14 = *v13;
          uint64_t v13 = v11;
          BOOL result = (const google::protobuf::Message **)google::protobuf::MapEntryMessageComparator::operator()(a3, *v11, v14);
          if (result)
          {
            uint64_t v15 = *v13;
            uint64_t v16 = v12;
            while (1)
            {
              *(const google::protobuf::Message **)((char *)v8 + v16 + 8) = *(const google::protobuf::Message **)((char *)v8 + v16);
              if (!v16) {
                break;
              }
              BOOL result = (const google::protobuf::Message **)google::protobuf::MapEntryMessageComparator::operator()(a3, v15, *(const google::protobuf::Message **)((char *)v8 + v16 - 8));
              v16 -= 8;
              if ((result & 1) == 0)
              {
                uint64_t v17 = (const google::protobuf::Message **)((char *)v8 + v16 + 8);
                goto LABEL_15;
              }
            }
            uint64_t v17 = v8;
LABEL_15:
            *uint64_t v17 = v15;
          }
          uint64_t v11 = v13 + 1;
          v12 += 8;
        }
        while (v13 + 1 != a2);
      }
    }
  }
  return result;
}

BOOL google::protobuf::MapEntryMessageComparator::operator()(const google::protobuf::FieldDescriptor **a1, const google::protobuf::Message *a2, const google::protobuf::Message *a3)
{
  (*(void (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  uint64_t v9 = v8;
  int v10 = *a1;
  uint64_t v11 = (std::once_flag::_State_type *)*((void *)*a1 + 6);
  if (v11)
  {
    uint64_t v44 = *a1;
    uint64_t v45 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
    {
      v41.__r_.__value_.__r.__words[0] = (std::string::size_type)&v45;
      v41.__r_.__value_.__l.__size_ = (std::string::size_type)&v44;
      v43.__r_.__value_.__r.__words[0] = (std::string::size_type)&v41;
      std::__call_once(v11, &v43, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  switch(*((_DWORD *)v10 + 14))
  {
    case 3:
      uint64_t Int64 = google::protobuf::Reflection::GetInt64(v9, a2, *a1, v6, v7);
      return Int64 < google::protobuf::Reflection::GetInt64(v9, a3, *a1, v21, v22);
    case 4:
    case 6:
      Uuint64_t Int64 = google::protobuf::Reflection::GetUInt64(v9, a2, *a1, v6, v7);
      BOOL v19 = UInt64 >= google::protobuf::Reflection::GetUInt64(v9, a3, *a1, v25, v26);
      goto LABEL_12;
    case 5:
      int Int32 = google::protobuf::Reflection::GetInt32(v9, a2, *a1, v6, v7);
      return Int32 < (int)google::protobuf::Reflection::GetInt32(v9, a3, *a1, v13, v14);
    case 7:
      Uint Int32 = google::protobuf::Reflection::GetUInt32(v9, a2, *a1, v6, v7);
      BOOL v19 = UInt32 >= google::protobuf::Reflection::GetUInt32(v9, a3, *a1, v17, v18);
LABEL_12:
      uint64_t v23 = !v19;
      break;
    case 8:
      BOOL Bool = google::protobuf::Reflection::GetBool(v9, a2, *a1, v6, v7);
      uint64_t v23 = google::protobuf::Reflection::GetBool(v9, a3, *a1, v28, v29) && !Bool;
      break;
    case 9:
      google::protobuf::Reflection::GetString(v9, a2, *a1, v7, &v41);
      google::protobuf::Reflection::GetString(v9, a3, *a1, v30, &v43);
      int v31 = SHIBYTE(v43.__r_.__value_.__r.__words[2]);
      std::string v32 = (void *)v43.__r_.__value_.__r.__words[0];
      char v33 = HIBYTE(v41.__r_.__value_.__r.__words[2]);
      if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v41.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v41.__r_.__value_.__l.__size_;
      }
      if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v35 = &v41;
      }
      else {
        uint64_t v35 = (std::string *)v41.__r_.__value_.__r.__words[0];
      }
      if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v36 = HIBYTE(v43.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v36 = v43.__r_.__value_.__l.__size_;
      }
      if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v37 = &v43;
      }
      else {
        uint64_t v37 = (std::string *)v43.__r_.__value_.__r.__words[0];
      }
      if (v36 >= size) {
        size_t v38 = size;
      }
      else {
        size_t v38 = v36;
      }
      int v39 = memcmp(v35, v37, v38);
      if (v39) {
        uint64_t v23 = v39 < 0;
      }
      else {
        uint64_t v23 = size < v36;
      }
      if (v31 < 0)
      {
        operator delete(v32);
        char v33 = HIBYTE(v41.__r_.__value_.__r.__words[2]);
      }
      if (v33 < 0) {
        operator delete(v41.__r_.__value_.__l.__data_);
      }
      break;
    default:
      LODWORD(v41.__r_.__value_.__l.__data_) = 2;
      v41.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libproto"
                                                              "buf/src/google/protobuf/text_format.cc";
      LODWORD(v41.__r_.__value_.__r.__words[2]) = 2116;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Invalid key for map field.");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v41);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      uint64_t v23 = 1;
      break;
  }
  return v23;
}

void sub_189208100(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

const google::protobuf::Message **std::__stable_sort_move<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(const google::protobuf::Message **result, const google::protobuf::Message **a2, const google::protobuf::FieldDescriptor **a3, unint64_t a4, const google::protobuf::Message **a5)
{
  if (a4)
  {
    BOOL v5 = a5;
    uint64_t v7 = result;
    if (a4 == 1)
    {
LABEL_9:
      google::protobuf::io::Tokenizer *v5 = *v7;
      return result;
    }
    if (a4 == 2)
    {
      int v10 = a2 - 1;
      BOOL result = (const google::protobuf::Message **)google::protobuf::MapEntryMessageComparator::operator()(a3, *(a2 - 1), *result);
      if (result) {
        uint64_t v11 = v10;
      }
      else {
        uint64_t v11 = v7;
      }
      *v5++ = *v11;
      if (!result) {
        uint64_t v7 = v10;
      }
      goto LABEL_9;
    }
    if ((uint64_t)a4 > 8)
    {
      unint64_t v20 = &result[a4 >> 1];
      std::__stable_sort<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(result, v20, a3, a4 >> 1, a5, a4 >> 1);
      BOOL result = (const google::protobuf::Message **)std::__stable_sort<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(&v7[a4 >> 1], a2, a3, a4 - (a4 >> 1), &v5[a4 >> 1], a4 - (a4 >> 1));
      uint64_t v21 = &v7[a4 >> 1];
      while (v21 != a2)
      {
        BOOL result = (const google::protobuf::Message **)google::protobuf::MapEntryMessageComparator::operator()(a3, *v21, *v7);
        if (result) {
          unint64_t v22 = v21;
        }
        else {
          unint64_t v22 = v7;
        }
        v21 += result;
        v7 += result ^ 1;
        *v5++ = *v22;
        if (v7 == v20)
        {
          if (v21 != a2)
          {
            uint64_t v23 = 0;
            do
            {
              v5[v23] = v21[v23];
              ++v23;
            }
            while (&v21[v23] != a2);
          }
          return result;
        }
      }
      if (v7 != v20)
      {
        uint64_t v24 = 0;
        do
        {
          v5[v24] = v7[v24];
          ++v24;
        }
        while (&v7[v24] != v20);
      }
    }
    else if (result != a2)
    {
      uint64_t v12 = result + 1;
      *a5 = *result;
      if (result + 1 != a2)
      {
        uint64_t v13 = 0;
        uint64_t v14 = a5;
        do
        {
          uint64_t v15 = v14;
          uint64_t v16 = *v14++;
          BOOL result = (const google::protobuf::Message **)google::protobuf::MapEntryMessageComparator::operator()(a3, *v12, v16);
          uint64_t v17 = v14;
          if (result)
          {
            v15[1] = *v15;
            uint64_t v17 = v5;
            if (v15 != v5)
            {
              uint64_t v18 = v13;
              while (1)
              {
                uint64_t v17 = (const google::protobuf::Message **)((char *)v5 + v18);
                BOOL result = (const google::protobuf::Message **)google::protobuf::MapEntryMessageComparator::operator()(a3, *v12, *(const google::protobuf::Message **)((char *)v5 + v18 - 8));
                if (!result) {
                  break;
                }
                *uint64_t v17 = *(v17 - 1);
                v18 -= 8;
                if (!v18)
                {
                  uint64_t v17 = v5;
                  break;
                }
              }
            }
          }
          BOOL v19 = *v12++;
          *uint64_t v17 = v19;
          v13 += 8;
        }
        while (v12 != a2);
      }
    }
  }
  return result;
}

uint64_t std::__inplace_merge<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(uint64_t result, const google::protobuf::Message **a2, const google::protobuf::Message **a3, const google::protobuf::FieldDescriptor **a4, uint64_t a5, uint64_t a6, const google::protobuf::Message **a7, uint64_t a8)
{
  uint64_t v60 = a6;
  if (a6)
  {
    uint64_t v14 = (const google::protobuf::Message **)result;
    while (a5 > a8 && v60 > a8)
    {
      if (!a5) {
        return result;
      }
      unint64_t v15 = 0;
      uint64_t v16 = -a5;
      while (1)
      {
        BOOL result = google::protobuf::MapEntryMessageComparator::operator()(a4, *a2, v14[v15 / 8]);
        if (result) {
          break;
        }
        v15 += 8;
        if (__CFADD__(v16++, 1)) {
          return result;
        }
      }
      uint64_t v18 = -v16;
      uint64_t v19 = v60;
      uint64_t v58 = a7;
      int64_t v59 = a3;
      uint64_t v56 = (char *)&v14[v15 / 8];
      uint64_t v57 = a8;
      if (-v16 >= v60)
      {
        if (v16 == -1)
        {
          uint64_t v52 = v14[v15 / 8];
          v14[v15 / 8] = *a2;
          *a2 = v52;
          return result;
        }
        if (v16 > 0) {
          uint64_t v18 = 1 - v16;
        }
        uint64_t v28 = v18 >> 1;
        BOOL v29 = a3;
        uint64_t v23 = (const google::protobuf::Message **)((char *)&v14[v18 >> 1] + v15);
        uint64_t v62 = *a4;
        unint64_t v22 = a2;
        if (a2 != v29)
        {
          uint64_t v55 = v18 >> 1;
          unint64_t v30 = v59 - a2;
          unint64_t v22 = a2;
          do
          {
            int v31 = &v22[v30 >> 1];
            char v33 = *v31;
            std::string v32 = v31 + 1;
            BOOL v34 = google::protobuf::MapEntryMessageComparator::operator()(&v62, v33, *v23);
            if (v34) {
              v30 += ~(v30 >> 1);
            }
            else {
              v30 >>= 1;
            }
            if (v34) {
              unint64_t v22 = v32;
            }
          }
          while (v30);
          uint64_t v19 = v60;
          uint64_t v28 = v55;
        }
        uint64_t v21 = v22 - a2;
      }
      else
      {
        if (v60 >= 0) {
          uint64_t v20 = v60;
        }
        else {
          uint64_t v20 = v60 + 1;
        }
        uint64_t v21 = v20 >> 1;
        unint64_t v22 = &a2[v20 >> 1];
        uint64_t v23 = a2;
        if ((char *)a2 - (char *)v14 != v15)
        {
          uint64_t v54 = v20 >> 1;
          unint64_t v24 = (uint64_t)((char *)a2 - (char *)v14 - v15) >> 3;
          uint64_t v23 = &v14[v15 / 8];
          do
          {
            uint64_t v25 = &v23[v24 >> 1];
            uint64_t v27 = *v25;
            uint64_t v26 = v25 + 1;
            if (google::protobuf::MapEntryMessageComparator::operator()(a4, *v22, v27))
            {
              v24 >>= 1;
            }
            else
            {
              uint64_t v23 = v26;
              v24 += ~(v24 >> 1);
            }
          }
          while (v24);
          uint64_t v19 = v60;
          uint64_t v21 = v54;
        }
        uint64_t v28 = (uint64_t)((char *)v23 - (char *)v14 - v15) >> 3;
      }
      a5 = -v28 - v16;
      uint64_t v61 = v19 - v21;
      uint64_t v35 = (char *)a2;
      uint64_t v36 = v19;
      uint64_t v37 = v28;
      size_t v38 = std::__rotate[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<google::protobuf::Message const**>,std::__wrap_iter<google::protobuf::Message const**>>((char *)v23, v35, (char *)v22);
      uint64_t v39 = v21;
      uint64_t v40 = v38;
      if (v37 + v39 >= v36 - (v37 + v39) - v16)
      {
        std::string v43 = v22;
        uint64_t v44 = v37;
        uint64_t v42 = v39;
        a8 = v57;
        a7 = v58;
        BOOL result = std::__inplace_merge<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(v38, v43, v59, a4, a5, v61, v58, v57);
        a2 = v23;
        a5 = v44;
        a3 = (const google::protobuf::Message **)v40;
        uint64_t v40 = v56;
      }
      else
      {
        uint64_t v41 = v37;
        a7 = v58;
        BOOL result = std::__inplace_merge<std::_ClassicAlgPolicy,google::protobuf::MapEntryMessageComparator &,std::__wrap_iter<google::protobuf::Message const**>>(&v14[v15 / 8], v23, v38, a4, v41, v39, v58, v57);
        a2 = v22;
        a8 = v57;
        a3 = v59;
        uint64_t v42 = v61;
      }
      uint64_t v60 = v42;
      uint64_t v14 = (const google::protobuf::Message **)v40;
      if (!v42) {
        return result;
      }
    }
    if (a5 <= v60)
    {
      if (v14 != a2)
      {
        uint64_t v49 = 0;
        do
        {
          a7[v49] = v14[v49];
          ++v49;
        }
        while (&v14[v49] != a2);
        if (v49 * 8)
        {
          long long v50 = a7;
          while (a2 != a3)
          {
            BOOL result = google::protobuf::MapEntryMessageComparator::operator()(a4, *a2, *v50);
            if (result) {
              BOOL v51 = a2;
            }
            else {
              BOOL v51 = v50;
            }
            a2 += result;
            v50 += result ^ 1;
            *v14++ = *v51;
            if (&a7[v49] == v50) {
              return result;
            }
          }
          return (uint64_t)memmove(v14, v50, (char *)a7 - (char *)v50 + v49 * 8);
        }
      }
    }
    else if (a3 != a2)
    {
      uint64_t v45 = 0;
      do
      {
        a7[v45] = a2[v45];
        ++v45;
      }
      while (&a2[v45] != a3);
      if (v45 * 8)
      {
        uint64_t v46 = &a7[v45];
        uint64_t v47 = a3 - 1;
        while (a2 != v14)
        {
          BOOL result = google::protobuf::MapEntryMessageComparator::operator()(a4, *(v46 - 1), *(a2 - 1));
          if (result) {
            uint64_t v48 = a2;
          }
          else {
            uint64_t v48 = v46;
          }
          if (result) {
            --a2;
          }
          else {
            --v46;
          }
          *v47-- = *(v48 - 1);
          if (v46 == a7) {
            return result;
          }
        }
        uint64_t v53 = 0;
        do
        {
          v47[v53] = v46[v53 - 1];
          --v53;
        }
        while (&v46[v53] != a7);
      }
    }
  }
  return result;
}

char *std::__rotate[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<google::protobuf::Message const**>,std::__wrap_iter<google::protobuf::Message const**>>(char *__src, char *a2, char *a3)
{
  BOOL v4 = a3;
  if (__src != a2)
  {
    if (a2 == a3)
    {
      return __src;
    }
    else if (__src + 8 == a2)
    {
      uint64_t v6 = *(void *)__src;
      int64_t v7 = a3 - a2;
      memmove(__src, a2, a3 - a2);
      BOOL v4 = &__src[v7];
      *(void *)BOOL v4 = v6;
    }
    else if (a2 + 8 == a3)
    {
      uint64_t v8 = *((void *)a3 - 1);
      BOOL v4 = __src + 8;
      size_t v9 = a3 - 8 - __src;
      if (a3 - 8 != __src) {
        memmove(__src + 8, __src, v9);
      }
      *(void *)int __src = v8;
    }
    else
    {
      return (char *)std::__rotate_gcd[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<google::protobuf::Message const**>>(__src, a2, a3);
    }
  }
  return v4;
}

void *std::__rotate_gcd[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<google::protobuf::Message const**>>(void *a1, void *a2, void *a3)
{
  uint64_t v3 = a2 - a1;
  if (v3 == a3 - a2)
  {
    if (a1 != a2 && a2 != a3)
    {
      BOOL v4 = a1 + 1;
      BOOL v5 = a2 + 1;
      do
      {
        uint64_t v6 = *(v4 - 1);
        *(v4 - 1) = *(v5 - 1);
        *(v5 - 1) = v6;
        if (v4 == a2) {
          break;
        }
        ++v4;
      }
      while (v5++ != a3);
    }
  }
  else
  {
    uint64_t v8 = a3 - a2;
    uint64_t v9 = a2 - a1;
    do
    {
      uint64_t v10 = v9;
      uint64_t v9 = v8;
      uint64_t v8 = v10 % v8;
    }
    while (v8);
    if (v9)
    {
      uint64_t v11 = &a1[v9];
      do
      {
        uint64_t v13 = *--v11;
        uint64_t v12 = v13;
        uint64_t v14 = &v11[v3];
        unint64_t v15 = v11;
        do
        {
          uint64_t v16 = v14;
          void *v15 = *v14;
          uint64_t v17 = &v14[v3];
          BOOL v18 = __OFSUB__(v3, a3 - v14);
          uint64_t v20 = v3 - (a3 - v14);
          char v19 = (v20 < 0) ^ v18;
          uint64_t v14 = &a1[v20];
          if (v19) {
            uint64_t v14 = v17;
          }
          unint64_t v15 = v16;
        }
        while (v14 != v11);
        *uint64_t v16 = v12;
      }
      while (v11 != a1);
    }
    return &a1[a3 - a2];
  }
  return a2;
}

uint64_t google::protobuf::io::ZeroCopyOutputStream::AllowsAliasing(google::protobuf::io::ZeroCopyOutputStream *this)
{
  return 0;
}

void google::protobuf::RepeatedField<BOOL>::Reserve(unsigned int *a1, int a2)
{
  int v2 = a1[1];
  if (v2 >= a2) {
    return;
  }
  if (v2 < 1)
  {
    uint64_t v4 = *((void *)a1 + 1);
    BOOL v5 = 0;
    if (!v2)
    {
      if (a2 < 4) {
        goto LABEL_6;
      }
LABEL_10:
      int v7 = 2 * v2;
      if (v7 <= a2) {
        unsigned int v6 = a2;
      }
      else {
        unsigned int v6 = v7;
      }
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v4 = *((void *)a1 + 1);
    BOOL v5 = (void *)(v4 - 8);
  }
  uint64_t v4 = *(void *)(v4 - 8);
  if (a2 >= 4)
  {
    if (v2 > 0x3FFFFFFF)
    {
      unsigned int v6 = 0x7FFFFFFF;
      goto LABEL_13;
    }
    goto LABEL_10;
  }
LABEL_6:
  unsigned int v6 = 4;
LABEL_13:
  if (v4)
  {
    unint64_t v8 = (v6 + 15) & 0x1FFFFFFF8;
    if (*(unsigned char *)(v4 + 24)) {
      (*(void (**)(void, void, unint64_t))(**(void **)(*(void *)(v4 + 32) + 32) + 40))(*(void *)(*(void *)(v4 + 32) + 32), MEMORY[0x1E4FBA380], v8);
    }
    Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((atomic_ullong *)v4, v8);
  }
  else
  {
    Aligned = operator new(v6 + 8);
  }
  void *Aligned = v4;
  uint64_t v10 = Aligned + 1;
  a1[1] = v6;
  *((void *)a1 + 1) = v10;
  size_t v11 = *a1;
  if ((int)v11 >= 1) {
    memcpy(v10, v5 + 1, v11);
  }
  if (v5 && !*v5)
  {
    operator delete(v5);
  }
}

uint64_t google::protobuf::RepeatedField<BOOL>::RepeatedField(uint64_t a1, int *a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  int v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<BOOL>::Reserve((unsigned int *)a1, v4);
    BOOL v5 = *(void **)(a1 + 8);
    *(_DWORD *)a1 += *a2;
    memcpy(v5, *((const void **)a2 + 1), *a2);
  }
  return a1;
}

void google::protobuf::RepeatedField<BOOL>::Swap(int *a1, int *a2)
{
  if (a1 != a2)
  {
    int v4 = (void **)(a1 + 2);
    if (a1[1]) {
      int v4 = (void **)((char *)*v4 - 8);
    }
    BOOL v5 = *v4;
    unsigned int v6 = (void *)*((void *)a2 + 1);
    if (a2[1]) {
      unsigned int v6 = (void *)*(v6 - 1);
    }
    if (v5 == v6)
    {
      uint64_t v12 = *(void *)a1;
      uint64_t v13 = *((void *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)a2 = v12;
      *((void *)a2 + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<BOOL>::Reserve((unsigned int *)__dst, *a1);
        size_t v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<BOOL>::Reserve((unsigned int *)a1, *a2);
        unint64_t v8 = (void *)*((void *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v11) = HIDWORD(__dst[0]);
      }
      else
      {
        unint64_t v9 = *(void *)a2;
        uint64_t v10 = (void *)*((void *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        unint64_t v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((void *)__dst[1] - 1)) {
        operator delete((char *)__dst[1] - 8);
      }
    }
  }
}

void sub_189208BBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, uint64_t a11)
{
  if (a10 >= 1 && !*(void *)(a11 - 8)) {
    operator delete((void *)(a11 - 8));
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::RepeatedField<int>::Reserve(unsigned int *a1, int a2)
{
  int v2 = a1[1];
  if (v2 >= a2) {
    return;
  }
  if (v2 < 1)
  {
    uint64_t v4 = *((void *)a1 + 1);
    BOOL v5 = 0;
    if (!v2)
    {
      if (a2 < 4) {
        goto LABEL_6;
      }
LABEL_10:
      int v7 = 2 * v2;
      if (v7 <= a2) {
        unsigned int v6 = a2;
      }
      else {
        unsigned int v6 = v7;
      }
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v4 = *((void *)a1 + 1);
    BOOL v5 = (void *)(v4 - 8);
  }
  uint64_t v4 = *(void *)(v4 - 8);
  if (a2 >= 4)
  {
    if (v2 > 0x3FFFFFFF)
    {
      unsigned int v6 = 0x7FFFFFFF;
      goto LABEL_13;
    }
    goto LABEL_10;
  }
LABEL_6:
  unsigned int v6 = 4;
LABEL_13:
  uint64_t v8 = 4 * v6;
  if (v4)
  {
    unint64_t v9 = (v8 + 15) & 0x7FFFFFFF8;
    if (*(unsigned char *)(v4 + 24)) {
      (*(void (**)(void, void, unint64_t))(**(void **)(*(void *)(v4 + 32) + 32) + 40))(*(void *)(*(void *)(v4 + 32) + 32), MEMORY[0x1E4FBA380], v9);
    }
    Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((atomic_ullong *)v4, v9);
  }
  else
  {
    Aligned = operator new(v8 + 8);
  }
  void *Aligned = v4;
  unint64_t v11 = Aligned + 1;
  a1[1] = v6;
  *((void *)a1 + 1) = v11;
  uint64_t v12 = *a1;
  if ((int)v12 >= 1) {
    memcpy(v11, v5 + 1, 4 * v12);
  }
  if (v5 && !*v5)
  {
    operator delete(v5);
  }
}

uint64_t google::protobuf::RepeatedField<int>::RepeatedField(uint64_t a1, int *a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  int v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)a1, v4);
    BOOL v5 = *(void **)(a1 + 8);
    *(_DWORD *)a1 += *a2;
    memcpy(v5, *((const void **)a2 + 1), 4 * *a2);
  }
  return a1;
}

void google::protobuf::RepeatedField<int>::Swap(int *a1, int *a2)
{
  if (a1 != a2)
  {
    int v4 = (void **)(a1 + 2);
    if (a1[1]) {
      int v4 = (void **)((char *)*v4 - 8);
    }
    BOOL v5 = *v4;
    unsigned int v6 = (void *)*((void *)a2 + 1);
    if (a2[1]) {
      unsigned int v6 = (void *)*(v6 - 1);
    }
    if (v5 == v6)
    {
      uint64_t v12 = *(void *)a1;
      uint64_t v13 = *((void *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)a2 = v12;
      *((void *)a2 + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)__dst, *a1);
        uint64_t v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), 4 * v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)a1, *a2);
        uint64_t v8 = (void *)*((void *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), 4 * *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v11) = HIDWORD(__dst[0]);
      }
      else
      {
        unint64_t v9 = *(void *)a2;
        uint64_t v10 = (void *)*((void *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        unint64_t v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((void *)__dst[1] - 1)) {
        operator delete((char *)__dst[1] - 8);
      }
    }
  }
}

void sub_189208EC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, uint64_t a11)
{
  if (a10 >= 1 && !*(void *)(a11 - 8)) {
    operator delete((void *)(a11 - 8));
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::RepeatedField<unsigned int>::Swap(int *a1, int *a2)
{
  if (a1 != a2)
  {
    int v4 = (void **)(a1 + 2);
    if (a1[1]) {
      int v4 = (void **)((char *)*v4 - 8);
    }
    BOOL v5 = *v4;
    unsigned int v6 = (void *)*((void *)a2 + 1);
    if (a2[1]) {
      unsigned int v6 = (void *)*(v6 - 1);
    }
    if (v5 == v6)
    {
      uint64_t v12 = *(void *)a1;
      uint64_t v13 = *((void *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)a2 = v12;
      *((void *)a2 + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)__dst, *a1);
        uint64_t v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), 4 * v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)a1, *a2);
        uint64_t v8 = (void *)*((void *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), 4 * *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v11) = HIDWORD(__dst[0]);
      }
      else
      {
        unint64_t v9 = *(void *)a2;
        uint64_t v10 = (void *)*((void *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        unint64_t v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((void *)__dst[1] - 1)) {
        operator delete((char *)__dst[1] - 8);
      }
    }
  }
}

void sub_189209010(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, uint64_t a11)
{
  if (a10 >= 1 && !*(void *)(a11 - 8)) {
    operator delete((void *)(a11 - 8));
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::RepeatedField<long long>::Reserve(unsigned int *a1, int a2)
{
  int v2 = a1[1];
  if (v2 >= a2) {
    return;
  }
  if (v2 < 1)
  {
    uint64_t v4 = *((void *)a1 + 1);
    BOOL v5 = 0;
    if (!v2)
    {
      if (a2 < 4) {
        goto LABEL_6;
      }
LABEL_10:
      int v7 = 2 * v2;
      if (v7 <= a2) {
        unsigned int v6 = a2;
      }
      else {
        unsigned int v6 = v7;
      }
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v4 = *((void *)a1 + 1);
    BOOL v5 = (void *)(v4 - 8);
  }
  uint64_t v4 = *(void *)(v4 - 8);
  if (a2 >= 4)
  {
    if (v2 > 0x3FFFFFFF)
    {
      unsigned int v6 = 0x7FFFFFFF;
      goto LABEL_13;
    }
    goto LABEL_10;
  }
LABEL_6:
  unsigned int v6 = 4;
LABEL_13:
  uint64_t v8 = 8 * v6;
  if (v4)
  {
    unint64_t v9 = (v8 + 15) & 0xFFFFFFFF8;
    if (*(unsigned char *)(v4 + 24)) {
      (*(void (**)(void, void, unint64_t))(**(void **)(*(void *)(v4 + 32) + 32) + 40))(*(void *)(*(void *)(v4 + 32) + 32), MEMORY[0x1E4FBA380], v9);
    }
    Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((atomic_ullong *)v4, v9);
  }
  else
  {
    Aligned = operator new(v8 + 8);
  }
  void *Aligned = v4;
  unint64_t v11 = Aligned + 1;
  a1[1] = v6;
  *((void *)a1 + 1) = v11;
  uint64_t v12 = *a1;
  if ((int)v12 >= 1) {
    memcpy(v11, v5 + 1, 8 * v12);
  }
  if (v5 && !*v5)
  {
    operator delete(v5);
  }
}

uint64_t google::protobuf::RepeatedField<long long>::RepeatedField(uint64_t a1, int *a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  int v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)a1, v4);
    BOOL v5 = *(void **)(a1 + 8);
    *(_DWORD *)a1 += *a2;
    memcpy(v5, *((const void **)a2 + 1), 8 * *a2);
  }
  return a1;
}

void google::protobuf::RepeatedField<long long>::Swap(int *a1, int *a2)
{
  if (a1 != a2)
  {
    int v4 = (void **)(a1 + 2);
    if (a1[1]) {
      int v4 = (void **)((char *)*v4 - 8);
    }
    BOOL v5 = *v4;
    unsigned int v6 = (void *)*((void *)a2 + 1);
    if (a2[1]) {
      unsigned int v6 = (void *)*(v6 - 1);
    }
    if (v5 == v6)
    {
      uint64_t v12 = *(void *)a1;
      uint64_t v13 = *((void *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)a2 = v12;
      *((void *)a2 + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)__dst, *a1);
        uint64_t v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), 8 * v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)a1, *a2);
        uint64_t v8 = (void *)*((void *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), 8 * *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v11) = HIDWORD(__dst[0]);
      }
      else
      {
        unint64_t v9 = *(void *)a2;
        uint64_t v10 = (void *)*((void *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        unint64_t v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((void *)__dst[1] - 1)) {
        operator delete((char *)__dst[1] - 8);
      }
    }
  }
}

void sub_189209318(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, uint64_t a11)
{
  if (a10 >= 1 && !*(void *)(a11 - 8)) {
    operator delete((void *)(a11 - 8));
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::RepeatedField<unsigned long long>::Swap(int *a1, int *a2)
{
  if (a1 != a2)
  {
    int v4 = (void **)(a1 + 2);
    if (a1[1]) {
      int v4 = (void **)((char *)*v4 - 8);
    }
    BOOL v5 = *v4;
    unsigned int v6 = (void *)*((void *)a2 + 1);
    if (a2[1]) {
      unsigned int v6 = (void *)*(v6 - 1);
    }
    if (v5 == v6)
    {
      uint64_t v12 = *(void *)a1;
      uint64_t v13 = *((void *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)a2 = v12;
      *((void *)a2 + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)__dst, *a1);
        uint64_t v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), 8 * v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)a1, *a2);
        uint64_t v8 = (void *)*((void *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), 8 * *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v11) = HIDWORD(__dst[0]);
      }
      else
      {
        unint64_t v9 = *(void *)a2;
        uint64_t v10 = (void *)*((void *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        unint64_t v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((void *)__dst[1] - 1)) {
        operator delete((char *)__dst[1] - 8);
      }
    }
  }
}

void sub_189209464(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, uint64_t a11)
{
  if (a10 >= 1 && !*(void *)(a11 - 8)) {
    operator delete((void *)(a11 - 8));
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::RepeatedField<float>::Swap(int *a1, int *a2)
{
  if (a1 != a2)
  {
    int v4 = (void **)(a1 + 2);
    if (a1[1]) {
      int v4 = (void **)((char *)*v4 - 8);
    }
    BOOL v5 = *v4;
    unsigned int v6 = (void *)*((void *)a2 + 1);
    if (a2[1]) {
      unsigned int v6 = (void *)*(v6 - 1);
    }
    if (v5 == v6)
    {
      uint64_t v12 = *(void *)a1;
      uint64_t v13 = *((void *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)a2 = v12;
      *((void *)a2 + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)__dst, *a1);
        uint64_t v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), 4 * v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)a1, *a2);
        uint64_t v8 = (void *)*((void *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), 4 * *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v11) = HIDWORD(__dst[0]);
      }
      else
      {
        unint64_t v9 = *(void *)a2;
        uint64_t v10 = (void *)*((void *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        unint64_t v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((void *)__dst[1] - 1)) {
        operator delete((char *)__dst[1] - 8);
      }
    }
  }
}

void sub_1892095B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, uint64_t a11)
{
  if (a10 >= 1 && !*(void *)(a11 - 8)) {
    operator delete((void *)(a11 - 8));
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::RepeatedField<double>::Swap(int *a1, int *a2)
{
  if (a1 != a2)
  {
    int v4 = (void **)(a1 + 2);
    if (a1[1]) {
      int v4 = (void **)((char *)*v4 - 8);
    }
    BOOL v5 = *v4;
    unsigned int v6 = (void *)*((void *)a2 + 1);
    if (a2[1]) {
      unsigned int v6 = (void *)*(v6 - 1);
    }
    if (v5 == v6)
    {
      uint64_t v12 = *(void *)a1;
      uint64_t v13 = *((void *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)a2 = v12;
      *((void *)a2 + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)__dst, *a1);
        uint64_t v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), 8 * v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)a1, *a2);
        uint64_t v8 = (void *)*((void *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), 8 * *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v11) = HIDWORD(__dst[0]);
      }
      else
      {
        unint64_t v9 = *(void *)a2;
        uint64_t v10 = (void *)*((void *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        unint64_t v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((void *)__dst[1] - 1)) {
        operator delete((char *)__dst[1] - 8);
      }
    }
  }
}

void sub_1892096FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, uint64_t a11)
{
  if (a10 >= 1 && !*(void *)(a11 - 8)) {
    operator delete((void *)(a11 - 8));
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(void *a1)
{
  int v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (uint64_t *)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        uint64_t v5 = *v3;
        if (*v3)
        {
          if (*(char *)(v5 + 23) < 0) {
            operator delete(*(void **)v5);
          }
          MEMORY[0x18C11F580](v5, 0x1012C40EC159624);
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::UnsafeArenaAddAllocated<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(unsigned int *this, uint64_t a2)
{
  uint64_t v3 = this;
  uint64_t v4 = (int *)*((void *)this + 2);
  if (!v4)
  {
    int v7 = this[2];
    int v5 = this[3];
    if (v7 > v5)
    {
      uint64_t v4 = 0;
LABEL_16:
      int v11 = *v4 + 1;
LABEL_17:
      *uint64_t v4 = v11;
      goto LABEL_18;
    }
    goto LABEL_14;
  }
  int v5 = this[2];
  unsigned int v6 = this[3];
  int v7 = v5;
  if (v5 == v6)
  {
LABEL_14:
    this = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, v5 - v7 + 1);
LABEL_15:
    uint64_t v4 = (int *)*((void *)v3 + 2);
    goto LABEL_16;
  }
  uint64_t v8 = *v4;
  if (v8 != v6)
  {
    if (v5 >= (int)v8)
    {
      int v11 = v8 + 1;
      goto LABEL_17;
    }
    *(void *)&v4[2 * v8 + 2] = *(void *)&v4[2 * v5 + 2];
    goto LABEL_15;
  }
  uint64_t v9 = *(void *)&v4[2 * v5 + 2];
  if (v9) {
    BOOL v10 = *(void *)this == 0;
  }
  else {
    BOOL v10 = 0;
  }
  if (v10)
  {
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    this = (unsigned int *)MEMORY[0x18C11F580](v9, 0x1012C40EC159624);
    uint64_t v4 = (int *)*((void *)v3 + 2);
  }
LABEL_18:
  uint64_t v12 = (int)v3[2];
  void v3[2] = v12 + 1;
  *(void *)&v4[2 * v12 + 2] = a2;
  return this;
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(google::protobuf::internal::RepeatedPtrFieldBase *this, int a2)
{
  int v2 = *((_DWORD *)this + 2);
  int v3 = *((_DWORD *)this + 3);
  int v4 = v2 + a2;
  int v5 = (unsigned int *)*((void *)this + 2);
  if (v3 < v2 + a2)
  {
    uint64_t v7 = *(void *)this;
    int v8 = 2 * v3;
    if (2 * v3 <= v4) {
      int v8 = v4;
    }
    if (v8 <= 4) {
      unsigned int v9 = 4;
    }
    else {
      unsigned int v9 = v8;
    }
    uint64_t v10 = 8 * v9;
    if (v7)
    {
      unint64_t v11 = (v10 + 15) & 0x7FFFFFFF8;
      if (*(unsigned char *)(v7 + 24)) {
        (*(void (**)(void, void, unint64_t))(**(void **)(*(void *)(v7 + 32) + 32) + 40))(*(void *)(*(void *)(v7 + 32) + 32), MEMORY[0x1E4FBA380], v11);
      }
      Aligned = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAligned((atomic_ullong *)v7, v11);
    }
    else
    {
      Aligned = (unsigned int *)operator new(v10 + 8);
    }
    *((void *)this + 2) = Aligned;
    *((_DWORD *)this + 3) = v9;
    if (v5 && (uint64_t v13 = *v5, (int)v13 >= 1))
    {
      memcpy(Aligned + 2, v5 + 2, 8 * v13);
      Aligned = (unsigned int *)*((void *)this + 2);
      unsigned int *Aligned = *v5;
      if (!v7) {
        goto LABEL_17;
      }
    }
    else
    {
      unsigned int *Aligned = 0;
      if (!v7)
      {
LABEL_17:
        operator delete(v5);
        Aligned = (unsigned int *)*((void *)this + 2);
      }
    }
    int v2 = *((_DWORD *)this + 2);
    int v5 = Aligned;
  }
  return &v5[2 * v2 + 2];
}

void google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(uint64_t a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  v17.__r_.__value_.__r.__words[2] = 0;
  *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v4;
  unsigned int v5 = *(_DWORD *)(a1 + 8);
  if (v5)
  {
    unsigned int v6 = (const std::string **)(*(void *)(a1 + 16) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v17, v5);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(&v17, (std::string **)v7, v6, v5, *(_DWORD *)v17.__r_.__value_.__r.__words[2] - LODWORD(v17.__r_.__value_.__r.__words[1]));
    signed int v8 = LODWORD(v17.__r_.__value_.__r.__words[1]) + v5;
    LODWORD(v17.__r_.__value_.__r.__words[1]) = v8;
    if (*(_DWORD *)v17.__r_.__value_.__r.__words[2] < v8) {
      *(_DWORD *)v17.__r_.__value_.__r.__words[2] = v8;
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(a1);
  uint64_t v10 = a2 + 1;
  unsigned int v9 = *((_DWORD *)a2 + 2);
  if (v9)
  {
    unint64_t v11 = (const std::string **)(a2[2] + 8);
    uint64_t v12 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)a1, v9);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)a1, (std::string **)v12, v11, v9, **(_DWORD **)(a1 + 16) - *(_DWORD *)(a1 + 8));
    signed int v13 = *(_DWORD *)(a1 + 8) + v9;
    *(_DWORD *)(a1 + 8) = v13;
    uint64_t v14 = *(signed int **)(a1 + 16);
    if (*v14 < v13) {
      signed int *v14 = v13;
    }
  }
  std::string::size_type v15 = *v10;
  std::string::size_type v16 = v10[1];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)&v17.__r_.__value_.__r.__words[1];
  v17.__r_.__value_.__l.__size_ = v15;
  v17.__r_.__value_.__r.__words[2] = v16;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(&v17);
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(unsigned int *result, uint64_t a2)
{
  if (*(void *)result) {
    return google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(result, a2, 0, *(google::protobuf::internal::ArenaImpl **)result);
  }
  int v2 = (int *)*((void *)result + 2);
  if (!v2) {
    return google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(result, a2, 0, *(google::protobuf::internal::ArenaImpl **)result);
  }
  uint64_t v3 = *v2;
  if ((int)v3 >= (int)result[3]) {
    return google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(result, a2, 0, *(google::protobuf::internal::ArenaImpl **)result);
  }
  unint64_t v4 = v2 + 2;
  uint64_t v5 = (int)result[2];
  if ((int)v5 < (int)v3) {
    *(void *)&v4[2 * v3] = *(void *)&v4[2 * v5];
  }
  *(void *)&v4[2 * v5] = a2;
  result[2] = v5 + 1;
  ++**((_DWORD **)result + 2);
  return result;
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(unsigned int *a1, uint64_t a2, google::protobuf::internal::ArenaImpl *a3, google::protobuf::internal::ArenaImpl *this)
{
  if (!a3 && this)
  {
    google::protobuf::Arena::Own<std::string>((char *)this, (void *)a2);
LABEL_9:
    AlignedAndAddCleanup = (std::string *)a2;
    goto LABEL_15;
  }
  if (this == a3) {
    goto LABEL_9;
  }
  if (!this) {
    operator new();
  }
  if (*((unsigned char *)this + 24)) {
  AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
  }
  AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
  AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
  AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
  std::string::operator=(AlignedAndAddCleanup, (const std::string *)a2);
  if (!a3)
  {
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    MEMORY[0x18C11F580](a2, 0x1012C40EC159624);
  }
LABEL_15:

  return google::protobuf::internal::RepeatedPtrFieldBase::UnsafeArenaAddAllocated<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(a1, (uint64_t)AlignedAndAddCleanup);
}

char *google::protobuf::Arena::Own<std::string>(char *result, void *a2)
{
  if (a2) {
    return google::protobuf::internal::ArenaImpl::AddCleanup((atomic_ullong *)result, a2, (void (*)(void *))google::protobuf::internal::arena_delete_object<std::string>);
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<std::string>(uint64_t result)
{
  if (result)
  {
    if (*(char *)(result + 23) < 0) {
      operator delete(*(void **)result);
    }
    JUMPOUT(0x18C11F580);
  }
  return result;
}

void google::protobuf::internal::VerifyVersion(google::protobuf::internal *this, int a2, const std::string::value_type *a3, const char *a4)
{
  int v5 = (int)this;
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  if (a2 > 3014000)
  {
    int v21 = 3;
    unint64_t v22 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/stubs/common.cc";
    int v23 = 78;
    memset(&v24, 0, sizeof(v24));
    std::string::append(&v24, "This program requires version ");
    google::protobuf::internal::VersionString((google::protobuf::internal *)&v18, a2);
    if ((v20 & 0x80u) == 0) {
      uint64_t v7 = (const std::string::value_type *)&v18;
    }
    else {
      uint64_t v7 = (const std::string::value_type *)v18;
    }
    if ((v20 & 0x80u) == 0) {
      std::string::size_type v8 = v20;
    }
    else {
      std::string::size_type v8 = v19;
    }
    std::string::append(&v24, v7, v8);
    std::string::append(&v24, " of the Protocol Buffer runtime library, but the installed version is ");
    snprintf(__str, 0x80uLL, "%d.%d.%d", 3, 14, 0);
    char v26 = 0;
    std::string::basic_string[abi:ne180100]<0>(&__p, __str);
    if ((v17 & 0x80u) == 0) {
      std::__split_buffer<std::string>::pointer p_p = (const std::string::value_type *)&__p;
    }
    else {
      std::__split_buffer<std::string>::pointer p_p = (const std::string::value_type *)__p;
    }
    if ((v17 & 0x80u) == 0) {
      std::string::size_type v10 = v17;
    }
    else {
      std::string::size_type v10 = v16;
    }
    std::string::append(&v24, p_p, v10);
    std::string::append(&v24, ".  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"");
    std::string::append(&v24, a3);
    std::string::append(&v24, "\".)");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v21);
    if ((char)v17 < 0) {
      operator delete(__p);
    }
    if ((char)v20 < 0) {
      operator delete(v18);
    }
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v24.__r_.__value_.__l.__data_);
    }
  }
  if (v5 < 3014000)
  {
    int v21 = 3;
    unint64_t v22 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/stubs/common.cc";
    int v23 = 89;
    memset(&v24, 0, sizeof(v24));
    std::string::append(&v24, "This program was compiled against version ");
    google::protobuf::internal::VersionString((google::protobuf::internal *)&v18, v5);
    if ((v20 & 0x80u) == 0) {
      unint64_t v11 = (const std::string::value_type *)&v18;
    }
    else {
      unint64_t v11 = (const std::string::value_type *)v18;
    }
    if ((v20 & 0x80u) == 0) {
      std::string::size_type v12 = v20;
    }
    else {
      std::string::size_type v12 = v19;
    }
    std::string::append(&v24, v11, v12);
    std::string::append(&v24, " of the Protocol Buffer runtime library, which is not compatible with the installed version (");
    snprintf(__str, 0x80uLL, "%d.%d.%d", 3, 14, 0);
    char v26 = 0;
    std::string::basic_string[abi:ne180100]<0>(&__p, __str);
    if ((v17 & 0x80u) == 0) {
      signed int v13 = (const std::string::value_type *)&__p;
    }
    else {
      signed int v13 = (const std::string::value_type *)__p;
    }
    if ((v17 & 0x80u) == 0) {
      std::string::size_type v14 = v17;
    }
    else {
      std::string::size_type v14 = v16;
    }
    std::string::append(&v24, v13, v14);
    std::string::append(&v24, ").  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"");
    std::string::append(&v24, a3);
    std::string::append(&v24, "\".)");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v21);
    if ((char)v17 < 0) {
      operator delete(__p);
    }
    if ((char)v20 < 0) {
      operator delete(v18);
    }
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v24.__r_.__value_.__l.__data_);
    }
  }
}

void sub_18920A020(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(exception_object);
}

void *google::protobuf::internal::VersionString(google::protobuf::internal *this, int a2)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  snprintf(__str, 0x80uLL, "%d.%d.%d", a2 / 1000000, a2 / 1000 % 1000, a2 % 1000);
  char __str[127] = 0;
  return std::string::basic_string[abi:ne180100]<0>(this, __str);
}

uint64_t google::protobuf::internal::DefaultLogHandler(uint64_t result, const char *a2, int a3, uint64_t a4)
{
  if ((result & 0x80000000) == 0)
  {
    unint64_t v4 = (FILE **)MEMORY[0x1E4F143C8];
    if (*(char *)(a4 + 23) >= 0) {
      uint64_t v5 = (const char *)a4;
    }
    else {
      uint64_t v5 = *(const char **)a4;
    }
    fprintf((FILE *)*MEMORY[0x1E4F143C8], "[libprotobuf %s %s:%d] %s\n", google::protobuf::internal::DefaultLogHandler(google::protobuf::LogLevel,char const*,int,std::string const&)::level_names[result], a2, a3, v5);
    unsigned int v6 = *v4;
    return fflush(v6);
  }
  return result;
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, google::protobuf::StringPiece *this)
{
  google::protobuf::StringPiece::ToString(this, __p);
  if ((v7 & 0x80u) == 0) {
    uint64_t v3 = __p;
  }
  else {
    uint64_t v3 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    std::string::size_type v4 = v7;
  }
  else {
    std::string::size_type v4 = (std::string::size_type)__p[1];
  }
  std::string::append(a1 + 1, (const std::string::value_type *)v3, v4);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
  return a1;
}

void sub_18920A248(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::LogMessage::Finish(google::protobuf::internal::LogMessage *this)
{
  uint64_t result = google::protobuf::internal::DefaultLogHandler(*(unsigned int *)this, *((const char **)this + 1), *((_DWORD *)this + 4), (uint64_t)this + 24);
  if (*(_DWORD *)this == 3)
  {
    exception = __cxa_allocate_exception(0x30uLL);
    google::protobuf::FatalException::FatalException((uint64_t)exception, *((void *)this + 1), *((_DWORD *)this + 4), (long long *)((char *)this + 24));
  }
  return result;
}

void sub_18920A2EC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::FatalException::FatalException(uint64_t a1, uint64_t a2, int a3, long long *a4)
{
  *(void *)a1 = &unk_1ED514BD8;
  *(void *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 16) = a3;
  uint64_t v5 = (std::string *)(a1 + 24);
  if (*((char *)a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v6 = *a4;
    v5->__r_.__value_.__r.__words[2] = *((void *)a4 + 2);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return a1;
}

void sub_18920A36C(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::FatalException::~FatalException(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&unk_1ED514BD8;
  if (SHIBYTE(this[5].__vftable) < 0) {
    operator delete(this[3].__vftable);
  }

  std::exception::~exception(this);
}

{
  uint64_t vars8;

  google::protobuf::FatalException::~FatalException(this);

  JUMPOUT(0x18C11F580);
}

uint64_t google::protobuf::FatalException::what(google::protobuf::FatalException *this)
{
  uint64_t result = (uint64_t)this + 24;
  if (*((char *)this + 47) < 0) {
    return *(void *)result;
  }
  return result;
}

std::string *google::protobuf::StripWhitespace(std::string *this)
{
  unint64_t v1 = this;
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
    std::string::size_type size = this->__r_.__value_.__l.__size_;
  }
  else {
    LODWORD(size) = HIBYTE(this->__r_.__value_.__r.__words[2]);
  }
  if ((int)size < 1)
  {
    if (size) {
      return this;
    }
    goto LABEL_24;
  }
  std::string::size_type v3 = 0;
  while (1)
  {
    this = (std::string *)std::string::at(v1, v3);
    int v4 = this->__r_.__value_.__s.__data_[0];
    if ((v4 - 9) >= 5 && v4 != 32) {
      break;
    }
    if (size == ++v3) {
      goto LABEL_24;
    }
  }
  if (size == v3)
  {
LABEL_24:
    if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
    {
      *v1->__r_.__value_.__l.__data_ = 0;
      v1->__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      v1->__r_.__value_.__s.__data_[0] = 0;
      *((unsigned char *)&v1->__r_.__value_.__s + 23) = 0;
    }
    return this;
  }
  if (v3)
  {
    this = std::string::erase(v1, 0, v3);
    LODWORD(size) = size - v3;
  }
  uint64_t v5 = (size - 1);
  if ((int)size >= 1)
  {
    uint64_t v6 = 0;
    while (1)
    {
      this = (std::string *)std::string::at(v1, v5 + v6);
      int v7 = this->__r_.__value_.__s.__data_[0];
      if ((v7 - 9) >= 5 && v7 != 32) {
        break;
      }
      --v6;
      if (v5 + v6 + 1 <= 0) {
        return this;
      }
    }
    if (v6)
    {
      return std::string::erase(v1, (v5 + v6 + 1), 0xFFFFFFFFFFFFFFFFLL);
    }
  }
  return this;
}

void google::protobuf::SplitStringUsing(unsigned __int8 *__src, unint64_t a2, char *__s, std::vector<std::string> *a4)
{
  int v7 = __src;
  v35[0] = __src;
  v35[1] = a2;
  int v8 = *__s;
  if (*__s && !__s[1])
  {
    if (a2)
    {
      uint64_t v25 = (char *)&__src[a2];
      char v26 = (char *)&__src[a2];
      do
      {
        if (*v7 == v8)
        {
          uint64_t v27 = v7 + 1;
        }
        else
        {
          uint64_t v28 = (char *)(v7 + 1);
          while (v28 != v25)
          {
            int v29 = *v28++;
            if (v29 == v8)
            {
              uint64_t v27 = (unsigned __int8 *)(v28 - 1);
              goto LABEL_35;
            }
          }
          uint64_t v27 = (unsigned __int8 *)v26;
LABEL_35:
          std::string::basic_string[abi:ne180100](__p, v7, v27 - v7);
          int v31 = a4;
          std::back_insert_iterator<std::vector<std::string>>::operator=[abi:ne180100](&v31, (long long *)__p);
          if (v34 < 0) {
            operator delete(__p[0]);
          }
        }
        int v7 = v27;
      }
      while (v27 != (unsigned __int8 *)v25);
    }
  }
  else
  {
    size_t v9 = strlen(__s);
    uint64_t v11 = v9;
    if ((v9 & 0x8000000000000000) != 0) {
      google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v9, "size_t to int conversion", v10);
    }
    uint64_t first_not_of = google::protobuf::StringPiece::find_first_not_of(v35, (unsigned __int8 *)__s, v11, 0);
    if (first_not_of != -1)
    {
      unint64_t v13 = first_not_of;
      while (1)
      {
        size_t v14 = strlen(__s);
        uint64_t v16 = v14;
        if ((v14 & 0x8000000000000000) != 0) {
          google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v14, "size_t to int conversion", v15);
        }
        uint64_t first_of = google::protobuf::StringPiece::find_first_of((google::protobuf::StringPiece *)v35, (unsigned __int8 *)__s, v16, v13);
        if (first_of == -1) {
          break;
        }
        uint64_t v18 = first_of;
        unint64_t v19 = first_of - v13;
        if (a2 >= v13) {
          unint64_t v20 = v13;
        }
        else {
          unint64_t v20 = a2;
        }
        if (a2 - v20 < v19) {
          unint64_t v19 = a2 - v20;
        }
        int v31 = (std::vector<std::string> *)&v7[v20];
        unint64_t v32 = v19;
        google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v31, __p);
        unint64_t v30 = a4;
        std::back_insert_iterator<std::vector<std::string>>::operator=[abi:ne180100](&v30, (long long *)__p);
        if (v34 < 0) {
          operator delete(__p[0]);
        }
        size_t v21 = strlen(__s);
        uint64_t v23 = v21;
        if ((v21 & 0x8000000000000000) != 0) {
          google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v21, "size_t to int conversion", v22);
        }
        unint64_t v13 = google::protobuf::StringPiece::find_first_not_of(v35, (unsigned __int8 *)__s, v23, v18);
        if (v13 == -1) {
          return;
        }
      }
      if (a2 >= v13) {
        unint64_t v24 = v13;
      }
      else {
        unint64_t v24 = a2;
      }
      int v31 = (std::vector<std::string> *)&v7[v24];
      unint64_t v32 = a2 - v24;
      google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v31, __p);
      unint64_t v30 = a4;
      std::back_insert_iterator<std::vector<std::string>>::operator=[abi:ne180100](&v30, (long long *)__p);
      if (v34 < 0) {
        operator delete(__p[0]);
      }
    }
  }
}

void sub_18920A7AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::UnescapeCEscapeSequences(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 == a2)
  {
    for (uint64_t i = a1; *i && *i != 92; ++i)
      ;
    a1 = i;
  }
  else
  {
    uint64_t i = a2;
  }
  while (1)
  {
    int v3 = *a1;
    if (v3 != 92)
    {
      if (!*a1) {
        goto LABEL_57;
      }
      goto LABEL_55;
    }
    int v4 = a1 + 1;
    int v3 = (char)a1[1];
    if (v3 <= 62) {
      break;
    }
    if (v3 > 97)
    {
      switch(a1[1])
      {
        case 'n':
          LOBYTE(v3) = 10;
          goto LABEL_54;
        case 'o':
        case 'p':
        case 'q':
        case 's':
        case 'u':
        case 'w':
          goto LABEL_56;
        case 'r':
          LOBYTE(v3) = 13;
          goto LABEL_54;
        case 't':
          LOBYTE(v3) = 9;
          goto LABEL_54;
        case 'v':
          LOBYTE(v3) = 11;
          goto LABEL_54;
        case 'x':
          goto LABEL_28;
        default:
          if (v3 == 102)
          {
            LOBYTE(v3) = 12;
          }
          else
          {
            if (v3 != 98) {
              goto LABEL_56;
            }
            LOBYTE(v3) = 8;
          }
          break;
      }
      goto LABEL_54;
    }
    if (v3 > 91)
    {
      if (v3 != 92)
      {
        if (v3 != 97) {
          goto LABEL_56;
        }
        LOBYTE(v3) = 7;
      }
LABEL_54:
      a1 = v4;
LABEL_55:
      *i++ = v3;
      int v4 = a1;
      goto LABEL_56;
    }
    if (v3 == 63) {
      goto LABEL_54;
    }
    if (v3 != 88) {
      goto LABEL_56;
    }
LABEL_28:
    if ((a1[2] - 48) < 0xAu || (unsigned int v11 = a1[2] - 65, v11 <= 0x25) && ((1 << v11) & 0x3F0000003FLL) != 0)
    {
      LOBYTE(v3) = 0;
      std::string::size_type v12 = a1 + 1;
      while (1)
      {
        unsigned __int8 v14 = *++v12;
        unsigned __int8 v13 = v14;
        if ((v14 - 48) >= 0xAu
          && (v13 - 65 > 0x25 || ((1 << (v13 - 65)) & 0x3F0000003FLL) == 0))
        {
          break;
        }
        unsigned int v16 = v13;
        char v17 = v13 + 9;
        if (v16 <= 0x39) {
          char v17 = v16;
        }
        int v4 = v12;
        LOBYTE(v3) = v17 & 0xF | (16 * v3);
      }
      goto LABEL_54;
    }
LABEL_56:
    a1 = v4 + 1;
  }
  if (v3 > 47)
  {
    if ((v3 - 48) >= 8) {
      goto LABEL_56;
    }
    LOBYTE(v3) = v3 - 48;
    unsigned __int8 v6 = a1[2];
    uint64_t v5 = a1 + 2;
    char v7 = v6 + 8 * v3 - 48;
    if ((v6 & 0xF8) == 0x30)
    {
      int v4 = v5;
      LOBYTE(v3) = v7;
    }
    unsigned __int8 v8 = v4[1];
    int v9 = v8 & 0xF8;
    char v10 = v8 + 8 * v3 - 48;
    if (v9 == 48) {
      a1 = v4 + 1;
    }
    else {
      a1 = v4;
    }
    if (v9 == 48) {
      LOBYTE(v3) = v10;
    }
    goto LABEL_55;
  }
  if (v3 == 34 || v3 == 39) {
    goto LABEL_54;
  }
  if (a1[1]) {
    goto LABEL_56;
  }
LABEL_57:
  *uint64_t i = 0;
  return (i - a2);
}

void google::protobuf::UnescapeCEscapeString()
{
}

void sub_18920AAB8(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F560](v1, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::CEscapeInternal(google::protobuf *this, const char *a2, uint64_t a3, char *a4, int a5, char a6)
{
  int v6 = (int)a4;
  if ((int)a2 >= 1)
  {
    char v9 = a5;
    char v10 = (unsigned __int8 *)this;
    char v11 = 0;
    LODWORD(v12) = 0;
    if (a5) {
      unsigned __int8 v13 = "\\x%02x";
    }
    else {
      unsigned __int8 v13 = "\\%03o";
    }
    unsigned __int8 v14 = (unsigned __int8 *)this + (int)a2;
    while (1)
    {
      if (v6 - (int)v12 < 2) {
        return 0xFFFFFFFFLL;
      }
      int v15 = (char)*v10;
      if (v15 > 33)
      {
        switch(v15)
        {
          case '""':
            char v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 8796;
            goto LABEL_20;
          case '\'':
            char v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 10076;
            goto LABEL_20;
          case '\\':
            char v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 23644;
            goto LABEL_20;
        }
      }
      else
      {
        switch(v15)
        {
          case 9:
            char v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 29788;
            goto LABEL_20;
          case 10:
            char v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 28252;
            goto LABEL_20;
          case 13:
            char v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 29276;
LABEL_20:
            uint64_t v12 = (v12 + 2);
            goto LABEL_21;
        }
      }
      if (v15 < 0 && (a6 & 1) != 0
        || (v15 - 32) <= 0x5E
        && ((v11 & 1) == 0
         || (v15 - 48) >= 0xA
         && (*v10 - 65 > 0x25 || ((1 << (v15 - 65)) & 0x3F0000003FLL) == 0)))
      {
        char v11 = 0;
        *(unsigned char *)(a3 + (int)v12) = v15;
        uint64_t v12 = (v12 + 1);
      }
      else
      {
        if ((v6 - v12) < 4) {
          return 0xFFFFFFFFLL;
        }
        sprintf((char *)(a3 + (int)v12), v13, *v10);
        uint64_t v12 = (v12 + 4);
        char v11 = v9;
      }
LABEL_21:
      if (++v10 >= v14) {
        goto LABEL_34;
      }
    }
  }
  uint64_t v12 = 0;
LABEL_34:
  if ((int)v12 >= v6) {
    return 0xFFFFFFFFLL;
  }
  *(unsigned char *)(a3 + (int)v12) = 0;
  return v12;
}

void google::protobuf::CEscapeAndAppend(std::string::value_type *__s, int64_t __n, std::string *this)
{
  int v3 = this;
  uint64_t v4 = __n;
  uint64_t v5 = __s;
  if (__n < 1)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = 0;
    char v7 = __s;
    int64_t v8 = __n;
    do
    {
      int v9 = *v7++;
      v6 += google::protobuf::CEscapedLength(google::protobuf::StringPiece)::c_escaped_len[v9];
      --v8;
    }
    while (v8);
  }
  if (v6 == __n)
  {
    std::string::append(this, __s, __n);
    return;
  }
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
    std::string::size_type size = this->__r_.__value_.__l.__size_;
  }
  else {
    std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  }
  std::string::resize(this, size + v6, 0);
  if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0) {
    int v3 = (std::string *)v3->__r_.__value_.__r.__words[0];
  }
  if (v4 >= 1)
  {
    char v11 = (char *)v3 + size;
    do
    {
      int v13 = *v5++;
      unsigned int v12 = v13;
      if (v13 > 33)
      {
        switch(v12)
        {
          case '""':
            *(_WORD *)char v11 = 8796;
            v11 += 2;
            break;
          case '\'':
            *(_WORD *)char v11 = 10076;
            v11 += 2;
            break;
          case '\\':
            *(_WORD *)char v11 = 23644;
            v11 += 2;
            break;
          default:
LABEL_30:
            if (v12 - 32 >= 0x5F)
            {
              *char v11 = 92;
              v11[1] = (v12 >> 6) | 0x30;
              void v11[2] = (v12 >> 3) & 7 | 0x30;
              void v11[3] = v12 & 7 | 0x30;
              v11 += 4;
            }
            else
            {
              *v11++ = v12;
            }
            break;
        }
      }
      else
      {
        switch(v12)
        {
          case 9u:
            *(_WORD *)char v11 = 29788;
            v11 += 2;
            break;
          case 0xAu:
            *(_WORD *)char v11 = 28252;
            v11 += 2;
            break;
          case 0xDu:
            *(_WORD *)char v11 = 29276;
            v11 += 2;
            break;
          default:
            goto LABEL_30;
        }
      }
      --v4;
    }
    while (v4);
  }
}

void google::protobuf::CEscape(uint64_t *a1@<X0>, const char *a2@<X2>, std::string *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v4, a1, a2);
  google::protobuf::CEscapeAndAppend(v4[0], (int64_t)v4[1], a3);
}

void sub_18920AEB4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::strings::Utf8SafeCEscape()
{
}

void sub_18920AF98(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F560](v1, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

unsigned char *google::protobuf::FastUInt32ToBufferLeft(google::protobuf *this, unsigned char *a2, char *a3)
{
  if (this >= 0x3B9ACA00)
  {
    unint64_t v3 = this / 0x5F5E100uLL;
    *(_WORD *)a2 = google::protobuf::two_ASCII_digits[v3];
    a2 += 2;
    goto LABEL_3;
  }
  if (this > 0x63)
  {
    if (this >> 4 <= 0x270)
    {
      if (this <= 0x3E7)
      {
        LODWORD(v6) = (unsigned __int16)this / 0x64u;
        *a2++ = v6 + 48;
        goto LABEL_9;
      }
LABEL_8:
      unint64_t v6 = this / 0x64uLL;
      *(_WORD *)a2 = google::protobuf::two_ASCII_digits[v6];
      a2 += 2;
LABEL_9:
      LODWORD((*(void (**)(void, google::protobuf::MapIterator *))(**((void **)this + 1) + 136))(*((void *)this + 1), this) = this - 100 * v6;
      goto LABEL_10;
    }
    if (this < 0xF4240)
    {
      if (this >> 5 <= 0xC34)
      {
        LODWORD(v5) = this / 0x2710;
        *a2++ = this / 0x2710 + 48;
        goto LABEL_7;
      }
LABEL_6:
      unint64_t v5 = this / 0x2710uLL;
      *(_WORD *)a2 = google::protobuf::two_ASCII_digits[v5];
      a2 += 2;
LABEL_7:
      LODWORD((*(void (**)(void, google::protobuf::MapIterator *))(**((void **)this + 1) + 136))(*((void *)this + 1), this) = this - 10000 * v5;
      goto LABEL_8;
    }
    if (this < 0x5F5E100)
    {
      if (this <= 0x98967F)
      {
        LODWORD(v4) = this / 0xF4240;
        *a2++ = this / 0xF4240 + 48;
        goto LABEL_5;
      }
LABEL_4:
      unint64_t v4 = this / 0xF4240uLL;
      *(_WORD *)a2 = google::protobuf::two_ASCII_digits[v4];
      a2 += 2;
LABEL_5:
      LODWORD((*(void (**)(void, google::protobuf::MapIterator *))(**((void **)this + 1) + 136))(*((void *)this + 1), this) = this - 1000000 * v4;
      goto LABEL_6;
    }
    LODWORD(v3) = this / 0x5F5E100;
    *a2++ = this / 0x5F5E100 + 48;
LABEL_3:
    LODWORD((*(void (**)(void, google::protobuf::MapIterator *))(**((void **)this + 1) + 136))(*((void *)this + 1), this) = this - 100000000 * v3;
    goto LABEL_4;
  }
  if (this <= 9)
  {
    *a2 = (_BYTE)this + 48;
    char v7 = a2 + 1;
    goto LABEL_11;
  }
LABEL_10:
  *(_WORD *)a2 = google::protobuf::two_ASCII_digits[this];
  char v7 = a2 + 2;
LABEL_11:
  *char v7 = 0;
  return v7;
}

unsigned char *google::protobuf::FastUInt64ToBufferLeft(google::protobuf *this, unsigned char *a2, char *a3)
{
  int v3 = (int)this;
  if ((unint64_t)this >> 32)
  {
    unint64_t v5 = (unint64_t)this / 0x3B9ACA00;
    unint64_t v6 = (_WORD *)google::protobuf::FastUInt64ToBufferLeft((google::protobuf *)((unint64_t)this / 0x3B9ACA00), (unint64_t)a2, a3);
    unsigned int v7 = v3 - 1000000000 * v5;
    _WORD *v6 = google::protobuf::two_ASCII_digits[v7 / 0x989680uLL];
    v7 %= 0x989680u;
    v6[1] = google::protobuf::two_ASCII_digits[v7 / 0x186A0uLL];
    v7 %= 0x186A0u;
    void v6[2] = google::protobuf::two_ASCII_digits[v7 / 0x3E8uLL];
    v7 %= 0x3E8u;
    void v6[3] = google::protobuf::two_ASCII_digits[v7 / 0xAuLL];
    v6[4] = (v7 % 0xA + 48);
    return (char *)v6 + 9;
  }
  else
  {
    return google::protobuf::FastUInt32ToBufferLeft(this, a2, a3);
  }
}

google::protobuf *google::protobuf::DoubleToBuffer(google::protobuf *this, double a2, char *a3)
{
  if (a2 == INFINITY)
  {
    int v5 = 6712937;
LABEL_5:
    *(_DWORD *)this = v5;
    return this;
  }
  if (a2 == -INFINITY)
  {
    *((unsigned char *)this + 4) = 0;
    int v5 = 1718511917;
    goto LABEL_5;
  }
  snprintf((char *)this, 0x20uLL, "%.*g", 15, a2);
  if (google::protobuf::internal::NoLocaleStrtod(this, 0, v7) != a2) {
    snprintf((char *)this, 0x20uLL, "%.*g", 17, a2);
  }
  AddrObjGoogle::protobuf::DelocalizeRadix(this, v8);
  return this;
}

google::protobuf *google::protobuf::FloatToBuffer(google::protobuf *this, float a2, char *a3)
{
  if (a2 == INFINITY)
  {
    int v5 = 6712937;
LABEL_5:
    *(_DWORD *)this = v5;
    return this;
  }
  if (a2 == -INFINITY)
  {
    *((unsigned char *)this + 4) = 0;
    int v5 = 1718511917;
    goto LABEL_5;
  }
  snprintf((char *)this, 0x18uLL, "%.*g", 6, a2);
  *(float *)int v9 = 0.0;
  if (!AddrObjGoogle::protobuf::safe_strtof(this, (float *)v9, v7) || *(float *)v9 != a2) {
    snprintf((char *)this, 0x18uLL, "%.*g", 9, a2);
  }
  AddrObjGoogle::protobuf::DelocalizeRadix(this, v8);
  return this;
}

double google::protobuf::internal::NoLocaleStrtod(google::protobuf::internal *this, char *a2, char **a3)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  unsigned int v16 = 0;
  double v5 = strtod((const char *)this, &v16);
  unint64_t v6 = v16;
  if (a2) {
    *(void *)a2 = v16;
  }
  if (*v6 == 46)
  {
    int v7 = snprintf(&__str, 0x10uLL, "%.1f", 1.5);
    if (__str != 49)
    {
      LODWORD(v17) = 3;
      uint64_t v18 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/stubs/strutil.cc";
      int v19 = 2425;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "CHECK failed: (temp[0]) == ('1'): ");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v17);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    if (v22[v7 - 2] != 53)
    {
      LODWORD(v17) = 3;
      uint64_t v18 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/stubs/strutil.cc";
      int v19 = 2426;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "CHECK failed: (temp[size - 1]) == ('5'): ");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v17);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    if (v7 >= 7)
    {
      LODWORD(v17) = 3;
      uint64_t v18 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/stubs/strutil.cc";
      int v19 = 2427;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "CHECK failed: (size) <= (6): ");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v17);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    memset(&v15, 0, sizeof(v15));
    size_t v8 = strlen((const char *)this);
    std::string::reserve(&v15, v8 + v7 - 3);
    std::string::append[abi:ne180100]<char const*,0>(&v15, (char *)this, v6);
    std::string::append(&v15, v22, v7 - 2);
    int v9 = v6 + 1;
    char v10 = &v15;
    std::string::append(&v15, v9);
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      char v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    char v17 = 0;
    double v5 = strtod((const char *)v10, &v17);
    char v11 = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    if (a2 && v17 - (char *)v10 > v16 - (char *)this)
    {
      int v12 = strlen((const char *)this);
      if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v13 = HIBYTE(v15.__r_.__value_.__r.__words[2]);
      }
      else {
        int v13 = v15.__r_.__value_.__r.__words[1];
      }
      *(void *)a2 = (char *)this + v17 - ((char *)v10 + v13 - v12);
    }
    if (v11 < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
  }
  return v5;
}

void sub_18920B6E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::safe_strto32(uint64_t a1, int *a2)
{
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __p = *(std::string *)a1;
  }
  uint64_t v3 = google::protobuf::safe_int_internal<int>(&__p, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v3;
}

void sub_18920B7A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::safe_int_internal<int>(std::string *__str, int *a2)
{
  *a2 = 0;
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    unint64_t v4 = (std::string *)__str->__r_.__value_.__r.__words[0];
    int64_t size = __str->__r_.__value_.__l.__size_;
  }
  else
  {
    unint64_t v4 = __str;
    int64_t size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  }
  unint64_t v6 = (char *)v4 + size;
  int v7 = v4;
  if (size >= 1)
  {
    int v7 = v4;
    do
    {
      if (v7->__r_.__value_.__s.__data_[0] != 32) {
        break;
      }
      int v7 = (std::string *)((char *)v7 + 1);
    }
    while (v7 < (std::string *)v6);
  }
  uint64_t v8 = (uint64_t)v4->__r_.__value_.__r.__words + size + 1;
  do
  {
    if (v7 >= (std::string *)v6) {
      return 0;
    }
    int v9 = *--v6;
    --v8;
  }
  while (v9 == 32);
  int v10 = v7->__r_.__value_.__s.__data_[0];
  if (v10 == 45 || v10 == 43)
  {
    int v7 = (std::string *)((char *)v7 + 1);
    if (v7 >= (std::string *)(v6 + 1)) {
      return 0;
    }
  }
  char v11 = __str;
  if ((*((unsigned char *)&__str->__r_.__value_.__s + 23) & 0x80) != 0) {
    char v11 = (std::string *)__str->__r_.__value_.__r.__words[0];
  }
  std::string::basic_string(&v31, __str, (char *)v7 - (char *)v11, v8 - (void)v7, (std::allocator<char> *)&v32);
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str->__r_.__value_.__l.__data_);
  }
  *(_OWORD *)&__str->__r_.__value_.__l.__data_ = *(_OWORD *)&v31.__r_.__value_.__l.__data_;
  unint64_t v12 = v31.__r_.__value_.__r.__words[2];
  __str->__r_.__value_.__r.__words[2] = v31.__r_.__value_.__r.__words[2];
  int64_t v13 = HIBYTE(v12);
  if (v10 == 45)
  {
    if ((v13 & 0x80u) == 0) {
      unsigned __int8 v14 = __str;
    }
    else {
      unsigned __int8 v14 = (std::string *)__str->__r_.__value_.__r.__words[0];
    }
    if ((v13 & 0x80u) == 0) {
      int64_t v15 = v13;
    }
    else {
      int64_t v15 = __str->__r_.__value_.__l.__size_;
    }
    if (v15 < 1)
    {
      int v16 = 0;
LABEL_37:
      uint64_t v20 = 1;
    }
    else
    {
      int v16 = 0;
      char v17 = (std::string *)((char *)v14 + v15);
      while (1)
      {
        int v18 = v14->__r_.__value_.__s.__data_[0];
        if ((v18 - 58) < 0xFFFFFFF6) {
          break;
        }
        if (v16 < -214748364 || (int v19 = 10 * v16, v19 < v18 + 2147483600))
        {
          uint64_t v20 = 0;
          int v16 = 0x80000000;
          goto LABEL_54;
        }
        int v16 = v19 - v18 + 48;
        unsigned __int8 v14 = (std::string *)((char *)v14 + 1);
        if (v14 >= v17) {
          goto LABEL_37;
        }
      }
      uint64_t v20 = 0;
    }
LABEL_54:
    *a2 = v16;
  }
  else
  {
    if ((v13 & 0x80) != 0) {
      std::string::__init_copy_ctor_external(&v30, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
    }
    else {
      std::string v30 = *__str;
    }
    int v22 = SHIBYTE(v30.__r_.__value_.__r.__words[2]);
    int64_t v24 = v30.__r_.__value_.__l.__size_;
    uint64_t v23 = (void *)v30.__r_.__value_.__r.__words[0];
    uint64_t v25 = &v30;
    if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int64_t v24 = HIBYTE(v30.__r_.__value_.__r.__words[2]);
    }
    else {
      uint64_t v25 = (std::string *)v30.__r_.__value_.__r.__words[0];
    }
    if (v24 < 1)
    {
      int v26 = 0;
LABEL_50:
      uint64_t v20 = 1;
    }
    else
    {
      int v26 = 0;
      uint64_t v27 = (std::string *)((char *)v25 + v24);
      while (1)
      {
        int v28 = v25->__r_.__value_.__s.__data_[0];
        if ((v28 - 58) < 0xFFFFFFF6) {
          break;
        }
        if (v26 > 214748364 || (int v29 = 10 * v26, v29 > -2147483601 - v28))
        {
          uint64_t v20 = 0;
          int v26 = 0x7FFFFFFF;
          goto LABEL_56;
        }
        int v26 = v29 + v28 - 48;
        uint64_t v25 = (std::string *)((char *)v25 + 1);
        if (v25 >= v27) {
          goto LABEL_50;
        }
      }
      uint64_t v20 = 0;
    }
LABEL_56:
    *a2 = v26;
    if (v22 < 0) {
      operator delete(v23);
    }
  }
  return v20;
}

void google::protobuf::StrCat(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  double v5 = a3;
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  std::string::resize(a3, *(void *)(a2 + 8) + *(void *)(a1 + 8), 0);
  if ((v5->__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    double v5 = (std::string *)v5->__r_.__value_.__r.__words[0];
  }
  size_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    memcpy(v5, *(const void **)a1, v6);
    double v5 = (std::string *)((char *)v5 + *(void *)(a1 + 8));
  }
  size_t v7 = *(void *)(a2 + 8);
  if (v7)
  {
    uint64_t v8 = *(const void **)a2;
    memcpy(v5, v8, v7);
  }
}

void sub_18920BAFC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::StrCat(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, std::string *a4@<X8>)
{
  size_t v7 = a4;
  a4->__r_.__value_.__r.__words[0] = 0;
  a4->__r_.__value_.__l.__size_ = 0;
  a4->__r_.__value_.__r.__words[2] = 0;
  std::string::resize(a4, *(void *)(a2 + 8) + *(void *)(a1 + 8) + *(void *)(a3 + 8), 0);
  if ((v7->__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    size_t v7 = (std::string *)v7->__r_.__value_.__r.__words[0];
  }
  size_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    memcpy(v7, *(const void **)a1, v8);
    size_t v7 = (std::string *)((char *)v7 + *(void *)(a1 + 8));
  }
  size_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    memcpy(v7, *(const void **)a2, v9);
    size_t v7 = (std::string *)((char *)v7 + *(void *)(a2 + 8));
  }
  size_t v10 = *(void *)(a3 + 8);
  if (v10)
  {
    char v11 = *(const void **)a3;
    memcpy(v7, v11, v10);
  }
}

void sub_18920BBEC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

char *google::protobuf::Append4(char *__dst, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  size_t v8 = __dst;
  size_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    memcpy(__dst, *(const void **)a2, v9);
    v8 += *(void *)(a2 + 8);
  }
  size_t v11 = *(void *)(a3 + 8);
  if (v11)
  {
    memcpy(v8, *(const void **)a3, v11);
    v8 += *(void *)(a3 + 8);
  }
  size_t v12 = *(void *)(a4 + 8);
  if (v12)
  {
    memcpy(v8, *(const void **)a4, v12);
    v8 += *(void *)(a4 + 8);
  }
  size_t v13 = *(void *)(a5 + 8);
  if (v13)
  {
    memcpy(v8, *(const void **)a5, v13);
    v8 += *(void *)(a5 + 8);
  }
  return v8;
}

char *google::protobuf::StrCat@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)a7 = 0;
  *(void *)(a7 + 8) = 0;
  *(void *)(a7 + 16) = 0;
  std::string::resize((std::string *)a7, *(void *)(a2 + 8)+ *(void *)(a1 + 8)+ *(void *)(a3 + 8)+ *(void *)(a4 + 8)+ *(void *)(a5 + 8)+ *(void *)(a6 + 8), 0);
  if (*(char *)(a7 + 23) >= 0) {
    unsigned __int8 v14 = (char *)a7;
  }
  else {
    unsigned __int8 v14 = *(char **)a7;
  }
  uint64_t result = google::protobuf::Append4(v14, a1, a2, a3, a4);
  int v16 = result;
  size_t v17 = *(void *)(a5 + 8);
  if (v17)
  {
    uint64_t result = (char *)memcpy(result, *(const void **)a5, v17);
    v16 += *(void *)(a5 + 8);
  }
  size_t v18 = *(void *)(a6 + 8);
  if (v18)
  {
    int v19 = *(const void **)a6;
    return (char *)memcpy(v16, v19, v18);
  }
  return result;
}

void sub_18920BDC8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::Message::MergeFrom(google::protobuf::Message *this, const google::protobuf::Message *a2)
{
  uint64_t v4 = (*(uint64_t (**)(google::protobuf::Message *))(*(void *)this + 152))(this);
  if ((*(uint64_t (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2) != v4)
  {
    int v15 = 3;
    int v16 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/message.cc";
    int v17 = 83;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (from.GetDescriptor()) == (descriptor): ");
    std::string::append(&__p, ": Tried to merge from a message with a different type.  to: ");
    uint64_t v6 = *(void *)(v4 + 8);
    int v7 = *(char *)(v6 + 23);
    if (v7 >= 0) {
      size_t v8 = *(const std::string::value_type **)(v4 + 8);
    }
    else {
      size_t v8 = *(const std::string::value_type **)v6;
    }
    if (v7 >= 0) {
      std::string::size_type v9 = *(unsigned __int8 *)(v6 + 23);
    }
    else {
      std::string::size_type v9 = *(void *)(v6 + 8);
    }
    std::string::append(&__p, v8, v9);
    std::string::append(&__p, ", from: ");
    uint64_t v10 = (*(uint64_t (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2);
    uint64_t v11 = *(void *)(v10 + 8);
    int v12 = *(char *)(v11 + 23);
    if (v12 >= 0) {
      size_t v13 = *(const std::string::value_type **)(v10 + 8);
    }
    else {
      size_t v13 = *(const std::string::value_type **)v11;
    }
    if (v12 >= 0) {
      std::string::size_type v14 = *(unsigned __int8 *)(v11 + 23);
    }
    else {
      std::string::size_type v14 = *(void *)(v11 + 8);
    }
    std::string::append(&__p, v13, v14);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v15);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  google::protobuf::internal::ReflectionOps::Merge(a2, this, v5);
}

void sub_18920BF60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::Message::CheckTypeAndMergeFrom(google::protobuf::Message *this, const google::protobuf::MessageLite *a2)
{
  return (*(uint64_t (**)(google::protobuf::Message *, const google::protobuf::MessageLite *))(*(void *)this + 120))(this, a2);
}

void google::protobuf::Message::CopyFrom(google::protobuf::Message *this, const google::protobuf::Message *a2)
{
  uint64_t v4 = (*(uint64_t (**)(google::protobuf::Message *))(*(void *)this + 152))(this);
  if ((*(uint64_t (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2) != v4)
  {
    int v16 = 3;
    int v17 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/message.cc";
    int v18 = 99;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (from.GetDescriptor()) == (descriptor): ");
    std::string::append(&__p, ": Tried to copy from a message with a different type. to: ");
    uint64_t v6 = *(void *)(v4 + 8);
    int v7 = *(char *)(v6 + 23);
    size_t v8 = v7 >= 0 ? *(const std::string::value_type **)(v4 + 8) : *(const std::string::value_type **)v6;
    std::string::size_type v9 = v7 >= 0 ? *(unsigned __int8 *)(v6 + 23) : *(void *)(v6 + 8);
    std::string::append(&__p, v8, v9);
    std::string::append(&__p, ", from: ");
    uint64_t v10 = (*(uint64_t (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2);
    uint64_t v11 = *(void *)(v10 + 8);
    int v12 = *(char *)(v11 + 23);
    size_t v13 = v12 >= 0 ? *(const std::string::value_type **)(v10 + 8) : *(const std::string::value_type **)v11;
    std::string::size_type v14 = v12 >= 0 ? *(unsigned __int8 *)(v11 + 23) : *(void *)(v11 + 8);
    std::string::append(&__p, v13, v14);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v16);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (a2 != this)
  {
    google::protobuf::internal::ReflectionOps::Clear(this, v5);
    google::protobuf::internal::ReflectionOps::Merge(a2, this, v15);
  }
}

void sub_18920C130(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::Message::GetTypeName(google::protobuf::Message *this@<X0>, std::string *a2@<X8>)
{
  uint64_t v3 = *(long long **)((*(uint64_t (**)(google::protobuf::Message *))(*(void *)this + 152))(this) + 8);
  if (*((char *)v3 + 23) < 0)
  {
    double v5 = *(const std::string::value_type **)v3;
    std::string::size_type v6 = *((void *)v3 + 1);
    std::string::__init_copy_ctor_external(a2, v5, v6);
  }
  else
  {
    long long v4 = *v3;
    a2->__r_.__value_.__r.__words[2] = *((void *)v3 + 2);
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = v4;
  }
}

void google::protobuf::Message::FindInitializationErrors(google::protobuf::internal *a1, uint64_t a2)
{
  std::string::basic_string[abi:ne180100]<0>(__p, (char *)&str_5_2);
  google::protobuf::internal::ReflectionOps::FindInitializationErrors(a1, (const void **)__p, a2);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_18920C238(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::Message::InitializationErrorString(google::protobuf::Message *this@<X0>, std::string *a2@<X8>)
{
  memset(v3, 0, sizeof(v3));
  google::protobuf::Message::FindInitializationErrors(this, (uint64_t)v3);
  google::protobuf::Join<std::vector<std::string>>(", ", v3, a2);
  long long v4 = v3;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v4);
}

void sub_18920C2BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Message::ByteSizeLong(google::protobuf::Message *this, const google::protobuf::Message *a2)
{
  uint64_t v3 = google::protobuf::internal::WireFormat::ByteSize(this, a2);
  (*(void (**)(google::protobuf::Message *, uint64_t))(*(void *)this + 144))(this, v3);
  return v3;
}

uint64_t google::protobuf::Message::SpaceUsedLong(google::protobuf::Message *this)
{
  (*(void (**)(google::protobuf::Message *))(*(void *)this + 152))(this);

  return google::protobuf::Reflection::SpaceUsedLong(v2, this);
}

uint64_t google::protobuf::anonymous namespace'::GeneratedMessageFactory::singleton(google::protobuf::_anonymous_namespace_::GeneratedMessageFactory *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29F300, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1EB29F300))
  {
    operator new();
  }
  return _MergedGlobals_175;
}

void sub_18920C478(_Unwind_Exception *a1)
{
}

void google::protobuf::MessageFactory::InternalRegisterGeneratedFile(const char **a1)
{
               + 8);
  google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)&v7, a1[2]);
  long long v4 = v7;
  char v5 = a1;
  std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::internal::DescriptorTable const*>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::internal::DescriptorTable const*>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::internal::DescriptorTable const*>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::internal::DescriptorTable const*>>>::__emplace_unique_key_args<google::protobuf::StringPiece,std::pair<google::protobuf::StringPiece const,google::protobuf::internal::DescriptorTable const*> const&>(v2, (char **)&v4, (uint64_t)&v4);
  if ((v3 & 1) == 0)
  {
    LODWORD(v4) = 3;
    *((void *)&v4 + 1) = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/message.cc";
    LODWORD(v5) = 211;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "File is already registered: ");
    std::string::append(&__p, a1[2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_18920C554(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(const std::string::value_type **this, const google::protobuf::Descriptor *a2, const google::protobuf::Message *a3)
{
  *(void *)&long long v11 = this;
  *((void *)&v11 + 1) = a2;
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::__emplace_unique_key_args<google::protobuf::Descriptor const*,std::pair<google::protobuf::Descriptor const* const,google::protobuf::Message const*> const&>((float *)(v5 + 112), &v11, &v11);
  if ((v6 & 1) == 0)
  {
    LODWORD(v11) = 2;
    *((void *)&v11 + 1) = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/message.cc";
    int v12 = 226;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Type is already registered: ");
    long long v7 = this[1];
    int v8 = v7[23];
    if (v8 >= 0) {
      std::string::size_type v9 = this[1];
    }
    else {
      std::string::size_type v9 = *(const std::string::value_type **)v7;
    }
    if (v8 >= 0) {
      std::string::size_type v10 = *((unsigned __int8 *)v7 + 23);
    }
    else {
      std::string::size_type v10 = *((void *)v7 + 1);
    }
    std::string::append(&__p, v9, v10);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v11);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_18920C634(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *google::protobuf::Reflection::RepeatedFieldAccessor(google::protobuf::Reflection *this, const google::protobuf::FieldDescriptor *a2)
{
  if (*((_DWORD *)a2 + 15) != 3)
  {
    LODWORD(v10) = 3;
    long long v11 = (const google::protobuf::FieldDescriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/"
                                                      "google/protobuf/message.cc";
    int v12 = 298;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: field->is_repeated(): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v10);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  char v3 = (std::once_flag::_State_type *)*((void *)a2 + 6);
  if (v3)
  {
    std::string::size_type v14 = a2;
    int v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v3, memory_order_acquire) != -1)
    {
      std::string::size_type v10 = &v15;
      long long v11 = &v14;
      int v16 = &v10;
      std::__call_once(v3, &v16, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v4 = *((_DWORD *)a2 + 14);
  switch(v4)
  {
    case 1:
      uint64_t result = &qword_1EB29F358;
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29F360, memory_order_acquire) & 1) == 0)
      {
        char v6 = &qword_1EB29F358;
        if (!__cxa_guard_acquire(&qword_1EB29F360)) {
          return v6;
        }
        long long v7 = &unk_1ED515F78;
        goto LABEL_46;
      }
      return result;
    case 2:
      uint64_t result = &qword_1EB29F348;
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29F350, memory_order_acquire) & 1) == 0)
      {
        char v6 = &qword_1EB29F348;
        if (!__cxa_guard_acquire(&qword_1EB29F350)) {
          return v6;
        }
        long long v7 = &unk_1ED516018;
        goto LABEL_46;
      }
      return result;
    case 3:
    case 16:
    case 18:
      uint64_t result = &qword_1EB29F328;
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29F330, memory_order_acquire) & 1) == 0)
      {
        char v6 = &qword_1EB29F328;
        if (!__cxa_guard_acquire(&qword_1EB29F330)) {
          return v6;
        }
        long long v7 = &unk_1ED5161F8;
        goto LABEL_46;
      }
      return result;
    case 4:
    case 6:
      uint64_t result = &qword_1EB29F338;
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29F340, memory_order_acquire) & 1) == 0)
      {
        char v6 = &qword_1EB29F338;
        if (!__cxa_guard_acquire(&qword_1EB29F340)) {
          return v6;
        }
        long long v7 = &unk_1ED516298;
        goto LABEL_46;
      }
      return result;
    case 5:
    case 14:
    case 15:
    case 17:
      return &qword_1EB29F308;
    case 7:
    case 13:
      uint64_t result = &qword_1EB29F318;
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29F320, memory_order_acquire) & 1) == 0)
      {
        char v6 = &qword_1EB29F318;
        if (!__cxa_guard_acquire(&qword_1EB29F320)) {
          return v6;
        }
        long long v7 = &unk_1ED516158;
        goto LABEL_46;
      }
      return result;
    case 8:
      uint64_t result = &qword_1EB29F368;
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29F370, memory_order_acquire) & 1) == 0)
      {
        char v6 = &qword_1EB29F368;
        if (!__cxa_guard_acquire(&qword_1EB29F370)) {
          return v6;
        }
        long long v7 = &unk_1ED515ED8;
        goto LABEL_46;
      }
      return result;
    case 9:
    case 12:
      uint64_t result = &qword_1EB29F378;
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29F380, memory_order_acquire) & 1) == 0)
      {
        char v6 = &qword_1EB29F378;
        if (!__cxa_guard_acquire(&qword_1EB29F380)) {
          return v6;
        }
        long long v7 = &unk_1ED516338;
        goto LABEL_46;
      }
      return result;
    case 10:
    case 11:
      int v8 = (std::once_flag::_State_type *)*((void *)a2 + 6);
      if (v8)
      {
        std::string::size_type v14 = a2;
        int v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
        {
          std::string::size_type v10 = &v15;
          long long v11 = &v14;
          int v16 = &v10;
          std::__call_once(v8, &v16, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        int v4 = *((_DWORD *)a2 + 14);
      }
      if (v4 == 11 && *(unsigned char *)(*(void *)(*((void *)a2 + 13) + 32) + 75))
      {
        uint64_t result = &qword_1EB29F388;
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29F390, memory_order_acquire) & 1) == 0)
        {
          char v6 = &qword_1EB29F388;
          if (__cxa_guard_acquire(&qword_1EB29F390))
          {
            qword_1EB29F388 = (uint64_t)&unk_1ED515DD0;
            __cxa_atexit((void (*)(void *))google::protobuf::internal::MapFieldAccessor::~MapFieldAccessor, &qword_1EB29F388, &dword_188D96000);
            std::string::size_type v9 = &qword_1EB29F390;
LABEL_47:
            __cxa_guard_release(v9);
            return v6;
          }
          return v6;
        }
      }
      else
      {
        uint64_t result = &qword_1EB29F398;
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29F3A0, memory_order_acquire) & 1) == 0)
        {
          char v6 = &qword_1EB29F398;
          if (__cxa_guard_acquire(&qword_1EB29F3A0))
          {
            long long v7 = &unk_1ED5163E0;
LABEL_46:
            uint64_t *v6 = (uint64_t)v7;
            std::string::size_type v9 = v6 + 1;
            goto LABEL_47;
          }
          return v6;
        }
      }
      return result;
    default:
      LODWORD(v10) = 3;
      long long v11 = (const google::protobuf::FieldDescriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/sr"
                                                        "c/google/protobuf/message.cc";
      int v12 = 326;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Should not reach here.");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v10);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      return 0;
  }
}

void sub_18920CAB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::anonymous namespace'::GetSingleton<google::protobuf::internal::RepeatedFieldPrimitiveAccessor<int>>()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29F310, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1EB29F310))
  {
    qword_1EB29F308 = (uint64_t)&unk_1ED5160B8;
    __cxa_guard_release(&qword_1EB29F310);
  }
}

uint64_t google::protobuf::internal::OnShutdownDelete<google::protobuf::anonymous namespace'::GeneratedMessageFactory>(google::protobuf::anonymous namespace'::GeneratedMessageFactory *)::{lambda(void const*)#1}::__invoke(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void google::protobuf::anonymous namespace'::GeneratedMessageFactory::~GeneratedMessageFactory(google::protobuf::_anonymous_namespace_::GeneratedMessageFactory *this)
{
  *(void *)this = &unk_1ED5149B8;
  int v2 = (char *)this + 8;
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)this + 112);
  std::mutex::~mutex((std::mutex *)((char *)this + 48));
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)v2);
}

{
  char *v2;
  uint64_t vars8;

  *(void *)this = &unk_1ED5149B8;
  int v2 = (char *)this + 8;
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)this + 112);
  std::mutex::~mutex((std::mutex *)((char *)this + 48));
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)v2);

  JUMPOUT(0x18C11F580);
}

uint64_t google::protobuf::anonymous namespace'::GeneratedMessageFactory::GetPrototype(int8x8_t *this, const google::protobuf::Descriptor *a2)
{
  int v4 = (std::mutex *)&this[6];
  std::mutex::lock((std::mutex *)&this[6]);
  uint64_t v5 = this + 14;
  char v6 = std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::find<google::protobuf::Descriptor const*>(&this[14], (unint64_t)a2);
  if (v6)
  {
    uint64_t v7 = v6[3];
    std::mutex::unlock(v4);
    if (v7) {
      return v7;
    }
  }
  else
  {
    std::mutex::unlock(v4);
  }
  uint64_t v9 = *(void *)(*((void *)a2 + 2) + 16);
  uint64_t v10 = google::protobuf::DescriptorPool::internal_generated_pool(v8);
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  if (v9 != v10) {
    return 0;
  }
  long long v11 = (const char *)**((void **)a2 + 2);
  if (v11[23] < 0) {
    long long v11 = *(const char **)v11;
  }
  google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)&v37, v11);
  int v12 = v37;
  int64_t v13 = v38;
  if (v38 < 1)
  {
    unint64_t v14 = 0;
  }
  else
  {
    unint64_t v14 = 0;
    int v15 = v37;
    do
    {
      uint64_t v16 = *v15++;
      unint64_t v14 = 5 * v14 + v16;
    }
    while (v15 < &v37[v38]);
  }
  int8x8_t v17 = this[2];
  if (!*(void *)&v17) {
    goto LABEL_32;
  }
  uint8x8_t v18 = (uint8x8_t)vcnt_s8(v17);
  v18.i16[0] = vaddlv_u8(v18);
  unint64_t v19 = v18.u32[0];
  if (v18.u32[0] > 1uLL)
  {
    unint64_t v20 = v14;
    if (v14 >= *(void *)&v17) {
      unint64_t v20 = v14 % *(void *)&v17;
    }
  }
  else
  {
    unint64_t v20 = (*(void *)&v17 - 1) & v14;
  }
  size_t v21 = *(void **)(*(void *)&this[1] + 8 * v20);
  if (!v21 || (int v22 = (void *)*v21) == 0)
  {
LABEL_32:
    LODWORD(v37) = 2;
    uint64_t v38 = (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/message.cc";
    int v39 = 246;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "File appears to be in generated pool but wasn't registered: ");
    uint64_t v25 = **((void **)a2 + 2);
    int v26 = *(char *)(v25 + 23);
    if (v26 >= 0) {
      uint64_t v27 = (const std::string::value_type *)**((void **)a2 + 2);
    }
    else {
      uint64_t v27 = *(const std::string::value_type **)v25;
    }
    if (v26 >= 0) {
      std::string::size_type v28 = *(unsigned __int8 *)(v25 + 23);
    }
    else {
      std::string::size_type v28 = *(void *)(v25 + 8);
    }
    std::string::append(&__p, v27, v28);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v37);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    return 0;
  }
  while (1)
  {
    unint64_t v23 = v22[1];
    if (v23 == v14) {
      break;
    }
    if (v19 > 1)
    {
      if (v23 >= *(void *)&v17) {
        v23 %= *(void *)&v17;
      }
    }
    else
    {
      v23 &= *(void *)&v17 - 1;
    }
    if (v23 != v20) {
      goto LABEL_32;
    }
LABEL_31:
    int v22 = (void *)*v22;
    if (!v22) {
      goto LABEL_32;
    }
  }
  if (v22[3] != v13) {
    goto LABEL_31;
  }
  if (v13 >= 1)
  {
    int64_t v24 = (const void *)v22[2];
    if (v12 != v24)
    {
      if (memcmp(v24, v12, v13)) {
        goto LABEL_31;
      }
    }
  }
  uint64_t v30 = v22[4];
  if (!v30) {
    goto LABEL_32;
  }
  std::mutex::lock(v4);
  std::string v31 = std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::find<google::protobuf::Descriptor const*>(v5, (unint64_t)a2);
  if (!v31 || (uint64_t v7 = v31[3]) == 0)
  {
    google::protobuf::internal::RegisterFileLevelMetadata(v30);
    char v32 = std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::find<google::protobuf::Descriptor const*>(v5, (unint64_t)a2);
    if (!v32 || (uint64_t v7 = v32[3]) == 0)
    {
      LODWORD(v37) = 2;
      uint64_t v38 = (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/message.cc";
      int v39 = 264;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Type appears to be in generated pool but wasn't ");
      std::string::append(&__p, "registered: ");
      uint64_t v33 = *((void *)a2 + 1);
      int v34 = *(char *)(v33 + 23);
      if (v34 >= 0) {
        uint64_t v35 = (const std::string::value_type *)*((void *)a2 + 1);
      }
      else {
        uint64_t v35 = *(const std::string::value_type **)v33;
      }
      if (v34 >= 0) {
        std::string::size_type v36 = *(unsigned __int8 *)(v33 + 23);
      }
      else {
        std::string::size_type v36 = *(void *)(v33 + 8);
      }
      std::string::append(&__p, v35, v36);
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v37);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      uint64_t v7 = 0;
    }
  }
  std::mutex::unlock(v4);
  return v7;
}

void sub_18920CFAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  std::mutex::unlock(v19);
  _Unwind_Resume(a1);
}

void *std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::find<google::protobuf::Descriptor const*>(void *a1, unint64_t a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = 0x9DDFEA08EB382D69 * (((8 * a2) + 8) ^ HIDWORD(a2));
  unint64_t v4 = 0x9DDFEA08EB382D69 * (HIDWORD(a2) ^ (v3 >> 47) ^ v3);
  unint64_t v5 = 0x9DDFEA08EB382D69 * (v4 ^ (v4 >> 47));
  uint8x8_t v6 = (uint8x8_t)vcnt_s8(v2);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    unint64_t v7 = v5;
    if (v5 >= *(void *)&v2) {
      unint64_t v7 = v5 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v7 = (*(void *)&v2 - 1) & v5;
  }
  int v8 = *(void **)(*a1 + 8 * v7);
  if (!v8) {
    return 0;
  }
  uint64_t result = (void *)*v8;
  if (*v8)
  {
    do
    {
      unint64_t v10 = result[1];
      if (v10 == v5)
      {
        if (result[2] == a2) {
          return result;
        }
      }
      else
      {
        if (v6.u32[0] > 1uLL)
        {
          if (v10 >= *(void *)&v2) {
            v10 %= *(void *)&v2;
          }
        }
        else
        {
          v10 &= *(void *)&v2 - 1;
        }
        if (v10 != v7) {
          return 0;
        }
      }
      uint64_t result = (void *)*result;
    }
    while (result);
  }
  return result;
}

void *std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::internal::DescriptorTable const*>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::internal::DescriptorTable const*>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::internal::DescriptorTable const*>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::internal::DescriptorTable const*>>>::__emplace_unique_key_args<google::protobuf::StringPiece,std::pair<google::protobuf::StringPiece const,google::protobuf::internal::DescriptorTable const*> const&>(float *a1, char **a2, uint64_t a3)
{
  uint64_t v7 = (uint64_t)a2[1];
  if (v7 < 1)
  {
    unint64_t v8 = 0;
  }
  else
  {
    unint64_t v8 = 0;
    uint64_t v9 = *a2;
    unint64_t v10 = (unint64_t)&(*a2)[v7];
    do
    {
      uint64_t v11 = *v9++;
      unint64_t v8 = 5 * v8 + v11;
    }
    while ((unint64_t)v9 < v10);
  }
  unint64_t v12 = *((void *)a1 + 1);
  if (v12)
  {
    uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    unint64_t v14 = v13.u32[0];
    if (v13.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v12) {
        unint64_t v3 = v8 % v12;
      }
    }
    else
    {
      unint64_t v3 = (v12 - 1) & v8;
    }
    int v15 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v15)
    {
      uint64_t v16 = *v15;
      if (*v15)
      {
        do
        {
          unint64_t v17 = v16[1];
          if (v17 == v8)
          {
            if (std::equal_to<google::protobuf::StringPiece>::operator()[abi:ne180100]((uint64_t)(a1 + 8), (uint64_t)(v16 + 2), (uint64_t)a2))
            {
              return v16;
            }
          }
          else
          {
            if (v14 > 1)
            {
              if (v17 >= v12) {
                v17 %= v12;
              }
            }
            else
            {
              v17 &= v12 - 1;
            }
            if (v17 != v3) {
              break;
            }
          }
          uint64_t v16 = (void *)*v16;
        }
        while (v16);
      }
    }
  }
  uint64_t v16 = operator new(0x28uLL);
  *uint64_t v16 = 0;
  v16[1] = v8;
  *((_OWORD *)v16 + 1) = *(_OWORD *)a3;
  v16[4] = *(void *)(a3 + 16);
  float v18 = (float)(unint64_t)(*((void *)a1 + 3) + 1);
  float v19 = a1[8];
  if (!v12 || (float)(v19 * (float)v12) < v18)
  {
    BOOL v20 = 1;
    if (v12 >= 3) {
      BOOL v20 = (v12 & (v12 - 1)) != 0;
    }
    unint64_t v21 = v20 | (2 * v12);
    unint64_t v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22) {
      int8x8_t prime = (int8x8_t)v22;
    }
    else {
      int8x8_t prime = (int8x8_t)v21;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
    }
    unint64_t v12 = *((void *)a1 + 1);
    if (*(void *)&prime > v12) {
      goto LABEL_35;
    }
    if (*(void *)&prime < v12)
    {
      unint64_t v30 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
      if (v12 < 3 || (uint8x8_t v31 = (uint8x8_t)vcnt_s8((int8x8_t)v12), v31.i16[0] = vaddlv_u8(v31), v31.u32[0] > 1uLL))
      {
        unint64_t v30 = std::__next_prime(v30);
      }
      else
      {
        uint64_t v32 = 1 << -(char)__clz(v30 - 1);
        if (v30 >= 2) {
          unint64_t v30 = v32;
        }
      }
      if (*(void *)&prime <= v30) {
        int8x8_t prime = (int8x8_t)v30;
      }
      if (*(void *)&prime >= v12)
      {
        unint64_t v12 = *((void *)a1 + 1);
      }
      else
      {
        if (prime)
        {
LABEL_35:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          int64_t v24 = operator new(8 * *(void *)&prime);
          uint64_t v25 = *(void **)a1;
          *(void *)a1 = v24;
          if (v25) {
            operator delete(v25);
          }
          uint64_t v26 = 0;
          *((int8x8_t *)a1 + 1) = prime;
          do
            *(void *)(*(void *)a1 + 8 * v26++) = 0;
          while (*(void *)&prime != v26);
          uint64_t v27 = (void *)*((void *)a1 + 2);
          if (v27)
          {
            unint64_t v28 = v27[1];
            uint8x8_t v29 = (uint8x8_t)vcnt_s8(prime);
            v29.i16[0] = vaddlv_u8(v29);
            if (v29.u32[0] > 1uLL)
            {
              if (v28 >= *(void *)&prime) {
                v28 %= *(void *)&prime;
              }
            }
            else
            {
              v28 &= *(void *)&prime - 1;
            }
            *(void *)(*(void *)a1 + 8 * v28) = a1 + 4;
            uint64_t v33 = (void *)*v27;
            if (*v27)
            {
              do
              {
                unint64_t v34 = v33[1];
                if (v29.u32[0] > 1uLL)
                {
                  if (v34 >= *(void *)&prime) {
                    v34 %= *(void *)&prime;
                  }
                }
                else
                {
                  v34 &= *(void *)&prime - 1;
                }
                if (v34 != v28)
                {
                  if (!*(void *)(*(void *)a1 + 8 * v34))
                  {
                    *(void *)(*(void *)a1 + 8 * v34) = v27;
                    goto LABEL_60;
                  }
                  *uint64_t v27 = *v33;
                  *uint64_t v33 = **(void **)(*(void *)a1 + 8 * v34);
                  **(void **)(*(void *)a1 + 8 * v34) = v33;
                  uint64_t v33 = v27;
                }
                unint64_t v34 = v28;
LABEL_60:
                uint64_t v27 = v33;
                uint64_t v33 = (void *)*v33;
                unint64_t v28 = v34;
              }
              while (v33);
            }
          }
          unint64_t v12 = (unint64_t)prime;
          goto LABEL_64;
        }
        int v39 = *(void **)a1;
        *(void *)a1 = 0;
        if (v39) {
          operator delete(v39);
        }
        unint64_t v12 = 0;
        *((void *)a1 + 1) = 0;
      }
    }
LABEL_64:
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v8 >= v12) {
        unint64_t v3 = v8 % v12;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v12 - 1) & v8;
    }
  }
  uint64_t v35 = *(void **)a1;
  std::string::size_type v36 = *(void **)(*(void *)a1 + 8 * v3);
  if (v36)
  {
    *uint64_t v16 = *v36;
LABEL_77:
    *std::string::size_type v36 = v16;
    goto LABEL_78;
  }
  *uint64_t v16 = *((void *)a1 + 2);
  *((void *)a1 + 2) = v16;
  v35[v3] = a1 + 4;
  if (*v16)
  {
    unint64_t v37 = *(void *)(*v16 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v37 >= v12) {
        v37 %= v12;
      }
    }
    else
    {
      v37 &= v12 - 1;
    }
    std::string::size_type v36 = (void *)(*(void *)a1 + 8 * v37);
    goto LABEL_77;
  }
LABEL_78:
  ++*((void *)a1 + 3);
  return v16;
}

void sub_18920D51C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::__emplace_unique_key_args<google::protobuf::Descriptor const*,std::pair<google::protobuf::Descriptor const* const,google::protobuf::Message const*> const&>(float *a1, void *a2, _OWORD *a3)
{
  unint64_t v6 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  unint64_t v7 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v6 >> 47) ^ v6);
  unint64_t v8 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
  unint64_t v9 = *((void *)a1 + 1);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
    }
    else
    {
      unint64_t v3 = v8 & (v9 - 1);
    }
    uint64_t v11 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      for (uint64_t i = *v11; i; uint64_t i = (void *)*i)
      {
        unint64_t v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == *a2) {
            return i;
          }
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x20uLL);
  *uint64_t i = 0;
  i[1] = v8;
  *((_OWORD *)i + 1) = *a3;
  float v14 = (float)(unint64_t)(*((void *)a1 + 3) + 1);
  float v15 = a1[8];
  if (!v9 || (float)(v15 * (float)v9) < v14)
  {
    BOOL v16 = 1;
    if (v9 >= 3) {
      BOOL v16 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v9);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      int8x8_t prime = (int8x8_t)v18;
    }
    else {
      int8x8_t prime = (int8x8_t)v17;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v9 = *((void *)a1 + 1);
    }
    if (*(void *)&prime > v9) {
      goto LABEL_30;
    }
    if (*(void *)&prime < v9)
    {
      unint64_t v26 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
      if (v9 < 3 || (uint8x8_t v27 = (uint8x8_t)vcnt_s8((int8x8_t)v9), v27.i16[0] = vaddlv_u8(v27), v27.u32[0] > 1uLL))
      {
        unint64_t v26 = std::__next_prime(v26);
      }
      else
      {
        uint64_t v28 = 1 << -(char)__clz(v26 - 1);
        if (v26 >= 2) {
          unint64_t v26 = v28;
        }
      }
      if (*(void *)&prime <= v26) {
        int8x8_t prime = (int8x8_t)v26;
      }
      if (*(void *)&prime >= v9)
      {
        unint64_t v9 = *((void *)a1 + 1);
      }
      else
      {
        if (prime)
        {
LABEL_30:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          BOOL v20 = operator new(8 * *(void *)&prime);
          unint64_t v21 = *(void **)a1;
          *(void *)a1 = v20;
          if (v21) {
            operator delete(v21);
          }
          uint64_t v22 = 0;
          *((int8x8_t *)a1 + 1) = prime;
          do
            *(void *)(*(void *)a1 + 8 * v22++) = 0;
          while (*(void *)&prime != v22);
          unint64_t v23 = (void *)*((void *)a1 + 2);
          if (v23)
          {
            unint64_t v24 = v23[1];
            uint8x8_t v25 = (uint8x8_t)vcnt_s8(prime);
            v25.i16[0] = vaddlv_u8(v25);
            if (v25.u32[0] > 1uLL)
            {
              if (v24 >= *(void *)&prime) {
                v24 %= *(void *)&prime;
              }
            }
            else
            {
              v24 &= *(void *)&prime - 1;
            }
            *(void *)(*(void *)a1 + 8 * v24) = a1 + 4;
            uint8x8_t v29 = (void *)*v23;
            if (*v23)
            {
              do
              {
                unint64_t v30 = v29[1];
                if (v25.u32[0] > 1uLL)
                {
                  if (v30 >= *(void *)&prime) {
                    v30 %= *(void *)&prime;
                  }
                }
                else
                {
                  v30 &= *(void *)&prime - 1;
                }
                if (v30 != v24)
                {
                  if (!*(void *)(*(void *)a1 + 8 * v30))
                  {
                    *(void *)(*(void *)a1 + 8 * v30) = v23;
                    goto LABEL_55;
                  }
                  void *v23 = *v29;
                  *uint8x8_t v29 = **(void **)(*(void *)a1 + 8 * v30);
                  **(void **)(*(void *)a1 + 8 * v30) = v29;
                  uint8x8_t v29 = v23;
                }
                unint64_t v30 = v24;
LABEL_55:
                unint64_t v23 = v29;
                uint8x8_t v29 = (void *)*v29;
                unint64_t v24 = v30;
              }
              while (v29);
            }
          }
          unint64_t v9 = (unint64_t)prime;
          goto LABEL_59;
        }
        uint64_t v35 = *(void **)a1;
        *(void *)a1 = 0;
        if (v35) {
          operator delete(v35);
        }
        unint64_t v9 = 0;
        *((void *)a1 + 1) = 0;
      }
    }
LABEL_59:
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint8x8_t v31 = *(void **)a1;
  uint64_t v32 = *(void **)(*(void *)a1 + 8 * v3);
  if (v32)
  {
    *uint64_t i = *v32;
LABEL_72:
    void *v32 = i;
    goto LABEL_73;
  }
  *uint64_t i = *((void *)a1 + 2);
  *((void *)a1 + 2) = i;
  v31[v3] = a1 + 4;
  if (*i)
  {
    unint64_t v33 = *(void *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v33 >= v9) {
        v33 %= v9;
      }
    }
    else
    {
      v33 &= v9 - 1;
    }
    uint64_t v32 = (void *)(*(void *)a1 + 8 * v33);
    goto LABEL_72;
  }
LABEL_73:
  ++*((void *)a1 + 3);
  return i;
}

void sub_18920D94C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::internal::RepeatedFieldWrapper<int>::IsEmpty(uint64_t a1, _DWORD *a2)
{
  return *a2 == 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<int>::Size(uint64_t a1, unsigned int *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<int>::Get(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136))(a1, *(void *)(a2 + 8) + 4 * a3, a4);
}

void google::protobuf::internal::RepeatedFieldWrapper<int>::Clear(uint64_t a1, _DWORD *a2)
{
  *a2 = 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<int>::Set(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a4);
  *(_DWORD *)(*(void *)(a2 + 8) + 4 * a3) = result;
  return result;
}

void google::protobuf::internal::RepeatedFieldWrapper<int>::Add(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a3);
  int v5 = v4;
  uint64_t v6 = *a2;
  if (v6 == a2[1])
  {
    unsigned int v7 = v6 + 1;
    google::protobuf::RepeatedField<int>::Reserve(a2, v6 + 1);
    *(_DWORD *)(*((void *)a2 + 1) + 4 * v6) = v5;
  }
  else
  {
    *(_DWORD *)(*((void *)a2 + 1) + 4 * v6) = v4;
    unsigned int v7 = v6 + 1;
  }
  *a2 = v7;
}

void google::protobuf::internal::RepeatedFieldWrapper<int>::RemoveLast(uint64_t a1, _DWORD *a2)
{
}

void google::protobuf::internal::RepeatedFieldWrapper<int>::SwapElements(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = *(void *)(a2 + 8);
  int v5 = *(_DWORD *)(v4 + 4 * a3);
  *(_DWORD *)(v4 + 4 * a3) = *(_DWORD *)(v4 + 4 * a4);
  *(_DWORD *)(v4 + 4 * a4) = v5;
}

void google::protobuf::internal::RepeatedFieldPrimitiveAccessor<int>::Swap(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  if (a1 != a3)
  {
    int v6 = 3;
    unsigned int v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_internal.h";
    int v8 = 279;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  google::protobuf::RepeatedField<int>::Swap(a2, a4);
}

void sub_18920DB48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::RandomAccessRepeatedFieldAccessor::BeginIterator(google::protobuf::internal::RandomAccessRepeatedFieldAccessor *this, const void *a2)
{
  return 0;
}

uint64_t google::protobuf::internal::RandomAccessRepeatedFieldAccessor::EndIterator(google::protobuf::internal::RandomAccessRepeatedFieldAccessor *this, const void *a2)
{
  return (*(int (**)(google::protobuf::internal::RandomAccessRepeatedFieldAccessor *, const void *))(*(void *)this + 8))(this, a2);
}

const void *google::protobuf::internal::RandomAccessRepeatedFieldAccessor::CopyIterator(google::protobuf::internal::RandomAccessRepeatedFieldAccessor *this, const void *a2, const void *a3)
{
  return a3;
}

uint64_t google::protobuf::internal::RandomAccessRepeatedFieldAccessor::AdvanceIterator(google::protobuf::internal::RandomAccessRepeatedFieldAccessor *this, const void *a2, void *a3)
{
  return (uint64_t)a3 + 1;
}

BOOL google::protobuf::internal::RandomAccessRepeatedFieldAccessor::EqualsIterator(google::protobuf::internal::RandomAccessRepeatedFieldAccessor *this, const void *a2, const void *a3, const void *a4)
{
  return a3 == a4;
}

uint64_t google::protobuf::internal::RandomAccessRepeatedFieldAccessor::GetIteratorValue(google::protobuf::internal::RandomAccessRepeatedFieldAccessor *this, const void *a2, const void *a3, void *a4)
{
  return (*(uint64_t (**)(google::protobuf::internal::RandomAccessRepeatedFieldAccessor *, const void *, const void *, void *))(*(void *)this + 16))(this, a2, a3, a4);
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<int>::ConvertToT(uint64_t a1, unsigned int *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<int>::ConvertFromT(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL google::protobuf::internal::RepeatedFieldWrapper<unsigned int>::IsEmpty(uint64_t a1, _DWORD *a2)
{
  return *a2 == 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<unsigned int>::Size(uint64_t a1, unsigned int *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<unsigned int>::Get(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136))(a1, *(void *)(a2 + 8) + 4 * a3, a4);
}

void google::protobuf::internal::RepeatedFieldWrapper<unsigned int>::Clear(uint64_t a1, _DWORD *a2)
{
  *a2 = 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<unsigned int>::Set(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a4);
  *(_DWORD *)(*(void *)(a2 + 8) + 4 * a3) = result;
  return result;
}

void google::protobuf::internal::RepeatedFieldWrapper<unsigned int>::Add(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a3);
  int v5 = v4;
  uint64_t v6 = *a2;
  if (v6 == a2[1])
  {
    unsigned int v7 = v6 + 1;
    google::protobuf::RepeatedField<int>::Reserve(a2, v6 + 1);
    *(_DWORD *)(*((void *)a2 + 1) + 4 * v6) = v5;
  }
  else
  {
    *(_DWORD *)(*((void *)a2 + 1) + 4 * v6) = v4;
    unsigned int v7 = v6 + 1;
  }
  *a2 = v7;
}

void google::protobuf::internal::RepeatedFieldWrapper<unsigned int>::RemoveLast(uint64_t a1, _DWORD *a2)
{
}

void google::protobuf::internal::RepeatedFieldWrapper<unsigned int>::SwapElements(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = *(void *)(a2 + 8);
  int v5 = *(_DWORD *)(v4 + 4 * a3);
  *(_DWORD *)(v4 + 4 * a3) = *(_DWORD *)(v4 + 4 * a4);
  *(_DWORD *)(v4 + 4 * a4) = v5;
}

void google::protobuf::internal::RepeatedFieldPrimitiveAccessor<unsigned int>::Swap(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  if (a1 != a3)
  {
    int v6 = 3;
    unsigned int v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_internal.h";
    int v8 = 279;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  google::protobuf::RepeatedField<unsigned int>::Swap(a2, a4);
}

void sub_18920DDE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<unsigned int>::ConvertToT(uint64_t a1, unsigned int *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<unsigned int>::ConvertFromT(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL google::protobuf::internal::RepeatedFieldWrapper<long long>::IsEmpty(uint64_t a1, _DWORD *a2)
{
  return *a2 == 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<long long>::Size(uint64_t a1, unsigned int *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<long long>::Get(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136))(a1, *(void *)(a2 + 8) + 8 * a3, a4);
}

void google::protobuf::internal::RepeatedFieldWrapper<long long>::Clear(uint64_t a1, _DWORD *a2)
{
  *a2 = 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<long long>::Set(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a4);
  *(void *)(*(void *)(a2 + 8) + 8 * a3) = result;
  return result;
}

void google::protobuf::internal::RepeatedFieldWrapper<long long>::Add(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a3);
  uint64_t v5 = v4;
  uint64_t v6 = *a2;
  if (v6 == a2[1])
  {
    unsigned int v7 = v6 + 1;
    google::protobuf::RepeatedField<long long>::Reserve(a2, v6 + 1);
    *(void *)(*((void *)a2 + 1) + 8 * v6) = v5;
  }
  else
  {
    *(void *)(*((void *)a2 + 1) + 8 * v6) = v4;
    unsigned int v7 = v6 + 1;
  }
  *a2 = v7;
}

void google::protobuf::internal::RepeatedFieldWrapper<long long>::RemoveLast(uint64_t a1, _DWORD *a2)
{
}

void google::protobuf::internal::RepeatedFieldWrapper<long long>::SwapElements(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(v4 + 8 * a3);
  *(void *)(v4 + 8 * a3) = *(void *)(v4 + 8 * a4);
  *(void *)(v4 + 8 * a4) = v5;
}

void google::protobuf::internal::RepeatedFieldPrimitiveAccessor<long long>::Swap(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  if (a1 != a3)
  {
    int v6 = 3;
    unsigned int v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_internal.h";
    int v8 = 279;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  google::protobuf::RepeatedField<long long>::Swap(a2, a4);
}

void sub_18920E000(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<long long>::ConvertToT(uint64_t a1, uint64_t a2)
{
  return *(void *)a2;
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<long long>::ConvertFromT(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL google::protobuf::internal::RepeatedFieldWrapper<unsigned long long>::IsEmpty(uint64_t a1, _DWORD *a2)
{
  return *a2 == 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<unsigned long long>::Size(uint64_t a1, unsigned int *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<unsigned long long>::Get(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136))(a1, *(void *)(a2 + 8) + 8 * a3, a4);
}

void google::protobuf::internal::RepeatedFieldWrapper<unsigned long long>::Clear(uint64_t a1, _DWORD *a2)
{
  *a2 = 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<unsigned long long>::Set(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a4);
  *(void *)(*(void *)(a2 + 8) + 8 * a3) = result;
  return result;
}

void google::protobuf::internal::RepeatedFieldWrapper<unsigned long long>::Add(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a3);
  uint64_t v5 = v4;
  uint64_t v6 = *a2;
  if (v6 == a2[1])
  {
    unsigned int v7 = v6 + 1;
    google::protobuf::RepeatedField<long long>::Reserve(a2, v6 + 1);
    *(void *)(*((void *)a2 + 1) + 8 * v6) = v5;
  }
  else
  {
    *(void *)(*((void *)a2 + 1) + 8 * v6) = v4;
    unsigned int v7 = v6 + 1;
  }
  *a2 = v7;
}

void google::protobuf::internal::RepeatedFieldWrapper<unsigned long long>::RemoveLast(uint64_t a1, _DWORD *a2)
{
}

void google::protobuf::internal::RepeatedFieldWrapper<unsigned long long>::SwapElements(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(v4 + 8 * a3);
  *(void *)(v4 + 8 * a3) = *(void *)(v4 + 8 * a4);
  *(void *)(v4 + 8 * a4) = v5;
}

void google::protobuf::internal::RepeatedFieldPrimitiveAccessor<unsigned long long>::Swap(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  if (a1 != a3)
  {
    int v6 = 3;
    unsigned int v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_internal.h";
    int v8 = 279;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  google::protobuf::RepeatedField<unsigned long long>::Swap(a2, a4);
}

void sub_18920E218(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<unsigned long long>::ConvertToT(uint64_t a1, uint64_t a2)
{
  return *(void *)a2;
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<unsigned long long>::ConvertFromT(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL google::protobuf::internal::RepeatedFieldWrapper<float>::IsEmpty(uint64_t a1, _DWORD *a2)
{
  return *a2 == 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<float>::Size(uint64_t a1, unsigned int *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<float>::Get(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136))(a1, *(void *)(a2 + 8) + 4 * a3, a4);
}

void google::protobuf::internal::RepeatedFieldWrapper<float>::Clear(uint64_t a1, _DWORD *a2)
{
  *a2 = 0;
}

void google::protobuf::internal::RepeatedFieldWrapper<float>::Set(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(float *)(*(void *)(a2 + 8) + 4 * a3) = (*(float (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a4);
}

void google::protobuf::internal::RepeatedFieldWrapper<float>::Add(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  float v4 = (*(float (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a3);
  float v5 = v4;
  uint64_t v6 = *a2;
  if (v6 == a2[1])
  {
    unsigned int v7 = v6 + 1;
    google::protobuf::RepeatedField<int>::Reserve(a2, v6 + 1);
    *(float *)(*((void *)a2 + 1) + 4 * v6) = v5;
  }
  else
  {
    *(float *)(*((void *)a2 + 1) + 4 * v6) = v4;
    unsigned int v7 = v6 + 1;
  }
  *a2 = v7;
}

void google::protobuf::internal::RepeatedFieldWrapper<float>::RemoveLast(uint64_t a1, _DWORD *a2)
{
}

float google::protobuf::internal::RepeatedFieldWrapper<float>::SwapElements(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = *(void *)(a2 + 8);
  float result = *(float *)(v4 + 4 * a3);
  *(_DWORD *)(v4 + 4 * a3) = *(_DWORD *)(v4 + 4 * a4);
  *(float *)(v4 + 4 * a4) = result;
  return result;
}

void google::protobuf::internal::RepeatedFieldPrimitiveAccessor<float>::Swap(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  if (a1 != a3)
  {
    int v6 = 3;
    unsigned int v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_internal.h";
    int v8 = 279;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  google::protobuf::RepeatedField<float>::Swap(a2, a4);
}

void sub_18920E438(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

float google::protobuf::internal::RepeatedFieldPrimitiveAccessor<float>::ConvertToT(uint64_t a1, uint64_t a2)
{
  return *(float *)a2;
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<float>::ConvertFromT(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL google::protobuf::internal::RepeatedFieldWrapper<double>::IsEmpty(uint64_t a1, _DWORD *a2)
{
  return *a2 == 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<double>::Size(uint64_t a1, unsigned int *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<double>::Get(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136))(a1, *(void *)(a2 + 8) + 8 * a3, a4);
}

void google::protobuf::internal::RepeatedFieldWrapper<double>::Clear(uint64_t a1, _DWORD *a2)
{
  *a2 = 0;
}

void google::protobuf::internal::RepeatedFieldWrapper<double>::Set(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(double *)(*(void *)(a2 + 8) + 8 * a3) = (*(double (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a4);
}

void google::protobuf::internal::RepeatedFieldWrapper<double>::Add(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  double v4 = (*(double (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a3);
  double v5 = v4;
  uint64_t v6 = *a2;
  if (v6 == a2[1])
  {
    unsigned int v7 = v6 + 1;
    google::protobuf::RepeatedField<long long>::Reserve(a2, v6 + 1);
    *(double *)(*((void *)a2 + 1) + 8 * v6) = v5;
  }
  else
  {
    *(double *)(*((void *)a2 + 1) + 8 * v6) = v4;
    unsigned int v7 = v6 + 1;
  }
  *a2 = v7;
}

void google::protobuf::internal::RepeatedFieldWrapper<double>::RemoveLast(uint64_t a1, _DWORD *a2)
{
}

double google::protobuf::internal::RepeatedFieldWrapper<double>::SwapElements(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = *(void *)(a2 + 8);
  double result = *(double *)(v4 + 8 * a3);
  *(void *)(v4 + 8 * a3) = *(void *)(v4 + 8 * a4);
  *(double *)(v4 + 8 * a4) = result;
  return result;
}

void google::protobuf::internal::RepeatedFieldPrimitiveAccessor<double>::Swap(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  if (a1 != a3)
  {
    int v6 = 3;
    unsigned int v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_internal.h";
    int v8 = 279;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  google::protobuf::RepeatedField<double>::Swap(a2, a4);
}

void sub_18920E658(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double google::protobuf::internal::RepeatedFieldPrimitiveAccessor<double>::ConvertToT(uint64_t a1, uint64_t a2)
{
  return *(double *)a2;
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<double>::ConvertFromT(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL google::protobuf::internal::RepeatedFieldWrapper<BOOL>::IsEmpty(uint64_t a1, _DWORD *a2)
{
  return *a2 == 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<BOOL>::Size(uint64_t a1, unsigned int *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<BOOL>::Get(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)a1 + 136))(a1, *(void *)(a2 + 8) + a3, a4);
}

void google::protobuf::internal::RepeatedFieldWrapper<BOOL>::Clear(uint64_t a1, _DWORD *a2)
{
  *a2 = 0;
}

uint64_t google::protobuf::internal::RepeatedFieldWrapper<BOOL>::Set(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a4);
  *(unsigned char *)(*(void *)(a2 + 8) + a3) = result;
  return result;
}

void google::protobuf::internal::RepeatedFieldWrapper<BOOL>::Add(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  char v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a3);
  char v5 = v4;
  uint64_t v6 = *a2;
  if (v6 == a2[1])
  {
    unsigned int v7 = v6 + 1;
    google::protobuf::RepeatedField<BOOL>::Reserve(a2, v6 + 1);
    *(unsigned char *)(*((void *)a2 + 1) + v6) = v5;
  }
  else
  {
    *(unsigned char *)(*((void *)a2 + 1) + v6) = v4;
    unsigned int v7 = v6 + 1;
  }
  *a2 = v7;
}

void google::protobuf::internal::RepeatedFieldWrapper<BOOL>::RemoveLast(uint64_t a1, _DWORD *a2)
{
}

void google::protobuf::internal::RepeatedFieldWrapper<BOOL>::SwapElements(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(v4 + a3);
  *(unsigned char *)(v4 + a3) = *(unsigned char *)(v4 + a4);
  *(unsigned char *)(v4 + a4) = v5;
}

void google::protobuf::internal::RepeatedFieldPrimitiveAccessor<BOOL>::Swap(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  if (a1 != a3)
  {
    int v6 = 3;
    unsigned int v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_internal.h";
    int v8 = 279;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  google::protobuf::RepeatedField<BOOL>::Swap(a2, a4);
}

void sub_18920E870(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<BOOL>::ConvertToT(uint64_t a1, unsigned __int8 *a2)
{
  return *a2;
}

uint64_t google::protobuf::internal::RepeatedFieldPrimitiveAccessor<BOOL>::ConvertFromT(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL google::protobuf::internal::RepeatedPtrFieldWrapper<std::string>::IsEmpty(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)(a2 + 8) == 0;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldWrapper<std::string>::Size(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(a2 + 8);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldWrapper<std::string>::Get(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)a1 + 144))(a1, *(void *)(*(void *)(a2 + 16) + 8 * a3 + 8), a4);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldWrapper<std::string>::Clear(uint64_t a1, uint64_t a2)
{
  return google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(a2);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldWrapper<std::string>::Set(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)a1 + 136))(a1, a4, *(void *)(*(void *)(a2 + 16) + 8 * a3 + 8));
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldWrapper<std::string>::Add(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136))(a1, a3, v6);

  return google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(a2, v6);
}

void google::protobuf::internal::RepeatedPtrFieldWrapper<std::string>::RemoveLast(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(int *)(a2 + 8) - 1;
  *(_DWORD *)(a2 + 8) = v3;
  uint64_t v4 = *(void *)(v2 + 8 * v3 + 8);
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)uint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
  }
  else
  {
    *(unsigned char *)uint64_t v4 = 0;
    *(unsigned char *)(v4 + 23) = 0;
  }
}

void google::protobuf::internal::RepeatedPtrFieldWrapper<std::string>::SwapElements(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = *(void *)(a2 + 16) + 8;
  uint64_t v5 = *(void *)(v4 + 8 * a3);
  *(void *)(v4 + 8 * a3) = *(void *)(v4 + 8 * a4);
  *(void *)(v4 + 8 * a4) = v5;
}

__n128 google::protobuf::internal::RepeatedPtrFieldStringAccessor::Swap(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3)
  {
    if (a2 != (unint64_t *)a4)
    {
      if (*(void *)a4 == *a2)
      {
        unint64_t v16 = a2[1];
        unint64_t v17 = a2[2];
        __n128 result = *(__n128 *)(a4 + 8);
        *(__n128 *)(a2 + 1) = result;
        *(void *)(a4 + 8) = v16;
        *(void *)(a4 + 16) = v17;
      }
      else
      {
        google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2, (unint64_t *)a4);
      }
    }
  }
  else
  {
    uint64_t v19 = 0;
    long long v20 = 0uLL;
    if (&v19 != (uint64_t *)a2)
    {
      if (*a2)
      {
        google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)&v19, a2);
      }
      else
      {
        long long v20 = *(_OWORD *)(a2 + 1);
        a2[1] = 0;
        a2[2] = 0;
      }
    }
    int v9 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a3 + 8))(a3, a4);
    if (v9 >= 1)
    {
      uint64_t v10 = 0;
      do
      {
        __p[1] = 0;
        uint64_t v22 = 0;
        __p[0] = 0;
        uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void **))(*(void *)a3 + 16))(a3, a4, v10, __p);
        if (*(char *)(v11 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(&v18, *(const std::string::value_type **)v11, *(void *)(v11 + 8));
        }
        else
        {
          long long v12 = *(_OWORD *)v11;
          v18.__r_.__value_.__r.__words[2] = *(void *)(v11 + 16);
          *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v12;
        }
        if (SHIBYTE(v22) < 0) {
          operator delete(__p[0]);
        }
        google::protobuf::internal::RepeatedFieldAccessor::Add<std::string,std::string>(a1, (uint64_t)a2, (uint64_t)&v18);
        if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v18.__r_.__value_.__l.__data_);
        }
        uint64_t v10 = (v10 + 1);
      }
      while (v9 != v10);
    }
    uint64_t v13 = *((unsigned int *)a2 + 2);
    (*(void (**)(uint64_t, uint64_t))(*(void *)a3 + 24))(a3, a4);
    if ((int)v13 >= 1)
    {
      uint64_t v14 = 0;
      uint64_t v15 = 8 * v13;
      do
      {
        google::protobuf::internal::RepeatedFieldAccessor::Add<std::string,std::string>(a3, a4, *(void *)(*((void *)&v20 + 1) + v14 + 8));
        v14 += 8;
      }
      while (v15 != v14);
    }
    google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(&v19);
  }
  return result;
}

void sub_18920EC4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
}

void google::protobuf::internal::RepeatedPtrFieldStringAccessor::New(google::protobuf::internal::RepeatedPtrFieldStringAccessor *this, const void *a2)
{
}

std::string *google::protobuf::internal::RepeatedPtrFieldStringAccessor::ConvertToT(int a1, const std::string *a2, std::string *this)
{
  return std::string::operator=(this, a2);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldStringAccessor::ConvertFromT(uint64_t a1, uint64_t a2)
{
  return a2;
}

void google::protobuf::internal::RepeatedFieldAccessor::Add<std::string,std::string>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(char *)(a3 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string __p = *(std::string *)a3;
  }
  (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)a1 + 40))(a1, a2, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_18920ED70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::internal::MapFieldAccessor::IsEmpty(google::protobuf::internal::MapFieldAccessor *this, atomic_uint *a2)
{
  return *(_DWORD *)(*((void *)a2 + 2) + 8) == 0;
}

uint64_t google::protobuf::internal::MapFieldAccessor::Size(google::protobuf::internal::MapFieldAccessor *this, atomic_uint *a2)
{
  return *(unsigned int *)(*((void *)a2 + 2) + 8);
}

uint64_t google::protobuf::internal::MapFieldAccessor::Get(google::protobuf::internal::MapFieldAccessor *this, atomic_uint *a2, int a3, void *a4)
{
  return *(void *)(*(void *)(*((void *)a2 + 2) + 16) + 8 * a3 + 8);
}

void google::protobuf::internal::MapFieldAccessor::Clear(google::protobuf::internal::MapFieldAccessor *this, atomic_uint *a2)
{
  google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(a2);
  a2[22] = 1;
  uint64_t v3 = *((void *)a2 + 2);
  uint64_t v4 = *(unsigned int *)(v3 + 8);
  if ((int)v4 >= 1)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(v3 + 16) + 8);
    do
    {
      uint64_t v6 = *v5++;
      (*(void (**)(uint64_t))(*(void *)v6 + 40))(v6);
      --v4;
    }
    while (v4);
    *(_DWORD *)(v3 + 8) = 0;
  }
}

uint64_t google::protobuf::internal::MapFieldAccessor::Set(google::protobuf::internal::MapFieldAccessor *this, atomic_uint *a2, int a3, const void *a4)
{
  google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(a2);
  a2[22] = 1;
  uint64_t v6 = *(uint64_t (**)(void))(**(void **)(*(void *)(*((void *)a2 + 2) + 16) + 8 * a3 + 8) + 112);

  return v6();
}

unsigned int *google::protobuf::internal::MapFieldAccessor::Add(google::protobuf::internal::MapFieldAccessor *this, atomic_uint *a2, const void *a3)
{
  uint64_t v5 = (void *)(*(uint64_t (**)(const void *))(*(void *)a3 + 24))(a3);
  (*(void (**)(void *, const void *))(*v5 + 112))(v5, a3);
  google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(a2);
  a2[22] = 1;
  uint64_t v6 = (unsigned int *)*((void *)a2 + 2);

  return google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(v6, v5);
}

uint64_t google::protobuf::internal::MapFieldAccessor::RemoveLast(google::protobuf::internal::MapFieldAccessor *this, atomic_uint *a2)
{
  google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(a2);
  a2[22] = 1;
  uint64_t v3 = *((void *)a2 + 2);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(int *)(v3 + 8) - 1;
  *(_DWORD *)(v3 + 8) = v5;
  uint64_t v6 = *(uint64_t (**)(void))(**(void **)(v4 + 8 * v5 + 8) + 40);

  return v6();
}

void google::protobuf::internal::MapFieldAccessor::SwapElements(google::protobuf::internal::MapFieldAccessor *this, atomic_uint *a2, int a3, int a4)
{
  google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(a2);
  a2[22] = 1;
  uint64_t v7 = *(void *)(*((void *)a2 + 2) + 16) + 8;
  uint64_t v8 = *(void *)(v7 + 8 * a3);
  *(void *)(v7 + 8 * a3) = *(void *)(v7 + 8 * a4);
  *(void *)(v7 + 8 * a4) = v8;
}

__n128 google::protobuf::internal::MapFieldAccessor::Swap(uint64_t a1, atomic_uint *this, uint64_t a3, uint64_t a4)
{
  if (a1 != a3)
  {
    int v11 = 3;
    long long v12 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_internal.h";
    int v13 = 235;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v11);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(this);
  this[22] = 1;
  uint64_t v6 = (void *)*((void *)this + 2);
  google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap((atomic_uint *)a4);
  *(_DWORD *)(a4 + 88) = 1;
  uint64_t v8 = *(void *)(a4 + 16);
  if (v6 != (void *)v8)
  {
    if (*(void *)v8 == *v6)
    {
      uint64_t v9 = v6[1];
      uint64_t v10 = v6[2];
      __n128 result = *(__n128 *)(v8 + 8);
      *(__n128 *)(v6 + 1) = result;
      *(void *)(v8 + 8) = v9;
      *(void *)(v8 + 16) = v10;
    }
    else
    {
      google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>((google::protobuf::internal::RepeatedPtrFieldBase *)v6, (void *)v8);
    }
  }
  return result;
}

void sub_18920F1A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::MapFieldAccessor::~MapFieldAccessor(google::protobuf::internal::MapFieldAccessor *this)
{
}

uint64_t google::protobuf::internal::MapFieldAccessor::New(google::protobuf::internal::MapFieldAccessor *this, const void *a2)
{
  return (*(uint64_t (**)(const void *))(*(void *)a2 + 24))(a2);
}

uint64_t google::protobuf::internal::MapFieldAccessor::ConvertToEntry(google::protobuf::internal::MapFieldAccessor *this, const void *a2, google::protobuf::Message *a3)
{
  return (*(uint64_t (**)(google::protobuf::Message *, const void *))(*(void *)a3 + 112))(a3, a2);
}

const google::protobuf::Message *google::protobuf::internal::MapFieldAccessor::ConvertFromEntry(google::protobuf::internal::MapFieldAccessor *this, const google::protobuf::Message *a2, void *a3)
{
  return a2;
}

void google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, void *a2)
{
  uint64_t v4 = *a2;
  long long v22 = 0uLL;
  uint64_t v21 = v4;
  unsigned int v5 = *((_DWORD *)this + 2);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(*((void *)this + 2) + 8);
    uint64_t v7 = (uint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v21, v5);
    uint64_t v8 = (_DWORD *)*((void *)&v22 + 1);
    int v9 = v22;
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>>((uint64_t)&v21, v7, v6, v5, **((_DWORD **)&v22 + 1) - v22);
    LODWORD(v22) = v9 + v5;
    if (*v8 < (signed int)(v9 + v5)) {
      *uint64_t v8 = v9 + v5;
    }
    uint64_t v10 = *((unsigned int *)this + 2);
    if ((int)v10 >= 1)
    {
      int v11 = (uint64_t *)(*((void *)this + 2) + 8);
      do
      {
        uint64_t v12 = *v11++;
        (*(void (**)(uint64_t))(*(void *)v12 + 40))(v12);
        --v10;
      }
      while (v10);
      *((_DWORD *)this + 2) = 0;
    }
  }
  uint64_t v14 = a2 + 1;
  unsigned int v13 = *((_DWORD *)a2 + 2);
  if (v13)
  {
    uint64_t v15 = (uint64_t *)(a2[2] + 8);
    unint64_t v16 = (uint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v13);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>>((uint64_t)this, v16, v15, v13, **((_DWORD **)this + 2) - *((_DWORD *)this + 2));
    signed int v17 = *((_DWORD *)this + 2) + v13;
    *((_DWORD *)this + 2) = v17;
    std::string v18 = (signed int *)*((void *)this + 2);
    if (*v18 < v17) {
      *std::string v18 = v17;
    }
  }
  uint64_t v19 = *v14;
  uint64_t v20 = v14[1];
  *(_OWORD *)uint64_t v14 = v22;
  *(void *)&long long v22 = v19;
  *((void *)&v22 + 1) = v20;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(&v21);
}

BOOL google::protobuf::internal::RepeatedPtrFieldWrapper<google::protobuf::Message>::IsEmpty(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)(a2 + 8) == 0;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldWrapper<google::protobuf::Message>::Size(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(a2 + 8);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldWrapper<google::protobuf::Message>::Get(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)a1 + 144))(a1, *(void *)(*(void *)(a2 + 16) + 8 * a3 + 8), a4);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldWrapper<google::protobuf::Message>::Clear(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned int *)(a2 + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a2 + 16) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 40))(v5);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a2 + 8) = 0;
  }
  return result;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldWrapper<google::protobuf::Message>::Set(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)a1 + 136))(a1, a4, *(void *)(*(void *)(a2 + 16) + 8 * a3 + 8));
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldWrapper<google::protobuf::Message>::Add(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a3);
  (*(void (**)(uint64_t, uint64_t, void *))(*(void *)a1 + 136))(a1, a3, v6);

  return google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(a2, v6);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldWrapper<google::protobuf::Message>::RemoveLast(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(int *)(a2 + 8) - 1;
  *(_DWORD *)(a2 + 8) = v3;
  return (*(uint64_t (**)(void))(**(void **)(v2 + 8 * v3 + 8) + 40))();
}

void google::protobuf::internal::RepeatedPtrFieldWrapper<google::protobuf::Message>::SwapElements(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = *(void *)(a2 + 16) + 8;
  uint64_t v5 = *(void *)(v4 + 8 * a3);
  *(void *)(v4 + 8 * a3) = *(void *)(v4 + 8 * a4);
  *(void *)(v4 + 8 * a4) = v5;
}

__n128 google::protobuf::internal::RepeatedPtrFieldMessageAccessor::Swap(uint64_t a1, google::protobuf::internal::RepeatedPtrFieldBase *this, uint64_t a3, uint64_t a4)
{
  if (a1 != a3)
  {
    int v9 = 3;
    uint64_t v10 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_internal.h";
    int v11 = 343;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v9);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (this != (google::protobuf::internal::RepeatedPtrFieldBase *)a4)
  {
    if (*(void *)a4 == *(void *)this)
    {
      uint64_t v7 = *((void *)this + 1);
      uint64_t v8 = *((void *)this + 2);
      __n128 result = *(__n128 *)(a4 + 8);
      *(__n128 *)((char *)this + 8) = result;
      *(void *)(a4 + 8) = v7;
      *(void *)(a4 + 16) = v8;
    }
    else
    {
      google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(this, (void *)a4);
    }
  }
  return result;
}

void sub_18920F648(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldMessageAccessor::New(google::protobuf::internal::RepeatedPtrFieldMessageAccessor *this, const void *a2)
{
  return (*(uint64_t (**)(const void *))(*(void *)a2 + 24))(a2);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldMessageAccessor::ConvertToT(google::protobuf::internal::RepeatedPtrFieldMessageAccessor *this, const void *a2, google::protobuf::Message *a3)
{
  return (*(uint64_t (**)(google::protobuf::Message *, const void *))(*(void *)a3 + 112))(a3, a2);
}

const google::protobuf::Message *google::protobuf::internal::RepeatedPtrFieldMessageAccessor::ConvertFromT(google::protobuf::internal::RepeatedPtrFieldMessageAccessor *this, const google::protobuf::Message *a2, void *a3)
{
  return a2;
}

BOOL google::protobuf::io::ArrayInputStream::Next(google::protobuf::io::ArrayInputStream *this, const void **a2, int *a3)
{
  uint64_t v3 = *((int *)this + 6);
  int v4 = *((_DWORD *)this + 4);
  if ((int)v3 >= v4)
  {
    *((_DWORD *)this + 7) = 0;
  }
  else
  {
    int v5 = v4 - v3;
    if (v4 - (int)v3 >= *((_DWORD *)this + 5)) {
      int v5 = *((_DWORD *)this + 5);
    }
    *((_DWORD *)this + 7) = v5;
    *a2 = (const void *)(*((void *)this + 1) + v3);
    *a3 = v5;
    *((_DWORD *)this + 6) += *((_DWORD *)this + 7);
  }
  return (int)v3 < v4;
}

void google::protobuf::io::ArrayInputStream::BackUp(google::protobuf::io::ArrayInputStream *this, int a2)
{
  int v4 = *((_DWORD *)this + 7);
  if (v4 <= 0)
  {
    int v5 = 3;
    uint64_t v6 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc";
    int v7 = 80;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (last_returned_size_) > (0): ");
    std::string::append(&__p, "BackUp() can only be called after a successful Next().");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    int v4 = *((_DWORD *)this + 7);
  }
  if (v4 < a2
    && (int v5 = 3,
        uint64_t v6 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc",
        int v7 = 82,
        memset(&__p, 0, sizeof(__p)),
        std::string::append(&__p, "CHECK failed: (count) <= (last_returned_size_): "),
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5),
        SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0))
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((a2 & 0x80000000) == 0) {
      goto LABEL_11;
    }
  }
  else if ((a2 & 0x80000000) == 0)
  {
    goto LABEL_11;
  }
  int v5 = 3;
  uint64_t v6 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc";
  int v7 = 83;
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "CHECK failed: (count) >= (0): ");
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
LABEL_11:
  *((void *)this + 3) = (*((_DWORD *)this + 6) - a2);
}

void sub_18920F87C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::io::ArrayInputStream::Skip(google::protobuf::io::ArrayInputStream *this, int a2)
{
  if (a2 < 0)
  {
    int v9 = 3;
    uint64_t v10 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc";
    int v11 = 89;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (count) >= (0): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v9);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  int v4 = *((_DWORD *)this + 4);
  int v5 = *((_DWORD *)this + 6);
  int v6 = v4 - v5;
  BOOL result = v4 - v5 >= a2;
  int v8 = v5 + a2;
  if (v6 >= a2) {
    int v4 = v8;
  }
  *((_DWORD *)this + 6) = v4;
  *((_DWORD *)this + 7) = 0;
  return result;
}

void sub_18920F94C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::io::ArrayInputStream::ByteCount(google::protobuf::io::ArrayInputStream *this)
{
  return *((int *)this + 6);
}

uint64_t google::protobuf::io::StringOutputStream::Next(google::protobuf::io::StringOutputStream *this, void **a2, int *a3)
{
  uint64_t v6 = *((void *)this + 1);
  if (!v6)
  {
    int v13 = 3;
    uint64_t v14 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc";
    int v15 = 142;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: target_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v13);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    uint64_t v6 = *((void *)this + 1);
  }
  if (*(char *)(v6 + 23) < 0)
  {
    unint64_t v7 = *(void *)(v6 + 8);
    unint64_t v8 = (*(void *)(v6 + 16) & 0x7FFFFFFFFFFFFFFFLL) - 1;
    if (v7 < v8) {
      goto LABEL_10;
    }
  }
  else
  {
    unint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    if (*(unsigned __int8 *)(v6 + 23) < 0x16u)
    {
      unint64_t v8 = 22;
      goto LABEL_10;
    }
  }
  unint64_t v8 = 2 * v7;
LABEL_10:
  if (v7 + 0x7FFFFFFF < v8) {
    unint64_t v8 = v7 + 0x7FFFFFFF;
  }
  if (v8 <= 0x10) {
    std::string::size_type v9 = 16;
  }
  else {
    std::string::size_type v9 = v8;
  }
  std::string::resize((std::string *)v6, v9, 0);
  uint64_t v10 = (uint64_t **)*((void *)this + 1);
  if (*((char *)v10 + 23) < 0) {
    uint64_t v10 = (uint64_t **)*v10;
  }
  *a2 = (char *)v10 + v7;
  uint64_t v11 = *((void *)this + 1);
  if (*(char *)(v11 + 23) < 0) {
    uint64_t v11 = *(void *)(v11 + 8);
  }
  else {
    LODWORD(v11) = *(unsigned __int8 *)(v11 + 23);
  }
  *a3 = v11 - v7;
  return 1;
}

void sub_18920FA9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::io::StringOutputStream::BackUp(google::protobuf::io::StringOutputStream *this, int a2)
{
  if (a2 < 0)
  {
    int v7 = 3;
    unint64_t v8 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc";
    int v9 = 169;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (count) >= (0): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v7);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  uint64_t v4 = *((void *)this + 1);
  if (!v4)
  {
    int v7 = 3;
    unint64_t v8 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc";
    int v9 = 170;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: target_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v7);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    uint64_t v4 = *((void *)this + 1);
  }
  LODWORD(v5) = *(char *)(v4 + 23);
  if ((v5 & 0x80000000) != 0) {
    unint64_t v6 = *(void *)(v4 + 8);
  }
  else {
    unint64_t v6 = *(unsigned __int8 *)(v4 + 23);
  }
  if (v6 < a2)
  {
    int v7 = 3;
    unint64_t v8 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc";
    int v9 = 171;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (count) <= (target_->size()): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v7);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    uint64_t v4 = *((void *)this + 1);
    LOBYTE(v5) = *(unsigned char *)(v4 + 23);
  }
  if ((v5 & 0x80) != 0) {
    uint64_t v5 = *(void *)(v4 + 8);
  }
  else {
    uint64_t v5 = v5;
  }
  std::string::resize((std::string *)v4, v5 - a2, 0);
}

void sub_18920FC2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::io::StringOutputStream::ByteCount(google::protobuf::io::StringOutputStream *this)
{
  uint64_t v1 = *((void *)this + 1);
  if (!v1)
  {
    int v4 = 3;
    uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc";
    int v6 = 176;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: target_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    uint64_t v1 = *((void *)this + 1);
  }
  if (*(char *)(v1 + 23) < 0) {
    return *(void *)(v1 + 8);
  }
  else {
    return *(unsigned __int8 *)(v1 + 23);
  }
}

void sub_18920FCF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::io::ArrayInputStream::~ArrayInputStream(google::protobuf::io::ArrayInputStream *this)
{
}

void google::protobuf::io::StringOutputStream::~StringOutputStream(google::protobuf::io::StringOutputStream *this)
{
}

uint64_t google::protobuf::internal::MergeFromImpl<false>(unsigned char *a1, int64_t a2, google::protobuf::MessageLite *a3, char a4)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  uint64_t v13 = 0x7FFFFFFF00000000;
  int v14 = google::protobuf::io::CodedInputStream::default_recursion_limit_;
  unsigned int v15 = 0x80000000;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v6 = google::protobuf::internal::EpsCopyInputStream::InitFrom((uint64_t)v9, a1, a2);
  if ((*(uint64_t (**)(google::protobuf::MessageLite *, unsigned char *, unsigned char *))(*(void *)a3 + 88))(a3, v6, v9)) {
    BOOL v7 = v13 == 0;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    if ((a4 & 2) != 0
      || ((*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)a3 + 48))(a3) & 1) != 0)
    {
      return 1;
    }
    google::protobuf::MessageLite::LogInitializationErrorMessage(a3);
  }
  return 0;
}

void google::protobuf::MessageLite::LogInitializationErrorMessage(google::protobuf::MessageLite *this)
{
  int v9 = 2;
  long long v10 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/message_lite.cc";
  int v11 = 133;
  memset(&v12, 0, sizeof(v12));
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "Can't ");
  std::string::append(&__p, "parse");
  std::string::append(&__p, " message of type \"");
  (*(void (**)(std::string::value_type **__return_ptr, google::protobuf::MessageLite *))(*(void *)this
                                                                                                  + 16))(&v13, this);
  if ((v15 & 0x80u) == 0) {
    uint64_t v2 = (const std::string::value_type *)&v13;
  }
  else {
    uint64_t v2 = v13;
  }
  if ((v15 & 0x80u) == 0) {
    std::string::size_type v3 = v15;
  }
  else {
    std::string::size_type v3 = v14;
  }
  std::string::append(&__p, v2, v3);
  if ((char)v15 < 0) {
    operator delete(v13);
  }
  std::string::append(&__p, "\" because it is missing required fields: ");
  (*(void (**)(std::string::value_type **__return_ptr, google::protobuf::MessageLite *))(*(void *)this
                                                                                                  + 56))(&v13, this);
  if ((v15 & 0x80u) == 0) {
    int v4 = (const std::string::value_type *)&v13;
  }
  else {
    int v4 = v13;
  }
  if ((v15 & 0x80u) == 0) {
    std::string::size_type v5 = v15;
  }
  else {
    std::string::size_type v5 = v14;
  }
  std::string::append(&__p, v4, v5);
  if ((char)v15 < 0) {
    operator delete(v13);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::__split_buffer<std::string>::pointer p_p = &__p;
  }
  else {
    std::__split_buffer<std::string>::pointer p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  std::string::append(&v12, (const std::string::value_type *)p_p, size);
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v9);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
}

void sub_189210000(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,std::string>(google::protobuf::MessageLite *a1, uint64_t *a2)
{
  (*(void (**)(google::protobuf::MessageLite *))(*(void *)a1 + 40))(a1);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v6, a2, v4);
  return google::protobuf::internal::MergeFromImpl<false>(v6[0], (int64_t)v6[1], a1, 1);
}

BOOL google::protobuf::MessageLite::AppendPartialToString(uint64_t a1, std::string *a2)
{
  uint64_t v2 = a2;
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
    std::string::size_type size = a2->__r_.__value_.__l.__size_;
  }
  else {
    std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  }
  unint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 72))(a1);
  unint64_t v6 = v5;
  unint64_t v7 = v5 >> 31;
  if (v5 >> 31)
  {
    int v13 = 2;
    std::string::size_type v14 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/message_lite.cc";
    int v15 = 457;
    memset(&v16, 0, sizeof(v16));
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16))(__p, a1);
    if ((v12 & 0x80u) == 0) {
      unint64_t v8 = __p;
    }
    else {
      unint64_t v8 = (void **)__p[0];
    }
    if ((v12 & 0x80u) == 0) {
      std::string::size_type v9 = v12;
    }
    else {
      std::string::size_type v9 = (std::string::size_type)__p[1];
    }
    std::string::append(&v16, (const std::string::value_type *)v8, v9);
    std::string::append(&v16, " exceeded maximum protobuf size of 2GB: ");
    snprintf(__str, 0x80uLL, "%lu", v6);
    char v22 = 0;
    std::string::append(&v16, __str);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v13);
    if ((char)v12 < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v16.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string::resize(v2, v5 + size, 0);
    if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0) {
      uint64_t v2 = (std::string *)v2->__r_.__value_.__r.__words[0];
    }
    *(void *)char __str = (char *)v2 + size + v6;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    __int16 v20 = 0;
    char v21 = google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ & 1;
    (*(void (**)(uint64_t))(*(void *)a1 + 96))(a1);
  }
  return v7 == 0;
}

void sub_1892102C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MessageLite::SerializePartialToArray(google::protobuf::MessageLite *this, char *a2, int a3)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  unint64_t v6 = (*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)this + 72))(this);
  unint64_t v7 = v6;
  if (v6 >> 31)
  {
    int v13 = 2;
    std::string::size_type v14 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/message_lite.cc";
    int v15 = 487;
    memset(&v16, 0, sizeof(v16));
    (*(void (**)(void **__return_ptr, google::protobuf::MessageLite *))(*(void *)this + 16))(__p, this);
    if ((v12 & 0x80u) == 0) {
      unint64_t v8 = __p;
    }
    else {
      unint64_t v8 = (void **)__p[0];
    }
    if ((v12 & 0x80u) == 0) {
      std::string::size_type v9 = v12;
    }
    else {
      std::string::size_type v9 = (std::string::size_type)__p[1];
    }
    std::string::append(&v16, (const std::string::value_type *)v8, v9);
    std::string::append(&v16, " exceeded maximum protobuf size of 2GB: ");
    snprintf(__str, 0x80uLL, "%lu", v7);
    char v22 = 0;
    std::string::append(&v16, __str);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v13);
    if ((char)v12 < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v16.__r_.__value_.__l.__data_);
    }
    return 0;
  }
  if (v6 > a3) {
    return 0;
  }
  *(void *)char __str = &a2[v6];
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  __int16 v20 = 0;
  char v21 = google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ & 1;
  (*(void (**)(google::protobuf::MessageLite *, char *, char *))(*(void *)this + 96))(this, a2, __str);
  return 1;
}

void sub_1892104E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
}

BOOL google::protobuf::MessageLite::SerializeAsString@<W0>(google::protobuf::MessageLite *this@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  BOOL result = google::protobuf::MessageLite::AppendPartialToString((uint64_t)this, (std::string *)a2);
  if (!result)
  {
    if (*(char *)(a2 + 23) < 0)
    {
      **(unsigned char **)a2 = 0;
      *(void *)(a2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)a2 = 0;
      *(unsigned char *)(a2 + 23) = 0;
    }
  }
  return result;
}

void sub_18921057C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *google::protobuf::internal::GenericTypeHandler<std::string>::Merge(std::string *__str, std::string *this)
{
  return std::string::operator=(this, __str);
}

void google::protobuf::internal::OnShutdownRun(google::protobuf::internal *this, void (*a2)(const void *), const void *a3)
{
  uint64_t v5 = google::protobuf::internal::ShutdownData::get(this);
  std::mutex::lock((std::mutex *)(v5 + 24));
  unint64_t v6 = *(void **)(v5 + 8);
  unint64_t v7 = *(void *)(v5 + 16);
  if ((unint64_t)v6 >= v7)
  {
    uint64_t v9 = ((uint64_t)v6 - *(void *)v5) >> 4;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 60) {
      std::vector<std::pair<void (*)(void const*),void const*>>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v11 = v7 - *(void *)v5;
    if (v11 >> 3 > v10) {
      unint64_t v10 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12) {
      int v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>(v5 + 16, v12);
    }
    else {
      int v13 = 0;
    }
    std::string::size_type v14 = &v13[16 * v9];
    int v15 = &v13[16 * v12];
    *(void *)std::string::size_type v14 = this;
    *((void *)v14 + 1) = a2;
    unint64_t v8 = v14 + 16;
    uint64_t v17 = *(char **)v5;
    std::string v16 = *(char **)(v5 + 8);
    if (v16 != *(char **)v5)
    {
      do
      {
        *((_OWORD *)v14 - 1) = *((_OWORD *)v16 - 1);
        v14 -= 16;
        v16 -= 16;
      }
      while (v16 != v17);
      std::string v16 = *(char **)v5;
    }
    *(void *)uint64_t v5 = v14;
    *(void *)(v5 + 8) = v8;
    *(void *)(v5 + 16) = v15;
    if (v16) {
      operator delete(v16);
    }
  }
  else
  {
    void *v6 = this;
    v6[1] = a2;
    unint64_t v8 = v6 + 2;
  }
  *(void *)(v5 + 8) = v8;
  std::mutex::unlock((std::mutex *)(v5 + 24));
}

void sub_1892106C8(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ShutdownData::get(google::protobuf::internal::ShutdownData *this)
{
  {
    operator new();
  }
  return google::protobuf::internal::ShutdownData::get(void)::data;
}

void sub_18921076C(_Unwind_Exception *a1)
{
}

void std::vector<std::pair<void (*)(void const*),void const*>>::__throw_length_error[abi:ne180100]()
{
}

void *google::protobuf::internal::ArenaImpl::thread_cache(google::protobuf::internal::ArenaImpl *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB29F3B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1EB29F3B0))
  {
    operator new();
  }
  uint64_t v1 = pthread_getspecific(*(void *)_MergedGlobals_176);
  if (!v1) {
    operator new();
  }
  return v1;
}

void sub_189210874(_Unwind_Exception *a1)
{
  MEMORY[0x18C11F580](v1, 0x1000C4000313F17);
  __cxa_guard_abort(&qword_1EB29F3B0);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::ArenaImpl::NewBuffer(google::protobuf::internal::ArenaImpl *this, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = *((void *)this + 4);
  if (a2 == -1)
  {
    if (v5) {
      unint64_t v7 = *(void *)v5;
    }
    else {
      unint64_t v7 = 256;
    }
  }
  else
  {
    if (v5) {
      unint64_t v6 = *(void *)(v5 + 8);
    }
    else {
      unint64_t v6 = 0x2000;
    }
    if (v6 >= 2 * a2) {
      unint64_t v7 = 2 * a2;
    }
    else {
      unint64_t v7 = v6;
    }
  }
  if (a3 >= 0xFFFFFFFFFFFFFFE8)
  {
    int v10 = 3;
    uint64_t v11 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/arena.cc";
    int v12 = 245;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (min_bytes) <= (std::numeric_limits<size_t>::max() - kBlockHeaderSize): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v10);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    uint64_t v5 = *((void *)this + 4);
  }
  if (v7 <= a3 + 24) {
    size_t v8 = a3 + 24;
  }
  else {
    size_t v8 = v7;
  }
  if (v5) {
    BOOL result = (void *)(*(uint64_t (**)(size_t))(v5 + 16))(v8);
  }
  else {
    BOOL result = operator new(v8);
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)this + 2, v8, memory_order_relaxed);
  return result;
}

void sub_1892109AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *google::protobuf::internal::SerialArena::AddCleanupFallback(google::protobuf::internal::SerialArena *this, void *a2, void (*a3)(void *))
{
  BOOL result = (char *)*((void *)this + 3);
  do
  {
    if (result)
    {
      if ((unint64_t)(2 * *(void *)result) >= 0x40) {
        uint64_t v7 = 64;
      }
      else {
        uint64_t v7 = 2 * *(void *)result;
      }
    }
    else
    {
      uint64_t v7 = 8;
    }
    unint64_t v8 = (16 * (_WORD)v7 + 23) & 0xFF0;
    uint64_t v9 = (char *)*((void *)this + 5);
    if (*((void *)this + 6) - (void)v9 < v8)
    {
      BOOL result = google::protobuf::internal::SerialArena::AllocateAlignedFallback(this, v8);
      int v10 = (char *)*((void *)this + 3);
    }
    else
    {
      *((void *)this + 5) = &v9[v8];
      int v10 = result;
      BOOL result = v9;
    }
    *(void *)BOOL result = v7;
    *((void *)result + 1) = v10;
    *((void *)this + 3) = result;
    *((void *)this + 7) = result + 16;
    *((void *)this + 8) = &result[16 * v7 + 16];
  }
  while (!(16 * v7));
  *((void *)result + 2) = a2;
  *((void *)result + 3) = a3;
  *((void *)this + 7) = result + 32;
  return result;
}

char *google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(atomic_ullong *this, unint64_t a2, void (*a3)(void *))
{
  unint64_t v6 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache((google::protobuf::internal::ArenaImpl *)this);
  if (*((void *)v6 + 1) == this[3])
  {
    unsigned int explicit = (google::protobuf::internal::SerialArena *)*((void *)v6 + 2);
    goto LABEL_3;
  }
  uint64_t v9 = google::protobuf::internal::ArenaImpl::thread_cache(v6);
  unsigned int explicit = (google::protobuf::internal::SerialArena *)atomic_load_explicit(this + 1, memory_order_acquire);
  if (explicit && *((void **)explicit + 1) == v9)
  {
LABEL_3:
    return google::protobuf::internal::SerialArena::AllocateAlignedAndAddCleanup(explicit, a2, a3);
  }

  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanupFallback((google::protobuf::internal::ArenaImpl *)this, a2, a3);
}

char *google::protobuf::internal::SerialArena::AllocateAlignedAndAddCleanup(google::protobuf::internal::SerialArena *this, unint64_t a2, void (*a3)(void *))
{
  AlignedFallback = (char *)*((void *)this + 5);
  if (*((void *)this + 6) - (void)AlignedFallback < a2) {
    AlignedFallback = google::protobuf::internal::SerialArena::AllocateAlignedFallback(this, a2);
  }
  else {
    *((void *)this + 5) = &AlignedFallback[a2];
  }
  unint64_t v6 = (char **)*((void *)this + 7);
  if (v6 == *((char ***)this + 8))
  {
    google::protobuf::internal::SerialArena::AddCleanupFallback(this, AlignedFallback, a3);
  }
  else
  {
    google::protobuf::internal::ArenaImpl *v6 = AlignedFallback;
    v6[1] = (char *)a3;
    *((void *)this + 7) = v6 + 2;
  }
  return AlignedFallback;
}

char *google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanupFallback(google::protobuf::internal::ArenaImpl *this, unint64_t a2, void (*a3)(void *))
{
  unint64_t v6 = google::protobuf::internal::ArenaImpl::thread_cache(this);
  SerialArenaFallback = google::protobuf::internal::ArenaImpl::GetSerialArenaFallback((atomic_ullong *)this, v6);

  return google::protobuf::internal::SerialArena::AllocateAlignedAndAddCleanup((google::protobuf::internal::SerialArena *)SerialArenaFallback, a2, a3);
}

char *google::protobuf::internal::ArenaImpl::AddCleanup(atomic_ullong *this, void *a2, void (*a3)(void *))
{
  unint64_t v6 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache((google::protobuf::internal::ArenaImpl *)this);
  if (*((void *)v6 + 1) == this[3])
  {
    BOOL result = (char *)*((void *)v6 + 2);
    goto LABEL_3;
  }
  uint64_t v9 = google::protobuf::internal::ArenaImpl::thread_cache(v6);
  BOOL result = (char *)atomic_load_explicit(this + 1, memory_order_acquire);
  if (result && *((void **)result + 1) == v9)
  {
LABEL_3:
    unint64_t v8 = (void *)*((void *)result + 7);
    if (v8 == *((void **)result + 8))
    {
      return google::protobuf::internal::SerialArena::AddCleanupFallback((google::protobuf::internal::SerialArena *)result, a2, a3);
    }
    else
    {
      *unint64_t v8 = a2;
      v8[1] = a3;
      *((void *)result + 7) = v8 + 2;
    }
    return result;
  }

  return google::protobuf::internal::ArenaImpl::AddCleanupFallback((google::protobuf::internal::ArenaImpl *)this, a2, a3);
}

char *google::protobuf::internal::ArenaImpl::AddCleanupFallback(google::protobuf::internal::ArenaImpl *this, void *a2, void (*a3)(void *))
{
  unint64_t v6 = google::protobuf::internal::ArenaImpl::thread_cache(this);
  BOOL result = google::protobuf::internal::ArenaImpl::GetSerialArenaFallback((atomic_ullong *)this, v6);
  unint64_t v8 = (void *)*((void *)result + 7);
  if (v8 == *((void **)result + 8))
  {
    return google::protobuf::internal::SerialArena::AddCleanupFallback((google::protobuf::internal::SerialArena *)result, a2, a3);
  }
  else
  {
    *unint64_t v8 = a2;
    v8[1] = a3;
    *((void *)result + 7) = v8 + 2;
  }
  return result;
}

char *google::protobuf::internal::ArenaImpl::AllocateAlignedFallback(google::protobuf::internal::ArenaImpl *this, unint64_t a2)
{
  int v4 = google::protobuf::internal::ArenaImpl::thread_cache(this);
  SerialArenaFallback = google::protobuf::internal::ArenaImpl::GetSerialArenaFallback((atomic_ullong *)this, v4);
  uint64_t v6 = *((void *)SerialArenaFallback + 5);
  if (*((void *)SerialArenaFallback + 6) - v6 < a2)
  {
    return google::protobuf::internal::SerialArena::AllocateAlignedFallback((google::protobuf::internal::SerialArena *)SerialArenaFallback, a2);
  }
  else
  {
    *((void *)SerialArenaFallback + 5) = v6 + a2;
    return (char *)v6;
  }
}

char *google::protobuf::internal::ArenaImpl::GetSerialArenaFallback(atomic_ullong *this, void *a2)
{
  std::string::size_type v3 = this;
  unsigned int explicit = (char *)atomic_load_explicit(this, memory_order_acquire);
  if (explicit)
  {
    while (*((void **)explicit + 1) != a2)
    {
      unsigned int explicit = (char *)*((void *)explicit + 4);
      if (!explicit) {
        goto LABEL_4;
      }
    }
  }
  else
  {
LABEL_4:
    this = (atomic_ullong *)google::protobuf::internal::ArenaImpl::NewBuffer((google::protobuf::internal::ArenaImpl *)this, -1, 0x48uLL);
    this[3] = (atomic_ullong)v3;
    unsigned int explicit = (char *)(this + 3);
    this[2] = v5;
    *(_OWORD *)this = xmmword_18A628C50;
    this[4] = (atomic_ullong)a2;
    this[5] = (atomic_ullong)this;
    this[8] = (atomic_ullong)(this + 12);
    this[9] = (atomic_ullong)this + v5;
    this[6] = 0;
    this[10] = 0;
    this[11] = 0;
    atomic_ullong v6 = *v3;
    this[7] = *v3;
    atomic_ullong v7 = v6;
    atomic_compare_exchange_strong_explicit(v3, (unint64_t *)&v7, (unint64_t)(this + 3), memory_order_release, memory_order_relaxed);
    if (v7 != v6)
    {
      atomic_ullong v8 = v7;
      do
      {
        this[7] = v7;
        atomic_compare_exchange_strong_explicit(v3, (unint64_t *)&v8, (unint64_t)explicit, memory_order_release, memory_order_relaxed);
        BOOL v9 = v8 == v7;
        atomic_ullong v7 = v8;
      }
      while (!v9);
    }
  }
  int v10 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache((google::protobuf::internal::ArenaImpl *)this);
  *((void *)v10 + 2) = explicit;
  atomic_ullong v11 = v3[3];
  *((void *)google::protobuf::internal::ArenaImpl::thread_cache(v10) + 1) = v11;
  atomic_store((unint64_t)explicit, (unint64_t *)v3 + 1);
  return explicit;
}

char *google::protobuf::internal::SerialArena::AllocateAlignedFallback(google::protobuf::internal::SerialArena *this, unint64_t a2)
{
  int v4 = (void *)*((void *)this + 2);
  uint64_t v5 = v4[2];
  atomic_ullong v8 = (char *)this + 40;
  BOOL result = (char *)*((void *)this + 5);
  atomic_ullong v7 = (char *)*((void *)v8 + 1);
  do
  {
    v4[1] = result - v7 + v5;
    BOOL v9 = google::protobuf::internal::ArenaImpl::NewBuffer(*(google::protobuf::internal::ArenaImpl **)this, v5, a2);
    void *v9 = v4;
    v9[1] = 24;
    void v9[2] = v5;
    *((void *)this + 2) = v9;
    BOOL result = (char *)(v9 + 3);
    atomic_ullong v7 = (char *)v9 + v5;
    *((void *)this + 5) = v9 + 3;
    *((void *)this + 6) = (char *)v9 + v5;
    int v4 = v9;
  }
  while (v5 - 24 < a2);
  *((void *)this + 5) = &result[a2];
  return result;
}

char *google::protobuf::internal::ArenaImpl::AllocateAligned(atomic_ullong *this, unint64_t a2)
{
  int v4 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache((google::protobuf::internal::ArenaImpl *)this);
  if (*((void *)v4 + 1) == this[3])
  {
    unsigned int explicit = (google::protobuf::internal::SerialArena *)*((void *)v4 + 2);
    goto LABEL_3;
  }
  atomic_ullong v8 = google::protobuf::internal::ArenaImpl::thread_cache(v4);
  unsigned int explicit = (google::protobuf::internal::SerialArena *)atomic_load_explicit(this + 1, memory_order_acquire);
  if (explicit && *((void **)explicit + 1) == v8)
  {
LABEL_3:
    uint64_t v6 = *((void *)explicit + 5);
    if (*((void *)explicit + 6) - v6 < a2)
    {
      return google::protobuf::internal::SerialArena::AllocateAlignedFallback(explicit, a2);
    }
    else
    {
      *((void *)explicit + 5) = v6 + a2;
      return (char *)v6;
    }
  }

  return google::protobuf::internal::ArenaImpl::AllocateAlignedFallback((google::protobuf::internal::ArenaImpl *)this, a2);
}

uint64_t google::protobuf::internal::ThreadLocalStorage<google::protobuf::internal::ArenaImpl::ThreadCache>::Delete(uint64_t result)
{
  if (result) {
    JUMPOUT(0x18C11F580);
  }
  return result;
}

void google::protobuf::strings::Substitute(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, std::string *a9@<X8>, long long a10, uint64_t a11)
{
  a9->__r_.__value_.__r.__words[0] = 0;
  a9->__r_.__value_.__l.__size_ = 0;
  a9->__r_.__value_.__r.__words[2] = 0;
  *((void *)&v11 + 1) = a10;
  *(void *)&long long v11 = a8;
  google::protobuf::strings::SubstituteAndAppend(a9, a1, a2, a3, a4, a5, a6, a7, v11, *((uint64_t *)&a10 + 1), a11);
}

void sub_189211088(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::strings::SubstituteAndAppend(std::string *this, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11)
{
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  uint64_t v40 = a3;
  v41[0] = a4;
  v41[1] = a5;
  v41[2] = a6;
  v41[3] = a7;
  v41[4] = a8;
  long long v42 = a9;
  uint64_t v43 = a10;
  uint64_t v44 = a11;
  uint64_t v45 = 0;
  int v11 = *a2;
  if (!*a2) {
    return;
  }
  uint64_t v12 = a3;
  std::string::size_type v14 = this;
  int v15 = 0;
  LODWORD(v16) = 0;
  do
  {
    if (v11 == 36)
    {
      uint64_t v16 = (int)v16 + 1;
      int v17 = a2[v16];
      unsigned int v18 = v17 - 48;
      if ((v17 - 48) <= 9)
      {
        int v19 = *(_DWORD *)(v41[v18 - 1] + 8);
        if (v19 != -1)
        {
          v15 += v19;
          goto LABEL_9;
        }
        LODWORD(__p.__r_.__value_.__l.__data_) = 2;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libpro"
                                                                "tobuf/src/google/protobuf/stubs/substitute.cc";
        LODWORD(__p.__r_.__value_.__r.__words[2]) = 84;
        memset(&v39, 0, sizeof(v39));
        std::string::append(&v39, "strings::Substitute format string invalid: asked for \"$");
        snprintf((char *)&__str, 0x80uLL, "%d", v18);
        char v48 = 0;
        std::string::append(&v39, (const std::string::value_type *)&__str);
        std::string::append(&v39, "\", but only ");
        uint64_t v21 = 0;
        while (*(_DWORD *)(v12 + 8) != -1)
        {
          int v22 = v21 + 1;
          uint64_t v12 = v41[v21++];
          if (!v12) {
            goto LABEL_47;
          }
        }
        int v22 = v21;
LABEL_47:
        snprintf((char *)&__str, 0x80uLL, "%d", v22);
        char v48 = 0;
        std::string::append(&v39, (const std::string::value_type *)&__str);
        std::string::append(&v39, " args were given.  Full format string was: \"");
        std::string::basic_string[abi:ne180100]<0>(v36, a2);
        google::protobuf::CEscape((uint64_t *)v36, v33, &__str);
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_str = &__str;
        }
        else {
          p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
        }
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type size = __str.__r_.__value_.__l.__size_;
        }
        std::string::append(&v39, (const std::string::value_type *)p_str, size);
        std::string::append(&v39, "\".");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__p);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        if (v37 < 0) {
          operator delete(v36[0]);
        }
        if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          return;
        }
        unint64_t v26 = (void *)v39.__r_.__value_.__r.__words[0];
LABEL_59:
        operator delete(v26);
        return;
      }
      if (v17 != 36)
      {
        LODWORD(__str.__r_.__value_.__l.__data_) = 2;
        __str.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libp"
                                                                  "rotobuf/src/google/protobuf/stubs/substitute.cc";
        LODWORD(__str.__r_.__value_.__r.__words[2]) = 97;
        memset(v47, 0, 24);
        std::string::append(v47, "Invalid strings::Substitute() format string: \"");
        std::string::basic_string[abi:ne180100]<0>(v36, a2);
        google::protobuf::CEscape((uint64_t *)v36, v23, &__p);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::__split_buffer<std::string>::pointer p_p = &__p;
        }
        else {
          std::__split_buffer<std::string>::pointer p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type v25 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type v25 = __p.__r_.__value_.__l.__size_;
        }
        std::string::append(v47, (const std::string::value_type *)p_p, v25);
        std::string::append(v47, "\".");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__str);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (v37 < 0) {
          operator delete(v36[0]);
        }
        if ((SHIBYTE(v47[0].__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          return;
        }
        unint64_t v26 = (void *)v47[0].__r_.__value_.__r.__words[0];
        goto LABEL_59;
      }
    }
    ++v15;
LABEL_9:
    uint64_t v16 = (int)v16 + 1;
    int v11 = a2[v16];
  }
  while (a2[v16]);
  if (v15)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
      std::string::size_type v20 = this->__r_.__value_.__l.__size_;
    }
    else {
      LODWORD(v20) = HIBYTE(this->__r_.__value_.__r.__words[2]);
    }
    std::string::resize(this, v15 + (int)v20, 0);
    if (SHIBYTE(v14->__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v14->__r_.__value_.__l.__size_) {
        goto LABEL_35;
      }
      std::string::size_type v14 = (std::string *)v14->__r_.__value_.__r.__words[0];
    }
    else if (!*((unsigned char *)&v14->__r_.__value_.__s + 23))
    {
LABEL_35:
      std::string::size_type v14 = 0;
    }
    int v27 = 0;
    uint64_t v28 = (char *)v14 + (int)v20;
    while (2)
    {
      int v29 = a2[v27];
      if (v29 == 36)
      {
        uint64_t v30 = v27 + 1;
        int v31 = a2[v30];
        if ((v31 - 48) > 9)
        {
          if (v31 != 36) {
            goto LABEL_44;
          }
          *v28++ = 36;
        }
        else
        {
          uint64_t v32 = v41[(v31 - 48) - 1];
          memcpy(v28, *(const void **)v32, *(int *)(v32 + 8));
          v28 += *(int *)(v32 + 8);
        }
      }
      else
      {
        if (!a2[v27]) {
          return;
        }
        *v28++ = v29;
LABEL_44:
        LODWORD(v30) = v27;
      }
      int v27 = v30 + 1;
      continue;
    }
  }
}

void sub_189211490(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  if (a44 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::Add(google::protobuf::EncodedDescriptorDatabase *this, char *a2, int a3)
{
  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)v12, 0);
  (*(void (**)(void *))(v12[0] + 40))(v12);
  if (google::protobuf::internal::MergeFromImpl<false>(a2, a3, (google::protobuf::MessageLite *)v12, 1))
  {
    uint64_t v6 = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddFile<google::protobuf::FileDescriptorProto>(*((void *)this + 1), (uint64_t)v12, a2, a3);
  }
  else
  {
    int v8 = 2;
    BOOL v9 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor_database.cc";
    int v10 = 559;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Invalid file descriptor data passed to EncodedDescriptorDatabase::Add().");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v8);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    uint64_t v6 = 0;
  }
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v12);
  return v6;
}

void sub_18921163C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)&a19);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddFile<google::protobuf::FileDescriptorProto>(uint64_t a1, uint64_t a2, const char *a3, int a4)
{
  std::string::size_type v8 = a1 + 16;
  unint64_t v9 = *(void *)(a1 + 16);
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10 >= v9)
  {
    unint64_t v12 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v10 - *(void *)a1) >> 3);
    unint64_t v13 = v12 + 1;
    if (v12 + 1 > 0x666666666666666) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v14 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v9 - *(void *)a1) >> 3);
    if (2 * v14 > v13) {
      unint64_t v13 = 2 * v14;
    }
    if (v14 >= 0x333333333333333) {
      unint64_t v15 = 0x666666666666666;
    }
    else {
      unint64_t v15 = v13;
    }
    v95.__r_.__value_.__l.__size_ = v8;
    uint64_t v16 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CAARiseTransitSetDetails2>>(v15);
    unsigned int v18 = &v16[40 * v12];
    *(void *)unsigned int v18 = a3;
    *((_DWORD *)v18 + 2) = a4;
    *((void *)v18 + 3) = 0;
    *((void *)v18 + 4) = 0;
    *((void *)v18 + 2) = 0;
    int v11 = v18 + 40;
    uint64_t v20 = *(void *)a1;
    unint64_t v19 = *(void *)(a1 + 8);
    if (v19 == *(void *)a1)
    {
      int64x2_t v24 = vdupq_n_s64(v19);
    }
    else
    {
      do
      {
        uint64_t v21 = *(void *)(v19 - 40);
        v19 -= 40;
        int v22 = *(_DWORD *)(v19 + 8);
        *((void *)v18 - 5) = v21;
        v18 -= 40;
        *((_DWORD *)v18 + 2) = v22;
        long long v23 = *(_OWORD *)(v19 + 16);
        *((void *)v18 + 4) = *(void *)(v19 + 32);
        *((_OWORD *)v18 + 1) = v23;
        *(void *)(v19 + 24) = 0;
        *(void *)(v19 + ++*(_DWORD *)(this + 32) = 0;
        *(void *)(v19 + 16) = 0;
      }
      while (v19 != v20);
      int64x2_t v24 = *(int64x2_t *)a1;
    }
    *(void *)a1 = v18;
    *(void *)(a1 + 8) = v11;
    *(int64x2_t *)&__p[8] = v24;
    std::string::size_type v25 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = &v16[40 * v17];
    v95.__r_.__value_.__r.__words[0] = v25;
    *(void *)std::string __p = v24.i64[0];
    std::__split_buffer<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EncodedEntry>::~__split_buffer((uint64_t)__p);
  }
  else
  {
    *(void *)unint64_t v10 = a3;
    *(_DWORD *)(v10 + 8) = a4;
    *(void *)(v10 + 24) = 0;
    *(void *)(v10 + ++*(_DWORD *)(this + 32) = 0;
    int v11 = (char *)(v10 + 40);
    *(void *)(v10 + 16) = 0;
  }
  *(void *)(a1 + 8) = v11;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v96, (uint64_t *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL), a3);
  {
    *(_DWORD *)std::string __p = 2;
    *(void *)&__p[8] = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor_database.cc";
    *(_DWORD *)&__p[16] = 631;
    memset(&v95, 0, sizeof(v95));
    std::string::append(&v95, "Invalid package name: ");
    unint64_t v36 = *(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL;
    int v37 = *(char *)(v36 + 23);
    if (v37 >= 0) {
      uint64_t v38 = (const std::string::value_type *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL);
    }
    else {
      uint64_t v38 = *(const std::string::value_type **)v36;
    }
    if (v37 >= 0) {
      std::string::size_type v39 = *(unsigned __int8 *)(v36 + 23);
    }
    else {
      std::string::size_type v39 = *(void *)(v36 + 8);
    }
    std::string::append(&v95, v38, v39);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)__p);
    goto LABEL_107;
  }
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v93, (uint64_t *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL), v26);
  long long v98 = v93;
  google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v98, __p);
  uint64_t v28 = *(void *)(a1 + 8);
  uint64_t v29 = v28 - 24;
  if (*(char *)(v28 - 1) < 0) {
    operator delete(*(void **)v29);
  }
  long long v30 = *(_OWORD *)__p;
  *(void *)(v29 + 16) = *(void *)&__p[16];
  *(_OWORD *)uint64_t v29 = v30;
  *(_DWORD *)std::string __p = -858993459 * ((*(void *)(a1 + 8) - *(void *)a1) >> 3) - 1;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v92, (uint64_t *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL), v27);
  long long v98 = v92;
  google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v98, &__p[8]);
  unint64_t v33 = (char **)(a1 + 32);
  uint64_t v32 = *(char **)(a1 + 32);
  if (v32)
  {
    while (1)
    {
      while (1)
      {
        unint64_t v34 = (char **)v32;
        uint64_t v35 = (uint64_t)(v32 + 32);
        if (!google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare::operator()((uint64_t)__p, (uint64_t)(v32 + 32), v31))break; {
        uint64_t v32 = *v34;
        }
        unint64_t v33 = v34;
        if (!*v34) {
          goto LABEL_32;
        }
      }
      if (!google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare::operator()(v35, (uint64_t)__p, v31))break; {
      unint64_t v33 = v34 + 1;
      }
      uint64_t v32 = v34[1];
      if (!v32) {
        goto LABEL_32;
      }
    }
    if (*v33)
    {
      if (v95.__r_.__value_.__s.__data_[7] < 0) {
        operator delete(*(void **)&__p[8]);
      }
      goto LABEL_100;
    }
  }
  else
  {
    unint64_t v34 = (char **)(a1 + 32);
  }
LABEL_32:
  uint64_t v40 = (char *)operator new(0x40uLL);
  *((_DWORD *)v40 + 8) = *(_DWORD *)__p;
  uint64_t v41 = (std::string *)(v40 + 40);
  if (v95.__r_.__value_.__s.__data_[7] < 0)
  {
    std::string::__init_copy_ctor_external(v41, *(const std::string::value_type **)&__p[8], *(std::string::size_type *)&__p[16]);
  }
  else
  {
    *(_OWORD *)&v41->__r_.__value_.__l.__data_ = *(_OWORD *)&__p[8];
    *((void *)v40 + 7) = v95.__r_.__value_.__r.__words[0];
  }
  *(void *)uint64_t v40 = 0;
  *((void *)v40 + 1) = 0;
  *((void *)v40 + 2) = v34;
  *unint64_t v33 = v40;
  uint64_t v42 = **(void **)(a1 + 24);
  if (v42)
  {
    *(void *)(a1 + 24) = v42;
    uint64_t v40 = *v33;
  }
  std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(a1 + 32), (uint64_t *)v40);
  ++*(void *)(a1 + 40);
  uint64_t v44 = *(void *)(a1 + 56);
  uint64_t v45 = *(void *)(a1 + 64);
  uint64_t v46 = (uint64_t *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL);
  if (v45 != v44)
  {
    unint64_t v47 = (v45 - v44) >> 5;
    do
    {
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v98, v46, v43);
      uint64_t v48 = v44 + 32 * (v47 >> 1);
      BOOL v49 = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare::operator()(v48, (const void *)v98, *((const char **)&v98 + 1));
      if (v49) {
        v47 += ~(v47 >> 1);
      }
      else {
        v47 >>= 1;
      }
      if (v49) {
        uint64_t v44 = v48 + 32;
      }
    }
    while (v47);
  }
  if (v45 == v44)
  {
    char v58 = 0;
  }
  else
  {
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v97, v46, v43);
    long long v50 = (const void *)v97[0];
    uint64_t v51 = v97[1];
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v98, (uint64_t *)(v44 + 8), v52);
    uint64_t v53 = *((void *)&v98 + 1);
    if (v51 >= *((uint64_t *)&v98 + 1)) {
      size_t v54 = *((void *)&v98 + 1);
    }
    else {
      size_t v54 = v51;
    }
    int v55 = memcmp(v50, (const void *)v98, v54);
    if (v55) {
      BOOL v56 = 0;
    }
    else {
      BOOL v56 = v51 < v53;
    }
    char v57 = !v56;
    if (v55 >= 0) {
      char v58 = v57;
    }
    else {
      char v58 = 0;
    }
  }
  if (v95.__r_.__value_.__s.__data_[7] < 0)
  {
    operator delete(*(void **)&__p[8]);
    if (v58)
    {
LABEL_100:
      *(_DWORD *)std::string __p = 2;
      *(void *)&__p[8] = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor_database.cc";
      *(_DWORD *)&__p[16] = 641;
      memset(&v95, 0, sizeof(v95));
      std::string::append(&v95, "File already exists in database: ");
      unint64_t v82 = *(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL;
      int v83 = *(char *)(v82 + 23);
      if (v83 >= 0) {
        uint64_t v84 = (const std::string::value_type *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL);
      }
      else {
        uint64_t v84 = *(const std::string::value_type **)v82;
      }
      if (v83 >= 0) {
        std::string::size_type v85 = *(unsigned __int8 *)(v82 + 23);
      }
      else {
        std::string::size_type v85 = *(void *)(v82 + 8);
      }
      std::string::append(&v95, v84, v85);
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)__p);
LABEL_107:
      if (SHIBYTE(v95.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v95.__r_.__value_.__l.__data_);
      }
      return 0;
    }
  }
  else if (v58)
  {
    goto LABEL_100;
  }
  uint64_t v59 = *(void *)(a2 + 64);
  if (v59) {
    uint64_t v60 = (uint64_t *)(v59 + 8);
  }
  else {
    uint64_t v60 = 0;
  }
  uint64_t v61 = *(int *)(a2 + 56);
  if (v61)
  {
    uint64_t v62 = 8 * v61;
    while (1)
    {
      uint64_t v63 = *v60;
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v91, (uint64_t *)(*(void *)(*v60 + 216) & 0xFFFFFFFFFFFFFFFELL), v43);
      uint64_t result = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddSymbol(a1, v91[0], (std::string::size_type)v91[1]);
      if (!result) {
        break;
      }
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v90, (uint64_t *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL), v65);
      if ((google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddNestedExtensions<google::protobuf::DescriptorProto>(a1, v90[0], (const char *)v90[1], v63) & 1) == 0)return 0; {
      ++v60;
      }
      v62 -= 8;
      if (!v62) {
        goto LABEL_71;
      }
    }
  }
  else
  {
LABEL_71:
    uint64_t v66 = *(void *)(a2 + 88);
    if (v66) {
      uint64_t v67 = v66 + 8;
    }
    else {
      uint64_t v67 = 0;
    }
    uint64_t v68 = *(int *)(a2 + 80);
    if (v68)
    {
      uint64_t v69 = 8 * v68;
      do
      {
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v89, (uint64_t *)(*(void *)(*(void *)v67 + 96) & 0xFFFFFFFFFFFFFFFELL), v43);
        if ((google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddSymbol(a1, v89[0], (std::string::size_type)v89[1]) & 1) == 0)return 0; {
        v67 += 8;
        }
        v69 -= 8;
      }
      while (v69);
    }
    uint64_t v70 = *(void *)(a2 + 136);
    if (v70) {
      uint64_t v71 = (uint64_t *)(v70 + 8);
    }
    else {
      uint64_t v71 = 0;
    }
    uint64_t v72 = *(int *)(a2 + 128);
    if (v72)
    {
      uint64_t v73 = 8 * v72;
      while (1)
      {
        uint64_t v74 = *v71;
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v88, (uint64_t *)(*(void *)(*v71 + 24) & 0xFFFFFFFFFFFFFFFELL), v43);
        uint64_t result = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddSymbol(a1, v88[0], (std::string::size_type)v88[1]);
        if (!result) {
          break;
        }
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v87, (uint64_t *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL), v75);
        if ((google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddExtension<google::protobuf::FieldDescriptorProto>(a1, v87[0], (const char *)v87[1], v74) & 1) == 0)return 0; {
        ++v71;
        }
        v73 -= 8;
        if (!v73) {
          goto LABEL_86;
        }
      }
    }
    else
    {
LABEL_86:
      uint64_t v76 = *(void *)(a2 + 112);
      if (v76) {
        uint64_t v77 = (uint64_t *)(v76 + 8);
      }
      else {
        uint64_t v77 = 0;
      }
      uint64_t v78 = *(int *)(a2 + 104);
      if (v78)
      {
        uint64_t v79 = 8 * v78 - 8;
        do
        {
          uint64_t v80 = *v77++;
          google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v86, (uint64_t *)(*(void *)(v80 + 48) & 0xFFFFFFFFFFFFFFFELL), v43);
          uint64_t result = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddSymbol(a1, v86[0], (std::string::size_type)v86[1]);
          if (result) {
            BOOL v81 = v79 == 0;
          }
          else {
            BOOL v81 = 1;
          }
          v79 -= 8;
        }
        while (!v81);
      }
      else
      {
        return 1;
      }
    }
  }
  return result;
}

void sub_189211CAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  operator delete(v36);
  if (a31 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::FindFileByName(uint64_t a1, uint64_t *a2, char *a3)
{
  int v4 = *(google::protobuf::EncodedDescriptorDatabase::DescriptorIndex **)(a1 + 8);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v19, a2, a3);
  uint64_t v5 = (const void *)v19[0];
  int64_t v6 = v19[1];
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EnsureFlat(v4, v7, v8);
  unint64_t v9 = (uint64_t *)*((void *)v4 + 7);
  uint64_t v10 = *((void *)v4 + 8) - (void)v9;
  if (!v10) {
    return 0;
  }
  unint64_t v11 = v10 >> 5;
  do
  {
    uint64_t v12 = (uint64_t)&v9[4 * (v11 >> 1)];
    BOOL v13 = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare::operator()(v12, v5, (const char *)v6);
    if (v13) {
      v11 += ~(v11 >> 1);
    }
    else {
      v11 >>= 1;
    }
    if (v13) {
      unint64_t v9 = (uint64_t *)(v12 + 32);
    }
  }
  while (v11);
  if (*((uint64_t **)v4 + 8) == v9) {
    return 0;
  }
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(__s1, v9 + 1, v14);
  if (__s1[1] != (void *)v6 || v6 >= 1 && __s1[0] != v5 && memcmp(__s1[0], v5, v6)) {
    return 0;
  }
  uint64_t v15 = *(void *)v4;
  uint64_t v16 = *(unsigned char **)(*(void *)v4 + 40 * *(int *)v9);
  if (!v16) {
    return 0;
  }
  int64_t v17 = *(int *)(v15 + 40 * *(int *)v9 + 8);
  (*(void (**)(char *))(*(void *)a3 + 40))(a3);
  return google::protobuf::internal::MergeFromImpl<false>(v16, v17, (google::protobuf::MessageLite *)a3, 1);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::FindFileContainingSymbol(uint64_t a1, uint64_t *a2, const char *a3)
{
  std::string::size_type v3 = (google::protobuf::MessageLite *)a3;
  int v4 = *(google::protobuf::EncodedDescriptorDatabase::DescriptorIndex **)(a1 + 8);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v37, a2, a3);
  uint64_t v5 = (const void *)v37[0];
  int64_t v6 = v37[1];
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EnsureFlat(v4, v7, v8);
  unint64_t v9 = (int *)*((void *)v4 + 14);
  uint64_t v10 = *((void *)v4 + 15) - (void)v9;
  if (v10)
  {
    unint64_t v36 = v3;
    unint64_t v11 = (uint64_t *)*((void *)v4 + 13);
    unint64_t v12 = v10 >> 5;
    while (1)
    {
      while (1)
      {
        unint64_t v13 = v12 >> 1;
        google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::GetParts(&v42, *v11, (const char *)&v9[8 * (v12 >> 1)]);
        std::string::size_type size = v42.__r_.__value_.__l.__size_;
        std::string::size_type v15 = v6 >= v42.__r_.__value_.__l.__size_ ? v42.__r_.__value_.__l.__size_ : v6;
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v5;
        __p.__r_.__value_.__l.__size_ = v15;
        int v16 = google::protobuf::StringPiece::compare((uint64_t)&__p, v42.__r_.__value_.__l.__data_, v15);
        if (v16) {
          break;
        }
        if (v6 == size)
        {
          uint64_t v17 = v43;
          int v18 = memcmp(0, (const void *)v42.__r_.__value_.__r.__words[2], v43 & (v43 >> 63));
          if ((v18 & 0x80000000) == 0 && (v17 <= 0 || v18 != 0)) {
            goto LABEL_8;
          }
        }
        else
        {
          google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&__p, &v9[8 * (v12 >> 1)], (const char *)*v11);
          google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v40, (uint64_t *)&__p, v20);
          int64_t v21 = v41;
          if (v6 >= v41) {
            size_t v22 = v41;
          }
          else {
            size_t v22 = v6;
          }
          int v23 = memcmp(v5, v40, v22);
          if (v23) {
            BOOL v24 = 0;
          }
          else {
            BOOL v24 = v6 < v21;
          }
          char v25 = v24;
          if (v23 >= 0) {
            char v26 = v25;
          }
          else {
            char v26 = 1;
          }
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          if ((v26 & 1) == 0) {
            goto LABEL_8;
          }
        }
LABEL_33:
        v12 >>= 1;
        if (!v13)
        {
LABEL_34:
          uint64_t v28 = (int *)*((void *)v4 + 14);
          int v27 = (int *)*((void *)v4 + 15);
          std::string::size_type v3 = v36;
          goto LABEL_36;
        }
      }
      if (v16 < 0) {
        goto LABEL_33;
      }
LABEL_8:
      v9 += 8 * (v12 >> 1) + 8;
      v12 += ~v13;
      if (!v12) {
        goto LABEL_34;
      }
    }
  }
  int v27 = (int *)*((void *)v4 + 14);
  uint64_t v28 = v27;
LABEL_36:
  if (v9 == v28) {
    uint64_t v29 = 0;
  }
  else {
    uint64_t v29 = -1;
  }
  long long v30 = &v9[8 * v29];
  if (v30 != v27)
  {
    google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&v42, &v9[8 * v29], *(const char **)v4);
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v38, (uint64_t *)&v42, v31);
    {
      uint64_t v32 = *(void *)v4 + 40 * *v30;
      unint64_t v33 = *(unsigned char **)v32;
      int64_t v34 = *(int *)(v32 + 8);
    }
    else
    {
      unint64_t v33 = 0;
      int64_t v34 = 0;
    }
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v42.__r_.__value_.__l.__data_);
      if (v33) {
        goto LABEL_45;
      }
    }
    else if (v33)
    {
LABEL_45:
      (*(void (**)(google::protobuf::MessageLite *))(*(void *)v3 + 40))(v3);
      return google::protobuf::internal::MergeFromImpl<false>(v33, v34, v3, 1);
    }
  }
  return 0;
}

void sub_189212084(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::FindFileContainingExtension(uint64_t a1, uint64_t *a2, const char *a3, google::protobuf::MessageLite *a4)
{
  int v5 = (int)a3;
  int64_t v6 = *(google::protobuf::EncodedDescriptorDatabase::DescriptorIndex **)(a1 + 8);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v21, a2, a3);
  uint64_t v7 = (const void *)v21[0];
  int64_t v8 = v21[1];
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EnsureFlat(v6, v9, v10);
  uint64_t v11 = *((void *)v6 + 21);
  uint64_t v12 = *((void *)v6 + 22);
  *(void *)&long long v22 = v7;
  *((void *)&v22 + 1) = v8;
  int v23 = v5;
  uint64_t v13 = std::__lower_bound[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry *>,std::__wrap_iter<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry *>,std::tuple<google::protobuf::StringPiece,int>,std::__identity,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionCompare>(v11, v12, &v22);
  if (*((void *)v6 + 22) == v13) {
    return 0;
  }
  std::string::size_type v15 = (int *)v13;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v22, (uint64_t *)(v13 + 8), v14);
  int v16 = *((void *)&v22 + 1) ? (const void *)(v22 + 1) : (const void *)v22;
  if (*((void *)&v22 + 1) - (*((void *)&v22 + 1) != 0) != v8 || v8 >= 1 && v16 != v7 && memcmp(v16, v7, v8)) {
    return 0;
  }
  if (v15[8] != v5) {
    return 0;
  }
  uint64_t v17 = *(void *)v6;
  int v18 = *(unsigned char **)(*(void *)v6 + 40 * *v15);
  if (!v18) {
    return 0;
  }
  int64_t v19 = *(int *)(v17 + 40 * *v15 + 8);
  (*(void (**)(google::protobuf::MessageLite *))(*(void *)a4 + 40))(a4);
  return google::protobuf::internal::MergeFromImpl<false>(v18, v19, a4, 1);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::FindAllExtensionNumbers(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(google::protobuf::EncodedDescriptorDatabase::DescriptorIndex **)(a1 + 8);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v30, a2, (const char *)a3);
  int v5 = (const void *)v30[0];
  int64_t v6 = v30[1];
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EnsureFlat(v4, v7, v8);
  uint64_t v9 = *((void *)v4 + 21);
  uint64_t v10 = *((void *)v4 + 22);
  *(void *)&long long v31 = v5;
  *((void *)&v31 + 1) = v6;
  int v32 = 0;
  uint64_t v11 = std::__lower_bound[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry *>,std::__wrap_iter<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry *>,std::tuple<google::protobuf::StringPiece,int>,std::__identity,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionCompare>(v9, v10, &v31);
  if (*((void *)v4 + 22) == v11
    || (uint64_t v13 = v11,
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v31, (uint64_t *)(v11 + 8), v12),
        BOOL v15 = *((void *)&v31 + 1) != 0,
        *((void *)&v31 + 1) - v15 != v6))
  {
    char v16 = 0;
  }
  else
  {
    char v16 = 0;
    uint64_t v17 = (const void *)(v31 + v15);
    while (v6 < 1 || v17 == v5 || !memcmp(v17, v5, v6))
    {
      int64_t v19 = *(_DWORD **)(a3 + 8);
      unint64_t v18 = *(void *)(a3 + 16);
      if ((unint64_t)v19 >= v18)
      {
        int64_t v21 = *(_DWORD **)a3;
        uint64_t v22 = ((uint64_t)v19 - *(void *)a3) >> 2;
        unint64_t v23 = v22 + 1;
        if ((unint64_t)(v22 + 1) >> 62) {
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v24 = v18 - (void)v21;
        if (v24 >> 1 > v23) {
          unint64_t v23 = v24 >> 1;
        }
        if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v25 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v25 = v23;
        }
        if (v25)
        {
          char v26 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned int>>(a3 + 16, v25);
          int64_t v21 = *(_DWORD **)a3;
          int64_t v19 = *(_DWORD **)(a3 + 8);
        }
        else
        {
          char v26 = 0;
        }
        int v27 = &v26[4 * v22];
        *(_DWORD *)int v27 = *(_DWORD *)(v13 + 32);
        uint64_t v20 = v27 + 4;
        while (v19 != v21)
        {
          int v28 = *--v19;
          *((_DWORD *)v27 - 1) = v28;
          v27 -= 4;
        }
        *(void *)a3 = v27;
        *(void *)(a3 + 8) = v20;
        *(void *)(a3 + 16) = &v26[4 * v25];
        if (v21) {
          operator delete(v21);
        }
      }
      else
      {
        _DWORD *v19 = *(_DWORD *)(v13 + 32);
        uint64_t v20 = v19 + 1;
      }
      *(void *)(a3 + 8) = v20;
      if (v13 + 40 == *((void *)v4 + 22))
      {
        char v16 = 1;
        return v16 & 1;
      }
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v31, (uint64_t *)(v13 + 48), v14);
      if (*((void *)&v31 + 1)) {
        uint64_t v17 = (const void *)(v31 + 1);
      }
      else {
        uint64_t v17 = (const void *)v31;
      }
      char v16 = 1;
      v13 += 40;
      if (*((void *)&v31 + 1) - (*((void *)&v31 + 1) != 0) != v6) {
        return v16 & 1;
      }
    }
  }
  return v16 & 1;
}

uint64_t google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddSymbol(uint64_t a1, unsigned __int8 *a2, std::string::size_type a3)
{
  int v63 = -858993459 * ((*(void *)(a1 + 8) - *(void *)a1) >> 3) - 1;
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
  __p.__r_.__value_.__l.__size_ = a3;
  google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&__p, &v64);
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&v62, &v63, *(const char **)a1);
  {
    int64_t v8 = (void *)(a1 + 88);
    uint64_t v7 = *(void *)(a1 + 88);
    std::string::size_type v9 = a1 + 88;
    uint64_t v10 = (void *)(a1 + 88);
    if (v7)
    {
      uint64_t v10 = (void *)(a1 + 88);
      do
      {
        int v11 = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>((uint64_t **)(a1 + 104), (char *)&v63, (char *)(v7 + 32));
        uint64_t v12 = (uint64_t *)(v7 + 8);
        if (v11)
        {
          uint64_t v12 = (uint64_t *)v7;
          uint64_t v10 = (void *)v7;
        }
        uint64_t v7 = *v12;
      }
      while (*v12);
    }
    uint64_t v13 = (void **)(a1 + 80);
    if (v10 == *(void **)(a1 + 80))
    {
      BOOL v15 = v10;
    }
    else
    {
      unint64_t v14 = (void *)*v10;
      if (*v10)
      {
        do
        {
          BOOL v15 = v14;
          unint64_t v14 = (void *)v14[1];
        }
        while (v14);
      }
      else
      {
        do
        {
          BOOL v15 = (void *)v10[2];
          BOOL v16 = *v15 == (void)v10;
          uint64_t v10 = v15;
        }
        while (v16);
      }
    }
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v61, (uint64_t *)&v62, v6);
    v73[0] = v61;
    if (v15 != v8)
    {
      google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&__p, (int *)v15 + 8, *(const char **)a1);
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v71, (uint64_t *)&__p, v20);
      BOOL v22 = IsSubSymbol;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__p.__r_.__value_.__l.__data_);
        if (v22) {
          goto LABEL_24;
        }
      }
      else if (IsSubSymbol)
      {
LABEL_24:
        LODWORD(__p.__r_.__value_.__l.__data_) = 2;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libpro"
                                                                "tobuf/src/google/protobuf/descriptor_database.cc";
        LODWORD(__p.__r_.__value_.__r.__words[2]) = 668;
        memset(&v70, 0, sizeof(v70));
        std::string::append(&v70, "Symbol name \"");
        google::protobuf::internal::LogMessage::operator<<(&__p, (google::protobuf::StringPiece *)v73);
        std::string::append(&v70, "\" conflicts with the existing symbol \"");
        google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&v68, (int *)v15 + 8, *(const char **)a1);
        if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          unint64_t v23 = &v68;
        }
        else {
          unint64_t v23 = (std::string *)v68.__r_.__value_.__r.__words[0];
        }
        if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type size = HIBYTE(v68.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type size = v68.__r_.__value_.__l.__size_;
        }
LABEL_30:
        std::string::append(&v70, (const std::string::value_type *)v23, size);
        std::string::append(&v70, "\".");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__p);
        goto LABEL_79;
      }
      unint64_t v25 = (void *)v15[1];
      if (v25)
      {
        do
        {
          char v26 = v25;
          unint64_t v25 = (void *)*v25;
        }
        while (v25);
      }
      else
      {
        do
        {
          char v26 = (void *)v15[2];
          BOOL v16 = *v26 == (void)v15;
          BOOL v15 = v26;
        }
        while (!v16);
      }
      if (v26 != v8)
      {
        long long v27 = v73[0];
        google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&__p, (int *)v26 + 8, *(const char **)a1);
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v66, (uint64_t *)&__p, v28);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        std::string::size_type v9 = (std::string::size_type)v26;
        if (v29)
        {
          LODWORD(__p.__r_.__value_.__l.__data_) = 2;
          __p.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libp"
                                                                  "rotobuf/src/google/protobuf/descriptor_database.cc";
          LODWORD(__p.__r_.__value_.__r.__words[2]) = 682;
          memset(&v70, 0, sizeof(v70));
          std::string::append(&v70, "Symbol name \"");
          google::protobuf::internal::LogMessage::operator<<(&__p, (google::protobuf::StringPiece *)v73);
          std::string::append(&v70, "\" conflicts with the existing symbol \"");
          google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&v68, (int *)v26 + 8, *(const char **)a1);
          if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            unint64_t v23 = &v68;
          }
          else {
            unint64_t v23 = (std::string *)v68.__r_.__value_.__r.__words[0];
          }
          if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type size = HIBYTE(v68.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type size = v68.__r_.__value_.__l.__size_;
          }
          goto LABEL_30;
        }
      }
    }
    uint64_t v30 = *(void *)(a1 + 112);
    uint64_t v31 = *(void *)(a1 + 120);
    __p.__r_.__value_.__r.__words[0] = *(void *)(a1 + 104);
    if (v31 == v30)
    {
      uint64_t v33 = v30;
    }
    else
    {
      unint64_t v32 = (v31 - v30) >> 5;
      do
      {
        if (google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>((uint64_t **)&__p, (char *)&v63, (char *)(v30 + 32 * (v32 >> 1))))
        {
          v32 >>= 1;
        }
        else
        {
          v30 += 32 * (v32 >> 1) + 32;
          v32 += ~(v32 >> 1);
        }
      }
      while (v32);
      uint64_t v33 = *(void *)(a1 + 112);
    }
    if (v30 == v33) {
      uint64_t v34 = 0;
    }
    else {
      uint64_t v34 = -1;
    }
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v60, (uint64_t *)&v62, v19);
    uint64_t v35 = (int *)(v30 + 32 * v34);
    unint64_t v36 = *(int **)(a1 + 120);
    v73[0] = v60;
    if (v35 != v36)
    {
      google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&__p, v35, *(const char **)a1);
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v71, (uint64_t *)&__p, v37);
      BOOL v39 = v38;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__p.__r_.__value_.__l.__data_);
        if (v39) {
          goto LABEL_61;
        }
      }
      else if (v38)
      {
LABEL_61:
        LODWORD(__p.__r_.__value_.__l.__data_) = 2;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libpro"
                                                                "tobuf/src/google/protobuf/descriptor_database.cc";
        LODWORD(__p.__r_.__value_.__r.__words[2]) = 668;
        memset(&v70, 0, sizeof(v70));
        std::string::append(&v70, "Symbol name \"");
        google::protobuf::internal::LogMessage::operator<<(&__p, (google::protobuf::StringPiece *)v73);
        std::string::append(&v70, "\" conflicts with the existing symbol \"");
        google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&v68, v35, *(const char **)a1);
        if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v40 = &v68;
        }
        else {
          uint64_t v40 = (std::string *)v68.__r_.__value_.__r.__words[0];
        }
        if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type v41 = HIBYTE(v68.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type v41 = v68.__r_.__value_.__l.__size_;
        }
LABEL_78:
        std::string::append(&v70, (const std::string::value_type *)v40, v41);
        std::string::append(&v70, "\".");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__p);
LABEL_79:
        if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v68.__r_.__value_.__l.__data_);
        }
        goto LABEL_81;
      }
      std::string v42 = v35 + 8;
      if (v42 != v36)
      {
        long long v43 = v73[0];
        google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&__p, v42, *(const char **)a1);
        google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v66, (uint64_t *)&__p, v44);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (v45)
        {
          LODWORD(__p.__r_.__value_.__l.__data_) = 2;
          __p.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libp"
                                                                  "rotobuf/src/google/protobuf/descriptor_database.cc";
          LODWORD(__p.__r_.__value_.__r.__words[2]) = 682;
          memset(&v70, 0, sizeof(v70));
          std::string::append(&v70, "Symbol name \"");
          google::protobuf::internal::LogMessage::operator<<(&__p, (google::protobuf::StringPiece *)v73);
          std::string::append(&v70, "\" conflicts with the existing symbol \"");
          google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&v68, v42, *(const char **)a1);
          if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v40 = &v68;
          }
          else {
            uint64_t v40 = (std::string *)v68.__r_.__value_.__r.__words[0];
          }
          if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v41 = HIBYTE(v68.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v41 = v68.__r_.__value_.__l.__size_;
          }
          goto LABEL_78;
        }
      }
    }
    if (v8 == (void *)v9
      || google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>((uint64_t **)(a1 + 104), (char *)&v63, (char *)(v9 + 32)))
    {
      std::string::size_type v48 = v9;
      if (*v13 == (void *)v9) {
        goto LABEL_103;
      }
      BOOL v49 = *(char **)v9;
      if (*(void *)v9)
      {
        do
        {
          std::string::size_type v48 = (std::string::size_type)v49;
          BOOL v49 = (char *)*((void *)v49 + 1);
        }
        while (v49);
      }
      else
      {
        std::string::size_type v54 = v9;
        do
        {
          std::string::size_type v48 = *(void *)(v54 + 16);
          BOOL v16 = *(void *)v48 == v54;
          std::string::size_type v54 = v48;
        }
        while (v16);
      }
      if (google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>((uint64_t **)(a1 + 104), (char *)(v48 + 32), (char *)&v63))
      {
LABEL_103:
        if (!*(void *)v9)
        {
          __p.__r_.__value_.__r.__words[0] = v9;
LABEL_116:
          BOOL v56 = (char *)operator new(0x40uLL);
          *((_DWORD *)v56 + 8) = v63;
          char v57 = (std::string *)(v56 + 40);
          if (SHIBYTE(v65) < 0)
          {
            std::string::__init_copy_ctor_external(v57, (const std::string::value_type *)v64, *((std::string::size_type *)&v64 + 1));
          }
          else
          {
            *(_OWORD *)&v57->__r_.__value_.__l.__data_ = v64;
            *((void *)v56 + 7) = v65;
          }
          std::string::size_type v58 = __p.__r_.__value_.__r.__words[0];
          *(void *)BOOL v56 = 0;
          *((void *)v56 + 1) = 0;
          *((void *)v56 + 2) = v58;
          *(void *)std::string::size_type v9 = v56;
          uint64_t v59 = (void *)**v13;
          if (v59)
          {
            *uint64_t v13 = v59;
            BOOL v56 = *(char **)v9;
          }
          std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(a1 + 88), (uint64_t *)v56);
          ++*(void *)(a1 + 96);
          goto LABEL_122;
        }
        __p.__r_.__value_.__r.__words[0] = v48;
        uint64_t v51 = (uint64_t *)(v48 + 8);
        goto LABEL_115;
      }
      goto LABEL_114;
    }
    if (!google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>((uint64_t **)(a1 + 104), (char *)(v9 + 32), (char *)&v63))goto LABEL_122; {
    uint64_t v51 = (uint64_t *)(v9 + 8);
    }
    uint64_t v50 = *(void *)(v9 + 8);
    if (v50)
    {
      uint64_t v52 = *(void **)(v9 + 8);
      do
      {
        std::string::size_type v53 = (std::string::size_type)v52;
        uint64_t v52 = (void *)*v52;
      }
      while (v52);
    }
    else
    {
      std::string::size_type v55 = v9;
      do
      {
        std::string::size_type v53 = *(void *)(v55 + 16);
        BOOL v16 = *(void *)v53 == v55;
        std::string::size_type v55 = v53;
      }
      while (!v16);
    }
    if ((void *)v53 != v8)
    {
      if (!google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>((uint64_t **)(a1 + 104), (char *)&v63, (char *)(v53 + 32)))
      {
LABEL_114:
        uint64_t v51 = std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>>::__find_equal<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>(a1 + 80, &__p, (char *)&v63);
        goto LABEL_115;
      }
      uint64_t v50 = *v51;
    }
    if (v50)
    {
      __p.__r_.__value_.__r.__words[0] = v53;
      uint64_t v51 = (uint64_t *)v53;
    }
    else
    {
      __p.__r_.__value_.__r.__words[0] = v9;
    }
LABEL_115:
    std::string::size_type v9 = (std::string::size_type)v51;
    if (!*v51) {
      goto LABEL_116;
    }
LABEL_122:
    uint64_t v46 = 1;
    goto LABEL_84;
  }
  LODWORD(__p.__r_.__value_.__l.__data_) = 2;
  __p.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/"
                                                          "src/google/protobuf/descriptor_database.cc";
  LODWORD(__p.__r_.__value_.__r.__words[2]) = 703;
  memset(&v70, 0, sizeof(v70));
  std::string::append(&v70, "Invalid symbol name: ");
  if ((v62.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v17 = &v62;
  }
  else {
    uint64_t v17 = (std::string *)v62.__r_.__value_.__r.__words[0];
  }
  if ((v62.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v18 = HIBYTE(v62.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v18 = v62.__r_.__value_.__l.__size_;
  }
  std::string::append(&v70, (const std::string::value_type *)v17, v18);
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__p);
LABEL_81:
  if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v70.__r_.__value_.__l.__data_);
  }
  uint64_t v46 = 0;
LABEL_84:
  if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v62.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v65) < 0) {
    operator delete((void *)v64);
  }
  return v46;
}

void sub_189212C04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
  operator delete(v45);
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(std::string *a1, int *a2, const char *a3)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  int v4 = (uint64_t *)(a2 + 2);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v9, (uint64_t *)&a3[40 * *a2 + 16], a3);
  int64_t v6 = "";
  if (v10) {
    int64_t v6 = ".";
  }
  v8[0] = v6;
  v8[1] = v10 != 0;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v7, v4, v5);
  google::protobuf::StrCat((uint64_t)&v9, (uint64_t)v8, (uint64_t)&v7, a1);
}

uint64_t google::protobuf::anonymous namespace'::ValidateSymbolName(unsigned __int8 *a1, uint64_t a2)
{
  if (!a2) {
    return 1;
  }
  while (1)
  {
    int v2 = *a1;
    if (v2 != 46 && v2 != 95)
    {
      unsigned int v3 = v2 - 58;
      unsigned int v4 = (v2 & 0xFFFFFFDF) - 91;
      if (v3 <= 0xFFFFFFF5 && v4 < 0xFFFFFFE6) {
        break;
      }
    }
    ++a1;
    if (!--a2) {
      return 1;
    }
  }
  return 0;
}

void google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EnsureFlat(google::protobuf::EncodedDescriptorDatabase::DescriptorIndex *this, uint64_t a2, const char *a3)
{
  unint64_t v4 = *(void *)this;
  int64x2_t v5 = *(int64x2_t *)((char *)this + 8);
  int64x2_t v6 = vshrq_n_s64(vsubq_s64(v5, vdupq_n_s64(*(void *)this)), 3uLL);
  unint64_t v7 = 0xCCCCCCCCCCCCCCCDLL * v6.i64[0];
  unint64_t v8 = v7;
  if (0xCCCCCCCCCCCCCCCDLL * v6.i64[1] > v7)
  {
    uint64_t v76 = (char *)this + 16;
    if (v5.i64[0] == v4)
    {
      uint64_t v13 = 0;
      uint64_t v11 = 40 * v7;
    }
    else
    {
      uint64_t v9 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CAARiseTransitSetDetails2>>(v7);
      unint64_t v10 = *(void *)this;
      unint64_t v4 = *((void *)this + 1);
      uint64_t v11 = (uint64_t)&v9[40 * v8];
      uint64_t v13 = &v9[40 * v12];
      if (v4 != *(void *)this)
      {
        unint64_t v14 = &v9[40 * v8];
        do
        {
          uint64_t v15 = *(void *)(v4 - 40);
          v4 -= 40;
          int v16 = *(_DWORD *)(v4 + 8);
          *((void *)v14 - 5) = v15;
          v14 -= 40;
          *((_DWORD *)v14 + 2) = v16;
          long long v17 = *(_OWORD *)(v4 + 16);
          *((void *)v14 + 4) = *(void *)(v4 + 32);
          *((_OWORD *)v14 + 1) = v17;
          *(void *)(v4 + 24) = 0;
          *(void *)(v4 + ++*(_DWORD *)(this + 32) = 0;
          *(void *)(v4 + 16) = 0;
        }
        while (v4 != v10);
        unint64_t v18 = *(void *)this;
        unint64_t v4 = *((void *)this + 1);
        goto LABEL_9;
      }
    }
    unint64_t v18 = v4;
    unint64_t v14 = (char *)v11;
LABEL_9:
    *(void *)this = v14;
    *((void *)this + 1) = v11;
    uint64_t v19 = *((void *)this + 2);
    *((void *)this + 2) = v13;
    uint64_t v74 = (_DWORD *)v4;
    uint64_t v75 = v19;
    *(void *)&long long v73 = v18;
    *((void *)&v73 + 1) = v18;
    std::__split_buffer<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EncodedEntry>::~__split_buffer((uint64_t)&v73);
  }
  uint64_t v20 = *((void *)this + 5);
  if (v20)
  {
    uint64_t v21 = *((void *)this + 7);
    uint64_t v22 = *((void *)this + 8);
    unint64_t v23 = v20 + ((v22 - v21) >> 5);
    uint64_t v74 = 0;
    long long v73 = 0uLL;
    uint64_t v77 = (void **)&v73;
    char v78 = 0;
    if (v23)
    {
      if (v23 >> 59) {
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v24 = (std::string *)operator new(32 * v23);
      *(void *)&long long v73 = v24;
      uint64_t v74 = (_DWORD *)((char *)v24 + 32 * v23);
      bzero(v24, 32 * v23);
      *((void *)&v73 + 1) = (char *)v24 + 32 * v23;
    }
    else
    {
      uint64_t v24 = 0;
    }
    unint64_t v25 = (char *)*((void *)this + 3);
    char v26 = (char *)this + 32;
    while (1)
    {
      if (v25 == v26)
      {
        while (v21 != v22)
        {
          int v32 = *(_DWORD *)v21;
          uint64_t v31 = (const std::string *)(v21 + 8);
          LODWORD(v24->__r_.__value_.__l.__data_) = v32;
          uint64_t v33 = (std::string *)&v24->__r_.__value_.__r.__words[1];
          std::string::operator=(v33, v31);
          uint64_t v21 = (uint64_t)&v31[1];
          uint64_t v24 = v33 + 1;
        }
        goto LABEL_35;
      }
      if (v21 == v22) {
        break;
      }
      BOOL v27 = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare::operator()(v21, (uint64_t)(v25 + 32), a3);
      int v28 = (std::string *)&v24->__r_.__value_.__r.__words[1];
      if (v27)
      {
        LODWORD(v24->__r_.__value_.__l.__data_) = *(_DWORD *)v21;
        std::string::operator=(v28, (const std::string *)(v21 + 8));
        v21 += 32;
      }
      else
      {
        LODWORD(v24->__r_.__value_.__l.__data_) = *((_DWORD *)v25 + 8);
        std::string::operator=(v28, (const std::string *)(v25 + 40));
        BOOL v29 = (char *)*((void *)v25 + 1);
        if (v29)
        {
          do
          {
            unint64_t v25 = v29;
            BOOL v29 = *(char **)v29;
          }
          while (v29);
        }
        else
        {
          do
          {
            uint64_t v30 = v25;
            unint64_t v25 = (char *)*((void *)v25 + 2);
          }
          while (*(char **)v25 != v30);
        }
      }
      uint64_t v24 = (std::string *)((char *)v24 + 32);
    }
    if (v25 != v26)
    {
      do
      {
        LODWORD(v24->__r_.__value_.__l.__data_) = *((_DWORD *)v25 + 8);
        std::string::operator=((std::string *)&v24->__r_.__value_.__r.__words[1], (const std::string *)(v25 + 40));
        uint64_t v34 = (char *)*((void *)v25 + 1);
        if (v34)
        {
          do
          {
            uint64_t v35 = v34;
            uint64_t v34 = *(char **)v34;
          }
          while (v34);
        }
        else
        {
          do
          {
            uint64_t v35 = (char *)*((void *)v25 + 2);
            BOOL v36 = *(void *)v35 == (void)v25;
            unint64_t v25 = v35;
          }
          while (!v36);
        }
        uint64_t v24 = (std::string *)((char *)v24 + 32);
        unint64_t v25 = v35;
      }
      while (v35 != v26);
    }
LABEL_35:
    int v37 = (void **)((char *)this + 56);
    if (*((void *)this + 7))
    {
      std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>::__clear[abi:ne180100]((uint64_t *)this + 7);
      operator delete(*v37);
      *int v37 = 0;
      *((void *)this + 8) = 0;
      *((void *)this + 9) = 0;
    }
    *(_OWORD *)((char *)this + 56) = v73;
    *((void *)this + 9) = v74;
    uint64_t v74 = 0;
    long long v73 = 0uLL;
    std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>>::destroy(*((char **)this + 4));
    *((void *)this + 4) = 0;
    *((void *)this + 5) = 0;
    *((void *)this + 3) = v26;
    uint64_t v77 = (void **)&v73;
    std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>::__destroy_vector::operator()[abi:ne180100](&v77);
  }
  uint64_t v38 = *((void *)this + 12);
  if (v38)
  {
    BOOL v39 = (std::string *)*((void *)this + 14);
    uint64_t v40 = (std::string *)*((void *)this + 15);
    unint64_t v41 = v38 + (((char *)v40 - (char *)v39) >> 5);
    uint64_t v74 = 0;
    long long v73 = 0uLL;
    uint64_t v77 = (void **)&v73;
    char v78 = 0;
    if (v41)
    {
      if (v41 >> 59) {
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      }
      std::string v42 = (std::string *)operator new(32 * v41);
      *(void *)&long long v73 = v42;
      uint64_t v74 = (_DWORD *)((char *)v42 + 32 * v41);
      bzero(v42, 32 * v41);
      *((void *)&v73 + 1) = (char *)v42 + 32 * v41;
    }
    else
    {
      std::string v42 = 0;
    }
    long long v43 = (char *)*((void *)this + 10);
    uint64_t v44 = (char *)this + 88;
    int64_t v72 = (uint64_t *)*((void *)this + 13);
    while (1)
    {
      if (v43 == v44)
      {
        while (v39 != v40)
        {
          int data = (int)v39->__r_.__value_.__l.__data_;
          BOOL v49 = (const std::string *)&v39->__r_.__value_.__r.__words[1];
          LODWORD(v42->__r_.__value_.__l.__data_) = data;
          uint64_t v51 = (std::string *)&v42->__r_.__value_.__r.__words[1];
          std::string::operator=(v51, v49);
          BOOL v39 = (std::string *)&v49[1];
          std::string v42 = v51 + 1;
        }
        goto LABEL_63;
      }
      if (v39 == v40) {
        break;
      }
      int v45 = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>(&v72, (char *)v39, v43 + 32);
      uint64_t v46 = (std::string *)&v42->__r_.__value_.__r.__words[1];
      if (v45)
      {
        LODWORD(v42->__r_.__value_.__l.__data_) = v39->__r_.__value_.__l.__data_;
        std::string::operator=(v46, (const std::string *)&v39->__r_.__value_.__r.__words[1]);
        BOOL v39 = (std::string *)((char *)v39 + 32);
      }
      else
      {
        LODWORD(v42->__r_.__value_.__l.__data_) = *((_DWORD *)v43 + 8);
        std::string::operator=(v46, (const std::string *)(v43 + 40));
        unint64_t v47 = (char *)*((void *)v43 + 1);
        if (v47)
        {
          do
          {
            long long v43 = v47;
            unint64_t v47 = *(char **)v47;
          }
          while (v47);
        }
        else
        {
          do
          {
            std::string::size_type v48 = v43;
            long long v43 = (char *)*((void *)v43 + 2);
          }
          while (*(char **)v43 != v48);
        }
      }
      std::string v42 = (std::string *)((char *)v42 + 32);
    }
    if (v43 != v44)
    {
      do
      {
        LODWORD(v42->__r_.__value_.__l.__data_) = *((_DWORD *)v43 + 8);
        std::string::operator=((std::string *)&v42->__r_.__value_.__r.__words[1], (const std::string *)(v43 + 40));
        uint64_t v52 = (char *)*((void *)v43 + 1);
        if (v52)
        {
          do
          {
            std::string::size_type v53 = v52;
            uint64_t v52 = *(char **)v52;
          }
          while (v52);
        }
        else
        {
          do
          {
            std::string::size_type v53 = (char *)*((void *)v43 + 2);
            BOOL v36 = *(void *)v53 == (void)v43;
            long long v43 = v53;
          }
          while (!v36);
        }
        std::string v42 = (std::string *)((char *)v42 + 32);
        long long v43 = v53;
      }
      while (v53 != v44);
    }
LABEL_63:
    std::string::size_type v54 = (void **)((char *)this + 112);
    if (*((void *)this + 14))
    {
      std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>::__clear[abi:ne180100]((uint64_t *)this + 14);
      operator delete(*v54);
      std::string *v54 = 0;
      *((void *)this + 15) = 0;
      *((void *)this + 16) = 0;
    }
    *((_OWORD *)this + 7) = v73;
    *((void *)this + 16) = v74;
    uint64_t v74 = 0;
    long long v73 = 0uLL;
    std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>>::destroy(*((char **)this + 11));
    *((void *)this + 11) = 0;
    *((void *)this + 12) = 0;
    *((void *)this + 10) = v44;
    uint64_t v77 = (void **)&v73;
    std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>::__destroy_vector::operator()[abi:ne180100](&v77);
  }
  uint64_t v55 = *((void *)this + 19);
  if (v55)
  {
    uint64_t v56 = *((void *)this + 21);
    uint64_t v57 = *((void *)this + 22);
    unint64_t v58 = v55 - 0x3333333333333333 * ((v57 - v56) >> 3);
    uint64_t v74 = 0;
    long long v73 = 0uLL;
    uint64_t v77 = (void **)&v73;
    char v78 = 0;
    if (v58)
    {
      if (v58 >= 0x666666666666667) {
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v59 = operator new(40 * v58);
      *(void *)&long long v73 = v59;
      uint64_t v74 = &v59[10 * v58];
      bzero(v59, 40 * ((40 * v58 - 40) / 0x28) + 40);
      *((void *)&v73 + 1) = &v59[10 * ((40 * v58 - 40) / 0x28) + 10];
    }
    else
    {
      uint64_t v59 = 0;
    }
    long long v60 = (char *)*((void *)this + 17);
    long long v61 = (char *)this + 144;
    while (1)
    {
      if (v60 == v61)
      {
        while (v56 != v57)
        {
          int v67 = *(_DWORD *)v56;
          uint64_t v66 = v56 + 8;
          *uint64_t v59 = v67;
          std::string v68 = v59 + 2;
          std::string::operator=((std::string *)v68, (const std::string *)v66);
          v68[6] = *(_DWORD *)(v66 + 24);
          uint64_t v56 = v66 + 32;
          uint64_t v59 = v68 + 8;
        }
        goto LABEL_91;
      }
      if (v56 == v57) {
        break;
      }
      BOOL v62 = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionCompare::operator()(v56, (uint64_t)(v60 + 32), a3);
      int v63 = (std::string *)(v59 + 2);
      if (v62)
      {
        *uint64_t v59 = *(_DWORD *)v56;
        std::string::operator=(v63, (const std::string *)(v56 + 8));
        v59[8] = *(_DWORD *)(v56 + 32);
        v56 += 40;
      }
      else
      {
        *uint64_t v59 = *((_DWORD *)v60 + 8);
        std::string::operator=(v63, (const std::string *)(v60 + 40));
        v59[8] = *((_DWORD *)v60 + 16);
        long long v64 = (char *)*((void *)v60 + 1);
        if (v64)
        {
          do
          {
            long long v60 = v64;
            long long v64 = *(char **)v64;
          }
          while (v64);
        }
        else
        {
          do
          {
            uint64_t v65 = v60;
            long long v60 = (char *)*((void *)v60 + 2);
          }
          while (*(char **)v60 != v65);
        }
      }
      v59 += 10;
    }
    if (v60 != v61)
    {
      do
      {
        *uint64_t v59 = *((_DWORD *)v60 + 8);
        std::string::operator=((std::string *)(v59 + 2), (const std::string *)(v60 + 40));
        v59[8] = *((_DWORD *)v60 + 16);
        uint64_t v69 = (char *)*((void *)v60 + 1);
        if (v69)
        {
          do
          {
            std::string v70 = v69;
            uint64_t v69 = *(char **)v69;
          }
          while (v69);
        }
        else
        {
          do
          {
            std::string v70 = (char *)*((void *)v60 + 2);
            BOOL v36 = *(void *)v70 == (void)v60;
            long long v60 = v70;
          }
          while (!v36);
        }
        v59 += 10;
        long long v60 = v70;
      }
      while (v70 != v61);
    }
LABEL_91:
    uint64_t v71 = (void **)((char *)this + 168);
    if (*((void *)this + 21))
    {
      std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry>::__clear[abi:ne180100]((uint64_t *)this + 21);
      operator delete(*v71);
      *uint64_t v71 = 0;
      *((void *)this + 22) = 0;
      *((void *)this + 23) = 0;
    }
    *(_OWORD *)((char *)this + 168) = v73;
    *((void *)this + 23) = v74;
    uint64_t v74 = 0;
    long long v73 = 0uLL;
    std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>>::destroy(*((char **)this + 18));
    *((void *)this + 18) = 0;
    *((void *)this + 19) = 0;
    *((void *)this + 17) = v61;
    uint64_t v77 = (void **)&v73;
    std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry>::__destroy_vector::operator()[abi:ne180100](&v77);
  }
}

void sub_1892134F4(void *a1)
{
}

void sub_189213504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::anonymous namespace'::IsSubSymbol(const void *a1, int64_t a2, const void *a3, int64_t a4)
{
  if (a2 == a4)
  {
    BOOL result = 1;
    if (a2 < 1 || a1 == a3) {
      return result;
    }
    if (!memcmp(a1, a3, a2)) {
      return 1;
    }
  }
  return a4 >= a2 && !memcmp(a3, a1, a2) && *((unsigned char *)a3 + a2) == 46;
}

uint64_t google::protobuf::EncodedDescriptorDatabase::FindAllFileNames(uint64_t a1, std::vector<std::string> *this)
{
  unsigned int v3 = *(void **)(a1 + 8);
  std::vector<std::string>::resize(this, v3[5] + ((uint64_t)(v3[8] - v3[7]) >> 5));
  int64x2_t v5 = (void *)v3[3];
  if (v5 == v3 + 4)
  {
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v6 = 0;
    do
    {
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v20, v5 + 5, v4);
      long long v19 = v20;
      google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v19, &v20);
      unint64_t v7 = &this->__begin_[v6];
      if (SHIBYTE(v7->__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v7->__r_.__value_.__l.__data_);
      }
      long long v8 = v20;
      v7->__r_.__value_.__r.__words[2] = v21;
      *(_OWORD *)&v7->__r_.__value_.__l.__data_ = v8;
      uint64_t v9 = (void *)v5[1];
      if (v9)
      {
        do
        {
          unint64_t v10 = v9;
          uint64_t v9 = (void *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          unint64_t v10 = (void *)v5[2];
          BOOL v11 = *v10 == (void)v5;
          int64x2_t v5 = v10;
        }
        while (!v11);
      }
      ++v6;
      int64x2_t v5 = v10;
    }
    while (v10 != v3 + 4);
    uint64_t v12 = v6;
  }
  uint64_t v14 = v3[7];
  uint64_t v13 = v3[8];
  if (v14 != v13)
  {
    uint64_t v15 = v12;
    do
    {
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v20, (uint64_t *)(v14 + 8), v4);
      long long v19 = v20;
      google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v19, &v20);
      int v16 = &this->__begin_[v15];
      if (SHIBYTE(v16->__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v16->__r_.__value_.__l.__data_);
      }
      long long v17 = v20;
      v16->__r_.__value_.__r.__words[2] = v21;
      *(_OWORD *)&v16->__r_.__value_.__l.__data_ = v17;
      v14 += 32;
      ++v15;
    }
    while (v14 != v13);
  }
  return 1;
}

void google::protobuf::EncodedDescriptorDatabase::EncodedDescriptorDatabase(google::protobuf::EncodedDescriptorDatabase *this)
{
  *(void *)this = &unk_1ED515818;
  operator new();
}

void google::protobuf::EncodedDescriptorDatabase::~EncodedDescriptorDatabase(google::protobuf::EncodedDescriptorDatabase *this)
{
  *(void *)this = &unk_1ED515818;
  int v2 = (void **)*((void *)this + 2);
  unsigned int v3 = (void **)*((void *)this + 3);
  if (v2 != v3)
  {
    do
    {
      unint64_t v4 = *v2++;
      operator delete(v4);
    }
    while (v2 != v3);
    int v2 = (void **)*((void *)this + 2);
  }
  if (v2)
  {
    *((void *)this + 3) = v2;
    operator delete(v2);
  }
  uint64_t v5 = *((void *)this + 1);
  *((void *)this + 1) = 0;
  if (v5)
  {
    uint64_t v9 = (void **)(v5 + 168);
    std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry>::__destroy_vector::operator()[abi:ne180100](&v9);
    std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>>::destroy(*(char **)(v5 + 144));
    uint64_t v9 = (void **)(v5 + 112);
    std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>::__destroy_vector::operator()[abi:ne180100](&v9);
    std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>>::destroy(*(char **)(v5 + 88));
    uint64_t v9 = (void **)(v5 + 56);
    std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>::__destroy_vector::operator()[abi:ne180100](&v9);
    std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>>::destroy(*(char **)(v5 + 32));
    uint64_t v6 = *(void ***)v5;
    if (*(void *)v5)
    {
      unint64_t v7 = *(void ***)(v5 + 8);
      long long v8 = *(void ***)v5;
      if (v7 != v6)
      {
        do
        {
          if (*((char *)v7 - 1) < 0) {
            operator delete(*(v7 - 3));
          }
          v7 -= 5;
        }
        while (v7 != v6);
        long long v8 = *(void ***)v5;
      }
      *(void *)(v5 + 8) = v6;
      operator delete(v8);
    }
    MEMORY[0x18C11F580](v5, 0x1060C40566A0058);
  }
}

{
  uint64_t vars8;

  google::protobuf::EncodedDescriptorDatabase::~EncodedDescriptorDatabase(this);

  JUMPOUT(0x18C11F580);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddNestedExtensions<google::protobuf::DescriptorProto>(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a4 + 64);
  if (v8) {
    uint64_t v9 = (void *)(v8 + 8);
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = *(int *)(a4 + 56);
  if (v10)
  {
    uint64_t v11 = 8 * v10;
    while ((google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddNestedExtensions<google::protobuf::DescriptorProto>(a1, a2, a3, *v9) & 1) != 0)
    {
      ++v9;
      v11 -= 8;
      if (!v11) {
        goto LABEL_8;
      }
    }
    return 0;
  }
  else
  {
LABEL_8:
    uint64_t v12 = *(void *)(a4 + 136);
    if (v12) {
      uint64_t v13 = (uint64_t *)(v12 + 8);
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v14 = *(int *)(a4 + 128);
    if (v14)
    {
      uint64_t v15 = 8 * v14 - 8;
      do
      {
        uint64_t v16 = *v13++;
        uint64_t result = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddExtension<google::protobuf::FieldDescriptorProto>(a1, a2, a3, v16);
        if (result) {
          BOOL v18 = v15 == 0;
        }
        else {
          BOOL v18 = 1;
        }
        v15 -= 8;
      }
      while (!v18);
    }
    else
    {
      return 1;
    }
  }
  return result;
}

uint64_t google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddExtension<google::protobuf::FieldDescriptorProto>(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  v40[0] = a2;
  v40[1] = a3;
  unint64_t v6 = *(void *)(a4 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      return 1;
    }
    unint64_t v7 = *(unsigned char **)v6;
  }
  else
  {
    unint64_t v7 = (unsigned char *)(*(void *)(a4 + 32) & 0xFFFFFFFFFFFFFFFELL);
    if (!*(unsigned char *)(v6 + 23)) {
      return 1;
    }
  }
  if (*v7 != 46) {
    return 1;
  }
  *(_DWORD *)std::string __str = -858993459 * ((*(void *)(a1 + 8) - *(void *)a1) >> 3) - 1;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v39, (uint64_t *)v6, a3);
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v39;
  google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&__p, &v47);
  int v49 = *(_DWORD *)(a4 + 72);
  uint64_t v10 = (char **)(a1 + 144);
  uint64_t v9 = *(char **)(a1 + 144);
  if (v9)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v11 = (char **)v9;
        uint64_t v12 = (uint64_t)(v9 + 32);
        if (!google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionCompare::operator()((uint64_t)__str, (uint64_t)(v9 + 32), v8))break; {
        uint64_t v9 = *v11;
        }
        uint64_t v10 = v11;
        if (!*v11) {
          goto LABEL_15;
        }
      }
      if (!google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionCompare::operator()(v12, (uint64_t)__str, v8))break; {
      uint64_t v10 = v11 + 1;
      }
      uint64_t v9 = v11[1];
      if (!v9) {
        goto LABEL_15;
      }
    }
    if (*v10)
    {
      BOOL v26 = 1;
      goto LABEL_39;
    }
  }
  else
  {
    uint64_t v11 = (char **)(a1 + 144);
  }
LABEL_15:
  uint64_t v13 = (char *)operator new(0x48uLL);
  *((_DWORD *)v13 + 8) = *(_DWORD *)__str;
  uint64_t v14 = (std::string *)(v13 + 40);
  if (SHIBYTE(v48) < 0)
  {
    std::string::__init_copy_ctor_external(v14, (const std::string::value_type *)v47, *((std::string::size_type *)&v47 + 1));
  }
  else
  {
    *(_OWORD *)&v14->__r_.__value_.__l.__data_ = v47;
    *((void *)v13 + 7) = v48;
  }
  *((_DWORD *)v13 + 16) = v49;
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  *((void *)v13 + 2) = v11;
  void *v10 = v13;
  uint64_t v15 = **(void **)(a1 + 136);
  if (v15)
  {
    *(void *)(a1 + 136) = v15;
    uint64_t v13 = *v10;
  }
  std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(a1 + 144), (uint64_t *)v13);
  ++*(void *)(a1 + 152);
  uint64_t v16 = *(void *)(a1 + 168);
  uint64_t v17 = *(void *)(a1 + 176);
  std::string::basic_string(&v38, (const std::string *)(*(void *)(a4 + 32) & 0xFFFFFFFFFFFFFFFELL), 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v43);
  int v19 = *(_DWORD *)(a4 + 72);
  std::string __p = v38;
  memset(&v38, 0, sizeof(v38));
  LODWORD(v37.__r_.__value_.__l.__data_) = v19;
  if (v17 != v16)
  {
    unint64_t v20 = 0xCCCCCCCCCCCCCCCDLL * ((v17 - v16) >> 3);
    do
    {
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v43, (uint64_t *)&__p, v18);
      uint64_t v21 = v16 + 40 * (v20 >> 1);
      int data = (int)v37.__r_.__value_.__l.__data_;
      BOOL v23 = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionCompare::operator()(v21, (uint64_t)&v43, v22);
      if (v23) {
        v20 += ~(v20 >> 1);
      }
      else {
        v20 >>= 1;
      }
      if (v23) {
        uint64_t v16 = v21 + 40;
      }
    }
    while (v20);
  }
  if (v17 == v16)
  {
    BOOL v26 = 0;
  }
  else
  {
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v41, (uint64_t *)&__p, v18);
    int v42 = (int)v37.__r_.__value_.__l.__data_;
    google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v43, (uint64_t *)(v16 + 8), v24);
    uint64_t v25 = v43;
    if (v44) {
      uint64_t v25 = v43 + 1;
    }
    uint64_t v43 = v25;
    v44 -= v44 != 0;
    int data = *(_DWORD *)(v16 + 32);
    BOOL v26 = !std::__tuple_less<2ul>::operator()[abi:ne180100]<std::tuple<google::protobuf::StringPiece,int>,std::tuple<google::protobuf::StringPiece,int>>((uint64_t)v41, (uint64_t)&v43);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
LABEL_39:
  if (SHIBYTE(v48) < 0)
  {
    operator delete((void *)v47);
    if (v26) {
      goto LABEL_41;
    }
    return 1;
  }
  if (!v26) {
    return 1;
  }
LABEL_41:
  LODWORD(__p.__r_.__value_.__l.__data_) = 2;
  __p.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/"
                                                          "src/google/protobuf/descriptor_database.cc";
  LODWORD(__p.__r_.__value_.__r.__words[2]) = 756;
  memset(&v37, 0, sizeof(v37));
  std::string::append(&v37, "Extension conflicts with extension already in database: extend ");
  unint64_t v27 = *(void *)(a4 + 32) & 0xFFFFFFFFFFFFFFFELL;
  int v28 = *(char *)(v27 + 23);
  if (v28 >= 0) {
    BOOL v29 = (const std::string::value_type *)(*(void *)(a4 + 32) & 0xFFFFFFFFFFFFFFFELL);
  }
  else {
    BOOL v29 = *(const std::string::value_type **)v27;
  }
  if (v28 >= 0) {
    std::string::size_type v30 = *(unsigned __int8 *)(v27 + 23);
  }
  else {
    std::string::size_type v30 = *(void *)(v27 + 8);
  }
  std::string::append(&v37, v29, v30);
  std::string::append(&v37, " { ");
  unint64_t v31 = *(void *)(a4 + 24) & 0xFFFFFFFFFFFFFFFELL;
  int v32 = *(char *)(v31 + 23);
  if (v32 >= 0) {
    uint64_t v33 = (const std::string::value_type *)(*(void *)(a4 + 24) & 0xFFFFFFFFFFFFFFFELL);
  }
  else {
    uint64_t v33 = *(const std::string::value_type **)v31;
  }
  if (v32 >= 0) {
    std::string::size_type v34 = *(unsigned __int8 *)(v31 + 23);
  }
  else {
    std::string::size_type v34 = *(void *)(v31 + 8);
  }
  std::string::append(&v37, v33, v34);
  std::string::append(&v37, " = ");
  snprintf(__str, 0x80uLL, "%d", *(_DWORD *)(a4 + 72));
  char v50 = 0;
  std::string::append(&v37, __str);
  std::string::append(&v37, " } from:");
  google::protobuf::internal::LogMessage::operator<<(&__p, (google::protobuf::StringPiece *)v40);
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__p);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_189213E98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  operator delete(v47);
  if (a47 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t std::__split_buffer<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EncodedEntry>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      uint64_t v4 = v2 - 40;
      *(void *)(a1 + 16) = v2 - 40;
      if (*(char *)(v2 - 1) < 0)
      {
        operator delete(*(void **)(v2 - 24));
        uint64_t v4 = *(void *)(a1 + 16);
      }
      uint64_t v2 = v4;
    }
    while (v4 != v3);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

BOOL google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare::operator()(uint64_t a1, uint64_t a2, const char *a3)
{
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v12, (uint64_t *)(a1 + 8), a3);
  uint64_t v4 = v12;
  int64_t v5 = v13;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v12, (uint64_t *)(a2 + 8), v6);
  int64_t v7 = v13;
  if (v5 >= v13) {
    size_t v8 = v13;
  }
  else {
    size_t v8 = v5;
  }
  int v9 = memcmp(v4, v12, v8);
  if (v9 < 0) {
    return 1;
  }
  return !v9 && v5 < v7;
}

BOOL google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare::operator()(uint64_t a1, const void *a2, const char *a3)
{
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v10, (uint64_t *)(a1 + 8), a3);
  uint64_t v5 = v11;
  if (v11 >= (uint64_t)a3) {
    size_t v6 = (size_t)a3;
  }
  else {
    size_t v6 = v11;
  }
  int v7 = memcmp(v10, a2, v6);
  if (v7 < 0) {
    return 1;
  }
  return !v7 && v5 < (uint64_t)a3;
}

BOOL google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionCompare::operator()(uint64_t a1, uint64_t a2, const char *a3)
{
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v12, (uint64_t *)(a1 + 8), a3);
  uint64_t v6 = v12;
  if (v13) {
    uint64_t v6 = v12 + 1;
  }
  uint64_t v12 = v6;
  v13 -= v13 != 0;
  int v14 = *(_DWORD *)(a1 + 32);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v9, (uint64_t *)(a2 + 8), v5);
  uint64_t v7 = v9;
  if (v10) {
    uint64_t v7 = v9 + 1;
  }
  uint64_t v9 = v7;
  v10 -= v10 != 0;
  int v11 = *(_DWORD *)(a2 + 32);
  return std::__tuple_less<2ul>::operator()[abi:ne180100]<std::tuple<google::protobuf::StringPiece,int>,std::tuple<google::protobuf::StringPiece,int>>((uint64_t)&v12, (uint64_t)&v9);
}

{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  int v9;

  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v7, (uint64_t *)(a1 + 8), a3);
  uint64_t v5 = v7;
  if (v8) {
    uint64_t v5 = v7 + 1;
  }
  uint64_t v7 = v5;
  v8 -= v8 != 0;
  uint64_t v9 = *(_DWORD *)(a1 + 32);
  return std::__tuple_less<2ul>::operator()[abi:ne180100]<std::tuple<google::protobuf::StringPiece,int>,std::tuple<google::protobuf::StringPiece,int>>((uint64_t)&v7, a2);
}

BOOL std::__tuple_less<2ul>::operator()[abi:ne180100]<std::tuple<google::protobuf::StringPiece,int>,std::tuple<google::protobuf::StringPiece,int>>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(const void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  if (v5 >= v7) {
    size_t v8 = *(void *)(a2 + 8);
  }
  else {
    size_t v8 = *(void *)(a1 + 8);
  }
  int v9 = memcmp(*(const void **)a1, *(const void **)a2, v8);
  if (v9 < 0) {
    return 1;
  }
  if (!v9 && v5 < v7) {
    return 1;
  }
  int v11 = memcmp(v6, v4, v8);
  if (v11 < 0) {
    return 0;
  }
  return (v11 || v7 >= v5) && *(_DWORD *)(a1 + 16) < *(_DWORD *)(a2 + 16);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>(uint64_t **a1, char *a2, char *a3)
{
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::GetParts(&v33, **a1, a2);
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::GetParts(&v29, **a1, a3);
  std::string::size_type v6 = v34;
  std::string::size_type v7 = v30;
  if (v34 >= v30) {
    std::string::size_type v8 = v30;
  }
  else {
    std::string::size_type v8 = v34;
  }
  __p.__r_.__value_.__r.__words[0] = v33;
  __p.__r_.__value_.__l.__size_ = v8;
  unsigned int v9 = google::protobuf::StringPiece::compare((uint64_t)&__p, v29, v8);
  if (v9) {
    return v9 >> 31;
  }
  if (v6 != v7)
  {
    google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&__p, (int *)a2, (const char *)**a1);
    google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry::AsString(&v27, (int *)a3, (const char *)**a1);
    int v17 = SHIBYTE(v27.__r_.__value_.__r.__words[2]);
    BOOL v18 = (void *)v27.__r_.__value_.__r.__words[0];
    char v19 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::__split_buffer<std::string>::pointer p_p = &__p;
    }
    else {
      std::__split_buffer<std::string>::pointer p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v22 = HIBYTE(v27.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v22 = v27.__r_.__value_.__l.__size_;
    }
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      BOOL v23 = &v27;
    }
    else {
      BOOL v23 = (std::string *)v27.__r_.__value_.__r.__words[0];
    }
    if (v22 >= size) {
      size_t v24 = size;
    }
    else {
      size_t v24 = v22;
    }
    int v25 = memcmp(p_p, v23, v24);
    if (v25) {
      BOOL v10 = v25 < 0;
    }
    else {
      BOOL v10 = size < v22;
    }
    if (v17 < 0)
    {
      operator delete(v18);
      if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) == 0) {
        return v10;
      }
    }
    else if ((v19 & 0x80) == 0)
    {
      return v10;
    }
    operator delete(__p.__r_.__value_.__l.__data_);
    return v10;
  }
  int64_t v11 = v36;
  int64_t v12 = v32;
  if (v36 >= v32) {
    size_t v13 = v32;
  }
  else {
    size_t v13 = v36;
  }
  int v14 = memcmp(v35, v31, v13);
  if (v14) {
    BOOL v15 = 0;
  }
  else {
    BOOL v15 = v11 < v12;
  }
  unsigned int v16 = v15;
  if (v14 >= 0) {
    return v16;
  }
  else {
    return 1;
  }
}

void sub_18921436C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::GetParts(void *a1, uint64_t a2, const char *a3)
{
  uint64_t v4 = (uint64_t *)(a3 + 8);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v10, (uint64_t *)(a2 + 40 * *(int *)a3 + 16), a3);
  uint64_t v6 = *((void *)&v10 + 1);
  std::string::size_type v7 = a1 + 2;
  if (*((void *)&v10 + 1))
  {
    uint64_t v8 = v10;
    uint64_t result = google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v10, v4, v5);
    *std::string::size_type v7 = v10;
  }
  else
  {
    uint64_t result = google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v10, v4, v5);
    uint64_t v6 = *((void *)&v10 + 1);
    uint64_t v8 = v10;
    *(void *)std::string::size_type v7 = 0;
    a1[3] = 0;
  }
  *a1 = v8;
  a1[1] = v6;
  return result;
}

uint64_t google::protobuf::StringPiece::compare(uint64_t a1, const void *a2, int64_t a3)
{
  int64_t v3 = a3;
  uint64_t v4 = *(const void **)a1;
  int64_t v5 = *(void *)(a1 + 8);
  if (v5 < a3) {
    a3 = v5;
  }
  int v7 = memcmp(v4, a2, a3);
  if (v7 < 0) {
    return 0xFFFFFFFFLL;
  }
  int v9 = v7;
  if (v7) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = 0xFFFFFFFFLL;
  }
  if (v5 >= v3 && v9 == 0) {
    return v5 > v3;
  }
  return result;
}

void *std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>>::__find_equal<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>(uint64_t a1, void *a2, char *a3)
{
  int64_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    int v7 = (uint64_t **)(a1 + 24);
    do
    {
      while (1)
      {
        uint64_t v8 = (void *)v4;
        int v9 = (char *)(v4 + 32);
        if (!google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>(v7, a3, (char *)(v4 + 32)))break; {
        uint64_t v4 = *v8;
        }
        int64_t v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (!google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolCompare::operator()<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::SymbolEntry>(v7, v9, a3))break; {
      int64_t v5 = v8 + 1;
      }
      uint64_t v4 = v8[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v8 = (void *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

uint64_t std::__lower_bound[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry *>,std::__wrap_iter<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry *>,std::tuple<google::protobuf::StringPiece,int>,std::__identity,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionCompare>(uint64_t a1, uint64_t a2, long long *a3)
{
  if (a2 != a1)
  {
    uint64_t v13 = v3;
    uint64_t v14 = v4;
    uint64_t v6 = a1;
    unint64_t v7 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - a1) >> 3);
    do
    {
      uint64_t v8 = v6 + 40 * (v7 >> 1);
      long long v11 = *a3;
      uint64_t v12 = *((void *)a3 + 2);
      BOOL v9 = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionCompare::operator()(v8, (uint64_t)&v11, (const char *)a3);
      if (v9) {
        v7 += ~(v7 >> 1);
      }
      else {
        v7 >>= 1;
      }
      if (v9) {
        uint64_t v6 = v8 + 40;
      }
    }
    while (v7);
    return v6;
  }
  return a2;
}

void std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>::__clear[abi:ne180100]((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 32)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

void std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>>::destroy(char *a1)
{
  if (a1)
  {
    std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>>::destroy(*(void *)a1);
    std::__tree<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry,google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileCompare,std::allocator<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FileEntry>>::destroy(*((void *)a1 + 1));
    if (a1[63] < 0) {
      operator delete(*((void **)a1 + 5));
    }
    operator delete(a1);
  }
}

void std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry>::__clear[abi:ne180100]((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::ExtensionEntry>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 40)
  {
    if (*(char *)(i - 9) < 0) {
      operator delete(*(void **)(i - 32));
    }
  }
  a1[1] = v2;
}

void google::protobuf::internal::ExtensionSet::AppendToList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = a4;
  uint64_t v4 = *(void **)(a1 + 16);
  if (*(unsigned __int16 *)(a1 + 8) >= 0x101u)
  {
    long long v11 = (void *)*v4;
    BOOL v9 = v4 + 1;
    long long v10 = v11;
    uint64_t v16 = a2;
    uint64_t v17 = a3;
    BOOL v18 = &v15;
    if (v11 != v9)
    {
      do
      {
        google::protobuf::internal::ExtensionSet::AppendToList(google::protobuf::Descriptor const*,google::protobuf::DescriptorPool const*,std::vector<google::protobuf::FieldDescriptor const*> *)const::$_0::operator()((uint64_t)&v16, *((unsigned int *)v10 + 8), (google::protobuf::internal::ExtensionSet::Extension *)(v10 + 5));
        uint64_t v12 = (void *)v10[1];
        if (v12)
        {
          do
          {
            uint64_t v13 = v12;
            uint64_t v12 = (void *)*v12;
          }
          while (v12);
        }
        else
        {
          do
          {
            uint64_t v13 = (void *)v10[2];
            BOOL v14 = *v13 == (void)v10;
            long long v10 = v13;
          }
          while (!v14);
        }
        long long v10 = v13;
      }
      while (v13 != v9);
    }
  }
  else
  {
    uint64_t v5 = *(unsigned __int16 *)(a1 + 10);
    uint64_t v16 = a2;
    uint64_t v17 = a3;
    BOOL v18 = &v15;
    if (v5)
    {
      uint64_t v6 = &v4[4 * v5];
      do
      {
        unint64_t v7 = (google::protobuf::internal::ExtensionSet::Extension *)(v4 + 1);
        unsigned int v8 = *(_DWORD *)v4;
        v4 += 4;
        google::protobuf::internal::ExtensionSet::AppendToList(google::protobuf::Descriptor const*,google::protobuf::DescriptorPool const*,std::vector<google::protobuf::FieldDescriptor const*> *)const::$_0::operator()((uint64_t)&v16, v8, v7);
      }
      while (v4 != v6);
    }
  }
}

uint64_t google::protobuf::internal::ExtensionSet::GetMessage(google::protobuf::internal::ExtensionSet *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = google::protobuf::internal::ExtensionSet::FindOrNull(a1, a2);
  if (!v6 || (v6[10] & 1) != 0)
  {
    BOOL v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)a4 + 16);
    uint64_t v10 = a4;
    uint64_t v11 = a3;
  }
  else
  {
    uint64_t v7 = *(void *)v6;
    if ((v6[10] & 0x10) == 0) {
      return *(void *)v6;
    }
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a4 + 16))(a4, a3);
    BOOL v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v7 + 24);
    uint64_t v10 = v7;
  }
  return v9(v10, v11);
}

uint64_t google::protobuf::internal::ExtensionSet::MutableMessage(google::protobuf::internal::ExtensionSet *this, const google::protobuf::FieldDescriptor *a2, google::protobuf::MessageFactory *a3)
{
  uint64_t v6 = google::protobuf::internal::ExtensionSet::Insert(this, *((_DWORD *)a2 + 17));
  uint64_t v7 = v6;
  void v6[2] = (uint64_t *)a2;
  if (v8)
  {
    BOOL v9 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    if (v9)
    {
      BOOL v18 = a2;
      char v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
      {
        v21[0] = &v19;
        v21[1] = &v18;
        unint64_t v20 = v21;
        std::__call_once(v9, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    *((_WORD *)v7 + 4) = *((_DWORD *)a2 + 14);
    *((unsigned char *)v7 + 11) = 0;
    uint64_t v10 = google::protobuf::FieldDescriptor::message_type(a2);
    uint64_t v11 = (*(uint64_t (**)(google::protobuf::MessageFactory *, uint64_t))(*(void *)a3 + 16))(a3, v10);
    *((unsigned char *)v7 + 10) &= 0xFu;
    uint64_t v12 = (*(uint64_t (**)(uint64_t, void))(*(void *)v11 + 32))(v11, *(void *)this);
    *uint64_t v7 = (uint64_t *)v12;
    *((unsigned char *)v7 + 10) &= 0xF0u;
    return v12;
  }
  char v13 = *((unsigned char *)v6 + 10);
  *((unsigned char *)v6 + 10) = v13 & 0xF0;
  uint64_t v12 = (uint64_t)*v6;
  if ((v13 & 0x10) == 0) {
    return v12;
  }
  uint64_t v15 = google::protobuf::FieldDescriptor::message_type(a2);
  uint64_t v16 = (*(uint64_t (**)(google::protobuf::MessageFactory *, uint64_t))(*(void *)a3 + 16))(a3, v15);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v12 + 32);

  return v17(v12, v16);
}

uint64_t google::protobuf::internal::ExtensionSet::UnsafeArenaReleaseMessage(google::protobuf::internal::ExtensionSet *a1, int *a2, uint64_t a3)
{
  uint64_t v6 = google::protobuf::internal::ExtensionSet::FindOrNull(a1, a2[17]);
  if (!v6) {
    return 0;
  }
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)v6;
  if ((*((unsigned char *)v6 + 10) & 0x10) != 0)
  {
    uint64_t v9 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a2);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a3 + 16))(a3, v9);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v8 + 64))(v8, v10);
    if (!*(void *)a1)
    {
      if (*v7) {
        (*(void (**)(void))(*(void *)*v7 + 8))(*v7);
      }
    }
  }
  google::protobuf::internal::ExtensionSet::Erase(a1, a2[17]);
  return v8;
}

uint64_t **google::protobuf::internal::ExtensionSet::MaybeNewRepeatedExtension(google::protobuf::internal::ExtensionSet *this, const google::protobuf::FieldDescriptor *a2)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::Insert(this, *((_DWORD *)a2 + 17));
  void v4[2] = (uint64_t *)a2;
  if (v5)
  {
    uint64_t v6 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    if (v6)
    {
      uint64_t v10 = a2;
      uint64_t v11 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v6, memory_order_acquire) != -1)
      {
        v13[0] = &v11;
        v13[1] = &v10;
        uint64_t v12 = v13;
        std::__call_once(v6, &v12, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    *((unsigned char *)v4 + 8) = *((_DWORD *)a2 + 14);
    *((unsigned char *)v4 + 9) = 1;
    uint64_t v7 = *(void *)this;
    if (!v7) {
      operator new();
    }
    if (*(unsigned char *)(v7 + 24)) {
    AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v7, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>>);
    }
    *((void *)AlignedAndAddCleanup + 2) = 0;
    *(void *)AlignedAndAddCleanup = v7;
    *((void *)AlignedAndAddCleanup + 1) = 0;
    *uint64_t v4 = (uint64_t *)AlignedAndAddCleanup;
  }
  return v4;
}

uint64_t google::protobuf::internal::ExtensionSet::AddMessage(google::protobuf::internal::ExtensionSet *this, const google::protobuf::FieldDescriptor *a2, google::protobuf::MessageFactory *a3)
{
  uint64_t v6 = google::protobuf::internal::ExtensionSet::MaybeNewRepeatedExtension(this, a2);
  uint64_t v7 = (unsigned int **)v6;
  uint64_t v8 = *v6;
  uint64_t v9 = (_DWORD *)(*v6)[2];
  if (v9)
  {
    uint64_t v10 = *((int *)v8 + 2);
    if ((int)v10 < *v9)
    {
      *((_DWORD *)v8 + 2) = v10 + 1;
      uint64_t v11 = *(void *)&v9[2 * v10 + 2];
      if (v11) {
        return v11;
      }
      uint64_t v8 = *v6;
    }
  }
  if (*((_DWORD *)v8 + 2))
  {
    uint64_t v12 = *(void *)(v8[2] + 8);
  }
  else
  {
    uint64_t v13 = google::protobuf::FieldDescriptor::message_type(a2);
    uint64_t v12 = (*(uint64_t (**)(google::protobuf::MessageFactory *, uint64_t))(*(void *)a3 + 16))(a3, v13);
    if (!v12)
    {
      int v15 = 3;
      uint64_t v16 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set_heavy.cc";
      int v17 = 273;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "CHECK failed: prototype != NULL: ");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v15);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      uint64_t v12 = 0;
    }
  }
  uint64_t v11 = (*(uint64_t (**)(uint64_t, void))(*(void *)v12 + 32))(v12, *(void *)this);
  google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(*v7, v11);
  return v11;
}

void sub_189214EB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::internal::DescriptorPoolExtensionFinder::Find(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ExtensionByNumber = google::protobuf::DescriptorPool::FindExtensionByNumber(*(std::mutex ***)(a1 + 8), *(const google::protobuf::Descriptor **)(a1 + 24), a2);
  uint64_t v6 = ExtensionByNumber;
  if (ExtensionByNumber)
  {
    uint64_t v7 = *(std::once_flag::_State_type **)(ExtensionByNumber + 48);
    if (v7)
    {
      BOOL v23 = google::protobuf::FieldDescriptor::TypeOnceInit;
      uint64_t v22 = v6;
      if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
      {
        BOOL v18 = &v23;
        char v19 = (const char *)&v22;
        size_t v24 = &v18;
        std::__call_once(v7, &v24, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      uint64_t v7 = *(std::once_flag::_State_type **)(v6 + 48);
    }
    int v8 = *(_DWORD *)(v6 + 56);
    *(unsigned char *)a3 = v8;
    *(unsigned char *)(a3 + 1) = *(_DWORD *)(v6 + 60) == 3;
    *(unsigned char *)(a3 + 2) = *(unsigned char *)(*(void *)(v6 + 120) + 76);
    *(void *)(a3 + 24) = v6;
    if (v7)
    {
      BOOL v23 = google::protobuf::FieldDescriptor::TypeOnceInit;
      uint64_t v22 = v6;
      if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
      {
        BOOL v18 = &v23;
        char v19 = (const char *)&v22;
        size_t v24 = &v18;
        std::__call_once(v7, &v24, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      int v8 = *(_DWORD *)(v6 + 56);
    }
    if ((v8 & 0xFFFFFFFE) == 0xA)
    {
      uint64_t v9 = *(void *)(a1 + 16);
      uint64_t v10 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)v6);
      uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 16))(v9, v10);
      *(void *)(a3 + 8) = v11;
      if (!v11)
      {
        LODWORD(v18) = 3;
        char v19 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set_heavy.cc";
        int v20 = 308;
        memset(&__p, 0, sizeof(__p));
        std::string::append(&__p, "CHECK failed: output->message_info.prototype != nullptr: ");
        std::string::append(&__p, "Extension factory's GetPrototype() returned NULL for extension: ");
        uint64_t v12 = *(void *)(v6 + 8);
        int v13 = *(char *)(v12 + 23);
        if (v13 >= 0) {
          BOOL v14 = *(const std::string::value_type **)(v6 + 8);
        }
        else {
          BOOL v14 = *(const std::string::value_type **)v12;
        }
        if (v13 >= 0) {
          std::string::size_type v15 = *(unsigned __int8 *)(v12 + 23);
        }
        else {
          std::string::size_type v15 = *(void *)(v12 + 8);
        }
        std::string::append(&__p, v14, v15);
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v18);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
    }
    else
    {
      uint64_t v16 = *(std::once_flag::_State_type **)(v6 + 48);
      if (v16)
      {
        BOOL v23 = google::protobuf::FieldDescriptor::TypeOnceInit;
        uint64_t v22 = v6;
        if (atomic_load_explicit((atomic_ullong *volatile)v16, memory_order_acquire) != -1)
        {
          BOOL v18 = &v23;
          char v19 = (const char *)&v22;
          size_t v24 = &v18;
          std::__call_once(v16, &v24, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        int v8 = *(_DWORD *)(v6 + 56);
      }
      if (v8 == 14)
      {
        *(void *)(a3 + 8) = google::protobuf::internal::ValidateEnumUsingDescriptor;
        *(void *)(a3 + 16) = google::protobuf::FieldDescriptor::enum_type((google::protobuf::FieldDescriptor *)v6);
      }
    }
  }
  return v6 != 0;
}

void sub_18921514C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::internal::ValidateEnumUsingDescriptor(google::protobuf::internal *this, const void *a2)
{
  uint64_t v2 = (void *)(*(void *)(*((void *)this + 2) + 144) + 192);
  v4[0] = this;
  v4[1] = a2;
}

uint64_t *google::protobuf::internal::ExtensionSet::ParseField(google::protobuf::internal::ExtensionSet *a1, unint64_t a2, unsigned __int8 *a3, uint64_t a4, unint64_t *a5, int32x2_t *a6)
{
  uint64_t v11 = a2 >> 3;
  unsigned __int8 v19 = 0;
  int v12 = a2 & 7;
  int32x2_t v13 = a6[12];
  if (v13)
  {
    int32x2_t v14 = a6[13];
    uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)a4 + 152))(a4);
    int v20 = (google::protobuf::UnknownFieldSet *)&unk_1ED515EB0;
    int32x2_t v21 = v13;
    int32x2_t v22 = v14;
    uint64_t v23 = v15;
  }
  else
  {
    int v20 = (google::protobuf::UnknownFieldSet *)&unk_1ED515E88;
    int32x2_t v21 = (int32x2_t)a4;
  }
  if (google::protobuf::internal::ExtensionSet::FindExtensionInfoFromFieldNumber((uint64_t)a1, v12, v11, (uint64_t)&v20, v18, &v19))return (uint64_t *)google::protobuf::internal::ExtensionSet::ParseFieldWithExtensionInfo<google::protobuf::UnknownFieldSet>(a1, v11, v19, (uint64_t)v18, a5, a3, a6); {
  if (*a5)
  }
    int v17 = (char *)((*a5 & 0xFFFFFFFFFFFFFFFELL) + 8);
  else {
    int v17 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(a5);
  }
  int v20 = (google::protobuf::UnknownFieldSet *)v17;
  return google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(a2, &v20, (uint64_t *)a3);
}

unsigned __int8 *google::protobuf::internal::ExtensionSet::ParseFieldWithExtensionInfo<google::protobuf::UnknownFieldSet>(google::protobuf::internal::ExtensionSet *this, unsigned int a2, int a3, uint64_t a4, unint64_t *a5, unsigned __int8 *a6, int32x2_t *a7)
{
  int v8 = (google::protobuf::internal *)a6;
  uint64_t v157 = *MEMORY[0x1E4F143B8];
  if (a3)
  {
    switch(*(unsigned char *)a4)
    {
      case 1:
        uint64_t v15 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 1, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        uint64_t v16 = v8;
        int v17 = (google::protobuf::internal::EpsCopyInputStream *)a7;
        return (unsigned __int8 *)google::protobuf::internal::FixedParser<unsigned long long>((unsigned int *)v15, v16, v17);
      case 2:
        unsigned __int8 v19 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 2, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        int v20 = v8;
        int32x2_t v21 = (google::protobuf::internal::EpsCopyInputStream *)a7;
        return (unsigned __int8 *)google::protobuf::internal::FixedParser<unsigned int>((unsigned int *)v19, v20, v21);
      case 3:
        int32x2_t v22 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 3, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<long long,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a7, v8, (unsigned int *)v22);
      case 4:
        uint64_t v23 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 4, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<unsigned long long,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a7, v8, (unsigned int *)v23);
      case 5:
        size_t v24 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 5, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a7, v8, (unsigned int *)v24);
      case 6:
        uint64_t v15 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 6, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        uint64_t v16 = v8;
        int v17 = (google::protobuf::internal::EpsCopyInputStream *)a7;
        return (unsigned __int8 *)google::protobuf::internal::FixedParser<unsigned long long>((unsigned int *)v15, v16, v17);
      case 7:
        unsigned __int8 v19 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 7, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        int v20 = v8;
        int32x2_t v21 = (google::protobuf::internal::EpsCopyInputStream *)a7;
        return (unsigned __int8 *)google::protobuf::internal::FixedParser<unsigned int>((unsigned int *)v19, v20, v21);
      case 8:
        int v25 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 8, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<BOOL,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a7, v8, (unsigned int *)v25);
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
        LODWORD(v145) = 3;
        long long v146 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set_inl.h";
        LODWORD(v147) = 79;
        memset(&__p, 0, sizeof(__p));
        std::string::append(&__p, "Non-primitive types can't be packed.");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v145);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        return (unsigned __int8 *)v8;
      case 0xD:
        BOOL v26 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 13, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<unsigned int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a7, v8, (unsigned int *)v26);
      case 0xE:
        std::string v27 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 14, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        BOOL v29 = *(const char **)(a4 + 8);
        uint64_t v28 = *(void *)(a4 + 16);
        int v30 = *(unsigned __int8 *)v8;
        if (*(char *)v8 < 0)
        {
          SizeFallback = google::protobuf::internal::ReadSizeFallback(v8, (const char *)*(unsigned __int8 *)v8);
          if (!SizeFallback) {
            return 0;
          }
          int v30 = v74;
        }
        else
        {
          SizeFallback = (char *)v8 + 1;
        }
        break;
      case 0xF:
        unsigned __int8 v19 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 15, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        int v20 = v8;
        int32x2_t v21 = (google::protobuf::internal::EpsCopyInputStream *)a7;
        return (unsigned __int8 *)google::protobuf::internal::FixedParser<unsigned int>((unsigned int *)v19, v20, v21);
      case 0x10:
        uint64_t v15 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 16, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        uint64_t v16 = v8;
        int v17 = (google::protobuf::internal::EpsCopyInputStream *)a7;
        return (unsigned __int8 *)google::protobuf::internal::FixedParser<unsigned long long>((unsigned int *)v15, v16, v17);
      case 0x11:
        int64_t v32 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 17, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<int,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a7, v8, (unsigned int *)v32);
      case 0x12:
        std::string::size_type v33 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 18, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<long long,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)a7, v8, (unsigned int *)v33);
      default:
        return (unsigned __int8 *)v8;
    }
    while (1)
    {
      unint64_t v75 = (unint64_t)a7[1];
      int v76 = v75 - SizeFallback;
      if (v30 <= (int)v75 - (int)SizeFallback)
      {
        v149 = (unsigned int *)v27;
        unsigned int v150 = v29;
        unint64_t v82 = (unint64_t)&SizeFallback[v30];
        uint64_t v151 = v28;
        unsigned int v152 = a5;
        unsigned int v153 = a2;
        int v83 = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::PackedEnumParserArg<google::protobuf::UnknownFieldSet>(void *,char const*,google::protobuf::internal::ParseContext *,BOOL (*)(void const*,int),void const*,google::protobuf::internal::InternalMetadata *,int)::{lambda(unsigned long long)#1}>(SizeFallback, v82, &v149);
        BOOL v84 = v82 == (void)v83;
LABEL_128:
        if (v84) {
          return (unsigned __int8 *)v83;
        }
        else {
          return 0;
        }
      }
      unsigned __int8 v145 = (unsigned int *)v27;
      long long v146 = v29;
      uint64_t v147 = v28;
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)a5;
      LODWORD(__p.__r_.__value_.__r.__words[1]) = a2;
      uint64_t v77 = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::PackedEnumParserArg<google::protobuf::UnknownFieldSet>(void *,char const*,google::protobuf::internal::ParseContext *,BOOL (*)(void const*,int),void const*,google::protobuf::internal::InternalMetadata *,int)::{lambda(unsigned long long)#1}>(SizeFallback, v75, &v145);
      if (!v77) {
        return 0;
      }
      char v78 = (long long *)a7[1];
      int v79 = v77 - v78;
      int v80 = v30 - v76;
      if (v30 - v76 <= 16) {
        break;
      }
      if (a7[3].i32[1] < 17) {
        return 0;
      }
      BOOL v81 = google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a7);
      if (!v81) {
        return 0;
      }
      int v30 = v30 - v76 - v79;
      SizeFallback = (char *)v81 + v79;
    }
    __int16 v156 = 0;
    uint64_t v155 = 0;
    long long v154 = *v78;
    v149 = (unsigned int *)v27;
    unsigned int v150 = v29;
    uint64_t v151 = v28;
    unsigned int v152 = a5;
    unsigned int v153 = a2;
    std::string v143 = google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::PackedEnumParserArg<google::protobuf::UnknownFieldSet>(void *,char const*,google::protobuf::internal::ParseContext *,BOOL (*)(void const*,int),void const*,google::protobuf::internal::InternalMetadata *,int)::{lambda(unsigned long long)#1}>((char *)&v154 + v79, (unint64_t)&v154 + v80, &v149);
    if (v143) {
      BOOL v144 = v143 == (char *)&v154 + v80;
    }
    else {
      BOOL v144 = 0;
    }
    if (!v144) {
      return 0;
    }
    return (unsigned __int8 *)(*(void *)&a7[1] + v80);
  }
  else
  {
    switch(*(unsigned char *)a4)
    {
      case 1:
        int v8 = (google::protobuf::internal *)(a6 + 8);
        double v34 = *(double *)a6;
        if (*(unsigned char *)(a4 + 1))
        {
          google::protobuf::internal::ExtensionSet::AddDouble(this, a2, 1, *(unsigned char *)(a4 + 2), v34, *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        }
        else
        {
          std::string::size_type v85 = *(uint64_t **)(a4 + 24);
          long long v86 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
          v86[2] = v85;
          if (v87) {
            *((_WORD *)v86 + 4) = 1;
          }
          *((unsigned char *)v86 + 10) &= 0xF0u;
          *(double *)long long v86 = v34;
        }
        return (unsigned __int8 *)v8;
      case 2:
        int v8 = (google::protobuf::internal *)(a6 + 4);
        float v35 = *(float *)a6;
        if (*(unsigned char *)(a4 + 1))
        {
          google::protobuf::internal::ExtensionSet::AddFloat(this, a2, 2, *(unsigned char *)(a4 + 2), v35, *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        }
        else
        {
          unint64_t v88 = *(uint64_t **)(a4 + 24);
          std::string::size_type v89 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
          v89[2] = v88;
          if (v90) {
            *((_WORD *)v89 + 4) = 2;
          }
          *((unsigned char *)v89 + 10) &= 0xF0u;
          *(float *)std::string::size_type v89 = v35;
        }
        return (unsigned __int8 *)v8;
      case 3:
        int64_t v36 = (google::protobuf::internal *)(a6 + 1);
        uint64_t v37 = *a6;
        if (((char)*a6 & 0x80000000) == 0) {
          goto LABEL_54;
        }
        int v91 = *(unsigned __int8 *)v36;
        uint64_t v37 = (v37 + (v91 << 7) - 128);
        if ((v91 & 0x80) != 0)
        {
          int64_t v36 = (google::protobuf::internal *)(a6 + 3);
          uint64_t v135 = 14;
          while (1)
          {
            v37 += (*((unsigned __int8 *)v36 - 1) - 1) << v135;
            if ((*((char *)v36 - 1) & 0x80000000) == 0) {
              break;
            }
            int v8 = 0;
            int64_t v36 = (google::protobuf::internal *)((char *)v36 + 1);
            v135 += 7;
            if (v135 == 70) {
              return (unsigned __int8 *)v8;
            }
          }
LABEL_54:
          int v8 = v36;
        }
        else
        {
          int v8 = (google::protobuf::internal *)(a6 + 2);
        }
        if (*(unsigned char *)(a4 + 1))
        {
          char v62 = *(unsigned char *)(a4 + 2);
          int v63 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          char v64 = 3;
          goto LABEL_162;
        }
        uint64_t v116 = *(uint64_t **)(a4 + 24);
        int v96 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v96[2] = v116;
        if (v117)
        {
          __int16 v98 = 3;
          goto LABEL_180;
        }
        goto LABEL_181;
      case 4:
        std::string v38 = (google::protobuf::internal *)(a6 + 1);
        uint64_t v37 = *a6;
        if (((char)*a6 & 0x80000000) == 0) {
          goto LABEL_56;
        }
        int v92 = *(unsigned __int8 *)v38;
        uint64_t v37 = (v37 + (v92 << 7) - 128);
        if ((v92 & 0x80) != 0)
        {
          std::string v38 = (google::protobuf::internal *)(a6 + 3);
          uint64_t v136 = 14;
          while (1)
          {
            v37 += (*((unsigned __int8 *)v38 - 1) - 1) << v136;
            if ((*((char *)v38 - 1) & 0x80000000) == 0) {
              break;
            }
            int v8 = 0;
            std::string v38 = (google::protobuf::internal *)((char *)v38 + 1);
            v136 += 7;
            if (v136 == 70) {
              return (unsigned __int8 *)v8;
            }
          }
LABEL_56:
          int v8 = v38;
        }
        else
        {
          int v8 = (google::protobuf::internal *)(a6 + 2);
        }
        if (*(unsigned char *)(a4 + 1))
        {
          char v41 = *(unsigned char *)(a4 + 2);
          int v42 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          char v43 = 4;
          goto LABEL_112;
        }
        char v118 = *(uint64_t **)(a4 + 24);
        int v96 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v96[2] = v118;
        if (v119)
        {
          __int16 v98 = 4;
          goto LABEL_180;
        }
        goto LABEL_181;
      case 5:
        long long v39 = (google::protobuf::internal *)(a6 + 1);
        LODWORD(v40) = *a6;
        if (((char)*a6 & 0x80000000) == 0) {
          goto LABEL_58;
        }
        int v93 = *(unsigned __int8 *)v39;
        uint64_t v40 = (v40 + (v93 << 7) - 128);
        if ((v93 & 0x80) != 0)
        {
          long long v39 = (google::protobuf::internal *)(a6 + 3);
          uint64_t v137 = 14;
          while (1)
          {
            v40 += (*((unsigned __int8 *)v39 - 1) - 1) << v137;
            if ((*((char *)v39 - 1) & 0x80000000) == 0) {
              break;
            }
            int v8 = 0;
            long long v39 = (google::protobuf::internal *)((char *)v39 + 1);
            v137 += 7;
            if (v137 == 70) {
              return (unsigned __int8 *)v8;
            }
          }
LABEL_58:
          int v8 = v39;
        }
        else
        {
          int v8 = (google::protobuf::internal *)(a6 + 2);
        }
        if (*(unsigned char *)(a4 + 1))
        {
          char v59 = *(unsigned char *)(a4 + 2);
          long long v60 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          char v61 = 5;
          int v94 = v40;
          goto LABEL_157;
        }
        char v120 = *(uint64_t **)(a4 + 24);
        long long v121 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v121[2] = v120;
        if (v122)
        {
          __int16 v123 = 5;
          goto LABEL_184;
        }
        goto LABEL_185;
      case 6:
        int v8 = (google::protobuf::internal *)(a6 + 8);
        uint64_t v37 = *(void *)a6;
        if (*(unsigned char *)(a4 + 1))
        {
          char v41 = *(unsigned char *)(a4 + 2);
          int v42 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          char v43 = 6;
LABEL_112:
          google::protobuf::internal::ExtensionSet::AddUInt64(this, a2, v43, v41, v37, v42);
          return (unsigned __int8 *)v8;
        }
        std::string v95 = *(uint64_t **)(a4 + 24);
        int v96 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v96[2] = v95;
        if (!v97) {
          goto LABEL_181;
        }
        __int16 v98 = 6;
        goto LABEL_180;
      case 7:
        int v8 = (google::protobuf::internal *)(a6 + 4);
        int v44 = *(_DWORD *)a6;
        if (*(unsigned char *)(a4 + 1))
        {
          char v45 = *(unsigned char *)(a4 + 2);
          uint64_t v46 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          char v47 = 7;
          int v48 = v44;
          goto LABEL_139;
        }
        int v99 = *(uint64_t **)(a4 + 24);
        uint64_t v100 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v100[2] = v99;
        if (!v101) {
          goto LABEL_177;
        }
        __int16 v102 = 7;
        goto LABEL_176;
      case 8:
        int v49 = (google::protobuf::internal *)(a6 + 1);
        uint64_t v50 = *a6;
        if (((char)*a6 & 0x80000000) == 0) {
          goto LABEL_64;
        }
        int v103 = *(unsigned __int8 *)v49;
        uint64_t v50 = (v50 + (v103 << 7) - 128);
        if ((v103 & 0x80) != 0)
        {
          int v49 = (google::protobuf::internal *)(a6 + 3);
          uint64_t v138 = 14;
          while (1)
          {
            v50 += (*((unsigned __int8 *)v49 - 1) - 1) << v138;
            if ((*((char *)v49 - 1) & 0x80000000) == 0) {
              break;
            }
            int v8 = 0;
            int v49 = (google::protobuf::internal *)((char *)v49 + 1);
            v138 += 7;
            if (v138 == 70) {
              return (unsigned __int8 *)v8;
            }
          }
LABEL_64:
          int v8 = v49;
        }
        else
        {
          int v8 = (google::protobuf::internal *)(a6 + 2);
        }
        if (*(unsigned char *)(a4 + 1))
        {
          google::protobuf::internal::ExtensionSet::AddBool(this, a2, 8, *(unsigned char *)(a4 + 2), v50 != 0, *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        }
        else
        {
          long long v124 = *(uint64_t **)(a4 + 24);
          long long v125 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
          v125[2] = v124;
          if (v126) {
            *((_WORD *)v125 + 4) = 8;
          }
          *((unsigned char *)v125 + 10) &= 0xF0u;
          *(unsigned char *)long long v125 = v50 != 0;
        }
        return (unsigned __int8 *)v8;
      case 9:
      case 0xC:
        int32x2_t v13 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
        if (*(unsigned char *)(a4 + 1)) {
          int32x2_t v14 = google::protobuf::internal::ExtensionSet::AddString(this, a2, 9, v13);
        }
        else {
          int32x2_t v14 = google::protobuf::internal::ExtensionSet::MutableString(this, a2, 9, v13);
        }
        uint64_t v69 = (std::string *)v14;
        int v70 = *(unsigned __int8 *)v8;
        if (*(char *)v8 < 0)
        {
          int64_t v72 = google::protobuf::internal::ReadSizeFallback(v8, (const char *)*(unsigned __int8 *)v8);
          if (!v72) {
            return 0;
          }
          uint64_t v71 = v72;
          int v70 = v73;
        }
        else
        {
          uint64_t v71 = (char *)v8 + 1;
        }
        return (unsigned __int8 *)google::protobuf::internal::EpsCopyInputStream::ReadString((uint64_t)a7, v71, v70, v69);
      case 0xA:
        uint64_t v51 = *(const google::protobuf::MessageLite **)(a4 + 8);
        uint64_t v52 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
        if (*(unsigned char *)(a4 + 1)) {
          uint64_t v53 = google::protobuf::internal::ExtensionSet::AddMessage(this, a2, 10, v51, v52);
        }
        else {
          uint64_t v53 = (uint64_t)google::protobuf::internal::ExtensionSet::MutableMessage(this, a2, 10, v51, v52);
        }
        int v104 = a7[11].i32[0];
        BOOL v105 = __OFSUB__(v104--, 1);
        a7[11].i32[0] = v104;
        if (v104 < 0 != v105) {
          return 0;
        }
        ++a7[11].i32[1];
        int v83 = (char *)(*(uint64_t (**)(uint64_t, google::protobuf::internal *, int32x2_t *))(*(void *)v53 + 88))(v53, v8, a7);
        a7[11] = vadd_s32(a7[11], (int32x2_t)0xFFFFFFFF00000001);
        __int32 v106 = a7[10].i32[0];
        a7[10].i32[0] = 0;
        BOOL v84 = v106 == ((8 * a2) | 3);
        goto LABEL_128;
      case 0xB:
        std::string::size_type v54 = *(const google::protobuf::MessageLite **)(a4 + 8);
        uint64_t v55 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
        if (*(unsigned char *)(a4 + 1)) {
          uint64_t v56 = google::protobuf::internal::ExtensionSet::AddMessage(this, a2, 11, v54, v55);
        }
        else {
          uint64_t v56 = (uint64_t)google::protobuf::internal::ExtensionSet::MutableMessage(this, a2, 11, v54, v55);
        }
        return (unsigned __int8 *)google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::MessageLite>((uint64_t)a7, v56, v8);
      case 0xD:
        uint64_t v57 = (google::protobuf::internal *)(a6 + 1);
        LODWORD(v40) = *a6;
        if (((char)*a6 & 0x80000000) == 0) {
          goto LABEL_70;
        }
        int v107 = *(unsigned __int8 *)v57;
        uint64_t v40 = (v40 + (v107 << 7) - 128);
        if ((v107 & 0x80) != 0)
        {
          uint64_t v57 = (google::protobuf::internal *)(a6 + 3);
          uint64_t v139 = 14;
          while (1)
          {
            v40 += (*((unsigned __int8 *)v57 - 1) - 1) << v139;
            if ((*((char *)v57 - 1) & 0x80000000) == 0) {
              break;
            }
            int v8 = 0;
            uint64_t v57 = (google::protobuf::internal *)((char *)v57 + 1);
            v139 += 7;
            if (v139 == 70) {
              return (unsigned __int8 *)v8;
            }
          }
LABEL_70:
          int v8 = v57;
        }
        else
        {
          int v8 = (google::protobuf::internal *)(a6 + 2);
        }
        if (*(unsigned char *)(a4 + 1))
        {
          char v45 = *(unsigned char *)(a4 + 2);
          uint64_t v46 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          char v47 = 13;
          int v48 = v40;
LABEL_139:
          google::protobuf::internal::ExtensionSet::AddUInt32(this, a2, v47, v45, v48, v46);
          return (unsigned __int8 *)v8;
        }
        std::string v127 = *(uint64_t **)(a4 + 24);
        long long v121 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v121[2] = v127;
        if (!v128) {
          goto LABEL_185;
        }
        __int16 v123 = 13;
        goto LABEL_184;
      case 0xE:
        unint64_t v58 = (google::protobuf::internal *)(a6 + 1);
        uint64_t v40 = *a6;
        if (((char)*a6 & 0x80000000) == 0) {
          goto LABEL_72;
        }
        int v108 = *(unsigned __int8 *)v58;
        uint64_t v40 = (v40 + (v108 << 7) - 128);
        if ((v108 & 0x80) != 0)
        {
          unint64_t v58 = (google::protobuf::internal *)(a6 + 3);
          uint64_t v140 = 14;
          while (1)
          {
            v40 += (*((unsigned __int8 *)v58 - 1) - 1) << v140;
            if ((*((char *)v58 - 1) & 0x80000000) == 0) {
              break;
            }
            int v8 = 0;
            unint64_t v58 = (google::protobuf::internal *)((char *)v58 + 1);
            v140 += 7;
            if (v140 == 70) {
              return (unsigned __int8 *)v8;
            }
          }
LABEL_72:
          int v8 = v58;
        }
        else
        {
          int v8 = (google::protobuf::internal *)(a6 + 2);
        }
        if ((*(uint64_t (**)(void, uint64_t))(a4 + 8))(*(void *)(a4 + 16), v40))
        {
          if (*(unsigned char *)(a4 + 1))
          {
            google::protobuf::internal::ExtensionSet::AddInt32(this, a2, 14, *(unsigned char *)(a4 + 2), v40, *(const google::protobuf::FieldDescriptor **)(a4 + 24));
          }
          else
          {
            uint64_t v133 = *(uint64_t **)(a4 + 24);
            long long v121 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
            v121[2] = v133;
            if (v134)
            {
              __int16 v123 = 14;
LABEL_184:
              *((_WORD *)v121 + 4) = v123;
            }
LABEL_185:
            *((unsigned char *)v121 + 10) &= 0xF0u;
            *(_DWORD *)long long v121 = v40;
          }
        }
        else
        {
          if (*a5) {
            long long v109 = (char *)((*a5 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else {
            long long v109 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(a5);
          }
          google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v109, a2, v40);
        }
        return (unsigned __int8 *)v8;
      case 0xF:
        int v8 = (google::protobuf::internal *)(a6 + 4);
        int v44 = *(_DWORD *)a6;
        if (*(unsigned char *)(a4 + 1))
        {
          char v59 = *(unsigned char *)(a4 + 2);
          long long v60 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          char v61 = 15;
          goto LABEL_156;
        }
        uint64_t v110 = *(uint64_t **)(a4 + 24);
        uint64_t v100 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v100[2] = v110;
        if (!v111) {
          goto LABEL_177;
        }
        __int16 v102 = 15;
        goto LABEL_176;
      case 0x10:
        int v8 = (google::protobuf::internal *)(a6 + 8);
        uint64_t v37 = *(void *)a6;
        if (*(unsigned char *)(a4 + 1))
        {
          char v62 = *(unsigned char *)(a4 + 2);
          int v63 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          char v64 = 16;
          goto LABEL_162;
        }
        int v112 = *(uint64_t **)(a4 + 24);
        int v96 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v96[2] = v112;
        if (!v113) {
          goto LABEL_181;
        }
        __int16 v98 = 16;
        goto LABEL_180;
      case 0x11:
        uint64_t v65 = (google::protobuf::internal *)(a6 + 1);
        LODWORD(v66) = *a6;
        if (((char)*a6 & 0x80000000) == 0) {
          goto LABEL_78;
        }
        int v114 = *(unsigned __int8 *)v65;
        uint64_t v66 = (v66 + (v114 << 7) - 128);
        if ((v114 & 0x80) != 0)
        {
          uint64_t v65 = (google::protobuf::internal *)(a6 + 3);
          uint64_t v141 = 14;
          while (1)
          {
            v66 += (*((unsigned __int8 *)v65 - 1) - 1) << v141;
            if ((*((char *)v65 - 1) & 0x80000000) == 0) {
              break;
            }
            int v8 = 0;
            uint64_t v65 = (google::protobuf::internal *)((char *)v65 + 1);
            v141 += 7;
            if (v141 == 70) {
              return (unsigned __int8 *)v8;
            }
          }
LABEL_78:
          int v8 = v65;
        }
        else
        {
          int v8 = (google::protobuf::internal *)(a6 + 2);
        }
        int v44 = -(v66 & 1) ^ (v66 >> 1);
        if (*(unsigned char *)(a4 + 1))
        {
          char v59 = *(unsigned char *)(a4 + 2);
          long long v60 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          char v61 = 17;
LABEL_156:
          int v94 = v44;
LABEL_157:
          google::protobuf::internal::ExtensionSet::AddInt32(this, a2, v61, v59, v94, v60);
        }
        else
        {
          long long v129 = *(uint64_t **)(a4 + 24);
          uint64_t v100 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
          v100[2] = v129;
          if (v130)
          {
            __int16 v102 = 17;
LABEL_176:
            *((_WORD *)v100 + 4) = v102;
          }
LABEL_177:
          *((unsigned char *)v100 + 10) &= 0xF0u;
          *(_DWORD *)uint64_t v100 = v44;
        }
        return (unsigned __int8 *)v8;
      case 0x12:
        int v67 = (google::protobuf::internal *)(a6 + 1);
        unint64_t v68 = *a6;
        if (((char)*a6 & 0x80000000) == 0) {
          goto LABEL_80;
        }
        int v115 = *(unsigned __int8 *)v67;
        unint64_t v68 = (v68 + (v115 << 7) - 128);
        if ((v115 & 0x80) != 0)
        {
          int v67 = (google::protobuf::internal *)(a6 + 3);
          uint64_t v142 = 14;
          while (1)
          {
            v68 += (*((unsigned __int8 *)v67 - 1) - 1) << v142;
            if ((*((char *)v67 - 1) & 0x80000000) == 0) {
              break;
            }
            int v8 = 0;
            int v67 = (google::protobuf::internal *)((char *)v67 + 1);
            v142 += 7;
            if (v142 == 70) {
              return (unsigned __int8 *)v8;
            }
          }
LABEL_80:
          int v8 = v67;
        }
        else
        {
          int v8 = (google::protobuf::internal *)(a6 + 2);
        }
        uint64_t v37 = -(uint64_t)(v68 & 1) ^ (v68 >> 1);
        if (*(unsigned char *)(a4 + 1))
        {
          char v62 = *(unsigned char *)(a4 + 2);
          int v63 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          char v64 = 18;
LABEL_162:
          google::protobuf::internal::ExtensionSet::AddInt64(this, a2, v64, v62, v37, v63);
        }
        else
        {
          std::string v131 = *(uint64_t **)(a4 + 24);
          int v96 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
          v96[2] = v131;
          if (v132)
          {
            __int16 v98 = 18;
LABEL_180:
            *((_WORD *)v96 + 4) = v98;
          }
LABEL_181:
          *((unsigned char *)v96 + 10) &= 0xF0u;
          *int v96 = (uint64_t *)v37;
        }
        break;
      default:
        return (unsigned __int8 *)v8;
    }
  }
  return (unsigned __int8 *)v8;
}

void sub_1892164E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
}

uint64_t google::protobuf::internal::ExtensionSet::SpaceUsedExcludingSelfLong(google::protobuf::internal::ExtensionSet *this)
{
  if (*((unsigned __int16 *)this + 4) >= 0x101u)
  {
    char v5 = (void *)*((void *)this + 2);
    uint64_t v1 = 32 * v5[2];
    uint64_t v6 = (uint64_t **)*v5;
    uint64_t v7 = (uint64_t **)(v5 + 1);
    if ((void *)*v5 != v5 + 1)
    {
      do
      {
        uint64_t v8 = google::protobuf::internal::ExtensionSet::Extension::SpaceUsedExcludingSelfLong(v6 + 5);
        uint64_t v9 = v6[1];
        if (v9)
        {
          do
          {
            uint64_t v10 = (uint64_t **)v9;
            uint64_t v9 = (uint64_t *)*v9;
          }
          while (v9);
        }
        else
        {
          do
          {
            uint64_t v10 = (uint64_t **)v6[2];
            BOOL v11 = *v10 == (uint64_t *)v6;
            uint64_t v6 = v10;
          }
          while (!v11);
        }
        v1 += v8;
        uint64_t v6 = v10;
      }
      while (v10 != v7);
    }
  }
  else
  {
    uint64_t v1 = 32 * *((unsigned __int16 *)this + 5);
    if (*((_WORD *)this + 5))
    {
      uint64_t v2 = (uint64_t **)(*((void *)this + 2) + 8);
      uint64_t v3 = 32 * *((unsigned __int16 *)this + 5);
      do
      {
        v1 += google::protobuf::internal::ExtensionSet::Extension::SpaceUsedExcludingSelfLong(v2);
        v2 += 4;
        v3 -= 32;
      }
      while (v3);
    }
  }
  return v1;
}

uint64_t google::protobuf::internal::ExtensionSet::Extension::SpaceUsedExcludingSelfLong(uint64_t **this)
{
  int v1 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned __int8 *)this + 8)];
  if (*((unsigned char *)this + 9))
  {
    switch(*((unsigned char *)this + 8))
    {
      case 1:
      case 3:
      case 4:
      case 6:
      case 0x10:
      case 0x12:
        uint64_t v2 = *((unsigned int *)*this + 1);
        uint64_t v3 = 8 * v2;
        goto LABEL_15;
      case 2:
      case 5:
      case 7:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x11:
        uint64_t v2 = *((unsigned int *)*this + 1);
        uint64_t v3 = 4 * v2;
LABEL_15:
        uint64_t v7 = v3 + 24;
        goto LABEL_16;
      case 8:
        uint64_t v2 = *((unsigned int *)*this + 1);
        uint64_t v7 = v2 + 24;
LABEL_16:
        if ((int)v2 <= 0) {
          uint64_t result = 16;
        }
        else {
          uint64_t result = v7;
        }
        break;
      case 9:
      case 0xC:
        uint64_t v10 = 8 * *((int *)*this + 3);
        BOOL v11 = (unsigned int *)(*this)[2];
        if (v11)
        {
          uint64_t v12 = *v11;
          if ((int)v12 >= 1)
          {
            int32x2_t v13 = v11 + 2;
            do
            {
              int32x2_t v14 = *(void **)v13;
              if (*(char *)(*(void *)v13 + 23) < 0
                && (*v14 >= (unint64_t)v14 ? (BOOL v15 = *v14 >= (unint64_t)(v14 + 3)) : (BOOL v15 = 1), v15))
              {
                uint64_t v16 = (v14[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
              }
              else
              {
                uint64_t v16 = 0;
              }
              v10 += v16 + 24;
              v13 += 2;
              --v12;
            }
            while (v12);
          }
          v10 += 8;
        }
        uint64_t result = v10 + 24;
        break;
      case 0xA:
      case 0xB:
        int v17 = *this;
        uint64_t v18 = 8 * *((int *)*this + 3);
        unsigned __int8 v19 = (int *)(*this)[2];
        if (v19)
        {
          if (*v19 >= 1)
          {
            uint64_t v20 = 0;
            do
            {
              v18 += (*(uint64_t (**)(void))(**(void **)&v19[2 * v20 + 2] + 136))(*(void *)&v19[2 * v20 + 2]);
              ++v20;
              unsigned __int8 v19 = (int *)v17[2];
            }
            while (v20 < *v19);
          }
          v18 += 8;
        }
        uint64_t result = v18 + 24;
        break;
      default:
        return 0;
    }
  }
  else if (v1 == 10)
  {
    uint64_t v8 = **this;
    if ((*((unsigned char *)this + 10) & 0x10) != 0)
    {
      uint64_t v9 = *(uint64_t (**)(void))(v8 + 96);
    }
    else
    {
      uint64_t v9 = *(uint64_t (**)(void))(v8 + 136);
    }
    return v9();
  }
  else if (v1 == 9)
  {
    uint64_t v4 = *this;
    if (*((char *)*this + 23) < 0
      && (*v4 >= (unint64_t)v4 ? (BOOL v5 = *v4 >= (unint64_t)(v4 + 3)) : (BOOL v5 = 1), v5))
    {
      return (v4[2] & 0x7FFFFFFFFFFFFFFFLL) + 23;
    }
    else
    {
      return 24;
    }
  }
  else
  {
    return 0;
  }
  return result;
}

void google::protobuf::internal::DescriptorPoolExtensionFinder::~DescriptorPoolExtensionFinder(google::protobuf::internal::DescriptorPoolExtensionFinder *this)
{
}

void google::protobuf::internal::ExtensionSet::AppendToList(google::protobuf::Descriptor const*,google::protobuf::DescriptorPool const*,std::vector<google::protobuf::FieldDescriptor const*> *)const::$_0::operator()(uint64_t a1, uint64_t a2, google::protobuf::internal::ExtensionSet::Extension *this)
{
  if (*((unsigned char *)this + 9))
  {
    if ((int)google::protobuf::internal::ExtensionSet::Extension::GetSize(this) <= 0) {
      return;
    }
  }
  else if (*((unsigned char *)this + 10))
  {
    return;
  }
  uint64_t v6 = *((void *)this + 2);
  uint64_t v7 = **(void ****)(a1 + 16);
  if (!v6)
  {
    uint64_t ExtensionByNumber = google::protobuf::DescriptorPool::FindExtensionByNumber(*(std::mutex ***)(a1 + 8), *(const google::protobuf::Descriptor **)a1, a2);
    unint64_t v12 = (unint64_t)v7[2];
    int32x2_t v13 = (uint64_t *)v7[1];
    if ((unint64_t)v13 < v12)
    {
      *int32x2_t v13 = ExtensionByNumber;
      uint64_t v10 = v13 + 1;
      goto LABEL_32;
    }
    uint64_t v19 = ((char *)v13 - (unsigned char *)*v7) >> 3;
    if (!((unint64_t)(v19 + 1) >> 61))
    {
      uint64_t v20 = v12 - (void)*v7;
      uint64_t v21 = v20 >> 2;
      if (v20 >> 2 <= (unint64_t)(v19 + 1)) {
        uint64_t v21 = v19 + 1;
      }
      if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v22 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v22 = v21;
      }
      if (v22) {
        uint64_t v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(v7 + 2), v22);
      }
      else {
        uint64_t v23 = 0;
      }
      BOOL v29 = (uint64_t *)&v23[8 * v19];
      int v30 = &v23[8 * v22];
      *BOOL v29 = ExtensionByNumber;
      uint64_t v10 = v29 + 1;
      unint64_t v31 = (char *)*v7;
      BOOL v26 = (char *)v7[1];
      if (v26 != *v7)
      {
        do
        {
          uint64_t v32 = *((void *)v26 - 1);
          v26 -= 8;
          *--BOOL v29 = v32;
        }
        while (v26 != v31);
        BOOL v26 = (char *)*v7;
      }
      *uint64_t v7 = v29;
      v7[1] = v10;
      void v7[2] = v30;
      if (!v26) {
        goto LABEL_32;
      }
LABEL_31:
      operator delete(v26);
      goto LABEL_32;
    }
LABEL_40:
    std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
  }
  unint64_t v8 = (unint64_t)v7[2];
  uint64_t v9 = v7[1];
  if ((unint64_t)v9 >= v8)
  {
    uint64_t v14 = ((char *)v9 - (unsigned char *)*v7) >> 3;
    if (!((unint64_t)(v14 + 1) >> 61))
    {
      uint64_t v15 = v8 - (void)*v7;
      uint64_t v16 = v15 >> 2;
      if (v15 >> 2 <= (unint64_t)(v14 + 1)) {
        uint64_t v16 = v14 + 1;
      }
      if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v17 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v17 = v16;
      }
      if (v17)
      {
        uint64_t v18 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(v7 + 2), v17);
        uint64_t v6 = *((void *)this + 2);
      }
      else
      {
        uint64_t v18 = 0;
      }
      size_t v24 = &v18[8 * v14];
      int v25 = &v18[8 * v17];
      *(void *)size_t v24 = v6;
      uint64_t v10 = v24 + 8;
      std::string v27 = (char *)*v7;
      BOOL v26 = (char *)v7[1];
      if (v26 != *v7)
      {
        do
        {
          uint64_t v28 = *((void *)v26 - 1);
          v26 -= 8;
          *((void *)v24 - 1) = v28;
          v24 -= 8;
        }
        while (v26 != v27);
        BOOL v26 = (char *)*v7;
      }
      *uint64_t v7 = v24;
      v7[1] = v10;
      void v7[2] = v25;
      if (!v26) {
        goto LABEL_32;
      }
      goto LABEL_31;
    }
    goto LABEL_40;
  }
  void *v9 = v6;
  uint64_t v10 = v9 + 1;
LABEL_32:
  v7[1] = v10;
}

char *google::protobuf::internal::ReadPackedVarintArray<char const* google::protobuf::internal::PackedEnumParserArg<google::protobuf::UnknownFieldSet>(void *,char const*,google::protobuf::internal::ParseContext *,BOOL (*)(void const*,int),void const*,google::protobuf::internal::InternalMetadata *,int)::{lambda(unsigned long long)#1}>(char *a1, unint64_t a2, unsigned int **a3)
{
  uint64_t v3 = a1;
  while ((unint64_t)v3 < a2)
  {
    uint64_t v6 = *v3;
    if (*v3 < 0)
    {
      int v7 = v3[1];
      uint64_t v6 = (v6 + (v7 << 7) - 128);
      if ((v7 & 0x80) != 0)
      {
        v3 += 3;
        uint64_t v14 = 14;
        while (1)
        {
          v6 += (*(v3 - 1) - 1) << v14;
          if ((*(v3 - 1) & 0x80000000) == 0) {
            break;
          }
          ++v3;
          v14 += 7;
          if (v14 == 70) {
            return 0;
          }
        }
      }
      else
      {
        v3 += 2;
      }
    }
    else
    {
      ++v3;
    }
    if (((unsigned int (*)(unsigned int *, uint64_t))a3[1])(a3[2], v6))
    {
      unint64_t v8 = *a3;
      uint64_t v9 = **a3;
      if (v9 == (*a3)[1])
      {
        unsigned int v10 = v9 + 1;
        google::protobuf::RepeatedField<int>::Reserve(*a3, v9 + 1);
        *(_DWORD *)(*((void *)v8 + 1) + 4 * v9) = v6;
      }
      else
      {
        *(_DWORD *)(*((void *)v8 + 1) + 4 * v9) = v6;
        unsigned int v10 = v9 + 1;
      }
      *unint64_t v8 = v10;
    }
    else
    {
      unsigned int v11 = *((_DWORD *)a3 + 8);
      unint64_t v12 = (unint64_t *)a3[3];
      if (*v12) {
        int32x2_t v13 = (char *)((*v12 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else {
        int32x2_t v13 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v12);
      }
      google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v13, v11, v6);
    }
  }
  return v3;
}

void InitDefaultsscc_info_DescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::DescriptorProto::DescriptorProto((google::protobuf::DescriptorProto *)&google::protobuf::_DescriptorProto_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_DescriptorProto_default_instance_, v4);
}

void InitDefaultsscc_info_DescriptorProto_ExtensionRange_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_DescriptorProto_ExtensionRange_default_instance_ = (uint64_t)&unk_1ED515AF8;
  unk_1E91177D0 = 0;
  qword_1E91177D8 = 0;
  if (atomic_load_explicit(scc_info_DescriptorProto_ExtensionRange_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_DescriptorProto_ExtensionRange_google_2fprotobuf_2fdescriptor_2eproto);
  }
  qword_1E91177E0 = 0;
  unk_1E91177E8 = 0;

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_DescriptorProto_ExtensionRange_default_instance_, v4);
}

void InitDefaultsscc_info_DescriptorProto_ReservedRange_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  qword_1E91177F8 = 0;
  unk_1E9117800 = 0;
  google::protobuf::_DescriptorProto_ReservedRange_default_instance_ = (uint64_t)&unk_1ED5159C0;
  qword_1E9117808 = 0;

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_DescriptorProto_ReservedRange_default_instance_, v4);
}

void InitDefaultsscc_info_EnumDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::EnumDescriptorProto::EnumDescriptorProto((google::protobuf::EnumDescriptorProto *)&google::protobuf::_EnumDescriptorProto_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumDescriptorProto_default_instance_, v4);
}

void InitDefaultsscc_info_EnumDescriptorProto_EnumReservedRange_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  qword_1E9117988 = 0;
  unk_1E9117990 = 0;
  google::protobuf::_EnumDescriptorProto_EnumReservedRange_default_instance_ = (uint64_t)&unk_1ED515BA8;
  qword_1E9117998 = 0;

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumDescriptorProto_EnumReservedRange_default_instance_, v4);
}

void InitDefaultsscc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::EnumOptions::EnumOptions((google::protobuf::EnumOptions *)&google::protobuf::_EnumOptions_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumOptions_default_instance_, v4);
}

void InitDefaultsscc_info_EnumValueDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::EnumValueDescriptorProto::EnumValueDescriptorProto((google::protobuf::EnumValueDescriptorProto *)&google::protobuf::_EnumValueDescriptorProto_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumValueDescriptorProto_default_instance_, v4);
}

void InitDefaultsscc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::EnumValueOptions::EnumValueOptions((google::protobuf::EnumValueOptions *)&google::protobuf::_EnumValueOptions_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumValueOptions_default_instance_, v4);
}

void InitDefaultsscc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::ExtensionRangeOptions::ExtensionRangeOptions((google::protobuf::ExtensionRangeOptions *)&google::protobuf::_ExtensionRangeOptions_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_ExtensionRangeOptions_default_instance_, v4);
}

void InitDefaultsscc_info_FieldDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::FieldDescriptorProto::FieldDescriptorProto((google::protobuf::FieldDescriptorProto *)&google::protobuf::_FieldDescriptorProto_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FieldDescriptorProto_default_instance_, v4);
}

void InitDefaultsscc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::FieldOptions::FieldOptions((google::protobuf::FieldOptions *)&google::protobuf::_FieldOptions_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FieldOptions_default_instance_, v4);
}

void InitDefaultsscc_info_FileDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)&google::protobuf::_FileDescriptorProto_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FileDescriptorProto_default_instance_, v4);
}

void InitDefaultsscc_info_FileDescriptorSet_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::FileDescriptorSet::FileDescriptorSet((google::protobuf::FileDescriptorSet *)&google::protobuf::_FileDescriptorSet_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FileDescriptorSet_default_instance_, v4);
}

void InitDefaultsscc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::FileOptions::FileOptions((google::protobuf::FileOptions *)&google::protobuf::_FileOptions_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FileOptions_default_instance_, v4);
}

void InitDefaultsscc_info_GeneratedCodeInfo_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::GeneratedCodeInfo::GeneratedCodeInfo((google::protobuf::GeneratedCodeInfo *)&google::protobuf::_GeneratedCodeInfo_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_GeneratedCodeInfo_default_instance_, v4);
}

void InitDefaultsscc_info_GeneratedCodeInfo_Annotation_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::GeneratedCodeInfo_Annotation::GeneratedCodeInfo_Annotation((google::protobuf::GeneratedCodeInfo_Annotation *)&google::protobuf::_GeneratedCodeInfo_Annotation_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_GeneratedCodeInfo_Annotation_default_instance_, v4);
}

void InitDefaultsscc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::MessageOptions::MessageOptions((google::protobuf::MessageOptions *)&google::protobuf::_MessageOptions_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_MessageOptions_default_instance_, v4);
}

void InitDefaultsscc_info_MethodDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::MethodDescriptorProto::MethodDescriptorProto((google::protobuf::MethodDescriptorProto *)&google::protobuf::_MethodDescriptorProto_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_MethodDescriptorProto_default_instance_, v4);
}

void InitDefaultsscc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::MethodOptions::MethodOptions((google::protobuf::MethodOptions *)&google::protobuf::_MethodOptions_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_MethodOptions_default_instance_, v4);
}

void InitDefaultsscc_info_OneofDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::OneofDescriptorProto::OneofDescriptorProto((google::protobuf::OneofDescriptorProto *)&google::protobuf::_OneofDescriptorProto_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_OneofDescriptorProto_default_instance_, v4);
}

void InitDefaultsscc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::OneofOptions::OneofOptions((google::protobuf::OneofOptions *)&google::protobuf::_OneofOptions_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_OneofOptions_default_instance_, v4);
}

void InitDefaultsscc_info_ServiceDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::ServiceDescriptorProto::ServiceDescriptorProto((google::protobuf::ServiceDescriptorProto *)&google::protobuf::_ServiceDescriptorProto_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_ServiceDescriptorProto_default_instance_, v4);
}

void InitDefaultsscc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::ServiceOptions::ServiceOptions((google::protobuf::ServiceOptions *)&google::protobuf::_ServiceOptions_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_ServiceOptions_default_instance_, v4);
}

void InitDefaultsscc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::SourceCodeInfo::SourceCodeInfo((google::protobuf::SourceCodeInfo *)&google::protobuf::_SourceCodeInfo_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_SourceCodeInfo_default_instance_, v4);
}

void InitDefaultsscc_info_SourceCodeInfo_Location_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::SourceCodeInfo_Location::SourceCodeInfo_Location((google::protobuf::SourceCodeInfo_Location *)&google::protobuf::_SourceCodeInfo_Location_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_SourceCodeInfo_Location_default_instance_, v4);
}

void InitDefaultsscc_info_UninterpretedOption_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::UninterpretedOption::UninterpretedOption((google::protobuf::UninterpretedOption *)&google::protobuf::_UninterpretedOption_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_UninterpretedOption_default_instance_, v4);
}

void InitDefaultsscc_info_UninterpretedOption_NamePart_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, 3014000, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::UninterpretedOption_NamePart::UninterpretedOption_NamePart((google::protobuf::UninterpretedOption_NamePart *)&google::protobuf::_UninterpretedOption_NamePart_default_instance_, 0);

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_UninterpretedOption_NamePart_default_instance_, v4);
}

google::protobuf::FileDescriptorSet *google::protobuf::FileDescriptorSet::FileDescriptorSet(google::protobuf::FileDescriptorSet *this, Arena *a2)
{
  *(void *)this = &unk_1ED514FB0;
  *((void *)this + 1) = a2;
  *((void *)this + 2) = a2;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((_DWORD *)this + 10) = 0;
  if (atomic_load_explicit(scc_info_FileDescriptorSet_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FileDescriptorSet_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return this;
}

void sub_18921789C(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::FileDescriptorSet::~FileDescriptorSet(google::protobuf::FileDescriptorSet *this)
{
}

{
  uint64_t vars8;

  google::protobuf::FileDescriptorSet::~FileDescriptorSet(this);

  JUMPOUT(0x18C11F580);
}

uint64_t google::protobuf::FileDescriptorSet::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

char *google::protobuf::FileDescriptorSet::Clear(char *this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (google::protobuf::FileDescriptorProto **)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = google::protobuf::FileDescriptorProto::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  BOOL v5 = (unint64_t *)(v1 + 8);
  if (v6)
  {
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>(v5);
  }
  return this;
}

google::protobuf::internal *google::protobuf::FileDescriptorSet::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  BOOL v29 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v29, *((_DWORD *)this + 23));
  uint64_t result = v29;
  if ((v5 & 1) == 0)
  {
    int v7 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v8 = (google::protobuf::internal *)((char *)result + 1);
      unsigned int v9 = *(unsigned __int8 *)result;
      if (*(char *)result < 0)
      {
        unsigned int v9 = v9 + (*(unsigned __int8 *)v8 << 7) - 128;
        if (*(char *)v8 < 0)
        {
          unint64_t v8 = (google::protobuf::internal *)((char *)result + 3);
          uint64_t v28 = -21;
          while (1)
          {
            v9 += (*((unsigned __int8 *)v8 - 1) - 1) << (v28 + 35);
            if ((*((char *)v8 - 1) & 0x80000000) == 0) {
              break;
            }
            uint64_t result = 0;
            unint64_t v8 = (google::protobuf::internal *)((char *)v8 + 1);
            v28 += 7;
            if (!v28) {
              return result;
            }
          }
        }
        else
        {
          unint64_t v8 = (google::protobuf::internal *)((char *)result + 2);
        }
      }
      BOOL v29 = v8;
      if (v9 == 10) {
        break;
      }
      if (v9) {
        BOOL v10 = (v9 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
        *((_DWORD *)this + 20) = v9 - 1;
        return v8;
      }
      if (*v7)
      {
        unsigned int v11 = (char *)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        unsigned int v11 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)(a1 + 8));
        unint64_t v8 = v29;
      }
      int v30 = (google::protobuf::UnknownFieldSet *)v11;
      uint64_t result = (google::protobuf::internal *)google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v9, &v30, (uint64_t *)v8);
      BOOL v29 = result;
      if (!result) {
        return result;
      }
LABEL_34:
      int v27 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v29, *((_DWORD *)this + 23));
      uint64_t result = v29;
      if (v27) {
        return result;
      }
    }
    uint64_t result = (google::protobuf::internal *)((char *)v8 - 1);
    while (1)
    {
      unint64_t v12 = (google::protobuf::internal *)((char *)result + 1);
      BOOL v29 = v12;
      int32x2_t v13 = *(int **)(a1 + 32);
      if (!v13) {
        break;
      }
      int v14 = *(_DWORD *)(a1 + 24);
      int v15 = *v13;
      if (v14 >= *v13)
      {
        if (v15 == *(_DWORD *)(a1 + 28))
        {
LABEL_21:
          if (v14 <= v15)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v15 - v14 + 1);
            int32x2_t v13 = *(int **)(a1 + 32);
          }
          int v15 = *v13;
        }
        *int32x2_t v13 = v15 + 1;
        uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 16));
        uint64_t v17 = *(void *)(a1 + 32);
        uint64_t v18 = *(int *)(a1 + 24);
        *(_DWORD *)(a1 + 24) = v18 + 1;
        *(void *)(v17 + 8 * v18 + 8) = v16;
        unint64_t v12 = v29;
        goto LABEL_25;
      }
      *(_DWORD *)(a1 + 24) = v14 + 1;
      uint64_t v16 = *(char **)&v13[2 * v14 + 2];
LABEL_25:
      uint64_t v19 = (const char *)*(unsigned __int8 *)v12;
      if (*(char *)v12 < 0)
      {
        uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v12, v19);
        if (!result) {
          return result;
        }
        uint64_t v20 = result;
      }
      else
      {
        uint64_t v20 = (google::protobuf::internal *)((char *)v12 + 1);
      }
      uint64_t v21 = *((void *)this + 1);
      int v22 = v19 + v20 - v21;
      *(void *)this = v21 + (v22 & (v22 >> 31));
      int v23 = *((_DWORD *)this + 7);
      *((_DWORD *)this + 7) = v22;
      LODWORD(v2google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = *((_DWORD *)this + 22);
      BOOL v24 = __OFSUB__(v21, 1);
      LODWORD(v2google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v21 - 1;
      *((_DWORD *)this + 2google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = v21;
      if ((int)v21 < 0 != v24) {
        return 0;
      }
      uint64_t result = google::protobuf::FileDescriptorProto::_InternalParse((uint64_t)v16, v20, this);
      if (!result) {
        return result;
      }
      ++*((_DWORD *)this + 22);
      if (*((_DWORD *)this + 20)) {
        return 0;
      }
      int v25 = *((_DWORD *)this + 7) + v23 - v22;
      *((_DWORD *)this + 7) = v25;
      unint64_t v26 = *((void *)this + 1) + (v25 & (v25 >> 31));
      *(void *)this = v26;
      BOOL v29 = result;
      if (v26 <= (unint64_t)result || *(unsigned char *)result != 10) {
        goto LABEL_34;
      }
    }
    int v14 = *(_DWORD *)(a1 + 24);
    int v15 = *(_DWORD *)(a1 + 28);
    goto LABEL_21;
  }
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::FileDescriptorSet::_InternalSerialize(google::protobuf::FileDescriptorSet *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      unint64_t v8 = *(google::protobuf::FileDescriptorProto **)(*((void *)this + 4) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          BOOL v10 = a2 + 3;
          do
          {
            *(v10 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[2] = v11;
          BOOL v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        BOOL v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)google::protobuf::FileDescriptorProto::_InternalSerialize(v8, v10, a3);
    }
  }
  uint64_t v14 = *((void *)this + 1);
  if ((v14 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

const InternalMetadata *google::protobuf::FileDescriptorSet::ByteSizeLong(google::protobuf::FileDescriptorSet *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  char v5 = (const InternalMetadata *)*((int *)this + 6);
  uint64_t v6 = *((void *)this + 4);
  if (v6) {
    int v7 = (google::protobuf::FileDescriptorProto **)(v6 + 8);
  }
  else {
    int v7 = 0;
  }
  if (v5)
  {
    uint64_t v8 = 8 * (void)v5;
    do
    {
      unsigned int v9 = *v7++;
      BOOL v10 = google::protobuf::FileDescriptorProto::ByteSizeLong(v9, a2, a3, a4);
      char v5 = (const InternalMetadata *)((char *)v5 + (void)v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6));
      v8 -= 8;
    }
    while (v8);
  }
  else
  {
    char v5 = 0;
  }
  if (*((unsigned char *)this + 8))
  {
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FileDescriptorSet *)((char *)this + 8), v5, (_DWORD *)this + 10, a4);
  }
  else
  {
    *((_DWORD *)this + 10) = v5;
    return v5;
  }
}

void google::protobuf::FileDescriptorSet::MergeFrom(google::protobuf::FileDescriptorSet *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v4[1];
    if (v7) {
      google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8));
    }
    int v8 = *((_DWORD *)v6 + 6);
    if (v8)
    {
      uint64_t v29 = v6[4];
      unsigned int v9 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorSet *)((char *)this + 16), v8);
      BOOL v10 = v9;
      uint64_t v11 = **((int **)this + 4);
      uint64_t v12 = *((int *)this + 6);
      int v13 = v11 - v12;
      if ((int)v11 - (int)v12 >= v8) {
        uint64_t v14 = v8;
      }
      else {
        uint64_t v14 = v13;
      }
      if ((int)v14 >= 1)
      {
        int v15 = (google::protobuf::FileDescriptorProto **)(v29 + 8);
        uint64_t v16 = (google::protobuf::FileDescriptorProto **)v9;
        do
        {
          uint64_t v18 = *v15++;
          uint64_t v17 = v18;
          uint64_t v19 = *v16++;
          google::protobuf::internal::GenericTypeHandler<google::protobuf::FileDescriptorProto>::Merge(v17, v19);
          --v14;
        }
        while (v14);
      }
      if (v13 < v8)
      {
        uint64_t v20 = (google::protobuf::internal::ArenaImpl *)*((void *)this + 2);
        int v21 = v12 + v8 - v11;
        uint64_t v22 = 8 * v11 - 8 * v12;
        int v23 = (char **)((char *)v10 + v22);
        BOOL v24 = (google::protobuf::FileDescriptorProto **)(v22 + v29 + 8);
        do
        {
          int v25 = *v24++;
          unint64_t v26 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorProto>(v20);
          google::protobuf::internal::GenericTypeHandler<google::protobuf::FileDescriptorProto>::Merge(v25, (google::protobuf::FileDescriptorProto *)v26);
          *v23++ = v26;
          --v21;
        }
        while (v21);
      }
      int v27 = *((_DWORD *)this + 6) + v8;
      *((_DWORD *)this + 6) = v27;
      uint64_t v28 = (int *)*((void *)this + 4);
      if (*v28 < v27) {
        int *v28 = v27;
      }
    }
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::FileDescriptorSet::CopyFrom(google::protobuf::FileDescriptorSet *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::FileDescriptorSet::Clear((char *)this);
    google::protobuf::FileDescriptorSet::MergeFrom(this, a2);
  }
}

BOOL google::protobuf::FileDescriptorSet::IsInitialized(google::protobuf::FileDescriptorSet *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char IsInitialized = google::protobuf::FileDescriptorProto::IsInitialized(*(google::protobuf::FileDescriptorProto **)(*((void *)this + 4) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((IsInitialized & 1) != 0);
  return v3 < 1;
}

uint64_t google::protobuf::FileDescriptorSet::GetMetadata(google::protobuf::FileDescriptorSet *this)
{
  return *off_1E910DC90;
}

google::protobuf::FileDescriptorProto *google::protobuf::FileDescriptorProto::FileDescriptorProto(google::protobuf::FileDescriptorProto *this, Arena *a2)
{
  *(void *)this = &unk_1ED5151C0;
  *((void *)this + google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = a2;
  *((void *)this + 3) = a2;
  *((void *)this + google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = a2;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = a2;
  *((void *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  *((void *)this + 1google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = 0;
  *((void *)this + 1google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = a2;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 15) = a2;
  *((void *)this + 16) = 0;
  *((void *)this + 17) = 0;
  *((void *)this + 18) = 0;
  *((void *)this + 19) = a2;
  *((void *)this + 2google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = a2;
  *((void *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_FileDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FileDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *((void *)this + 2google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 23) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 25) = 0;
  *((void *)this + 26) = 0;
  *((void *)this + 24) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_1892181AC(_Unwind_Exception *a1)
{
  if (*(int *)(v4 + 164) >= 1)
  {
    uint64_t v8 = *(void *)(v4 + 168);
    uint64_t v10 = *(void *)(v8 - 8);
    unsigned int v9 = (void *)(v8 - 8);
    if (!v10) {
      operator delete(v9);
    }
  }
  if (*(int *)(v4 + 148) >= 1)
  {
    uint64_t v11 = *(void *)(v4 + 152);
    uint64_t v13 = *(void *)(v11 - 8);
    uint64_t v12 = (void *)(v11 - 8);
    if (!v13) {
      operator delete(v12);
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>(v6);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::TypeHandler>(v5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>(v3);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>(v2);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::FileDescriptorProto::~FileDescriptorProto(google::protobuf::FileDescriptorProto *this)
{
  google::protobuf::FileDescriptorProto::SharedDtor(this);
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  if (*((int *)this + 41) >= 1)
  {
    uint64_t v2 = *((void *)this + 21);
    uint64_t v4 = *(void *)(v2 - 8);
    int v3 = (void *)(v2 - 8);
    if (!v4) {
      operator delete(v3);
    }
  }
  if (*((int *)this + 37) >= 1)
  {
    uint64_t v5 = *((void *)this + 19);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v6 = (void *)(v5 - 8);
    if (!v7) {
      operator delete(v6);
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((void *)this + 15);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::TypeHandler>((void *)this + 12);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((void *)this + 9);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((void *)this + 6);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)this + 3);
}

{
  uint64_t vars8;

  google::protobuf::FileDescriptorProto::~FileDescriptorProto(this);

  JUMPOUT(0x18C11F580);
}

google::protobuf::SourceCodeInfo *google::protobuf::FileDescriptorProto::SharedDtor(google::protobuf::SourceCodeInfo *this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((void *)this + 22);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (google::protobuf::SourceCodeInfo *)MEMORY[0x18C11F580](v2, 0x1012C40EC159624);
  }
  uint64_t v3 = *(void *)(v1 + 184);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    this = (google::protobuf::SourceCodeInfo *)MEMORY[0x18C11F580](v3, 0x1012C40EC159624);
  }
  uint64_t v4 = *(void *)(v1 + 192);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    this = (google::protobuf::SourceCodeInfo *)MEMORY[0x18C11F580](v4, 0x1012C40EC159624);
  }
  if ((_UNKNOWN *)v1 != &google::protobuf::_FileDescriptorProto_default_instance_)
  {
    uint64_t v5 = *(google::protobuf::FileOptions **)(v1 + 200);
    if (v5)
    {
      google::protobuf::FileOptions::~FileOptions(v5);
      MEMORY[0x18C11F580]();
    }
    this = *(google::protobuf::SourceCodeInfo **)(v1 + 208);
    if (this)
    {
      google::protobuf::SourceCodeInfo::~SourceCodeInfo(this);
      JUMPOUT(0x18C11F580);
    }
  }
  return this;
}

uint64_t google::protobuf::FileDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

char *google::protobuf::FileDescriptorProto::Clear(google::protobuf::FileDescriptorProto *this)
{
  uint64_t result = (char *)google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24);
  uint64_t v3 = *((unsigned int *)this + 14);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (google::protobuf::DescriptorProto **)(*((void *)this + 8) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = google::protobuf::DescriptorProto::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 14) = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 20);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (google::protobuf::EnumDescriptorProto **)(*((void *)this + 11) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = google::protobuf::EnumDescriptorProto::Clear(v8);
      --v6;
    }
    while (v6);
    *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  }
  uint64_t v9 = *((unsigned int *)this + 26);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (char **)(*((void *)this + 14) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = google::protobuf::ServiceDescriptorProto::Clear(v11);
      --v9;
    }
    while (v9);
    *((_DWORD *)this + 26) = 0;
  }
  uint64_t v12 = *((unsigned int *)this + 32);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = (char **)(*((void *)this + 17) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = google::protobuf::FieldDescriptorProto::Clear(v14);
      --v12;
    }
    while (v12);
    *((_DWORD *)this + ++*(_DWORD *)(this + 32) = 0;
  }
  *((_DWORD *)this + 36) = 0;
  *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  int v15 = *((_DWORD *)this + 4);
  if ((v15 & 0x1F) == 0) {
    goto LABEL_24;
  }
  if ((v15 & 1) == 0)
  {
    if ((v15 & 2) == 0) {
      goto LABEL_20;
    }
LABEL_32:
    unint64_t v19 = *((void *)this + 23) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v19 + 23) < 0)
    {
      **(unsigned char **)unint64_t v19 = 0;
      *(void *)(v19 + 8) = 0;
      if ((v15 & 4) != 0) {
        goto LABEL_36;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v19 = 0;
      *(unsigned char *)(v19 + 23) = 0;
      if ((v15 & 4) != 0) {
        goto LABEL_36;
      }
    }
LABEL_21:
    if ((v15 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_40;
  }
  unint64_t v18 = *((void *)this + 22) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v18 + 23) < 0)
  {
    **(unsigned char **)unint64_t v18 = 0;
    *(void *)(v18 + 8) = 0;
    if ((v15 & 2) != 0) {
      goto LABEL_32;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v18 = 0;
    *(unsigned char *)(v18 + 23) = 0;
    if ((v15 & 2) != 0) {
      goto LABEL_32;
    }
  }
LABEL_20:
  if ((v15 & 4) == 0) {
    goto LABEL_21;
  }
LABEL_36:
  unint64_t v20 = *((void *)this + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v20 + 23) < 0)
  {
    **(unsigned char **)unint64_t v20 = 0;
    *(void *)(v20 + 8) = 0;
    if ((v15 & 8) != 0) {
      goto LABEL_40;
    }
LABEL_22:
    if ((v15 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  *(unsigned char *)unint64_t v20 = 0;
  *(unsigned char *)(v20 + 23) = 0;
  if ((v15 & 8) == 0) {
    goto LABEL_22;
  }
LABEL_40:
  uint64_t result = google::protobuf::FileOptions::Clear(*((google::protobuf::FileOptions **)this + 25));
  if ((v15 & 0x10) != 0) {
LABEL_23:
  }
    uint64_t result = google::protobuf::SourceCodeInfo::Clear(*((char **)this + 26));
LABEL_24:
  char v17 = *((unsigned char *)this + 8);
  uint64_t v16 = (char *)this + 8;
  *((_DWORD *)v16 + google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = 0;
  if (v17)
  {
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((unint64_t *)v16);
  }
  return result;
}

char *google::protobuf::FileOptions::Clear(google::protobuf::FileOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::Clear((unsigned char *)this + 16);
  uint64_t v3 = *((unsigned int *)this + 14);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (char **)(*((void *)this + 8) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 14) = 0;
  }
  int v6 = *((_DWORD *)this + 10);
  if ((_BYTE)v6)
  {
    if ((v6 & 1) == 0)
    {
      if ((v6 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_19:
      unint64_t v8 = *((void *)this + 10) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)unint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_23;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v8 = 0;
        *(unsigned char *)(v8 + 23) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_23;
        }
      }
LABEL_9:
      if ((v6 & 8) == 0) {
        goto LABEL_10;
      }
LABEL_27:
      unint64_t v10 = *((void *)this + 12) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v10 + 23) < 0)
      {
        **(unsigned char **)unint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
        if ((v6 & 0x10) != 0) {
          goto LABEL_31;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v10 = 0;
        *(unsigned char *)(v10 + 23) = 0;
        if ((v6 & 0x10) != 0) {
          goto LABEL_31;
        }
      }
LABEL_11:
      if ((v6 & 0x20) == 0) {
        goto LABEL_12;
      }
LABEL_35:
      unint64_t v12 = *((void *)this + 14) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v12 + 23) < 0)
      {
        **(unsigned char **)unint64_t v12 = 0;
        *(void *)(v12 + 8) = 0;
        if ((v6 & 0x40) != 0) {
          goto LABEL_39;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v12 = 0;
        *(unsigned char *)(v12 + 23) = 0;
        if ((v6 & 0x40) != 0) {
          goto LABEL_39;
        }
      }
LABEL_13:
      if ((v6 & 0x80) == 0) {
        goto LABEL_46;
      }
LABEL_43:
      unint64_t v14 = *((void *)this + 16) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v14 + 23) < 0)
      {
        **(unsigned char **)unint64_t v14 = 0;
        *(void *)(v14 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v14 = 0;
        *(unsigned char *)(v14 + 23) = 0;
      }
      goto LABEL_46;
    }
    unint64_t v7 = *((void *)this + 9) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_19;
      }
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_23:
    unint64_t v9 = *((void *)this + 11) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_27;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_27;
      }
    }
LABEL_10:
    if ((v6 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_31:
    unint64_t v11 = *((void *)this + 13) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)unint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
      if ((v6 & 0x20) != 0) {
        goto LABEL_35;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
      if ((v6 & 0x20) != 0) {
        goto LABEL_35;
      }
    }
LABEL_12:
    if ((v6 & 0x40) == 0) {
      goto LABEL_13;
    }
LABEL_39:
    unint64_t v13 = *((void *)this + 15) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v13 + 23) < 0)
    {
      **(unsigned char **)unint64_t v13 = 0;
      *(void *)(v13 + 8) = 0;
      if ((v6 & 0x80) == 0) {
        goto LABEL_46;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v13 = 0;
      *(unsigned char *)(v13 + 23) = 0;
      if ((v6 & 0x80) == 0) {
        goto LABEL_46;
      }
    }
    goto LABEL_43;
  }
LABEL_46:
  if ((v6 & 0x300) == 0) {
    goto LABEL_56;
  }
  if ((v6 & 0x100) != 0)
  {
    unint64_t v15 = *((void *)this + 17) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v15 + 23) < 0)
    {
      **(unsigned char **)unint64_t v15 = 0;
      *(void *)(v15 + 8) = 0;
      if ((v6 & 0x200) == 0) {
        goto LABEL_56;
      }
      goto LABEL_51;
    }
    *(unsigned char *)unint64_t v15 = 0;
    *(unsigned char *)(v15 + 23) = 0;
  }
  if ((v6 & 0x200) == 0) {
    goto LABEL_56;
  }
LABEL_51:
  unint64_t v16 = *((void *)this + 18) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v16 + 23) < 0)
  {
    **(unsigned char **)unint64_t v16 = 0;
    *(void *)(v16 + 8) = 0;
  }
  else
  {
    *(unsigned char *)unint64_t v16 = 0;
    *(unsigned char *)(v16 + 23) = 0;
  }
LABEL_56:
  if ((v6 & 0xFC00) != 0)
  {
    *((_WORD *)this + 78) = 0;
    *((_DWORD *)this + 38) = 0;
  }
  if ((v6 & 0xF0000) != 0)
  {
    *((_WORD *)this + 79) = 0;
    *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 1;
    *((unsigned char *)this + 164) = 1;
  }
  char v18 = *((unsigned char *)this + 8);
  char v17 = (char *)this + 8;
  *((_DWORD *)v17 + 8) = 0;
  if (v18)
  {
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((unint64_t *)v17);
  }
  return result;
}

char *google::protobuf::SourceCodeInfo::Clear(char *this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (google::protobuf::SourceCodeInfo_Location **)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = google::protobuf::SourceCodeInfo_Location::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (unint64_t *)(v1 + 8);
  if (v6)
  {
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>(v5);
  }
  return this;
}

google::protobuf::internal *google::protobuf::FileDescriptorProto::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v100 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v100, *((_DWORD *)this + 23));
  uint64_t result = v100;
  if (v5) {
    return result;
  }
  __int16 v98 = (std::string **)(a1 + 192);
  int v99 = (unint64_t *)(a1 + 8);
  unint64_t v7 = (uint64_t *)(a1 + 24);
  int v96 = (std::string **)(a1 + 176);
  char v97 = (std::string **)(a1 + 184);
  while (2)
  {
    unint64_t v8 = (google::protobuf::internal *)((char *)result + 1);
    unsigned int v9 = *(unsigned __int8 *)result;
    if (*(char *)result < 0)
    {
      unsigned int v9 = v9 + (*(unsigned __int8 *)v8 << 7) - 128;
      if (*(char *)v8 < 0)
      {
        unint64_t v8 = (google::protobuf::internal *)((char *)result + 3);
        uint64_t v14 = -21;
        while (1)
        {
          v9 += (*((unsigned __int8 *)v8 - 1) - 1) << (v14 + 35);
          if ((*((char *)v8 - 1) & 0x80000000) == 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v8 = (google::protobuf::internal *)((char *)v8 + 1);
          v14 += 7;
          if (!v14) {
            return result;
          }
        }
      }
      else
      {
        unint64_t v8 = (google::protobuf::internal *)((char *)result + 2);
      }
    }
    uint64_t v100 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_179;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v10 = *(void *)(a1 + 8);
        unint64_t v11 = (google::protobuf::internal::ArenaImpl *)(v10 & 0xFFFFFFFFFFFFFFFELL);
        if (v10) {
          unint64_t v11 = *(google::protobuf::internal::ArenaImpl **)v11;
        }
        unint64_t v12 = *v96;
        if (*v96 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_162;
        }
        unint64_t v13 = (char **)(a1 + 176);
        goto LABEL_161;
      case 2u:
        if (v9 != 18) {
          goto LABEL_179;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v11 = (google::protobuf::internal::ArenaImpl *)(v15 & 0xFFFFFFFFFFFFFFFELL);
        if (v15) {
          unint64_t v11 = *(google::protobuf::internal::ArenaImpl **)v11;
        }
        unint64_t v12 = *v97;
        if (*v97 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_162;
        }
        unint64_t v13 = (char **)(a1 + 184);
        goto LABEL_161;
      case 3u:
        if (v9 != 26) {
          goto LABEL_179;
        }
        uint64_t result = (google::protobuf::internal *)((char *)v8 - 1);
        while (1)
        {
          unint64_t v16 = (char *)result + 1;
          uint64_t v100 = (google::protobuf::internal *)((char *)result + 1);
          char v17 = *(int **)(a1 + 40);
          if (!v17) {
            break;
          }
          int v18 = *(_DWORD *)(a1 + 32);
          int v19 = *v17;
          if (v18 >= *v17)
          {
            if (v19 == *(_DWORD *)(a1 + 36))
            {
LABEL_28:
              if (v18 <= v19)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v19 - v18 + 1);
                char v17 = *(int **)(a1 + 40);
              }
              int v19 = *v17;
            }
            *char v17 = v19 + 1;
            uint64_t v21 = *v7;
            if (!*v7) {
              operator new();
            }
            if (*(unsigned char *)(v21 + 24)) {
            AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v21, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
            }
            AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
            AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
            AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
            uint64_t v22 = *(void *)(a1 + 40);
            uint64_t v23 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + ++*(_DWORD *)(this + 32) = v23 + 1;
            *(void *)(v22 + 8 * v23 + 8) = AlignedAndAddCleanup;
            unint64_t v16 = (std::string::value_type *)v100;
            goto LABEL_36;
          }
          *(_DWORD *)(a1 + ++*(_DWORD *)(this + 32) = v18 + 1;
          AlignedAndAddCleanup = *(std::string **)&v17[2 * v18 + 2];
LABEL_36:
          uint64_t result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v16, (uint64_t)this);
          uint64_t v100 = result;
          if (!result) {
            return result;
          }
          if (*(void *)this <= (unint64_t)result || *(unsigned char *)result != 26) {
            goto LABEL_187;
          }
        }
        int v18 = *(_DWORD *)(a1 + 32);
        int v19 = *(_DWORD *)(a1 + 36);
        goto LABEL_28;
      case 4u:
        if (v9 != 34) {
          goto LABEL_179;
        }
        uint64_t result = (google::protobuf::internal *)((char *)v8 - 1);
        while (1)
        {
          BOOL v24 = (google::protobuf::internal *)((char *)result + 1);
          uint64_t v100 = (google::protobuf::internal *)((char *)result + 1);
          int v25 = *(int **)(a1 + 64);
          if (!v25) {
            break;
          }
          int v26 = *(_DWORD *)(a1 + 56);
          int v27 = *v25;
          if (v26 >= *v25)
          {
            if (v27 == *(_DWORD *)(a1 + 60))
            {
LABEL_47:
              if (v26 <= v27)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), v27 - v26 + 1);
                int v25 = *(int **)(a1 + 64);
              }
              int v27 = *v25;
            }
            *int v25 = v27 + 1;
            uint64_t v28 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 48));
            uint64_t v29 = *(void *)(a1 + 64);
            uint64_t v30 = *(int *)(a1 + 56);
            *(_DWORD *)(a1 + 56) = v30 + 1;
            *(void *)(v29 + 8 * v30 + 8) = v28;
            BOOL v24 = v100;
            goto LABEL_51;
          }
          *(_DWORD *)(a1 + 56) = v26 + 1;
          uint64_t v28 = *(char **)&v25[2 * v26 + 2];
LABEL_51:
          uint64_t result = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::DescriptorProto>((uint64_t)this, (uint64_t)v28, v24);
          uint64_t v100 = result;
          if (!result) {
            return result;
          }
          if (*(void *)this <= (unint64_t)result || *(unsigned char *)result != 34) {
            goto LABEL_187;
          }
        }
        int v26 = *(_DWORD *)(a1 + 56);
        int v27 = *(_DWORD *)(a1 + 60);
        goto LABEL_47;
      case 5u:
        if (v9 != 42) {
          goto LABEL_179;
        }
        uint64_t result = (google::protobuf::internal *)((char *)v8 - 1);
        while (1)
        {
          unint64_t v31 = (google::protobuf::internal *)((char *)result + 1);
          uint64_t v100 = (google::protobuf::internal *)((char *)result + 1);
          uint64_t v32 = *(int **)(a1 + 88);
          if (!v32) {
            break;
          }
          int v33 = *(_DWORD *)(a1 + 80);
          int v34 = *v32;
          if (v33 >= *v32)
          {
            if (v34 == *(_DWORD *)(a1 + 84))
            {
LABEL_62:
              if (v33 <= v34)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 72), v34 - v33 + 1);
                uint64_t v32 = *(int **)(a1 + 88);
              }
              int v34 = *v32;
            }
            int *v32 = v34 + 1;
            float v35 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 72));
            uint64_t v36 = *(void *)(a1 + 88);
            uint64_t v37 = *(int *)(a1 + 80);
            *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v37 + 1;
            *(void *)(v36 + 8 * v37 + 8) = v35;
            unint64_t v31 = v100;
            goto LABEL_66;
          }
          *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v33 + 1;
          float v35 = *(char **)&v32[2 * v33 + 2];
LABEL_66:
          uint64_t result = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::EnumDescriptorProto>(this, (uint64_t)v35, v31);
          uint64_t v100 = result;
          if (!result) {
            return result;
          }
          if (*(void *)this <= (unint64_t)result || *(unsigned char *)result != 42) {
            goto LABEL_187;
          }
        }
        int v33 = *(_DWORD *)(a1 + 80);
        int v34 = *(_DWORD *)(a1 + 84);
        goto LABEL_62;
      case 6u:
        if (v9 != 50) {
          goto LABEL_179;
        }
        uint64_t result = (google::protobuf::internal *)((char *)v8 - 1);
        while (2)
        {
          std::string v38 = (google::protobuf::internal *)((char *)result + 1);
          uint64_t v100 = v38;
          long long v39 = *(int **)(a1 + 112);
          if (v39)
          {
            int v40 = *(_DWORD *)(a1 + 104);
            int v41 = *v39;
            if (v40 < *v39)
            {
              *(_DWORD *)(a1 + 104) = v40 + 1;
              int v42 = *(char **)&v39[2 * v40 + 2];
              goto LABEL_81;
            }
            if (v41 != *(_DWORD *)(a1 + 108))
            {
LABEL_80:
              *long long v39 = v41 + 1;
              int v42 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 96));
              uint64_t v43 = *(void *)(a1 + 112);
              uint64_t v44 = *(int *)(a1 + 104);
              *(_DWORD *)(a1 + 104) = v44 + 1;
              *(void *)(v43 + 8 * v44 + 8) = v42;
              std::string v38 = v100;
LABEL_81:
              char v45 = (const char *)*(unsigned __int8 *)v38;
              if (*(char *)v38 < 0)
              {
                uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v38, v45);
                if (!result) {
                  return result;
                }
                uint64_t v46 = result;
              }
              else
              {
                uint64_t v46 = (google::protobuf::internal *)((char *)v38 + 1);
              }
              uint64_t v47 = *((void *)this + 1);
              int v48 = v45 + v46 - v47;
              *(void *)this = v47 + (v48 & (v48 >> 31));
              int v49 = *((_DWORD *)this + 7);
              *((_DWORD *)this + 7) = v48;
              LODWORD(v47) = *((_DWORD *)this + 22);
              BOOL v50 = __OFSUB__(v47, 1);
              LODWORD(v47) = v47 - 1;
              *((_DWORD *)this + 2google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = v47;
              if ((int)v47 < 0 == v50)
              {
                uint64_t result = google::protobuf::ServiceDescriptorProto::_InternalParse((uint64_t)v42, v46, this);
                if (!result) {
                  return result;
                }
                ++*((_DWORD *)this + 22);
                if (!*((_DWORD *)this + 20))
                {
                  int v51 = *((_DWORD *)this + 7) + v49 - v48;
                  *((_DWORD *)this + 7) = v51;
                  unint64_t v52 = *((void *)this + 1) + (v51 & (v51 >> 31));
                  *(void *)this = v52;
                  uint64_t v100 = result;
                  if (v52 <= (unint64_t)result || *(unsigned char *)result != 50) {
                    goto LABEL_187;
                  }
                  continue;
                }
              }
              return 0;
            }
          }
          else
          {
            int v40 = *(_DWORD *)(a1 + 104);
            int v41 = *(_DWORD *)(a1 + 108);
          }
          break;
        }
        if (v40 <= v41)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 96), v41 - v40 + 1);
          long long v39 = *(int **)(a1 + 112);
        }
        int v41 = *v39;
        goto LABEL_80;
      case 7u:
        if (v9 != 58) {
          goto LABEL_179;
        }
        uint64_t result = (google::protobuf::internal *)((char *)v8 - 1);
        while (1)
        {
          uint64_t v53 = (google::protobuf::internal *)((char *)result + 1);
          uint64_t v100 = (google::protobuf::internal *)((char *)result + 1);
          std::string::size_type v54 = *(int **)(a1 + 136);
          if (!v54) {
            break;
          }
          int v55 = *(_DWORD *)(a1 + 128);
          int v56 = *v54;
          if (v55 >= *v54)
          {
            if (v56 == *(_DWORD *)(a1 + 132))
            {
LABEL_98:
              if (v55 <= v56)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 120), v56 - v55 + 1);
                std::string::size_type v54 = *(int **)(a1 + 136);
              }
              int v56 = *v54;
            }
            int *v54 = v56 + 1;
            uint64_t v57 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 120));
            uint64_t v58 = *(void *)(a1 + 136);
            uint64_t v59 = *(int *)(a1 + 128);
            *(_DWORD *)(a1 + 128) = v59 + 1;
            *(void *)(v58 + 8 * v59 + 8) = v57;
            uint64_t v53 = v100;
            goto LABEL_102;
          }
          *(_DWORD *)(a1 + 128) = v55 + 1;
          uint64_t v57 = *(char **)&v54[2 * v55 + 2];
LABEL_102:
          uint64_t result = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::FieldDescriptorProto>(this, (uint64_t)v57, v53);
          uint64_t v100 = result;
          if (!result) {
            return result;
          }
          if (*(void *)this <= (unint64_t)result || *(unsigned char *)result != 58) {
            goto LABEL_187;
          }
        }
        int v55 = *(_DWORD *)(a1 + 128);
        int v56 = *(_DWORD *)(a1 + 132);
        goto LABEL_98;
      case 8u:
        if (v9 != 66) {
          goto LABEL_179;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        long long v60 = *(char **)(a1 + 200);
        if (!v60)
        {
          char v61 = (google::protobuf::internal::ArenaImpl *)(*v99 & 0xFFFFFFFFFFFFFFFELL);
          if (*v99) {
            char v61 = *(google::protobuf::internal::ArenaImpl **)v61;
          }
          long long v60 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>(v61);
          *(void *)(a1 + 20google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v60;
          unint64_t v8 = v100;
        }
        char v62 = (const char *)*(unsigned __int8 *)v8;
        if (*(char *)v8 < 0)
        {
          uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v8, v62);
          if (!result) {
            return result;
          }
          int v63 = result;
        }
        else
        {
          int v63 = (google::protobuf::internal *)((char *)v8 + 1);
        }
        uint64_t v85 = *((void *)this + 1);
        int v86 = v62 + v63 - v85;
        *(void *)this = v85 + (v86 & (v86 >> 31));
        int v87 = *((_DWORD *)this + 7);
        *((_DWORD *)this + 7) = v86;
        LODWORD(v85) = *((_DWORD *)this + 22);
        BOOL v50 = __OFSUB__(v85, 1);
        LODWORD(v85) = v85 - 1;
        *((_DWORD *)this + 2google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = v85;
        if ((int)v85 < 0 != v50) {
          return 0;
        }
        uint64_t result = google::protobuf::FileOptions::_InternalParse((uint64_t)v60, v63, this);
        if (!result) {
          return result;
        }
        goto LABEL_172;
      case 9u:
        if (v9 != 74) {
          goto LABEL_179;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        char v64 = *(char **)(a1 + 208);
        if (!v64)
        {
          uint64_t v65 = (google::protobuf::internal::ArenaImpl *)(*v99 & 0xFFFFFFFFFFFFFFFELL);
          if (*v99) {
            uint64_t v65 = *(google::protobuf::internal::ArenaImpl **)v65;
          }
          char v64 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo>(v65);
          *(void *)(a1 + 208) = v64;
          unint64_t v8 = v100;
        }
        uint64_t v66 = (const char *)*(unsigned __int8 *)v8;
        if (*(char *)v8 < 0)
        {
          uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v8, v66);
          if (!result) {
            return result;
          }
          int v67 = result;
        }
        else
        {
          int v67 = (google::protobuf::internal *)((char *)v8 + 1);
        }
        uint64_t v88 = *((void *)this + 1);
        int v86 = v66 + v67 - v88;
        *(void *)this = v88 + (v86 & (v86 >> 31));
        int v87 = *((_DWORD *)this + 7);
        *((_DWORD *)this + 7) = v86;
        LODWORD(v88) = *((_DWORD *)this + 22);
        BOOL v50 = __OFSUB__(v88, 1);
        LODWORD(v88) = v88 - 1;
        *((_DWORD *)this + 2google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = v88;
        if ((int)v88 < 0 != v50) {
          return 0;
        }
        uint64_t result = google::protobuf::SourceCodeInfo::_InternalParse((uint64_t)v64, v67, this);
        if (!result) {
          return result;
        }
LABEL_172:
        ++*((_DWORD *)this + 22);
        if (*((_DWORD *)this + 20)) {
          return 0;
        }
        int v89 = *((_DWORD *)this + 7) + v87 - v86;
        *((_DWORD *)this + 7) = v89;
        *(void *)this = *((void *)this + 1) + (v89 & (v89 >> 31));
        uint64_t v100 = result;
        goto LABEL_187;
      case 0xAu:
        if (v9 == 80)
        {
          unint64_t v68 = (unsigned __int8 *)v8 - 1;
          while (1)
          {
            uint64_t v100 = (google::protobuf::internal *)(v68 + 1);
            int v69 = v68[1];
            if ((char)v68[1] < 0)
            {
              int v70 = v68[2];
              uint64_t v71 = (v69 + (v70 << 7) - 128);
              if ((v70 & 0x80) != 0)
              {
                int64_t v72 = v68 + 4;
                uint64_t v73 = 14;
                while (1)
                {
                  v71 += (*(v72 - 1) - 1) << v73;
                  if (((char)*(v72 - 1) & 0x80000000) == 0) {
                    break;
                  }
                  int v69 = 0;
                  unint64_t v68 = 0;
                  ++v72;
                  v73 += 7;
                  if (v73 == 70) {
                    goto LABEL_131;
                  }
                }
                int v69 = v71;
                unint64_t v68 = v72;
              }
              else
              {
                v68 += 3;
                int v69 = v69 + (v70 << 7) - 128;
              }
            }
            else
            {
              v68 += 2;
            }
LABEL_131:
            uint64_t v100 = (google::protobuf::internal *)v68;
            uint64_t v74 = *(unsigned int *)(a1 + 144);
            if (v74 == *(_DWORD *)(a1 + 148))
            {
              int v75 = v74 + 1;
              google::protobuf::RepeatedField<int>::Reserve((unsigned int *)(a1 + 144), v74 + 1);
              *(_DWORD *)(*(void *)(a1 + 152) + 4 * v74) = v69;
              unint64_t v68 = (unsigned __int8 *)v100;
            }
            else
            {
              *(_DWORD *)(*(void *)(a1 + 152) + 4 * v74) = v69;
              int v75 = v74 + 1;
            }
            *(_DWORD *)(a1 + 144) = v75;
            if (!v68) {
              return 0;
            }
            if (*(void *)this <= (unint64_t)v68 || *v68 != 80) {
              goto LABEL_187;
            }
          }
        }
        if (v9 != 82) {
          goto LABEL_179;
        }
        char v90 = this;
        int v91 = v8;
        int v92 = (unsigned int *)(a1 + 144);
        goto LABEL_178;
      case 0xBu:
        if (v9 != 88)
        {
          if (v9 == 90)
          {
            char v90 = this;
            int v91 = v8;
            int v92 = (unsigned int *)(a1 + 160);
LABEL_178:
            uint64_t result = (google::protobuf::internal *)google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>((uint64_t)v90, v91, v92);
          }
          else
          {
LABEL_179:
            if (v9) {
              BOOL v93 = (v9 & 7) == 4;
            }
            else {
              BOOL v93 = 1;
            }
            if (v93)
            {
              *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v9 - 1;
              return v8;
            }
            if (*v99)
            {
              int v94 = (char *)((*v99 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              int v94 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v99);
              unint64_t v8 = v100;
            }
            char v101 = (google::protobuf::UnknownFieldSet *)v94;
            uint64_t result = (google::protobuf::internal *)google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v9, &v101, (uint64_t *)v8);
          }
LABEL_186:
          uint64_t v100 = result;
          if (!result) {
            return result;
          }
LABEL_187:
          int v95 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v100, *((_DWORD *)this + 23));
          uint64_t result = v100;
          if (v95) {
            return result;
          }
          continue;
        }
        int v76 = (unsigned __int8 *)v8 - 1;
        while (1)
        {
          uint64_t v100 = (google::protobuf::internal *)(v76 + 1);
          int v77 = v76[1];
          if ((char)v76[1] < 0)
          {
            int v78 = v76[2];
            uint64_t v79 = (v77 + (v78 << 7) - 128);
            if ((v78 & 0x80) != 0)
            {
              int v80 = v76 + 4;
              uint64_t v81 = 14;
              while (1)
              {
                v79 += (*(v80 - 1) - 1) << v81;
                if (((char)*(v80 - 1) & 0x80000000) == 0) {
                  break;
                }
                int v77 = 0;
                int v76 = 0;
                ++v80;
                v81 += 7;
                if (v81 == 70) {
                  goto LABEL_149;
                }
              }
              int v77 = v79;
              int v76 = v80;
            }
            else
            {
              v76 += 3;
              int v77 = v77 + (v78 << 7) - 128;
            }
          }
          else
          {
            v76 += 2;
          }
LABEL_149:
          uint64_t v100 = (google::protobuf::internal *)v76;
          uint64_t v82 = *(unsigned int *)(a1 + 160);
          if (v82 == *(_DWORD *)(a1 + 164))
          {
            int v83 = v82 + 1;
            google::protobuf::RepeatedField<int>::Reserve((unsigned int *)(a1 + 160), v82 + 1);
            *(_DWORD *)(*(void *)(a1 + 168) + 4 * v8google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = v77;
            int v76 = (unsigned __int8 *)v100;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 168) + 4 * v8google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = v77;
            int v83 = v82 + 1;
          }
          *(_DWORD *)(a1 + 16google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v83;
          if (!v76) {
            return 0;
          }
          if (*(void *)this <= (unint64_t)v76 || *v76 != 88) {
            goto LABEL_187;
          }
        }
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_179;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v84 = *(void *)(a1 + 8);
        unint64_t v11 = (google::protobuf::internal::ArenaImpl *)(v84 & 0xFFFFFFFFFFFFFFFELL);
        if (v84) {
          unint64_t v11 = *(google::protobuf::internal::ArenaImpl **)v11;
        }
        unint64_t v12 = *v98;
        if (*v98 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_162;
        }
        unint64_t v13 = (char **)(a1 + 192);
LABEL_161:
        unint64_t v12 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>(v13, v11);
        unint64_t v8 = v100;
LABEL_162:
        uint64_t result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v12, (std::string::value_type *)v8, (uint64_t)this);
        goto LABEL_186;
      default:
        goto LABEL_179;
    }
  }
}

google::protobuf::internal *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::DescriptorProto>(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  char v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::DescriptorProto::_InternalParse(a2, v6, (google::protobuf::internal::EpsCopyInputStream *)a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

google::protobuf::internal *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::EnumDescriptorProto>(google::protobuf::internal::EpsCopyInputStream *this, uint64_t a2, google::protobuf::internal *a3)
{
  char v5 = (const char *)*(unsigned __int8 *)a3;
  if (*(char *)a3 < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(a3, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)a3 + 1);
  }
  uint64_t v8 = *((void *)this + 1);
  int v9 = v5 + v6 - v8;
  *(void *)this = v8 + (v9 & (v9 >> 31));
  int v10 = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = v9;
  LODWORD(v8) = *((_DWORD *)this + 22);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *((_DWORD *)this + 2google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::EnumDescriptorProto::_InternalParse(a2, v6, this);
  if (!result) {
    return result;
  }
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20)) {
    return 0;
  }
  int v12 = *((_DWORD *)this + 7) + v10 - v9;
  *((_DWORD *)this + 7) = v12;
  *(void *)this = *((void *)this + 1) + (v12 & (v12 >> 31));
  return result;
}

google::protobuf::internal *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::FieldDescriptorProto>(google::protobuf::internal::EpsCopyInputStream *this, uint64_t a2, google::protobuf::internal *a3)
{
  char v5 = (const char *)*(unsigned __int8 *)a3;
  if (*(char *)a3 < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(a3, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)a3 + 1);
  }
  uint64_t v8 = *((void *)this + 1);
  int v9 = v5 + v6 - v8;
  *(void *)this = v8 + (v9 & (v9 >> 31));
  int v10 = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = v9;
  LODWORD(v8) = *((_DWORD *)this + 22);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *((_DWORD *)this + 2google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::FieldDescriptorProto::_InternalParse(a2, v6, this);
  if (!result) {
    return result;
  }
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20)) {
    return 0;
  }
  int v12 = *((_DWORD *)this + 7) + v10 - v9;
  *((_DWORD *)this + 7) = v12;
  *(void *)this = *((void *)this + 1) + (v12 & (v12 >> 31));
  return result;
}

uint64_t google::protobuf::internal::ReadVarint64(google::protobuf::internal *this, const char **a2)
{
  uint64_t v2 = *(unsigned __int8 **)this;
  uint64_t v3 = (unsigned __int8 *)(*(void *)this + 1);
  uint64_t v4 = **(unsigned __int8 **)this;
  if (**(char **)this < 0)
  {
    int v5 = *v3;
    int v6 = v4 + (v5 << 7);
    uint64_t v7 = (v6 - 128);
    if ((v5 & 0x80) != 0)
    {
      uint64_t v8 = v2 + 3;
      uint64_t v9 = 14;
      while (1)
      {
        v7 += (*(v8 - 1) - 1) << v9;
        if (((char)*(v8 - 1) & 0x80000000) == 0) {
          break;
        }
        uint64_t v4 = 0;
        uint64_t v3 = 0;
        ++v8;
        v9 += 7;
        if (v9 == 70) {
          goto LABEL_9;
        }
      }
      uint64_t v4 = v7;
      uint64_t v3 = v8;
    }
    else
    {
      uint64_t v3 = v2 + 2;
      uint64_t v4 = (v6 - 128);
    }
  }
LABEL_9:
  *(void *)this = v3;
  return v4;
}

const google::protobuf::UnknownFieldSet *google::protobuf::FileDescriptorProto::_InternalSerialize(google::protobuf::FileDescriptorProto *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, (const void **)(*((void *)this + 22) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, (const void **)(*((void *)this + 23) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *((unsigned int *)this + 8);
  if ((int)v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 8 * v7;
    do
    {
      int v10 = *(void **)(*((void *)this + 5) + v8 + 8);
      if (*((char *)v10 + 23) < 0)
      {
        int64_t v11 = v10[1];
        if (v11 > 127) {
          goto LABEL_16;
        }
      }
      else
      {
        int64_t v11 = *((unsigned __int8 *)v10 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v11)
      {
        *uint64_t v4 = 26;
        v4[1] = v11;
        if (*((char *)v10 + 23) < 0) {
          int v10 = (void *)*v10;
        }
        int v12 = v4 + 2;
        memcpy(v4 + 2, v10, v11);
        uint64_t v4 = &v12[v11];
        goto LABEL_14;
      }
LABEL_16:
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 3, (uint64_t)v10, v4);
LABEL_14:
      v8 += 8;
    }
    while (v9 != v8);
  }
  int v13 = *((_DWORD *)this + 14);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v15 = *(google::protobuf::DescriptorProto **)(*((void *)this + 8) + 8 * i + 8);
      *uint64_t v4 = 34;
      unsigned int v16 = *((_DWORD *)v15 + 5);
      if (v16 > 0x7F)
      {
        v4[1] = v16 | 0x80;
        unsigned int v18 = v16 >> 7;
        if (v16 >> 14)
        {
          char v17 = v4 + 3;
          do
          {
            *(v17 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v18 | 0x80;
            unsigned int v19 = v18 >> 7;
            ++v17;
            unsigned int v20 = v18 >> 14;
            v18 >>= 7;
          }
          while (v20);
          *(v17 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v19;
        }
        else
        {
          void v4[2] = v18;
          char v17 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v16;
        char v17 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::DescriptorProto::_InternalSerialize(v15, v17, a3);
    }
  }
  int v21 = *((_DWORD *)this + 20);
  if (v21)
  {
    for (int j = 0; j != v21; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v23 = *(google::protobuf::EnumDescriptorProto **)(*((void *)this + 11) + 8 * j + 8);
      *uint64_t v4 = 42;
      unsigned int v24 = *((_DWORD *)v23 + 5);
      if (v24 > 0x7F)
      {
        v4[1] = v24 | 0x80;
        unsigned int v26 = v24 >> 7;
        if (v24 >> 14)
        {
          int v25 = v4 + 3;
          do
          {
            *(v25 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v26 | 0x80;
            unsigned int v27 = v26 >> 7;
            ++v25;
            unsigned int v28 = v26 >> 14;
            v26 >>= 7;
          }
          while (v28);
          *(v25 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v27;
        }
        else
        {
          void v4[2] = v26;
          int v25 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v24;
        int v25 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::EnumDescriptorProto::_InternalSerialize(v23, v25, a3);
    }
  }
  int v29 = *((_DWORD *)this + 26);
  if (v29)
  {
    for (int k = 0; k != v29; ++k)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unint64_t v31 = *(google::protobuf::ServiceDescriptorProto **)(*((void *)this + 14) + 8 * k + 8);
      *uint64_t v4 = 50;
      unsigned int v32 = *((_DWORD *)v31 + 5);
      if (v32 > 0x7F)
      {
        v4[1] = v32 | 0x80;
        unsigned int v34 = v32 >> 7;
        if (v32 >> 14)
        {
          int v33 = v4 + 3;
          do
          {
            *(v33 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v34 | 0x80;
            unsigned int v35 = v34 >> 7;
            ++v33;
            unsigned int v36 = v34 >> 14;
            v34 >>= 7;
          }
          while (v36);
          *(v33 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v35;
        }
        else
        {
          void v4[2] = v34;
          int v33 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v32;
        int v33 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::ServiceDescriptorProto::_InternalSerialize(v31, v33, a3);
    }
  }
  int v37 = *((_DWORD *)this + 32);
  if (v37)
  {
    for (int m = 0; m != v37; ++m)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      long long v39 = *(google::protobuf::FieldDescriptorProto **)(*((void *)this + 17) + 8 * m + 8);
      *uint64_t v4 = 58;
      unsigned int v40 = *((_DWORD *)v39 + 5);
      if (v40 > 0x7F)
      {
        v4[1] = v40 | 0x80;
        unsigned int v42 = v40 >> 7;
        if (v40 >> 14)
        {
          int v41 = v4 + 3;
          do
          {
            *(v41 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v42 | 0x80;
            unsigned int v43 = v42 >> 7;
            ++v41;
            unsigned int v44 = v42 >> 14;
            v42 >>= 7;
          }
          while (v44);
          *(v41 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v43;
        }
        else
        {
          void v4[2] = v42;
          int v41 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v40;
        int v41 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::FieldDescriptorProto::_InternalSerialize(v39, v41, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    char v45 = (google::protobuf::FileOptions *)*((void *)this + 25);
    *uint64_t v4 = 66;
    unsigned int v46 = *((_DWORD *)v45 + 11);
    if (v46 > 0x7F)
    {
      v4[1] = v46 | 0x80;
      unsigned int v48 = v46 >> 7;
      if (v46 >> 14)
      {
        uint64_t v47 = v4 + 3;
        do
        {
          *(v47 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v48 | 0x80;
          unsigned int v49 = v48 >> 7;
          ++v47;
          unsigned int v50 = v48 >> 14;
          v48 >>= 7;
        }
        while (v50);
        *(v47 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v49;
      }
      else
      {
        void v4[2] = v48;
        uint64_t v47 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v46;
      uint64_t v47 = v4 + 2;
    }
    uint64_t v4 = (unsigned __int8 *)google::protobuf::FileOptions::_InternalSerialize(v45, v47, a3);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    int v51 = (google::protobuf::SourceCodeInfo *)*((void *)this + 26);
    *uint64_t v4 = 74;
    unsigned int v52 = *((_DWORD *)v51 + 10);
    if (v52 > 0x7F)
    {
      v4[1] = v52 | 0x80;
      unsigned int v54 = v52 >> 7;
      if (v52 >> 14)
      {
        uint64_t v53 = v4 + 3;
        do
        {
          *(v53 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v54 | 0x80;
          unsigned int v55 = v54 >> 7;
          ++v53;
          unsigned int v56 = v54 >> 14;
          v54 >>= 7;
        }
        while (v56);
        *(v53 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v55;
      }
      else
      {
        void v4[2] = v54;
        uint64_t v53 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v52;
      uint64_t v53 = v4 + 2;
    }
    uint64_t v4 = (unsigned __int8 *)google::protobuf::SourceCodeInfo::_InternalSerialize(v51, v53, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
  }
  uint64_t v57 = *((unsigned int *)this + 36);
  if ((int)v57 >= 1)
  {
    for (uint64_t n = 0; n != v57; ++n)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unint64_t v59 = *(int *)(*((void *)this + 19) + 4 * n);
      *uint64_t v4 = 80;
      if (v59 > 0x7F)
      {
        v4[1] = v59 | 0x80;
        unint64_t v60 = v59 >> 7;
        if (v59 >> 14)
        {
          v4 += 3;
          do
          {
            *(v4 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v60 | 0x80;
            unint64_t v61 = v60 >> 7;
            ++v4;
            unint64_t v62 = v60 >> 14;
            v60 >>= 7;
          }
          while (v62);
          *(v4 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v61;
        }
        else
        {
          void v4[2] = v60;
          v4 += 3;
        }
      }
      else
      {
        v4[1] = v59;
        v4 += 2;
      }
    }
  }
  uint64_t v63 = *((unsigned int *)this + 40);
  if ((int)v63 >= 1)
  {
    for (iint i = 0; ii != v63; ++ii)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unint64_t v65 = *(int *)(*((void *)this + 21) + 4 * ii);
      *uint64_t v4 = 88;
      if (v65 > 0x7F)
      {
        v4[1] = v65 | 0x80;
        unint64_t v66 = v65 >> 7;
        if (v65 >> 14)
        {
          v4 += 3;
          do
          {
            *(v4 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v66 | 0x80;
            unint64_t v67 = v66 >> 7;
            ++v4;
            unint64_t v68 = v66 >> 14;
            v66 >>= 7;
          }
          while (v68);
          *(v4 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v67;
        }
        else
        {
          void v4[2] = v66;
          v4 += 3;
        }
      }
      else
      {
        v4[1] = v65;
        v4 += 2;
      }
    }
  }
  if ((v6 & 4) != 0) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 12, (const void **)(*((void *)this + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v69 = *((void *)this + 1);
  if ((v69 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v69 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
}

const InternalMetadata *google::protobuf::FileDescriptorProto::ByteSizeLong(google::protobuf::FileDescriptorProto *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  uint64_t v5 = *((unsigned int *)this + 8);
  if ((int)v5 < 1)
  {
    uint64_t v7 = *((unsigned int *)this + 8);
  }
  else
  {
    int v6 = (uint64_t *)(*((void *)this + 5) + 8);
    uint64_t v7 = *((unsigned int *)this + 8);
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
      uint64_t v10 = *(void *)(v8 + 8);
      if ((v9 & 0x80u) == 0) {
        uint64_t v10 = v9;
      }
      v7 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
      --v5;
    }
    while (v5);
  }
  uint64_t v11 = *((int *)this + 14);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = *((void *)this + 8);
  if (v13) {
    uint64_t v14 = (google::protobuf::DescriptorProto **)(v13 + 8);
  }
  else {
    uint64_t v14 = 0;
  }
  if (v11)
  {
    uint64_t v15 = 8 * v11;
    do
    {
      unsigned int v16 = *v14++;
      char v17 = google::protobuf::DescriptorProto::ByteSizeLong(v16, a2, a3, a4);
      v12 += (uint64_t)v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6);
      v15 -= 8;
    }
    while (v15);
  }
  uint64_t v18 = *((int *)this + 20);
  uint64_t v19 = v12 + v18;
  uint64_t v20 = *((void *)this + 11);
  if (v20) {
    int v21 = (google::protobuf::EnumDescriptorProto **)(v20 + 8);
  }
  else {
    int v21 = 0;
  }
  if (v18)
  {
    uint64_t v22 = 8 * v18;
    do
    {
      uint64_t v23 = *v21++;
      unsigned int v24 = google::protobuf::EnumDescriptorProto::ByteSizeLong(v23, a2, a3, a4);
      v19 += (uint64_t)v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6);
      v22 -= 8;
    }
    while (v22);
  }
  uint64_t v25 = *((int *)this + 26);
  uint64_t v26 = v19 + v25;
  uint64_t v27 = *((void *)this + 14);
  if (v27) {
    unsigned int v28 = (google::protobuf::ServiceDescriptorProto **)(v27 + 8);
  }
  else {
    unsigned int v28 = 0;
  }
  if (v25)
  {
    uint64_t v29 = 8 * v25;
    do
    {
      uint64_t v30 = *v28++;
      unint64_t v31 = google::protobuf::ServiceDescriptorProto::ByteSizeLong(v30, a2, a3, a4);
      v26 += (uint64_t)v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6);
      v29 -= 8;
    }
    while (v29);
  }
  uint64_t v32 = *((int *)this + 32);
  uint64_t v33 = v26 + v32;
  uint64_t v34 = *((void *)this + 17);
  if (v34) {
    unsigned int v35 = (google::protobuf::FieldDescriptorProto **)(v34 + 8);
  }
  else {
    unsigned int v35 = 0;
  }
  if (v32)
  {
    uint64_t v36 = 8 * v32;
    do
    {
      int v37 = *v35++;
      std::string v38 = google::protobuf::FieldDescriptorProto::ByteSizeLong(v37, a2, a3, a4);
      v33 += (uint64_t)v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6);
      v36 -= 8;
    }
    while (v36);
  }
  uint64_t v39 = google::protobuf::internal::WireFormatLite::Int32Size((unsigned int *)this + 36);
  uint64_t v40 = *((unsigned int *)this + 36);
  unsigned int v44 = (const InternalMetadata *)(v39
                                 + google::protobuf::internal::WireFormatLite::Int32Size((unsigned int *)this + 40)
                                 + *((unsigned int *)this + 40)
                                 + v33
                                 + v40);
  int v45 = *((_DWORD *)this + 4);
  if ((v45 & 0x1F) == 0) {
    goto LABEL_39;
  }
  if (v45)
  {
    unint64_t v48 = *((void *)this + 22) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v49 = *(unsigned __int8 *)(v48 + 23);
    uint64_t v50 = *(void *)(v48 + 8);
    if ((v49 & 0x80u) == 0) {
      uint64_t v50 = v49;
    }
    unsigned int v44 = (const InternalMetadata *)((char *)v44 + v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v45 & 2) == 0)
    {
LABEL_35:
      if ((v45 & 4) == 0) {
        goto LABEL_36;
      }
LABEL_47:
      unint64_t v54 = *((void *)this + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v55 = *(unsigned __int8 *)(v54 + 23);
      uint64_t v56 = *(void *)(v54 + 8);
      if ((v55 & 0x80u) == 0) {
        uint64_t v56 = v55;
      }
      unsigned int v44 = (const InternalMetadata *)((char *)v44 + v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6) + 1);
      if ((v45 & 8) == 0)
      {
LABEL_37:
        if ((v45 & 0x10) == 0) {
          goto LABEL_39;
        }
        goto LABEL_38;
      }
      goto LABEL_50;
    }
  }
  else if ((v45 & 2) == 0)
  {
    goto LABEL_35;
  }
  unint64_t v51 = *((void *)this + 23) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v52 = *(unsigned __int8 *)(v51 + 23);
  uint64_t v53 = *(void *)(v51 + 8);
  if ((v52 & 0x80u) == 0) {
    uint64_t v53 = v52;
  }
  unsigned int v44 = (const InternalMetadata *)((char *)v44 + v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v45 & 4) != 0) {
    goto LABEL_47;
  }
LABEL_36:
  if ((v45 & 8) == 0) {
    goto LABEL_37;
  }
LABEL_50:
  uint64_t v57 = google::protobuf::FileOptions::ByteSizeLong(*((google::protobuf::FileOptions **)this + 25));
  unsigned int v44 = (const InternalMetadata *)((char *)&v57->var0
                                 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6)
                                 + (void)v44
                                 + 1);
  if ((v45 & 0x10) != 0)
  {
LABEL_38:
    unsigned int v46 = google::protobuf::SourceCodeInfo::ByteSizeLong(*((google::protobuf::SourceCodeInfo **)this + 26), v41, v42, v43);
    unsigned int v44 = (const InternalMetadata *)((char *)&v46->var0
                                   + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6)
                                   + (void)v44
                                   + 1);
  }
LABEL_39:
  if (*((unsigned char *)this + 8))
  {
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FileDescriptorProto *)((char *)this + 8), v44, (_DWORD *)this + 5, v43);
  }
  else
  {
    *((_DWORD *)this + 5) = v44;
    return v44;
  }
}

void google::protobuf::FileDescriptorProto::MergeFrom(google::protobuf::FileDescriptorProto *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::FileDescriptorProto::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::FileDescriptorProto::MergeFrom(google::protobuf::FileDescriptorProto *this, const google::protobuf::FileDescriptorProto *a2)
{
  uint64_t v4 = (void *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if (v6)
  {
    uint64_t v7 = (const std::string **)(*((void *)a2 + 5) + 8);
    uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)this + 24), *((_DWORD *)a2 + 8));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)this + 1, (std::string **)v8, v7, v6, **((_DWORD **)this + 5) - *((_DWORD *)this + 8));
    signed int v9 = *((_DWORD *)this + 8) + v6;
    *((_DWORD *)this + 8) = v9;
    uint64_t v10 = (signed int *)*((void *)this + 5);
    if (*v10 < v9) {
      signed int *v10 = v9;
    }
  }
  unsigned int v11 = *((_DWORD *)a2 + 14);
  if (v11)
  {
    uint64_t v12 = (google::protobuf::DescriptorProto **)(*((void *)a2 + 8) + 8);
    uint64_t v13 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)this + 48), *((_DWORD *)a2 + 14));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 6, (google::protobuf::DescriptorProto **)v13, v12, v11, **((_DWORD **)this + 8) - *((_DWORD *)this + 14));
    signed int v14 = *((_DWORD *)this + 14) + v11;
    *((_DWORD *)this + 14) = v14;
    uint64_t v15 = (signed int *)*((void *)this + 8);
    if (*v15 < v14) {
      signed int *v15 = v14;
    }
  }
  unsigned int v16 = *((_DWORD *)a2 + 20);
  if (v16)
  {
    char v17 = (google::protobuf::EnumDescriptorProto **)(*((void *)a2 + 11) + 8);
    uint64_t v18 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)this + 72), *((_DWORD *)a2 + 20));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 9, (google::protobuf::EnumDescriptorProto **)v18, v17, v16, **((_DWORD **)this + 11) - *((_DWORD *)this + 20));
    signed int v19 = *((_DWORD *)this + 20) + v16;
    *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v19;
    uint64_t v20 = (signed int *)*((void *)this + 11);
    if (*v20 < v19) {
      signed int *v20 = v19;
    }
  }
  int v21 = *((_DWORD *)a2 + 26);
  if (v21)
  {
    unint64_t v67 = v4;
    uint64_t v69 = *((void *)a2 + 14);
    unint64_t v68 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)this + 96), v21);
    uint64_t v22 = **((int **)this + 14);
    uint64_t v23 = *((int *)this + 26);
    int v24 = v22 - v23;
    if ((int)v22 - (int)v23 >= v21) {
      uint64_t v25 = v21;
    }
    else {
      uint64_t v25 = v24;
    }
    if ((int)v25 >= 1)
    {
      uint64_t v26 = (google::protobuf::ServiceDescriptorProto **)v68;
      uint64_t v27 = (google::protobuf::ServiceDescriptorProto **)(v69 + 8);
      do
      {
        uint64_t v29 = *v27++;
        unsigned int v28 = v29;
        uint64_t v30 = *v26++;
        google::protobuf::internal::GenericTypeHandler<google::protobuf::ServiceDescriptorProto>::Merge(v28, v30);
        --v25;
      }
      while (v25);
    }
    if (v24 < v21)
    {
      unint64_t v31 = (google::protobuf::internal::ArenaImpl *)*((void *)this + 12);
      int v32 = v23 + v21 - v22;
      uint64_t v33 = 8 * v22 - 8 * v23;
      uint64_t v34 = (char **)((char *)v68 + v33);
      unsigned int v35 = (google::protobuf::ServiceDescriptorProto **)(v33 + v69 + 8);
      do
      {
        uint64_t v36 = *v35++;
        int v37 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(v31);
        google::protobuf::internal::GenericTypeHandler<google::protobuf::ServiceDescriptorProto>::Merge(v36, (google::protobuf::ServiceDescriptorProto *)v37);
        *v34++ = v37;
        --v32;
      }
      while (v32);
    }
    int v38 = *((_DWORD *)this + 26) + v21;
    *((_DWORD *)this + 26) = v38;
    uint64_t v39 = (int *)*((void *)this + 14);
    uint64_t v4 = v67;
    if (*v39 < v38) {
      *uint64_t v39 = v38;
    }
  }
  unsigned int v40 = *((_DWORD *)a2 + 32);
  if (v40)
  {
    uint64_t v41 = (google::protobuf::FieldDescriptorProto **)(*((void *)a2 + 17) + 8);
    uint64_t v42 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)this + 120), *((_DWORD *)a2 + 32));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 15, (google::protobuf::FieldDescriptorProto **)v42, v41, v40, **((_DWORD **)this + 17) - *((_DWORD *)this + 32));
    signed int v43 = *((_DWORD *)this + 32) + v40;
    *((_DWORD *)this + ++*(_DWORD *)(this + 32) = v43;
    unsigned int v44 = (signed int *)*((void *)this + 17);
    if (*v44 < v43) {
      *unsigned int v44 = v43;
    }
  }
  int v45 = *((_DWORD *)a2 + 36);
  if (v45)
  {
    uint64_t v46 = *((int *)this + 36);
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)this + 36, v46 + v45);
    uint64_t v47 = *((void *)this + 19);
    *((_DWORD *)this + 36) += *((_DWORD *)a2 + 36);
    memcpy((void *)(v47 + 4 * v46), *((const void **)a2 + 19), 4 * *((int *)a2 + 36));
  }
  int v48 = *((_DWORD *)a2 + 40);
  if (v48)
  {
    uint64_t v49 = *((int *)this + 40);
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)this + 40, v49 + v48);
    uint64_t v50 = *((void *)this + 21);
    *((_DWORD *)this + 40) += *((_DWORD *)a2 + 40);
    memcpy((void *)(v50 + 4 * v49), *((const void **)a2 + 21), 4 * *((int *)a2 + 40));
  }
  int v51 = *((_DWORD *)a2 + 4);
  if ((v51 & 0x1F) == 0) {
    return;
  }
  if (v51)
  {
    uint64_t v52 = (long long *)(*((void *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL);
    *((_DWORD *)this + 4) |= 1u;
    uint64_t v53 = *((void *)this + 1);
    unint64_t v54 = (google::protobuf::internal::ArenaImpl *)(v53 & 0xFFFFFFFFFFFFFFFELL);
    if (v53) {
      unint64_t v54 = *(google::protobuf::internal::ArenaImpl **)v54;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 22, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v52, v54);
    if ((v51 & 2) == 0)
    {
LABEL_34:
      if ((v51 & 4) == 0) {
        goto LABEL_35;
      }
LABEL_44:
      uint64_t v58 = (long long *)(*((void *)a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *((_DWORD *)this + 4) |= 4u;
      uint64_t v59 = *((void *)this + 1);
      unint64_t v60 = (google::protobuf::internal::ArenaImpl *)(v59 & 0xFFFFFFFFFFFFFFFELL);
      if (v59) {
        unint64_t v60 = *(google::protobuf::internal::ArenaImpl **)v60;
      }
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 24, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v58, v60);
      if ((v51 & 8) == 0)
      {
LABEL_36:
        if ((v51 & 0x10) == 0) {
          return;
        }
        goto LABEL_55;
      }
      goto LABEL_47;
    }
  }
  else if ((v51 & 2) == 0)
  {
    goto LABEL_34;
  }
  uint64_t v55 = (long long *)(*((void *)a2 + 23) & 0xFFFFFFFFFFFFFFFELL);
  *((_DWORD *)this + 4) |= 2u;
  uint64_t v56 = *((void *)this + 1);
  uint64_t v57 = (google::protobuf::internal::ArenaImpl *)(v56 & 0xFFFFFFFFFFFFFFFELL);
  if (v56) {
    uint64_t v57 = *(google::protobuf::internal::ArenaImpl **)v57;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 23, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v55, v57);
  if ((v51 & 4) != 0) {
    goto LABEL_44;
  }
LABEL_35:
  if ((v51 & 8) == 0) {
    goto LABEL_36;
  }
LABEL_47:
  *((_DWORD *)this + 4) |= 8u;
  unint64_t v61 = (char *)*((void *)this + 25);
  if (!v61)
  {
    unint64_t v62 = (google::protobuf::internal::ArenaImpl *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
    if (*v4) {
      unint64_t v62 = *(google::protobuf::internal::ArenaImpl **)v62;
    }
    unint64_t v61 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>(v62);
    *((void *)this + 25) = v61;
  }
  if (*((void *)a2 + 25)) {
    uint64_t v63 = (const google::protobuf::FileOptions *)*((void *)a2 + 25);
  }
  else {
    uint64_t v63 = (const google::protobuf::FileOptions *)&google::protobuf::_FileOptions_default_instance_;
  }
  google::protobuf::FileOptions::MergeFrom((google::protobuf::FileOptions *)v61, v63);
  if ((v51 & 0x10) != 0)
  {
LABEL_55:
    *((_DWORD *)this + 4) |= 0x10u;
    char v64 = (char *)*((void *)this + 26);
    if (!v64)
    {
      unint64_t v65 = (google::protobuf::internal::ArenaImpl *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        unint64_t v65 = *(google::protobuf::internal::ArenaImpl **)v65;
      }
      char v64 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo>(v65);
      *((void *)this + 26) = v64;
    }
    if (*((void *)a2 + 26)) {
      unint64_t v66 = (const google::protobuf::SourceCodeInfo *)*((void *)a2 + 26);
    }
    else {
      unint64_t v66 = (const google::protobuf::SourceCodeInfo *)&google::protobuf::_SourceCodeInfo_default_instance_;
    }
    google::protobuf::SourceCodeInfo::MergeFrom((google::protobuf::SourceCodeInfo *)v64, v66);
  }
}

void google::protobuf::FileOptions::MergeFrom(google::protobuf::FileOptions *this, const google::protobuf::FileOptions *a2)
{
  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::FileOptions *)((char *)this + 16), (const google::protobuf::FileOptions *)((char *)a2 + 16));
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 14);
  if (v5)
  {
    unsigned int v6 = (google::protobuf::UninterpretedOption **)(*((void *)a2 + 8) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileOptions *)((char *)this + 48), *((_DWORD *)a2 + 14));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 6, (google::protobuf::UninterpretedOption **)v7, v6, v5, **((_DWORD **)this + 8) - *((_DWORD *)this + 14));
    signed int v8 = *((_DWORD *)this + 14) + v5;
    *((_DWORD *)this + 14) = v8;
    signed int v9 = (signed int *)*((void *)this + 8);
    if (*v9 < v8) {
      signed int *v9 = v8;
    }
  }
  int v10 = *((_DWORD *)a2 + 10);
  if (!(_BYTE)v10) {
    goto LABEL_40;
  }
  if (v10)
  {
    unsigned int v11 = (long long *)(*((void *)a2 + 9) & 0xFFFFFFFFFFFFFFFELL);
    *((_DWORD *)this + 10) |= 1u;
    uint64_t v12 = *((void *)this + 1);
    uint64_t v13 = (google::protobuf::internal::ArenaImpl *)(v12 & 0xFFFFFFFFFFFFFFFELL);
    if (v12) {
      uint64_t v13 = *(google::protobuf::internal::ArenaImpl **)v13;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 9, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v11, v13);
    if ((v10 & 2) == 0)
    {
LABEL_9:
      if ((v10 & 4) == 0) {
        goto LABEL_10;
      }
      goto LABEL_22;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_9;
  }
  signed int v14 = (long long *)(*((void *)a2 + 10) & 0xFFFFFFFFFFFFFFFELL);
  *((_DWORD *)this + 10) |= 2u;
  uint64_t v15 = *((void *)this + 1);
  unsigned int v16 = (google::protobuf::internal::ArenaImpl *)(v15 & 0xFFFFFFFFFFFFFFFELL);
  if (v15) {
    unsigned int v16 = *(google::protobuf::internal::ArenaImpl **)v16;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 10, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v14, v16);
  if ((v10 & 4) == 0)
  {
LABEL_10:
    if ((v10 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_22:
  char v17 = (long long *)(*((void *)a2 + 11) & 0xFFFFFFFFFFFFFFFELL);
  *((_DWORD *)this + 10) |= 4u;
  uint64_t v18 = *((void *)this + 1);
  signed int v19 = (google::protobuf::internal::ArenaImpl *)(v18 & 0xFFFFFFFFFFFFFFFELL);
  if (v18) {
    signed int v19 = *(google::protobuf::internal::ArenaImpl **)v19;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 11, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v17, v19);
  if ((v10 & 8) == 0)
  {
LABEL_11:
    if ((v10 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_25:
  uint64_t v20 = (long long *)(*((void *)a2 + 12) & 0xFFFFFFFFFFFFFFFELL);
  *((_DWORD *)this + 10) |= 8u;
  uint64_t v21 = *((void *)this + 1);
  uint64_t v22 = (google::protobuf::internal::ArenaImpl *)(v21 & 0xFFFFFFFFFFFFFFFELL);
  if (v21) {
    uint64_t v22 = *(google::protobuf::internal::ArenaImpl **)v22;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 12, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v20, v22);
  if ((v10 & 0x10) == 0)
  {
LABEL_12:
    if ((v10 & 0x20) == 0) {
      goto LABEL_13;
    }
LABEL_31:
    uint64_t v26 = (long long *)(*((void *)a2 + 14) & 0xFFFFFFFFFFFFFFFELL);
    *((_DWORD *)this + 10) |= 0x20u;
    uint64_t v27 = *((void *)this + 1);
    unsigned int v28 = (google::protobuf::internal::ArenaImpl *)(v27 & 0xFFFFFFFFFFFFFFFELL);
    if (v27) {
      unsigned int v28 = *(google::protobuf::internal::ArenaImpl **)v28;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 14, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v26, v28);
    if ((v10 & 0x40) == 0)
    {
LABEL_14:
      if ((v10 & 0x80) == 0) {
        goto LABEL_40;
      }
      goto LABEL_37;
    }
    goto LABEL_34;
  }
LABEL_28:
  uint64_t v23 = (long long *)(*((void *)a2 + 13) & 0xFFFFFFFFFFFFFFFELL);
  *((_DWORD *)this + 10) |= 0x10u;
  uint64_t v24 = *((void *)this + 1);
  uint64_t v25 = (google::protobuf::internal::ArenaImpl *)(v24 & 0xFFFFFFFFFFFFFFFELL);
  if (v24) {
    uint64_t v25 = *(google::protobuf::internal::ArenaImpl **)v25;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 13, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v23, v25);
  if ((v10 & 0x20) != 0) {
    goto LABEL_31;
  }
LABEL_13:
  if ((v10 & 0x40) == 0) {
    goto LABEL_14;
  }
LABEL_34:
  uint64_t v29 = (long long *)(*((void *)a2 + 15) & 0xFFFFFFFFFFFFFFFELL);
  *((_DWORD *)this + 10) |= 0x40u;
  uint64_t v30 = *((void *)this + 1);
  unint64_t v31 = (google::protobuf::internal::ArenaImpl *)(v30 & 0xFFFFFFFFFFFFFFFELL);
  if (v30) {
    unint64_t v31 = *(google::protobuf::internal::ArenaImpl **)v31;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 15, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v29, v31);
  if ((v10 & 0x80) != 0)
  {
LABEL_37:
    int v32 = (long long *)(*((void *)a2 + 16) & 0xFFFFFFFFFFFFFFFELL);
    *((_DWORD *)this + 10) |= 0x80u;
    uint64_t v33 = *((void *)this + 1);
    uint64_t v34 = (google::protobuf::internal::ArenaImpl *)(v33 & 0xFFFFFFFFFFFFFFFELL);
    if (v33) {
      uint64_t v34 = *(google::protobuf::internal::ArenaImpl **)v34;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 16, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v32, v34);
  }
LABEL_40:
  if ((v10 & 0xFF00) == 0) {
    goto LABEL_51;
  }
  if ((v10 & 0x100) != 0)
  {
    unsigned int v35 = (long long *)(*((void *)a2 + 17) & 0xFFFFFFFFFFFFFFFELL);
    *((_DWORD *)this + 10) |= 0x100u;
    uint64_t v36 = *((void *)this + 1);
    int v37 = (google::protobuf::internal::ArenaImpl *)(v36 & 0xFFFFFFFFFFFFFFFELL);
    if (v36) {
      int v37 = *(google::protobuf::internal::ArenaImpl **)v37;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 17, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v35, v37);
    if ((v10 & 0x200) == 0)
    {
LABEL_43:
      if ((v10 & 0x400) == 0) {
        goto LABEL_44;
      }
      goto LABEL_65;
    }
  }
  else if ((v10 & 0x200) == 0)
  {
    goto LABEL_43;
  }
  int v38 = (long long *)(*((void *)a2 + 18) & 0xFFFFFFFFFFFFFFFELL);
  *((_DWORD *)this + 10) |= 0x200u;
  uint64_t v39 = *((void *)this + 1);
  unsigned int v40 = (google::protobuf::internal::ArenaImpl *)(v39 & 0xFFFFFFFFFFFFFFFELL);
  if (v39) {
    unsigned int v40 = *(google::protobuf::internal::ArenaImpl **)v40;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 18, (std::string *)&google::protobuf::internal::fixed_address_empty_string, v38, v40);
  if ((v10 & 0x400) == 0)
  {
LABEL_44:
    if ((v10 & 0x800) == 0) {
      goto LABEL_45;
    }
    goto LABEL_66;
  }
LABEL_65:
  *((unsigned char *)this + 15google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = *((unsigned char *)a2 + 152);
  if ((v10 & 0x800) == 0)
  {
LABEL_45:
    if ((v10 & 0x1000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_67;
  }
LABEL_66:
  *((unsigned char *)this + 153) = *((unsigned char *)a2 + 153);
  if ((v10 & 0x1000) == 0)
  {
LABEL_46:
    if ((v10 & 0x2000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_68;
  }
LABEL_67:
  *((unsigned char *)this + 154) = *((unsigned char *)a2 + 154);
  if ((v10 & 0x2000) == 0)
  {
LABEL_47:
    if ((v10 & 0x4000) == 0) {
      goto LABEL_48;
    }
LABEL_69:
    *((unsigned char *)this + 156) = *((unsigned char *)a2 + 156);
    if ((v10 & 0x8000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_49;
  }
LABEL_68:
  *((unsigned char *)this + 155) = *((unsigned char *)a2 + 155);
  if ((v10 & 0x4000) != 0) {
    goto LABEL_69;
  }
LABEL_48:
  if ((v10 & 0x8000) != 0) {
LABEL_49:
  }
    *((unsigned char *)this + 157) = *((unsigned char *)a2 + 157);
LABEL_50:
  *((_DWORD *)this + 10) |= v10;
LABEL_51:
  if ((v10 & 0xF0000) == 0) {
    return;
  }
  if ((v10 & 0x10000) != 0)
  {
    *((unsigned char *)this + 158) = *((unsigned char *)a2 + 158);
    if ((v10 & 0x20000) == 0)
    {
LABEL_54:
      if ((v10 & 0x40000) == 0) {
        goto LABEL_55;
      }
LABEL_73:
      *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = *((_DWORD *)a2 + 40);
      if ((v10 & 0x80000) == 0) {
        goto LABEL_57;
      }
      goto LABEL_56;
    }
  }
  else if ((v10 & 0x20000) == 0)
  {
    goto LABEL_54;
  }
  *((unsigned char *)this + 159) = *((unsigned char *)a2 + 159);
  if ((v10 & 0x40000) != 0) {
    goto LABEL_73;
  }
LABEL_55:
  if ((v10 & 0x80000) != 0) {
LABEL_56:
  }
    *((unsigned char *)this + 164) = *((unsigned char *)a2 + 164);
LABEL_57:
  *((_DWORD *)this + 10) |= v10;
}

void google::protobuf::SourceCodeInfo::MergeFrom(google::protobuf::SourceCodeInfo *this, const google::protobuf::SourceCodeInfo *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    unsigned int v6 = (const google::protobuf::SourceCodeInfo_Location **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::SourceCodeInfo *)((char *)this + 16), v5);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 2, (google::protobuf::SourceCodeInfo_Location **)v7, v6, v5, **((_DWORD **)this + 4) - *((_DWORD *)this + 6));
    signed int v8 = *((_DWORD *)this + 6) + v5;
    *((_DWORD *)this + 6) = v8;
    signed int v9 = (signed int *)*((void *)this + 4);
    if (*v9 < v8) {
      signed int *v9 = v8;
    }
  }
}

void google::protobuf::FileDescriptorProto::CopyFrom(google::protobuf::FileDescriptorProto *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::FileDescriptorProto::Clear(this);
    google::protobuf::FileDescriptorProto::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::FileDescriptorProto::IsInitialized(google::protobuf::FileDescriptorProto *this)
{
  uint64_t v2 = *((unsigned int *)this + 14);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char IsInitialized = google::protobuf::DescriptorProto::IsInitialized(*(google::protobuf::DescriptorProto **)(*((void *)this + 8) + 8 * v2));
    uint64_t v2 = v3;
    if ((IsInitialized & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *((unsigned int *)this + 20);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = google::protobuf::EnumDescriptorProto::IsInitialized(*(google::protobuf::EnumDescriptorProto **)(*((void *)this + 11) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v8 = *((unsigned int *)this + 26);
  while ((int)v8 >= 1)
  {
    uint64_t v9 = v8 - 1;
    char v10 = google::protobuf::ServiceDescriptorProto::IsInitialized(*(google::protobuf::ServiceDescriptorProto **)(*((void *)this + 14) + 8 * v8));
    uint64_t v8 = v9;
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v11 = *((unsigned int *)this + 32);
  while ((int)v11 >= 1)
  {
    uint64_t v12 = v11 - 1;
    char v13 = google::protobuf::FieldDescriptorProto::IsInitialized(*(google::protobuf::FieldDescriptorProto **)(*((void *)this + 17) + 8 * v11));
    uint64_t v11 = v12;
    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  if ((*((unsigned char *)this + 16) & 8) == 0) {
    return 1;
  }
  uint64_t v15 = *((void *)this + 25);
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v15 + 16));
  if (result)
  {
    uint64_t result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v15 + 48);
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t google::protobuf::FileOptions::IsInitialized(google::protobuf::FileOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::FileOptions *)((char *)this + 16));
  if (result)
  {
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 48);
  }
  return result;
}

uint64_t google::protobuf::FileDescriptorProto::GetMetadata(google::protobuf::FileDescriptorProto *this)
{
  return off_1E910DC90[2];
}

void google::protobuf::DescriptorProto_ExtensionRange::~DescriptorProto_ExtensionRange(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  if (this != (google::protobuf::DescriptorProto_ExtensionRange *)&google::protobuf::_DescriptorProto_ExtensionRange_default_instance_)
  {
    uint64_t v2 = (google::protobuf::ExtensionRangeOptions *)*((void *)this + 3);
    if (v2)
    {
      google::protobuf::ExtensionRangeOptions::~ExtensionRangeOptions(v2);
      MEMORY[0x18C11F580]();
    }
  }
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  google::protobuf::DescriptorProto_ExtensionRange::~DescriptorProto_ExtensionRange(this);

  JUMPOUT(0x18C11F580);
}

uint64_t google::protobuf::DescriptorProto_ExtensionRange::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

char *google::protobuf::DescriptorProto_ExtensionRange::Clear(char *this)
{
  uint64_t v1 = (uint64_t)this;
  int v2 = *((_DWORD *)this + 4);
  if (v2) {
    this = google::protobuf::ExtensionRangeOptions::Clear(*((google::protobuf::ExtensionRangeOptions **)this + 3));
  }
  if ((v2 & 6) != 0) {
    *(void *)(v1 + ++*(_DWORD *)(this + 32) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((unint64_t *)v3);
  }
  return this;
}

char *google::protobuf::ExtensionRangeOptions::Clear(google::protobuf::ExtensionRangeOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::Clear((unsigned char *)this + 16);
  uint64_t v3 = *((unsigned int *)this + 12);
  if ((int)v3 >= 1)
  {
    char v4 = (char **)(*((void *)this + 7) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 1google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = 0;
  }
  char v7 = *((unsigned char *)this + 8);
  uint64_t v6 = (unint64_t *)((char *)this + 8);
  if (v7)
  {
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>(v6);
  }
  return result;
}

google::protobuf::internal *google::protobuf::DescriptorProto_ExtensionRange::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v34 = a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v34, *((_DWORD *)this + 23)) & 1) == 0)
  {
    uint64_t v8 = (void *)(a1 + 8);
    do
    {
      uint64_t v6 = (google::protobuf::internal *)((char *)v34 + 1);
      unsigned int v9 = *(unsigned __int8 *)v34;
      if (*(char *)v34 < 0)
      {
        unsigned int v9 = v9 + (*(unsigned __int8 *)v6 << 7) - 128;
        if (*(char *)v6 < 0)
        {
          uint64_t v6 = (google::protobuf::internal *)((char *)v34 + 3);
          uint64_t v24 = -21;
          while (1)
          {
            v9 += (*((unsigned __int8 *)v6 - 1) - 1) << (v24 + 35);
            if ((*((char *)v6 - 1) & 0x80000000) == 0) {
              break;
            }
            uint64_t v6 = (google::protobuf::internal *)((char *)v6 + 1);
            v24 += 7;
            if (!v24) {
              goto LABEL_59;
            }
          }
        }
        else
        {
          uint64_t v6 = (google::protobuf::internal *)((char *)v34 + 2);
        }
      }
      uint64_t v34 = v6;
      unsigned int v10 = v9 >> 3;
      if (v9 >> 3 == 3)
      {
        if (v9 == 26)
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          signed int v14 = *(char **)(a1 + 24);
          if (!v14)
          {
            uint64_t v15 = (google::protobuf::internal::ArenaImpl *)(*v8 & 0xFFFFFFFFFFFFFFFELL);
            if (*v8) {
              uint64_t v15 = *(google::protobuf::internal::ArenaImpl **)v15;
            }
            signed int v14 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(v15);
            *(void *)(a1 + 24) = v14;
            uint64_t v6 = v34;
          }
          unsigned int v16 = (const char *)*(unsigned __int8 *)v6;
          if (*(char *)v6 < 0)
          {
            SizeFallbacint k = google::protobuf::internal::ReadSizeFallback(v6, v16);
            if (!SizeFallback) {
              goto LABEL_59;
            }
            char v17 = (google::protobuf::internal *)SizeFallback;
          }
          else
          {
            char v17 = (google::protobuf::internal *)((char *)v6 + 1);
          }
          uint64_t v26 = *((void *)this + 1);
          int v27 = v16 + v17 - v26;
          *(void *)this = v26 + (v27 & (v27 >> 31));
          int v28 = *((_DWORD *)this + 7);
          *((_DWORD *)this + 7) = v27;
          LODWORD(v26) = *((_DWORD *)this + 22);
          BOOL v29 = __OFSUB__(v26, 1);
          LODWORD(v26) = v26 - 1;
          *((_DWORD *)this + 2google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = v26;
          if ((int)v26 < 0 != v29
            || (uint64_t v30 = google::protobuf::ExtensionRangeOptions::_InternalParse((uint64_t)v14, v17, this)) == 0
            || (++*((_DWORD *)this + 22), *((_DWORD *)this + 20)))
          {
LABEL_59:
            uint64_t v6 = 0;
            goto LABEL_3;
          }
          int v31 = *((_DWORD *)this + 7) + v28 - v27;
          *((_DWORD *)this + 7) = v31;
          *(void *)this = *((void *)this + 1) + (v31 & (v31 >> 31));
          uint64_t v34 = v30;
          continue;
        }
      }
      else if (v10 == 2)
      {
        if (v9 == 16)
        {
          v5 |= 4u;
          signed int v19 = (google::protobuf::internal *)((char *)v6 + 1);
          LODWORD(v18) = *(unsigned __int8 *)v6;
          if ((v18 & 0x80) != 0)
          {
            int v20 = *(char *)v19;
            uint64_t v18 = v18 + (v20 << 7) - 128;
            if (v20 < 0)
            {
              signed int v19 = (google::protobuf::internal *)((char *)v6 + 3);
              uint64_t v32 = 14;
              while (1)
              {
                v18 += (*((unsigned __int8 *)v19 - 1) - 1) << v32;
                if ((*((char *)v19 - 1) & 0x80000000) == 0) {
                  break;
                }
                signed int v19 = (google::protobuf::internal *)((char *)v19 + 1);
                v32 += 7;
                if (v32 == 70)
                {
                  uint64_t v6 = 0;
                  *(_DWORD *)(a1 + 36) = 0;
                  goto LABEL_3;
                }
              }
            }
            else
            {
              signed int v19 = (google::protobuf::internal *)((char *)v6 + 2);
            }
          }
          uint64_t v34 = v19;
          *(_DWORD *)(a1 + 36) = v18;
          continue;
        }
      }
      else if (v10 == 1 && v9 == 8)
      {
        v5 |= 2u;
        uint64_t v22 = (google::protobuf::internal *)((char *)v6 + 1);
        LODWORD(v2google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = *(unsigned __int8 *)v6;
        if ((v21 & 0x80) != 0)
        {
          int v23 = *(char *)v22;
          uint64_t v21 = v21 + (v23 << 7) - 128;
          if (v23 < 0)
          {
            uint64_t v22 = (google::protobuf::internal *)((char *)v6 + 3);
            uint64_t v33 = 14;
            while (1)
            {
              v21 += (*((unsigned __int8 *)v22 - 1) - 1) << v33;
              if ((*((char *)v22 - 1) & 0x80000000) == 0) {
                break;
              }
              uint64_t v22 = (google::protobuf::internal *)((char *)v22 + 1);
              v33 += 7;
              if (v33 == 70)
              {
                uint64_t v6 = 0;
                *(_DWORD *)(a1 + ++*(_DWORD *)(this + 32) = 0;
                goto LABEL_3;
              }
            }
          }
          else
          {
            uint64_t v22 = (google::protobuf::internal *)((char *)v6 + 2);
          }
        }
        uint64_t v34 = v22;
        *(_DWORD *)(a1 + ++*(_DWORD *)(this + 32) = v21;
        continue;
      }
      if (v9) {
        BOOL v12 = (v9 & 7) == 4;
      }
      else {
        BOOL v12 = 1;
      }
      if (v12)
      {
        *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v9 - 1;
        goto LABEL_3;
      }
      if (*v8)
      {
        char v13 = (char *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        char v13 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)(a1 + 8));
        uint64_t v6 = v34;
      }
      unsigned int v35 = (google::protobuf::UnknownFieldSet *)v13;
      uint64_t v34 = (google::protobuf::internal *)google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v9, &v35, (uint64_t *)v6);
      if (!v34) {
        goto LABEL_59;
      }
    }
    while (!google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v34, *((_DWORD *)this + 23)));
  }
  uint64_t v6 = v34;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return v6;
}

const google::protobuf::UnknownFieldSet *google::protobuf::DescriptorProto_ExtensionRange::_InternalSerialize(google::protobuf::DescriptorProto_ExtensionRange *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v7 = *((int *)this + 8);
    *a2 = 8;
    if (v7 > 0x7F)
    {
      a2[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      if (v7 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v8 | 0x80;
          unint64_t v9 = v8 >> 7;
          ++a2;
          unint64_t v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
        *(a2 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v9;
        if ((v6 & 4) != 0) {
          goto LABEL_16;
        }
      }
      else
      {
        a2[2] = v8;
        a2 += 3;
        if ((v6 & 4) != 0) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      a2[1] = v7;
      a2 += 2;
      if ((v6 & 4) != 0) {
        goto LABEL_16;
      }
    }
LABEL_3:
    if ((v6 & 1) == 0) {
      goto LABEL_37;
    }
    goto LABEL_27;
  }
  if ((v6 & 4) == 0) {
    goto LABEL_3;
  }
LABEL_16:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unint64_t v11 = *((int *)this + 9);
  *a2 = 16;
  if (v11 > 0x7F)
  {
    a2[1] = v11 | 0x80;
    unint64_t v12 = v11 >> 7;
    if (v11 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v12 | 0x80;
        unint64_t v13 = v12 >> 7;
        ++a2;
        unint64_t v14 = v12 >> 14;
        v12 >>= 7;
      }
      while (v14);
      *(a2 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v13;
      if ((v6 & 1) == 0) {
        goto LABEL_37;
      }
    }
    else
    {
      a2[2] = v12;
      a2 += 3;
      if ((v6 & 1) == 0) {
        goto LABEL_37;
      }
    }
  }
  else
  {
    a2[1] = v11;
    a2 += 2;
    if ((v6 & 1) == 0) {
      goto LABEL_37;
    }
  }
LABEL_27:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  uint64_t v15 = (google::protobuf::ExtensionRangeOptions *)*((void *)this + 3);
  *a2 = 26;
  unsigned int v16 = *((_DWORD *)v15 + 16);
  if (v16 > 0x7F)
  {
    a2[1] = v16 | 0x80;
    unsigned int v18 = v16 >> 7;
    if (v16 >> 14)
    {
      char v17 = a2 + 3;
      do
      {
        *(v17 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v18 | 0x80;
        unsigned int v19 = v18 >> 7;
        ++v17;
        unsigned int v20 = v18 >> 14;
        v18 >>= 7;
      }
      while (v20);
      *(v17 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v19;
    }
    else
    {
      a2[2] = v18;
      char v17 = a2 + 3;
    }
  }
  else
  {
    a2[1] = v16;
    char v17 = a2 + 2;
  }
  a2 = (unsigned __int8 *)google::protobuf::ExtensionRangeOptions::_InternalSerialize(v15, v17, a3);
LABEL_37:
  uint64_t v21 = *((void *)this + 1);
  if ((v21 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v21 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

const InternalMetadata *google::protobuf::DescriptorProto_ExtensionRange::ByteSizeLong(google::protobuf::DescriptorProto_ExtensionRange *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  int v5 = *((_DWORD *)this + 4);
  if ((v5 & 7) == 0)
  {
    int v6 = 0;
    goto LABEL_16;
  }
  if (v5)
  {
    unint64_t v7 = google::protobuf::ExtensionRangeOptions::ByteSizeLong(*((google::protobuf::ExtensionRangeOptions **)this + 3));
    int v6 = (const InternalMetadata *)((char *)&v7->var0 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v5 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    int v6 = 0;
    if ((v5 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v8 = *((_DWORD *)this + 8);
  if (v8 < 0) {
    uint64_t v9 = 11;
  }
  else {
    uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  int v6 = (const InternalMetadata *)((char *)v6 + v9);
LABEL_11:
  if ((v5 & 4) != 0)
  {
    int v10 = *((_DWORD *)this + 9);
    if (v10 < 0) {
      uint64_t v11 = 11;
    }
    else {
      uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    int v6 = (const InternalMetadata *)((char *)v6 + v11);
  }
LABEL_16:
  if (*((unsigned char *)this + 8))
  {
    return (const InternalMetadata *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::DescriptorProto_ExtensionRange *)((char *)this + 8), v6, (_DWORD *)this + 5, a4);
  }
  else
  {
    *((_DWORD *)this + 5) = v6;
    return v6;
  }
}

void google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(google::protobuf::DescriptorProto_ExtensionRange *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(google::protobuf::DescriptorProto_ExtensionRange *this, const google::protobuf::DescriptorProto_ExtensionRange *a2)
{
  char v4 = (void *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 7) != 0)
  {
    if (v6)
    {
      *((_DWORD *)this + 4) |= 1u;
      unint64_t v7 = (char *)*((void *)this + 3);
      if (!v7)
      {
        int v8 = (google::protobuf::internal::ArenaImpl *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          int v8 = *(google::protobuf::internal::ArenaImpl **)v8;
        }
        unint64_t v7 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(v8);
        *((void *)this + 3) = v7;
      }
      if (*((void *)a2 + 3)) {
        uint64_t v9 = (const google::protobuf::ExtensionRangeOptions *)*((void *)a2 + 3);
      }
      else {
        uint64_t v9 = (const google::protobuf::ExtensionRangeOptions *)&google::protobuf::_ExtensionRangeOptions_default_instance_;
      }
      google::protobuf::ExtensionRangeOptions::MergeFrom((google::protobuf::ExtensionRangeOptions *)v7, v9);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0)
        {
LABEL_8:
          *((_DWORD *)this + 4) |= v6;
          return;
        }
LABEL_7:
        *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
        goto LABEL_8;
      }
    }
    else if ((v6 & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    if ((v6 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
}

void google::protobuf::ExtensionRangeOptions::MergeFrom(google::protobuf::ExtensionRangeOptions *this, const google::protobuf::ExtensionRangeOptions *a2)
{
  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::ExtensionRangeOptions *)((char *)this + 16), (const google::protobuf::ExtensionRangeOptions *)((char *)a2 + 16));
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 12);
  if (v5)
  {
    int v6 = (google::protobuf::UninterpretedOption **)(*((void *)a2 + 7) + 8);
    unint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::ExtensionRangeOptions *)((char *)this + 40), v5);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((google::protobuf::internal::ArenaImpl **)this + 5, (google::protobuf::UninterpretedOption **)v7, v6, v5, **((_DWORD **)this + 7) - *((_DWORD *)this + 12));
    signed int v8 = *((_DWORD *)this + 12) + v5;
    *((_DWORD *)this + 1google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = v8;
    uint64_t v9 = (signed int *)*((void *)this + 7);
    if (*v9 < v8) {
      signed int *v9 = v8;
    }
  }
}

void google::protobuf::DescriptorProto_ExtensionRange::CopyFrom(google::protobuf::DescriptorProto_ExtensionRange *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::DescriptorProto_ExtensionRange::Clear((char *)this);
    google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::DescriptorProto_ExtensionRange::IsInitialized(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  if ((*((unsigned char *)this + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v1 = *((void *)this + 3);
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v1 + 16));
  if (result)
  {
    uint64_t result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v1 + 40);
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t google::protobuf::ExtensionRangeOptions::IsInitialized(google::protobuf::ExtensionRangeOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::ExtensionRangeOptions *)((char *)this + 16));
  if (result)
  {
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 40);
  }
  return result;
}

uint64_t google::protobuf::DescriptorProto_ExtensionRange::GetMetadata(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  return off_1E910DC90[4];
}

void google::protobuf::DescriptorProto_ReservedRange::~DescriptorProto_ReservedRange(google::protobuf::DescriptorProto_ReservedRange *this)
{
}

{
  uint64_t vars8;

  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);

  JUMPOUT(0x18C11F580);
}

uint64_t google::protobuf::DescriptorProto_ReservedRange::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

char *google::protobuf::DescriptorProto_ReservedRange::Clear(google::protobuf::DescriptorProto_ReservedRange *this)
{
  if ((*((unsigned char *)this + 16) & 3) != 0) {
    *((void *)this + 3) = 0;
  }
  char v2 = *((unsigned char *)this + 8);
  uint64_t result = (char *)this + 8;
  *((_DWORD *)result + google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = 0;
  if (v2) {
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((unint64_t *)result);
  }
  return result;
}

char *google::protobuf::DescriptorProto_ReservedRange::_InternalParse(uint64_t a1, const char *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v22 = (char *)a2;
  int v5 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v22, *((_DWORD *)this + 23)) & 1) == 0)
  {
    signed int v8 = (void *)(a1 + 8);
    do
    {
      int v6 = v22 + 1;
      unsigned int v9 = *v22;
      if (*v22 < 0)
      {
        unsigned int v9 = v9 + (*v6 << 7) - 128;
        if (*v6 < 0)
        {
          int v6 = v22 + 3;
          uint64_t v19 = -21;
          while (1)
          {
            v9 += (*(v6 - 1) - 1) << (v19 + 35);
            if ((*(v6 - 1) & 0x80000000) == 0) {
              break;
            }
            ++v6;
            v19 += 7;
            if (!v19) {
              goto LABEL_46;
            }
          }
        }
        else
        {
          int v6 = v22 + 2;
        }
      }
      uint64_t v22 = v6;
      if (v9 >> 3 == 2)
      {
        if (v9 == 16)
        {
          v5 |= 2u;
          unint64_t v14 = v6 + 1;
          LODWORD(v13) = *v6;
          if ((v13 & 0x80) != 0)
          {
            int v15 = *v14;
            uint64_t v13 = v13 + (v15 << 7) - 128;
            if (v15 < 0)
            {
              unint64_t v14 = v6 + 3;
              uint64_t v20 = 14;
              while (1)
              {
                v13 += (*((unsigned __int8 *)v14 - 1) - 1) << v20;
                if ((*(v14 - 1) & 0x80000000) == 0) {
                  break;
                }
                ++v14;
                v20 += 7;
                if (v20 == 70)
                {
                  int v6 = 0;
                  *(_DWORD *)(a1 + 28) = 0;
                  goto LABEL_3;
                }
              }
            }
            else
            {
              unint64_t v14 = v6 + 2;
            }
          }
          uint64_t v22 = (char *)v14;
          *(_DWORD *)(a1 + 28) = v13;
          continue;
        }
      }
      else if (v9 >> 3 == 1 && v9 == 8)
      {
        v5 |= 1u;
        char v17 = v6 + 1;
        LODWORD(v16) = *v6;
        if ((v16 & 0x80) != 0)
        {
          int v18 = *v17;
          uint64_t v16 = v16 + (v18 << 7) - 128;
          if (v18 < 0)
          {
            char v17 = v6 + 3;
            uint64_t v21 = 14;
            while (1)
            {
              v16 += (*((unsigned __int8 *)v17 - 1) - 1) << v21;
              if ((*(v17 - 1) & 0x80000000) == 0) {
                break;
              }
              ++v17;
              v21 += 7;
              if (v21 == 70)
              {
                int v6 = 0;
                *(_DWORD *)(a1 + 24) = 0;
                goto LABEL_3;
              }
            }
          }
          else
          {
            char v17 = v6 + 2;
          }
        }
        uint64_t v22 = (char *)v17;
        *(_DWORD *)(a1 + 24) = v16;
        continue;
      }
      if (v9) {
        BOOL v11 = (v9 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
        *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v9 - 1;
        goto LABEL_3;
      }
      if (*v8)
      {
        unint64_t v12 = (char *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        unint64_t v12 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)(a1 + 8));
        int v6 = v22;
      }
      int v23 = (google::protobuf::UnknownFieldSet *)v12;
      uint64_t v22 = (char *)google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v9, &v23, (uint64_t *)v6);
      if (!v22)
      {
LABEL_46:
        int v6 = 0;
        goto LABEL_3;
      }
    }
    while (!google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v22, *((_DWORD *)this + 23)));
  }
  int v6 = v22;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v5;
  return v6;
}

const google::protobuf::UnknownFieldSet *google::protobuf::DescriptorProto_ReservedRange::_InternalSerialize(google::protobuf::DescriptorProto_ReservedRange *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v7 = *((int *)this + 6);
    *a2 = 8;
    if (v7 <= 0x7F)
    {
      a2[1] = v7;
      a2 += 2;
      if ((v6 & 2) == 0) {
        goto LABEL_23;
      }
      goto LABEL_10;
    }
    a2[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    if (v7 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v8 | 0x80;
        unint64_t v11 = v8 >> 7;
        ++a2;
        unint64_t v12 = v8 >> 14;
        v8 >>= 7;
      }
      while (v12);
      *(a2 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v11;
      if ((v6 & 2) == 0) {
        goto LABEL_23;
      }
      goto LABEL_10;
    }
    a2[2] = v8;
    a2 += 3;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_23;
  }
LABEL_10:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unint64_t v9 = *((int *)this + 7);
  *a2 = 16;
  if (v9 > 0x7F)
  {
    a2[1] = v9 | 0x80;
    unint64_t v10 = v9 >> 7;
    if (v9 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v10 | 0x80;
        unint64_t v13 = v10 >> 7;
        ++a2;
        unint64_t v14 = v10 >> 14;
        v10 >>= 7;
      }
      while (v14);
      *(a2 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v13;
    }
    else
    {
      a2[2] = v10;
      a2 += 3;
    }
  }
  else
  {
    a2[1] = v9;
    a2 += 2;
  }
LABEL_23:
  uint64_t v15 = *((void *)this + 1);
  if ((v15 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v15 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

uint64_t google::protobuf::DescriptorProto_ReservedRange::ByteSizeLong(google::protobuf::DescriptorProto_ReservedRange *this, uint64_t a2, uint64_t a3, CachedSize *a4)
{
  int v4 = *((_DWORD *)this + 4);
  if ((v4 & 3) == 0)
  {
    uint64_t v5 = 0;
    goto LABEL_14;
  }
  if (v4)
  {
    int v6 = *((_DWORD *)this + 6);
    if (v6 < 0)
    {
      uint64_t v5 = 11;
      if ((v4 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v5 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v4 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v5 = 0;
    if ((v4 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v7 = *((_DWORD *)this + 7);
  if (v7 < 0) {
    uint64_t v8 = 11;
  }
  else {
    uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v5 += v8;
LABEL_14:
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::DescriptorProto_ReservedRange *)((char *)this + 8), (const InternalMetadata *)v5, (_DWORD *)this + 5, a4);
  }
  *((_DWORD *)this + 5) = v5;
  return v5;
}

void google::protobuf::DescriptorProto_ReservedRange::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::DescriptorProto_ReservedRange::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **google::protobuf::DescriptorProto_ReservedRange::MergeFrom(void **this, const google::protobuf::DescriptorProto_ReservedRange *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      *((_DWORD *)v3 + 6) = *((_DWORD *)a2 + 6);
    }
    if ((v5 & 2) != 0) {
      *((_DWORD *)v3 + 7) = *((_DWORD *)a2 + 7);
    }
    *((_DWORD *)v3 + 4) |= v5;
  }
  return this;
}

void google::protobuf::DescriptorProto_ReservedRange::CopyFrom(google::protobuf::DescriptorProto_ReservedRange *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::DescriptorProto_ReservedRange::Clear(this);
    google::protobuf::DescriptorProto_ReservedRange::MergeFrom((void **)this, a2);
  }
}

uint64_t google::protobuf::DescriptorProto_ReservedRange::IsInitialized(google::protobuf::DescriptorProto_ReservedRange *this)
{
  return 1;
}

uint64_t google::protobuf::DescriptorProto_ReservedRange::GetMetadata(google::protobuf::DescriptorProto_ReservedRange *this)
{
  return off_1E910DC90[6];
}

google::protobuf::DescriptorProto *google::protobuf::DescriptorProto::DescriptorProto(google::protobuf::DescriptorProto *this, Arena *a2)
{
  *(void *)this = &unk_1ED514E10;
  *((void *)this + google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = a2;
  *((void *)this + google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = 0;
  *((void *)this + 3) = a2;
  *((void *)this + 6) = a2;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = a2;
  *((void *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  *((void *)this + 1google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = 0;
  *((void *)this + 1google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = a2;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 15) = a2;
  *((void *)this + 16) = 0;
  *((void *)this + 17) = 0;
  *((void *)this + 24) = a2;
  *((void *)this + 18) = a2;
  *((void *)this + 19) = 0;
  *((void *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  *((void *)this + 2google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = a2;
  *((void *)this + 2google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = 0;
  *((void *)this + 23) = 0;
  *((void *)this + 25) = 0;
  *((void *)this + 26) = 0;
  if (atomic_load_explicit(scc_info_DescriptorProto_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_DescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *((void *)this + 27) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 28) = 0;
  return this;
}

void sub_18921C1A0(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v8);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::TypeHandler>(v7);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::TypeHandler>(v6);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>(v5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>(v3);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>(v2);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorProto::~DescriptorProto(google::protobuf::DescriptorProto *this)
{
  uint64_t v2 = *((void *)this + 27);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x18C11F580](v2, 0x1012C40EC159624);
  }
  if (this != (google::protobuf::DescriptorProto *)&google::protobuf::_DescriptorProto_default_instance_)
  {
    uint64_t v3 = (google::protobuf::MessageOptions *)*((void *)this + 28);
    if (v3)
    {
      google::protobuf::MessageOptions::~MessageOptions(v3);
      MEMORY[0x18C11F580]();
    }
  }
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)this + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::TypeHandler>((void *)this + 21);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::TypeHandler>((void *)this + 18);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((void *)this + 15);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>((void *)this + 12);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((void *)this + 9);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((char *)this + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((void *)this + 3);
}

{
  uint64_t vars8;

  google::protobuf::DescriptorProto::~DescriptorProto(this);

  JUMPOUT(0x18C11F580);
}

uint64_t google::protobuf::DescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

char *google::protobuf::DescriptorProto::Clear(google::protobuf::DescriptorProto *this)
{
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (char **)(*((void *)this + 5) + 8);
    do
    {
      uint64_t v4 = *v3++;
      google::protobuf::FieldDescriptorProto::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 8) = 0;
  }
  uint64_t v5 = *((unsigned int *)this + 14);
  if ((int)v5 >= 1)
  {
    int v6 = (google::protobuf::DescriptorProto **)(*((void *)this + 8) + 8);
    do
    {
      int v7 = *v6++;
      google::protobuf::DescriptorProto::Clear(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)this + 14) = 0;
  }
  uint64_t v8 = *((unsigned int *)this + 20);
  if ((int)v8 >= 1)
  {
    unint64_t v9 = (google::protobuf::EnumDescriptorProto **)(*((void *)this + 11) + 8);
    do
    {
      unint64_t v10 = *v9++;
      google::protobuf::EnumDescriptorProto::Clear(v10);
      --v8;
    }
    while (v8);
    *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  }
  uint64_t v11 = *((unsigned int *)this + 26);
  if ((int)v11 >= 1)
  {
    unint64_t v12 = (char **)(*((void *)this + 14) + 8);
    do
    {
      unint64_t v13 = *v12++;
      google::protobuf::DescriptorProto_ExtensionRange::Clear(v13);
      --v11;
    }
    while (v11);
    *((_DWORD *)this + 26) = 0;
  }
  uint64_t v14 = *((unsigned int *)this + 32);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = (char **)(*((void *)this + 17) + 8);
    do
    {
      uint64_t v16 = *v15++;
      google::protobuf::FieldDescriptorProto::Clear(v16);
      --v14;
    }
    while (v14);
    *((_DWORD *)this + ++*(_DWORD *)(this + 32) = 0;
  }
  uint64_t v17 = *((unsigned int *)this + 38);
  if ((int)v17 >= 1)
  {
    int v18 = (char **)(*((void *)this + 20) + 8);
    do
    {
      uint64_t v19 = *v18++;
      google::protobuf::OneofDescriptorProto::Clear(v19);
      --v17;
    }
    while (v17);
    *((_DWORD *)this + 38) = 0;
  }
  uint64_t v20 = *((unsigned int *)this + 44);
  if ((int)v20 >= 1)
  {
    uint64_t v21 = (google::protobuf::DescriptorProto_ReservedRange **)(*((void *)this + 23) + 8);
    do
    {
      uint64_t v22 = *v21++;
      google::protobuf::DescriptorProto_ReservedRange::Clear(v22);
      --v20;
    }
    while (v20);
    *((_DWORD *)this + 44) = 0;
  }
  uint64_t result = (char *)google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 192);
  int v24 = *((_DWORD *)this + 4);
  if ((v24 & 3) != 0)
  {
    if ((v24 & 1) == 0) {
      goto LABEL_33;
    }
    unint64_t v25 = *((void *)this + 27) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v25 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v25 = 0;
      *(unsigned char *)(v25 + 23) = 0;
LABEL_33:
      if ((v24 & 2) == 0) {
        goto LABEL_35;
      }
      goto LABEL_34;
    }
    **(unsigned char **)unint64_t v25 = 0;
    *(void *)(v25 + 8) = 0;
    if ((v24 & 2) != 0) {
LABEL_34:
    }
      uint64_t result = google::protobuf::MessageOptions::Clear(*((google::protobuf::MessageOptions **)this + 28));
  }
LABEL_35:
  char v27 = *((unsigned char *)this + 8);
  uint64_t v26 = (char *)this + 8;
  *((_DWORD *)v26 + google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = 0;
  if (v27)
  {
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((unint64_t *)v26);
  }
  return result;
}

char *google::protobuf::MessageOptions::Clear(google::protobuf::MessageOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::Clear((unsigned char *)this + 16);
  uint64_t v3 = *((unsigned int *)this + 14);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (char **)(*((void *)this + 8) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 14) = 0;
  }
  char v7 = *((unsigned char *)this + 8);
  int v6 = (char *)this + 8;
  *((_DWORD *)v6 + 16) = 0;
  *((_DWORD *)v6 + 8) = 0;
  if (v7)
  {
    return google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>((unint64_t *)v6);
  }
  return result;
}

google::protobuf::internal *google::protobuf::DescriptorProto::_InternalParse(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  int v107 = a2;
  char v5 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v107, *((_DWORD *)this + 23));
  uint64_t result = v107;
  if ((v5 & 1) == 0)
  {
    char v7 = (uint64_t *)(a1 + 192);
    BOOL v105 = (unint64_t *)(a1 + 8);
    __int32 v106 = (char **)(a1 + 216);
    while (2)
    {
      uint64_t v8 = (google::protobuf::internal *)((char *)result + 1);
      unsigned int v9 = *(unsigned __int8 *)result;
      if (*(char *)result < 0)
      {
        unsigned int v9 = v9 + (*(unsigned __int8 *)v8 << 7) - 128;
        if (*(char *)v8 < 0)
        {
          uint64_t v8 = (google::protobuf::internal *)((char *)result + 3);
          uint64_t v13 = -21;
          while (1)
          {
            v9 += (*((unsigned __int8 *)v8 - 1) - 1) << (v13 + 35);
            if ((*((char *)v8 - 1) & 0x80000000) == 0) {
              break;
            }
            uint64_t result = 0;
            uint64_t v8 = (google::protobuf::internal *)((char *)v8 + 1);
            v13 += 7;
            if (!v13) {
              return result;
            }
          }
        }
        else
        {
          uint64_t v8 = (google::protobuf::internal *)((char *)result + 2);
        }
      }
      int v107 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_166;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v10 = *(void *)(a1 + 8);
          uint64_t v11 = (google::protobuf::internal::ArenaImpl *)(v10 & 0xFFFFFFFFFFFFFFFELL);
          if (v10) {
            uint64_t v11 = *(google::protobuf::internal::ArenaImpl **)v11;
          }
          unint64_t v12 = (std::string *)*v106;
          if (*v106 == (char *)&google::protobuf::internal::fixed_address_empty_string)
          {
            unint64_t v12 = (std::string *)google::protobuf::internal::ArenaStringPtr::MutableSlow<>(v106, v11);
            uint64_t v8 = v107;
          }
          uint64_t result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v12, (std::string::value_type *)v8, (uint64_t)this);
          goto LABEL_173;
        case 2u:
          if (v9 != 18) {
            goto LABEL_166;
          }
          uint64_t result = (google::protobuf::internal *)((char *)v8 - 1);
          while (1)
          {
            uint64_t v14 = (google::protobuf::internal *)((char *)result + 1);
            int v107 = (google::protobuf::internal *)((char *)result + 1);
            uint64_t v15 = *(int **)(a1 + 40);
            if (!v15) {
              break;
            }
            int v16 = *(_DWORD *)(a1 + 32);
            int v17 = *v15;
            if (v16 >= *v15)
            {
              if (v17 == *(_DWORD *)(a1 + 36))
              {
LABEL_24:
                if (v16 <= v17)
                {
                  google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v17 - v16 + 1);
                  uint64_t v15 = *(int **)(a1 + 40);
                }
                int v17 = *v15;
              }
              int *v15 = v17 + 1;
              int v18 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 24));
              uint64_t v19 = *(void *)(a1 + 40);
              uint64_t v20 = *(int *)(a1 + 32);
              *(_DWORD *)(a1 + ++*(_DWORD *)(this + 32) = v20 + 1;
              *(void *)(v19 + 8 * v20 + 8) = v18;
              uint64_t v14 = v107;
              goto LABEL_28;
            }
            *(_DWORD *)(a1 + ++*(_DWORD *)(this + 32) = v16 + 1;
            int v18 = *(char **)&v15[2 * v16 + 2];
LABEL_28:
            uint64_t result = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::FieldDescriptorProto>(this, (uint64_t)v18, v14);
            int v107 = result;
            if (!result) {
              return result;
            }
            if (*(void *)this <= (unint64_t)result || *(unsigned char *)result != 18) {
              goto LABEL_181;
            }
          }
          int v16 = *(_DWORD *)(a1 + 32);
          int v17 = *(_DWORD *)(a1 + 36);
          goto LABEL_24;
        case 3u:
          if (v9 != 26) {
            goto LABEL_166;
          }
          uint64_t result = (google::protobuf::internal *)((char *)v8 - 1);
          while (1)
          {
            uint64_t v21 = (google::protobuf::internal *)((char *)result + 1);
            int v107 = (google::protobuf::internal *)((char *)result + 1);
            uint64_t v22 = *(int **)(a1 + 64);
            if (!v22) {
              break;
            }
            int v23 = *(_DWORD *)(a1 + 56);
            int v24 = *v22;
            if (v23 >= *v22)
            {
              if (v24 == *(_DWORD *)(a1 + 60))
              {
LABEL_39:
                if (v23 <= v24)
                {
                  google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), v24 - v23 + 1);
                  uint64_t v22 = *(int **)(a1 + 64);
                }
                int v24 = *v22;
              }
              int *v22 = v24 + 1;
              uint64_t v26 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 48));
              LODWORD(v25) = v26;
              uint64_t v27 = *(void *)(a1 + 64);
              uint64_t v28 = *(int *)(a1 + 56);
              *(_DWORD *)(a1 + 56) = v28 + 1;
              *(void *)(v27 + 8 * v28 + 8) = v26;
              uint64_t v21 = v107;
              goto LABEL_43;
            }
            *(_DWORD *)(a1 + 56) = v23 + 1;
            uint64_t v25 = *(void *)&v22[2 * v23 + 2];
LABEL_43:
            uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::DescriptorProto>((int)this, v25, v21);
            int v107 = result;
            if (!result) {
              return result;
            }
            if (*(void *)this <= (unint64_t)result || *(unsigned char *)result != 26) {
              goto LABEL_181;
            }
          }
          int v23 = *(_DWORD *)(a1 + 56);
          int v24 = *(_DWORD *)(a1 + 60);
          goto LABEL_39;
        case 4u:
          if (v9 != 34) {
            goto LABEL_166;
          }
          uint64_t result = (google::protobuf::internal *)((char *)v8 - 1);
          while (1)
          {
            BOOL v29 = (google::protobuf::internal *)((char *)result + 1);
            int v107 = (google::protobuf::internal *)((char *)result + 1);
            uint64_t v30 = *(int **)(a1 + 88);
            if (!v30) {
              break;
            }
            int v31 = *(_DWORD *)(a1 + 80);
            int v32 = *v30;
            if (v31 >= *v30)
            {
              if (v32 == *(_DWORD *)(a1 + 84))
              {
LABEL_54:
                if (v31 <= v32)
                {
                  google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 72), v32 - v31 + 1);
                  uint64_t v30 = *(int **)(a1 + 88);
                }
                int v32 = *v30;
              }
              int *v30 = v32 + 1;
              uint64_t v33 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 72));
              uint64_t v34 = *(void *)(a1 + 88);
              uint64_t v35 = *(int *)(a1 + 80);
              *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v35 + 1;
              *(void *)(v34 + 8 * v35 + 8) = v33;
              BOOL v29 = v107;
              goto LABEL_58;
            }
            *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v31 + 1;
            uint64_t v33 = *(char **)&v30[2 * v31 + 2];
LABEL_58:
            uint64_t result = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::EnumDescriptorProto>(this, (uint64_t)v33, v29);
            int v107 = result;
            if (!result) {
              return result;
            }
            if (*(void *)this <= (unint64_t)result || *(unsigned char *)result != 34) {
              goto LABEL_181;
            }
          }
          int v31 = *(_DWORD *)(a1 + 80);
          int v32 = *(_DWORD *)(a1 + 84);
          goto LABEL_54;
        case 5u:
          if (v9 != 42) {
            goto LABEL_166;
          }
          uint64_t result = (google::protobuf::internal *)((char *)v8 - 1);
          while (2)
          {
            uint64_t v36 = (google::protobuf::internal *)((char *)result + 1);
            int v107 = v36;
            int v37 = *(int **)(a1 + 112);
            if (!v37)
            {
              int v38 = *(_DWORD *)(a1 + 104);
              int v39 = *(_DWORD *)(a1 + 108);
LABEL_69:
              if (v38 <= v39)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 96), v39 - v38 + 1);
                int v37 = *(int **)(a1 + 112);
              }
              int v39 = *v37;
              goto LABEL_72;
            }
            int v38 = *(_DWORD *)(a1 + 104);
            int v39 = *v37;
            if (v38 < *v37)
            {
              *(_DWORD *)(a1 + 104) = v38 + 1;
              unsigned int v40 = *(char **)&v37[2 * v38 + 2];
              goto LABEL_73;
            }
            if (v39 == *(_DWORD *)(a1 + 108)) {
              goto LABEL_69;
            }
LABEL_72:
            *int v37 = v39 + 1;
            unsigned int v40 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>(*(google::protobuf::internal::ArenaImpl **)(a1 + 96));
            uint64_t v41 = *(void *)(a1 + 112);
            uint64_t v42 = *(int *)(a1 + 104);
            *(_DWORD *)(a1 + 104) = v42 + 1;
            *(void *)(v41 + 8 * v42 + 8) = v40;
            uint64_t v36 = v107;
LABEL_73:
            signed int v43 = (const char *)*(unsigned __int8 *)v36;
            if (*(char *)v36 < 0)
            {
              uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v36, v43);
              if (!result) {
                return result;
              }
              unsigned int v44 = result;
            }
            else
            {
              unsigned int v44 = (google::protobuf::internal *)((char *)v36 + 1);
            }
            uint64_t v45 = *((void *)this + 1);
            int v46 = v43 + v44 - v45;
            *(void *)this = v45 + (v46 & (v46 >> 31));
            int v47 = *((_DWORD *)this + 7);
            *((_DWORD *)this + 7) = v46;
            LODWORD(v45) = *((_DWORD *)this + 22);
            BOOL v48 = __OFSUB__(v45, 1);
            LODWORD(v45) = v45 - 1;
            *((_DWORD *)this + 2google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = v45;
            if ((int)v45 < 0 == v48)
            {
              uint64_t result = google::protobuf::DescriptorProto_ExtensionRange::_InternalParse((uint64_t)v40, v44, this);
              if (!result) {
                return result;
              }
              ++*((_DWORD *)this + 22);
              if (!*((_DWORD *)this + 20))
              {
                int v49 = *((_DWORD *)this + 7) + v47 - v46;
                *((_DWORD *)this + 7) = v49;
                unint64_t v50 = *((void *)this + 1) + (v49 & (v49 >> 31));
                *(void *)this = v50;
                int v107 = result;
                if (v50 <= (unint64_t)result || *(unsigned char *)result != 42) {
                  goto LABEL_181;
                }
                continue;
              }
            }
            return 0;
          }
        case 6u:
          if (v9 != 50) {
            goto LABEL_166;
          }
          uint64_t result = (google::protobuf::internal *)((char *)v8 - 1);
          while (1)
          {
            int v51 = (google::protobuf::internal *)((char *)result + 1);
            int v107 = (google::protobuf::internal *)((char *)result + 1);
            uint64_t v52 = *(int **)(a1 + 136);
            if (!v52) {
              break;
            }
            int v53 = *(_DWORD *)(a1 + 128);
            int v54 = *v52;
            if (v53 >= *v52)
            {
              if (v54 == *(_DWORD *)(a1 + 132))
              {
LABEL_90:
                if (v53 <= v54)
                {
                  google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 120), v54 - v53 + 1);
                  uint64_t v52 = *(int **)(a1 + 136);
                }
                int v54 = *v52;
              }
              int *v52 = v54 + 1;
              uint64_t v55 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 120));
              uint64_t v56 = *(void *)(a1 + 136);
              uint64_t v57 = *(int *)(a1 + 128);
              *(_DWORD *)(a1 + 128) = v57 + 1;
              *(void *)(v56 + 8 * v57 + 8) = v55;
              int v51 = v107;
              goto LABEL_94;
            }
            *(_DWORD *)(a1 + 128) = v53 + 1;
            uint64_t v55 = *(char **)&v52[2 * v53 + 2];
LABEL_94:
            uint64_t result = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::FieldDescriptorProto>(this, (uint64_t)v55, v51);
            int v107 = result;
            if (!result) {
              return result;
            }
            if (*(void *)this <= (unint64_t)result || *(unsigned char *)result != 50) {
              goto LABEL_181;
            }
          }
          int v53 = *(_DWORD *)(a1 + 128);
          int v54 = *(_DWORD *)(a1 + 132);
          goto LABEL_90;
        case 7u:
          if (v9 != 58) {
            goto LABEL_166;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v58 = *(char **)(a1 + 224);
          if (!v58)
          {
            uint64_t v59 = (google::protobuf::internal::ArenaImpl *)(*v105 & 0xFFFFFFFFFFFFFFFELL);
            if (*v105) {
              uint64_t v59 = *(google::protobuf::internal::ArenaImpl **)v59;
            }
            uint64_t v58 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>(v59);
            *(void *)(a1 + 224) = v58;
            uint64_t v8 = v107;
          }
          unint64_t v60 = (const char *)*(unsigned __int8 *)v8;
          if (*(char *)v8 < 0)
          {
            uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v8, v60);
            if (!result) {
              return result;
            }
            unint64_t v61 = result;
          }
          else
          {
            unint64_t v61 = (google::protobuf::internal *)((char *)v8 + 1);
          }
          uint64_t v100 = *((void *)this + 1);
          int v101 = v60 + v61 - v100;
          *(void *)this = v100 + (v101 & (v101 >> 31));
          int v102 = *((_DWORD *)this + 7);
          *((_DWORD *)this + 7) = v101;
          LODWORD(v10google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = *((_DWORD *)this + 22);
          BOOL v48 = __OFSUB__(v100, 1);
          LODWORD(v10google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v100 - 1;
          *((_DWORD *)this + 2google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = v100;
          if ((int)v100 < 0 != v48) {
            return 0;
          }
          uint64_t result = google::protobuf::MessageOptions::_InternalParse((uint64_t)v58, v61, this);
          if (!result) {
            return result;
          }
          ++*((_DWORD *)this + 22);
          if (*((_DWORD *)this + 20)) {
            return 0;
          }
          int v103 = *((_DWORD *)this + 7) + v102 - v101;
          *((_DWORD *)this + 7) = v103;
          *(void *)this = *((void *)this + 1) + (v103 & (v103 >> 31));
          int v107 = result;
          goto LABEL_181;
        case 8u:
          if (v9 != 66) {
            goto LABEL_166;
          }
          uint64_t result = (google::protobuf::internal *)((char *)v8 - 1);
          while (2)
          {
            unint64_t v62 = (google::protobuf::internal *)((char *)result + 1);
            int v107 = v62;
            uint64_t v63 = *(int **)(a1 + 160);
            if (!v63)
            {
              int v64 = *(_DWORD *)(a1 + 152);
              int v65 = *(_DWORD *)(a1 + 156);
LABEL_112:
              if (v64 <= v65)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 144), v65 - v64 + 1);
                uint64_t v63 = *(int **)(a1 + 160);
              }
              int v65 = *v63;
              goto LABEL_115;
            }
            int v64 = *(_DWORD *)(a1 + 152);
            int v65 = *v63;
            if (v64 < *v63)
            {
              *(_DWORD *)(a1 + 15google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = v64 + 1;
              unint64_t v66 = *(char **)&v63[2 * v64 + 2];
              goto LABEL_116;
            }
            if (v65 == *(_DWORD *)(a1 + 156)) {
              goto LABEL_112;
            }
LABEL_115:
            *uint64_t v63 = v65 + 1;
            unint64_t v66 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(*(google::protobuf::internal::ArenaImpl **)(a1 + 144));
            uint64_t v67 = *(void *)(a1 + 160);
            uint64_t v68 = *(int *)(a1 + 152);
            *(_DWORD *)(a1 + 15google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = v68 + 1;
            *(void *)(v67 + 8 * v68 + 8) = v66;
            unint64_t v62 = v107;
LABEL_116:
            uint64_t v69 = (const char *)*(unsigned __int8 *)v62;
            if (*(char *)v62 < 0)
            {
              uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v62, v69);
              if (!result) {
                return result;
              }
              int v70 = result;
            }
            else
            {
              int v70 = (google::protobuf::internal *)((char *)v62 + 1);
            }
            uint64_t v71 = *((void *)this + 1);
            int v72 = v69 + v70 - v71;
            *(void *)this = v71 + (v72 & (v72 >> 31));
            int v73 = *((_DWORD *)this + 7);
            *((_DWORD *)this + 7) = v72;
            LODWORD(v7google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = *((_DWORD *)this + 22);
            BOOL v48 = __OFSUB__(v71, 1);
            LODWORD(v7google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v71 - 1;
            *((_DWORD *)this + 2google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = v71;
            if ((int)v71 < 0 == v48)
            {
              uint64_t result = google::protobuf::OneofDescriptorProto::_InternalParse((uint64_t)v66, v70, this);
              if (!result) {
                return result;
              }
              ++*((_DWORD *)this + 22);
              if (!*((_DWORD *)this + 20))
              {
                int v74 = *((_DWORD *)this + 7) + v73 - v72;
                *((_DWORD *)this + 7) = v74;
                unint64_t v75 = *((void *)this + 1) + (v74 & (v74 >> 31));
                *(void *)this = v75;
                int v107 = result;
                if (v75 <= (unint64_t)result || *(unsigned char *)result != 66) {
                  goto LABEL_181;
                }
                continue;
              }
            }
            return 0;
          }
        case 9u:
          if (v9 != 74) {
            goto LABEL_166;
          }
          uint64_t result = (google::protobuf::internal *)((char *)v8 - 1);
          while (2)
          {
            int v76 = (google::protobuf::internal *)((char *)result + 1);
            int v107 = v76;
            int v77 = *(int **)(a1 + 184);
            if (!v77)
            {
              int v78 = *(_DWORD *)(a1 + 176);
              int v79 = *(_DWORD *)(a1 + 180);
LABEL_133:
              if (v78 <= v79)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 168), v79 - v78 + 1);
                int v77 = *(int **)(a1 + 184);
              }
              int v79 = *v77;
              goto LABEL_136;
            }
            int v78 = *(_DWORD *)(a1 + 176);
            int v79 = *v77;
            if (v78 < *v77)
            {
              *(_DWORD *)(a1 + 176) = v78 + 1;
              int v80 = *(char **)&v77[2 * v78 + 2];
              goto LABEL_137;
            }
            if (v79 == *(_DWORD *)(a1 + 180)) {
              goto LABEL_133;
            }
LABEL_136:
            *int v77 = v79 + 1;
            int v80 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>(*(google::protobuf::internal::ArenaImpl **)(a1 + 168));
            uint64_t v81 = *(void *)(a1 + 184);
            uint64_t v82 = *(int *)(a1 + 176);
            *(_DWORD *)(a1 + 176) = v82 + 1;
            *(void *)(v81 + 8 * v82 + 8) = v80;
            int v76 = v107;
LABEL_137:
            int v83 = (const char *)*(unsigned __int8 *)v76;
            if (*(char *)v76 < 0)
            {
              uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v76, v83);
              if (!result) {
                return result;
              }
              uint64_t v84 = (const char *)result;
            }
            else
            {
              uint64_t v84 = (char *)v76 + 1;
            }
            uint64_t v85 = *((void *)this + 1);
            int v86 = v83 + v84 - v85;
            *(void *)this = v85 + (v86 & (v86 >> 31));
            int v87 = *((_DWORD *)this + 7);
            *((_DWORD *)this + 7) = v86;
            LODWORD(v85) = *((_DWORD *)this + 22);
            BOOL v48 = __OFSUB__(v85, 1);
            LODWORD(v85) = v85 - 1;
            *((_DWORD *)this + 2google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((void *)this + 2) = v85;
            if ((int)v85 < 0 == v48)
            {
              uint64_t result = (google::protobuf::internal *)google::protobuf::DescriptorProto_ReservedRange::_InternalParse((uint64_t)v80, v84, this);
              if (!result) {
                return result;
              }
              ++*((_DWORD *)this + 22);
              if (!*((_DWORD *)this + 20))
              {
                int v88 = *((_DWORD *)this + 7) + v87 - v86;
                *((_DWORD *)this + 7) = v88;
                unint64_t v89 = *((void *)this + 1) + (v88 & (v88 >> 31));
                *(void *)this = v89;
                int v107 = result;
                if (v89 <= (unint64_t)result || *(unsigned char *)result != 74) {
                  goto LABEL_181;
                }
                continue;
              }
            }
            return 0;
          }
        case 0xAu:
          if (v9 != 82) {
            goto LABEL_166;
          }
          uint64_t result = (google::protobuf::internal *)((char *)v8 - 1);
          break;
        default:
LABEL_166:
          if (v9) {
            BOOL v98 = (v9 & 7) == 4;
          }
          else {
            BOOL v98 = 1;
          }
          if (v98)
          {
            *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v9 - 1;
            return v8;
          }
          if (*v105)
          {
            int v99 = (char *)((*v105 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            int v99 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v105);
            uint64_t v8 = v107;
          }
          int v108 = (google::protobuf::UnknownFieldSet *)v99;
          uint64_t result = (google::protobuf::internal *)google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldParserHelper>(v9, &v108, (uint64_t *)v8);
LABEL_173:
          int v107 = result;
          if (!result) {
            return result;
          }
LABEL_181:
          int v104 = google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v107, *((_DWORD *)this + 23));
          uint64_t result = v107;
          if (v104) {
            return result;
          }
          continue;
      }
      break;
    }
    while (1)
    {
      char v90 = (char *)result + 1;
      int v107 = (google::protobuf::internal *)((char *)result + 1);
      int v91 = *(int **)(a1 + 208);
      if (!v91) {
        break;
      }
      int v92 = *(_DWORD *)(a1 + 200);
      int v93 = *v91;
      if (v92 >= *v91)
      {
        if (v93 == *(_DWORD *)(a1 + 204))
        {
LABEL_154:
          if (v92 <= v93)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 192), v93 - v92 + 1);
            int v91 = *(int **)(a1 + 208);
          }
          int v93 = *v91;
        }
        *int v91 = v93 + 1;
        uint64_t v95 = *v7;
        if (!*v7) {
          operator new();
        }
        if (*(unsigned char *)(v95 + 24)) {
        AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)v95, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
        }
        AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
        AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
        AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
        uint64_t v96 = *(void *)(a1 + 208);
        uint64_t v97 = *(int *)(a1 + 200);
        *(_DWORD *)(a1 + 20google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v97 + 1;
        *(void *)(v96 + 8 * v97 + 8) = AlignedAndAddCleanup;
        char v90 = (std::string::value_type *)v107;
        goto LABEL_162;
      }
      *(_DWORD *)(a1 + 20google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v92 + 1;
      AlignedAndAddCleanup = *(std::string **)&v91[2 * v92 + 2];
LABEL_162:
      uint64_t result = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v90, (uint64_t)this);
      int v107 = result;
      if (!result) {
        return result;
      }
      if (*(void *)this <= (unint64_t)result || *(unsigned char *)result != 82) {
        goto LABEL_181;
      }
    }
    int v92 = *(_DWORD *)(a1 + 200);
    int v93 = *(_DWORD *)(a1 + 204);
    goto LABEL_154;
  }
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::DescriptorProto::_InternalSerialize(google::protobuf::DescriptorProto *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, (const void **)(*((void *)this + 27) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  int v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unsigned int v9 = *(google::protobuf::FieldDescriptorProto **)(*((void *)this + 5) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          uint64_t v11 = v4 + 3;
          do
          {
            *(v11 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v11;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v13;
        }
        else
        {
          void v4[2] = v12;
          uint64_t v11 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v10;
        uint64_t v11 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::FieldDescriptorProto::_InternalSerialize(v9, v11, a3);
    }
  }
  int v15 = *((_DWORD *)this + 14);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v17 = *(google::protobuf::DescriptorProto **)(*((void *)this + 8) + 8 * j + 8);
      *uint64_t v4 = 26;
      unsigned int v18 = *((_DWORD *)v17 + 5);
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unsigned int v20 = v18 >> 7;
        if (v18 >> 14)
        {
          uint64_t v19 = v4 + 3;
          do
          {
            *(v19 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v20 | 0x80;
            unsigned int v21 = v20 >> 7;
            ++v19;
            unsigned int v22 = v20 >> 14;
            v20 >>= 7;
          }
          while (v22);
          *(v19 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v21;
        }
        else
        {
          void v4[2] = v20;
          uint64_t v19 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v18;
        uint64_t v19 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::DescriptorProto::_InternalSerialize(v17, v19, a3);
    }
  }
  int v23 = *((_DWORD *)this + 20);
  if (v23)
  {
    for (int k = 0; k != v23; ++k)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v25 = *(google::protobuf::EnumDescriptorProto **)(*((void *)this + 11) + 8 * k + 8);
      *uint64_t v4 = 34;
      unsigned int v26 = *((_DWORD *)v25 + 5);
      if (v26 > 0x7F)
      {
        v4[1] = v26 | 0x80;
        unsigned int v28 = v26 >> 7;
        if (v26 >> 14)
        {
          uint64_t v27 = v4 + 3;
          do
          {
            *(v27 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v28 | 0x80;
            unsigned int v29 = v28 >> 7;
            ++v27;
            unsigned int v30 = v28 >> 14;
            v28 >>= 7;
          }
          while (v30);
          *(v27 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v29;
        }
        else
        {
          void v4[2] = v28;
          uint64_t v27 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v26;
        uint64_t v27 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::EnumDescriptorProto::_InternalSerialize(v25, v27, a3);
    }
  }
  int v31 = *((_DWORD *)this + 26);
  if (v31)
  {
    for (int m = 0; m != v31; ++m)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v33 = *(google::protobuf::DescriptorProto_ExtensionRange **)(*((void *)this + 14) + 8 * m + 8);
      *uint64_t v4 = 42;
      unsigned int v34 = *((_DWORD *)v33 + 5);
      if (v34 > 0x7F)
      {
        v4[1] = v34 | 0x80;
        unsigned int v36 = v34 >> 7;
        if (v34 >> 14)
        {
          uint64_t v35 = v4 + 3;
          do
          {
            *(v35 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v36 | 0x80;
            unsigned int v37 = v36 >> 7;
            ++v35;
            unsigned int v38 = v36 >> 14;
            v36 >>= 7;
          }
          while (v38);
          *(v35 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v37;
        }
        else
        {
          void v4[2] = v36;
          uint64_t v35 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v34;
        uint64_t v35 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::DescriptorProto_ExtensionRange::_InternalSerialize(v33, v35, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
    }
  }
  int v39 = *((_DWORD *)this + 32);
  if (v39)
  {
    for (int n = 0; n != v39; ++n)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v41 = *(google::protobuf::FieldDescriptorProto **)(*((void *)this + 17) + 8 * n + 8);
      *uint64_t v4 = 50;
      unsigned int v42 = *((_DWORD *)v41 + 5);
      if (v42 > 0x7F)
      {
        v4[1] = v42 | 0x80;
        unsigned int v44 = v42 >> 7;
        if (v42 >> 14)
        {
          signed int v43 = v4 + 3;
          do
          {
            *(v43 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v44 | 0x80;
            unsigned int v45 = v44 >> 7;
            ++v43;
            unsigned int v46 = v44 >> 14;
            v44 >>= 7;
          }
          while (v46);
          *(v43 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v45;
        }
        else
        {
          void v4[2] = v44;
          signed int v43 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v42;
        signed int v43 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::FieldDescriptorProto::_InternalSerialize(v41, v43, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    int v47 = (google::protobuf::MessageOptions *)*((void *)this + 28);
    *uint64_t v4 = 58;
    unsigned int v48 = *((_DWORD *)v47 + 11);
    if (v48 > 0x7F)
    {
      v4[1] = v48 | 0x80;
      unsigned int v50 = v48 >> 7;
      if (v48 >> 14)
      {
        int v49 = v4 + 3;
        do
        {
          *(v49 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v50 | 0x80;
          unsigned int v51 = v50 >> 7;
          ++v49;
          unsigned int v52 = v50 >> 14;
          v50 >>= 7;
        }
        while (v52);
        *(v49 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v51;
      }
      else
      {
        void v4[2] = v50;
        int v49 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v48;
      int v49 = v4 + 2;
    }
    uint64_t v4 = (unsigned __int8 *)google::protobuf::MessageOptions::_InternalSerialize(v47, v49, a3);
  }
  int v53 = *((_DWORD *)this + 38);
  if (v53)
  {
    for (iint i = 0; ii != v53; ++ii)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v55 = *(google::protobuf::OneofDescriptorProto **)(*((void *)this + 20) + 8 * ii + 8);
      *uint64_t v4 = 66;
      unsigned int v56 = *((_DWORD *)v55 + 5);
      if (v56 > 0x7F)
      {
        v4[1] = v56 | 0x80;
        unsigned int v58 = v56 >> 7;
        if (v56 >> 14)
        {
          uint64_t v57 = v4 + 3;
          do
          {
            *(v57 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v58 | 0x80;
            unsigned int v59 = v58 >> 7;
            ++v57;
            unsigned int v60 = v58 >> 14;
            v58 >>= 7;
          }
          while (v60);
          *(v57 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v59;
        }
        else
        {
          void v4[2] = v58;
          uint64_t v57 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v56;
        uint64_t v57 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::OneofDescriptorProto::_InternalSerialize(v55, v57, a3);
    }
  }
  int v61 = *((_DWORD *)this + 44);
  if (v61)
  {
    for (jint j = 0; jj != v61; ++jj)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v63 = *(google::protobuf::DescriptorProto_ReservedRange **)(*((void *)this + 23) + 8 * jj + 8);
      *uint64_t v4 = 74;
      unsigned int v64 = *((_DWORD *)v63 + 5);
      if (v64 > 0x7F)
      {
        v4[1] = v64 | 0x80;
        unsigned int v66 = v64 >> 7;
        if (v64 >> 14)
        {
          int v65 = v4 + 3;
          do
          {
            *(v65 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v66 | 0x80;
            unsigned int v67 = v66 >> 7;
            ++v65;
            unsigned int v68 = v66 >> 14;
            v66 >>= 7;
          }
          while (v68);
          *(v65 - google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1) = v67;
        }
        else
        {
          void v4[2] = v66;
          int v65 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v64;
        int v65 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::DescriptorProto_ReservedRange::_InternalSerialize(v63, v65, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
    }
  }
  uint64_t v69 = *((unsigned int *)this + 50);
  if ((int)v69 >= 1)
  {
    uint64_t v70 = 0;
    uint64_t v71 = 8 * v69;
    do
    {
      int v72 = *(void **)(*((void *)this + 26) + v70 + 8);
      if (*((char *)v72 + 23) < 0)
      {
        int64_t v73 = v72[1];
        if (v73 > 127) {
          goto LABEL_109;
        }
      }
      else
      {
        int64_t v73 = *((unsigned __int8 *)v72 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v73)
      {
        *uint64_t v4 = 82;
        v4[1] = v73;
        if (*((char *)v72 + 23) < 0) {
          int v72 = (void *)*v72;
        }
        int v74 = v4 + 2;
        memcpy(v4 + 2, v72, v73);
        uint64_t v4 = &v74[v73];
        goto LABEL_107;
      }
LABEL_109:
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 10, (uint64_t)v72, v4);
LABEL_107:
      v70 += 8;
    }
    while (v71 != v70);
  }
  uint64_t v75 = *((void *)this + 1);
  if ((v75 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v75 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
}