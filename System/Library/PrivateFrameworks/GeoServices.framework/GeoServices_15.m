void sub_189EBF030(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPThirdPartyPhotoSharingPreferenceUpdateResultReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPThirdPartyPhotoSharingPreferenceUpdateResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189EBF094(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPThirdPartyPhotoSharingPreferenceUpdateResultIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_45;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_45;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_47;
          }
LABEL_34:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v21 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v22 = *v2;
              unint64_t v23 = *(void *)&a1[v22];
              if (v23 == -1 || v23 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v24 = v23 + 1;
              int v25 = *(char *)(*(void *)&a1[*v5] + v23);
              *(void *)&a1[v22] = v24;
              if (v25 < 0)
              {
                BOOL v12 = v21++ >= 9;
                if (!v12) {
                  continue;
                }
              }
              goto LABEL_34;
            }
            a1[*v4] = 1;
          }
LABEL_30:
          PBReaderRecallMark();
          goto LABEL_44;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_47;
        }
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0)
          {
            unsigned int v20 = v14++;
            if (v20 <= 8) {
              continue;
            }
          }
          goto LABEL_44;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_47;
      }
LABEL_44:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEORPThirdPartyPhotoSharingPreferenceIsValid(a1))
    {
LABEL_47:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_30;
  }
LABEL_45:
  BOOL v26 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v26;
}

void sub_189EBF514(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPThirdPartyPhotoSharingPreferenceUpdateResultIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_189EBF7F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOStringForDistanceMeasurement(void *a1, void *a2, uint64_t a3)
{
  return _GEOStringForDistanceMeasurement(a1, a2, a3, 0);
}

id _GEOStringForDistanceMeasurement(void *a1, void *a2, uint64_t a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  uint64_t v9 = v8;
  unint64_t v10 = a3 & 8;
  if ((a3 & 0x10) != 0) {
    [v8 spokenLocale];
  }
  else {
  char v11 = [v8 locale];
  }
  BOOL v12 = [v9 locale];
  int v13 = [v12 objectForKey:*MEMORY[0x1E4F1C440]];

  int v14 = +[GEODistanceStringRoundingInfo roundingInfoForDistanceMeasurement:v7 measurementSystem:v13 locale:v11 formatOptions:a3];
  v15 = [v14 roundedDistanceMeasurement];
  uint64_t v16 = v15;
  if (a4) {
    *a4 = v15;
  }
  if ((a3 & 8) == 0) {
    goto LABEL_8;
  }
  v37 = v9;
  unint64_t v17 = v7;
  unint64_t v18 = objc_opt_new();
  [v18 setLocale:v11];
  int v19 = [v14 roundedDistanceMeasurement];
  [v19 unit];
  v21 = unsigned int v20 = v11;
  uint64_t v22 = [v17 measurementByConvertingToUnit:v21];

  char v11 = v20;
  unint64_t v10 = a3 & 8;

  unint64_t v23 = [v18 stringFromDistanceMeasurement:v22 roundedDistanceMeasurement:v16];

  id v7 = v17;
  uint64_t v9 = v37;
  if (!v23)
  {
LABEL_8:
    uint64_t v24 = a3 & 1;
    id v25 = objc_alloc_init(MEMORY[0x1E4F28E30]);
    [v25 setLocale:v11];
    [v25 setUnitOptions:1];
    [v25 setUnitStyle:v24 ^ 3];
    uint64_t v26 = [v14 minFractionDigits];
    v27 = [v25 numberFormatter];
    [v27 setMinimumFractionDigits:v26];

    uint64_t v28 = [v14 maxFractionDigits];
    v29 = [v25 numberFormatter];
    [v29 setMaximumFractionDigits:v28];

    v30 = [v25 numberFormatter];
    [v30 setMinimumIntegerDigits:(v10 >> 3) ^ 1];

    v31 = NSNumber;
    [v14 roundingIncrement];
    v32 = objc_msgSend(v31, "numberWithDouble:");
    v33 = [v25 numberFormatter];
    [v33 setRoundingIncrement:v32];

    v34 = [v25 numberFormatter];
    [v34 setRoundingMode:4];

    v35 = [v25 stringFromMeasurement:v16];
    unint64_t v23 = [v35 stringByReplacingOccurrencesOfString:@" " withString:@"Â "];
  }

  return v23;
}

id GEOStringForDistance(uint64_t a1, double a2)
{
  id v4 = objc_alloc(MEMORY[0x1E4F28E28]);
  v5 = [MEMORY[0x1E4F291E0] meters];
  char v6 = (void *)[v4 initWithDoubleValue:v5 unit:a2];

  id v7 = +[GEOComposedString localizationProvider];
  id v8 = _GEOStringForDistanceMeasurement(v6, v7, a1, 0);

  return v8;
}

id GEORoundedMeasurementForDistance(uint64_t a1)
{
  BOOL v2 = objc_msgSend(MEMORY[0x1E4F28E28], "_geo_distanceMeasurementForMeters:");
  id v3 = +[GEOComposedString localizationProvider];
  id v7 = 0;
  id v4 = _GEOStringForDistanceMeasurement(v2, v3, a1, &v7);
  id v5 = v7;

  return v5;
}

id GEORoundedDistanceMeasurement(void *a1)
{
  id v1 = a1;
  BOOL v2 = +[GEOComposedString localizationProvider];
  id v6 = 0;
  id v3 = _GEOStringForDistanceMeasurement(v1, v2, 0, &v6);
  id v4 = v6;

  return v4;
}

void sub_189EC0D3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189EC1220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, int a13, std::random_device a14, std::random_device a15)
{
  if (__p) {
    operator delete(__p);
  }
  std::random_device::~random_device(&a14);

  _Unwind_Resume(a1);
}

id anonymous namespace'::isolation(_anonymous_namespace_ *this)
{
  if (qword_1EB29FF98 != -1) {
    dispatch_once(&qword_1EB29FF98, &__block_literal_global_133);
  }
  id v1 = (void *)qword_1EB29FF90;

  return v1;
}

void sub_189EC137C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)GEOTileRequestBalancer;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_189EC1A14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);

  _Unwind_Resume(a1);
}

void sub_189EC1CA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void std::vector<anonymous namespace'::RequesterTileKeys>::erase(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    uint64_t v6 = *(void *)(a1 + 8);
    if (a3 != v6)
    {
      uint64_t v7 = 8 * ((a3 - a2) >> 3);
      do
      {
        id WeakRetained = objc_loadWeakRetained((id *)(v4 + v7));
        objc_storeWeak((id *)v4, WeakRetained);

        uint64_t v9 = *(void *)(v4 + v7 + 8);
        *(void *)(v4 + v7 + 8) = 0;
        unint64_t v10 = *(void **)(v4 + 8);
        *(void *)(v4 + 8) = v9;

        *(void *)(v4 + 16) = *(void *)(v4 + v7 + 16);
        v4 += 24;
      }
      while (v4 + v7 != v6);
    }
  }
}

void sub_189EC1FC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189EC22C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189EC249C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189EC2ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void **a31)
{
  std::__hash_table<std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,unsigned long>,std::__unordered_map_hasher<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,unsigned long>,std::hash<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,std::equal_to<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,true>,std::__unordered_map_equal<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,unsigned long>,std::equal_to<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,std::hash<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,true>,std::allocator<std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,unsigned long>>>::~__hash_table((uint64_t)&a25);
  std::__hash_table<std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,GEOTileKeyList * {__strong}>,std::__unordered_map_hasher<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,GEOTileKeyList * {__strong}>,std::hash<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,std::equal_to<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,true>,std::__unordered_map_equal<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,GEOTileKeyList * {__strong}>,std::equal_to<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,std::hash<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,true>,std::allocator<std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,GEOTileKeyList * {__strong}>>>::~__hash_table((uint64_t)&a31);
  a31 = (void **)(v31 - 208);
  std::vector<GEORoadEdge * {__strong}>::__destroy_vector::operator()[abi:ne180100](&a31);
  _Unwind_Resume(a1);
}

uint64_t geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>::~_retain_ptr(uint64_t a1)
{
  *(void *)a1 = &unk_1ED513690;

  return a1;
}

void sub_189EC3364(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_189EC34EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZN12_GLOBAL__N_19isolationEv_block_invoke()
{
  uint64_t v0 = geo_dispatch_queue_create();
  id v1 = (void *)qword_1EB29FF90;
  qword_1EB29FF90 = v0;
}

uint64_t std::__independent_bits_engine<std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>,unsigned long>::__independent_bits_engine(uint64_t result, uint64_t a2, unint64_t a3)
{
  *(void *)result = a2;
  *(void *)(result + 8) = a3;
  if ((a3 & 0x1F) != 0) {
    unint64_t v3 = (a3 >> 5) + 1;
  }
  else {
    unint64_t v3 = a3 >> 5;
  }
  unint64_t v4 = a3 / v3;
  *(void *)(result + 16) = a3 / v3;
  *(void *)(result + 24) = v3;
  unint64_t v5 = (-1 << (a3 / v3)) & 0x100000000;
  if (a3 / v3 >= 0x40) {
    unint64_t v5 = 0;
  }
  *(void *)(result + 40) = v5;
  if ((v5 ^ 0x100000000) > v5 / v3)
  {
    ++v3;
    unint64_t v4 = a3 / v3;
    *(void *)(result + 16) = a3 / v3;
    *(void *)(result + 24) = v3;
    if (a3 / v3 > 0x3F)
    {
      *(void *)(result + 32) = v3 + v4 * v3 - a3;
      *(void *)(result + 40) = 0;
      LODWORD(v4) = 64;
      goto LABEL_16;
    }
    *(void *)(result + 40) = (-1 << v4) & 0x100000000;
  }
  *(void *)(result + 32) = v3 + a3 / v3 * v3 - a3;
  if (v4 >= 0x3F)
  {
LABEL_16:
    *(void *)(result + 48) = 0;
    int v8 = -(int)v4;
    unsigned int v7 = -1;
    *(_DWORD *)(result + 56) = 0xFFFFFFFF >> v8;
    goto LABEL_17;
  }
  *(void *)(result + 48) = 0x80000000uLL >> v4 << (v4 + 1);
  unsigned int v6 = 0xFFFFFFFF >> -(char)v4;
  if (!v4) {
    unsigned int v6 = 0;
  }
  *(_DWORD *)(result + 56) = v6;
  if (v4 >= 0x1F) {
    unsigned int v7 = -1;
  }
  else {
    unsigned int v7 = 0xFFFFFFFF >> ~(_BYTE)v4;
  }
LABEL_17:
  *(_DWORD *)(result + 60) = v7;
  return result;
}

void std::vector<anonymous namespace'::RequesterTileKeys>::__base_destruct_at_end[abi:ne180100](uint64_t a1, id *a2)
{
  unint64_t v4 = *(id **)(a1 + 8);
  if (v4 != a2)
  {
    do
    {
      unint64_t v5 = v4 - 3;

      objc_destroyWeak(v5);
      unint64_t v4 = v5;
    }
    while (v5 != a2);
  }
  *(void *)(a1 + 8) = a2;
}

void std::allocator_traits<std::allocator<anonymous namespace'::RequesterTileKeys>>::construct[abi:ne180100]<anonymous namespace'::RequesterTileKeys,GEOSimpleTileRequester * {__strong}&,GEOTileKeyList * {__strong}&,GEOTileKeyMap<NSNumber *> * {__strong}&,void>(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v10 = v7;
  id v9 = v8;
  objc_initWeak((id *)a1, a2);
  *(void *)(a1 + 8) = [[GEOPrioritizedTileKeys alloc] initWithKeys:v10 priorities:v9];
  *(void *)(a1 + 16) = 0;
}

void sub_189EC3748(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  objc_destroyWeak(v11);

  _Unwind_Resume(a1);
}

uint64_t std::__split_buffer<anonymous namespace'::RequesterTileKeys>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    unint64_t v4 = (id *)(i - 24);
    *(void *)(a1 + 16) = i - 24;

    objc_destroyWeak(v4);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t std::__hash_table<std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,GEOTileKeyList * {__strong}>,std::__unordered_map_hasher<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,GEOTileKeyList * {__strong}>,std::hash<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,std::equal_to<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,true>,std::__unordered_map_equal<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,GEOTileKeyList * {__strong}>,std::equal_to<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,std::hash<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,true>,std::allocator<std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,GEOTileKeyList * {__strong}>>>::~__hash_table(uint64_t a1)
{
  BOOL v2 = *(id **)(a1 + 16);
  if (v2)
  {
    do
    {
      uint64_t v3 = (id *)*v2;

      v2[2] = &unk_1ED513690;
      operator delete(v2);
      BOOL v2 = v3;
    }
    while (v3);
  }
  unint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

uint64_t std::__hash_table<std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,unsigned long>,std::__unordered_map_hasher<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,unsigned long>,std::hash<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,std::equal_to<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,true>,std::__unordered_map_equal<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,unsigned long>,std::equal_to<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,std::hash<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,true>,std::allocator<std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,unsigned long>>>::~__hash_table(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      uint64_t v3 = *(void **)v2;
      *((void *)v2 + 2) = &unk_1ED513690;

      operator delete(v2);
      BOOL v2 = v3;
    }
    while (v3);
  }
  unint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>::~_retain_ptr(uint64_t a1)
{
  *(void *)a1 = &unk_1ED513690;

  JUMPOUT(0x18C11F580);
}

uint64_t geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>::operator==(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = *(id *)(a2 + 8);
  id v5 = v3;
  id v6 = v4;
  if (v6 == v5) {
    uint64_t v7 = 1;
  }
  else {
    uint64_t v7 = [v5 isEqual:v6];
  }

  return v7;
}

void sub_189EC39C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>::_retain_ptr(void *a1, uint64_t a2)
{
  *a1 = &unk_1ED513690;
  a1[1] = 0;
  id v3 = *(id *)(a2 + 8);
  id v4 = (void *)a1[1];
  a1[1] = v3;

  return a1;
}

void std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,GEOTileKeyList * {__strong}>,void *>>>::operator()[abi:ne180100](char a1, uint64_t a2)
{
  if (a1)
  {

    *(void *)(a2 + 16) = &unk_1ED513690;
  }
  else if (!a2)
  {
    return;
  }

  operator delete((void *)a2);
}

void *std::__hash_table<std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,unsigned long>,std::__unordered_map_hasher<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,unsigned long>,std::hash<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,std::equal_to<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,true>,std::__unordered_map_equal<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,unsigned long>,std::equal_to<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,std::hash<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>,true>,std::allocator<std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,unsigned long>>>::__emplace_unique_key_args<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,std::piecewise_construct_t const&,std::tuple<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc> const&>,std::tuple<>>(float *a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v7 = [*(id *)(a2 + 8) hash];
  unint64_t v8 = v7;
  unint64_t v9 = *((void *)a1 + 1);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    unint64_t v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = v7;
      if (v7 >= v9) {
        unint64_t v3 = v7 % v9;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v7;
    }
    BOOL v12 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v12)
    {
      for (uint64_t i = *v12; i; uint64_t i = *(void **)i)
      {
        unint64_t v14 = *((void *)i + 1);
        if (v14 == v8)
        {
          if (geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>::operator==(*((void **)i + 3), a2))return i; {
        }
          }
        else
        {
          if (v11 > 1)
          {
            if (v14 >= v9) {
              v14 %= v9;
            }
          }
          else
          {
            v14 &= v9 - 1;
          }
          if (v14 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t v15 = *a3;
  uint64_t i = operator new(0x30uLL);
  *(void *)uint64_t i = 0;
  *((void *)i + 1) = v8;
  geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>::_retain_ptr((void *)i + 2, v15);
  *((void *)i + 5) = 0;
  float v16 = (float)(unint64_t)(*((void *)a1 + 3) + 1);
  float v17 = a1[8];
  if (!v9 || (float)(v17 * (float)v9) < v16)
  {
    BOOL v18 = 1;
    if (v9 >= 3) {
      BOOL v18 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v9);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      int8x8_t prime = (int8x8_t)v20;
    }
    else {
      int8x8_t prime = (int8x8_t)v19;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
    }
    unint64_t v9 = *((void *)a1 + 1);
    if (*(void *)&prime > v9) {
      goto LABEL_30;
    }
    if (*(void *)&prime < v9)
    {
      unint64_t v28 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
      if (v9 < 3 || (uint8x8_t v29 = (uint8x8_t)vcnt_s8((int8x8_t)v9), v29.i16[0] = vaddlv_u8(v29), v29.u32[0] > 1uLL))
      {
        unint64_t v28 = std::__next_prime(v28);
      }
      else
      {
        uint64_t v30 = 1 << -(char)__clz(v28 - 1);
        if (v28 >= 2) {
          unint64_t v28 = v30;
        }
      }
      if (*(void *)&prime <= v28) {
        int8x8_t prime = (int8x8_t)v28;
      }
      if (*(void *)&prime >= v9)
      {
        unint64_t v9 = *((void *)a1 + 1);
      }
      else
      {
        if (prime)
        {
LABEL_30:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          uint64_t v22 = operator new(8 * *(void *)&prime);
          unint64_t v23 = *(void **)a1;
          *(void *)a1 = v22;
          if (v23) {
            operator delete(v23);
          }
          uint64_t v24 = 0;
          *((int8x8_t *)a1 + 1) = prime;
          do
            *(void *)(*(void *)a1 + 8 * v24++) = 0;
          while (*(void *)&prime != v24);
          id v25 = (void *)*((void *)a1 + 2);
          if (v25)
          {
            unint64_t v26 = v25[1];
            uint8x8_t v27 = (uint8x8_t)vcnt_s8(prime);
            v27.i16[0] = vaddlv_u8(v27);
            if (v27.u32[0] > 1uLL)
            {
              if (v26 >= *(void *)&prime) {
                v26 %= *(void *)&prime;
              }
            }
            else
            {
              v26 &= *(void *)&prime - 1;
            }
            *(void *)(*(void *)a1 + 8 * v26) = a1 + 4;
            uint64_t v31 = (void *)*v25;
            if (*v25)
            {
              do
              {
                unint64_t v32 = v31[1];
                if (v27.u32[0] > 1uLL)
                {
                  if (v32 >= *(void *)&prime) {
                    v32 %= *(void *)&prime;
                  }
                }
                else
                {
                  v32 &= *(void *)&prime - 1;
                }
                if (v32 != v26)
                {
                  if (!*(void *)(*(void *)a1 + 8 * v32))
                  {
                    *(void *)(*(void *)a1 + 8 * v32) = v25;
                    goto LABEL_55;
                  }
                  *id v25 = *v31;
                  void *v31 = **(void **)(*(void *)a1 + 8 * v32);
                  **(void **)(*(void *)a1 + 8 * v32) = v31;
                  uint64_t v31 = v25;
                }
                unint64_t v32 = v26;
LABEL_55:
                id v25 = v31;
                uint64_t v31 = (void *)*v31;
                unint64_t v26 = v32;
              }
              while (v31);
            }
          }
          unint64_t v9 = (unint64_t)prime;
          goto LABEL_59;
        }
        v37 = *(void **)a1;
        *(void *)a1 = 0;
        if (v37) {
          operator delete(v37);
        }
        unint64_t v9 = 0;
        *((void *)a1 + 1) = 0;
      }
    }
LABEL_59:
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  v33 = *(void **)a1;
  v34 = *(void **)(*(void *)a1 + 8 * v3);
  if (v34)
  {
    *(void *)uint64_t i = *v34;
LABEL_72:
    void *v34 = i;
    goto LABEL_73;
  }
  *(void *)uint64_t i = *((void *)a1 + 2);
  *((void *)a1 + 2) = i;
  v33[v3] = a1 + 4;
  if (*(void *)i)
  {
    unint64_t v35 = *(void *)(*(void *)i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v35 >= v9) {
        v35 %= v9;
      }
    }
    else
    {
      v35 &= v9 - 1;
    }
    v34 = (void *)(*(void *)a1 + 8 * v35);
    goto LABEL_72;
  }
LABEL_73:
  ++*((void *)a1 + 3);
  return i;
}

void sub_189EC3EB8(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,unsigned long>,void *>>>::operator()[abi:ne180100](1, v1);
  _Unwind_Resume(a1);
}

void std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<geo::_retain_ptr<GEOSimpleTileRequester * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>,unsigned long>,void *>>>::operator()[abi:ne180100](char a1, uint64_t a2)
{
  if (a1)
  {
    *(void *)(a2 + 16) = &unk_1ED513690;
  }
  else if (!a2)
  {
    return;
  }

  operator delete((void *)a2);
}

void sub_189EC4300(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOGetGEOMapFeatureAccessLog()
{
  if (qword_1EB29FFA8 != -1) {
    dispatch_once(&qword_1EB29FFA8, &__block_literal_global_134);
  }
  uint64_t v0 = (void *)_MergedGlobals_276;

  return v0;
}

void __GEOGetGEOMapFeatureAccessLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOMapFeatureAccess");
  uint64_t v1 = (void *)_MergedGlobals_276;
  _MergedGlobals_276 = (uint64_t)v0;
}

void sub_189EC8084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_189EC8698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t GEOVLFCrowdsourcingDataCollectionEnabled()
{
  return GEOConfigGetBOOL(GeoServicesConfig_VLFCrowdsourcingDataCollectionEnabled, (uint64_t)off_1E91138D8);
}

void ___initializeListeners_block_invoke()
{
  uint64_t v0 = geo_isolater_create();
  uint64_t v1 = (void *)_MergedGlobals_277;
  _MergedGlobals_277 = v0;

  uint64_t v2 = [MEMORY[0x1E4F28E10] weakToStrongObjectsMapTable];
  unint64_t v3 = (void *)qword_1EB29FFB8;
  qword_1EB29FFB8 = v2;
}

void GEOVLFCrowdsourcingDataCollectionEnabledAddDelegateListener(void *a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = a1;
    id v5 = [[_GEOVLFCrowdsourcingDataCollectionEnabledListener alloc] initWithListener:v3 queue:v4];

    if (qword_1EB29FFC0 != -1) {
      dispatch_once(&qword_1EB29FFC0, &__block_literal_global_135);
    }
    unint64_t v7 = v5;
    id v8 = v3;
    id v6 = v5;
    geo_isolate_sync();
  }
}

uint64_t __GEOVLFCrowdsourcingDataCollectionEnabledAddDelegateListener_block_invoke(uint64_t a1)
{
  return [(id)qword_1EB29FFB8 setObject:*(void *)(a1 + 32) forKey:*(void *)(a1 + 40)];
}

void GEOVLFCrowdsourcingDataCollectionEnabledRemoveDelegateListener(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (qword_1EB29FFC0 != -1) {
      dispatch_once(&qword_1EB29FFC0, &__block_literal_global_135);
    }
    id v2 = v1;
    geo_isolate_sync();
  }
}

uint64_t __GEOVLFCrowdsourcingDataCollectionEnabledRemoveDelegateListener_block_invoke(uint64_t a1)
{
  return [(id)qword_1EB29FFB8 removeObjectForKey:*(void *)(a1 + 32)];
}

void sub_189EC94A8(_Unwind_Exception *a1)
{
  maps::path_codec::geo3::RoutingPathLeg::~RoutingPathLeg(v1);
  _Unwind_Resume(a1);
}

void sub_189EC9CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17)
{
  maps::path_codec::geo3::RoutingPathLeg::~RoutingPathLeg(v17);
  _Unwind_Resume(a1);
}

void sub_189ECA114(_Unwind_Exception *a1)
{
  maps::path_codec::geo3::RoutingPathLeg::~RoutingPathLeg(v2);
  _Unwind_Resume(a1);
}

void sub_189ECA228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_189ECA2A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_189ECA314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_189ECA5F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189ECA9D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL25GEOGetGEOComposedRouteLogv_block_invoke_1()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOComposedRoute");
  id v1 = (void *)_MergedGlobals_278;
  _MergedGlobals_278 = (uint64_t)v0;
}

__n64 GEOLiveTileKeyMake(int a1, int a2, char a3, char a4, char a5, int a6)
{
  v8.i8[14] = 0;
  v8.i16[6] = 0;
  v8.i32[2] = ((a5 & 0xF) << 12) | ((a4 & 0xF) << 8) | ((unsigned __int16)(a6 & 0x3FFF) >> 6);
  v8.i64[0] = (a1 << 6) | ((unint64_t)(a2 & 0x3FFFFFF) << 32) | a3 & 0x3F | ((unint64_t)(a6 & 0x3FFF) << 58);
  result.n64_u64[0] = vextq_s8(v8, v8, 0xFuLL).u64[0];
  if (a6 == 85) {
    unsigned __int8 v7 = -110;
  }
  else {
    unsigned __int8 v7 = 18;
  }
  result.n64_u8[0] = v7;
  return result;
}

uint64_t geomapregion::Polygon::operator==(double *a1, uint64_t a2, double *a3, double *a4)
{
  if (a2 - (void)a1 == (char *)a4 - (char *)a3)
  {
    if (a3 == a4) {
      return 1;
    }
    while (vabdd_f64(*a3, *a1) < 0.00000001 && vabdd_f64(a3[1], a1[1]) < 0.00000001)
    {
      a3 += 2;
      a1 += 2;
      if (a3 == a4) {
        return 1;
      }
    }
  }
  return 0;
}

double geomapregion::Polygon::Line::segment_intersection(double *a1, double *a2)
{
  double v3 = *a1;
  double v2 = a1[1];
  double v5 = a1[2];
  double v4 = a1[3];
  double v7 = *a2;
  double v6 = a2[1];
  double v9 = a2[2];
  double v8 = a2[3];
  double v10 = *a1 - v5;
  double v11 = *a2 - v9;
  double v12 = v10 * (v6 - v8) - (v2 - v4) * v11;
  if (fabs(v12) >= 1.0e-10)
  {
    double v15 = v3 * v4 - v2 * v5;
    double v16 = v7 * v8 - v6 * v9;
    double result = (v15 * v11 - v10 * v16) / v12;
    double v13 = (v16 * -(v2 - v4) + v15 * (v6 - v8)) / v12;
  }
  else
  {
    double v13 = INFINITY;
    double result = INFINITY;
  }
  if ((*(void *)&result & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
    || vabdd_f64(result, v3) < 0.00000001 && vabdd_f64(v13, v2) < 0.00000001
    || vabdd_f64(result, v5) < 0.00000001 && vabdd_f64(v13, v4) < 0.00000001
    || vabdd_f64(result, v7) < 0.00000001 && vabdd_f64(v13, v6) < 0.00000001
    || vabdd_f64(result, v9) < 0.00000001 && vabdd_f64(v13, v8) < 0.00000001)
  {
    return INFINITY;
  }
  if (v3 == v5)
  {
    if (vabdd_f64(v3, result) < 0.00000001) {
      goto LABEL_15;
    }
LABEL_22:
    BOOL v17 = 0;
    goto LABEL_25;
  }
  double v18 = fmin(v3, v5) + -0.00000001;
  double v19 = fmax(v3, v5) + 0.00000001;
  if (v18 >= result || v19 <= result) {
    goto LABEL_22;
  }
LABEL_15:
  if (v2 == v4)
  {
    BOOL v17 = vabdd_f64(v2, v13) < 0.00000001;
  }
  else
  {
    BOOL v17 = fmin(v2, v4) + -0.00000001 < v13;
    if (fmax(v2, v4) + 0.00000001 <= v13) {
      BOOL v17 = 0;
    }
  }
LABEL_25:
  if (v7 == v9)
  {
    if (vabdd_f64(v7, result) >= 0.00000001) {
      return INFINITY;
    }
  }
  else
  {
    double v21 = fmin(v7, v9) + -0.00000001;
    double v22 = fmax(v7, v9) + 0.00000001;
    if (v21 >= result || v22 <= result) {
      return INFINITY;
    }
  }
  if (v6 == v8)
  {
    BOOL v24 = vabdd_f64(v6, v13) < 0.00000001;
  }
  else
  {
    BOOL v24 = fmin(v6, v8) + -0.00000001 < v13;
    if (fmax(v6, v8) + 0.00000001 <= v13) {
      BOOL v24 = 0;
    }
  }
  if (!v17 || !v24) {
    return INFINITY;
  }
  return result;
}

uint64_t geomapregion::Polygon::contains(const Point *this, const Point *a2, double a3, double a4)
{
  int v4 = 0;
  if (a2 == this)
  {
    unsigned int v5 = 0;
  }
  else
  {
    unsigned int v5 = 0;
    int64_t v6 = (((char *)a2 - (char *)this) >> 4) - 1;
    if (((char *)a2 - (char *)this) >> 4 != 1)
    {
      int v4 = 0;
      double v7 = *(double *)&this->v;
      double v8 = *(double *)&this[2].v;
      p_v = (double *)&this[6].v;
      do
      {
        double v10 = v7;
        double v7 = *(p_v - 1);
        double v11 = *p_v;
        double v12 = v7 - v10;
        double v13 = a3 - v10;
        double v14 = *p_v - v8;
        double v15 = (a4 - v8) * (v7 - v10) - (a3 - v10) * v14;
        if (fabs(v15) <= 1.0e-20)
        {
          double v16 = (a4 - v8) * v14 + v13 * v12;
          double v17 = v14 * v14 + v12 * v12;
          if (v16 >= 0.0 && v17 >= v16)
          {
            unsigned int v5 = 1;
            goto LABEL_19;
          }
        }
        int v19 = v11 <= a4;
        if (v15 >= 0.0) {
          int v19 = 0;
        }
        int v20 = v19 << 31 >> 31;
        BOOL v21 = v11 > a4;
        if (v15 <= 0.0) {
          BOOL v21 = 0;
        }
        if (v8 <= a4) {
          int v20 = v21;
        }
        v4 += v20;
        p_v += 2;
        double v8 = v11;
        --v6;
      }
      while (v6);
      unsigned int v5 = 0;
    }
  }
LABEL_19:
  if (v4) {
    return 1;
  }
  else {
    return v5;
  }
}

uint64_t geomapregion::Polygon::contains(geomapregion::Polygon *this, Point *a2, double *a3, double *a4)
{
  int64_t v8 = (char *)a2 - (char *)this;
  if ((unint64_t)((char *)a2 - (char *)this) > 0x2F)
  {
    if (a3 == a4)
    {
LABEL_9:
      uint64_t result = 1;
      if ((unint64_t)((char *)a4 - (char *)a3) >= 0x30 && this != (geomapregion::Polygon *)a2)
      {
        uint64_t v11 = (v8 >> 4) - 1;
        if (v8 >> 4 != 1)
        {
          uint64_t v12 = 0;
          if (a3 == a4) {
            uint64_t v13 = 0;
          }
          else {
            uint64_t v13 = (((char *)a4 - (char *)a3) >> 4) - 1;
          }
          double v14 = a3 + 2;
          do
          {
            uint64_t v15 = v12 + 1;
            uint64_t v16 = v13;
            double v17 = v14;
            while (v16)
            {
              long long v18 = *((_OWORD *)this + v15);
              v21[0] = *((_OWORD *)this + v12);
              v21[1] = v18;
              long long v19 = *(_OWORD *)v17;
              v20[0] = *((_OWORD *)v17 - 1);
              v20[1] = v19;
              v17 += 2;
              --v16;
              if ((COERCE_UNSIGNED_INT64(geomapregion::Polygon::Line::segment_intersection((double *)v21, (double *)v20)) & 0x7FFFFFFFFFFFFFFFLL) < 0x7FF0000000000000) {
                return 0;
              }
            }
            uint64_t result = 1;
            ++v12;
          }
          while (v15 != v11);
        }
      }
    }
    else
    {
      double v10 = a3;
      while ((geomapregion::Polygon::contains((const Point *)this, a2, *v10, v10[1]) & 1) != 0)
      {
        v10 += 2;
        if (v10 == a4) {
          goto LABEL_9;
        }
      }
      return 0;
    }
  }
  else
  {
    return geomapregion::Polygon::operator==((double *)this, (uint64_t)a2, a3, a4);
  }
  return result;
}

uint64_t geomapregion::Polygon::intersects(geomapregion::Polygon *this, Point *a2, double *a3, double *a4)
{
  if ((geomapregion::Polygon::operator==((double *)this, (uint64_t)a2, a3, a4) & 1) != 0
    || (geomapregion::Polygon::contains(this, a2, a3, a4) & 1) != 0
    || (geomapregion::Polygon::contains((geomapregion::Polygon *)a3, (Point *)a4, (double *)this, (double *)&a2->v) & 1) != 0)
  {
    return 1;
  }
  uint64_t result = 0;
  if (a2 != (Point *)this)
  {
    int64_t v9 = ((char *)a2 - (char *)this) >> 4;
    int64_t v10 = v9 - 1;
    if (v9 != 1)
    {
      uint64_t v11 = 0;
      if (a4 == a3) {
        uint64_t v12 = 0;
      }
      else {
        uint64_t v12 = (((char *)a4 - (char *)a3) >> 4) - 1;
      }
      uint64_t v13 = a3 + 2;
      do
      {
        uint64_t v14 = v11 + 1;
        uint64_t v15 = v12;
        uint64_t v16 = v13;
        while (v15)
        {
          long long v17 = *((_OWORD *)this + v14);
          v20[0] = *((_OWORD *)this + v11);
          v20[1] = v17;
          long long v18 = *(_OWORD *)v16;
          v19[0] = *((_OWORD *)v16 - 1);
          v19[1] = v18;
          v16 += 2;
          --v15;
          if ((COERCE_UNSIGNED_INT64(geomapregion::Polygon::Line::segment_intersection((double *)v20, (double *)v19)) & 0x7FFFFFFFFFFFFFFFLL) < 0x7FF0000000000000) {
            return 1;
          }
        }
        uint64_t result = 0;
        ++v11;
      }
      while (v14 != v10);
    }
  }
  return result;
}

geomapregion::Polygon *geomapregion::Polygon::Polygon(geomapregion::Polygon *this, GEOMapRegion *a2)
{
  uint64_t v155 = *MEMORY[0x1E4F143B8];
  double v3 = a2;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = 0;
  int v4 = [(GEOMapRegion *)v3 vertexs];
  unsigned int v5 = v4;
  if (!v4)
  {
    if (![(GEOMapRegion *)v3 hasRectangleVertices]) {
      goto LABEL_140;
    }
    [(GEOMapRegion *)v3 westLng];
    double v32 = v31;
    [(GEOMapRegion *)v3 eastLng];
    if (v32 == v33
      && ([(GEOMapRegion *)v3 northLat], double v35 = v34, [(GEOMapRegion *)v3 southLat], v35 == v36))
    {
      std::vector<geomapregion::Polygon::Point>::reserve((void **)this, 1uLL);
      [(GEOMapRegion *)v3 westLng];
      uint64_t v38 = v37;
      [(GEOMapRegion *)v3 northLat];
      uint64_t v40 = v39;
      v42 = (void *)*((void *)this + 1);
      unint64_t v41 = *((void *)this + 2);
      if ((unint64_t)v42 >= v41)
      {
        uint64_t v43 = ((uint64_t)v42 - *(void *)this) >> 4;
        unint64_t v44 = v43 + 1;
        if ((unint64_t)(v43 + 1) >> 60) {
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v45 = v41 - *(void *)this;
        if (v45 >> 3 > v44) {
          unint64_t v44 = v45 >> 3;
        }
        if ((unint64_t)v45 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v46 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v46 = v44;
        }
        v47 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<google::protobuf::Descriptor const*,int>>>(v46);
        v48 = &v47[16 * v43];
        v50 = &v47[16 * v49];
        *(void *)v48 = v38;
        *((void *)v48 + 1) = v40;
        v51 = v48 + 16;
        v53 = *(char **)this;
        v52 = (char *)*((void *)this + 1);
        if (v52 == *(char **)this) {
          goto LABEL_134;
        }
        do
        {
          *((_OWORD *)v48 - 1) = *((_OWORD *)v52 - 1);
          v48 -= 16;
          v52 -= 16;
        }
        while (v52 != v53);
LABEL_133:
        v52 = *(char **)this;
LABEL_134:
        *(void *)this = v48;
        *((void *)this + 1) = v51;
        *((void *)this + 2) = v50;
        if (v52) {
          operator delete(v52);
        }
        goto LABEL_136;
      }
    }
    else
    {
      std::vector<geomapregion::Polygon::Point>::reserve((void **)this, 5uLL);
      [(GEOMapRegion *)v3 westLng];
      uint64_t v62 = v61;
      [(GEOMapRegion *)v3 northLat];
      uint64_t v64 = v63;
      v66 = (void *)*((void *)this + 1);
      unint64_t v65 = *((void *)this + 2);
      if ((unint64_t)v66 >= v65)
      {
        uint64_t v78 = ((uint64_t)v66 - *(void *)this) >> 4;
        unint64_t v79 = v78 + 1;
        if ((unint64_t)(v78 + 1) >> 60) {
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v80 = v65 - *(void *)this;
        if (v80 >> 3 > v79) {
          unint64_t v79 = v80 >> 3;
        }
        if ((unint64_t)v80 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v81 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v81 = v79;
        }
        v82 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<google::protobuf::Descriptor const*,int>>>(v81);
        v83 = &v82[16 * v78];
        v85 = &v82[16 * v84];
        *(void *)v83 = v62;
        *((void *)v83 + 1) = v64;
        v67 = v83 + 16;
        v87 = *(char **)this;
        v86 = (char *)*((void *)this + 1);
        if (v86 != *(char **)this)
        {
          do
          {
            *((_OWORD *)v83 - 1) = *((_OWORD *)v86 - 1);
            v83 -= 16;
            v86 -= 16;
          }
          while (v86 != v87);
          v86 = *(char **)this;
        }
        *(void *)this = v83;
        *((void *)this + 1) = v67;
        *((void *)this + 2) = v85;
        if (v86) {
          operator delete(v86);
        }
      }
      else
      {
        void *v66 = v62;
        v66[1] = v63;
        v67 = v66 + 2;
      }
      *((void *)this + 1) = v67;
      [(GEOMapRegion *)v3 eastLng];
      uint64_t v89 = v88;
      [(GEOMapRegion *)v3 northLat];
      uint64_t v91 = v90;
      v93 = (void *)*((void *)this + 1);
      unint64_t v92 = *((void *)this + 2);
      if ((unint64_t)v93 >= v92)
      {
        uint64_t v95 = ((uint64_t)v93 - *(void *)this) >> 4;
        unint64_t v96 = v95 + 1;
        if ((unint64_t)(v95 + 1) >> 60) {
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v97 = v92 - *(void *)this;
        if (v97 >> 3 > v96) {
          unint64_t v96 = v97 >> 3;
        }
        if ((unint64_t)v97 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v98 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v98 = v96;
        }
        v99 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<google::protobuf::Descriptor const*,int>>>(v98);
        v100 = &v99[16 * v95];
        v102 = &v99[16 * v101];
        *(void *)v100 = v89;
        *((void *)v100 + 1) = v91;
        v94 = v100 + 16;
        v104 = *(char **)this;
        v103 = (char *)*((void *)this + 1);
        if (v103 != *(char **)this)
        {
          do
          {
            *((_OWORD *)v100 - 1) = *((_OWORD *)v103 - 1);
            v100 -= 16;
            v103 -= 16;
          }
          while (v103 != v104);
          v103 = *(char **)this;
        }
        *(void *)this = v100;
        *((void *)this + 1) = v94;
        *((void *)this + 2) = v102;
        if (v103) {
          operator delete(v103);
        }
      }
      else
      {
        void *v93 = v89;
        v93[1] = v90;
        v94 = v93 + 2;
      }
      *((void *)this + 1) = v94;
      [(GEOMapRegion *)v3 eastLng];
      uint64_t v106 = v105;
      [(GEOMapRegion *)v3 southLat];
      uint64_t v108 = v107;
      v110 = (void *)*((void *)this + 1);
      unint64_t v109 = *((void *)this + 2);
      if ((unint64_t)v110 >= v109)
      {
        uint64_t v112 = ((uint64_t)v110 - *(void *)this) >> 4;
        unint64_t v113 = v112 + 1;
        if ((unint64_t)(v112 + 1) >> 60) {
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v114 = v109 - *(void *)this;
        if (v114 >> 3 > v113) {
          unint64_t v113 = v114 >> 3;
        }
        if ((unint64_t)v114 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v115 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v115 = v113;
        }
        v116 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<google::protobuf::Descriptor const*,int>>>(v115);
        v117 = &v116[16 * v112];
        v119 = &v116[16 * v118];
        *(void *)v117 = v106;
        *((void *)v117 + 1) = v108;
        v111 = v117 + 16;
        v121 = *(char **)this;
        v120 = (char *)*((void *)this + 1);
        if (v120 != *(char **)this)
        {
          do
          {
            *((_OWORD *)v117 - 1) = *((_OWORD *)v120 - 1);
            v117 -= 16;
            v120 -= 16;
          }
          while (v120 != v121);
          v120 = *(char **)this;
        }
        *(void *)this = v117;
        *((void *)this + 1) = v111;
        *((void *)this + 2) = v119;
        if (v120) {
          operator delete(v120);
        }
      }
      else
      {
        void *v110 = v106;
        v110[1] = v107;
        v111 = v110 + 2;
      }
      *((void *)this + 1) = v111;
      [(GEOMapRegion *)v3 westLng];
      uint64_t v123 = v122;
      [(GEOMapRegion *)v3 southLat];
      uint64_t v125 = v124;
      v127 = (void *)*((void *)this + 1);
      unint64_t v126 = *((void *)this + 2);
      if ((unint64_t)v127 >= v126)
      {
        uint64_t v129 = ((uint64_t)v127 - *(void *)this) >> 4;
        unint64_t v130 = v129 + 1;
        if ((unint64_t)(v129 + 1) >> 60) {
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v131 = v126 - *(void *)this;
        if (v131 >> 3 > v130) {
          unint64_t v130 = v131 >> 3;
        }
        if ((unint64_t)v131 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v132 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v132 = v130;
        }
        v133 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<google::protobuf::Descriptor const*,int>>>(v132);
        v134 = &v133[16 * v129];
        v136 = &v133[16 * v135];
        *(void *)v134 = v123;
        *((void *)v134 + 1) = v125;
        v128 = v134 + 16;
        v138 = *(char **)this;
        v137 = (char *)*((void *)this + 1);
        if (v137 != *(char **)this)
        {
          do
          {
            *((_OWORD *)v134 - 1) = *((_OWORD *)v137 - 1);
            v134 -= 16;
            v137 -= 16;
          }
          while (v137 != v138);
          v137 = *(char **)this;
        }
        *(void *)this = v134;
        *((void *)this + 1) = v128;
        *((void *)this + 2) = v136;
        if (v137) {
          operator delete(v137);
        }
      }
      else
      {
        void *v127 = v123;
        v127[1] = v124;
        v128 = v127 + 2;
      }
      *((void *)this + 1) = v128;
      [(GEOMapRegion *)v3 westLng];
      uint64_t v38 = v139;
      [(GEOMapRegion *)v3 northLat];
      uint64_t v40 = v140;
      v42 = (void *)*((void *)this + 1);
      unint64_t v141 = *((void *)this + 2);
      if ((unint64_t)v42 >= v141)
      {
        uint64_t v142 = ((uint64_t)v42 - *(void *)this) >> 4;
        unint64_t v143 = v142 + 1;
        if ((unint64_t)(v142 + 1) >> 60) {
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v144 = v141 - *(void *)this;
        if (v144 >> 3 > v143) {
          unint64_t v143 = v144 >> 3;
        }
        if ((unint64_t)v144 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v145 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v145 = v143;
        }
        v146 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<google::protobuf::Descriptor const*,int>>>(v145);
        v48 = &v146[16 * v142];
        v50 = &v146[16 * v147];
        *(void *)v48 = v38;
        *((void *)v48 + 1) = v40;
        v51 = v48 + 16;
        v148 = *(char **)this;
        v52 = (char *)*((void *)this + 1);
        if (v52 == *(char **)this) {
          goto LABEL_134;
        }
        do
        {
          *((_OWORD *)v48 - 1) = *((_OWORD *)v52 - 1);
          v48 -= 16;
          v52 -= 16;
        }
        while (v52 != v148);
        goto LABEL_133;
      }
    }
    void *v42 = v38;
    v42[1] = v40;
    v51 = v42 + 2;
LABEL_136:
    *((void *)this + 1) = v51;
    goto LABEL_140;
  }
  std::vector<geomapregion::Polygon::Point>::reserve((void **)this, [v4 count]);
  long long v152 = 0u;
  long long v153 = 0u;
  long long v150 = 0u;
  long long v151 = 0u;
  id v6 = v5;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v150 objects:v154 count:16];
  if (v7)
  {
    uint64_t v8 = *(void *)v151;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v151 != v8) {
          objc_enumerationMutation(v6);
        }
        int64_t v10 = *(void **)(*((void *)&v150 + 1) + 8 * i);
        objc_msgSend(v10, "lng", (void)v150);
        uint64_t v12 = v11;
        [v10 lat];
        uint64_t v14 = v13;
        uint64_t v16 = (void *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v16 >= v15)
        {
          uint64_t v18 = ((uint64_t)v16 - *(void *)this) >> 4;
          unint64_t v19 = v18 + 1;
          if ((unint64_t)(v18 + 1) >> 60) {
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          }
          uint64_t v20 = v15 - *(void *)this;
          if (v20 >> 3 > v19) {
            unint64_t v19 = v20 >> 3;
          }
          if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v21 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v21 = v19;
          }
          double v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<google::protobuf::Descriptor const*,int>>>(v21);
          BOOL v24 = &v22[16 * v18];
          *(void *)BOOL v24 = v12;
          *((void *)v24 + 1) = v14;
          unint64_t v26 = *(char **)this;
          id v25 = (char *)*((void *)this + 1);
          uint8x8_t v27 = v24;
          if (v25 != *(char **)this)
          {
            do
            {
              *((_OWORD *)v27 - 1) = *((_OWORD *)v25 - 1);
              v27 -= 16;
              v25 -= 16;
            }
            while (v25 != v26);
            id v25 = *(char **)this;
          }
          long long v17 = v24 + 16;
          *(void *)this = v27;
          *((void *)this + 1) = v24 + 16;
          *((void *)this + 2) = &v22[16 * v23];
          if (v25) {
            operator delete(v25);
          }
        }
        else
        {
          *uint64_t v16 = v12;
          v16[1] = v13;
          long long v17 = v16 + 2;
        }
        *((void *)this + 1) = v17;
      }
      uint64_t v7 = [v6 countByEnumeratingWithState:&v150 objects:v154 count:16];
    }
    while (v7);
  }

  uint8x8_t v29 = *(double **)this;
  unint64_t v28 = (_OWORD *)*((void *)this + 1);
  if (*(_OWORD **)this == v28)
  {
    v54 = *(double **)this;
    v55 = *(double **)this;
  }
  else
  {
    unint64_t v30 = *((void *)this + 2);
    if ((unint64_t)v28 >= v30)
    {
      uint64_t v56 = ((char *)v28 - (char *)v29) >> 4;
      unint64_t v57 = v56 + 1;
      if ((unint64_t)(v56 + 1) >> 60) {
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v58 = v30 - (void)v29;
      if (v58 >> 3 > v57) {
        unint64_t v57 = v58 >> 3;
      }
      if ((unint64_t)v58 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v59 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v59 = v57;
      }
      if (v59) {
        unint64_t v59 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<google::protobuf::Descriptor const*,int>>>(v59);
      }
      else {
        uint64_t v60 = 0;
      }
      v68 = (_OWORD *)(v59 + 16 * v56);
      unint64_t v69 = v59 + 16 * v60;
      _OWORD *v68 = *(_OWORD *)v29;
      uint8x8_t v29 = (double *)(v68 + 1);
      v71 = *(char **)this;
      v70 = (char *)*((void *)this + 1);
      if (v70 != *(char **)this)
      {
        do
        {
          *--v68 = *((_OWORD *)v70 - 1);
          v70 -= 16;
        }
        while (v70 != v71);
        v70 = *(char **)this;
      }
      *(void *)this = v68;
      *((void *)this + 1) = v29;
      *((void *)this + 2) = v69;
      if (v70) {
        operator delete(v70);
      }
    }
    else
    {
      *unint64_t v28 = *(_OWORD *)v29;
      uint8x8_t v29 = (double *)(v28 + 1);
    }
    *((void *)this + 1) = v29;
    v55 = *(double **)this;
    v54 = v29;
  }
  v72 = v55 + 2;
  if (v55 != v54 && v72 != v54)
  {
    double v74 = *v55;
    while (1)
    {
      double v75 = v74;
      double v74 = *v72;
      if (vabdd_f64(v75, *v72) < 0.00000001 && vabdd_f64(*(v72 - 1), v72[1]) < 0.00000001) {
        break;
      }
      v72 += 2;
      v55 += 2;
      if (v72 == v54) {
        goto LABEL_138;
      }
    }
    v76 = v72 - 2;
    if (v72 - 2 == v54)
    {
      v54 = v55;
    }
    else
    {
      v77 = v72 + 2;
      if (v72 + 2 != v54)
      {
        do
        {
          if (vabdd_f64(*v76, *v77) >= 0.00000001 || vabdd_f64(v76[1], v77[1]) >= 0.00000001)
          {
            *((_OWORD *)v76 + 1) = *(_OWORD *)v77;
            v76 += 2;
          }
          v77 += 2;
        }
        while (v77 != v54);
        uint8x8_t v29 = (double *)*((void *)this + 1);
      }
      v54 = v76 + 2;
    }
  }
LABEL_138:
  if (v29 != v54) {
    *((void *)this + 1) = v54;
  }
LABEL_140:

  return this;
}

void sub_189ECC190(_Unwind_Exception *a1)
{
  unsigned int v5 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v5;
    operator delete(v5);
  }

  _Unwind_Resume(a1);
}

void std::vector<geomapregion::Polygon::Point>::reserve(void **a1, unint64_t a2)
{
  if (a2 > ((unsigned char *)a1[2] - (unsigned char *)*a1) >> 4)
  {
    if (a2 >> 60) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    int64_t v3 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    int v4 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<google::protobuf::Descriptor const*,int>>>(a2);
    unsigned int v5 = &v4[v3 & 0xFFFFFFFFFFFFFFF0];
    uint64_t v7 = &v4[16 * v6];
    int64_t v9 = (char *)*a1;
    uint64_t v8 = (char *)a1[1];
    int64_t v10 = v5;
    if (v8 != *a1)
    {
      do
      {
        *((_OWORD *)v10 - 1) = *((_OWORD *)v8 - 1);
        v10 -= 16;
        v8 -= 16;
      }
      while (v8 != v9);
      uint64_t v8 = (char *)*a1;
    }
    *a1 = v10;
    a1[1] = v5;
    a1[2] = v7;
    if (v8)
    {
      operator delete(v8);
    }
  }
}

void **geomapregion::Polygon::Polygon(void **a1, double *a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  double v3 = *a2;
  double v4 = a2[1];
  double v5 = fabs(v4);
  if (fabs(*a2) != INFINITY && v5 != INFINITY)
  {
    double v8 = a2[2];
    double v7 = a2[3];
    long double v9 = GEOCoordinate2DForMapPoint(*a2, a2[1]);
    uint64_t v11 = v10;
    long double v12 = GEOCoordinate2DForMapPoint(v3 + v8, v4 + v7);
    uint64_t v14 = v13;
    std::vector<geomapregion::Polygon::Point>::reserve(a1, 5uLL);
    uint64_t v16 = (char *)a1[1];
    unint64_t v15 = (char *)a1[2];
    if (v16 >= v15)
    {
      uint64_t v18 = (v16 - (unsigned char *)*a1) >> 4;
      unint64_t v19 = v18 + 1;
      if ((unint64_t)(v18 + 1) >> 60) {
        goto LABEL_72;
      }
      uint64_t v20 = v15 - (unsigned char *)*a1;
      if (v20 >> 3 > v19) {
        unint64_t v19 = v20 >> 3;
      }
      if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v21 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v21 = v19;
      }
      double v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<google::protobuf::Descriptor const*,int>>>(v21);
      uint64_t v23 = &v22[16 * v18];
      unint64_t v15 = &v22[16 * v24];
      *(void *)uint64_t v23 = v11;
      *((long double *)v23 + 1) = v9;
      long long v17 = v23 + 16;
      unint64_t v26 = (char *)*a1;
      id v25 = (char *)a1[1];
      if (v25 != *a1)
      {
        do
        {
          *((_OWORD *)v23 - 1) = *((_OWORD *)v25 - 1);
          v23 -= 16;
          v25 -= 16;
        }
        while (v25 != v26);
        id v25 = (char *)*a1;
      }
      *a1 = v23;
      a1[1] = v17;
      a1[2] = v15;
      if (v25)
      {
        operator delete(v25);
        unint64_t v15 = (char *)a1[2];
      }
    }
    else
    {
      *(void *)uint64_t v16 = v11;
      *((long double *)v16 + 1) = v9;
      long long v17 = v16 + 16;
    }
    a1[1] = v17;
    if (v17 >= v15)
    {
      uint64_t v28 = (v17 - (unsigned char *)*a1) >> 4;
      if ((unint64_t)(v28 + 1) >> 60) {
        goto LABEL_72;
      }
      uint64_t v29 = v15 - (unsigned char *)*a1;
      uint64_t v30 = v29 >> 3;
      if (v29 >> 3 <= (unint64_t)(v28 + 1)) {
        uint64_t v30 = v28 + 1;
      }
      if ((unint64_t)v29 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v31 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v31 = v30;
      }
      double v32 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<google::protobuf::Descriptor const*,int>>>(v31);
      double v33 = &v32[16 * v28];
      unint64_t v15 = &v32[16 * v34];
      *(void *)double v33 = v11;
      *((long double *)v33 + 1) = v12;
      uint8x8_t v27 = v33 + 16;
      double v36 = (char *)*a1;
      double v35 = (char *)a1[1];
      if (v35 != *a1)
      {
        do
        {
          *((_OWORD *)v33 - 1) = *((_OWORD *)v35 - 1);
          v33 -= 16;
          v35 -= 16;
        }
        while (v35 != v36);
        double v35 = (char *)*a1;
      }
      *a1 = v33;
      a1[1] = v27;
      a1[2] = v15;
      if (v35)
      {
        operator delete(v35);
        unint64_t v15 = (char *)a1[2];
      }
    }
    else
    {
      *(void *)long long v17 = v11;
      *((long double *)v17 + 1) = v12;
      uint8x8_t v27 = v17 + 16;
    }
    a1[1] = v27;
    if (v27 >= v15)
    {
      uint64_t v38 = (v27 - (unsigned char *)*a1) >> 4;
      if ((unint64_t)(v38 + 1) >> 60) {
        goto LABEL_72;
      }
      uint64_t v39 = v15 - (unsigned char *)*a1;
      uint64_t v40 = v39 >> 3;
      if (v39 >> 3 <= (unint64_t)(v38 + 1)) {
        uint64_t v40 = v38 + 1;
      }
      if ((unint64_t)v39 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v41 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v41 = v40;
      }
      v42 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<google::protobuf::Descriptor const*,int>>>(v41);
      uint64_t v43 = &v42[16 * v38];
      unint64_t v15 = &v42[16 * v44];
      *(void *)uint64_t v43 = v14;
      *((long double *)v43 + 1) = v12;
      uint64_t v37 = (long double *)(v43 + 16);
      unint64_t v46 = (char *)*a1;
      uint64_t v45 = (char *)a1[1];
      if (v45 != *a1)
      {
        do
        {
          *((_OWORD *)v43 - 1) = *((_OWORD *)v45 - 1);
          v43 -= 16;
          v45 -= 16;
        }
        while (v45 != v46);
        uint64_t v45 = (char *)*a1;
      }
      *a1 = v43;
      a1[1] = v37;
      a1[2] = v15;
      if (v45)
      {
        operator delete(v45);
        unint64_t v15 = (char *)a1[2];
      }
    }
    else
    {
      *(void *)uint8x8_t v27 = v14;
      *((long double *)v27 + 1) = v12;
      uint64_t v37 = (long double *)(v27 + 16);
    }
    a1[1] = v37;
    if (v37 >= (long double *)v15)
    {
      uint64_t v48 = ((char *)v37 - (unsigned char *)*a1) >> 4;
      if ((unint64_t)(v48 + 1) >> 60) {
        goto LABEL_72;
      }
      uint64_t v49 = v15 - (unsigned char *)*a1;
      uint64_t v50 = v49 >> 3;
      if (v49 >> 3 <= (unint64_t)(v48 + 1)) {
        uint64_t v50 = v48 + 1;
      }
      if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v51 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v51 = v50;
      }
      v52 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<google::protobuf::Descriptor const*,int>>>(v51);
      v53 = (long double *)&v52[16 * v48];
      unint64_t v15 = &v52[16 * v54];
      *(void *)v53 = v14;
      v53[1] = v9;
      v47 = v53 + 2;
      uint64_t v56 = (char *)*a1;
      v55 = (char *)a1[1];
      if (v55 != *a1)
      {
        do
        {
          *((_OWORD *)v53 - 1) = *((_OWORD *)v55 - 1);
          v53 -= 2;
          v55 -= 16;
        }
        while (v55 != v56);
        v55 = (char *)*a1;
      }
      *a1 = v53;
      a1[1] = v47;
      a1[2] = v15;
      if (v55)
      {
        operator delete(v55);
        unint64_t v15 = (char *)a1[2];
      }
    }
    else
    {
      *(void *)uint64_t v37 = v14;
      v37[1] = v9;
      v47 = v37 + 2;
    }
    a1[1] = v47;
    if (v47 < (long double *)v15)
    {
      *(void *)v47 = v11;
      v47[1] = v9;
      unint64_t v57 = (char *)(v47 + 2);
LABEL_70:
      a1[1] = v57;
      return a1;
    }
    uint64_t v58 = ((char *)v47 - (unsigned char *)*a1) >> 4;
    if (!((unint64_t)(v58 + 1) >> 60))
    {
      uint64_t v59 = v15 - (unsigned char *)*a1;
      uint64_t v60 = v59 >> 3;
      if (v59 >> 3 <= (unint64_t)(v58 + 1)) {
        uint64_t v60 = v58 + 1;
      }
      if ((unint64_t)v59 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v61 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v61 = v60;
      }
      uint64_t v62 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<google::protobuf::Descriptor const*,int>>>(v61);
      uint64_t v63 = (long double *)&v62[16 * v58];
      unint64_t v65 = &v62[16 * v64];
      *(void *)uint64_t v63 = v11;
      v63[1] = v9;
      unint64_t v57 = (char *)(v63 + 2);
      v67 = (char *)*a1;
      v66 = (char *)a1[1];
      if (v66 != *a1)
      {
        do
        {
          *((_OWORD *)v63 - 1) = *((_OWORD *)v66 - 1);
          v63 -= 2;
          v66 -= 16;
        }
        while (v66 != v67);
        v66 = (char *)*a1;
      }
      *a1 = v63;
      a1[1] = v57;
      a1[2] = v65;
      if (v66) {
        operator delete(v66);
      }
      goto LABEL_70;
    }
LABEL_72:
    std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
  }
  return a1;
}

void sub_189ECC69C(_Unwind_Exception *exception_object)
{
  double v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_189ECC74C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_189ECC808(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_189ECCBA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26)
{
  if (__p) {
    operator delete(__p);
  }
  if (a25) {
    operator delete(a25);
  }

  _Unwind_Resume(a1);
}

void sub_189ECCDD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }
  if (a16) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

void sub_189ECCFFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25)
{
  if (__p) {
    operator delete(__p);
  }
  if (a24) {
    operator delete(a24);
  }
  _Unwind_Resume(exception_object);
}

void sub_189ECD378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

id GEOTilePackageBaseAndLocalization(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if ([v4 length])
  {
    int v7 = [v3 length] + 8;
    objc_msgSend(MEMORY[0x1E4F1CA58], "dataWithCapacity:", objc_msgSend(v3, "length") + objc_msgSend(v4, "length") + 8);
    id v5 = (id)objc_claimAutoreleasedReturnValue();
    [v5 appendBytes:&header length:4];
    [v5 appendBytes:&v7 length:4];
    [v5 appendData:v3];
    [v5 appendData:v4];
  }
  else
  {
    id v5 = v3;
  }

  return v5;
}

uint64_t GEOTransitIncidentEntityAffectsSequence(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = [v3 muid];
  uint64_t v6 = [v4 line];
  if (v5 == [v6 muid])
  {
  }
  else
  {
    uint64_t v7 = [v3 muid];
    double v8 = [v4 line];
    long double v9 = [v8 system];
    uint64_t v10 = [v9 muid];

    if (v7 != v10)
    {
      uint64_t v15 = 0;
      goto LABEL_12;
    }
  }
  uint64_t v11 = [v3 nextStopIDs];
  if ([v11 count])
  {
    long double v12 = [v4 nextStopIDs];
    if ([v12 count])
    {
      uint64_t v13 = [v3 nextStopIDs];
      uint64_t v14 = [v4 nextStopIDs];
      uint64_t v15 = [v13 intersectsSet:v14];
    }
    else
    {
      uint64_t v15 = 1;
    }
  }
  else
  {
    uint64_t v15 = 1;
  }

LABEL_12:
  return v15;
}

BOOL GEOLPRBoundingBoxE7ReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            *(unsigned char *)(a1 + 24) |= 4u;
            uint64_t v18 = *v4;
            unint64_t v19 = *(void *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v20 = v19 + 4, v19 + 4 <= *(void *)&v3[*v5]))
            {
              int v21 = *(_DWORD *)(*(void *)&v3[*v7] + v19);
              *(void *)&v3[v18] = v20;
            }
            else
            {
              int v21 = 0;
              v3[*v6] = 1;
            }
            unint64_t v31 = &OBJC_IVAR___GEOLPRBoundingBoxE7__southLatE7;
            goto LABEL_42;
          case 2u:
            *(unsigned char *)(a1 + 24) |= 8u;
            uint64_t v22 = *v4;
            unint64_t v23 = *(void *)&v3[v22];
            if (v23 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v24 = v23 + 4, v23 + 4 <= *(void *)&v3[*v5]))
            {
              int v21 = *(_DWORD *)(*(void *)&v3[*v7] + v23);
              *(void *)&v3[v22] = v24;
            }
            else
            {
              int v21 = 0;
              v3[*v6] = 1;
            }
            unint64_t v31 = &OBJC_IVAR___GEOLPRBoundingBoxE7__westLngE7;
            goto LABEL_42;
          case 3u:
            *(unsigned char *)(a1 + 24) |= 2u;
            uint64_t v25 = *v4;
            unint64_t v26 = *(void *)&v3[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v27 = v26 + 4, v26 + 4 <= *(void *)&v3[*v5]))
            {
              int v21 = *(_DWORD *)(*(void *)&v3[*v7] + v26);
              *(void *)&v3[v25] = v27;
            }
            else
            {
              int v21 = 0;
              v3[*v6] = 1;
            }
            unint64_t v31 = &OBJC_IVAR___GEOLPRBoundingBoxE7__northLatE7;
            goto LABEL_42;
          case 4u:
            *(unsigned char *)(a1 + 24) |= 1u;
            uint64_t v28 = *v4;
            unint64_t v29 = *(void *)&v3[v28];
            if (v29 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v30 = v29 + 4, v29 + 4 <= *(void *)&v3[*v5]))
            {
              int v21 = *(_DWORD *)(*(void *)&v3[*v7] + v29);
              *(void *)&v3[v28] = v30;
            }
            else
            {
              int v21 = 0;
              v3[*v6] = 1;
            }
            unint64_t v31 = &OBJC_IVAR___GEOLPRBoundingBoxE7__eastLngE7;
LABEL_42:
            *(_DWORD *)(a1 + *v31) = v21;
            break;
          default:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_45;
            }
            break;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v32 = v3[*v6] == 0;
  }
  else
  {
LABEL_45:
    BOOL v32 = 0;
  }
  objc_sync_exit(v3);

  return v32;
}

void sub_189ECFC0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRBoundingBoxE7ReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLPRBoundingBoxE7ReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189ECFC80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRBoundingBoxE7IsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  double v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
          if (v16 != 5) {
            goto LABEL_29;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v20 = v19 + 4, v20 <= *(void *)&a1[*v3])) {
            *(void *)&a1[v18] = v20;
          }
          else {
            a1[v14] = 1;
          }
          goto LABEL_26;
        default:
          if (!PBReaderSkipValueWithTag())
          {
LABEL_29:
            BOOL v21 = 0;
            goto LABEL_28;
          }
LABEL_26:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_27;
          }
          break;
      }
    }
  }
LABEL_27:
  BOOL v21 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v21;
}

void sub_189ED059C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateValidationRuleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  unsigned int v10 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFAFFFCFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 76) & 8) != 0));
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 3);
  if (v9 & 1 | (v10 > 3) | v8 & 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  uint64_t v14 = (int *)MEMORY[0x1E4F940E8];
  int v15 = (int *)MEMORY[0x1E4F940C8];
  int v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_96;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      BOOL v24 = v18++ >= 9;
      if (v24)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_96:
      if (v12)
      {
        char v54 = 1;
        goto LABEL_106;
      }
      if (v13)
      {
        while (1)
        {
          int v55 = *v13++;
          char v56 = 16;
          switch(v55)
          {
            case 0:
              goto LABEL_107;
            case 1:
              goto LABEL_104;
            case 4:
              char v56 = 32;
              goto LABEL_104;
            case 5:
              char v56 = 64;
              goto LABEL_104;
            case 6:
              char v56 = 4;
              goto LABEL_104;
            case 7:
              char v56 = 8;
LABEL_104:
              *(unsigned char *)(a1 + 76) |= v56;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_107;
    }
    unint64_t v27 = v19 >> 3;
    BOOL v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      unint64_t v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if (!v28) {
          goto LABEL_78;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 32;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_113;
        }
        char v53 = 8 * *(unsigned char *)(a1 + 76);
        goto LABEL_93;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_78;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        while (2)
        {
          uint64_t v39 = *v14;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(v3 + *v16) + v40);
            *(void *)(v3 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              BOOL v24 = v37++ >= 9;
              if (v24)
              {
                LODWORD(v38) = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v38) = 0;
        }
LABEL_83:
        uint64_t v52 = 72;
        goto LABEL_88;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_78;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        while (2)
        {
          uint64_t v45 = *v14;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v16) + v46);
            *(void *)(v3 + v45) = v47;
            v38 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              BOOL v24 = v44++ >= 9;
              if (v24)
              {
                LODWORD(v38) = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v38) = 0;
        }
LABEL_87:
        uint64_t v52 = 68;
LABEL_88:
        *(_DWORD *)(a1 + v52) = v38;
        goto LABEL_95;
      case 4:
        if (!v28) {
          goto LABEL_78;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_113;
          }
          char v53 = 4 * *(unsigned char *)(a1 + 76);
LABEL_93:
          v7 += v53 >> 7;
        }
        else
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 40;
LABEL_62:
          uint64_t v49 = *(void **)(a1 + v34);
          *(void *)(a1 + v34) = v33;

          --v7;
        }
        goto LABEL_94;
      case 5:
        if (!v28 || (*(unsigned char *)(a1 + 76) & 0x40) != 0) {
          goto LABEL_78;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_113;
        }
        uint64_t v59 = objc_alloc_init(GEOLPRValidationRange);
        if (GEOLPRValidationRangeReadAllFrom((uint64_t)v59, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOLPRLicensePlateValidationRule _addNoFlagsValidationRanges:](a1, v59);
LABEL_76:
          uint64_t v50 = v59;
LABEL_77:

LABEL_94:
          int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
          if (!(v12 & 1 | (v7 != 0))) {
            goto LABEL_96;
          }
          continue;
        }

LABEL_113:
        char v54 = 0;
        int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_106:
        *(unsigned char *)(a1 + 76) |= 0x10u;
        *(unsigned char *)(a1 + 76) |= 0x20u;
        *(unsigned char *)(a1 + 76) |= 0x40u;
        *(unsigned char *)(a1 + 76) |= 4u;
        *(unsigned char *)(a1 + 76) |= 8u;
        if (v54)
        {
LABEL_107:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_108;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v12)
          {
LABEL_108:
            unint64_t v57 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 6:
        if (!v28 || (*(unsigned char *)(a1 + 76) & 4) != 0) {
          goto LABEL_78;
        }
        PBReaderReadString();
        uint64_t v50 = (GEOLPRValidationRange *)objc_claimAutoreleasedReturnValue();
        if (!v50) {
          goto LABEL_77;
        }
        uint64_t v59 = v50;
        -[GEOLPRLicensePlateValidationRule _addNoFlagsImpliedPowerTypeKey:](a1, v50);
        goto LABEL_76;
      case 7:
        if (!v28 || (*(unsigned char *)(a1 + 76) & 8) != 0)
        {
LABEL_78:
          char v51 = PBReaderSkipValueWithTag();
          int v15 = (int *)MEMORY[0x1E4F940C8];
          if ((v51 & 1) == 0)
          {
LABEL_105:
            char v54 = 0;
            goto LABEL_106;
          }
          goto LABEL_95;
        }
        PBReaderReadString();
        uint64_t v50 = (GEOLPRValidationRange *)objc_claimAutoreleasedReturnValue();
        if (!v50) {
          goto LABEL_77;
        }
        uint64_t v59 = v50;
        -[GEOLPRLicensePlateValidationRule _addNoFlagsImpliedVehicleTypeKey:](a1, v50);
        goto LABEL_76;
      default:
        int v35 = PBReaderSkipValueWithTag();
        int v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v35) {
          goto LABEL_105;
        }
        goto LABEL_95;
    }
  }
}

void sub_189ED0EFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ED106C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ED1430(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ED17F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ED2540(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLPRLicensePlateValidationRuleCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 48);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOLPRLicensePlateValidationRuleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRLicensePlateValidationRuleReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOLPRLicensePlateValidationRuleReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOLPRLicensePlateValidationRuleReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRLicensePlateValidationRuleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLPRLicensePlateValidationRuleCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189ED27D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRLicensePlateValidationRuleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRLicensePlateValidationRuleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189ED2838(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRLicensePlateValidationRuleIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_51;
          }
          goto LABEL_47;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_51;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_37;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_48;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_51;
          }
          unsigned int v23 = 0;
          break;
        case 4u:
          if (v15 == 2) {
            goto LABEL_47;
          }
          goto LABEL_51;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLPRValidationRangeIsValid(a1)) {
            goto LABEL_51;
          }
          PBReaderRecallMark();
          continue;
        case 6u:
          if (v15 == 2) {
            goto LABEL_47;
          }
          goto LABEL_51;
        case 7u:
          if (v15 == 2) {
            goto LABEL_47;
          }
          goto LABEL_51;
        default:
LABEL_47:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_51:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_48;
      }
LABEL_37:
      a1[*v4] = 1;
LABEL_48:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOLPRValidationRangeIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 4)
      {
        if (v15 != 2) {
          goto LABEL_44;
        }
      }
      else
      {
        if (v17 == 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_39;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_41;
          }
        }
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_41;
          }
LABEL_39:
          a1[*v4] = 1;
          continue;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_44:
        BOOL v29 = 0;
        goto LABEL_43;
      }
LABEL_41:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v29 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v29;
}

void sub_189ED315C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRLicensePlateValidationRuleIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = *(unsigned __int8 *)(a1 + 76) > 3u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189ED3804(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ED3F48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRPowerTypeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 2);
        if ((v14 | v8)) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        LODWORD(v16) = v14;
        char v46 = (v15 == 0) | v14;
        unint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_64;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_64:
      if (v16)
      {
        char v40 = 1;
        goto LABEL_76;
      }
      if (v15)
      {
        while (1)
        {
          int v41 = *v15++;
          char v42 = 1;
          switch(v41)
          {
            case 0:
              goto LABEL_77;
            case 1:
              goto LABEL_71;
            case 2:
              char v42 = 8;
              goto LABEL_71;
            case 3:
              char v42 = 2;
              goto LABEL_71;
            case 4:
              char v42 = 4;
LABEL_71:
              *(unsigned char *)(a1 + 60) |= v42;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_77;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v46 & 1) == 0)
    {
      BOOL v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_58;
        }
        if ((*(unsigned char *)(a1 + 60) & 1) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          unsigned int v37 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v36;

          --v7;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_73;
        }
        v7 -= *(unsigned char *)(a1 + 60) & 1;
        goto LABEL_62;
      case 2:
        if (!v31 || (*(unsigned char *)(a1 + 60) & 8) != 0) {
          goto LABEL_58;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_73;
        }
        int v45 = (int)v16;
        int v16 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_74;
        }
        PBReaderRecallMark();
        -[GEOLPRPowerType _addNoFlagsTitle:](a1, v16);
        goto LABEL_57;
      case 3:
        if (!v31 || (*(unsigned char *)(a1 + 60) & 2) != 0) {
          goto LABEL_58;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_73;
        }
        int v45 = (int)v16;
        int v16 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_74;
        }
        PBReaderRecallMark();
        -[GEOLPRPowerType _addNoFlagsSubtitle:](a1, v16);
        goto LABEL_57;
      case 4:
        if (!v31 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_58:
          char v39 = PBReaderSkipValueWithTag();
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v39 & 1) == 0)
          {
LABEL_72:
            char v40 = 0;
            goto LABEL_76;
          }
          goto LABEL_63;
        }
        if (PBReaderPlaceMark())
        {
          int v45 = (int)v16;
          int v16 = objc_alloc_init(GEOLPRPowerType);
          if (!GEOLPRPowerTypeReadAllFrom())
          {
LABEL_74:

            char v40 = 0;
            LOBYTE(v16) = v45;
            goto LABEL_75;
          }
          PBReaderRecallMark();
          -[GEOLPRPowerType _addNoFlagsSubtypes:](a1, v16);
LABEL_57:

          LODWORD(v16) = v45;
LABEL_62:
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_63:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_64;
          }
          continue;
        }
LABEL_73:
        char v40 = 0;
LABEL_75:
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_76:
        *(unsigned char *)(a1 + 60) |= 1u;
        *(unsigned char *)(a1 + 60) |= 8u;
        *(unsigned char *)(a1 + 60) |= 2u;
        *(unsigned char *)(a1 + 60) |= 4u;
        if (v40)
        {
LABEL_77:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_78;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_78:
            char v43 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v38 = PBReaderSkipValueWithTag();
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v38) {
          goto LABEL_72;
        }
        goto LABEL_63;
    }
  }
}

void sub_189ED4670(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ED4A38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ED4E00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ED5AC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLPRPowerTypeCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v2 = a1[5];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v26;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v26 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v25 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v4);
  }

  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v7 = a1[3];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v22;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v21 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
    }
    while (v9);
  }

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v12 = a1[4];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v18;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v18 != v15) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend(*(id *)(*((void *)&v17 + 1) + 8 * v16++), "readAll:", 1, (void)v17);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
    }
    while (v14);
  }
}

unint64_t GEOLPRPowerTypeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRPowerTypeReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLPRPowerTypeReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLPRPowerTypeReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRPowerTypeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLPRPowerTypeCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189ED5E84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRPowerTypeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRPowerTypeReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189ED5EE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRPowerTypeIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_32;
          }
          goto LABEL_24;
        case 2u:
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1)) {
            goto LABEL_32;
          }
          goto LABEL_29;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLPRPowerTypeIsValid(a1)) {
            goto LABEL_32;
          }
LABEL_29:
          PBReaderRecallMark();
          goto LABEL_30;
        default:
LABEL_24:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_32:
            PBReaderRecallMark();
            return 0;
          }
LABEL_30:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_31;
          }
          break;
      }
    }
  }
LABEL_31:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_189ED6480(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRPowerTypeIsDirty(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v2 = *(unsigned char *)(a1 + 60);
  if ((v2 & 0x1F) == 0)
  {
    if ((*(unsigned char *)(a1 + 60) & 2) != 0)
    {
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      id v4 = *(id *)(a1 + 24);
      uint64_t v5 = [v4 countByEnumeratingWithState:&v16 objects:v21 count:16];
      if (v5)
      {
        uint64_t v6 = v5;
        uint64_t v7 = *(void *)v17;
LABEL_6:
        uint64_t v8 = 0;
        while (1)
        {
          if (*(void *)v17 != v7) {
            objc_enumerationMutation(v4);
          }
          if (GEOLocalizedStringIsDirty(*(void *)(*((void *)&v16 + 1) + 8 * v8))) {
            goto LABEL_24;
          }
          if (v6 == ++v8)
          {
            uint64_t v6 = [v4 countByEnumeratingWithState:&v16 objects:v21 count:16];
            if (v6) {
              goto LABEL_6;
            }
            break;
          }
        }
      }

      char v2 = *(unsigned char *)(a1 + 60);
    }
    if ((v2 & 4) == 0) {
      return 0;
    }
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v4 = *(id *)(a1 + 32);
    uint64_t v3 = [v4 countByEnumeratingWithState:&v12 objects:v20 count:16];
    if (!v3)
    {
LABEL_25:

      return v3;
    }
    uint64_t v9 = *(void *)v13;
LABEL_17:
    uint64_t v10 = 0;
    while (1)
    {
      if (*(void *)v13 != v9) {
        objc_enumerationMutation(v4);
      }
      if (GEOLPRPowerTypeIsDirty(*(void *)(*((void *)&v12 + 1) + 8 * v10))) {
        break;
      }
      if (v3 == ++v10)
      {
        uint64_t v3 = [v4 countByEnumeratingWithState:&v12 objects:v20 count:16];
        if (v3) {
          goto LABEL_17;
        }
        goto LABEL_25;
      }
    }
LABEL_24:
    uint64_t v3 = 1;
    goto LABEL_25;
  }
  return 1;
}

os_unfair_lock_s *GEOLPRPowerTypeIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLPRPowerTypeIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189ED6C28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRPowerTypeMapReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          long long v16 = 0;
        }
        else {
          long long v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v47 = v17;
        long long v18 = (int *)MEMORY[0x1E4F940E8];
        long long v19 = (int *)MEMORY[0x1E4F940C8];
        long long v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_60;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_25;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_60:
      if (v15)
      {
        char v42 = 1;
        goto LABEL_70;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            int v44 = *v16++;
            int v43 = v44;
            if (v44 != 1 && v43 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v43;
          }
        }
        while (v43);
      }
      goto LABEL_71;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v15;
    if (!v47)
    {
      int v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (v32)
      {
        if (*(unsigned char *)(a1 + 44))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_69;
          }
          v9 -= *(unsigned char *)(a1 + 44) & 1;
        }
        else
        {
          uint64_t v37 = PBReaderReadString();
          int v38 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v37;

          --v9;
        }
        goto LABEL_56;
      }
LABEL_50:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_69;
      }
      goto LABEL_56;
    }
    if (!PBReaderSkipValueWithTag()) {
      goto LABEL_69;
    }
LABEL_56:
    if (v9) {
      char v41 = 1;
    }
    else {
      char v41 = v15;
    }
    if ((v41 & 1) == 0) {
      goto LABEL_60;
    }
  }
  if (!v32) {
    goto LABEL_50;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_69:
      char v42 = 0;
      goto LABEL_70;
    }
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_56;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_69;
  }
  char v39 = objc_alloc_init(GEOLPRPowerType);
  if (GEOLPRPowerTypeReadAllFrom((uint64_t)v39, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    char v40 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v39;

    --v9;
    long long v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_56;
  }

  char v42 = 0;
  long long v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_70:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v42)
  {
LABEL_71:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (!v15) {
      return v3;
    }
    goto LABEL_72;
  }
  unint64_t v3 = 0;
  if (v15)
  {
LABEL_72:
    int v45 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189ED7834(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ED792C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRPowerTypeMapReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRPowerTypeMapReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLPRPowerTypeMapReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLPRPowerTypeMapReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRPowerTypeMapReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189ED7AD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ED7C4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOLPRPowerTypeMapIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 44) & 5) != 0) {
    return (os_unfair_lock_s *)1;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
    return 0;
  }
  unint64_t v3 = *(os_unfair_lock_s **)(a1 + 24);

  return GEOLPRPowerTypeIsDirty(v3);
}

void sub_189ED7E28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ED8128(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRRegionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        unsigned __int8 v14 = v10 | (v11 > 2);
        if ((v14 | v8)) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        BOOL v16 = v14;
        char v48 = (v15 == 0) | v14;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        long long v19 = (int *)MEMORY[0x1E4F940B8];
        BOOL v47 = v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_71;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_71:
      if (v16)
      {
        char v42 = 1;
        goto LABEL_83;
      }
      if (v15)
      {
        while (1)
        {
          int v43 = *v15++;
          char v44 = 1;
          switch(v43)
          {
            case 0:
              goto LABEL_84;
            case 1:
              goto LABEL_78;
            case 2:
              char v44 = 8;
              goto LABEL_78;
            case 3:
              char v44 = 2;
              goto LABEL_78;
            case 4:
              char v44 = 4;
LABEL_78:
              *(unsigned char *)(a1 + 60) |= v44;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_84;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v16;
    if ((v48 & 1) == 0)
    {
      BOOL v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31 || (*(unsigned char *)(a1 + 60) & 1) != 0) {
          goto LABEL_62;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_80;
        }
        BOOL v36 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1)) {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        -[GEOLPRRegion _addNoFlagsDisplayName:](a1, v36);
        goto LABEL_49;
      case 2:
        if (!v31 || (*(unsigned char *)(a1 + 60) & 8) != 0) {
          goto LABEL_62;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_80;
        }
        BOOL v36 = objc_alloc_init(GEOLPRRegion);
        if (!GEOLPRRegionReadAllFrom()) {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        -[GEOLPRRegion _addNoFlagsSubRegions:](a1, v36);
LABEL_49:

        goto LABEL_61;
      case 3:
        if (!v31) {
          goto LABEL_62;
        }
        if ((*(unsigned char *)(a1 + 60) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_80;
          }
          char v41 = *(unsigned char *)(a1 + 60) << 6;
          goto LABEL_68;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_80;
        }
        BOOL v36 = objc_alloc_init(GEOLPRRegionInfo);
        if (!GEOLPRRegionInfoReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1)) {
          goto LABEL_81;
        }
        PBReaderRecallMark();
        uint64_t v38 = 24;
        goto LABEL_60;
      case 4:
        if (!v31)
        {
LABEL_62:
          char v40 = PBReaderSkipValueWithTag();
          long long v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v40 & 1) == 0)
          {
LABEL_79:
            char v42 = 0;
            goto LABEL_83;
          }
LABEL_70:
          if (!v16 && v7 == 0) {
            goto LABEL_71;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 60) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_80:
            char v42 = 0;
            goto LABEL_82;
          }
          char v41 = 32 * *(unsigned char *)(a1 + 60);
LABEL_68:
          v7 += v41 >> 7;
          goto LABEL_69;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_80;
        }
        BOOL v36 = objc_alloc_init(GEOLPRBoundingBoxE7);
        if (GEOLPRBoundingBoxE7ReadAllFrom((uint64_t)v36, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v38 = 32;
LABEL_60:
          char v39 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v36;

          --v7;
LABEL_61:
          BOOL v16 = v47;
LABEL_69:
          long long v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_70;
        }
LABEL_81:

        char v42 = 0;
        BOOL v16 = v47;
LABEL_82:
        long long v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_83:
        *(unsigned char *)(a1 + 60) |= 1u;
        *(unsigned char *)(a1 + 60) |= 8u;
        *(unsigned char *)(a1 + 60) |= 2u;
        *(unsigned char *)(a1 + 60) |= 4u;
        if (v42)
        {
LABEL_84:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_85;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_85:
            int v45 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v37 = PBReaderSkipValueWithTag();
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v37) {
          goto LABEL_79;
        }
        goto LABEL_70;
    }
  }
}

void sub_189ED8AF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ED8EB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ED9028(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ED99B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRRegionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v2 = a1[2];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v17 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v4);
  }

  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = a1[5];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * v11++), "readAll:", 1, (void)v13);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v9);
  }

  [a1[3] readAll:1];
  return [a1[4] readAll:1];
}

unint64_t GEOLPRRegionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRRegionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLPRRegionReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLPRRegionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRRegionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLPRRegionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189ED9D10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRRegionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRRegionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189ED9D74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRRegionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOLocalizedStringIsValid(a1)) {
            goto LABEL_36;
          }
          goto LABEL_39;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLPRRegionIsValid(a1)) {
            goto LABEL_39;
          }
          goto LABEL_36;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLPRRegionInfoIsValid(a1)) {
            goto LABEL_39;
          }
          goto LABEL_36;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLPRBoundingBoxE7IsValid(a1)) {
            goto LABEL_39;
          }
LABEL_36:
          PBReaderRecallMark();
          goto LABEL_37;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_39:
            PBReaderRecallMark();
            return 0;
          }
LABEL_37:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_38;
          }
          break;
      }
    }
  }
LABEL_38:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLPRRegionInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (2)
    {
      if (!a1[*v4])
      {
        char v6 = 0;
        unsigned int v7 = 0;
        unint64_t v8 = 0;
        while (1)
        {
          uint64_t v9 = *v2;
          uint64_t v10 = *(void *)&a1[v9];
          unint64_t v11 = v10 + 1;
          if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
            break;
          }
          char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
          *(void *)&a1[v9] = v11;
          v8 |= (unint64_t)(v12 & 0x7F) << v6;
          if ((v12 & 0x80) == 0) {
            goto LABEL_12;
          }
          v6 += 7;
          BOOL v13 = v7++ >= 9;
          if (v13)
          {
            unint64_t v8 = 0;
            int v14 = a1[*v4];
            goto LABEL_14;
          }
        }
        a1[*v4] = 1;
LABEL_12:
        int v14 = a1[*v4];
        if (a1[*v4]) {
          unint64_t v8 = 0;
        }
LABEL_14:
        int v15 = v8 & 7;
        if (v14) {
          BOOL v16 = 1;
        }
        else {
          BOOL v16 = v15 == 4;
        }
        if (!v16)
        {
          switch((v8 >> 3))
          {
            case 2u:
              if (v15 == 2)
              {
                if (!PBReaderPlaceMark()) {
                  goto LABEL_51;
                }
                while (1)
                {
LABEL_38:
                  if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
                    goto LABEL_36;
                  }
                  unsigned int v22 = a1[*v4];
                  if (a1[*v4]) {
                    goto LABEL_36;
                  }
                  while (1)
                  {
                    uint64_t v23 = *v2;
                    uint64_t v24 = *(void *)&a1[v23];
                    unint64_t v25 = v24 + 1;
                    if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v26 = *(char *)(*(void *)&a1[*v5] + v24);
                    *(void *)&a1[v23] = v25;
                    if (v26 < 0)
                    {
                      BOOL v13 = v22++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_38;
                  }
                  a1[*v4] = 1;
                }
              }
              if ((v8 & 7) != 0) {
                goto LABEL_51;
              }
              do
              {
                uint64_t v17 = *v2;
                uint64_t v18 = *(void *)&a1[v17];
                unint64_t v19 = v18 + 1;
                if (v18 == -1 || v19 > *(void *)&a1[*v3])
                {
                  a1[*v4] = 1;
                  break;
                }
                int v20 = *(char *)(*(void *)&a1[*v5] + v18);
                *(void *)&a1[v17] = v19;
                if ((v20 & 0x80000000) == 0) {
                  break;
                }
                unsigned int v21 = v15++;
              }
              while (v21 <= 8);
LABEL_48:
              if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
                break;
              }
              continue;
            case 3u:
              if (v15 == 2) {
                goto LABEL_31;
              }
              goto LABEL_51;
            case 4u:
              if (v15 == 2) {
                goto LABEL_31;
              }
              goto LABEL_51;
            case 5u:
              if (v15 == 2) {
                goto LABEL_31;
              }
              goto LABEL_51;
            case 6u:
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOLPRLicensePlateValidationRuleIsValid(a1)) {
                goto LABEL_51;
              }
LABEL_36:
              PBReaderRecallMark();
              goto LABEL_48;
            default:
LABEL_31:
              if (PBReaderSkipValueWithTag()) {
                goto LABEL_48;
              }
LABEL_51:
              PBReaderRecallMark();
              return 0;
          }
        }
      }
      break;
    }
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_189EDA5F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRRegionIsDirty(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v2 = *(unsigned char *)(a1 + 60);
  if ((v2 & 0x19) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 2) != 0)
  {
    if (GEOLPRRegionInfoIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 60);
  }
  if ((v2 & 4) == 0)
  {
    if (v2)
    {
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      id v5 = *(id *)(a1 + 16);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v17;
LABEL_11:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v17 != v8) {
            objc_enumerationMutation(v5);
          }
          if (GEOLocalizedStringIsDirty(*(void *)(*((void *)&v16 + 1) + 8 * v9))) {
            goto LABEL_29;
          }
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
            if (v7) {
              goto LABEL_11;
            }
            break;
          }
        }
      }

      char v2 = *(unsigned char *)(a1 + 60);
    }
    if ((v2 & 8) == 0) {
      return 0;
    }
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v5 = *(id *)(a1 + 40);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
    if (!v3)
    {
LABEL_30:

      return v3;
    }
    uint64_t v10 = *(void *)v13;
LABEL_22:
    uint64_t v11 = 0;
    while (1)
    {
      if (*(void *)v13 != v10) {
        objc_enumerationMutation(v5);
      }
      if (GEOLPRRegionIsDirty(*(os_unfair_lock_s **)(*((void *)&v12 + 1) + 8 * v11))) {
        break;
      }
      if (v3 == ++v11)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
        if (v3) {
          goto LABEL_22;
        }
        goto LABEL_30;
      }
    }
LABEL_29:
    uint64_t v3 = 1;
    goto LABEL_30;
  }
  return 1;
}

os_unfair_lock_s *GEOLPRRegionIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLPRRegionIsDirty(v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189EDAD00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EDB2E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRRegionInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFEFFFFFFFCFFFDLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 84) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 3);
        if ((v14 | v8)) {
          long long v15 = 0;
        }
        else {
          long long v15 = a3;
        }
        LODWORD(v16) = v14;
        long long v17 = (int *)MEMORY[0x1E4F940E8];
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_88;
        }
        char v62 = (v15 == 0) | v14;
        long long v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_88;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    int v29 = v22 & 7;
    if (v28 || v29 == 4)
    {
LABEL_88:
      if (v16)
      {
        char v56 = 1;
        goto LABEL_90;
      }
      if (v15)
      {
        while (1)
        {
          int v58 = *v15++;
          char v57 = 1;
          switch(v58)
          {
            case 0:
              goto LABEL_101;
            case 2:
              goto LABEL_99;
            case 3:
              char v57 = 8;
              goto LABEL_99;
            case 4:
              char v57 = 16;
              goto LABEL_99;
            case 5:
              char v57 = 2;
              goto LABEL_99;
            case 6:
              char v57 = 4;
LABEL_99:
              *(unsigned char *)(a1 + 84) |= v57;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_101;
    }
    unint64_t v31 = v22 >> 3;
    BOOL v32 = (char)v16;
    if ((v62 & 1) == 0)
    {
      int v33 = v15;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 2:
        if (!v32 || (*(unsigned char *)(a1 + 84) & 1) != 0) {
          goto LABEL_71;
        }
        if (v29 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_105;
          }
          while (1)
          {
            int v37 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]))
            {
              PBReaderRecallMark();
              goto LABEL_85;
            }
            char v38 = 0;
            unsigned int v39 = 0;
            uint64_t v40 = 0;
            while (1)
            {
              uint64_t v41 = *v17;
              uint64_t v42 = *(void *)(v3 + v41);
              unint64_t v43 = v42 + 1;
              if (v42 == -1 || v43 > *(void *)(v3 + *v6)) {
                break;
              }
              char v44 = *(unsigned char *)(*(void *)(v3 + *v19) + v42);
              *(void *)(v3 + v41) = v43;
              v40 |= (unint64_t)(v44 & 0x7F) << v38;
              if (v44 < 0)
              {
                v38 += 7;
                BOOL v27 = v39++ >= 9;
                if (!v27) {
                  continue;
                }
              }
              goto LABEL_51;
            }
            *(unsigned char *)(v3 + *v37) = 1;
LABEL_51:
            PBRepeatedInt32Add();
          }
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        while (1)
        {
          uint64_t v52 = *v17;
          uint64_t v53 = *(void *)(v3 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(v3 + *v6)) {
            break;
          }
          char v55 = *(unsigned char *)(*(void *)(v3 + *v19) + v53);
          *(void *)(v3 + v52) = v54;
          v51 |= (unint64_t)(v55 & 0x7F) << v49;
          if (v55 < 0)
          {
            v49 += 7;
            BOOL v27 = v50++ >= 9;
            if (!v27) {
              continue;
            }
          }
          goto LABEL_84;
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_84:
        PBRepeatedInt32Add();
        goto LABEL_85;
      case 3:
        if (!v32 || (*(unsigned char *)(a1 + 84) & 8) != 0) {
          goto LABEL_71;
        }
        int v61 = (int)v16;
        PBReaderReadString();
        long long v16 = (GEOLPRLicensePlateValidationRule *)objc_claimAutoreleasedReturnValue();
        if (v16) {
          -[GEOLPRRegionInfo _addNoFlagsValidPowerTypeKeys:](a1, v16);
        }
        goto LABEL_70;
      case 4:
        if (!v32 || (*(unsigned char *)(a1 + 84) & 0x10) != 0) {
          goto LABEL_71;
        }
        int v61 = (int)v16;
        PBReaderReadString();
        long long v16 = (GEOLPRLicensePlateValidationRule *)objc_claimAutoreleasedReturnValue();
        if (v16) {
          -[GEOLPRRegionInfo _addNoFlagsValidVehicleTypeKeys:](a1, v16);
        }
        goto LABEL_70;
      case 5:
        if (!v32) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 84) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_105:
            char v56 = 0;
            goto LABEL_107;
          }
          v7 += *(unsigned __int8 *)(a1 + 84) << 30 >> 31;
        }
        else
        {
          uint64_t v46 = PBReaderReadString();
          BOOL v47 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v46;

          --v7;
        }
        goto LABEL_85;
      case 6:
        if (!v32 || (*(unsigned char *)(a1 + 84) & 4) != 0)
        {
LABEL_71:
          char v48 = PBReaderSkipValueWithTag();
          long long v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v48 & 1) == 0)
          {
LABEL_104:
            char v56 = 0;
            goto LABEL_90;
          }
LABEL_86:
          if (!(v16 & 1 | (v7 != 0)) || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_88;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_105;
        }
        int v61 = (int)v16;
        long long v16 = objc_alloc_init(GEOLPRLicensePlateValidationRule);
        if (GEOLPRLicensePlateValidationRuleReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOLPRRegionInfo _addNoFlagsLicensePlateValidationRules:](a1, v16);
LABEL_70:

          LODWORD(v16) = v61;
LABEL_85:
          long long v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_86;
        }

        char v56 = 0;
        LOBYTE(v16) = v61;
LABEL_107:
        long long v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_90:
        *(unsigned char *)(a1 + 84) |= 1u;
        *(unsigned char *)(a1 + 84) |= 8u;
        *(unsigned char *)(a1 + 84) |= 0x10u;
        *(unsigned char *)(a1 + 84) |= 2u;
        *(unsigned char *)(a1 + 84) |= 4u;
        if (v56)
        {
LABEL_101:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_102;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v16 & 1) == 0) {
          return v3;
        }
LABEL_102:
        uint64_t v59 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      default:
        int v45 = PBReaderSkipValueWithTag();
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v45) {
          goto LABEL_104;
        }
        goto LABEL_86;
    }
  }
}

void sub_189EDBEB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EDC274(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EDC638(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EDC7A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EDD568(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLPRRegionInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 48);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOLPRRegionInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRRegionInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOLPRRegionInfoReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOLPRRegionInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRRegionInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLPRRegionInfoCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189EDD7FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRRegionInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRRegionInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189EDD860(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EDDBF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRRegionInfoIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  if ((*(unsigned char *)(a1 + 84) & 0x3F) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 84) & 4) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 48);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOLPRLicensePlateValidationRuleIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOLPRRegionInfoIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLPRRegionInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189EDE354(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRValidationRangeReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 4)
        {
          uint64_t v26 = PBReaderReadString();
          BOOL v27 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v26;
        }
        else
        {
          if (v18 == 2)
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            *(unsigned char *)(a1 + 24) |= 1u;
            while (1)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5]) {
                break;
              }
              char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
              *(void *)&v3[v31] = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if ((v34 & 0x80) == 0) {
                goto LABEL_44;
              }
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                LODWORD(v30) = 0;
                goto LABEL_46;
              }
            }
            v3[*v6] = 1;
LABEL_44:
            if (v3[*v6]) {
              LODWORD(v30) = 0;
            }
LABEL_46:
            int v35 = -(v30 & 1) ^ ((int)v30 >> 1);
            uint64_t v36 = 16;
          }
          else
          {
            if (v18 != 1)
            {
              if (!PBReaderSkipValueWithTag()) {
                goto LABEL_50;
              }
              continue;
            }
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 24) |= 2u;
            while (1)
            {
              uint64_t v22 = *v4;
              uint64_t v23 = *(void *)&v3[v22];
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
              *(void *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_40;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_42;
              }
            }
            v3[*v6] = 1;
LABEL_40:
            if (v3[*v6]) {
              LODWORD(v21) = 0;
            }
LABEL_42:
            int v35 = -(v21 & 1) ^ ((int)v21 >> 1);
            uint64_t v36 = 20;
          }
          *(_DWORD *)(a1 + v36) = v35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_189EDEFA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRValidationRangeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLPRValidationRangeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189EDF008(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EDF614(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRVehicleTypeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        char v14 = v10 | (v11 > 1);
        if (v10 & 1 | (v11 > 1) | v8 & 1) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        int v16 = (int *)MEMORY[0x1E4F940E8];
        long long v17 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v18 = (int *)MEMORY[0x1E4F940B8];
        char v19 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_61;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v16;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v18) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_61:
      if (v14)
      {
        char v41 = 1;
        goto LABEL_72;
      }
      if (v15)
      {
        while (1)
        {
          int v42 = *v15++;
          char v43 = 1;
          switch(v42)
          {
            case 0:
              goto LABEL_73;
            case 1:
              goto LABEL_67;
            case 2:
              char v43 = 4;
              goto LABEL_67;
            case 3:
              char v43 = 2;
LABEL_67:
              *(unsigned char *)(a1 + v19[774]) |= v43;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_73;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      uint64_t v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 != 3) {
      break;
    }
    if (v31 && (*(unsigned char *)(a1 + v19[774]) & 2) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_69;
      }
      char v38 = objc_alloc_init(GEOLocalizedString);
      if (!GEOLocalizedStringReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1)) {
        goto LABEL_70;
      }
      PBReaderRecallMark();
      -[GEOLPRVehicleType _addNoFlagsSubtitle:](a1, v38);
      goto LABEL_52;
    }
LABEL_55:
    char v40 = PBReaderSkipValueWithTag();
    long long v17 = (int *)MEMORY[0x1E4F940C8];
    if ((v40 & 1) == 0)
    {
LABEL_68:
      char v41 = 0;
      goto LABEL_72;
    }
LABEL_60:
    if (!(v14 & 1 | (v7 != 0))) {
      goto LABEL_61;
    }
  }
  if (v30 != 2)
  {
    if (v30 != 1)
    {
      int v39 = PBReaderSkipValueWithTag();
      long long v17 = (int *)MEMORY[0x1E4F940C8];
      if (!v39) {
        goto LABEL_68;
      }
      goto LABEL_60;
    }
    if (v31)
    {
      if (*(unsigned char *)(a1 + v19[774]))
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_69:
          char v41 = 0;
          goto LABEL_71;
        }
        v7 -= *(unsigned char *)(a1 + v19[774]) & 1;
      }
      else
      {
        uint64_t v36 = PBReaderReadString();
        BOOL v37 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v36;

        --v7;
      }
      goto LABEL_59;
    }
    goto LABEL_55;
  }
  if (!v31 || (*(unsigned char *)(a1 + v19[774]) & 4) != 0) {
    goto LABEL_55;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_69;
  }
  char v38 = objc_alloc_init(GEOLocalizedString);
  if (GEOLocalizedStringReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEOLPRVehicleType _addNoFlagsTitle:](a1, v38);
LABEL_52:

    char v19 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
LABEL_59:
    long long v17 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_60;
  }
LABEL_70:

  char v41 = 0;
  char v19 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
LABEL_71:
  long long v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + v19[774]) |= 1u;
  *(unsigned char *)(a1 + v19[774]) |= 4u;
  *(unsigned char *)(a1 + v19[774]) |= 2u;
  if (v41)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if ((v14 & 1) == 0) {
      return v3;
    }
    goto LABEL_74;
  }
  unint64_t v3 = 0;
  if (v14)
  {
LABEL_74:
    char v44 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189EDFC80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EE0040(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EE0ADC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLPRVehicleTypeCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 24);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOLPRVehicleTypeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRVehicleTypeReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLPRVehicleTypeReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLPRVehicleTypeReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRVehicleTypeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLPRVehicleTypeCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189EE0E08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRVehicleTypeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRVehicleTypeReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189EE0E6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRVehicleTypeIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3 || v17 == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1)) {
          goto LABEL_30;
        }
        PBReaderRecallMark();
      }
      else if (v17 == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_30:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

void sub_189EE1318(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLPRVehicleTypeIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 52) & 0xF) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 24);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOLocalizedStringIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOLPRVehicleTypeIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLPRVehicleTypeIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189EE1910(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRVehicleTypeMapReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          long long v16 = 0;
        }
        else {
          long long v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v47 = v17;
        BOOL v18 = (int *)MEMORY[0x1E4F940E8];
        long long v19 = (int *)MEMORY[0x1E4F940C8];
        char v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_60;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_25;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_60:
      if (v15)
      {
        char v42 = 1;
        goto LABEL_70;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            int v44 = *v16++;
            int v43 = v44;
            if (v44 != 1 && v43 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v43;
          }
        }
        while (v43);
      }
      goto LABEL_71;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v15;
    if (!v47)
    {
      int v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (v32)
      {
        if (*(unsigned char *)(a1 + 44))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_69;
          }
          v9 -= *(unsigned char *)(a1 + 44) & 1;
        }
        else
        {
          uint64_t v37 = PBReaderReadString();
          char v38 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v37;

          --v9;
        }
        goto LABEL_56;
      }
LABEL_50:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_69;
      }
      goto LABEL_56;
    }
    if (!PBReaderSkipValueWithTag()) {
      goto LABEL_69;
    }
LABEL_56:
    if (v9) {
      char v41 = 1;
    }
    else {
      char v41 = v15;
    }
    if ((v41 & 1) == 0) {
      goto LABEL_60;
    }
  }
  if (!v32) {
    goto LABEL_50;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_69:
      char v42 = 0;
      goto LABEL_70;
    }
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_56;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_69;
  }
  int v39 = objc_alloc_init(GEOLPRVehicleType);
  if (GEOLPRVehicleTypeReadAllFrom((uint64_t)v39, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    char v40 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v39;

    --v9;
    long long v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_56;
  }

  char v42 = 0;
  long long v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_70:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v42)
  {
LABEL_71:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (!v15) {
      return v3;
    }
    goto LABEL_72;
  }
  unint64_t v3 = 0;
  if (v15)
  {
LABEL_72:
    int v45 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189EE2448(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EE2540(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRVehicleTypeMapReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRVehicleTypeMapReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLPRVehicleTypeMapReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLPRVehicleTypeMapReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRVehicleTypeMapReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189EE26E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EE2860(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOLPRVehicleTypeMapIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 44) & 5) != 0) {
    return (os_unfair_lock_s *)1;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
    return 0;
  }
  unint64_t v3 = *(os_unfair_lock_s **)(a1 + 24);

  return GEOLPRVehicleTypeIsDirty(v3);
}

void sub_189EE2A3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRWorldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        char v14 = v10 | (v11 > 1);
        if (v10 & 1 | (v11 > 1) | v8 & 1) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        char v41 = (v7 != 0) | v14;
        long long v16 = (int *)MEMORY[0x1E4F940E8];
        BOOL v17 = (int *)MEMORY[0x1E4F940C8];
        BOOL v18 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_59;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_25:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_59:
      if (v14)
      {
        char v36 = 1;
        goto LABEL_68;
      }
      if (v15)
      {
        while (1)
        {
          int v38 = *v15++;
          char v37 = 2;
          switch(v38)
          {
            case 0:
              goto LABEL_69;
            case 1:
              goto LABEL_65;
            case 3:
              char v37 = 1;
              goto LABEL_65;
            case 4:
              char v37 = 4;
LABEL_65:
              *(unsigned char *)(a1 + 52) |= v37;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_69;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      unint64_t v31 = v15;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 == 4)
    {
      if (v30 && (*(unsigned char *)(a1 + 52) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_67;
        }
        int v35 = objc_alloc_init(GEOLPRVehicleTypeMap);
        if (!GEOLPRVehicleTypeMapReadAllFrom((uint64_t)v35, (void *)v3, v9 & 1)) {
          goto LABEL_74;
        }
        PBReaderRecallMark();
        -[GEOLPRWorld _addNoFlagsVehicleTypes:](a1, v35);
        goto LABEL_54;
      }
      goto LABEL_57;
    }
    if (v29 == 3) {
      break;
    }
    if (v29 != 1)
    {
      if (!PBReaderSkipValueWithTag()) {
        goto LABEL_67;
      }
      goto LABEL_58;
    }
    if (v30 && (*(unsigned char *)(a1 + 52) & 2) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_67;
      }
      int v35 = objc_alloc_init(GEOLPRRegion);
      if (!GEOLPRRegionReadAllFrom((uint64_t)v35, (void *)v3, v9 & 1)) {
        goto LABEL_74;
      }
      PBReaderRecallMark();
      -[GEOLPRWorld _addNoFlagsRegions:](a1, v35);
      goto LABEL_54;
    }
LABEL_57:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_67:
      char v36 = 0;
      goto LABEL_68;
    }
LABEL_58:
    if ((v41 & 1) == 0) {
      goto LABEL_59;
    }
  }
  if (!v30 || (*(unsigned char *)(a1 + 52) & 1) != 0) {
    goto LABEL_57;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_67;
  }
  int v35 = objc_alloc_init(GEOLPRPowerTypeMap);
  if (GEOLPRPowerTypeMapReadAllFrom((uint64_t)v35, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEOLPRWorld _addNoFlagsPowerTypes:](a1, v35);
LABEL_54:

    BOOL v17 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_58;
  }
LABEL_74:

  char v36 = 0;
  BOOL v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_68:
  *(unsigned char *)(a1 + 52) |= 2u;
  *(unsigned char *)(a1 + 52) |= 1u;
  *(unsigned char *)(a1 + 52) |= 4u;
  if (v36)
  {
LABEL_69:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if ((v14 & 1) == 0) {
      return v3;
    }
    goto LABEL_70;
  }
  unint64_t v3 = 0;
  if (v14)
  {
LABEL_70:
    int v39 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189EE3A98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRWorldReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRWorldReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 40) = [v6 position];
      *(_DWORD *)(a1 + 44) = [v6 length];
      unint64_t Specified = GEOLPRWorldReadSpecified(a1, (unint64_t)v6, (int *)&GEOLPRWorldReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189EE3C1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EE4118(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EE46B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOGetGEOFormattedStringLog()
{
  if (qword_1EB2A0000 != -1) {
    dispatch_once(&qword_1EB2A0000, &__block_literal_global_210_0);
  }
  os_log_t v0 = (void *)qword_1EB29FFF8;

  return v0;
}

void __GEOGetGEOFormattedStringLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOFormattedString");
  id v1 = (void *)qword_1EB29FFF8;
  qword_1EB29FFF8 = (uint64_t)v0;
}

id GEOGetGEOComposedRouteTrafficLog()
{
  if (qword_1EB2A0010 != -1) {
    dispatch_once(&qword_1EB2A0010, &__block_literal_global_228_0);
  }
  os_log_t v0 = (void *)_MergedGlobals_280;

  return v0;
}

void __GEOGetGEOComposedRouteTrafficLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOComposedRouteTraffic");
  id v1 = (void *)_MergedGlobals_280;
  _MergedGlobals_280 = (uint64_t)v0;
}

void sub_189EE815C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189EE8320(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189EE8510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_189EE88E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_189EE8C90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189EE8DFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL GEOPDCameraFrameReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            *(unsigned char *)(a1 + 56) |= 2u;
            uint64_t v18 = *v4;
            unint64_t v19 = *(void *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
              *(void *)&v3[v18] = v19 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            unint64_t v31 = &OBJC_IVAR___GEOPDCameraFrame__latitude;
            goto LABEL_52;
          case 2u:
            *(unsigned char *)(a1 + 56) |= 4u;
            uint64_t v21 = *v4;
            unint64_t v22 = *(void *)&v3[v21];
            if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v22 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            unint64_t v31 = &OBJC_IVAR___GEOPDCameraFrame__longitude;
            goto LABEL_52;
          case 3u:
            *(unsigned char *)(a1 + 56) |= 1u;
            uint64_t v23 = *v4;
            unint64_t v24 = *(void *)&v3[v23];
            if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v24);
              *(void *)&v3[v23] = v24 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            unint64_t v31 = &OBJC_IVAR___GEOPDCameraFrame__altitude;
            goto LABEL_52;
          case 4u:
            *(unsigned char *)(a1 + 56) |= 0x20u;
            uint64_t v25 = *v4;
            unint64_t v26 = *(void *)&v3[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v26);
              *(void *)&v3[v25] = v26 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            unint64_t v31 = &OBJC_IVAR___GEOPDCameraFrame__yaw;
            goto LABEL_52;
          case 5u:
            *(unsigned char *)(a1 + 56) |= 8u;
            uint64_t v27 = *v4;
            unint64_t v28 = *(void *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v28);
              *(void *)&v3[v27] = v28 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            unint64_t v31 = &OBJC_IVAR___GEOPDCameraFrame__pitch;
            goto LABEL_52;
          case 6u:
            *(unsigned char *)(a1 + 56) |= 0x10u;
            uint64_t v29 = *v4;
            unint64_t v30 = *(void *)&v3[v29];
            if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v30);
              *(void *)&v3[v29] = v30 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            unint64_t v31 = &OBJC_IVAR___GEOPDCameraFrame__roll;
LABEL_52:
            *(void *)(a1 + *v31) = v20;
            break;
          default:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_55;
            }
            break;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v32 = v3[*v6] == 0;
  }
  else
  {
LABEL_55:
    BOOL v32 = 0;
  }
  objc_sync_exit(v3);

  return v32;
}

void sub_189EECE14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCameraFrameReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDCameraFrameReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189EECE90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCameraFrameIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          if (v16 != 1) {
            goto LABEL_28;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v20 = v19 + 8, v20 <= *(void *)&a1[*v3])) {
            *(void *)&a1[v18] = v20;
          }
          else {
            a1[v14] = 1;
          }
          goto LABEL_25;
        default:
          if (!PBReaderSkipValueWithTag())
          {
LABEL_28:
            BOOL v21 = 0;
            goto LABEL_27;
          }
LABEL_25:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_26;
          }
          break;
      }
    }
  }
LABEL_26:
  BOOL v21 = a1[*v4] == 0;
LABEL_27:
  PBReaderRecallMark();
  return v21;
}

void sub_189EEDBE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCameraMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  int v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 80) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 80) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 80) >> 3) & 1);
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      int v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 | (v10 > 1);
  if ((v12 | v8)) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  LODWORD(v14) = v12;
  int v15 = (int *)MEMORY[0x1E4F940E8];
  int v16 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6))
  {
LABEL_123:
    if (v14)
    {
      char v75 = 1;
      goto LABEL_125;
    }
    if (v13)
    {
      while (1)
      {
        int v76 = *v13++;
        char v77 = 16;
        switch(v76)
        {
          case 0:
            goto LABEL_133;
          case 4:
            goto LABEL_132;
          case 5:
            char v77 = 32;
            goto LABEL_132;
          case 6:
            char v77 = 8;
LABEL_132:
            *(unsigned char *)(a1 + 80) |= v77;
            break;
          default:
            continue;
        }
      }
    }
    goto LABEL_133;
  }
  char v81 = (v13 == 0) | v12;
  BOOL v17 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(v3 + *v16)) {
      goto LABEL_123;
    }
    char v18 = 0;
    unsigned int v19 = 0;
    unint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = *v15;
      uint64_t v22 = *(void *)(v3 + v21);
      unint64_t v23 = v22 + 1;
      if (v22 == -1 || v23 > *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v17) + v22);
      *(void *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0) {
        goto LABEL_24;
      }
      v18 += 7;
      BOOL v25 = v19++ >= 9;
      if (v25)
      {
        unint64_t v20 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v16) = 1;
LABEL_24:
    int v26 = *(unsigned __int8 *)(v3 + *v16);
    if (*(unsigned char *)(v3 + *v16)) {
      unint64_t v20 = 0;
    }
LABEL_26:
    int v27 = v20 & 7;
    if (v26 || v27 == 4) {
      goto LABEL_123;
    }
    unint64_t v29 = v20 >> 3;
    BOOL v30 = (char)v14;
    if ((v81 & 1) == 0)
    {
      unint64_t v31 = v13;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_90;
        }
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        *(unsigned char *)(a1 + 80) |= 1u;
        while (1)
        {
          uint64_t v38 = *v15;
          uint64_t v39 = *(void *)(v3 + v38);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(v3 + *v6)) {
            break;
          }
          char v41 = *(unsigned char *)(*(void *)(v3 + *v17) + v39);
          *(void *)(v3 + v38) = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0) {
            goto LABEL_93;
          }
          v35 += 7;
          BOOL v25 = v36++ >= 9;
          if (v25)
          {
            LODWORD(v37) = 0;
            goto LABEL_95;
          }
        }
        *(unsigned char *)(v3 + *v16) = 1;
LABEL_93:
        if (*(unsigned char *)(v3 + *v16)) {
          LODWORD(v37) = 0;
        }
LABEL_95:
        uint64_t v66 = 68;
        goto LABEL_104;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_90;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v37 = 0;
        *(unsigned char *)(a1 + 80) |= 4u;
        while (2)
        {
          uint64_t v45 = *v15;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v17) + v46);
            *(void *)(v3 + v45) = v47;
            v37 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              BOOL v25 = v44++ >= 9;
              if (v25)
              {
                LODWORD(v37) = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          LODWORD(v37) = 0;
        }
LABEL_99:
        uint64_t v66 = 76;
        goto LABEL_104;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_90;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v37 = 0;
        *(unsigned char *)(a1 + 80) |= 2u;
        while (2)
        {
          uint64_t v51 = *v15;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v17) + v52);
            *(void *)(v3 + v51) = v53;
            v37 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v25 = v50++ >= 9;
              if (v25)
              {
                LODWORD(v37) = 0;
                goto LABEL_103;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          LODWORD(v37) = 0;
        }
LABEL_103:
        uint64_t v66 = 72;
LABEL_104:
        *(_DWORD *)(a1 + v66) = v37;
        goto LABEL_121;
      case 4:
        if (!v30) {
          goto LABEL_90;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_137;
          }
          char v67 = 8 * *(unsigned char *)(a1 + 80);
          goto LABEL_109;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_137;
        }
        int v80 = (int)v14;
        uint64_t v14 = objc_alloc_init(GEOPDLensProjection);
        if (!GEOPDLensProjectionReadAllFrom((uint64_t)v14, (void *)v3)) {
          goto LABEL_138;
        }
        PBReaderRecallMark();
        uint64_t v55 = 40;
        goto LABEL_74;
      case 5:
        if (!v30) {
          goto LABEL_90;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_137:
            char v75 = 0;
            goto LABEL_139;
          }
          char v67 = 4 * *(unsigned char *)(a1 + 80);
LABEL_109:
          v7 += v67 >> 7;
          goto LABEL_120;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_137;
        }
        int v80 = (int)v14;
        uint64_t v14 = objc_alloc_init(GEOPDOrientedPosition);
        if (GEOPDOrientedPositionReadAllFrom((uint64_t)v14, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v55 = 48;
LABEL_74:
          char v56 = *(void **)(a1 + v55);
          *(void *)(a1 + v55) = v14;

          --v7;
          LODWORD(v14) = v80;
LABEL_120:
          int v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_121:
          if (!(v14 & 1 | (v7 != 0)) || *(void *)(v3 + *v15) >= *(void *)(v3 + *v6)) {
            goto LABEL_123;
          }
          continue;
        }
LABEL_138:

        char v75 = 0;
        LOBYTE(v14) = v80;
LABEL_139:
        int v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_125:
        *(unsigned char *)(a1 + 80) |= 0x10u;
        *(unsigned char *)(a1 + 80) |= 0x20u;
        *(unsigned char *)(a1 + 80) |= 8u;
        if (v75)
        {
LABEL_133:
          unint64_t v3 = *(unsigned char *)(v3 + *v16) == 0;
          if (v14) {
            goto LABEL_134;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v14 & 1) == 0) {
          return v3;
        }
LABEL_134:
        uint64_t v78 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 6:
        if (v30 && (*(unsigned char *)(a1 + 80) & 8) == 0)
        {
          if (v27 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_137;
            }
            while (1)
            {
              char v57 = (int *)MEMORY[0x1E4F940C8];
              if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
                break;
              }
              char v58 = 0;
              unsigned int v59 = 0;
              uint64_t v60 = 0;
              while (1)
              {
                uint64_t v61 = *v15;
                uint64_t v62 = *(void *)(v3 + v61);
                unint64_t v63 = v62 + 1;
                if (v62 == -1 || v63 > *(void *)(v3 + *v6)) {
                  break;
                }
                char v64 = *(unsigned char *)(*(void *)(v3 + *v17) + v62);
                *(void *)(v3 + v61) = v63;
                v60 |= (unint64_t)(v64 & 0x7F) << v58;
                if (v64 < 0)
                {
                  v58 += 7;
                  BOOL v25 = v59++ >= 9;
                  if (!v25) {
                    continue;
                  }
                }
                goto LABEL_89;
              }
              *(unsigned char *)(v3 + *v57) = 1;
LABEL_89:
              PBRepeatedUInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v68 = 0;
            unsigned int v69 = 0;
            uint64_t v70 = 0;
            while (1)
            {
              uint64_t v71 = *v15;
              uint64_t v72 = *(void *)(v3 + v71);
              unint64_t v73 = v72 + 1;
              if (v72 == -1 || v73 > *(void *)(v3 + *v6)) {
                break;
              }
              char v74 = *(unsigned char *)(*(void *)(v3 + *v17) + v72);
              *(void *)(v3 + v71) = v73;
              v70 |= (unint64_t)(v74 & 0x7F) << v68;
              if (v74 < 0)
              {
                v68 += 7;
                BOOL v25 = v69++ >= 9;
                if (!v25) {
                  continue;
                }
              }
              goto LABEL_119;
            }
            *(unsigned char *)(v3 + *v16) = 1;
LABEL_119:
            PBRepeatedUInt32Add();
          }
          goto LABEL_120;
        }
LABEL_90:
        char v65 = PBReaderSkipValueWithTag();
        int v16 = (int *)MEMORY[0x1E4F940C8];
        if ((v65 & 1) == 0)
        {
LABEL_136:
          char v75 = 0;
          goto LABEL_125;
        }
        goto LABEL_121;
      default:
        int v42 = PBReaderSkipValueWithTag();
        int v16 = (int *)MEMORY[0x1E4F940C8];
        if (!v42) {
          goto LABEL_136;
        }
        goto LABEL_121;
    }
  }
}

void sub_189EEE5A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EEE6B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EEEAC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCameraMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDCameraMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    int v9 = (int *)&GEOPDCameraMetadataReadAllFrom_recursiveTag;
  }
  else {
    int v9 = (int *)&GEOPDCameraMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDCameraMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 48) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189EEF4C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EEF760(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCameraMetadataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 80) & 0x78) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189EEF9DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGeographicCoordinateReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          *(unsigned char *)(a1 + 32) |= 1u;
          uint64_t v22 = *v4;
          unint64_t v23 = *(void *)&v3[v22];
          if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v21 = *(void *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v23 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v21 = 0;
          }
          int v26 = &OBJC_IVAR___GEOPDGeographicCoordinate__altitude;
        }
        else if (v18 == 2)
        {
          *(unsigned char *)(a1 + 32) |= 4u;
          uint64_t v24 = *v4;
          unint64_t v25 = *(void *)&v3[v24];
          if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v21 = *(void *)(*(void *)&v3[*v7] + v25);
            *(void *)&v3[v24] = v25 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v21 = 0;
          }
          int v26 = &OBJC_IVAR___GEOPDGeographicCoordinate__longitude;
        }
        else
        {
          if (v18 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_42;
            }
            continue;
          }
          *(unsigned char *)(a1 + 32) |= 2u;
          uint64_t v19 = *v4;
          unint64_t v20 = *(void *)&v3[v19];
          if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v21 = *(void *)(*(void *)&v3[*v7] + v20);
            *(void *)&v3[v19] = v20 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v21 = 0;
          }
          int v26 = &OBJC_IVAR___GEOPDGeographicCoordinate__latitude;
        }
        *(void *)(a1 + *v26) = v21;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189EF03BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGeographicCoordinateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDGeographicCoordinateReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189EF0420(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EF0C40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGroundDataBuildReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  int v10 = (HIBYTE(*(unsigned __int16 *)(a1 + 108)) & 1) + ((*(unsigned __int16 *)(a1 + 108) >> 9) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  BOOL v12 = (v9 & 1 | v10) != 0;
  if (((v9 & 1 | v10) != 0) | v7 & 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  char v14 = (int *)MEMORY[0x1E4F940E8];
  int v15 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6))
  {
LABEL_192:
    if (v12)
    {
      char v111 = 1;
      goto LABEL_194;
    }
    if (!v13) {
      goto LABEL_205;
    }
    while (1)
    {
      int v113 = *v13++;
      int v112 = v113;
      if (v113 == 8) {
        break;
      }
      if (v112 == 10)
      {
        __int16 v114 = 512;
LABEL_204:
        *(_WORD *)(a1 + 108) |= v114;
      }
      else if (!v112)
      {
        goto LABEL_205;
      }
    }
    __int16 v114 = 256;
    goto LABEL_204;
  }
  if (v13) {
    BOOL v16 = (v9 & 1 | v10) != 0;
  }
  else {
    BOOL v16 = 1;
  }
  if (v8) {
    int v17 = 1;
  }
  else {
    int v17 = v12;
  }
  int v117 = v17;
  BOOL v118 = v16;
  unint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(v3 + *v15)) {
      goto LABEL_192;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v14;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_30;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_32;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_30:
    int v27 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v21 = 0;
    }
LABEL_32:
    int v28 = v21 & 7;
    if (v27 || v28 == 4) {
      goto LABEL_192;
    }
    unint64_t v30 = v21 >> 3;
    BOOL v31 = v12;
    if (!v118)
    {
      int v32 = v13;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v7 & 1) == 0) {
          goto LABEL_136;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 108) |= 0x20u;
        while (1)
        {
          uint64_t v39 = *v14;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v18) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_139;
          }
          v36 += 7;
          BOOL v26 = v37++ >= 9;
          if (v26)
          {
            LODWORD(v38) = 0;
            goto LABEL_141;
          }
        }
        *(unsigned char *)(v3 + *v15) = 1;
LABEL_139:
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v38) = 0;
        }
LABEL_141:
        uint64_t v96 = 96;
        goto LABEL_166;
      case 3:
        if ((v7 & 1) == 0) {
          goto LABEL_136;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 108) |= 2u;
        while (2)
        {
          uint64_t v45 = *v14;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v18) + v46);
            *(void *)(v3 + v45) = v47;
            v38 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              BOOL v26 = v44++ >= 9;
              if (v26)
              {
                LODWORD(v38) = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v38) = 0;
        }
LABEL_145:
        uint64_t v96 = 80;
        goto LABEL_166;
      case 5:
        if ((v7 & 1) == 0) {
          goto LABEL_136;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 108) |= 4u;
        while (2)
        {
          uint64_t v51 = *v14;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v18) + v52);
            *(void *)(v3 + v51) = v53;
            v38 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v26 = v50++ >= 9;
              if (v26)
              {
                LODWORD(v38) = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v38) = 0;
        }
LABEL_149:
        uint64_t v96 = 84;
        goto LABEL_166;
      case 6:
        if ((v7 & 1) == 0) {
          goto LABEL_136;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 108) |= 0x80u;
        while (2)
        {
          uint64_t v57 = *v14;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v18) + v58);
            *(void *)(v3 + v57) = v59;
            v38 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              BOOL v26 = v56++ >= 9;
              if (v26)
              {
                LODWORD(v38) = 0;
                goto LABEL_153;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v38) = 0;
        }
LABEL_153:
        uint64_t v96 = 104;
        goto LABEL_166;
      case 7:
        if ((v7 & 1) == 0) {
          goto LABEL_136;
        }
        *(_WORD *)(a1 + 108) |= 0x10u;
        uint64_t v61 = *v14;
        unint64_t v62 = *(void *)(v3 + v61);
        if (v62 <= 0xFFFFFFFFFFFFFFFBLL && v62 + 4 <= *(void *)(v3 + *v6))
        {
          int v63 = *(_DWORD *)(*(void *)(v3 + *v18) + v62);
          *(void *)(v3 + v61) = v62 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v15) = 1;
          int v63 = 0;
        }
        *(_DWORD *)(a1 + 92) = v63;
        goto LABEL_167;
      case 8:
        if (!v31 || (*(_WORD *)(a1 + 108) & 0x100) != 0) {
          goto LABEL_136;
        }
        if (v28 != 2)
        {
          char v97 = 0;
          unsigned int v98 = 0;
          uint64_t v99 = 0;
          while (1)
          {
            uint64_t v100 = *v14;
            uint64_t v101 = *(void *)(v3 + v100);
            unint64_t v102 = v101 + 1;
            if (v101 == -1 || v102 > *(void *)(v3 + *v6)) {
              break;
            }
            char v103 = *(unsigned char *)(*(void *)(v3 + *v18) + v101);
            *(void *)(v3 + v100) = v102;
            v99 |= (unint64_t)(v103 & 0x7F) << v97;
            if (v103 < 0)
            {
              v97 += 7;
              BOOL v26 = v98++ >= 9;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_189;
          }
          *(unsigned char *)(v3 + *v15) = 1;
LABEL_189:
          PBRepeatedInt32Add();
          goto LABEL_167;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_208;
        }
        while (*(void *)(v3 + *v14) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v15))
        {
          char v64 = 0;
          unsigned int v65 = 0;
          uint64_t v66 = 0;
          while (1)
          {
            uint64_t v67 = *v14;
            uint64_t v68 = *(void *)(v3 + v67);
            unint64_t v69 = v68 + 1;
            if (v68 == -1 || v69 > *(void *)(v3 + *v6)) {
              break;
            }
            char v70 = *(unsigned char *)(*(void *)(v3 + *v18) + v68);
            *(void *)(v3 + v67) = v69;
            v66 |= (unint64_t)(v70 & 0x7F) << v64;
            if (v70 < 0)
            {
              v64 += 7;
              BOOL v26 = v65++ >= 9;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_96;
          }
          *(unsigned char *)(v3 + *v15) = 1;
LABEL_96:
          PBRepeatedInt32Add();
        }
        goto LABEL_170;
      case 9:
        if ((v7 & 1) == 0) {
          goto LABEL_136;
        }
        char v71 = 0;
        unsigned int v72 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 108) |= 1u;
        while (2)
        {
          uint64_t v73 = *v14;
          uint64_t v74 = *(void *)(v3 + v73);
          unint64_t v75 = v74 + 1;
          if (v74 == -1 || v75 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v76 = *(unsigned char *)(*(void *)(v3 + *v18) + v74);
            *(void *)(v3 + v73) = v75;
            v38 |= (unint64_t)(v76 & 0x7F) << v71;
            if (v76 < 0)
            {
              v71 += 7;
              BOOL v26 = v72++ >= 9;
              if (v26)
              {
                LODWORD(v38) = 0;
                goto LABEL_157;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v38) = 0;
        }
LABEL_157:
        uint64_t v96 = 76;
        goto LABEL_166;
      case 10:
        if (!v31 || (*(_WORD *)(a1 + 108) & 0x200) != 0) {
          goto LABEL_136;
        }
        if (v28 != 2)
        {
          char v104 = 0;
          unsigned int v105 = 0;
          uint64_t v106 = 0;
          while (1)
          {
            uint64_t v107 = *v14;
            uint64_t v108 = *(void *)(v3 + v107);
            unint64_t v109 = v108 + 1;
            if (v108 == -1 || v109 > *(void *)(v3 + *v6)) {
              break;
            }
            char v110 = *(unsigned char *)(*(void *)(v3 + *v18) + v108);
            *(void *)(v3 + v107) = v109;
            v106 |= (unint64_t)(v110 & 0x7F) << v104;
            if (v110 < 0)
            {
              v104 += 7;
              BOOL v26 = v105++ >= 9;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_191;
          }
          *(unsigned char *)(v3 + *v15) = 1;
LABEL_191:
          PBRepeatedUInt32Add();
          goto LABEL_167;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_208;
        }
        while (*(void *)(v3 + *v14) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v15))
        {
          char v77 = 0;
          unsigned int v78 = 0;
          uint64_t v79 = 0;
          while (1)
          {
            uint64_t v80 = *v14;
            uint64_t v81 = *(void *)(v3 + v80);
            unint64_t v82 = v81 + 1;
            if (v81 == -1 || v82 > *(void *)(v3 + *v6)) {
              break;
            }
            char v83 = *(unsigned char *)(*(void *)(v3 + *v18) + v81);
            *(void *)(v3 + v80) = v82;
            v79 |= (unint64_t)(v83 & 0x7F) << v77;
            if (v83 < 0)
            {
              v77 += 7;
              BOOL v26 = v78++ >= 9;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_119;
          }
          *(unsigned char *)(v3 + *v15) = 1;
LABEL_119:
          PBRepeatedUInt32Add();
        }
LABEL_170:
        PBReaderRecallMark();
        if ((v117 & 1) == 0) {
          goto LABEL_192;
        }
        goto LABEL_168;
      case 11:
        if ((v7 & 1) == 0) {
          goto LABEL_136;
        }
        char v84 = 0;
        unsigned int v85 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 108) |= 0x40u;
        while (2)
        {
          uint64_t v86 = *v14;
          uint64_t v87 = *(void *)(v3 + v86);
          unint64_t v88 = v87 + 1;
          if (v87 == -1 || v88 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v89 = *(unsigned char *)(*(void *)(v3 + *v18) + v87);
            *(void *)(v3 + v86) = v88;
            v38 |= (unint64_t)(v89 & 0x7F) << v84;
            if (v89 < 0)
            {
              v84 += 7;
              BOOL v26 = v85++ >= 9;
              if (v26)
              {
                LODWORD(v38) = 0;
                goto LABEL_161;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v38) = 0;
        }
LABEL_161:
        uint64_t v96 = 100;
        goto LABEL_166;
      case 12:
        if (v7)
        {
          char v90 = 0;
          unsigned int v91 = 0;
          uint64_t v38 = 0;
          *(_WORD *)(a1 + 108) |= 8u;
          while (1)
          {
            uint64_t v92 = *v14;
            uint64_t v93 = *(void *)(v3 + v92);
            unint64_t v94 = v93 + 1;
            if (v93 == -1 || v94 > *(void *)(v3 + *v6)) {
              break;
            }
            char v95 = *(unsigned char *)(*(void *)(v3 + *v18) + v93);
            *(void *)(v3 + v92) = v94;
            v38 |= (unint64_t)(v95 & 0x7F) << v90;
            if ((v95 & 0x80) == 0) {
              goto LABEL_163;
            }
            v90 += 7;
            BOOL v26 = v91++ >= 9;
            if (v26)
            {
              LODWORD(v38) = 0;
              goto LABEL_165;
            }
          }
          *(unsigned char *)(v3 + *v15) = 1;
LABEL_163:
          if (*(unsigned char *)(v3 + *v15)) {
            LODWORD(v38) = 0;
          }
LABEL_165:
          uint64_t v96 = 88;
LABEL_166:
          *(_DWORD *)(a1 + v96) = v38;
LABEL_167:
          if (!v117) {
            goto LABEL_192;
          }
LABEL_168:
          if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6)) {
            goto LABEL_192;
          }
          continue;
        }
LABEL_136:
        if (PBReaderSkipValueWithTag()) {
          goto LABEL_167;
        }
LABEL_208:
        char v111 = 0;
LABEL_194:
        *(_WORD *)(a1 + 108) |= 0x100u;
        *(_WORD *)(a1 + 108) |= 0x200u;
        if (v111)
        {
LABEL_205:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_206;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if (!v12) {
          return v3;
        }
LABEL_206:
        unint64_t v115 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      default:
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_208;
        }
        goto LABEL_167;
    }
  }
}

void sub_189EF196C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EF1FE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGroundDataBuildReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDGroundDataBuildReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDGroundDataBuildReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDGroundDataBuildReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDGroundDataBuildReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189EF289C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EF2BD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGroundDataBuildIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(_WORD *)(a1 + 108) & 0x700) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_189EF2ED8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLensProjectionReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(_WORD *)(a1 + 84) |= 0x200u;
            break;
          case 2u:
            *(_WORD *)(a1 + 84) |= 8u;
            uint64_t v25 = *v4;
            unint64_t v26 = *(void *)&v3[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v27 = *(void *)(*(void *)&v3[*v7] + v26);
              *(void *)&v3[v25] = v26 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v27 = 0;
            }
            uint64_t v44 = 32;
            goto LABEL_78;
          case 3u:
            *(_WORD *)(a1 + 84) |= 4u;
            uint64_t v28 = *v4;
            unint64_t v29 = *(void *)&v3[v28];
            if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v27 = *(void *)(*(void *)&v3[*v7] + v29);
              *(void *)&v3[v28] = v29 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v27 = 0;
            }
            uint64_t v44 = 24;
            goto LABEL_78;
          case 4u:
            *(_WORD *)(a1 + 84) |= 0x10u;
            uint64_t v30 = *v4;
            unint64_t v31 = *(void *)&v3[v30];
            if (v31 <= 0xFFFFFFFFFFFFFFF7 && v31 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v27 = *(void *)(*(void *)&v3[*v7] + v31);
              *(void *)&v3[v30] = v31 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v27 = 0;
            }
            uint64_t v44 = 40;
            goto LABEL_78;
          case 5u:
            *(_WORD *)(a1 + 84) |= 0x20u;
            uint64_t v32 = *v4;
            unint64_t v33 = *(void *)&v3[v32];
            if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v27 = *(void *)(*(void *)&v3[*v7] + v33);
              *(void *)&v3[v32] = v33 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v27 = 0;
            }
            uint64_t v44 = 48;
            goto LABEL_78;
          case 6u:
            *(_WORD *)(a1 + 84) |= 0x40u;
            uint64_t v34 = *v4;
            unint64_t v35 = *(void *)&v3[v34];
            if (v35 <= 0xFFFFFFFFFFFFFFF7 && v35 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v27 = *(void *)(*(void *)&v3[*v7] + v35);
              *(void *)&v3[v34] = v35 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v27 = 0;
            }
            uint64_t v44 = 56;
            goto LABEL_78;
          case 7u:
            *(_WORD *)(a1 + 84) |= 1u;
            uint64_t v36 = *v4;
            unint64_t v37 = *(void *)&v3[v36];
            if (v37 <= 0xFFFFFFFFFFFFFFF7 && v37 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v27 = *(void *)(*(void *)&v3[*v7] + v37);
              *(void *)&v3[v36] = v37 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v27 = 0;
            }
            uint64_t v44 = 8;
            goto LABEL_78;
          case 8u:
            *(_WORD *)(a1 + 84) |= 2u;
            uint64_t v38 = *v4;
            unint64_t v39 = *(void *)&v3[v38];
            if (v39 <= 0xFFFFFFFFFFFFFFF7 && v39 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v27 = *(void *)(*(void *)&v3[*v7] + v39);
              *(void *)&v3[v38] = v39 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v27 = 0;
            }
            uint64_t v44 = 16;
            goto LABEL_78;
          case 9u:
            *(_WORD *)(a1 + 84) |= 0x80u;
            uint64_t v40 = *v4;
            unint64_t v41 = *(void *)&v3[v40];
            if (v41 <= 0xFFFFFFFFFFFFFFF7 && v41 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v27 = *(void *)(*(void *)&v3[*v7] + v41);
              *(void *)&v3[v40] = v41 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v27 = 0;
            }
            uint64_t v44 = 64;
            goto LABEL_78;
          case 0xAu:
            *(_WORD *)(a1 + 84) |= 0x100u;
            uint64_t v42 = *v4;
            unint64_t v43 = *(void *)&v3[v42];
            if (v43 <= 0xFFFFFFFFFFFFFFF7 && v43 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v27 = *(void *)(*(void *)&v3[*v7] + v43);
              *(void *)&v3[v42] = v43 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v27 = 0;
            }
            uint64_t v44 = 72;
LABEL_78:
            *(void *)(a1 + v44) = v27;
            continue;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_81;
            }
            continue;
        }
        while (1)
        {
          uint64_t v21 = *v4;
          uint64_t v22 = *(void *)&v3[v21];
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
          *(void *)&v3[v21] = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_57;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_59;
          }
        }
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_59:
        *(_DWORD *)(a1 + 80) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v45 = v3[*v6] == 0;
  }
  else
  {
LABEL_81:
    BOOL v45 = 0;
  }
  objc_sync_exit(v3);

  return v45;
}

void sub_189EF3CB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EF48B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLocationInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v7 | (v10 > 1);
  if (v7 & 1 | (v10 > 1) | v8 & 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  char v14 = (int *)MEMORY[0x1E4F940E8];
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
  int v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_63;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      if (v18++ >= 9)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_63:
      if (v12)
      {
        char v39 = 1;
        goto LABEL_72;
      }
      if (v13)
      {
        while (1)
        {
          int v40 = *v13++;
          char v41 = 2;
          switch(v40)
          {
            case 0:
              goto LABEL_73;
            case 1:
              goto LABEL_69;
            case 2:
              char v41 = 4;
              goto LABEL_69;
            case 3:
              char v41 = 1;
LABEL_69:
              *(unsigned char *)(a1 + 52) |= v41;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_73;
    }
    unint64_t v27 = v19 >> 3;
    BOOL v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      unint64_t v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    if (v27 == 3)
    {
      if (!v28) {
        goto LABEL_52;
      }
      if (*(unsigned char *)(a1 + 52))
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_71;
        }
        v9 -= *(unsigned char *)(a1 + 52) & 1;
        goto LABEL_61;
      }
      uint64_t v33 = PBReaderReadString();
      uint64_t v34 = 16;
LABEL_49:
      unint64_t v35 = *(void **)(a1 + v34);
      *(void *)(a1 + v34) = v33;

      --v9;
      goto LABEL_61;
    }
    if (v27 != 2)
    {
      if (v27 != 1)
      {
        int v36 = PBReaderSkipValueWithTag();
        BOOL v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v36) {
          goto LABEL_70;
        }
        goto LABEL_62;
      }
      if (v28)
      {
        if ((*(unsigned char *)(a1 + 52) & 2) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 24;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_71;
        }
        char v38 = *(unsigned char *)(a1 + 52) << 6;
LABEL_60:
        v9 += v38 >> 7;
LABEL_61:
        BOOL v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_62:
        if (!(v12 & 1 | (v9 != 0))) {
          goto LABEL_63;
        }
        continue;
      }
LABEL_52:
      char v37 = PBReaderSkipValueWithTag();
      BOOL v15 = (int *)MEMORY[0x1E4F940C8];
      if ((v37 & 1) == 0)
      {
LABEL_70:
        char v39 = 0;
        goto LABEL_72;
      }
      goto LABEL_62;
    }
    break;
  }
  if (!v28) {
    goto LABEL_52;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) == 0)
  {
    uint64_t v33 = PBReaderReadString();
    uint64_t v34 = 32;
    goto LABEL_49;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v38 = 32 * *(unsigned char *)(a1 + 52);
    goto LABEL_60;
  }
LABEL_71:
  char v39 = 0;
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + 52) |= 2u;
  *(unsigned char *)(a1 + 52) |= 4u;
  *(unsigned char *)(a1 + 52) |= 1u;
  if (v39)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
    if ((v12 & 1) == 0) {
      return v3;
    }
    goto LABEL_74;
  }
  unint64_t v3 = 0;
  if (v12)
  {
LABEL_74:
    uint64_t v42 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189EF4E8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EF4FF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EF533C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLocationInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDLocationInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDLocationInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDLocationInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDLocationInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189EF54C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLocationInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDLocationInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189EF552C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLocationInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2) {
          goto LABEL_32;
        }
LABEL_26:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_32;
        }
        goto LABEL_29;
      }
      if (v17 == 1)
      {
        if (v15 != 2) {
          goto LABEL_32;
        }
        goto LABEL_26;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_32:
        BOOL v18 = 0;
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2) {
      goto LABEL_32;
    }
    goto LABEL_26;
  }
LABEL_30:
  BOOL v18 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v18;
}

void sub_189EF58B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLocationInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189EF5B98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EF5F74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMuninViewStateReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v49 = v17;
        BOOL v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        uint64_t v21 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_64;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v18;
      uint64_t v26 = *(void *)(v3 + v25);
      unint64_t v27 = v26 + 1;
      if (v26 == -1 || v27 > *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v20) + v26);
      *(void *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0) {
        goto LABEL_25;
      }
      v22 += 7;
      if (v23++ >= 9)
      {
        unint64_t v24 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v30 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v24 = 0;
    }
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_64:
      if (v15)
      {
        char v44 = 1;
        goto LABEL_76;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            int v46 = *v16++;
            int v45 = v46;
            if (v46 != 1 && v45 != 2) {
              break;
            }
            *(unsigned char *)(a1 + v21[850]) |= v45;
          }
        }
        while (v45);
      }
      goto LABEL_77;
    }
    unint64_t v32 = v24 >> 3;
    BOOL v33 = v15;
    if (!v49)
    {
      uint64_t v34 = v16;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    if (v32 == 2) {
      break;
    }
    if (v32 != 1)
    {
      int v41 = PBReaderSkipValueWithTag();
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v41) {
        goto LABEL_72;
      }
      goto LABEL_60;
    }
    if (v33)
    {
      if (*(unsigned char *)(a1 + v21[850]))
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_73;
        }
        v7 -= *(unsigned char *)(a1 + v21[850]) & 1;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_73;
        }
        char v38 = objc_alloc_init(GEOPDCameraFrame);
        if (!GEOPDCameraFrameReadAllFrom((uint64_t)v38, (void *)v3)) {
          goto LABEL_74;
        }
        PBReaderRecallMark();
        uint64_t v39 = 16;
LABEL_50:
        int v40 = *(void **)(a1 + v39);
        *(void *)(a1 + v39) = v38;

        --v7;
        uint64_t v21 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
      }
LABEL_59:
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_60;
    }
LABEL_53:
    char v42 = PBReaderSkipValueWithTag();
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v42 & 1) == 0)
    {
LABEL_72:
      char v44 = 0;
      goto LABEL_76;
    }
LABEL_60:
    if (v7) {
      char v43 = 1;
    }
    else {
      char v43 = v15;
    }
    if ((v43 & 1) == 0) {
      goto LABEL_64;
    }
  }
  if (!v33) {
    goto LABEL_53;
  }
  if ((*(unsigned char *)(a1 + v21[850]) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_73:
      char v44 = 0;
      goto LABEL_75;
    }
    v7 += *(unsigned __int8 *)(a1 + v21[850]) << 30 >> 31;
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_73;
  }
  char v38 = objc_alloc_init(GEOPDLocationInfo);
  if (GEOPDLocationInfoReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    uint64_t v39 = 24;
    goto LABEL_50;
  }
LABEL_74:

  char v44 = 0;
  uint64_t v21 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
LABEL_75:
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_76:
  *(unsigned char *)(a1 + v21[850]) |= 1u;
  *(unsigned char *)(a1 + v21[850]) |= 2u;
  if (v44)
  {
LABEL_77:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (!v15) {
      return v3;
    }
    goto LABEL_78;
  }
  unint64_t v3 = 0;
  if (v15)
  {
LABEL_78:
    unint64_t v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189EF657C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EF6A44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMuninViewStateReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDMuninViewStateReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDMuninViewStateReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDMuninViewStateReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDMuninViewStateReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 16) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189EF6BFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMuninViewStateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDMuninViewStateReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189EF6C60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMuninViewStateIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDCameraFrameIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDLocationInfoIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_189EF6FDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDMuninViewStateIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 44) & 5) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 24);

  return GEOPDLocationInfoIsDirty(v3);
}

os_unfair_lock_s *GEOPDMuninViewStateIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOPDMuninViewStateIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189EF72F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDOrientedBoundingBoxReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_44;
            }
            BOOL v18 = objc_alloc_init(GEOPDOrientedPosition);
            if (GEOPDOrientedPositionReadAllFrom((uint64_t)v18, v3))
            {
              PBReaderRecallMark();
              unint64_t v19 = *(void **)(a1 + 24);
              *(void *)(a1 + 24) = v18;

              break;
            }

            goto LABEL_44;
          case 2u:
            *(unsigned char *)(a1 + 40) |= 4u;
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v22 = *(void *)(*(void *)&v3[*v7] + v21);
              *(void *)&v3[v20] = v21 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v22 = 0;
            }
            uint64_t v27 = 32;
            goto LABEL_40;
          case 3u:
            *(unsigned char *)(a1 + 40) |= 2u;
            uint64_t v23 = *v4;
            unint64_t v24 = *(void *)&v3[v23];
            if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v22 = *(void *)(*(void *)&v3[*v7] + v24);
              *(void *)&v3[v23] = v24 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v22 = 0;
            }
            uint64_t v27 = 16;
            goto LABEL_40;
          case 4u:
            *(unsigned char *)(a1 + 40) |= 1u;
            uint64_t v25 = *v4;
            unint64_t v26 = *(void *)&v3[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v22 = *(void *)(*(void *)&v3[*v7] + v26);
              *(void *)&v3[v25] = v26 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v22 = 0;
            }
            uint64_t v27 = 8;
LABEL_40:
            *(void *)(a1 + v27) = v22;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_44;
            }
            break;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v28 = v3[*v6] == 0;
  }
  else
  {
LABEL_44:
    BOOL v28 = 0;
  }
  objc_sync_exit(v3);

  return v28;
}

void sub_189EF7DD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDOrientedBoundingBoxReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDOrientedBoundingBoxReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189EF7E48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDOrientedBoundingBoxIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDOrientedPositionIsValid(a1)) {
            goto LABEL_33;
          }
          PBReaderRecallMark();
          goto LABEL_30;
        case 2u:
        case 3u:
        case 4u:
          if (v16 != 1) {
            goto LABEL_33;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v20 = v19 + 8, v20 <= *(void *)&a1[*v3])) {
            *(void *)&a1[v18] = v20;
          }
          else {
            a1[v14] = 1;
          }
          goto LABEL_30;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_33:
            PBReaderRecallMark();
            return 0;
          }
LABEL_30:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_31;
          }
          break;
      }
    }
  }
LABEL_31:
  BOOL v21 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPDOrientedPositionReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            *(unsigned char *)(a1 + 56) |= 4u;
            uint64_t v18 = *v4;
            unint64_t v19 = *(void *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
              *(void *)&v3[v18] = v19 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            int v31 = &OBJC_IVAR___GEOPDOrientedPosition__x;
            goto LABEL_52;
          case 2u:
            *(unsigned char *)(a1 + 56) |= 0x10u;
            uint64_t v21 = *v4;
            unint64_t v22 = *(void *)&v3[v21];
            if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v22 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            int v31 = &OBJC_IVAR___GEOPDOrientedPosition__y;
            goto LABEL_52;
          case 3u:
            *(unsigned char *)(a1 + 56) |= 0x20u;
            uint64_t v23 = *v4;
            unint64_t v24 = *(void *)&v3[v23];
            if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v24);
              *(void *)&v3[v23] = v24 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            int v31 = &OBJC_IVAR___GEOPDOrientedPosition__z;
            goto LABEL_52;
          case 4u:
            *(unsigned char *)(a1 + 56) |= 8u;
            uint64_t v25 = *v4;
            unint64_t v26 = *(void *)&v3[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v26);
              *(void *)&v3[v25] = v26 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            int v31 = &OBJC_IVAR___GEOPDOrientedPosition__yaw;
            goto LABEL_52;
          case 5u:
            *(unsigned char *)(a1 + 56) |= 1u;
            uint64_t v27 = *v4;
            unint64_t v28 = *(void *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v28);
              *(void *)&v3[v27] = v28 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            int v31 = &OBJC_IVAR___GEOPDOrientedPosition__pitch;
            goto LABEL_52;
          case 6u:
            *(unsigned char *)(a1 + 56) |= 2u;
            uint64_t v29 = *v4;
            unint64_t v30 = *(void *)&v3[v29];
            if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v30);
              *(void *)&v3[v29] = v30 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            int v31 = &OBJC_IVAR___GEOPDOrientedPosition__roll;
LABEL_52:
            *(void *)(a1 + *v31) = v20;
            break;
          default:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_55;
            }
            break;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v32 = v3[*v6] == 0;
  }
  else
  {
LABEL_55:
    BOOL v32 = 0;
  }
  objc_sync_exit(v3);

  return v32;
}

void sub_189EF9294(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDOrientedPositionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDOrientedPositionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189EF9310(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDOrientedTilePositionReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 8u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOPDOrientedTilePosition__x;
                goto LABEL_70;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                break;
              }
              v18 += 7;
              BOOL v25 = v19++ > 8;
              if (v25)
              {
                LODWORD(v20) = 0;
                unint64_t v26 = &OBJC_IVAR___GEOPDOrientedTilePosition__x;
                goto LABEL_73;
              }
            }
            unint64_t v26 = &OBJC_IVAR___GEOPDOrientedTilePosition__x;
            goto LABEL_71;
          case 2u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 0x20u;
            while (2)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOPDOrientedTilePosition__y;
                goto LABEL_70;
              }
              char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
              *(void *)&v3[v29] = v31;
              v20 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                BOOL v25 = v28++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  unint64_t v26 = &OBJC_IVAR___GEOPDOrientedTilePosition__y;
                  goto LABEL_73;
                }
                continue;
              }
              break;
            }
            unint64_t v26 = &OBJC_IVAR___GEOPDOrientedTilePosition__y;
            goto LABEL_71;
          case 3u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (2)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOPDOrientedTilePosition__altitude;
                goto LABEL_70;
              }
              char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
              *(void *)&v3[v35] = v37;
              v20 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                BOOL v25 = v34++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  unint64_t v26 = &OBJC_IVAR___GEOPDOrientedTilePosition__altitude;
                  goto LABEL_73;
                }
                continue;
              }
              break;
            }
            unint64_t v26 = &OBJC_IVAR___GEOPDOrientedTilePosition__altitude;
            goto LABEL_71;
          case 4u:
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 0x10u;
            while (2)
            {
              uint64_t v41 = *v4;
              uint64_t v42 = *(void *)&v3[v41];
              unint64_t v43 = v42 + 1;
              if (v42 == -1 || v43 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOPDOrientedTilePosition__yaw;
                goto LABEL_70;
              }
              char v44 = *(unsigned char *)(*(void *)&v3[*v7] + v42);
              *(void *)&v3[v41] = v43;
              v20 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                BOOL v25 = v40++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  unint64_t v26 = &OBJC_IVAR___GEOPDOrientedTilePosition__yaw;
                  goto LABEL_73;
                }
                continue;
              }
              break;
            }
            unint64_t v26 = &OBJC_IVAR___GEOPDOrientedTilePosition__yaw;
            goto LABEL_71;
          case 5u:
            char v45 = 0;
            unsigned int v46 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 2u;
            while (2)
            {
              uint64_t v47 = *v4;
              uint64_t v48 = *(void *)&v3[v47];
              unint64_t v49 = v48 + 1;
              if (v48 == -1 || v49 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOPDOrientedTilePosition__pitch;
                goto LABEL_70;
              }
              char v50 = *(unsigned char *)(*(void *)&v3[*v7] + v48);
              *(void *)&v3[v47] = v49;
              v20 |= (unint64_t)(v50 & 0x7F) << v45;
              if (v50 < 0)
              {
                v45 += 7;
                BOOL v25 = v46++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  unint64_t v26 = &OBJC_IVAR___GEOPDOrientedTilePosition__pitch;
                  goto LABEL_73;
                }
                continue;
              }
              break;
            }
            unint64_t v26 = &OBJC_IVAR___GEOPDOrientedTilePosition__pitch;
            goto LABEL_71;
          case 6u:
            char v51 = 0;
            unsigned int v52 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 4u;
            break;
          default:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_83;
            }
            continue;
        }
        while (1)
        {
          uint64_t v53 = *v4;
          uint64_t v54 = *(void *)&v3[v53];
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)&v3[*v5]) {
            break;
          }
          char v56 = *(unsigned char *)(*(void *)&v3[*v7] + v54);
          *(void *)&v3[v53] = v55;
          v20 |= (unint64_t)(v56 & 0x7F) << v51;
          if ((v56 & 0x80) == 0)
          {
            unint64_t v26 = &OBJC_IVAR___GEOPDOrientedTilePosition__roll;
            goto LABEL_71;
          }
          v51 += 7;
          BOOL v25 = v52++ > 8;
          if (v25)
          {
            LODWORD(v20) = 0;
            unint64_t v26 = &OBJC_IVAR___GEOPDOrientedTilePosition__roll;
            goto LABEL_73;
          }
        }
        unint64_t v26 = &OBJC_IVAR___GEOPDOrientedTilePosition__roll;
LABEL_70:
        v3[*v6] = 1;
LABEL_71:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_73:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v57 = v3[*v6] == 0;
  }
  else
  {
LABEL_83:
    BOOL v57 = 0;
  }
  objc_sync_exit(v3);

  return v57;
}

void sub_189EFA954(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDOrientedTilePositionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDOrientedTilePositionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189EFA9D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EFB3A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPhotoPositionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 116);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 112)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int16 *)(a1 + 132) >> 10) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 132)), (uint16x4_t)0xFFFBFFF8FFFAFFF7), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 132) >> 4) & 1)+ ((*(_WORD *)(a1 + 132) >> 11) & 1)+ ((*(_WORD *)(a1 + 132) >> 7) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 5;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        char v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_171;
        }
        char v93 = (v16 == 0) | v15;
        unsigned int v19 = (int *)MEMORY[0x1E4F940B8];
        char v92 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_171;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    int v29 = v22 & 7;
    if (v28 || v29 == 4)
    {
LABEL_171:
      if (v15)
      {
        char v86 = 1;
        goto LABEL_173;
      }
      if (v16)
      {
        while (1)
        {
          int v87 = *v16++;
          __int16 v88 = 64;
          switch(v87)
          {
            case 0:
              goto LABEL_186;
            case 2:
              goto LABEL_185;
            case 3:
              __int16 v88 = 512;
              goto LABEL_185;
            case 6:
              __int16 v88 = 256;
              goto LABEL_185;
            case 8:
              __int16 v88 = 32;
              goto LABEL_185;
            case 9:
              __int16 v88 = 16;
              goto LABEL_185;
            case 10:
              __int16 v88 = 2048;
              goto LABEL_185;
            case 11:
              __int16 v88 = 128;
              goto LABEL_185;
            case 12:
              __int16 v88 = 1024;
LABEL_185:
              *(_WORD *)(a1 + 132) |= v88;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_186;
    }
    unint64_t v31 = v22 >> 3;
    BOOL v32 = v15;
    if ((v93 & 1) == 0)
    {
      char v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_124;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(_WORD *)(a1 + 132) |= 2u;
        while (1)
        {
          uint64_t v40 = *v17;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v19) + v41);
          *(void *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_127;
          }
          v37 += 7;
          BOOL v27 = v38++ >= 9;
          if (v27)
          {
            uint64_t v39 = 0;
            goto LABEL_129;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_127:
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v39 = 0;
        }
LABEL_129:
        uint64_t v76 = 64;
        goto LABEL_138;
      case 2:
        if (!v32 || (*(_WORD *)(a1 + 132) & 0x40) != 0)
        {
          char v74 = PBReaderSkipValueWithTag();
          char v15 = v92;
          char v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v74 & 1) == 0) {
            goto LABEL_189;
          }
          goto LABEL_158;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_191;
        }
        unsigned int v91 = objc_alloc_init(GEOPDCameraMetadata);
        if (!GEOPDCameraMetadataReadAllFrom((uint64_t)v91, (void *)v3, v9 & 1)) {
          goto LABEL_190;
        }
        PBReaderRecallMark();
        -[GEOPDPhotoPosition _addNoFlagsCameraMetadata:](a1, v91);

        goto LABEL_157;
      case 3:
        if (!v32) {
          goto LABEL_124;
        }
        if ((*(_WORD *)(a1 + 132) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_191;
          }
          __int16 v78 = *(_WORD *)(a1 + 132) << 6;
          goto LABEL_156;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_191;
        }
        unsigned int v91 = objc_alloc_init(GEOPDOrientedPosition);
        if (!GEOPDOrientedPositionReadAllFrom((uint64_t)v91, (void *)v3)) {
          goto LABEL_190;
        }
        PBReaderRecallMark();
        uint64_t v45 = 88;
        goto LABEL_121;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_124;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 132) |= 8u;
        while (2)
        {
          uint64_t v49 = *v17;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v19) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v27 = v47++ >= 9;
              if (v27)
              {
                LODWORD(v48) = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v48) = 0;
        }
LABEL_133:
        uint64_t v77 = 128;
        goto LABEL_143;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_124;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v39 = 0;
        *(_WORD *)(a1 + 132) |= 1u;
        while (2)
        {
          uint64_t v55 = *v17;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v19) + v56);
            *(void *)(v3 + v55) = v57;
            v39 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v27 = v54++ >= 9;
              if (v27)
              {
                uint64_t v39 = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v39 = 0;
        }
LABEL_137:
        uint64_t v76 = 56;
LABEL_138:
        *(void *)(a1 + v76) = v39;
        goto LABEL_158;
      case 6:
        if (!v32) {
          goto LABEL_124;
        }
        if ((*(_WORD *)(a1 + 132) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_191;
          }
          __int16 v78 = *(_WORD *)(a1 + 132) << 7;
          goto LABEL_156;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_191;
        }
        unsigned int v91 = objc_alloc_init(GEOPDGeographicCoordinate);
        if (!GEOPDGeographicCoordinateReadAllFrom((uint64_t)v91, (void *)v3)) {
          goto LABEL_190;
        }
        PBReaderRecallMark();
        uint64_t v45 = 80;
        goto LABEL_121;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_124;
        }
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 132) |= 4u;
        while (2)
        {
          uint64_t v61 = *v17;
          uint64_t v62 = *(void *)(v3 + v61);
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(v3 + *v19) + v62);
            *(void *)(v3 + v61) = v63;
            v48 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              BOOL v27 = v60++ >= 9;
              if (v27)
              {
                LODWORD(v48) = 0;
                goto LABEL_142;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v48) = 0;
        }
LABEL_142:
        uint64_t v77 = 124;
LABEL_143:
        *(_DWORD *)(a1 + v77) = v48;
        goto LABEL_158;
      case 8:
        if (!v32) {
          goto LABEL_124;
        }
        if ((*(_WORD *)(a1 + 132) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_191;
          }
          __int16 v78 = *(_WORD *)(a1 + 132) << 10;
          goto LABEL_156;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_191;
        }
        unsigned int v91 = objc_alloc_init(GEOPDGroundDataBuild);
        if (!GEOPDGroundDataBuildReadAllFrom((uint64_t)v91, (void *)v3, v9 & 1)) {
          goto LABEL_190;
        }
        PBReaderRecallMark();
        uint64_t v45 = 40;
        goto LABEL_121;
      case 9:
        if (!v32 || (*(_WORD *)(a1 + 132) & 0x10) != 0) {
          goto LABEL_124;
        }
        if (v29 != 2)
        {
          char v79 = 0;
          unsigned int v80 = 0;
          uint64_t v81 = 0;
          while (1)
          {
            uint64_t v82 = *v17;
            uint64_t v83 = *(void *)(v3 + v82);
            unint64_t v84 = v83 + 1;
            if (v83 == -1 || v84 > *(void *)(v3 + *v6)) {
              break;
            }
            char v85 = *(unsigned char *)(*(void *)(v3 + *v19) + v83);
            *(void *)(v3 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              BOOL v27 = v80++ >= 9;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_170;
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_170:
          PBRepeatedUInt32Add();
          goto LABEL_157;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_191;
        }
        while (1)
        {
          unsigned int v65 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v66 = 0;
          unsigned int v67 = 0;
          uint64_t v68 = 0;
          while (1)
          {
            uint64_t v69 = *v17;
            uint64_t v70 = *(void *)(v3 + v69);
            unint64_t v71 = v70 + 1;
            if (v70 == -1 || v71 > *(void *)(v3 + *v6)) {
              break;
            }
            char v72 = *(unsigned char *)(*(void *)(v3 + *v19) + v70);
            *(void *)(v3 + v69) = v71;
            v68 |= (unint64_t)(v72 & 0x7F) << v66;
            if (v72 < 0)
            {
              v66 += 7;
              BOOL v27 = v67++ >= 9;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_105;
          }
          *(unsigned char *)(v3 + *v65) = 1;
LABEL_105:
          PBRepeatedUInt32Add();
        }
        PBReaderRecallMark();
        char v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v92;
        goto LABEL_158;
      case 10:
        if (!v32) {
          goto LABEL_124;
        }
        if ((*(_WORD *)(a1 + 132) & 0x800) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_191;
          }
          __int16 v78 = 16 * *(_WORD *)(a1 + 132);
          goto LABEL_156;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_191;
        }
        unsigned int v91 = objc_alloc_init(GEOPDOrientedTilePosition);
        if (!GEOPDOrientedTilePositionReadAllFrom((uint64_t)v91, (void *)v3)) {
          goto LABEL_190;
        }
        PBReaderRecallMark();
        uint64_t v45 = 104;
        goto LABEL_121;
      case 11:
        if (!v32) {
          goto LABEL_124;
        }
        if ((*(_WORD *)(a1 + 132) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_191;
          }
          __int16 v78 = *(_WORD *)(a1 + 132) << 8;
          goto LABEL_156;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_191;
        }
        unsigned int v91 = objc_alloc_init(GEOTileCoordinate);
        if (!GEOTileCoordinateReadAllFrom((uint64_t)v91, (void *)v3)) {
          goto LABEL_190;
        }
        PBReaderRecallMark();
        uint64_t v45 = 72;
        goto LABEL_121;
      case 12:
        if (!v32)
        {
LABEL_124:
          char v75 = PBReaderSkipValueWithTag();
          char v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v92;
          if ((v75 & 1) == 0)
          {
LABEL_189:
            char v86 = 0;
            goto LABEL_173;
          }
LABEL_158:
          if (!(v15 & 1 | (v7 != 0)) || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_171;
          }
          continue;
        }
        if ((*(_WORD *)(a1 + 132) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_191;
          }
          __int16 v78 = 32 * *(_WORD *)(a1 + 132);
LABEL_156:
          v7 += v78 >> 15;
LABEL_157:
          char v15 = v92;
          char v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_158;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_191;
        }
        unsigned int v91 = objc_alloc_init(GEOPDRigMetrics);
        if (GEOPDRigMetricsReadAllFrom((uint64_t)v91, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v45 = 96;
LABEL_121:
          uint64_t v73 = *(void **)(a1 + v45);
          *(void *)(a1 + v45) = v91;

          --v7;
          goto LABEL_157;
        }
LABEL_190:

LABEL_191:
        char v86 = 0;
        char v15 = v92;
        char v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_173:
        *(_WORD *)(a1 + 132) |= 0x40u;
        *(_WORD *)(a1 + 132) |= 0x200u;
        *(_WORD *)(a1 + 132) |= 0x100u;
        *(_WORD *)(a1 + 132) |= 0x20u;
        *(_WORD *)(a1 + 132) |= 0x10u;
        *(_WORD *)(a1 + 132) |= 0x800u;
        *(_WORD *)(a1 + 132) |= 0x80u;
        *(_WORD *)(a1 + 132) |= 0x400u;
        if (v86)
        {
LABEL_186:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_187;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v15 & 1) == 0) {
          return v3;
        }
LABEL_187:
        char v89 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      default:
        int v44 = PBReaderSkipValueWithTag();
        char v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v92;
        if (!v44) {
          goto LABEL_189;
        }
        goto LABEL_158;
    }
  }
}

void sub_189EFC498(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EFC6E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EFC8CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EFCA38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EFCDC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EFCF30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EFD09C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EFE028(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPhotoPositionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 48);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDCameraMetadata readAll:](*(void *)(*((void *)&v8 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  objc_msgSend(*(id *)(a1 + 88), "readAll:", 1, (void)v8);
  [*(id *)(a1 + 80) readAll:1];
  -[GEOPDGroundDataBuild readAll:](*(void *)(a1 + 40), 1);
  [*(id *)(a1 + 104) readAll:1];
  return [*(id *)(a1 + 72) readAll:1];
}

unint64_t GEOPDPhotoPositionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 116))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPhotoPositionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 120));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 112) = [v8 position];
  *(_DWORD *)(a1 + 116) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDPhotoPositionReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDPhotoPositionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPhotoPositionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDPhotoPositionCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 120));
  return Specified;
}

void sub_189EFE314(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPhotoPositionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDPhotoPositionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189EFE378(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189EFE71C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPhotoPositionIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  __int16 v2 = *(_WORD *)(a1 + 132);
  if ((v2 & 0x1340) != 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOPDGroundDataBuildIsDirty(*(void *)(a1 + 40))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 132);
  }
  if ((v2 & 0xC90) != 0) {
    return 1;
  }
  if ((v2 & 0x40) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 48);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOPDCameraMetadataIsDirty(*(void *)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_20;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_20:

  return v3;
}

os_unfair_lock_s *GEOPDPhotoPositionIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDPhotoPositionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 30);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189EFEF08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRigMetricsReadAllFrom(uint64_t a1, void *a2)
{
  __int16 v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    id v5 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v2[*MEMORY[0x1E4F940E8]] < *(void *)&v2[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v2[*v5]) {
          break;
        }
        char v7 = 0;
        unsigned int v8 = 0;
        unint64_t v9 = 0;
        while (1)
        {
          uint64_t v10 = *v3;
          uint64_t v11 = *(void *)&v2[v10];
          unint64_t v12 = v11 + 1;
          if (v11 == -1 || v12 > *(void *)&v2[*v4]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v11);
          *(void *)&v2[v10] = v12;
          v9 |= (unint64_t)(v13 & 0x7F) << v7;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v7 += 7;
          BOOL v14 = v8++ >= 9;
          if (v14)
          {
            unint64_t v9 = 0;
            int v15 = v2[*v5];
            goto LABEL_15;
          }
        }
        v2[*v5] = 1;
LABEL_13:
        int v15 = v2[*v5];
        if (v2[*v5]) {
          unint64_t v9 = 0;
        }
LABEL_15:
        int v16 = v9 & 7;
        if (v15 || v16 == 4) {
          break;
        }
        if ((v9 >> 3) == 1)
        {
          if (v16 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_47;
            }
            while (*(void *)&v2[*v3] < *(void *)&v2[*v4] && !v2[*v5])
            {
              char v18 = 0;
              unsigned int v19 = 0;
              uint64_t v20 = 0;
              while (1)
              {
                uint64_t v21 = *v3;
                uint64_t v22 = *(void *)&v2[v21];
                unint64_t v23 = v22 + 1;
                if (v22 == -1 || v23 > *(void *)&v2[*v4]) {
                  break;
                }
                char v24 = *(unsigned char *)(*(void *)&v2[*v6] + v22);
                *(void *)&v2[v21] = v23;
                v20 |= (unint64_t)(v24 & 0x7F) << v18;
                if (v24 < 0)
                {
                  v18 += 7;
                  BOOL v14 = v19++ >= 9;
                  if (!v14) {
                    continue;
                  }
                }
                goto LABEL_32;
              }
              v2[*v5] = 1;
LABEL_32:
              PBRepeatedUInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            while (1)
            {
              uint64_t v28 = *v3;
              uint64_t v29 = *(void *)&v2[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&v2[*v4]) {
                break;
              }
              char v31 = *(unsigned char *)(*(void *)&v2[*v6] + v29);
              *(void *)&v2[v28] = v30;
              v27 |= (unint64_t)(v31 & 0x7F) << v25;
              if (v31 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_44;
            }
            v2[*v5] = 1;
LABEL_44:
            PBRepeatedUInt32Add();
          }
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_47;
        }
      }
      while (*(void *)&v2[*v3] < *(void *)&v2[*v4]);
    }
    BOOL v32 = v2[*v5] == 0;
  }
  else
  {
LABEL_47:
    BOOL v32 = 0;
  }
  objc_sync_exit(v2);

  return v32;
}

void sub_189EFFEE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void geo_enumerateSolarEvents(int a1, int a2, void *a3, double a4, double a5, double a6, double a7)
{
  uint64_t v59 = *MEMORY[0x1E4F143B8];
  *(double *)BOOL v36 = a5;
  *(double *)&v36[1] = a6;
  double v35 = a7;
  char v34 = a2;
  id v12 = a3;
  unint64_t v30 = (void (**)(void, void, void, double))v12;
  BOOL v14 = a4 <= 0.0 || v12 == 0 || a1 == 0;
  if (!v14 && a6 >= -180.0 && a6 <= 180.0 && a5 >= -90.0 && a5 <= 90.0)
  {
    double v15 = *MEMORY[0x1E4F1CF78];
    double v16 = (*MEMORY[0x1E4F1CF78] + a4) / 86400.0 + 2440587.5;
    double v17 = 0.000694444444;
    if (a2) {
      double v18 = -0.000694444444;
    }
    else {
      double v18 = 0.000694444444;
    }
    double v19 = v18 + v16;
    double v33 = v18 + v16;
    GEORiseTransitSet::GEORiseTransitSet((uint64_t)v48, (uint64_t)v36, &v33, &v35, &GEOSolarFunctionsAccuracySeconds, &v34);
    unint64_t v20 = 0;
    unint64_t v21 = 0;
    if (a2) {
      double v22 = 1.79769313e308;
    }
    else {
      double v22 = 2.22507386e-308;
    }
    do
    {
      unsigned int v23 = allEvents[v20];
      if ((v23 & a1) != 0)
      {
        GEORiseTransitSet::eventOfType((GEORiseTransitSet *)v48, v23);
        BOOL v25 = v24 < v22;
        if (!a2) {
          BOOL v25 = v24 > v22;
        }
        if (v25)
        {
          unint64_t v21 = v20;
          double v22 = v24;
        }
      }
      ++v20;
    }
    while (v20 != 10);
    char v32 = 0;
    double v26 = -v15;
    if (!a2) {
      double v17 = -0.000694444444;
    }
    unint64_t v27 = v21;
    while (1)
    {
      uint64_t v28 = allEvents[v27];
      if ((v28 & a1) != 0)
      {
        GEORiseTransitSet::eventOfType((GEORiseTransitSet *)v48, allEvents[v27]);
        double v19 = v29;
        ((void (**)(void, uint64_t, char *, double))v30)[2](v30, v28, &v32, v26 + (v29 + -2440587.5) * 86400.0);
      }
      if (a2)
      {
        unint64_t v27 = (v27 + 1) % 0xA;
      }
      else if (v27)
      {
        --v27;
      }
      else
      {
        unint64_t v27 = 9;
      }
      if (v32 || v27 == v21)
      {
        double v31 = v17 + v19;
        GEORiseTransitSet::GEORiseTransitSet((uint64_t)v37, (uint64_t)v36, &v31, &v35, &GEOSolarFunctionsAccuracySeconds, &v34);
        v48[0] = v37[0];
        v48[1] = v37[1];
        v48[2] = v37[2];
        memcpy(v49, v38, sizeof(v49));
        std::__function::__value_func<double ()(double)>::operator=[abi:ne180100](v50, (uint64_t)v39);
        long long v51 = v40;
        long long v52 = v41;
        uint64_t v53 = v42;
        long long v56 = v45;
        long long v57 = v46;
        long long v58 = v47;
        long long v54 = v43;
        long long v55 = v44;
        std::__function::__value_func<double ()(double)>::~__value_func[abi:ne180100](v39);
        unint64_t v27 = v21;
        if (v32) {
          break;
        }
      }
    }
    std::__function::__value_func<double ()(double)>::~__value_func[abi:ne180100](v50);
  }
}

void sub_189F00FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_189F010C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F01160(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F0127C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

GEOURLWithHeaders *GEOURLAuthenticationForComponents(void *a1, GEOURLWithHeaders *a2)
{
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  int v4 = [(GEOURLWithHeaders *)a2 requestStyle];
  if (v4 != 1)
  {
    if (!v4)
    {
      id v5 = [v3 URLComponents];
      uint64_t v6 = GEOURLAuthenticationGenerateURLFromComponents(v5);

      char v7 = [GEOURLWithHeaders alloc];
      unsigned int v8 = [v3 headerFields];
      a2 = [(GEOURLWithHeaders *)v7 initWithURL:v6 headerFields:v8];

      goto LABEL_34;
    }
    goto LABEL_35;
  }
  id v54 = v3;
  id v9 = [v3 URLComponents];
  uint64_t v6 = [MEMORY[0x1E4F1CA60] dictionaryWithCapacity:10];
  uint64_t v10 = [MEMORY[0x1E4F1CA48] array];
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  long long v62 = 0u;
  uint64_t v53 = v9;
  uint64_t v11 = [v9 queryItems];
  uint64_t v12 = [v11 countByEnumeratingWithState:&v59 objects:v63 count:16];
  long long v55 = v6;
  if (!v12)
  {
    long long v57 = 0;
    goto LABEL_26;
  }
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)v60;
  uint64_t v56 = *(void *)v60;
  long long v57 = 0;
  do
  {
    uint64_t v15 = 0;
    uint64_t v58 = v13;
    do
    {
      if (*(void *)v60 != v14) {
        objc_enumerationMutation(v11);
      }
      double v16 = *(void **)(*((void *)&v59 + 1) + 8 * v15);
      double v17 = [v16 name];
      if ([v17 isEqualToString:@"x"])
      {
        double v18 = [v16 value];
        double v19 = v6;
        unint64_t v20 = v18;
        unint64_t v21 = @"Maps-Tile-X";
LABEL_15:
        [v19 setObject:v20 forKeyedSubscript:v21];
        goto LABEL_16;
      }
      if ([v17 isEqualToString:@"y"])
      {
        double v18 = [v16 value];
        double v19 = v6;
        unint64_t v20 = v18;
        unint64_t v21 = @"Maps-Tile-Y";
        goto LABEL_15;
      }
      if ([v17 isEqualToString:@"z"])
      {
        double v18 = [v16 value];
        double v19 = v6;
        unint64_t v20 = v18;
        unint64_t v21 = @"Maps-Tile-Z";
        goto LABEL_15;
      }
      if ([v17 isEqualToString:@"v"])
      {
        uint64_t v22 = [v16 value];

        long long v57 = (void *)v22;
      }
      id v23 = v16;
      double v24 = [v23 name];
      BOOL v25 = escapeChars();
      double v18 = [v24 stringByAddingPercentEncodingWithAllowedCharacters:v25];

      double v26 = [v23 value];

      if (v26)
      {
        unint64_t v27 = [v18 stringByAppendingString:@"="];

        uint64_t v28 = [v23 value];
        double v29 = escapeChars();
        [v28 stringByAddingPercentEncodingWithAllowedCharacters:v29];
        unint64_t v30 = v11;
        v32 = double v31 = v10;
        double v18 = [v27 stringByAppendingString:v32];

        uint64_t v10 = v31;
        uint64_t v11 = v30;

        uint64_t v6 = v55;
      }
      uint64_t v13 = v58;
      uint64_t v14 = v56;

      [v10 addObject:v18];
LABEL_16:

      ++v15;
    }
    while (v13 != v15);
    uint64_t v33 = [v11 countByEnumeratingWithState:&v59 objects:v63 count:16];
    uint64_t v13 = v33;
  }
  while (v33);
LABEL_26:

  if ([v10 count])
  {
    char v34 = [v10 componentsJoinedByString:@"&"];
    [v6 setObject:v34 forKeyedSubscript:@"Maps-Tile-Style"];
  }
  id v3 = v54;
  double v35 = v57;
  if (v57)
  {
    BOOL v36 = v10;
    id v37 = v57;
    unsigned int v38 = +[GEOResourceManifestManager modernManager];
    uint64_t v39 = [v38 authToken];

    if (v39)
    {
      long long v40 = [@"4cjLaD4jGRwlQ9U" stringByAppendingString:v39];
      id v41 = [v40 dataUsingEncoding:4];
      CC_SHA512((const void *)[v41 bytes], objc_msgSend(v41, "length"), md);
      uint64_t v42 = [v37 dataUsingEncoding:4];
      long long v43 = [MEMORY[0x1E4F1CA58] dataWithLength:32];
      id v44 = v42;
      uint64_t v45 = [v44 bytes];
      size_t v46 = [v44 length];
      id v47 = v43;
      uint64_t v48 = (void *)[v47 mutableBytes];
      uint64_t v49 = (const void *)v45;
      double v35 = v57;
      CCHmac(2u, md, 0x40uLL, v49, v46, v48);
      uint64_t v50 = [v47 base64EncodedStringWithOptions:0];

      uint64_t v6 = v55;
      id v3 = v54;
    }
    else
    {
      uint64_t v50 = 0;
    }

    [v6 setObject:v50 forKeyedSubscript:@"Maps-Auth-Token"];
    uint64_t v10 = v36;
  }
  [v53 setQueryItems:0];

  long long v51 = [v3 headerFields];
  [v51 addEntriesFromDictionary:v6];

  a2 = [v3 URLWithHeaders];
LABEL_34:

LABEL_35:

  return a2;
}

void __escapeChars_block_invoke()
{
  os_log_t v0 = [MEMORY[0x1E4F28B88] URLQueryAllowedCharacterSet];
  id v3 = (id)[v0 mutableCopy];

  [v3 removeCharactersInString:@"%;/?Â¿:@&=$+,[]#!'()*<>"];
  uint64_t v1 = [v3 copy];
  __int16 v2 = (void *)_MergedGlobals_281;
  _MergedGlobals_281 = v1;
}

id GEOGetGEORouteTrafficBuilderLog()
{
  if (qword_1EB2A0030 != -1) {
    dispatch_once(&qword_1EB2A0030, &__block_literal_global_141);
  }
  os_log_t v0 = (void *)_MergedGlobals_282;

  return v0;
}

void __GEOGetGEORouteTrafficBuilderLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEORouteTrafficBuilder");
  uint64_t v1 = (void *)_MergedGlobals_282;
  _MergedGlobals_282 = (uint64_t)v0;
}

BOOL GEOTrafficIncidentReadAllFrom(uint64_t a1, void *a2)
{
  __int16 v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    id v3 = (int *)MEMORY[0x1E4F940E8];
    int v4 = (int *)MEMORY[0x1E4F940E0];
    id v5 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_189F03398(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficIncidentReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOTrafficIncidentReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_189F033F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficIncidentIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  id v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

void sub_189F036B0(_Unwind_Exception *a1)
{
}

void sub_189F03718(_Unwind_Exception *a1)
{
}

id GEOGetDeviceConnectionLog()
{
  if (qword_1EB2A0050 != -1) {
    dispatch_once(&qword_1EB2A0050, &__block_literal_global_266);
  }
  os_log_t v0 = (void *)qword_1EB2A0048;

  return v0;
}

id _processUUID()
{
  if (qword_1EB2A0060 != -1) {
    dispatch_once(&qword_1EB2A0060, &__block_literal_global_270);
  }
  os_log_t v0 = (void *)qword_1EB2A0058;

  return v0;
}

void __GEOGetDeviceConnectionLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "DeviceConnection");
  uint64_t v1 = (void *)qword_1EB2A0048;
  qword_1EB2A0048 = (uint64_t)v0;
}

void ___processUUID_block_invoke()
{
  id v2 = [MEMORY[0x1E4F29128] UUID];
  uint64_t v0 = [v2 UUIDString];
  uint64_t v1 = (void *)qword_1EB2A0058;
  qword_1EB2A0058 = v0;
}

void __GEOGetTileDBLog_block_invoke_0()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "TileDB");
  uint64_t v1 = (void *)_MergedGlobals_284;
  _MergedGlobals_284 = (uint64_t)v0;
}

void sub_189F09678(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F0991C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F09BC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F09E64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchTokenReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  int v9 = 0;
  unsigned int v10 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFFFFFEFFFDLL) & 0xFF01FF01FF01FF01));
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      int v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 | (v10 > 2);
  if ((v12 | v8)) {
    char v13 = 0;
  }
  else {
    char v13 = a3;
  }
  LODWORD(v14) = v12;
  char v52 = (v13 == 0) | v12;
  BOOL v15 = (int *)MEMORY[0x1E4F940E8];
  BOOL v16 = (int *)MEMORY[0x1E4F940C8];
  double v17 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v16)) {
      goto LABEL_81;
    }
    char v18 = 0;
    unsigned int v19 = 0;
    unint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = *v15;
      unint64_t v22 = *(void *)(v3 + v21);
      if (v22 == -1 || v22 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v17) + v22);
      *(void *)(v3 + v21) = v22 + 1;
      v20 |= (unint64_t)(v23 & 0x7F) << v18;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v18 += 7;
      BOOL v24 = v19++ >= 9;
      if (v24)
      {
        unint64_t v20 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v16) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v16);
    if (*(unsigned char *)(v3 + *v16)) {
      unint64_t v20 = 0;
    }
LABEL_26:
    if (v25 || (v20 & 7) == 4)
    {
LABEL_81:
      if (v14)
      {
        char v46 = 1;
        goto LABEL_94;
      }
      if (v13)
      {
        while (1)
        {
          int v48 = *v13++;
          char v47 = 4;
          switch(v48)
          {
            case 0:
              goto LABEL_95;
            case 1:
              goto LABEL_88;
            case 2:
              char v47 = 8;
              goto LABEL_88;
            case 4:
              char v47 = 2;
              goto LABEL_88;
            case 5:
              char v47 = 16;
LABEL_88:
              *(unsigned char *)(a1 + 64) |= v47;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_95;
    }
    unint64_t v27 = v20 >> 3;
    BOOL v28 = (char)v14;
    if ((v52 & 1) == 0)
    {
      double v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if (!v28) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 64) & 4) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 24;
          goto LABEL_46;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_91;
        }
        char v45 = 32 * *(unsigned char *)(a1 + 64);
        goto LABEL_78;
      case 2:
        if (!v28) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 64) & 8) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 32;
LABEL_46:
          BOOL v36 = *(void **)(a1 + v34);
          *(void *)(a1 + v34) = v33;

          --v7;
          goto LABEL_79;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_91;
        }
        char v45 = 16 * *(unsigned char *)(a1 + 64);
        goto LABEL_78;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_66;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (2)
        {
          uint64_t v40 = *v15;
          unint64_t v41 = *(void *)(v3 + v40);
          if (v41 == -1 || v41 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(v3 + *v17) + v41);
            *(void *)(v3 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              BOOL v24 = v38++ >= 9;
              if (v24)
              {
                LODWORD(v39) = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          LODWORD(v39) = 0;
        }
LABEL_71:
        *(_DWORD *)(a1 + 60) = v39;
        goto LABEL_80;
      case 4:
        if (!v28 || (*(unsigned char *)(a1 + 64) & 2) != 0) {
          goto LABEL_66;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_91;
        }
        int v51 = (int)v14;
        BOOL v14 = objc_alloc_init(GEOPDSearchTokenForm);
        if (!GEOPDSearchTokenFormReadAllFrom((uint64_t)v14, (void *)v3)) {
          goto LABEL_92;
        }
        PBReaderRecallMark();
        -[GEOPDSearchToken _addNoFlagsAlternateForm:](a1, v14);

        goto LABEL_65;
      case 5:
        if (!v28)
        {
LABEL_66:
          char v44 = PBReaderSkipValueWithTag();
          BOOL v16 = (int *)MEMORY[0x1E4F940C8];
          if ((v44 & 1) == 0)
          {
LABEL_90:
            char v46 = 0;
            goto LABEL_94;
          }
          goto LABEL_80;
        }
        if ((*(unsigned char *)(a1 + 64) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_91:
            char v46 = 0;
            goto LABEL_93;
          }
          char v45 = 8 * *(unsigned char *)(a1 + 64);
LABEL_78:
          v7 += v45 >> 7;
          goto LABEL_79;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_91;
        }
        int v51 = (int)v14;
        BOOL v14 = objc_alloc_init(GEOPDSearchTokenSpan);
        if (GEOPDSearchTokenSpanReadAllFrom((uint64_t)v14, (void *)v3))
        {
          PBReaderRecallMark();
          long long v43 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v14;

          --v7;
LABEL_65:
          LODWORD(v14) = v51;
LABEL_79:
          BOOL v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_80:
          if (!(v14 & 1 | (v7 != 0))) {
            goto LABEL_81;
          }
          continue;
        }
LABEL_92:

        char v46 = 0;
        LOBYTE(v14) = v51;
LABEL_93:
        BOOL v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_94:
        *(unsigned char *)(a1 + 64) |= 4u;
        *(unsigned char *)(a1 + 64) |= 8u;
        *(unsigned char *)(a1 + 64) |= 2u;
        *(unsigned char *)(a1 + 64) |= 0x10u;
        if (v46)
        {
LABEL_95:
          unint64_t v3 = *(unsigned char *)(v3 + *v16) == 0;
          if (v14) {
            goto LABEL_96;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v14)
          {
LABEL_96:
            uint64_t v49 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v35 = PBReaderSkipValueWithTag();
        BOOL v16 = (int *)MEMORY[0x1E4F940C8];
        if (!v35) {
          goto LABEL_90;
        }
        goto LABEL_80;
    }
  }
}

void sub_189F0ACD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F0B250(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F0B34C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchTokenCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v1 = *(id *)(a1 + 16);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v6;
    while (1)
    {
      if (*(void *)v6 != v4) {
        objc_enumerationMutation(v1);
      }
      if (!--v3)
      {
        uint64_t v3 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
        if (!v3) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDSearchTokenReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchTokenReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    int v9 = (int *)&GEOPDSearchTokenReadAllFrom_recursiveTag;
  }
  else {
    int v9 = (int *)&GEOPDSearchTokenReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchTokenReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchTokenCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189F0B5BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F0B844(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F0BAEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchTokenFormReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    long long v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v23 = PBReaderReadString();
          BOOL v24 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v23;
        }
        else if ((v10 >> 3) == 2)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_32;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v19) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_189F0C144(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F0C4BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchTokenSetReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          BOOL v16 = 0;
        }
        else {
          BOOL v16 = a3;
        }
        BOOL v17 = v16 == 0;
        unsigned int v18 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v49 = v17;
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        unint64_t v21 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_59;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v18;
      unint64_t v26 = *(void *)(v3 + v25);
      if (v26 == -1 || v26 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v26);
      *(void *)(v3 + v25) = v26 + 1;
      v24 |= (unint64_t)(v27 & 0x7F) << v22;
      if ((v27 & 0x80) == 0) {
        goto LABEL_25;
      }
      v22 += 7;
      if (v23++ >= 9)
      {
        unint64_t v24 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v24 = 0;
    }
LABEL_27:
    if (v29 || (v24 & 7) == 4)
    {
LABEL_59:
      if (v15)
      {
        char v43 = 1;
        goto LABEL_74;
      }
      if (!v16) {
        goto LABEL_75;
      }
      while (1)
      {
        int v46 = *v16++;
        int v45 = v46;
        if (v46 == 1) {
          break;
        }
        if (v45 == 2)
        {
          char v44 = 1;
LABEL_65:
          *(unsigned char *)(a1 + v21[912]) |= v44;
        }
        else if (!v45)
        {
          goto LABEL_75;
        }
      }
      char v44 = 2;
      goto LABEL_65;
    }
    unint64_t v31 = v24 >> 3;
    BOOL v32 = v15;
    if (!v49)
    {
      uint64_t v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 != 2) {
      break;
    }
    if (v32)
    {
      if (*(unsigned char *)(a1 + v21[912]))
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_71:
          char v43 = 0;
          goto LABEL_73;
        }
        v9 -= *(unsigned char *)(a1 + v21[912]) & 1;
      }
      else
      {
        uint64_t v38 = PBReaderReadString();
        uint64_t v39 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v38;

        --v9;
      }
      goto LABEL_54;
    }
LABEL_50:
    char v41 = PBReaderSkipValueWithTag();
    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v41 & 1) == 0)
    {
LABEL_70:
      char v43 = 0;
      goto LABEL_74;
    }
LABEL_55:
    if (v9) {
      char v42 = 1;
    }
    else {
      char v42 = v15;
    }
    if ((v42 & 1) == 0) {
      goto LABEL_59;
    }
  }
  if (v31 != 1)
  {
    int v40 = PBReaderSkipValueWithTag();
    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if (!v40) {
      goto LABEL_70;
    }
    goto LABEL_55;
  }
  if (!v32 || (*(unsigned char *)(a1 + v21[912]) & 2) != 0) {
    goto LABEL_50;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_71;
  }
  char v37 = objc_alloc_init(GEOPDSearchToken);
  if (GEOPDSearchTokenReadAllFrom((uint64_t)v37, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDSearchTokenSet _addNoFlagsToken:](a1, v37);

    unint64_t v21 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
LABEL_54:
    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_55;
  }

  char v43 = 0;
  unint64_t v21 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
LABEL_73:
  uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_74:
  *(unsigned char *)(a1 + v21[912]) |= 2u;
  *(unsigned char *)(a1 + v21[912]) |= 1u;
  if (v43)
  {
LABEL_75:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v15) {
      goto LABEL_76;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v15)
    {
LABEL_76:
      char v47 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_189F0CDE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F0CED8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchTokenSetCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        -[GEOPDSearchToken readAll:](*(void *)(*((void *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDSearchTokenSetReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchTokenSetReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDSearchTokenSetReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDSearchTokenSetReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchTokenSetReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchTokenSetCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189F0D9BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchTokenSetIsValid(char *a1)
{
  v86[1] = *MEMORY[0x1E4F143B8];
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_161:
    BOOL v84 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v84;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    if (a1[*v4]) {
      goto LABEL_161;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      unint64_t v10 = *(void *)&a1[v9];
      if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
        break;
      }
      char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v10 + 1;
      v8 |= (unint64_t)(v11 & 0x7F) << v6;
      if ((v11 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v12 = v7++ >= 9;
      if (v12)
      {
        unint64_t v8 = 0;
        int v13 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v13 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v14 = v8 & 7;
    if (v13 || v14 == 4) {
      goto LABEL_161;
    }
    if ((v8 >> 3) != 2) {
      break;
    }
    if (v14 != 2) {
      goto LABEL_164;
    }
LABEL_156:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_164;
    }
LABEL_160:
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      goto LABEL_161;
    }
  }
  if ((v8 >> 3) != 1) {
    goto LABEL_156;
  }
  if (v14 != 2 || !PBReaderPlaceMark()) {
    goto LABEL_164;
  }
  objc_msgSend(a1, "position", 0, 0);
  [a1 length];
LABEL_23:
  while (2)
  {
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
      goto LABEL_158;
    }
    char v16 = 0;
    unsigned int v17 = 0;
    unint64_t v18 = 0;
    while (1)
    {
      uint64_t v19 = *v2;
      unint64_t v20 = *(void *)&a1[v19];
      if (v20 == -1 || v20 >= *(void *)&a1[*v3]) {
        break;
      }
      char v21 = *(unsigned char *)(*(void *)&a1[*v5] + v20);
      *(void *)&a1[v19] = v20 + 1;
      v18 |= (unint64_t)(v21 & 0x7F) << v16;
      if ((v21 & 0x80) == 0) {
        goto LABEL_33;
      }
      v16 += 7;
      BOOL v12 = v17++ >= 9;
      if (v12)
      {
        unint64_t v18 = 0;
        int v22 = a1[*v4];
        goto LABEL_35;
      }
    }
    a1[*v4] = 1;
LABEL_33:
    int v22 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v18 = 0;
    }
LABEL_35:
    int v23 = v18 & 7;
    if (v22 || v23 == 4)
    {
LABEL_158:
      int v83 = a1[*v4];
      PBReaderRecallMark();
      if (v83) {
        goto LABEL_164;
      }
      PBReaderRecallMark();
      goto LABEL_160;
    }
    switch((v18 >> 3))
    {
      case 1u:
        if (v23 != 2) {
          goto LABEL_163;
        }
        goto LABEL_43;
      case 2u:
        if (v23 == 2) {
          goto LABEL_43;
        }
        goto LABEL_163;
      case 3u:
        if ((v18 & 7) != 0) {
          goto LABEL_163;
        }
        unsigned int v25 = 0;
        while (1)
        {
          uint64_t v26 = *v2;
          unint64_t v27 = *(void *)&a1[v26];
          if (v27 == -1 || v27 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v28 = v27 + 1;
          int v29 = *(char *)(*(void *)&a1[*v5] + v27);
          *(void *)&a1[v26] = v28;
          if (v29 < 0)
          {
            BOOL v30 = v25++ > 8;
            if (!v30) {
              continue;
            }
          }
          goto LABEL_23;
        }
        a1[*v4] = 1;
        continue;
      case 4u:
        if (v23 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_163;
        }
        [a1 position];
        [a1 length];
        v86[0] = 0;
        if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
          goto LABEL_148;
        }
        while (2)
        {
          if (a1[*v4]) {
            goto LABEL_147;
          }
          char v31 = 0;
          unsigned int v32 = 0;
          unint64_t v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            unint64_t v35 = *(void *)&a1[v34];
            if (v35 == -1 || v35 >= *(void *)&a1[*v3]) {
              break;
            }
            char v36 = *(unsigned char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v35 + 1;
            v33 |= (unint64_t)(v36 & 0x7F) << v31;
            if ((v36 & 0x80) == 0) {
              goto LABEL_65;
            }
            v31 += 7;
            BOOL v12 = v32++ >= 9;
            if (v12)
            {
              unint64_t v33 = 0;
              int v37 = a1[*v4];
              goto LABEL_67;
            }
          }
          a1[*v4] = 1;
LABEL_65:
          int v37 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v33 = 0;
          }
LABEL_67:
          int v38 = v33 & 7;
          if (v37 || v38 == 4) {
            goto LABEL_147;
          }
          if ((v33 >> 3) == 1)
          {
            uint64_t v44 = 0;
            char v45 = 1;
            while (1)
            {
              char v46 = v45;
              int v47 = *((_DWORD *)v86 + v44);
              if (!v47) {
                break;
              }
              if (v47 != 1)
              {
                char v45 = 0;
                uint64_t v44 = 1;
                if (v46) {
                  continue;
                }
              }
              goto LABEL_162;
            }
            *((_DWORD *)v86 + v44) = 1;
            if (v38 != 2)
            {
LABEL_162:
              PBReaderRecallMark();
              goto LABEL_163;
            }
          }
          else if ((v33 >> 3) == 2)
          {
            uint64_t v40 = 0;
            char v41 = 1;
            while (1)
            {
              char v42 = v41;
              int v43 = *((_DWORD *)v86 + v40);
              if (!v43) {
                break;
              }
              if (v43 != 2)
              {
                char v41 = 0;
                uint64_t v40 = 1;
                if (v42) {
                  continue;
                }
              }
              goto LABEL_162;
            }
            *((_DWORD *)v86 + v40) = 2;
            if (!v38)
            {
              unsigned int v48 = 0;
              while (1)
              {
                uint64_t v49 = *v2;
                unint64_t v50 = *(void *)&a1[v49];
                if (v50 == -1 || v50 >= *(void *)&a1[*v3]) {
                  break;
                }
                unint64_t v51 = v50 + 1;
                int v52 = *(char *)(*(void *)&a1[*v5] + v50);
                *(void *)&a1[v49] = v51;
                if (v52 < 0)
                {
                  BOOL v30 = v48++ > 8;
                  if (!v30) {
                    continue;
                  }
                }
                goto LABEL_94;
              }
              a1[*v4] = 1;
              goto LABEL_94;
            }
            goto LABEL_162;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_162;
          }
LABEL_94:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_147;
          }
          continue;
        }
      case 5u:
        if (v23 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_163;
        }
        [a1 position];
        [a1 length];
        v86[0] = 0;
        if (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          while (1)
          {
            if (a1[*v4]) {
              goto LABEL_147;
            }
            char v53 = 0;
            unsigned int v54 = 0;
            unint64_t v55 = 0;
            while (1)
            {
              uint64_t v56 = *v2;
              unint64_t v57 = *(void *)&a1[v56];
              if (v57 == -1 || v57 >= *(void *)&a1[*v3]) {
                break;
              }
              char v58 = *(unsigned char *)(*(void *)&a1[*v5] + v57);
              *(void *)&a1[v56] = v57 + 1;
              v55 |= (unint64_t)(v58 & 0x7F) << v53;
              if ((v58 & 0x80) == 0) {
                goto LABEL_109;
              }
              v53 += 7;
              BOOL v12 = v54++ >= 9;
              if (v12)
              {
                unint64_t v55 = 0;
                int v59 = a1[*v4];
                goto LABEL_111;
              }
            }
            a1[*v4] = 1;
LABEL_109:
            int v59 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v55 = 0;
            }
LABEL_111:
            int v60 = v55 & 7;
            if (v59 || v60 == 4)
            {
LABEL_147:
              BOOL v80 = HIDWORD(v86[0]) != 0;
              goto LABEL_149;
            }
            if ((v55 >> 3) == 1)
            {
              uint64_t v66 = 0;
              char v67 = 1;
              while (1)
              {
                char v68 = v67;
                int v69 = *((_DWORD *)v86 + v66);
                if (!v69) {
                  break;
                }
                if (v69 != 1)
                {
                  char v67 = 0;
                  uint64_t v66 = 1;
                  if (v68) {
                    continue;
                  }
                }
                goto LABEL_162;
              }
              *((_DWORD *)v86 + v66) = 1;
              if (v60) {
                goto LABEL_162;
              }
              unsigned int v75 = 0;
              while (1)
              {
                uint64_t v76 = *v2;
                unint64_t v77 = *(void *)&a1[v76];
                if (v77 == -1 || v77 >= *(void *)&a1[*v3]) {
                  break;
                }
                unint64_t v78 = v77 + 1;
                int v79 = *(char *)(*(void *)&a1[*v5] + v77);
                *(void *)&a1[v76] = v78;
                if (v79 < 0)
                {
                  BOOL v30 = v75++ > 8;
                  if (!v30) {
                    continue;
                  }
                }
                goto LABEL_146;
              }
            }
            else
            {
              if ((v55 >> 3) != 2)
              {
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_162;
                }
                goto LABEL_146;
              }
              uint64_t v62 = 0;
              char v63 = 1;
              while (1)
              {
                char v64 = v63;
                int v65 = *((_DWORD *)v86 + v62);
                if (!v65) {
                  break;
                }
                if (v65 != 2)
                {
                  char v63 = 0;
                  uint64_t v62 = 1;
                  if (v64) {
                    continue;
                  }
                }
                goto LABEL_162;
              }
              *((_DWORD *)v86 + v62) = 2;
              if (v60) {
                goto LABEL_162;
              }
              unsigned int v70 = 0;
              while (1)
              {
                uint64_t v71 = *v2;
                unint64_t v72 = *(void *)&a1[v71];
                if (v72 == -1 || v72 >= *(void *)&a1[*v3]) {
                  break;
                }
                unint64_t v73 = v72 + 1;
                int v74 = *(char *)(*(void *)&a1[*v5] + v72);
                *(void *)&a1[v71] = v73;
                if (v74 < 0)
                {
                  BOOL v30 = v70++ > 8;
                  if (!v30) {
                    continue;
                  }
                }
                goto LABEL_146;
              }
            }
            a1[*v4] = 1;
LABEL_146:
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
              goto LABEL_147;
            }
          }
        }
LABEL_148:
        BOOL v80 = 0;
LABEL_149:
        int v81 = a1[*v4];
        PBReaderRecallMark();
        if (v81) {
          BOOL v82 = 1;
        }
        else {
          BOOL v82 = !v80;
        }
        if (!v82)
        {
          PBReaderRecallMark();
          continue;
        }
LABEL_163:
        PBReaderRecallMark();
LABEL_164:
        PBReaderRecallMark();
        return 0;
      default:
LABEL_43:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_163;
        }
        continue;
    }
  }
}

void sub_189F0E474(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchTokenSetIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189F0E724(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchTokenSpanReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v27 = *v4;
            unint64_t v28 = *(void *)&v3[v27];
            if (v28 == -1 || v28 >= *(void *)&v3[*v5]) {
              break;
            }
            char v29 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
            *(void *)&v3[v27] = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if ((v29 & 0x80) == 0)
            {
              unint64_t v24 = &OBJC_IVAR___GEOPDSearchTokenSpan__beginIndex;
              goto LABEL_40;
            }
            v25 += 7;
            BOOL v23 = v26++ > 8;
            if (v23)
            {
              LODWORD(v19) = 0;
              unint64_t v24 = &OBJC_IVAR___GEOPDSearchTokenSpan__beginIndex;
              goto LABEL_42;
            }
          }
          unint64_t v24 = &OBJC_IVAR___GEOPDSearchTokenSpan__beginIndex;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 2)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_48;
            }
            continue;
          }
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5])
            {
              unint64_t v24 = &OBJC_IVAR___GEOPDSearchTokenSpan__endIndex;
              goto LABEL_39;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              break;
            }
            v17 += 7;
            BOOL v23 = v18++ > 8;
            if (v23)
            {
              LODWORD(v19) = 0;
              unint64_t v24 = &OBJC_IVAR___GEOPDSearchTokenSpan__endIndex;
              goto LABEL_42;
            }
          }
          unint64_t v24 = &OBJC_IVAR___GEOPDSearchTokenSpan__endIndex;
        }
LABEL_40:
        if (v3[*v6]) {
          LODWORD(v19) = 0;
        }
LABEL_42:
        *(_DWORD *)(a1 + *v24) = v19;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v30 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    BOOL v30 = 0;
  }
  objc_sync_exit(v3);

  return v30;
}

void sub_189F0ED20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOGetDirectionsServiceLog()
{
  if (qword_1EB2A0080 != -1) {
    dispatch_once(&qword_1EB2A0080, &__block_literal_global_142);
  }
  os_log_t v0 = (void *)_MergedGlobals_285;

  return v0;
}

void __GEOGetDirectionsServiceLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "DirectionsService");
  id v1 = (void *)_MergedGlobals_285;
  _MergedGlobals_285 = (uint64_t)v0;
}

void sub_189F12414(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMapItemHandleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOMapItemHandleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F12A88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMapItemHandleIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v16 = 0;
          do
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_41;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if ((v20 & 0x80000000) == 0) {
              break;
            }
          }
          while (v16++ <= 8);
          goto LABEL_41;
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRefinementParametersIsValid(a1)) {
            goto LABEL_46;
          }
          goto LABEL_40;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOMapItemInitialRequestDataIsValid(a1)) {
            goto LABEL_46;
          }
          goto LABEL_40;
        case 5u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOMapItemClientAttributesIsValid(a1)) {
            goto LABEL_46;
          }
LABEL_40:
          PBReaderRecallMark();
          goto LABEL_41;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_46:
            PBReaderRecallMark();
            return 0;
          }
LABEL_41:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_44;
          }
          break;
      }
    }
  }
LABEL_44:
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

BOOL GEOMapItemInitialRequestDataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRequestParametersIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          unint64_t v18 = *(void *)&a1[v17];
          if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v19 = v18 + 1;
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

uint64_t _GEOMapItemHandleIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 56);
  if ((v2 & 0x10) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) != 0)
  {
    if (GEOPDPlaceRefinementParametersIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 56);
  }
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 2) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 16);

  return (uint64_t)GEOMapItemClientAttributesIsDirty(v4);
}

os_unfair_lock_s *GEOMapItemHandleIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOMapItemHandleIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOMapItemHandleClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasPlaceRequestData]
    && ([a1 placeRequestData],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        unsigned int v6 = GEOMapItemInitialRequestDataHasSensitiveFields(v5, a2),
        v5,
        v6))
  {
    unsigned int v7 = [a1 placeRequestData];
    id v8 = (id)[v7 copy];

    GEOMapItemInitialRequestDataClearSensitiveFields(v8, a2, 0);
    [a1 setPlaceRequestData:v8];
  }
  else
  {
    id v8 = [a1 placeRequestData];
    [v8 clearSensitiveFields:a2];
  }
}

void *GEOMapItemHandleHasSensitiveFields(void *result, uint64_t a2)
{
  if (result)
  {
    id v3 = [result placeRequestData];
    uint64_t v4 = GEOMapItemInitialRequestDataHasSensitiveFields(v3, a2);

    return v4;
  }
  return result;
}

void *GEOMapItemInitialRequestDataHasSensitiveFields(void *result, uint64_t a2)
{
  if (result)
  {
    id v3 = [result placeRequestParameters];
    uint64_t HasSensitiveFields = GEOPDPlaceRequestParametersHasSensitiveFields(v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void GEOMapItemInitialRequestDataClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasPlaceRequestParameters]
    && ([a1 placeRequestParameters],
        uint64_t v5 = (id *)objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOPDPlaceRequestParametersHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    unsigned int v7 = [a1 placeRequestParameters];
    id v9 = (id)[v7 copy];

    GEOPDPlaceRequestParametersClearSensitiveFields((uint64_t)v9, a2, 0);
    [a1 setPlaceRequestParameters:v9];
  }
  else
  {
    uint64_t v8 = [a1 placeRequestParameters];
    if (v8)
    {
      id v9 = (id)v8;
      GEOPDPlaceRequestParametersClearSensitiveFields(v8, a2, 1);
    }
    else
    {
      id v9 = 0;
    }
  }
}

void sub_189F13640(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMapItemInitialRequestDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOMapItemInitialRequestDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F14AE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F14DD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F14E78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F14F18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F14FCC(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_189F15250(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F15428(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F15514(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F1568C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F1589C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_189F15B54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F15C98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189F15D14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F15E54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F15F90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F161EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F16398(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F165B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F166C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  unint64_t v10 = v9;

  a9.super_class = (Class)GEORouteHypothesisCache;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_189F16840(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F1695C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F16A78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_189F16B50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

uint64_t GEODeviceClass()
{
  os_log_t v0 = (void *)MGCopyAnswer();
  id v1 = v0;
  if (v0) {
    uint64_t v2 = [v0 intValue];
  }
  else {
    uint64_t v2 = 0xFFFFFFFFLL;
  }

  return v2;
}

uint64_t GEOVisualLocalizationCrowdsourcingIsSupported()
{
  uint64_t result = GEOConfigGetBOOL(MapsFeaturesConfig_VisualLocalizationCrowdsourcingEnabled, (uint64_t)off_1E9111DC8);
  if (result)
  {
    if (qword_1EB2A0188 != -1) {
      dispatch_once(&qword_1EB2A0188, &__block_literal_global_146);
    }
    return _MergedGlobals_287;
  }
  return result;
}

uint64_t GEOVisualLocalizationCrowdsourcingIsAllowed()
{
  uint64_t result = GEOConfigGetBOOL(GeoServicesConfig_SupportsVisualLocalizationCrowdsourcing, (uint64_t)off_1E9114EF8);
  if (result)
  {
    if (qword_1EB2A0188 != -1) {
      dispatch_once(&qword_1EB2A0188, &__block_literal_global_146);
    }
    return _MergedGlobals_287;
  }
  return result;
}

uint64_t GEOVisualLocalizationCrowdsourcingIsEnabled()
{
  return GEOConfigGetBOOL(GeoServicesConfig_VLFCrowdsourcingDataCollectionEnabled, (uint64_t)off_1E91138D8);
}

void GEOVisualLocalizationCrowdsourcingSetEnabled()
{
}

id GEOVisualLocalizationCrowdsourcingLearnMoreURL()
{
  os_log_t v0 = (void *)MEMORY[0x1E4F1CB10];
  id v1 = _getValue(GeoServicesConfig_VisualLocalizationCrowdsourcingLearnMoreURL, (uint64_t)off_1E9114F08, 1, 0, 0, 0);
  uint64_t v2 = [v0 URLWithString:v1];

  return v2;
}

uint64_t ___deviceSupportsMapsVisualLocalizations_block_invoke()
{
  uint64_t result = MGGetBoolAnswer();
  if (result)
  {
    if (MGGetSInt32Answer() == 1)
    {
      uint64_t result = MGGetBoolAnswer();
      if (result)
      {
        uint64_t result = ARKitLibraryCore();
        if (result)
        {
          uint64_t v4 = 0;
          uint64_t v5 = &v4;
          uint64_t v6 = 0x2050000000;
          id v1 = (void *)qword_1EB2A0190;
          uint64_t v7 = qword_1EB2A0190;
          if (!qword_1EB2A0190)
          {
            v3[0] = MEMORY[0x1E4F143A8];
            v3[1] = 3221225472;
            v3[2] = __getARGeoTrackingConfigurationClass_block_invoke;
            v3[3] = &unk_1E53DB3C8;
            v3[4] = &v4;
            __getARGeoTrackingConfigurationClass_block_invoke((uint64_t)v3);
            id v1 = (void *)v5[3];
          }
          id v2 = v1;
          _Block_object_dispose(&v4, 8);
          uint64_t result = [v2 isSupportedWithOptions:4];
        }
      }
    }
    else
    {
      uint64_t result = 0;
    }
  }
  _MergedGlobals_287 = result;
  return result;
}

void sub_189F174F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t ARKitLibraryCore()
{
  if (!ARKitLibraryCore_frameworkLibrary) {
    ARKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  return ARKitLibraryCore_frameworkLibrary;
}

uint64_t __ARKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  ARKitLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getARGeoTrackingConfigurationClass_block_invoke(uint64_t a1)
{
  if (!ARKitLibraryCore())
  {
    id v3 = (void *)abort_report_np();
    free(v3);
  }
  Class result = objc_getClass("ARGeoTrackingConfiguration");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1EB2A0190 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v4 = (GEOWiFiAP *)abort_report_np();
    return (Class)[(GEOWiFiAP *)v4 hasUniqueID];
  }
  return result;
}

BOOL GEOWiFiAPReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    SEL v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            uint64_t v18 = PBReaderReadString();
            unint64_t v19 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v18;

            continue;
          case 2u:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 28) |= 4u;
            while (1)
            {
              uint64_t v23 = *v4;
              uint64_t v24 = *(void *)&v3[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
              *(void *)&v3[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0) {
                goto LABEL_45;
              }
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                LODWORD(v22) = 0;
                goto LABEL_47;
              }
            }
            v3[*v6] = 1;
LABEL_45:
            if (v3[*v6]) {
              LODWORD(v22) = 0;
            }
LABEL_47:
            uint64_t v39 = 24;
            goto LABEL_56;
          case 3u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 28) |= 1u;
            while (2)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
                *(void *)&v3[v29] = v31;
                v22 |= (unint64_t)(v32 & 0x7F) << v27;
                if (v32 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_51;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v22) = 0;
            }
LABEL_51:
            uint64_t v39 = 16;
            goto LABEL_56;
          case 4u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 28) |= 2u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_59;
            }
            continue;
        }
        while (1)
        {
          uint64_t v35 = *v4;
          uint64_t v36 = *(void *)&v3[v35];
          unint64_t v37 = v36 + 1;
          if (v36 == -1 || v37 > *(void *)&v3[*v5]) {
            break;
          }
          char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
          *(void *)&v3[v35] = v37;
          v22 |= (unint64_t)(v38 & 0x7F) << v33;
          if ((v38 & 0x80) == 0) {
            goto LABEL_53;
          }
          v33 += 7;
          BOOL v15 = v34++ >= 9;
          if (v15)
          {
            LODWORD(v22) = 0;
            goto LABEL_55;
          }
        }
        v3[*v6] = 1;
LABEL_53:
        if (v3[*v6]) {
          LODWORD(v22) = 0;
        }
LABEL_55:
        uint64_t v39 = 20;
LABEL_56:
        *(_DWORD *)(a1 + v39) = v22;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_59:
    BOOL v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_189F18178(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiAPReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL v4 = GEOWiFiAPReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return v4;
}

void sub_189F181EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiAPIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    SEL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_50;
          }
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_46;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_47;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_46;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_47;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v28 = 0;
          break;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_50:
          BOOL v33 = 0;
          goto LABEL_49;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_47;
      }
LABEL_46:
      a1[*v4] = 1;
LABEL_47:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_189F18BDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiBeaconInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  unsigned int v10 = *(unsigned __int16 *)(a1 + 108);
  unsigned int v11 = ((v10 >> 2) & 1)
      + ((v10 >> 3) & 1)
      + ((v10 >> 1) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v10), (uint16x4_t)0xFFFAFFFBFFFCFFF7), (int8x8_t)0x1000100010001))+ (v10 & 1)+ ((v10 >> 7) & 1)+ ((v10 >> 8) & 1));
  while (1)
  {
    unsigned int v12 = a3[v7];
    if (v12 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v12 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v12)
  {
    ++v11;
    goto LABEL_9;
  }
  char v13 = v9 | (v11 > 7);
  if (v9 & 1 | (v11 > 7) | v8 & 1) {
    int v14 = 0;
  }
  else {
    int v14 = a3;
  }
  int v15 = (int *)MEMORY[0x1E4F940E8];
  int v16 = (int *)MEMORY[0x1E4F940C8];
  unsigned int v17 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v16)) {
      goto LABEL_96;
    }
    char v18 = 0;
    unsigned int v19 = 0;
    unint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = *v15;
      uint64_t v22 = *(void *)(v3 + v21);
      unint64_t v23 = v22 + 1;
      if (v22 == -1 || v23 > *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v17) + v22);
      *(void *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0) {
        goto LABEL_24;
      }
      v18 += 7;
      if (v19++ >= 9)
      {
        unint64_t v20 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v16) = 1;
LABEL_24:
    int v26 = *(unsigned __int8 *)(v3 + *v16);
    if (*(unsigned char *)(v3 + *v16)) {
      unint64_t v20 = 0;
    }
LABEL_26:
    if (v26 || (v20 & 7) == 4)
    {
LABEL_96:
      if (v13)
      {
        char v40 = 1;
        goto LABEL_112;
      }
      if (v14)
      {
        while (1)
        {
          int v41 = *v14++;
          __int16 v42 = 1;
          switch(v41)
          {
            case 0:
              goto LABEL_113;
            case 1:
              goto LABEL_109;
            case 2:
              __int16 v42 = 512;
              goto LABEL_109;
            case 3:
              __int16 v42 = 16;
              goto LABEL_109;
            case 4:
              __int16 v42 = 32;
              goto LABEL_109;
            case 5:
              __int16 v42 = 64;
              goto LABEL_109;
            case 6:
              __int16 v42 = 128;
              goto LABEL_109;
            case 7:
              __int16 v42 = 256;
              goto LABEL_109;
            case 8:
              __int16 v42 = 8;
              goto LABEL_109;
            case 9:
              __int16 v42 = 4;
              goto LABEL_109;
            case 10:
              __int16 v42 = 2;
LABEL_109:
              *(_WORD *)(a1 + 108) |= v42;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_113;
    }
    unint64_t v28 = v20 >> 3;
    BOOL v29 = v13;
    if (!((v14 == 0) | v13 & 1))
    {
      uint64_t v30 = v14;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if (!v29) {
          goto LABEL_71;
        }
        if ((*(_WORD *)(a1 + 108) & 1) == 0)
        {
          uint64_t v34 = PBReaderReadData();
          uint64_t v35 = 16;
          goto LABEL_70;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        v7 -= *(_WORD *)(a1 + 108) & 1;
        goto LABEL_94;
      case 2:
        if (!v29) {
          goto LABEL_71;
        }
        if ((*(_WORD *)(a1 + 108) & 0x200) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 88;
          goto LABEL_70;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        __int16 v39 = *(_WORD *)(a1 + 108) << 6;
        goto LABEL_93;
      case 3:
        if (!v29) {
          goto LABEL_71;
        }
        if ((*(_WORD *)(a1 + 108) & 0x10) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 48;
          goto LABEL_70;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        __int16 v39 = *(_WORD *)(a1 + 108) << 11;
        goto LABEL_93;
      case 4:
        if (!v29) {
          goto LABEL_71;
        }
        if ((*(_WORD *)(a1 + 108) & 0x20) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 56;
          goto LABEL_70;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        __int16 v39 = *(_WORD *)(a1 + 108) << 10;
        goto LABEL_93;
      case 5:
        if (!v29) {
          goto LABEL_71;
        }
        if ((*(_WORD *)(a1 + 108) & 0x40) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 64;
          goto LABEL_70;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        __int16 v39 = *(_WORD *)(a1 + 108) << 9;
        goto LABEL_93;
      case 6:
        if (!v29) {
          goto LABEL_71;
        }
        if ((*(_WORD *)(a1 + 108) & 0x80) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 72;
          goto LABEL_70;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        __int16 v39 = *(_WORD *)(a1 + 108) << 8;
        goto LABEL_93;
      case 7:
        if (!v29) {
          goto LABEL_71;
        }
        if ((*(_WORD *)(a1 + 108) & 0x100) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 80;
          goto LABEL_70;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        __int16 v39 = *(_WORD *)(a1 + 108) << 7;
        goto LABEL_93;
      case 8:
        if (!v29) {
          goto LABEL_71;
        }
        if ((*(_WORD *)(a1 + 108) & 8) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 40;
          goto LABEL_70;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        __int16 v39 = *(_WORD *)(a1 + 108) << 12;
        goto LABEL_93;
      case 9:
        if (!v29) {
          goto LABEL_71;
        }
        if ((*(_WORD *)(a1 + 108) & 4) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 32;
          goto LABEL_70;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        __int16 v39 = *(_WORD *)(a1 + 108) << 13;
        goto LABEL_93;
      case 10:
        if (!v29)
        {
LABEL_71:
          char v38 = PBReaderSkipValueWithTag();
          int v16 = (int *)MEMORY[0x1E4F940C8];
          if ((v38 & 1) == 0)
          {
LABEL_110:
            char v40 = 0;
            goto LABEL_112;
          }
          goto LABEL_95;
        }
        if ((*(_WORD *)(a1 + 108) & 2) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 24;
LABEL_70:
          unint64_t v37 = *(void **)(a1 + v35);
          *(void *)(a1 + v35) = v34;

          int v16 = (int *)MEMORY[0x1E4F940C8];
          --v7;
          goto LABEL_95;
        }
        if (PBReaderSkipValueWithTag())
        {
          __int16 v39 = *(_WORD *)(a1 + 108) << 14;
LABEL_93:
          v7 += v39 >> 15;
LABEL_94:
          int v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
          if (!(v13 & 1 | (v7 != 0))) {
            goto LABEL_96;
          }
          continue;
        }
LABEL_111:
        char v40 = 0;
        int v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_112:
        *(_WORD *)(a1 + 108) |= 1u;
        *(_WORD *)(a1 + 108) |= 0x200u;
        *(_WORD *)(a1 + 108) |= 0x10u;
        *(_WORD *)(a1 + 108) |= 0x20u;
        *(_WORD *)(a1 + 108) |= 0x40u;
        *(_WORD *)(a1 + 108) |= 0x80u;
        *(_WORD *)(a1 + 108) |= 0x100u;
        *(_WORD *)(a1 + 108) |= 8u;
        *(_WORD *)(a1 + 108) |= 4u;
        *(_WORD *)(a1 + 108) |= 2u;
        if (v40)
        {
LABEL_113:
          unint64_t v3 = *(unsigned char *)(v3 + *v16) == 0;
          if (v13) {
            goto LABEL_114;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v13)
          {
LABEL_114:
            int v43 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v36 = PBReaderSkipValueWithTag();
        int v16 = (int *)MEMORY[0x1E4F940C8];
        if (!v36) {
          goto LABEL_110;
        }
        goto LABEL_95;
    }
  }
}

void sub_189F19544(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F196B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F19820(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F19990(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F19B00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F19C70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F19DE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F19F50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F1A0BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F1A8BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiBeaconInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOWiFiBeaconInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = [v8 position];
  *(_DWORD *)(a1 + 100) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOWiFiBeaconInfoReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOWiFiBeaconInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOWiFiBeaconInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_189F1AA4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiBeaconInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOWiFiBeaconInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F1AAB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiBeaconInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    SEL v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_43;
          }
          goto LABEL_40;
        case 2u:
          if (v15 == 2) {
            goto LABEL_40;
          }
          goto LABEL_43;
        case 3u:
          if (v15 == 2) {
            goto LABEL_40;
          }
          goto LABEL_43;
        case 4u:
          if (v15 == 2) {
            goto LABEL_40;
          }
          goto LABEL_43;
        case 5u:
          if (v15 == 2) {
            goto LABEL_40;
          }
          goto LABEL_43;
        case 6u:
          if (v15 == 2) {
            goto LABEL_40;
          }
          goto LABEL_43;
        case 7u:
          if (v15 == 2) {
            goto LABEL_40;
          }
          goto LABEL_43;
        case 8u:
          if (v15 == 2) {
            goto LABEL_40;
          }
          goto LABEL_43;
        case 9u:
          if (v15 == 2) {
            goto LABEL_40;
          }
          goto LABEL_43;
        case 0xAu:
          if (v15 != 2) {
            goto LABEL_43;
          }
LABEL_40:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_43:
            BOOL v17 = 0;
            goto LABEL_44;
          }
LABEL_41:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_42;
          }
          break;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_43;
          }
          goto LABEL_41;
      }
    }
  }
LABEL_42:
  BOOL v17 = a1[*v4] == 0;
LABEL_44:
  PBReaderRecallMark();
  return v17;
}

void sub_189F1AFC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiBeaconInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  BOOL v2 = (*(_WORD *)(a1 + 108) & 0x7FF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return v2;
}

void sub_189F1B420(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F1BB94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiConnectionQualityReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 352));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 348);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 344)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int32x2_t v11 = (int32x2_t)*(unsigned __int8 *)(a1 + 480);
  *((int32x2_t *)&v13 + 1) = v11;
  *(void *)&long long v13 = *(void *)(a1 + 472);
  int32x2_t v12 = (int32x2_t)(v13 >> 61);
  *((int32x2_t *)&v13 + 1) = v11;
  int32x2_t v14 = (int32x2_t)(v13 >> 52);
  *((int32x2_t *)&v13 + 1) = v11;
  int32x2_t v15 = (int32x2_t)(v13 >> 54);
  *((int32x2_t *)&v13 + 1) = v11;
  int32x2_t v16 = (int32x2_t)(v13 >> 62);
  *((int32x2_t *)&v13 + 1) = v11;
  int32x2_t v17 = (int32x2_t)(v13 >> 56);
  *((int32x2_t *)&v13 + 1) = v11;
  int32x2_t v18 = (int32x2_t)(v13 >> 59);
  *((int32x2_t *)&v13 + 1) = v11;
  int32x2_t v19 = (int32x2_t)(v13 >> 57);
  *((int32x2_t *)&v13 + 1) = v11;
  int32x2_t v20 = (int32x2_t)(v13 >> 63);
  *((int32x2_t *)&v13 + 1) = v11;
  *(int32x2_t *)v21.i8 = vzip1_s32(v17, v16);
  v21.u64[1] = (unint64_t)vzip1_s32(v19, v18);
  *(int32x2_t *)v22.i8 = vzip1_s32(v12, (int32x2_t)(*(void *)&v11 >> 2));
  v22.u64[1] = (unint64_t)vzip1_s32(v15, v14);
  v23.i64[0] = 0x100000001;
  v23.i64[1] = 0x100000001;
  *(int32x2_t *)v24.i8 = vzip1_s32(v11, (int32x2_t)(*(void *)&v11 >> 1));
  v24.u64[1] = (unint64_t)vzip1_s32((int32x2_t)(v13 >> 60), v20);
  unsigned int v25 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8(v22, v23), (int32x4_t)vandq_s8(v21, v23)), (int32x4_t)vandq_s8(v24, v23)))+ ((v13 & 0x400000000000000) != 0)+ (((unint64_t)v13 >> 53) & 1)+ (((unint64_t)v13 >> 55) & 1);
  while (2)
  {
    uint64_t v26 = 1;
    uint64_t v27 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v26 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v28 = v25 > 0xB;
        char v29 = v10 | v28;
        if (((v10 | v28) | v8)) {
          uint64_t v30 = 0;
        }
        else {
          uint64_t v30 = a3;
        }
        int v31 = (int *)MEMORY[0x1E4F940E8];
        int v32 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_770;
        }
        char v415 = (v30 == 0) | v29;
        BOOL v33 = (int *)MEMORY[0x1E4F940B8];
        char v414 = v10 | v28;
        break;
      default:
        ++v25;
LABEL_6:
        uint64_t v26 = v9;
        uint64_t v27 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v26;
        uint64_t v10 = v27;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v32)) {
      goto LABEL_770;
    }
    char v34 = 0;
    unsigned int v35 = 0;
    unint64_t v36 = 0;
    while (1)
    {
      uint64_t v37 = *v31;
      uint64_t v38 = *(void *)(v3 + v37);
      unint64_t v39 = v38 + 1;
      if (v38 == -1 || v39 > *(void *)(v3 + *v6)) {
        break;
      }
      char v40 = *(unsigned char *)(*(void *)(v3 + *v33) + v38);
      *(void *)(v3 + v37) = v39;
      v36 |= (unint64_t)(v40 & 0x7F) << v34;
      if ((v40 & 0x80) == 0) {
        goto LABEL_23;
      }
      v34 += 7;
      BOOL v41 = v35++ >= 9;
      if (v41)
      {
        unint64_t v36 = 0;
        int v42 = *(unsigned __int8 *)(v3 + *v32);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v32) = 1;
LABEL_23:
    int v42 = *(unsigned __int8 *)(v3 + *v32);
    if (*(unsigned char *)(v3 + *v32)) {
      unint64_t v36 = 0;
    }
LABEL_25:
    int v43 = v36 & 7;
    if (v42 || v43 == 4)
    {
LABEL_770:
      if (v29)
      {
        char v405 = *(unsigned char *)(a1 + 480) | 7;
        *(void *)(a1 + 472) |= 0xFFF0000000000000;
        *(unsigned char *)(a1 + 480) = v405;
      }
      else if (v30)
      {
        while (1)
        {
          int v407 = *v30++;
          int v406 = v407;
          switch(v407)
          {
            case '-':
              char v408 = 0;
              unint64_t v409 = 0x2000000000000000;
              goto LABEL_792;
            case '.':
            case '/':
            case '1':
            case '2':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case ':':
            case ';':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'K':
              continue;
            case '0':
              char v408 = 0;
              unint64_t v409 = 0x40000000000000;
              goto LABEL_792;
            case '3':
              char v408 = 0;
              unint64_t v409 = 0x10000000000000;
              goto LABEL_792;
            case '<':
              char v408 = 0;
              unint64_t v409 = 0x100000000000000;
              goto LABEL_792;
            case '=':
              char v408 = 0;
              unint64_t v409 = 0x4000000000000000;
              goto LABEL_792;
            case '>':
              char v408 = 0;
              unint64_t v409 = 0x200000000000000;
              goto LABEL_792;
            case '?':
              char v408 = 0;
              unint64_t v409 = 0x800000000000000;
              goto LABEL_792;
            case '@':
              unint64_t v409 = 0;
              char v408 = 1;
              goto LABEL_792;
            case 'A':
              unint64_t v409 = 0;
              char v408 = 2;
              goto LABEL_792;
            case 'G':
              char v408 = 0;
              unint64_t v409 = 0x1000000000000000;
              goto LABEL_792;
            case 'H':
              char v408 = 0;
              unint64_t v409 = 0x8000000000000000;
              goto LABEL_792;
            case 'I':
              char v408 = 0;
              unint64_t v409 = 0x400000000000000;
              goto LABEL_792;
            case 'J':
              char v408 = 0;
              unint64_t v409 = 0x20000000000000;
              goto LABEL_792;
            case 'L':
              char v408 = 0;
              unint64_t v409 = 0x80000000000000;
              goto LABEL_792;
            default:
              if (v406 == 2)
              {
                unint64_t v409 = 0;
                char v408 = 4;
LABEL_792:
                char v410 = *(unsigned char *)(a1 + 480) | v408;
                *(void *)(a1 + 472) |= v409;
                *(unsigned char *)(a1 + 480) = v410;
              }
              else if (!v406)
              {
                goto LABEL_793;
              }
              break;
          }
        }
      }
LABEL_793:
      unint64_t v3 = *(unsigned char *)(v3 + *v32) == 0;
      if ((v29 & 1) == 0) {
        return v3;
      }
LABEL_794:
      v411 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;

      return v3;
    }
    unint64_t v45 = v36 >> 3;
    BOOL v46 = v29;
    if ((v415 & 1) == 0)
    {
      int v47 = v30;
      do
      {
        int v49 = *v47++;
        int v48 = v49;
        BOOL v46 = v49 != 0;
        if (v49) {
          BOOL v50 = v48 == v45;
        }
        else {
          BOOL v50 = 1;
        }
      }
      while (!v50);
    }
    switch((int)v45)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v53 = 0;
        *(void *)(a1 + 472) |= 0x80000uLL;
        while (2)
        {
          uint64_t v54 = *v31;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v33) + v55);
            *(void *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              BOOL v41 = v52++ >= 9;
              if (v41)
              {
                uint64_t v53 = 0;
                goto LABEL_537;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v53 = 0;
        }
LABEL_537:
        uint64_t v372 = 328;
        goto LABEL_642;
      case 2:
        if (!v46) {
          goto LABEL_531;
        }
        if ((*(unsigned char *)(a1 + 480) & 4) == 0)
        {
          uint64_t v58 = PBReaderReadString();
          uint64_t v59 = 336;
          goto LABEL_427;
        }
        char v376 = PBReaderSkipValueWithTag();
        char v29 = v414;
        int v32 = (int *)MEMORY[0x1E4F940C8];
        if ((v376 & 1) == 0) {
          goto LABEL_798;
        }
        uint64_t v377 = (char)(32 * *(unsigned char *)(a1 + 480));
        goto LABEL_725;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v53 = 0;
        *(void *)(a1 + 472) |= 0x400uLL;
        while (2)
        {
          uint64_t v63 = *v31;
          uint64_t v64 = *(void *)(v3 + v63);
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(v3 + *v33) + v64);
            *(void *)(v3 + v63) = v65;
            v53 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              BOOL v41 = v62++ >= 9;
              if (v41)
              {
                uint64_t v53 = 0;
                goto LABEL_541;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v53 = 0;
        }
LABEL_541:
        uint64_t v372 = 232;
        goto LABEL_642;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v53 = 0;
        *(void *)(a1 + 472) |= 0x40uLL;
        while (2)
        {
          uint64_t v69 = *v31;
          uint64_t v70 = *(void *)(v3 + v69);
          unint64_t v71 = v70 + 1;
          if (v70 == -1 || v71 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(v3 + *v33) + v70);
            *(void *)(v3 + v69) = v71;
            v53 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              BOOL v41 = v68++ >= 9;
              if (v41)
              {
                uint64_t v53 = 0;
                goto LABEL_545;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v53 = 0;
        }
LABEL_545:
        uint64_t v372 = 152;
        goto LABEL_642;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v73 = 0;
        unsigned int v74 = 0;
        uint64_t v53 = 0;
        *(void *)(a1 + 472) |= 0x80uLL;
        while (2)
        {
          uint64_t v75 = *v31;
          uint64_t v76 = *(void *)(v3 + v75);
          unint64_t v77 = v76 + 1;
          if (v76 == -1 || v77 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v78 = *(unsigned char *)(*(void *)(v3 + *v33) + v76);
            *(void *)(v3 + v75) = v77;
            v53 |= (unint64_t)(v78 & 0x7F) << v73;
            if (v78 < 0)
            {
              v73 += 7;
              BOOL v41 = v74++ >= 9;
              if (v41)
              {
                uint64_t v53 = 0;
                goto LABEL_549;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v53 = 0;
        }
LABEL_549:
        uint64_t v372 = 200;
        goto LABEL_642;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v79 = 0;
        unsigned int v80 = 0;
        uint64_t v53 = 0;
        *(void *)(a1 + 472) |= 0x100uLL;
        while (2)
        {
          uint64_t v81 = *v31;
          uint64_t v82 = *(void *)(v3 + v81);
          unint64_t v83 = v82 + 1;
          if (v82 == -1 || v83 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v84 = *(unsigned char *)(*(void *)(v3 + *v33) + v82);
            *(void *)(v3 + v81) = v83;
            v53 |= (unint64_t)(v84 & 0x7F) << v79;
            if (v84 < 0)
            {
              v79 += 7;
              BOOL v41 = v80++ >= 9;
              if (v41)
              {
                uint64_t v53 = 0;
                goto LABEL_553;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v53 = 0;
        }
LABEL_553:
        uint64_t v372 = 208;
        goto LABEL_642;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v85 = 0;
        unsigned int v86 = 0;
        uint64_t v53 = 0;
        *(void *)(a1 + 472) |= 0x200uLL;
        while (2)
        {
          uint64_t v87 = *v31;
          uint64_t v88 = *(void *)(v3 + v87);
          unint64_t v89 = v88 + 1;
          if (v88 == -1 || v89 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v90 = *(unsigned char *)(*(void *)(v3 + *v33) + v88);
            *(void *)(v3 + v87) = v89;
            v53 |= (unint64_t)(v90 & 0x7F) << v85;
            if (v90 < 0)
            {
              v85 += 7;
              BOOL v41 = v86++ >= 9;
              if (v41)
              {
                uint64_t v53 = 0;
                goto LABEL_557;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v53 = 0;
        }
LABEL_557:
        uint64_t v372 = 216;
        goto LABEL_642;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v91 = 0;
        unsigned int v92 = 0;
        uint64_t v53 = 0;
        *(void *)(a1 + 472) |= 0x20000uLL;
        while (2)
        {
          uint64_t v93 = *v31;
          uint64_t v94 = *(void *)(v3 + v93);
          unint64_t v95 = v94 + 1;
          if (v94 == -1 || v95 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v96 = *(unsigned char *)(*(void *)(v3 + *v33) + v94);
            *(void *)(v3 + v93) = v95;
            v53 |= (unint64_t)(v96 & 0x7F) << v91;
            if (v96 < 0)
            {
              v91 += 7;
              BOOL v41 = v92++ >= 9;
              if (v41)
              {
                uint64_t v53 = 0;
                goto LABEL_561;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v53 = 0;
        }
LABEL_561:
        uint64_t v372 = 312;
        goto LABEL_642;
      case 13:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v97 = 0;
        unsigned int v98 = 0;
        uint64_t v53 = 0;
        *(void *)(a1 + 472) |= 0x20uLL;
        while (2)
        {
          uint64_t v99 = *v31;
          uint64_t v100 = *(void *)(v3 + v99);
          unint64_t v101 = v100 + 1;
          if (v100 == -1 || v101 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v102 = *(unsigned char *)(*(void *)(v3 + *v33) + v100);
            *(void *)(v3 + v99) = v101;
            v53 |= (unint64_t)(v102 & 0x7F) << v97;
            if (v102 < 0)
            {
              v97 += 7;
              BOOL v41 = v98++ >= 9;
              if (v41)
              {
                uint64_t v53 = 0;
                goto LABEL_565;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v53 = 0;
        }
LABEL_565:
        uint64_t v372 = 144;
        goto LABEL_642;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v103 = 0;
        unsigned int v104 = 0;
        uint64_t v53 = 0;
        *(void *)(a1 + 472) |= 0x800uLL;
        while (2)
        {
          uint64_t v105 = *v31;
          uint64_t v106 = *(void *)(v3 + v105);
          unint64_t v107 = v106 + 1;
          if (v106 == -1 || v107 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v108 = *(unsigned char *)(*(void *)(v3 + *v33) + v106);
            *(void *)(v3 + v105) = v107;
            v53 |= (unint64_t)(v108 & 0x7F) << v103;
            if (v108 < 0)
            {
              v103 += 7;
              BOOL v41 = v104++ >= 9;
              if (v41)
              {
                uint64_t v53 = 0;
                goto LABEL_569;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v53 = 0;
        }
LABEL_569:
        uint64_t v372 = 240;
        goto LABEL_642;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v109 = 0;
        unsigned int v110 = 0;
        uint64_t v53 = 0;
        *(void *)(a1 + 472) |= 0x1000uLL;
        while (2)
        {
          uint64_t v111 = *v31;
          uint64_t v112 = *(void *)(v3 + v111);
          unint64_t v113 = v112 + 1;
          if (v112 == -1 || v113 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v114 = *(unsigned char *)(*(void *)(v3 + *v33) + v112);
            *(void *)(v3 + v111) = v113;
            v53 |= (unint64_t)(v114 & 0x7F) << v109;
            if (v114 < 0)
            {
              v109 += 7;
              BOOL v41 = v110++ >= 9;
              if (v41)
              {
                uint64_t v53 = 0;
                goto LABEL_573;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v53 = 0;
        }
LABEL_573:
        uint64_t v372 = 248;
        goto LABEL_642;
      case 16:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v115 = 0;
        unsigned int v116 = 0;
        uint64_t v53 = 0;
        *(void *)(a1 + 472) |= 2uLL;
        while (2)
        {
          uint64_t v117 = *v31;
          uint64_t v118 = *(void *)(v3 + v117);
          unint64_t v119 = v118 + 1;
          if (v118 == -1 || v119 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v120 = *(unsigned char *)(*(void *)(v3 + *v33) + v118);
            *(void *)(v3 + v117) = v119;
            v53 |= (unint64_t)(v120 & 0x7F) << v115;
            if (v120 < 0)
            {
              v115 += 7;
              BOOL v41 = v116++ >= 9;
              if (v41)
              {
                uint64_t v53 = 0;
                goto LABEL_577;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v53 = 0;
        }
LABEL_577:
        uint64_t v372 = 104;
        goto LABEL_642;
      case 17:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v121 = 0;
        unsigned int v122 = 0;
        uint64_t v53 = 0;
        *(void *)(a1 + 472) |= 8uLL;
        while (2)
        {
          uint64_t v123 = *v31;
          uint64_t v124 = *(void *)(v3 + v123);
          unint64_t v125 = v124 + 1;
          if (v124 == -1 || v125 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v126 = *(unsigned char *)(*(void *)(v3 + *v33) + v124);
            *(void *)(v3 + v123) = v125;
            v53 |= (unint64_t)(v126 & 0x7F) << v121;
            if (v126 < 0)
            {
              v121 += 7;
              BOOL v41 = v122++ >= 9;
              if (v41)
              {
                uint64_t v53 = 0;
                goto LABEL_581;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v53 = 0;
        }
LABEL_581:
        uint64_t v372 = 120;
        goto LABEL_642;
      case 18:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v127 = 0;
        unsigned int v128 = 0;
        uint64_t v53 = 0;
        *(void *)(a1 + 472) |= 1uLL;
        while (2)
        {
          uint64_t v129 = *v31;
          uint64_t v130 = *(void *)(v3 + v129);
          unint64_t v131 = v130 + 1;
          if (v130 == -1 || v131 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v132 = *(unsigned char *)(*(void *)(v3 + *v33) + v130);
            *(void *)(v3 + v129) = v131;
            v53 |= (unint64_t)(v132 & 0x7F) << v127;
            if (v132 < 0)
            {
              v127 += 7;
              BOOL v41 = v128++ >= 9;
              if (v41)
              {
                uint64_t v53 = 0;
                goto LABEL_585;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v53 = 0;
        }
LABEL_585:
        uint64_t v372 = 96;
        goto LABEL_642;
      case 19:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v133 = 0;
        unsigned int v134 = 0;
        uint64_t v53 = 0;
        *(void *)(a1 + 472) |= 4uLL;
        while (2)
        {
          uint64_t v135 = *v31;
          uint64_t v136 = *(void *)(v3 + v135);
          unint64_t v137 = v136 + 1;
          if (v136 == -1 || v137 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v138 = *(unsigned char *)(*(void *)(v3 + *v33) + v136);
            *(void *)(v3 + v135) = v137;
            v53 |= (unint64_t)(v138 & 0x7F) << v133;
            if (v138 < 0)
            {
              v133 += 7;
              BOOL v41 = v134++ >= 9;
              if (v41)
              {
                uint64_t v53 = 0;
                goto LABEL_589;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v53 = 0;
        }
LABEL_589:
        uint64_t v372 = 112;
        goto LABEL_642;
      case 20:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v139 = 0;
        unsigned int v140 = 0;
        uint64_t v53 = 0;
        *(void *)(a1 + 472) |= 0x2000uLL;
        while (2)
        {
          uint64_t v141 = *v31;
          uint64_t v142 = *(void *)(v3 + v141);
          unint64_t v143 = v142 + 1;
          if (v142 == -1 || v143 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v144 = *(unsigned char *)(*(void *)(v3 + *v33) + v142);
            *(void *)(v3 + v141) = v143;
            v53 |= (unint64_t)(v144 & 0x7F) << v139;
            if (v144 < 0)
            {
              v139 += 7;
              BOOL v41 = v140++ >= 9;
              if (v41)
              {
                uint64_t v53 = 0;
                goto LABEL_593;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v53 = 0;
        }
LABEL_593:
        uint64_t v372 = 264;
        goto LABEL_642;
      case 21:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v145 = 0;
        unsigned int v146 = 0;
        uint64_t v53 = 0;
        *(void *)(a1 + 472) |= 0x10uLL;
        while (2)
        {
          uint64_t v147 = *v31;
          uint64_t v148 = *(void *)(v3 + v147);
          unint64_t v149 = v148 + 1;
          if (v148 == -1 || v149 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v150 = *(unsigned char *)(*(void *)(v3 + *v33) + v148);
            *(void *)(v3 + v147) = v149;
            v53 |= (unint64_t)(v150 & 0x7F) << v145;
            if (v150 < 0)
            {
              v145 += 7;
              BOOL v41 = v146++ >= 9;
              if (v41)
              {
                uint64_t v53 = 0;
                goto LABEL_597;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v53 = 0;
        }
LABEL_597:
        uint64_t v372 = 128;
        goto LABEL_642;
      case 22:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v151 = 0;
        unsigned int v152 = 0;
        uint64_t v53 = 0;
        *(void *)(a1 + 472) |= 0x4000uLL;
        while (2)
        {
          uint64_t v153 = *v31;
          uint64_t v154 = *(void *)(v3 + v153);
          unint64_t v155 = v154 + 1;
          if (v154 == -1 || v155 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v156 = *(unsigned char *)(*(void *)(v3 + *v33) + v154);
            *(void *)(v3 + v153) = v155;
            v53 |= (unint64_t)(v156 & 0x7F) << v151;
            if (v156 < 0)
            {
              v151 += 7;
              BOOL v41 = v152++ >= 9;
              if (v41)
              {
                uint64_t v53 = 0;
                goto LABEL_601;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v53 = 0;
        }
LABEL_601:
        uint64_t v372 = 272;
        goto LABEL_642;
      case 23:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v157 = 0;
        unsigned int v158 = 0;
        uint64_t v53 = 0;
        *(void *)(a1 + 472) |= 0x10000uLL;
        while (2)
        {
          uint64_t v159 = *v31;
          uint64_t v160 = *(void *)(v3 + v159);
          unint64_t v161 = v160 + 1;
          if (v160 == -1 || v161 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v162 = *(unsigned char *)(*(void *)(v3 + *v33) + v160);
            *(void *)(v3 + v159) = v161;
            v53 |= (unint64_t)(v162 & 0x7F) << v157;
            if (v162 < 0)
            {
              v157 += 7;
              BOOL v41 = v158++ >= 9;
              if (v41)
              {
                uint64_t v53 = 0;
                goto LABEL_605;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v53 = 0;
        }
LABEL_605:
        uint64_t v372 = 296;
        goto LABEL_642;
      case 24:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        *(void *)(a1 + 472) |= 0x2000000000uLL;
        uint64_t v163 = *v31;
        unint64_t v164 = *(void *)(v3 + v163);
        if (v164 <= 0xFFFFFFFFFFFFFFFBLL && v164 + 4 <= *(void *)(v3 + *v6))
        {
          int v165 = *(_DWORD *)(*(void *)(v3 + *v33) + v164);
          *(void *)(v3 + v163) = v164 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v32) = 1;
          int v165 = 0;
        }
        uint64_t v383 = 424;
        goto LABEL_754;
      case 25:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        *(void *)(a1 + 472) |= 0x800000000uLL;
        uint64_t v166 = *v31;
        unint64_t v167 = *(void *)(v3 + v166);
        if (v167 <= 0xFFFFFFFFFFFFFFFBLL && v167 + 4 <= *(void *)(v3 + *v6))
        {
          int v165 = *(_DWORD *)(*(void *)(v3 + *v33) + v167);
          *(void *)(v3 + v166) = v167 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v32) = 1;
          int v165 = 0;
        }
        uint64_t v383 = 416;
        goto LABEL_754;
      case 26:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        *(void *)(a1 + 472) |= 0x8000000000uLL;
        uint64_t v168 = *v31;
        unint64_t v169 = *(void *)(v3 + v168);
        if (v169 <= 0xFFFFFFFFFFFFFFFBLL && v169 + 4 <= *(void *)(v3 + *v6))
        {
          int v165 = *(_DWORD *)(*(void *)(v3 + *v33) + v169);
          *(void *)(v3 + v168) = v169 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v32) = 1;
          int v165 = 0;
        }
        uint64_t v383 = 432;
        goto LABEL_754;
      case 27:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        *(void *)(a1 + 472) |= 0x1000000000uLL;
        uint64_t v170 = *v31;
        unint64_t v171 = *(void *)(v3 + v170);
        if (v171 <= 0xFFFFFFFFFFFFFFFBLL && v171 + 4 <= *(void *)(v3 + *v6))
        {
          int v165 = *(_DWORD *)(*(void *)(v3 + *v33) + v171);
          *(void *)(v3 + v170) = v171 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v32) = 1;
          int v165 = 0;
        }
        uint64_t v383 = 420;
        goto LABEL_754;
      case 28:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        *(void *)(a1 + 472) |= 0x400000000uLL;
        uint64_t v172 = *v31;
        unint64_t v173 = *(void *)(v3 + v172);
        if (v173 <= 0xFFFFFFFFFFFFFFFBLL && v173 + 4 <= *(void *)(v3 + *v6))
        {
          int v165 = *(_DWORD *)(*(void *)(v3 + *v33) + v173);
          *(void *)(v3 + v172) = v173 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v32) = 1;
          int v165 = 0;
        }
        uint64_t v383 = 412;
        goto LABEL_754;
      case 29:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        *(void *)(a1 + 472) |= 0x4000000000uLL;
        uint64_t v174 = *v31;
        unint64_t v175 = *(void *)(v3 + v174);
        if (v175 <= 0xFFFFFFFFFFFFFFFBLL && v175 + 4 <= *(void *)(v3 + *v6))
        {
          int v165 = *(_DWORD *)(*(void *)(v3 + *v33) + v175);
          *(void *)(v3 + v174) = v175 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v32) = 1;
          int v165 = 0;
        }
        uint64_t v383 = 428;
        goto LABEL_754;
      case 33:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v176 = 0;
        unsigned int v177 = 0;
        uint64_t v178 = 0;
        *(void *)(a1 + 472) |= 0x800000000000uLL;
        while (2)
        {
          uint64_t v179 = *v31;
          uint64_t v180 = *(void *)(v3 + v179);
          unint64_t v181 = v180 + 1;
          if (v180 == -1 || v181 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v182 = *(unsigned char *)(*(void *)(v3 + *v33) + v180);
            *(void *)(v3 + v179) = v181;
            v178 |= (unint64_t)(v182 & 0x7F) << v176;
            if (v182 < 0)
            {
              v176 += 7;
              BOOL v41 = v177++ >= 9;
              if (v41)
              {
                uint64_t v178 = 0;
                goto LABEL_609;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v178 = 0;
        }
LABEL_609:
        BOOL v373 = v178 != 0;
        uint64_t v374 = 464;
        goto LABEL_679;
      case 36:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v183 = 0;
        unsigned int v184 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x800000uLL;
        while (2)
        {
          uint64_t v186 = *v31;
          uint64_t v187 = *(void *)(v3 + v186);
          unint64_t v188 = v187 + 1;
          if (v187 == -1 || v188 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v189 = *(unsigned char *)(*(void *)(v3 + *v33) + v187);
            *(void *)(v3 + v186) = v188;
            v185 |= (unint64_t)(v189 & 0x7F) << v183;
            if (v189 < 0)
            {
              v183 += 7;
              BOOL v41 = v184++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_613;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_613:
        uint64_t v375 = 368;
        goto LABEL_712;
      case 37:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v190 = 0;
        unsigned int v191 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x8000000uLL;
        while (2)
        {
          uint64_t v192 = *v31;
          uint64_t v193 = *(void *)(v3 + v192);
          unint64_t v194 = v193 + 1;
          if (v193 == -1 || v194 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v195 = *(unsigned char *)(*(void *)(v3 + *v33) + v193);
            *(void *)(v3 + v192) = v194;
            v185 |= (unint64_t)(v195 & 0x7F) << v190;
            if (v195 < 0)
            {
              v190 += 7;
              BOOL v41 = v191++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_617;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_617:
        uint64_t v375 = 384;
        goto LABEL_712;
      case 38:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v196 = 0;
        unsigned int v197 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x4000000uLL;
        while (2)
        {
          uint64_t v198 = *v31;
          uint64_t v199 = *(void *)(v3 + v198);
          unint64_t v200 = v199 + 1;
          if (v199 == -1 || v200 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v201 = *(unsigned char *)(*(void *)(v3 + *v33) + v199);
            *(void *)(v3 + v198) = v200;
            v185 |= (unint64_t)(v201 & 0x7F) << v196;
            if (v201 < 0)
            {
              v196 += 7;
              BOOL v41 = v197++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_621;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_621:
        uint64_t v375 = 380;
        goto LABEL_712;
      case 39:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v202 = 0;
        unsigned int v203 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x10000000000uLL;
        while (2)
        {
          uint64_t v204 = *v31;
          uint64_t v205 = *(void *)(v3 + v204);
          unint64_t v206 = v205 + 1;
          if (v205 == -1 || v206 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v207 = *(unsigned char *)(*(void *)(v3 + *v33) + v205);
            *(void *)(v3 + v204) = v206;
            v185 |= (unint64_t)(v207 & 0x7F) << v202;
            if (v207 < 0)
            {
              v202 += 7;
              BOOL v41 = v203++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_625;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_625:
        uint64_t v375 = 436;
        goto LABEL_712;
      case 40:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v208 = 0;
        unsigned int v209 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x20000000000uLL;
        while (2)
        {
          uint64_t v210 = *v31;
          uint64_t v211 = *(void *)(v3 + v210);
          unint64_t v212 = v211 + 1;
          if (v211 == -1 || v212 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v213 = *(unsigned char *)(*(void *)(v3 + *v33) + v211);
            *(void *)(v3 + v210) = v212;
            v185 |= (unint64_t)(v213 & 0x7F) << v208;
            if (v213 < 0)
            {
              v208 += 7;
              BOOL v41 = v209++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_629;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_629:
        uint64_t v375 = 440;
        goto LABEL_712;
      case 41:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v214 = 0;
        unsigned int v215 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x2000000uLL;
        while (2)
        {
          uint64_t v216 = *v31;
          uint64_t v217 = *(void *)(v3 + v216);
          unint64_t v218 = v217 + 1;
          if (v217 == -1 || v218 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v219 = *(unsigned char *)(*(void *)(v3 + *v33) + v217);
            *(void *)(v3 + v216) = v218;
            v185 |= (unint64_t)(v219 & 0x7F) << v214;
            if (v219 < 0)
            {
              v214 += 7;
              BOOL v41 = v215++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_633;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_633:
        uint64_t v375 = 376;
        goto LABEL_712;
      case 42:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v220 = 0;
        unsigned int v221 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x200000000uLL;
        while (2)
        {
          uint64_t v222 = *v31;
          uint64_t v223 = *(void *)(v3 + v222);
          unint64_t v224 = v223 + 1;
          if (v223 == -1 || v224 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v225 = *(unsigned char *)(*(void *)(v3 + *v33) + v223);
            *(void *)(v3 + v222) = v224;
            v185 |= (unint64_t)(v225 & 0x7F) << v220;
            if (v225 < 0)
            {
              v220 += 7;
              BOOL v41 = v221++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_637;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_637:
        uint64_t v375 = 408;
        goto LABEL_712;
      case 43:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v226 = 0;
        unsigned int v227 = 0;
        uint64_t v53 = 0;
        *(void *)(a1 + 472) |= 0x40000uLL;
        while (2)
        {
          uint64_t v228 = *v31;
          uint64_t v229 = *(void *)(v3 + v228);
          unint64_t v230 = v229 + 1;
          if (v229 == -1 || v230 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v231 = *(unsigned char *)(*(void *)(v3 + *v33) + v229);
            *(void *)(v3 + v228) = v230;
            v53 |= (unint64_t)(v231 & 0x7F) << v226;
            if (v231 < 0)
            {
              v226 += 7;
              BOOL v41 = v227++ >= 9;
              if (v41)
              {
                uint64_t v53 = 0;
                goto LABEL_641;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v53 = 0;
        }
LABEL_641:
        uint64_t v372 = 320;
LABEL_642:
        *(void *)(a1 + v372) = v53;
        goto LABEL_765;
      case 45:
        if (!v46) {
          goto LABEL_531;
        }
        if ((*(void *)(a1 + 472) & 0x2000000000000000) != 0)
        {
          char v378 = PBReaderSkipValueWithTag();
          char v29 = v414;
          int v32 = (int *)MEMORY[0x1E4F940C8];
          if ((v378 & 1) == 0) {
            goto LABEL_798;
          }
          uint64_t v377 = (4 * *(void *)(a1 + 472)) >> 56;
          goto LABEL_725;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_797;
        }
        v232 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v232, (void *)v3, v9 & 1)) {
          goto LABEL_796;
        }
        PBReaderRecallMark();
        uint64_t v233 = 192;
        goto LABEL_521;
      case 46:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v234 = 0;
        unsigned int v235 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x400000000000uLL;
        while (2)
        {
          uint64_t v236 = *v31;
          uint64_t v237 = *(void *)(v3 + v236);
          unint64_t v238 = v237 + 1;
          if (v237 == -1 || v238 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v239 = *(unsigned char *)(*(void *)(v3 + *v33) + v237);
            *(void *)(v3 + v236) = v238;
            v185 |= (unint64_t)(v239 & 0x7F) << v234;
            if (v239 < 0)
            {
              v234 += 7;
              BOOL v41 = v235++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_646;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_646:
        uint64_t v375 = 460;
        goto LABEL_712;
      case 47:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v240 = 0;
        unsigned int v241 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x100000000uLL;
        while (2)
        {
          uint64_t v242 = *v31;
          uint64_t v243 = *(void *)(v3 + v242);
          unint64_t v244 = v243 + 1;
          if (v243 == -1 || v244 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v245 = *(unsigned char *)(*(void *)(v3 + *v33) + v243);
            *(void *)(v3 + v242) = v244;
            v185 |= (unint64_t)(v245 & 0x7F) << v240;
            if (v245 < 0)
            {
              v240 += 7;
              BOOL v41 = v241++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_650;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_650:
        uint64_t v375 = 404;
        goto LABEL_712;
      case 48:
        if (!v46 || (*(void *)(a1 + 472) & 0x40000000000000) != 0) {
          goto LABEL_531;
        }
        if (v43 != 2)
        {
          char v384 = 0;
          unsigned int v385 = 0;
          uint64_t v386 = 0;
          while (1)
          {
            uint64_t v387 = *v31;
            uint64_t v388 = *(void *)(v3 + v387);
            unint64_t v389 = v388 + 1;
            if (v388 == -1 || v389 > *(void *)(v3 + *v6)) {
              goto LABEL_762;
            }
            char v390 = *(unsigned char *)(*(void *)(v3 + *v33) + v388);
            *(void *)(v3 + v387) = v389;
            v386 |= (unint64_t)(v390 & 0x7F) << v384;
            if (v390 < 0)
            {
              v384 += 7;
              BOOL v41 = v385++ >= 9;
              if (!v41) {
                continue;
              }
            }
            goto LABEL_763;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_797;
        }
        while (1)
        {
          v246 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v31) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_533;
          }
          char v247 = 0;
          unsigned int v248 = 0;
          uint64_t v249 = 0;
          while (1)
          {
            uint64_t v250 = *v31;
            uint64_t v251 = *(void *)(v3 + v250);
            unint64_t v252 = v251 + 1;
            if (v251 == -1 || v252 > *(void *)(v3 + *v6)) {
              break;
            }
            char v253 = *(unsigned char *)(*(void *)(v3 + *v33) + v251);
            *(void *)(v3 + v250) = v252;
            v249 |= (unint64_t)(v253 & 0x7F) << v247;
            if (v253 < 0)
            {
              v247 += 7;
              BOOL v41 = v248++ >= 9;
              if (!v41) {
                continue;
              }
            }
            goto LABEL_317;
          }
          *(unsigned char *)(v3 + *v246) = 1;
LABEL_317:
          PBRepeatedInt32Add();
        }
      case 49:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v254 = 0;
        unsigned int v255 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x1000000uLL;
        while (2)
        {
          uint64_t v256 = *v31;
          uint64_t v257 = *(void *)(v3 + v256);
          unint64_t v258 = v257 + 1;
          if (v257 == -1 || v258 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v259 = *(unsigned char *)(*(void *)(v3 + *v33) + v257);
            *(void *)(v3 + v256) = v258;
            v185 |= (unint64_t)(v259 & 0x7F) << v254;
            if (v259 < 0)
            {
              v254 += 7;
              BOOL v41 = v255++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_654;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_654:
        uint64_t v375 = 372;
        goto LABEL_712;
      case 50:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v260 = 0;
        unsigned int v261 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x200000uLL;
        while (2)
        {
          uint64_t v262 = *v31;
          uint64_t v263 = *(void *)(v3 + v262);
          unint64_t v264 = v263 + 1;
          if (v263 == -1 || v264 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v265 = *(unsigned char *)(*(void *)(v3 + *v33) + v263);
            *(void *)(v3 + v262) = v264;
            v185 |= (unint64_t)(v265 & 0x7F) << v260;
            if (v265 < 0)
            {
              v260 += 7;
              BOOL v41 = v261++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_658;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_658:
        uint64_t v375 = 360;
        goto LABEL_712;
      case 51:
        if (!v46 || (*(void *)(a1 + 472) & 0x10000000000000) != 0) {
          goto LABEL_531;
        }
        if (v43 != 2)
        {
          char v391 = 0;
          unsigned int v392 = 0;
          uint64_t v393 = 0;
          while (1)
          {
            uint64_t v394 = *v31;
            uint64_t v395 = *(void *)(v3 + v394);
            unint64_t v396 = v395 + 1;
            if (v395 == -1 || v396 > *(void *)(v3 + *v6)) {
              goto LABEL_762;
            }
            char v397 = *(unsigned char *)(*(void *)(v3 + *v33) + v395);
            *(void *)(v3 + v394) = v396;
            v393 |= (unint64_t)(v397 & 0x7F) << v391;
            if (v397 < 0)
            {
              v391 += 7;
              BOOL v41 = v392++ >= 9;
              if (!v41) {
                continue;
              }
            }
            goto LABEL_763;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_797;
        }
        while (1)
        {
          v266 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v31) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_533;
          }
          char v267 = 0;
          unsigned int v268 = 0;
          uint64_t v269 = 0;
          while (1)
          {
            uint64_t v270 = *v31;
            uint64_t v271 = *(void *)(v3 + v270);
            unint64_t v272 = v271 + 1;
            if (v271 == -1 || v272 > *(void *)(v3 + *v6)) {
              break;
            }
            char v273 = *(unsigned char *)(*(void *)(v3 + *v33) + v271);
            *(void *)(v3 + v270) = v272;
            v269 |= (unint64_t)(v273 & 0x7F) << v267;
            if (v273 < 0)
            {
              v267 += 7;
              BOOL v41 = v268++ >= 9;
              if (!v41) {
                continue;
              }
            }
            goto LABEL_348;
          }
          *(unsigned char *)(v3 + *v266) = 1;
LABEL_348:
          PBRepeatedInt32Add();
        }
      case 52:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v274 = 0;
        unsigned int v275 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x80000000uLL;
        while (2)
        {
          uint64_t v276 = *v31;
          uint64_t v277 = *(void *)(v3 + v276);
          unint64_t v278 = v277 + 1;
          if (v277 == -1 || v278 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v279 = *(unsigned char *)(*(void *)(v3 + *v33) + v277);
            *(void *)(v3 + v276) = v278;
            v185 |= (unint64_t)(v279 & 0x7F) << v274;
            if (v279 < 0)
            {
              v274 += 7;
              BOOL v41 = v275++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_662;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_662:
        uint64_t v375 = 400;
        goto LABEL_712;
      case 53:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        *(void *)(a1 + 472) |= 0x100000000000uLL;
        uint64_t v280 = *v31;
        unint64_t v281 = *(void *)(v3 + v280);
        if (v281 <= 0xFFFFFFFFFFFFFFFBLL && v281 + 4 <= *(void *)(v3 + *v6))
        {
          int v165 = *(_DWORD *)(*(void *)(v3 + *v33) + v281);
          *(void *)(v3 + v280) = v281 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v32) = 1;
          int v165 = 0;
        }
        uint64_t v383 = 452;
LABEL_754:
        *(_DWORD *)(a1 + v383) = v165;
        goto LABEL_765;
      case 54:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v282 = 0;
        unsigned int v283 = 0;
        uint64_t v284 = 0;
        *(void *)(a1 + 472) |= 0x8000000000000uLL;
        while (2)
        {
          uint64_t v285 = *v31;
          uint64_t v286 = *(void *)(v3 + v285);
          unint64_t v287 = v286 + 1;
          if (v286 == -1 || v287 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v288 = *(unsigned char *)(*(void *)(v3 + *v33) + v286);
            *(void *)(v3 + v285) = v287;
            v284 |= (unint64_t)(v288 & 0x7F) << v282;
            if (v288 < 0)
            {
              v282 += 7;
              BOOL v41 = v283++ >= 9;
              if (v41)
              {
                uint64_t v284 = 0;
                goto LABEL_666;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v284 = 0;
        }
LABEL_666:
        BOOL v373 = v284 != 0;
        uint64_t v374 = 468;
        goto LABEL_679;
      case 55:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v289 = 0;
        unsigned int v290 = 0;
        uint64_t v291 = 0;
        *(void *)(a1 + 472) |= 0x4000000000000uLL;
        while (2)
        {
          uint64_t v292 = *v31;
          uint64_t v293 = *(void *)(v3 + v292);
          unint64_t v294 = v293 + 1;
          if (v293 == -1 || v294 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v295 = *(unsigned char *)(*(void *)(v3 + *v33) + v293);
            *(void *)(v3 + v292) = v294;
            v291 |= (unint64_t)(v295 & 0x7F) << v289;
            if (v295 < 0)
            {
              v289 += 7;
              BOOL v41 = v290++ >= 9;
              if (v41)
              {
                uint64_t v291 = 0;
                goto LABEL_670;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v291 = 0;
        }
LABEL_670:
        BOOL v373 = v291 != 0;
        uint64_t v374 = 467;
        goto LABEL_679;
      case 56:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v296 = 0;
        unsigned int v297 = 0;
        uint64_t v298 = 0;
        *(void *)(a1 + 472) |= 0x2000000000000uLL;
        while (2)
        {
          uint64_t v299 = *v31;
          uint64_t v300 = *(void *)(v3 + v299);
          unint64_t v301 = v300 + 1;
          if (v300 == -1 || v301 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v302 = *(unsigned char *)(*(void *)(v3 + *v33) + v300);
            *(void *)(v3 + v299) = v301;
            v298 |= (unint64_t)(v302 & 0x7F) << v296;
            if (v302 < 0)
            {
              v296 += 7;
              BOOL v41 = v297++ >= 9;
              if (v41)
              {
                uint64_t v298 = 0;
                goto LABEL_674;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v298 = 0;
        }
LABEL_674:
        BOOL v373 = v298 != 0;
        uint64_t v374 = 466;
        goto LABEL_679;
      case 57:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v303 = 0;
        unsigned int v304 = 0;
        uint64_t v305 = 0;
        *(void *)(a1 + 472) |= 0x1000000000000uLL;
        while (2)
        {
          uint64_t v306 = *v31;
          uint64_t v307 = *(void *)(v3 + v306);
          unint64_t v308 = v307 + 1;
          if (v307 == -1 || v308 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v309 = *(unsigned char *)(*(void *)(v3 + *v33) + v307);
            *(void *)(v3 + v306) = v308;
            v305 |= (unint64_t)(v309 & 0x7F) << v303;
            if (v309 < 0)
            {
              v303 += 7;
              BOOL v41 = v304++ >= 9;
              if (v41)
              {
                uint64_t v305 = 0;
                goto LABEL_678;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          uint64_t v305 = 0;
        }
LABEL_678:
        BOOL v373 = v305 != 0;
        uint64_t v374 = 465;
LABEL_679:
        *(unsigned char *)(a1 + v374) = v373;
        goto LABEL_765;
      case 58:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v310 = 0;
        unsigned int v311 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x400000uLL;
        while (2)
        {
          uint64_t v312 = *v31;
          uint64_t v313 = *(void *)(v3 + v312);
          unint64_t v314 = v313 + 1;
          if (v313 == -1 || v314 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v315 = *(unsigned char *)(*(void *)(v3 + *v33) + v313);
            *(void *)(v3 + v312) = v314;
            v185 |= (unint64_t)(v315 & 0x7F) << v310;
            if (v315 < 0)
            {
              v310 += 7;
              BOOL v41 = v311++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_683;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_683:
        uint64_t v375 = 364;
        goto LABEL_712;
      case 59:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v316 = 0;
        unsigned int v317 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x20000000uLL;
        while (2)
        {
          uint64_t v318 = *v31;
          uint64_t v319 = *(void *)(v3 + v318);
          unint64_t v320 = v319 + 1;
          if (v319 == -1 || v320 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v321 = *(unsigned char *)(*(void *)(v3 + *v33) + v319);
            *(void *)(v3 + v318) = v320;
            v185 |= (unint64_t)(v321 & 0x7F) << v316;
            if (v321 < 0)
            {
              v316 += 7;
              BOOL v41 = v317++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_687;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_687:
        uint64_t v375 = 392;
        goto LABEL_712;
      case 60:
        if (!v46 || (*(void *)(a1 + 472) & 0x100000000000000) != 0) {
          goto LABEL_529;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_797;
        }
        v232 = objc_alloc_init(GEOWiFiAP);
        if (!GEOWiFiAPReadAllFrom((uint64_t)v232, (void *)v3)) {
          goto LABEL_796;
        }
        PBReaderRecallMark();
        -[GEOWiFiConnectionQuality _addNoFlagsEssMembers:](a1, v232);
        goto LABEL_492;
      case 61:
        if (!v46 || (*(void *)(a1 + 472) & 0x4000000000000000) != 0) {
          goto LABEL_529;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_797;
        }
        v232 = objc_alloc_init(GEOWiFiAP);
        if (!GEOWiFiAPReadAllFrom((uint64_t)v232, (void *)v3)) {
          goto LABEL_796;
        }
        PBReaderRecallMark();
        -[GEOWiFiConnectionQuality _addNoFlagsNearbyBSS:](a1, v232);
        goto LABEL_492;
      case 62:
        if (!v46 || (*(void *)(a1 + 472) & 0x200000000000000) != 0) {
          goto LABEL_529;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_797;
        }
        v232 = objc_alloc_init(GEOWiFiQualityFeedback);
        if (!GEOWiFiQualityFeedbackReadAllFrom((uint64_t)v232, (void *)v3)) {
          goto LABEL_796;
        }
        PBReaderRecallMark();
        -[GEOWiFiConnectionQuality _addNoFlagsFeedback:](a1, v232);
        goto LABEL_492;
      case 63:
        if (!v46) {
          goto LABEL_531;
        }
        if ((*(void *)(a1 + 472) & 0x800000000000000) == 0)
        {
          uint64_t v58 = PBReaderReadString();
          uint64_t v59 = 176;
LABEL_427:
          v322 = *(void **)(a1 + v59);
          *(void *)(a1 + v59) = v58;
          goto LABEL_522;
        }
        char v379 = PBReaderSkipValueWithTag();
        char v29 = v414;
        int v32 = (int *)MEMORY[0x1E4F940C8];
        if ((v379 & 1) == 0) {
          goto LABEL_798;
        }
        uint64_t v377 = (16 * *(void *)(a1 + 472)) >> 56;
        goto LABEL_725;
      case 64:
        if (!v46 || (*(unsigned char *)(a1 + 480) & 1) != 0) {
          goto LABEL_529;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_797;
        }
        v232 = objc_alloc_init(GEOWiFiConnectionRoamState);
        if (!GEOWiFiConnectionRoamStateReadAllFrom((uint64_t)v232, (void *)v3)) {
          goto LABEL_796;
        }
        PBReaderRecallMark();
        -[GEOWiFiConnectionQuality _addNoFlagsRoamStates:](a1, v232);
        goto LABEL_492;
      case 65:
        if (!v46 || (*(unsigned char *)(a1 + 480) & 2) != 0) {
          goto LABEL_529;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_797;
        }
        v232 = objc_alloc_init(GEOWiFiConnectionSpeedTest);
        if (!GEOWiFiConnectionSpeedTestReadAllFrom((uint64_t)v232, (void *)v3)) {
          goto LABEL_796;
        }
        PBReaderRecallMark();
        -[GEOWiFiConnectionQuality _addNoFlagsSpeedTest:](a1, v232);
        goto LABEL_492;
      case 66:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v323 = 0;
        unsigned int v324 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x40000000000uLL;
        while (2)
        {
          uint64_t v325 = *v31;
          uint64_t v326 = *(void *)(v3 + v325);
          unint64_t v327 = v326 + 1;
          if (v326 == -1 || v327 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v328 = *(unsigned char *)(*(void *)(v3 + *v33) + v326);
            *(void *)(v3 + v325) = v327;
            v185 |= (unint64_t)(v328 & 0x7F) << v323;
            if (v328 < 0)
            {
              v323 += 7;
              BOOL v41 = v324++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_691;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_691:
        uint64_t v375 = 444;
        goto LABEL_712;
      case 67:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v329 = 0;
        unsigned int v330 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x80000000000uLL;
        while (2)
        {
          uint64_t v331 = *v31;
          uint64_t v332 = *(void *)(v3 + v331);
          unint64_t v333 = v332 + 1;
          if (v332 == -1 || v333 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v334 = *(unsigned char *)(*(void *)(v3 + *v33) + v332);
            *(void *)(v3 + v331) = v333;
            v185 |= (unint64_t)(v334 & 0x7F) << v329;
            if (v334 < 0)
            {
              v329 += 7;
              BOOL v41 = v330++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_695;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_695:
        uint64_t v375 = 448;
        goto LABEL_712;
      case 68:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v335 = 0;
        unsigned int v336 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x100000uLL;
        while (2)
        {
          uint64_t v337 = *v31;
          uint64_t v338 = *(void *)(v3 + v337);
          unint64_t v339 = v338 + 1;
          if (v338 == -1 || v339 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v340 = *(unsigned char *)(*(void *)(v3 + *v33) + v338);
            *(void *)(v3 + v337) = v339;
            v185 |= (unint64_t)(v340 & 0x7F) << v335;
            if (v340 < 0)
            {
              v335 += 7;
              BOOL v41 = v336++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_699;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_699:
        uint64_t v375 = 356;
        goto LABEL_712;
      case 69:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v341 = 0;
        unsigned int v342 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x10000000uLL;
        while (2)
        {
          uint64_t v343 = *v31;
          uint64_t v344 = *(void *)(v3 + v343);
          unint64_t v345 = v344 + 1;
          if (v344 == -1 || v345 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v346 = *(unsigned char *)(*(void *)(v3 + *v33) + v344);
            *(void *)(v3 + v343) = v345;
            v185 |= (unint64_t)(v346 & 0x7F) << v341;
            if (v346 < 0)
            {
              v341 += 7;
              BOOL v41 = v342++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_703;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_703:
        uint64_t v375 = 388;
        goto LABEL_712;
      case 70:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v347 = 0;
        unsigned int v348 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x200000000000uLL;
        while (2)
        {
          uint64_t v349 = *v31;
          uint64_t v350 = *(void *)(v3 + v349);
          unint64_t v351 = v350 + 1;
          if (v350 == -1 || v351 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v352 = *(unsigned char *)(*(void *)(v3 + *v33) + v350);
            *(void *)(v3 + v349) = v351;
            v185 |= (unint64_t)(v352 & 0x7F) << v347;
            if (v352 < 0)
            {
              v347 += 7;
              BOOL v41 = v348++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_707;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_707:
        uint64_t v375 = 456;
        goto LABEL_712;
      case 71:
        if (!v46) {
          goto LABEL_531;
        }
        if ((*(void *)(a1 + 472) & 0x1000000000000000) != 0)
        {
          char v380 = PBReaderSkipValueWithTag();
          char v29 = v414;
          int v32 = (int *)MEMORY[0x1E4F940C8];
          if ((v380 & 1) == 0) {
            goto LABEL_798;
          }
          uint64_t v377 = (8 * *(void *)(a1 + 472)) >> 56;
          goto LABEL_725;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_797;
        }
        v232 = objc_alloc_init(GEOWiFiHarvestLabel);
        if (!GEOWiFiHarvestLabelReadAllFrom((uint64_t)v232, (void *)v3, v9 & 1)) {
          goto LABEL_796;
        }
        PBReaderRecallMark();
        uint64_t v233 = 184;
        goto LABEL_521;
      case 72:
        if (!v46) {
          goto LABEL_531;
        }
        if ((*(void *)(a1 + 472) & 0x8000000000000000) != 0)
        {
          char v381 = PBReaderSkipValueWithTag();
          char v29 = v414;
          int v32 = (int *)MEMORY[0x1E4F940C8];
          if ((v381 & 1) == 0) {
            goto LABEL_798;
          }
          uint64_t v377 = *(char *)(a1 + 479);
          goto LABEL_725;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_797;
        }
        v232 = objc_alloc_init(GEOWiFiPasspointInfo);
        if (!GEOWiFiPasspointInfoReadAllFrom((uint64_t)v232, (void *)v3)) {
          goto LABEL_796;
        }
        PBReaderRecallMark();
        uint64_t v233 = 256;
        goto LABEL_521;
      case 73:
        if (v46 && (*(void *)(a1 + 472) & 0x400000000000000) == 0)
        {
          PBReaderReadString();
          v232 = (GEOLocation *)objc_claimAutoreleasedReturnValue();
          if (v232) {
            -[GEOWiFiConnectionQuality _addNoFlagsHotspotHelperProvider:](a1, v232);
          }
LABEL_492:

          goto LABEL_764;
        }
LABEL_529:
        char v370 = PBReaderSkipValueWithTag();
        char v29 = v414;
        int v32 = (int *)MEMORY[0x1E4F940C8];
        if ((v370 & 1) == 0) {
          goto LABEL_798;
        }
        goto LABEL_765;
      case 74:
        if (!v46 || (*(void *)(a1 + 472) & 0x20000000000000) != 0) {
          goto LABEL_531;
        }
        if (v43 != 2)
        {
          char v398 = 0;
          unsigned int v399 = 0;
          uint64_t v400 = 0;
          while (1)
          {
            uint64_t v401 = *v31;
            uint64_t v402 = *(void *)(v3 + v401);
            unint64_t v403 = v402 + 1;
            if (v402 == -1 || v403 > *(void *)(v3 + *v6)) {
              break;
            }
            char v404 = *(unsigned char *)(*(void *)(v3 + *v33) + v402);
            *(void *)(v3 + v401) = v403;
            v400 |= (unint64_t)(v404 & 0x7F) << v398;
            if (v404 < 0)
            {
              v398 += 7;
              BOOL v41 = v399++ >= 9;
              if (!v41) {
                continue;
              }
            }
            goto LABEL_763;
          }
LABEL_762:
          *(unsigned char *)(v3 + *v32) = 1;
LABEL_763:
          PBRepeatedInt32Add();
          goto LABEL_764;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_797;
        }
        while (1)
        {
          v353 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v31) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v354 = 0;
          unsigned int v355 = 0;
          uint64_t v356 = 0;
          while (1)
          {
            uint64_t v357 = *v31;
            uint64_t v358 = *(void *)(v3 + v357);
            unint64_t v359 = v358 + 1;
            if (v358 == -1 || v359 > *(void *)(v3 + *v6)) {
              break;
            }
            char v360 = *(unsigned char *)(*(void *)(v3 + *v33) + v358);
            *(void *)(v3 + v357) = v359;
            v356 |= (unint64_t)(v360 & 0x7F) << v354;
            if (v360 < 0)
            {
              v354 += 7;
              BOOL v41 = v355++ >= 9;
              if (!v41) {
                continue;
              }
            }
            goto LABEL_507;
          }
          *(unsigned char *)(v3 + *v353) = 1;
LABEL_507:
          PBRepeatedInt32Add();
        }
LABEL_533:
        PBReaderRecallMark();
        int v32 = (int *)MEMORY[0x1E4F940C8];
        char v29 = v414;
        goto LABEL_765;
      case 75:
        if ((v8 & 1) == 0) {
          goto LABEL_531;
        }
        char v361 = 0;
        unsigned int v362 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 472) |= 0x40000000uLL;
        while (2)
        {
          uint64_t v363 = *v31;
          uint64_t v364 = *(void *)(v3 + v363);
          unint64_t v365 = v364 + 1;
          if (v364 == -1 || v365 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v32) = 1;
          }
          else
          {
            char v366 = *(unsigned char *)(*(void *)(v3 + *v33) + v364);
            *(void *)(v3 + v363) = v365;
            v185 |= (unint64_t)(v366 & 0x7F) << v361;
            if (v366 < 0)
            {
              v361 += 7;
              BOOL v41 = v362++ >= 9;
              if (v41)
              {
                LODWORD(v185) = 0;
                goto LABEL_711;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v32)) {
          LODWORD(v185) = 0;
        }
LABEL_711:
        uint64_t v375 = 396;
LABEL_712:
        *(_DWORD *)(a1 + v375) = v185;
        goto LABEL_765;
      case 76:
        if (!v46) {
          goto LABEL_531;
        }
        if ((*(void *)(a1 + 472) & 0x80000000000000) != 0)
        {
          char v382 = PBReaderSkipValueWithTag();
          char v29 = v414;
          int v32 = (int *)MEMORY[0x1E4F940C8];
          if ((v382 & 1) == 0) {
            goto LABEL_798;
          }
          uint64_t v377 = *(char *)(a1 + 478);
LABEL_725:
          v7 += v377 >> 7;
          goto LABEL_765;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_797;
        }
        v232 = objc_alloc_init(GEOWiFiBeaconInfo);
        if (GEOWiFiBeaconInfoReadAllFrom((uint64_t)v232, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v233 = 88;
LABEL_521:
          v322 = *(void **)(a1 + v233);
          *(void *)(a1 + v233) = v232;
LABEL_522:

          --v7;
LABEL_764:
          char v29 = v414;
          int v32 = (int *)MEMORY[0x1E4F940C8];
LABEL_765:
          if (!(v29 & 1 | (v7 != 0)) || *(void *)(v3 + *v31) >= *(void *)(v3 + *v6)) {
            goto LABEL_770;
          }
          continue;
        }
LABEL_796:

LABEL_797:
        char v29 = v414;
LABEL_798:
        unint64_t v3 = 0;
        char v413 = *(unsigned char *)(a1 + 480) | 7;
        *(void *)(a1 + 472) |= 0xFFF0000000000000;
        *(unsigned char *)(a1 + 480) = v413;
        if (v29) {
          goto LABEL_794;
        }
        return v3;
      case 77:
        if (v8)
        {
          *(void *)(a1 + 472) |= 0x8000uLL;
          uint64_t v367 = *v31;
          unint64_t v368 = *(void *)(v3 + v367);
          if (v368 <= 0xFFFFFFFFFFFFFFF7 && v368 + 8 <= *(void *)(v3 + *v6))
          {
            uint64_t v369 = *(void *)(*(void *)(v3 + *v33) + v368);
            *(void *)(v3 + v367) = v368 + 8;
          }
          else
          {
            *(unsigned char *)(v3 + *v32) = 1;
            uint64_t v369 = 0;
          }
          *(void *)(a1 + 280) = v369;
        }
        else
        {
LABEL_531:
          char v371 = PBReaderSkipValueWithTag();
          int v32 = (int *)MEMORY[0x1E4F940C8];
          char v29 = v414;
          if ((v371 & 1) == 0) {
            goto LABEL_798;
          }
        }
        goto LABEL_765;
      default:
        int v60 = PBReaderSkipValueWithTag();
        int v32 = (int *)MEMORY[0x1E4F940C8];
        char v29 = v414;
        if (!v60) {
          goto LABEL_798;
        }
        goto LABEL_765;
    }
  }
}

void sub_189F2034C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F208B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F21174(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F22140(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F22510(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F228E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F22CB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F22E30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F23204(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F23D28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F23EA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F24020(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F243F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F24A3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F28F84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWiFiConnectionQualityCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  [a1[24] readAll:1];
  long long v46 = 0u;
  long long v47 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  id v2 = a1[17];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v44 objects:v52 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v45;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v45 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v44 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v44 objects:v52 count:16];
    }
    while (v4);
  }

  long long v42 = 0u;
  long long v43 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  id v7 = a1[28];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v40 objects:v51 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v41;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v41 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v40 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v40 objects:v51 count:16];
    }
    while (v9);
  }

  long long v38 = 0u;
  long long v39 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  id v12 = a1[20];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v36 objects:v50 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v37;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v37 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v36 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v36 objects:v50 count:16];
    }
    while (v14);
  }

  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  id v17 = a1[36];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v32 objects:v49 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v33;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v33 != v20) {
          objc_enumerationMutation(v17);
        }
        [*(id *)(*((void *)&v32 + 1) + 8 * v21++) readAll:1];
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v32 objects:v49 count:16];
    }
    while (v19);
  }

  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v22 = a1[38];
  uint64_t v23 = [v22 countByEnumeratingWithState:&v28 objects:v48 count:16];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)v29;
    do
    {
      uint64_t v26 = 0;
      do
      {
        if (*(void *)v29 != v25) {
          objc_enumerationMutation(v22);
        }
        objc_msgSend(*(id *)(*((void *)&v28 + 1) + 8 * v26++), "readAll:", 1, (void)v28);
      }
      while (v24 != v26);
      uint64_t v24 = [v22 countByEnumeratingWithState:&v28 objects:v48 count:16];
    }
    while (v24);
  }

  [a1[23] readAll:1];
  [a1[32] readAll:1];
  return [a1[11] readAll:1];
}

unint64_t GEOWiFiConnectionQualityReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 348))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOWiFiConnectionQualityReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 352));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 344) = [v8 position];
  *(_DWORD *)(a1 + 348) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOWiFiConnectionQualityReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOWiFiConnectionQualityReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOWiFiConnectionQualityReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOWiFiConnectionQualityCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 352));
  return Specified;
}

void sub_189F294C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiConnectionQualityReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOWiFiConnectionQualityReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F2952C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiConnectionQualityIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 2u:
          if (v16 == 2) {
            goto LABEL_415;
          }
          goto LABEL_475;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v26 = v37++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v26 = v42++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v2;
            uint64_t v49 = *(void *)&a1[v48];
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v51 = *(char *)(*(void *)&a1[*v5] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v26 = v47++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v52 = 0;
          while (1)
          {
            uint64_t v53 = *v2;
            uint64_t v54 = *(void *)&a1[v53];
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v56 = *(char *)(*(void *)&a1[*v5] + v54);
            *(void *)&a1[v53] = v55;
            if (v56 < 0)
            {
              BOOL v26 = v52++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v57 = 0;
          while (1)
          {
            uint64_t v58 = *v2;
            uint64_t v59 = *(void *)&a1[v58];
            unint64_t v60 = v59 + 1;
            if (v59 == -1 || v60 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v61 = *(char *)(*(void *)&a1[*v5] + v59);
            *(void *)&a1[v58] = v60;
            if (v61 < 0)
            {
              BOOL v26 = v57++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v62 = 0;
          while (1)
          {
            uint64_t v63 = *v2;
            uint64_t v64 = *(void *)&a1[v63];
            unint64_t v65 = v64 + 1;
            if (v64 == -1 || v65 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v66 = *(char *)(*(void *)&a1[*v5] + v64);
            *(void *)&a1[v63] = v65;
            if (v66 < 0)
            {
              BOOL v26 = v62++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v67 = 0;
          while (1)
          {
            uint64_t v68 = *v2;
            uint64_t v69 = *(void *)&a1[v68];
            unint64_t v70 = v69 + 1;
            if (v69 == -1 || v70 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v71 = *(char *)(*(void *)&a1[*v5] + v69);
            *(void *)&a1[v68] = v70;
            if (v71 < 0)
            {
              BOOL v26 = v67++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x10u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v72 = 0;
          while (1)
          {
            uint64_t v73 = *v2;
            uint64_t v74 = *(void *)&a1[v73];
            unint64_t v75 = v74 + 1;
            if (v74 == -1 || v75 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v76 = *(char *)(*(void *)&a1[*v5] + v74);
            *(void *)&a1[v73] = v75;
            if (v76 < 0)
            {
              BOOL v26 = v72++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x11u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v77 = 0;
          while (1)
          {
            uint64_t v78 = *v2;
            uint64_t v79 = *(void *)&a1[v78];
            unint64_t v80 = v79 + 1;
            if (v79 == -1 || v80 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v81 = *(char *)(*(void *)&a1[*v5] + v79);
            *(void *)&a1[v78] = v80;
            if (v81 < 0)
            {
              BOOL v26 = v77++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v82 = 0;
          while (1)
          {
            uint64_t v83 = *v2;
            uint64_t v84 = *(void *)&a1[v83];
            unint64_t v85 = v84 + 1;
            if (v84 == -1 || v85 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v86 = *(char *)(*(void *)&a1[*v5] + v84);
            *(void *)&a1[v83] = v85;
            if (v86 < 0)
            {
              BOOL v26 = v82++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x13u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v87 = 0;
          while (1)
          {
            uint64_t v88 = *v2;
            uint64_t v89 = *(void *)&a1[v88];
            unint64_t v90 = v89 + 1;
            if (v89 == -1 || v90 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v91 = *(char *)(*(void *)&a1[*v5] + v89);
            *(void *)&a1[v88] = v90;
            if (v91 < 0)
            {
              BOOL v26 = v87++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x14u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v92 = 0;
          while (1)
          {
            uint64_t v93 = *v2;
            uint64_t v94 = *(void *)&a1[v93];
            unint64_t v95 = v94 + 1;
            if (v94 == -1 || v95 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v96 = *(char *)(*(void *)&a1[*v5] + v94);
            *(void *)&a1[v93] = v95;
            if (v96 < 0)
            {
              BOOL v26 = v92++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x15u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v97 = 0;
          while (1)
          {
            uint64_t v98 = *v2;
            uint64_t v99 = *(void *)&a1[v98];
            unint64_t v100 = v99 + 1;
            if (v99 == -1 || v100 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v101 = *(char *)(*(void *)&a1[*v5] + v99);
            *(void *)&a1[v98] = v100;
            if (v101 < 0)
            {
              BOOL v26 = v97++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x16u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v102 = 0;
          while (1)
          {
            uint64_t v103 = *v2;
            uint64_t v104 = *(void *)&a1[v103];
            unint64_t v105 = v104 + 1;
            if (v104 == -1 || v105 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v106 = *(char *)(*(void *)&a1[*v5] + v104);
            *(void *)&a1[v103] = v105;
            if (v106 < 0)
            {
              BOOL v26 = v102++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x17u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v107 = 0;
          while (1)
          {
            uint64_t v108 = *v2;
            uint64_t v109 = *(void *)&a1[v108];
            unint64_t v110 = v109 + 1;
            if (v109 == -1 || v110 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v111 = *(char *)(*(void *)&a1[*v5] + v109);
            *(void *)&a1[v108] = v110;
            if (v111 < 0)
            {
              BOOL v26 = v107++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x18u:
        case 0x19u:
        case 0x1Au:
        case 0x1Bu:
        case 0x1Cu:
        case 0x1Du:
        case 0x35u:
          if (v16 != 5) {
            goto LABEL_475;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFFBLL) {
            goto LABEL_433;
          }
          unint64_t v20 = v19 + 4;
          goto LABEL_22;
        case 0x21u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v112 = 0;
          while (1)
          {
            uint64_t v113 = *v2;
            uint64_t v114 = *(void *)&a1[v113];
            unint64_t v115 = v114 + 1;
            if (v114 == -1 || v115 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v116 = *(char *)(*(void *)&a1[*v5] + v114);
            *(void *)&a1[v113] = v115;
            if (v116 < 0)
            {
              BOOL v26 = v112++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x24u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v117 = 0;
          while (1)
          {
            uint64_t v118 = *v2;
            uint64_t v119 = *(void *)&a1[v118];
            unint64_t v120 = v119 + 1;
            if (v119 == -1 || v120 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v121 = *(char *)(*(void *)&a1[*v5] + v119);
            *(void *)&a1[v118] = v120;
            if (v121 < 0)
            {
              BOOL v26 = v117++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x25u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v122 = 0;
          while (1)
          {
            uint64_t v123 = *v2;
            uint64_t v124 = *(void *)&a1[v123];
            unint64_t v125 = v124 + 1;
            if (v124 == -1 || v125 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v126 = *(char *)(*(void *)&a1[*v5] + v124);
            *(void *)&a1[v123] = v125;
            if (v126 < 0)
            {
              BOOL v26 = v122++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x26u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v127 = 0;
          while (1)
          {
            uint64_t v128 = *v2;
            uint64_t v129 = *(void *)&a1[v128];
            unint64_t v130 = v129 + 1;
            if (v129 == -1 || v130 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v131 = *(char *)(*(void *)&a1[*v5] + v129);
            *(void *)&a1[v128] = v130;
            if (v131 < 0)
            {
              BOOL v26 = v127++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x27u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v132 = 0;
          while (1)
          {
            uint64_t v133 = *v2;
            uint64_t v134 = *(void *)&a1[v133];
            unint64_t v135 = v134 + 1;
            if (v134 == -1 || v135 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v136 = *(char *)(*(void *)&a1[*v5] + v134);
            *(void *)&a1[v133] = v135;
            if (v136 < 0)
            {
              BOOL v26 = v132++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x28u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v137 = 0;
          while (1)
          {
            uint64_t v138 = *v2;
            uint64_t v139 = *(void *)&a1[v138];
            unint64_t v140 = v139 + 1;
            if (v139 == -1 || v140 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v141 = *(char *)(*(void *)&a1[*v5] + v139);
            *(void *)&a1[v138] = v140;
            if (v141 < 0)
            {
              BOOL v26 = v137++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x29u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v142 = 0;
          while (1)
          {
            uint64_t v143 = *v2;
            uint64_t v144 = *(void *)&a1[v143];
            unint64_t v145 = v144 + 1;
            if (v144 == -1 || v145 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v146 = *(char *)(*(void *)&a1[*v5] + v144);
            *(void *)&a1[v143] = v145;
            if (v146 < 0)
            {
              BOOL v26 = v142++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x2Au:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v147 = 0;
          while (1)
          {
            uint64_t v148 = *v2;
            uint64_t v149 = *(void *)&a1[v148];
            unint64_t v150 = v149 + 1;
            if (v149 == -1 || v150 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v151 = *(char *)(*(void *)&a1[*v5] + v149);
            *(void *)&a1[v148] = v150;
            if (v151 < 0)
            {
              BOOL v26 = v147++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x2Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v152 = 0;
          while (1)
          {
            uint64_t v153 = *v2;
            uint64_t v154 = *(void *)&a1[v153];
            unint64_t v155 = v154 + 1;
            if (v154 == -1 || v155 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v156 = *(char *)(*(void *)&a1[*v5] + v154);
            *(void *)&a1[v153] = v155;
            if (v156 < 0)
            {
              BOOL v26 = v152++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x2Du:
          if (v16 != 2 || !PBReaderPlaceMark() || (GEOLocationIsValid(a1) & 1) == 0) {
            goto LABEL_475;
          }
          goto LABEL_437;
        case 0x2Eu:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v157 = 0;
          while (1)
          {
            uint64_t v158 = *v2;
            uint64_t v159 = *(void *)&a1[v158];
            unint64_t v160 = v159 + 1;
            if (v159 == -1 || v160 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v161 = *(char *)(*(void *)&a1[*v5] + v159);
            *(void *)&a1[v158] = v160;
            if (v161 < 0)
            {
              BOOL v26 = v157++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x2Fu:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v162 = 0;
          while (1)
          {
            uint64_t v163 = *v2;
            uint64_t v164 = *(void *)&a1[v163];
            unint64_t v165 = v164 + 1;
            if (v164 == -1 || v165 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v166 = *(char *)(*(void *)&a1[*v5] + v164);
            *(void *)&a1[v163] = v165;
            if (v166 < 0)
            {
              BOOL v26 = v162++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x30u:
          if (v16 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_475;
            }
            while (1)
            {
              uint64_t v167 = *v2;
              uint64_t v168 = *(void *)&a1[v167];
              unint64_t v169 = v168 + 1;
              if (v168 == -1 || v169 > *(void *)&a1[*v3]) {
                goto LABEL_432;
              }
              int v170 = *(char *)(*(void *)&a1[*v5] + v168);
              *(void *)&a1[v167] = v169;
              if (v170 < 0)
              {
                unsigned int v171 = v16++;
                if (v171 <= 8) {
                  continue;
                }
              }
              goto LABEL_438;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_475;
          }
LABEL_444:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v258 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v259 = *v2;
              uint64_t v260 = *(void *)&a1[v259];
              unint64_t v261 = v260 + 1;
              if (v260 == -1 || v261 > *(void *)&a1[*v3]) {
                break;
              }
              int v262 = *(char *)(*(void *)&a1[*v5] + v260);
              *(void *)&a1[v259] = v261;
              if (v262 < 0)
              {
                BOOL v13 = v258++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_444;
            }
            a1[*v4] = 1;
          }
          goto LABEL_437;
        case 0x31u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v172 = 0;
          while (1)
          {
            uint64_t v173 = *v2;
            uint64_t v174 = *(void *)&a1[v173];
            unint64_t v175 = v174 + 1;
            if (v174 == -1 || v175 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v176 = *(char *)(*(void *)&a1[*v5] + v174);
            *(void *)&a1[v173] = v175;
            if (v176 < 0)
            {
              BOOL v26 = v172++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x32u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v177 = 0;
          while (1)
          {
            uint64_t v178 = *v2;
            uint64_t v179 = *(void *)&a1[v178];
            unint64_t v180 = v179 + 1;
            if (v179 == -1 || v180 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v181 = *(char *)(*(void *)&a1[*v5] + v179);
            *(void *)&a1[v178] = v180;
            if (v181 < 0)
            {
              BOOL v26 = v177++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x33u:
          if (v16 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_475;
            }
            while (1)
            {
              uint64_t v182 = *v2;
              uint64_t v183 = *(void *)&a1[v182];
              unint64_t v184 = v183 + 1;
              if (v183 == -1 || v184 > *(void *)&a1[*v3]) {
                goto LABEL_432;
              }
              int v185 = *(char *)(*(void *)&a1[*v5] + v183);
              *(void *)&a1[v182] = v184;
              if (v185 < 0)
              {
                unsigned int v186 = v16++;
                if (v186 <= 8) {
                  continue;
                }
              }
              goto LABEL_438;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_475;
          }
LABEL_454:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v263 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v264 = *v2;
              uint64_t v265 = *(void *)&a1[v264];
              unint64_t v266 = v265 + 1;
              if (v265 == -1 || v266 > *(void *)&a1[*v3]) {
                break;
              }
              int v267 = *(char *)(*(void *)&a1[*v5] + v265);
              *(void *)&a1[v264] = v266;
              if (v267 < 0)
              {
                BOOL v13 = v263++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_454;
            }
            a1[*v4] = 1;
          }
          goto LABEL_437;
        case 0x34u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v187 = 0;
          while (1)
          {
            uint64_t v188 = *v2;
            uint64_t v189 = *(void *)&a1[v188];
            unint64_t v190 = v189 + 1;
            if (v189 == -1 || v190 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v191 = *(char *)(*(void *)&a1[*v5] + v189);
            *(void *)&a1[v188] = v190;
            if (v191 < 0)
            {
              BOOL v26 = v187++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x36u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v192 = 0;
          while (1)
          {
            uint64_t v193 = *v2;
            uint64_t v194 = *(void *)&a1[v193];
            unint64_t v195 = v194 + 1;
            if (v194 == -1 || v195 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v196 = *(char *)(*(void *)&a1[*v5] + v194);
            *(void *)&a1[v193] = v195;
            if (v196 < 0)
            {
              BOOL v26 = v192++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x37u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v197 = 0;
          while (1)
          {
            uint64_t v198 = *v2;
            uint64_t v199 = *(void *)&a1[v198];
            unint64_t v200 = v199 + 1;
            if (v199 == -1 || v200 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v201 = *(char *)(*(void *)&a1[*v5] + v199);
            *(void *)&a1[v198] = v200;
            if (v201 < 0)
            {
              BOOL v26 = v197++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x38u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v202 = 0;
          while (1)
          {
            uint64_t v203 = *v2;
            uint64_t v204 = *(void *)&a1[v203];
            unint64_t v205 = v204 + 1;
            if (v204 == -1 || v205 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v206 = *(char *)(*(void *)&a1[*v5] + v204);
            *(void *)&a1[v203] = v205;
            if (v206 < 0)
            {
              BOOL v26 = v202++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x39u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v207 = 0;
          while (1)
          {
            uint64_t v208 = *v2;
            uint64_t v209 = *(void *)&a1[v208];
            unint64_t v210 = v209 + 1;
            if (v209 == -1 || v210 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v211 = *(char *)(*(void *)&a1[*v5] + v209);
            *(void *)&a1[v208] = v210;
            if (v211 < 0)
            {
              BOOL v26 = v207++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x3Au:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v212 = 0;
          while (1)
          {
            uint64_t v213 = *v2;
            uint64_t v214 = *(void *)&a1[v213];
            unint64_t v215 = v214 + 1;
            if (v214 == -1 || v215 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v216 = *(char *)(*(void *)&a1[*v5] + v214);
            *(void *)&a1[v213] = v215;
            if (v216 < 0)
            {
              BOOL v26 = v212++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x3Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v217 = 0;
          while (1)
          {
            uint64_t v218 = *v2;
            uint64_t v219 = *(void *)&a1[v218];
            unint64_t v220 = v219 + 1;
            if (v219 == -1 || v220 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v221 = *(char *)(*(void *)&a1[*v5] + v219);
            *(void *)&a1[v218] = v220;
            if (v221 < 0)
            {
              BOOL v26 = v217++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x3Cu:
        case 0x3Du:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOWiFiAPIsValid(a1)) {
            goto LABEL_475;
          }
          goto LABEL_437;
        case 0x3Eu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualityFeedbackIsValid(a1)) {
            goto LABEL_475;
          }
          goto LABEL_437;
        case 0x3Fu:
          if (v16 == 2) {
            goto LABEL_415;
          }
          goto LABEL_475;
        case 0x40u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOWiFiConnectionRoamStateIsValid(a1)) {
            goto LABEL_475;
          }
          goto LABEL_437;
        case 0x41u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOWiFiConnectionSpeedTestIsValid(a1)) {
            goto LABEL_475;
          }
          goto LABEL_437;
        case 0x42u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v222 = 0;
          while (1)
          {
            uint64_t v223 = *v2;
            uint64_t v224 = *(void *)&a1[v223];
            unint64_t v225 = v224 + 1;
            if (v224 == -1 || v225 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v226 = *(char *)(*(void *)&a1[*v5] + v224);
            *(void *)&a1[v223] = v225;
            if (v226 < 0)
            {
              BOOL v26 = v222++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x43u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v227 = 0;
          while (1)
          {
            uint64_t v228 = *v2;
            uint64_t v229 = *(void *)&a1[v228];
            unint64_t v230 = v229 + 1;
            if (v229 == -1 || v230 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v231 = *(char *)(*(void *)&a1[*v5] + v229);
            *(void *)&a1[v228] = v230;
            if (v231 < 0)
            {
              BOOL v26 = v227++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x44u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v232 = 0;
          while (1)
          {
            uint64_t v233 = *v2;
            uint64_t v234 = *(void *)&a1[v233];
            unint64_t v235 = v234 + 1;
            if (v234 == -1 || v235 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v236 = *(char *)(*(void *)&a1[*v5] + v234);
            *(void *)&a1[v233] = v235;
            if (v236 < 0)
            {
              BOOL v26 = v232++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x45u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v237 = 0;
          while (1)
          {
            uint64_t v238 = *v2;
            uint64_t v239 = *(void *)&a1[v238];
            unint64_t v240 = v239 + 1;
            if (v239 == -1 || v240 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v241 = *(char *)(*(void *)&a1[*v5] + v239);
            *(void *)&a1[v238] = v240;
            if (v241 < 0)
            {
              BOOL v26 = v237++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x46u:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v242 = 0;
          while (1)
          {
            uint64_t v243 = *v2;
            uint64_t v244 = *(void *)&a1[v243];
            unint64_t v245 = v244 + 1;
            if (v244 == -1 || v245 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v246 = *(char *)(*(void *)&a1[*v5] + v244);
            *(void *)&a1[v243] = v245;
            if (v246 < 0)
            {
              BOOL v26 = v242++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x47u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOWiFiHarvestLabelIsValid(a1)) {
            goto LABEL_475;
          }
          goto LABEL_437;
        case 0x48u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOWiFiPasspointInfoIsValid(a1)) {
            goto LABEL_475;
          }
          goto LABEL_437;
        case 0x49u:
          if (v16 == 2) {
            goto LABEL_415;
          }
          goto LABEL_475;
        case 0x4Au:
          if (v16 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_475:
              PBReaderRecallMark();
              return 0;
            }
LABEL_464:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v268 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v269 = *v2;
                uint64_t v270 = *(void *)&a1[v269];
                unint64_t v271 = v270 + 1;
                if (v270 == -1 || v271 > *(void *)&a1[*v3]) {
                  break;
                }
                int v272 = *(char *)(*(void *)&a1[*v5] + v270);
                *(void *)&a1[v269] = v271;
                if (v272 < 0)
                {
                  BOOL v13 = v268++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_464;
              }
              a1[*v4] = 1;
            }
LABEL_437:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_475;
            }
            while (1)
            {
              uint64_t v247 = *v2;
              uint64_t v248 = *(void *)&a1[v247];
              unint64_t v249 = v248 + 1;
              if (v248 == -1 || v249 > *(void *)&a1[*v3]) {
                break;
              }
              int v250 = *(char *)(*(void *)&a1[*v5] + v248);
              *(void *)&a1[v247] = v249;
              if (v250 < 0)
              {
                unsigned int v251 = v16++;
                if (v251 <= 8) {
                  continue;
                }
              }
              goto LABEL_438;
            }
LABEL_432:
            uint64_t v14 = *v4;
LABEL_433:
            a1[v14] = 1;
          }
LABEL_438:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_473;
          }
          break;
        case 0x4Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_475;
          }
          unsigned int v252 = 0;
          while (1)
          {
            uint64_t v253 = *v2;
            uint64_t v254 = *(void *)&a1[v253];
            unint64_t v255 = v254 + 1;
            if (v254 == -1 || v255 > *(void *)&a1[*v3]) {
              goto LABEL_432;
            }
            int v256 = *(char *)(*(void *)&a1[*v5] + v254);
            *(void *)&a1[v253] = v255;
            if (v256 < 0)
            {
              BOOL v26 = v252++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_438;
          }
        case 0x4Cu:
          if (v16 == 2 && PBReaderPlaceMark() && GEOWiFiBeaconInfoIsValid(a1)) {
            goto LABEL_437;
          }
          goto LABEL_475;
        case 0x4Du:
          if (v16 != 1) {
            goto LABEL_475;
          }
          uint64_t v18 = *v2;
          unint64_t v257 = *(void *)&a1[v18];
          if (v257 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_433;
          }
          unint64_t v20 = v257 + 8;
LABEL_22:
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_433;
          }
          *(void *)&a1[v18] = v20;
          goto LABEL_438;
        default:
LABEL_415:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_475;
          }
          goto LABEL_438;
      }
    }
  }
LABEL_473:
  BOOL v273 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v273;
}

BOOL GEOWiFiQualityFeedbackIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOWiFiConnectionRoamStateIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOWiFiConnectionSpeedTestIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v16 != 5) {
          goto LABEL_30;
        }
        uint64_t v18 = *v2;
        unint64_t v19 = *(void *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v20 = v19 + 4, v20 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v18] = v20;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_30:
        BOOL v21 = 0;
        goto LABEL_29;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_29:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOWiFiHarvestLabelIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_45;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_39;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_42;
          }
        case 2u:
          if (v15 == 2) {
            goto LABEL_41;
          }
          goto LABEL_45;
        case 3u:
          if (v15 == 2) {
            goto LABEL_41;
          }
          goto LABEL_45;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_45;
          }
          unsigned int v23 = 0;
          break;
        case 5u:
          if (v15 == 2) {
            goto LABEL_41;
          }
          goto LABEL_45;
        default:
LABEL_41:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_45:
          BOOL v28 = 0;
          goto LABEL_44;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_42;
      }
LABEL_39:
      a1[*v4] = 1;
LABEL_42:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
LABEL_44:
  PBReaderRecallMark();
  return v28;
}

BOOL GEOWiFiPasspointInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_49;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_43;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_46;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_49;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_43;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_46;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_49;
          }
          unsigned int v28 = 0;
          break;
        case 4u:
          if (v15 == 2) {
            goto LABEL_45;
          }
          goto LABEL_49;
        default:
LABEL_45:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_49:
          BOOL v33 = 0;
          goto LABEL_48;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_46;
      }
LABEL_43:
      a1[*v4] = 1;
LABEL_46:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
LABEL_48:
  PBReaderRecallMark();
  return v33;
}

void sub_189F2C4D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOWiFiConnectionQualityIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 352));
  char v2 = *(unsigned char *)(a1 + 480);
  if ((v2 & 0xC) != 0) {
    return 1;
  }
  uint64_t v3 = *(void *)(a1 + 472);
  if ((v3 & 0x2000000000000000) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 192))) {
      return 1;
    }
    uint64_t v3 = *(void *)(a1 + 472);
    char v2 = *(unsigned char *)(a1 + 480);
  }
  if (v3 & 0x4B50000000000000 | v2 & 3) {
    return 1;
  }
  if ((v3 & 0x1000000000000000) == 0) {
    goto LABEL_9;
  }
  if (GEOWiFiHarvestLabelIsDirty(*(void *)(a1 + 184))) {
    return 1;
  }
  uint64_t v3 = *(void *)(a1 + 472);
LABEL_9:
  if ((v3 & 0x8420000000000000) != 0) {
    return 1;
  }
  if ((v3 & 0x80000000000000) == 0) {
    return 0;
  }
  uint64_t v5 = *(void *)(a1 + 88);

  return GEOWiFiBeaconInfoIsDirty(v5);
}

os_unfair_lock_s *GEOWiFiConnectionQualityIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOWiFiConnectionQualityIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 88);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOWiFiConnectionQualityClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasLocation]
    && ([a1 location],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    unsigned int v7 = [a1 location];
    unint64_t v8 = (_DWORD *)[v7 copy];

    GEOLocationClearSensitiveFields(v8);
    [a1 setLocation:v8];
  }
  else
  {
    unint64_t v8 = [a1 location];
    [v8 clearSensitiveFields:a2];
  }
}

void *GEOWiFiConnectionQualityHasSensitiveFields(void *result)
{
  if (result)
  {
    id v1 = [result location];
    uint64_t HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_189F2E3DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiConnectionRoamStateReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 1u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              unint64_t v26 = &OBJC_IVAR___GEOWiFiConnectionRoamState__lateRoamMaxRSSI;
              goto LABEL_40;
            }
            v27 += 7;
            BOOL v25 = v28++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              unint64_t v26 = &OBJC_IVAR___GEOWiFiConnectionRoamState__lateRoamMaxRSSI;
              goto LABEL_42;
            }
          }
          unint64_t v26 = &OBJC_IVAR___GEOWiFiConnectionRoamState__lateRoamMaxRSSI;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_48;
            }
            continue;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              unint64_t v26 = &OBJC_IVAR___GEOWiFiConnectionRoamState__lateRoamMinRSSI;
              goto LABEL_39;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              unint64_t v26 = &OBJC_IVAR___GEOWiFiConnectionRoamState__lateRoamMinRSSI;
              goto LABEL_42;
            }
          }
          unint64_t v26 = &OBJC_IVAR___GEOWiFiConnectionRoamState__lateRoamMinRSSI;
        }
LABEL_40:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_42:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    BOOL v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_189F31174(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiConnectionRoamStateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOWiFiConnectionRoamStateReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F311D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiConnectionSpeedTestReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          *(unsigned char *)(a1 + 16) |= 1u;
          uint64_t v21 = *v4;
          unint64_t v22 = *(void *)&v3[v21];
          if (v22 <= 0xFFFFFFFFFFFFFFFBLL && v22 + 4 <= *(void *)&v3[*v5])
          {
            int v20 = *(_DWORD *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v22 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v20 = 0;
          }
          unint64_t v23 = &OBJC_IVAR___GEOWiFiConnectionSpeedTest__avgDL;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_36;
            }
            continue;
          }
          *(unsigned char *)(a1 + 16) |= 2u;
          uint64_t v18 = *v4;
          unint64_t v19 = *(void *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(void *)&v3[*v5])
          {
            int v20 = *(_DWORD *)(*(void *)&v3[*v7] + v19);
            *(void *)&v3[v18] = v19 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v20 = 0;
          }
          unint64_t v23 = &OBJC_IVAR___GEOWiFiConnectionSpeedTest__avgUL;
        }
        *(_DWORD *)(a1 + *v23) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v24 = v3[*v6] == 0;
  }
  else
  {
LABEL_36:
    BOOL v24 = 0;
  }
  objc_sync_exit(v3);

  return v24;
}

void sub_189F31B6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiConnectionSpeedTestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOWiFiConnectionSpeedTestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F31BD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F32388(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiHarvestLabelReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v7 | (v10 > 1);
  if (v7 & 1 | (v10 > 1) | v8 & 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  char v14 = (int *)MEMORY[0x1E4F940E8];
  int v15 = (int *)MEMORY[0x1E4F940C8];
  int v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_86;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      BOOL v24 = v18++ >= 9;
      if (v24)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_86:
      if (v12)
      {
        char v53 = 1;
        goto LABEL_94;
      }
      if (v13)
      {
        while (1)
        {
          int v54 = *v13++;
          char v55 = 16;
          switch(v54)
          {
            case 0:
              goto LABEL_95;
            case 2:
              goto LABEL_92;
            case 3:
              char v55 = 4;
              goto LABEL_92;
            case 5:
              char v55 = 8;
LABEL_92:
              *(unsigned char *)(a1 + 60) |= v55;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_95;
    }
    unint64_t v27 = v19 >> 3;
    BOOL v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      uint64_t v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_66;
        }
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (1)
        {
          uint64_t v36 = *v14;
          uint64_t v37 = *(void *)(v3 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(v3 + *v6)) {
            break;
          }
          char v39 = *(unsigned char *)(*(void *)(v3 + *v16) + v37);
          *(void *)(v3 + v36) = v38;
          v35 |= (unint64_t)(v39 & 0x7F) << v33;
          if ((v39 & 0x80) == 0) {
            goto LABEL_69;
          }
          v33 += 7;
          BOOL v24 = v34++ >= 9;
          if (v24)
          {
            LODWORD(v35) = 0;
            goto LABEL_71;
          }
        }
        *(unsigned char *)(v3 + *v15) = 1;
LABEL_69:
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_71:
        uint64_t v51 = 56;
        goto LABEL_76;
      case 2:
        if (!v28) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 32;
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_100;
        }
        char v52 = 8 * *(unsigned char *)(a1 + 60);
        goto LABEL_83;
      case 3:
        if (!v28) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 60) & 4) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 16;
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_100;
        }
        char v52 = 32 * *(unsigned char *)(a1 + 60);
        goto LABEL_83;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_66;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v35 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v45 = *v14;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v16) + v46);
            *(void *)(v3 + v45) = v47;
            v35 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              BOOL v24 = v44++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_75:
        uint64_t v51 = 52;
LABEL_76:
        *(_DWORD *)(a1 + v51) = v35;
        goto LABEL_85;
      case 5:
        if (!v28)
        {
LABEL_66:
          char v50 = PBReaderSkipValueWithTag();
          int v15 = (int *)MEMORY[0x1E4F940C8];
          if ((v50 & 1) == 0)
          {
LABEL_93:
            char v53 = 0;
            goto LABEL_94;
          }
          goto LABEL_85;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 24;
LABEL_65:
          uint64_t v49 = *(void **)(a1 + v42);
          *(void *)(a1 + v42) = v41;

          --v9;
LABEL_84:
          int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
          if (!(v12 & 1 | (v9 != 0))) {
            goto LABEL_86;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v52 = 16 * *(unsigned char *)(a1 + 60);
LABEL_83:
          v9 += v52 >> 7;
          goto LABEL_84;
        }
LABEL_100:
        char v53 = 0;
        int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_94:
        *(unsigned char *)(a1 + 60) |= 0x10u;
        *(unsigned char *)(a1 + 60) |= 4u;
        *(unsigned char *)(a1 + 60) |= 8u;
        if (v53)
        {
LABEL_95:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_96;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v12)
          {
LABEL_96:
            int v56 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v40 = PBReaderSkipValueWithTag();
        int v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v40) {
          goto LABEL_93;
        }
        goto LABEL_85;
    }
  }
}

void sub_189F32AFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F32FA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F337E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiHarvestLabelReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOWiFiHarvestLabelReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOWiFiHarvestLabelReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOWiFiHarvestLabelReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOWiFiHarvestLabelReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189F33970(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiHarvestLabelReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOWiFiHarvestLabelReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F339D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F33BC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiHarvestLabelIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x3C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189F33F58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiPasspointInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 28) |= 1u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_45;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_47;
              }
            }
            v3[*v6] = 1;
LABEL_45:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_47:
            uint64_t v39 = 16;
            goto LABEL_56;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 28) |= 2u;
            while (2)
            {
              uint64_t v27 = *v4;
              uint64_t v28 = *(void *)&v3[v27];
              unint64_t v29 = v28 + 1;
              if (v28 == -1 || v29 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
                *(void *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_51;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_51:
            uint64_t v39 = 20;
            goto LABEL_56;
          case 3u:
            char v31 = 0;
            unsigned int v32 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 28) |= 4u;
            break;
          case 4u:
            uint64_t v37 = PBReaderReadString();
            unint64_t v38 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v37;

            continue;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_59;
            }
            continue;
        }
        while (1)
        {
          uint64_t v33 = *v4;
          uint64_t v34 = *(void *)&v3[v33];
          unint64_t v35 = v34 + 1;
          if (v34 == -1 || v35 > *(void *)&v3[*v5]) {
            break;
          }
          char v36 = *(unsigned char *)(*(void *)&v3[*v7] + v34);
          *(void *)&v3[v33] = v35;
          v20 |= (unint64_t)(v36 & 0x7F) << v31;
          if ((v36 & 0x80) == 0) {
            goto LABEL_53;
          }
          v31 += 7;
          BOOL v15 = v32++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_55;
          }
        }
        v3[*v6] = 1;
LABEL_53:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_55:
        uint64_t v39 = 24;
LABEL_56:
        *(_DWORD *)(a1 + v39) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_59:
    BOOL v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_189F35410(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiPasspointInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOWiFiPasspointInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F35484(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityFeedbackReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              uint64_t v27 = &OBJC_IVAR___GEOWiFiQualityFeedback__maxValue;
              goto LABEL_49;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              uint64_t v27 = &OBJC_IVAR___GEOWiFiQualityFeedback__maxValue;
              goto LABEL_51;
            }
          }
          uint64_t v27 = &OBJC_IVAR___GEOWiFiQualityFeedback__maxValue;
LABEL_48:
          v3[*v6] = 1;
        }
        else if (v18 == 2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 4u;
          while (1)
          {
            uint64_t v36 = *v4;
            uint64_t v37 = *(void *)&v3[v36];
            unint64_t v38 = v37 + 1;
            if (v37 == -1 || v38 > *(void *)&v3[*v5])
            {
              uint64_t v27 = &OBJC_IVAR___GEOWiFiQualityFeedback__value;
              goto LABEL_48;
            }
            char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
            *(void *)&v3[v36] = v38;
            v21 |= (unint64_t)(v39 & 0x7F) << v34;
            if ((v39 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v26 = v35++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              uint64_t v27 = &OBJC_IVAR___GEOWiFiQualityFeedback__value;
              goto LABEL_51;
            }
          }
          uint64_t v27 = &OBJC_IVAR___GEOWiFiQualityFeedback__value;
        }
        else
        {
          if (v18 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_58;
            }
            continue;
          }
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              uint64_t v27 = &OBJC_IVAR___GEOWiFiQualityFeedback__type;
              goto LABEL_48;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              uint64_t v27 = &OBJC_IVAR___GEOWiFiQualityFeedback__type;
              goto LABEL_51;
            }
          }
          uint64_t v27 = &OBJC_IVAR___GEOWiFiQualityFeedback__type;
        }
LABEL_49:
        if (v3[*v6]) {
          LODWORD(v21) = 0;
        }
LABEL_51:
        *(_DWORD *)(a1 + *v27) = v21;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_58:
    BOOL v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_189F3639C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOWiFiQualityFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F36400(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void __GEOGetGEOPOIEventLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOPOIEvent");
  id v1 = (void *)_MergedGlobals_288;
  _MergedGlobals_288 = (uint64_t)v0;
}

void sub_189F3989C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL GEOTransitDepartureIsImminentDepartureTimeInterval(double a1)
{
  return -GEOConfigGetDouble(GeoServicesConfig_DepartureCutoffGracePeriodNetworkDefault, (uint64_t)off_1E9114298) < a1
      && a1 < 60.0;
}

void sub_189F3C09C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double GEOTransitDepartureNearFuturePeriod()
{
  return 5400.0;
}

BOOL GEOTransitDepartureIsNearFutureDepartureTimeInterval(double a1)
{
  return a1 < 5400.0 && a1 > 0.0;
}

BOOL GEOTransitDepartureIsImminentDepartureDate(void *a1)
{
  [a1 timeIntervalSinceNow];
  double v2 = v1;
  return v1 > -GEOConfigGetDouble(GeoServicesConfig_DepartureCutoffGracePeriodNetworkDefault, (uint64_t)off_1E9114298)
      && v2 < 60.0;
}

BOOL GEOTransitDepartureIsOntime(double a1, double a2)
{
  return a1 - GEOConfigGetDouble(GeoServicesConfig_DepartureCutoffGracePeriodNetworkDefault, (uint64_t)off_1E9114298) <= a2
      && a1 + 60.0 >= a2;
}

id GEOTransitVehiclePositionDescription(void *a1)
{
  double v1 = NSString;
  id v2 = a1;
  uint64_t v3 = objc_opt_class();
  uint64_t v4 = [v2 headsign];
  uint64_t v5 = [v2 direction];
  [v2 coordinate];
  uint64_t v7 = v6;
  [v2 coordinate];
  uint64_t v9 = v8;
  [v2 heading];
  uint64_t v11 = v10;
  uint64_t v12 = [v2 timestamp];
  [v12 timeIntervalSinceNow];
  double v14 = -v13;
  BOOL v15 = [v2 timestamp];
  [v15 timeIntervalSince1970];
  char v17 = [v1 stringWithFormat:@"%@<%p> (\"%@\" / \"%@\" | (%lf, %lf) | %#.1lfÂº | %#.1lfs ago, UTC:%lu)", v3, v2, v4, v5, v7, v9, v11, *(void *)&v14, (unint64_t)v16];

  return v17;
}

void sub_189F4102C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

uint64_t NanoPreferencesSyncLibraryCore()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = 0;
  uint64_t v3 = &v2;
  uint64_t v4 = 0x2020000000;
  uint64_t v0 = NanoPreferencesSyncLibraryCore_frameworkLibrary;
  uint64_t v5 = NanoPreferencesSyncLibraryCore_frameworkLibrary;
  if (!NanoPreferencesSyncLibraryCore_frameworkLibrary)
  {
    long long v6 = __const__block__paths_4;
    long long v7 = *(_OWORD *)&off_1E53EA328;
    v3[3] = _sl_dlopen();
    NanoPreferencesSyncLibraryCore_frameworkLibrary = v3[3];
    uint64_t v0 = v3[3];
  }
  _Block_object_dispose(&v2, 8);
  return v0;
}

void sub_189F41B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __NanoPreferencesSyncLibraryCore_block_invoke(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  NanoPreferencesSyncLibraryCore_frameworkLibrary = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t NanoPreferencesSyncLibrary()
{
  uint64_t v0 = NanoPreferencesSyncLibraryCore();
  if (!v0)
  {
    uint64_t v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

id getNPSManagerClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getNPSManagerClass_softClass;
  uint64_t v7 = getNPSManagerClass_softClass;
  if (!getNPSManagerClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getNPSManagerClass_block_invoke;
    v3[3] = &unk_1E53DB3C8;
    v3[4] = &v4;
    __getNPSManagerClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_189F41D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getNPSManagerClass_block_invoke(uint64_t a1)
{
  NanoPreferencesSyncLibrary();
  Class result = objc_getClass("NPSManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getNPSManagerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)IDSLibraryCore(v3);
  }
  return result;
}

uint64_t IDSLibraryCore()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = 0;
  uint64_t v3 = &v2;
  uint64_t v4 = 0x2020000000;
  uint64_t v0 = IDSLibraryCore_frameworkLibrary;
  uint64_t v5 = IDSLibraryCore_frameworkLibrary;
  if (!IDSLibraryCore_frameworkLibrary)
  {
    long long v6 = __const__block__paths_13;
    long long v7 = *(_OWORD *)&off_1E53EA348;
    v3[3] = _sl_dlopen();
    IDSLibraryCore_frameworkLibrary = v3[3];
    uint64_t v0 = v3[3];
  }
  _Block_object_dispose(&v2, 8);
  return v0;
}

void sub_189F41EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __IDSLibraryCore_block_invoke(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  IDSLibraryCore_frameworkLibrary = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t IDSLibrary()
{
  uint64_t v0 = IDSLibraryCore();
  if (!v0)
  {
    uint64_t v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

id getIDSServiceClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getIDSServiceClass_softClass;
  uint64_t v7 = getIDSServiceClass_softClass;
  if (!getIDSServiceClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getIDSServiceClass_block_invoke;
    v3[3] = &unk_1E53DB3C8;
    v3[4] = &v4;
    __getIDSServiceClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_189F42088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getIDSServiceClass_block_invoke(uint64_t a1)
{
  IDSLibrary();
  Class result = objc_getClass("IDSService");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getIDSServiceClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)getIDSDefaultPairedDeviceSymbolLoc(v3);
  }
  return result;
}

uint64_t getIDSDefaultPairedDeviceSymbolLoc()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = getIDSDefaultPairedDeviceSymbolLoc_ptr;
  uint64_t v6 = getIDSDefaultPairedDeviceSymbolLoc_ptr;
  if (!getIDSDefaultPairedDeviceSymbolLoc_ptr)
  {
    id v1 = (void *)IDSLibrary();
    v4[3] = (uint64_t)dlsym(v1, "IDSDefaultPairedDevice");
    getIDSDefaultPairedDeviceSymbolLoc_ptr = v4[3];
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_189F421E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getIDSDefaultPairedDeviceSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)IDSLibrary();
  Class result = dlsym(v2, "IDSDefaultPairedDevice");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getIDSDefaultPairedDeviceSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id getIDSDefaultPairedDevice()
{
  IDSDefaultPairedDeviceSymbolLoc = (void **)getIDSDefaultPairedDeviceSymbolLoc();
  if (IDSDefaultPairedDeviceSymbolLoc)
  {
    id v1 = *IDSDefaultPairedDeviceSymbolLoc;
    return v1;
  }
  else
  {
    dlerror();
    uint64_t v3 = abort_report_np();
    return (id)getIDSSendMessageOptionExpectsPeerResponseKeySymbolLoc(v3);
  }
}

uint64_t getIDSSendMessageOptionExpectsPeerResponseKeySymbolLoc()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = getIDSSendMessageOptionExpectsPeerResponseKeySymbolLoc_ptr;
  uint64_t v6 = getIDSSendMessageOptionExpectsPeerResponseKeySymbolLoc_ptr;
  if (!getIDSSendMessageOptionExpectsPeerResponseKeySymbolLoc_ptr)
  {
    id v1 = (void *)IDSLibrary();
    v4[3] = (uint64_t)dlsym(v1, "IDSSendMessageOptionExpectsPeerResponseKey");
    getIDSSendMessageOptionExpectsPeerResponseKeySymbolLoc_ptr = v4[3];
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_189F42374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getIDSSendMessageOptionExpectsPeerResponseKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)IDSLibrary();
  Class result = dlsym(v2, "IDSSendMessageOptionExpectsPeerResponseKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getIDSSendMessageOptionExpectsPeerResponseKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id getIDSSendMessageOptionExpectsPeerResponseKey()
{
  IDSSendMessageOptionExpectsPeerResponseKeySymbolLoc = (void **)getIDSSendMessageOptionExpectsPeerResponseKeySymbolLoc();
  if (IDSSendMessageOptionExpectsPeerResponseKeySymbolLoc)
  {
    id v1 = *IDSSendMessageOptionExpectsPeerResponseKeySymbolLoc;
    return v1;
  }
  else
  {
    dlerror();
    uint64_t v3 = abort_report_np();
    return (id)getIDSSendMessageOptionPeerResponseIdentifierKeySymbolLoc(v3);
  }
}

uint64_t getIDSSendMessageOptionPeerResponseIdentifierKeySymbolLoc()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = getIDSSendMessageOptionPeerResponseIdentifierKeySymbolLoc_ptr;
  uint64_t v6 = getIDSSendMessageOptionPeerResponseIdentifierKeySymbolLoc_ptr;
  if (!getIDSSendMessageOptionPeerResponseIdentifierKeySymbolLoc_ptr)
  {
    id v1 = (void *)IDSLibrary();
    v4[3] = (uint64_t)dlsym(v1, "IDSSendMessageOptionPeerResponseIdentifierKey");
    getIDSSendMessageOptionPeerResponseIdentifierKeySymbolLoc_ptr = v4[3];
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_189F42500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getIDSSendMessageOptionPeerResponseIdentifierKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)IDSLibrary();
  Class result = dlsym(v2, "IDSSendMessageOptionPeerResponseIdentifierKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getIDSSendMessageOptionPeerResponseIdentifierKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                            + 24);
  return result;
}

id getIDSSendMessageOptionPeerResponseIdentifierKey()
{
  IDSSendMessageOptionPeerResponseIdentifierKeySymbolLoc = (void **)getIDSSendMessageOptionPeerResponseIdentifierKeySymbolLoc();
  if (IDSSendMessageOptionPeerResponseIdentifierKeySymbolLoc)
  {
    id v1 = *IDSSendMessageOptionPeerResponseIdentifierKeySymbolLoc;
    return v1;
  }
  else
  {
    dlerror();
    abort_report_np();
    return (id)getIDSSendMessageOptionEnforceRemoteTimeoutsKeySymbolLoc();
  }
}

uint64_t getIDSSendMessageOptionEnforceRemoteTimeoutsKeySymbolLoc()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = getIDSSendMessageOptionEnforceRemoteTimeoutsKeySymbolLoc_ptr;
  uint64_t v6 = getIDSSendMessageOptionEnforceRemoteTimeoutsKeySymbolLoc_ptr;
  if (!getIDSSendMessageOptionEnforceRemoteTimeoutsKeySymbolLoc_ptr)
  {
    id v1 = (void *)IDSLibrary();
    v4[3] = (uint64_t)dlsym(v1, "IDSSendMessageOptionEnforceRemoteTimeoutsKey");
    getIDSSendMessageOptionEnforceRemoteTimeoutsKeySymbolLoc_ptr = v4[3];
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_189F4268C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getIDSSendMessageOptionEnforceRemoteTimeoutsKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)IDSLibrary();
  Class result = dlsym(v2, "IDSSendMessageOptionEnforceRemoteTimeoutsKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getIDSSendMessageOptionEnforceRemoteTimeoutsKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                           + 24);
  return result;
}

id getIDSSendMessageOptionEnforceRemoteTimeoutsKey()
{
  IDSSendMessageOptionEnforceRemoteTimeoutsKeySymbolLoc = (void **)getIDSSendMessageOptionEnforceRemoteTimeoutsKeySymbolLoc();
  if (IDSSendMessageOptionEnforceRemoteTimeoutsKeySymbolLoc)
  {
    id v1 = *IDSSendMessageOptionEnforceRemoteTimeoutsKeySymbolLoc;
    return v1;
  }
  else
  {
    dlerror();
    uint64_t v3 = abort_report_np();
    return (id)getIDSSendMessageOptionBypassDuetKeySymbolLoc(v3);
  }
}

uint64_t getIDSSendMessageOptionBypassDuetKeySymbolLoc()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = getIDSSendMessageOptionBypassDuetKeySymbolLoc_ptr;
  uint64_t v6 = getIDSSendMessageOptionBypassDuetKeySymbolLoc_ptr;
  if (!getIDSSendMessageOptionBypassDuetKeySymbolLoc_ptr)
  {
    id v1 = (void *)IDSLibrary();
    v4[3] = (uint64_t)dlsym(v1, "IDSSendMessageOptionBypassDuetKey");
    getIDSSendMessageOptionBypassDuetKeySymbolLoc_ptr = v4[3];
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_189F42818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getIDSSendMessageOptionBypassDuetKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)IDSLibrary();
  Class result = dlsym(v2, "IDSSendMessageOptionBypassDuetKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getIDSSendMessageOptionBypassDuetKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void getIDSSendMessageOptionBypassDuetKey()
{
  IDSSendMessageOptionBypassDuetKeySymbolLoc = (void **)getIDSSendMessageOptionBypassDuetKeySymbolLoc();
  if (IDSSendMessageOptionBypassDuetKeySymbolLoc)
  {
    id v1 = *IDSSendMessageOptionBypassDuetKeySymbolLoc;
    id v2 = v1;
  }
  else
  {
    dlerror();
    uint64_t v3 = abort_report_np();
    -[GEOPDSearchSpellSuggestion setSuggestion:](v3, v4);
  }
}

BOOL GEOPDSearchSpellSuggestionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        switch((v12 >> 3))
        {
          case 1u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_49;
            }
            unsigned int v20 = objc_alloc_init(GEOPDSearchTokenSet);
            if (GEOPDSearchTokenSetReadAllFrom((uint64_t)v20, v5, a3))
            {
              PBReaderRecallMark();
              uint64_t v21 = *(void **)(a1 + 16);
              *(void *)(a1 + 16) = v20;

              continue;
            }

            goto LABEL_49;
          case 2u:
            *(unsigned char *)(a1 + 32) |= 1u;
            uint64_t v22 = *v6;
            unint64_t v23 = *(void *)&v5[v22];
            if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(void *)&v5[*v7])
            {
              uint64_t v24 = *(void *)(*(void *)&v5[*v9] + v23);
              *(void *)&v5[v22] = v23 + 8;
            }
            else
            {
              v5[*v8] = 1;
              uint64_t v24 = 0;
            }
            *(void *)(a1 + 8) = v24;
            continue;
          case 3u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            *(unsigned char *)(a1 + 32) |= 2u;
            break;
          case 4u:
            *(unsigned char *)(a1 + 32) |= 4u;
            uint64_t v32 = *v6;
            unint64_t v33 = *(void *)&v5[v32];
            if (v33 <= 0xFFFFFFFFFFFFFFFBLL && v33 + 4 <= *(void *)&v5[*v7])
            {
              int v34 = *(_DWORD *)(*(void *)&v5[*v9] + v33);
              *(void *)&v5[v32] = v33 + 4;
            }
            else
            {
              v5[*v8] = 1;
              int v34 = 0;
            }
            *(_DWORD *)(a1 + 28) = v34;
            continue;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_49;
            }
            continue;
        }
        while (1)
        {
          uint64_t v28 = *v6;
          uint64_t v29 = *(void *)&v5[v28];
          unint64_t v30 = v29 + 1;
          if (v29 == -1 || v30 > *(void *)&v5[*v7]) {
            break;
          }
          char v31 = *(unsigned char *)(*(void *)&v5[*v9] + v29);
          *(void *)&v5[v28] = v30;
          v27 |= (unint64_t)(v31 & 0x7F) << v25;
          if ((v31 & 0x80) == 0) {
            goto LABEL_39;
          }
          v25 += 7;
          BOOL v17 = v26++ >= 9;
          if (v17)
          {
            LODWORD(v27) = 0;
            goto LABEL_41;
          }
        }
        v5[*v8] = 1;
LABEL_39:
        if (v5[*v8]) {
          LODWORD(v27) = 0;
        }
LABEL_41:
        *(_DWORD *)(a1 + 24) = v27;
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v35 = v5[*v8] == 0;
  }
  else
  {
LABEL_49:
    BOOL v35 = 0;
  }
  objc_sync_exit(v5);

  return v35;
}

void sub_189F43114(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchSpellSuggestionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenSetIsValid(a1)) {
            goto LABEL_46;
          }
          PBReaderRecallMark();
          continue;
        case 2u:
          if (v16 != 1) {
            goto LABEL_46;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_42;
          }
          unint64_t v20 = v19 + 8;
          goto LABEL_39;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v21 = 0;
          break;
        case 4u:
          if (v16 != 5) {
            goto LABEL_46;
          }
          uint64_t v18 = *v2;
          unint64_t v27 = *(void *)&a1[v18];
          if (v27 > 0xFFFFFFFFFFFFFFFBLL) {
            goto LABEL_42;
          }
          unint64_t v20 = v27 + 4;
LABEL_39:
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_42;
          }
          *(void *)&a1[v18] = v20;
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v22 = *v2;
        uint64_t v23 = *(void *)&a1[v22];
        unint64_t v24 = v23 + 1;
        if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
          break;
        }
        int v25 = *(char *)(*(void *)&a1[*v5] + v23);
        *(void *)&a1[v22] = v24;
        if (v25 < 0 && v21++ <= 8) {
          continue;
        }
        goto LABEL_43;
      }
      uint64_t v14 = *v4;
LABEL_42:
      a1[v14] = 1;
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_189F439C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchSpellerRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 84)), (uint16x4_t)0xFFFBFFFAFFF8FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 84) >> 9) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v85 = (v16 == 0) | v15;
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v84 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_141;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_141:
      if (v15)
      {
        char v78 = 1;
        goto LABEL_153;
      }
      if (v16)
      {
        while (1)
        {
          int v79 = *v16++;
          __int16 v80 = 256;
          switch(v79)
          {
            case 0:
              goto LABEL_154;
            case 1:
              goto LABEL_149;
            case 2:
              __int16 v80 = 128;
              goto LABEL_149;
            case 3:
              __int16 v80 = 64;
              goto LABEL_149;
            case 6:
              __int16 v80 = 32;
              goto LABEL_149;
            case 10:
              __int16 v80 = 512;
LABEL_149:
              *(_WORD *)(a1 + 84) |= v80;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_154;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v85 & 1) == 0)
    {
      uint64_t v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_104;
        }
        if ((*(_WORD *)(a1 + 84) & 0x100) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v36;
          goto LABEL_103;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_152;
        }
        __int16 v77 = *(_WORD *)(a1 + 84) << 7;
        goto LABEL_138;
      case 2:
        if (!v31) {
          goto LABEL_104;
        }
        if ((*(_WORD *)(a1 + 84) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_152;
          }
          __int16 v77 = *(_WORD *)(a1 + 84) << 8;
          goto LABEL_138;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_152;
        }
        uint64_t v83 = objc_alloc_init(GEOPDSearchLocationContext);
        if (!GEOPDSearchLocationContextReadAllFrom((uint64_t)v83, (void *)v3, v9 & 1)) {
          goto LABEL_151;
        }
        PBReaderRecallMark();
        uint64_t v39 = 32;
        goto LABEL_102;
      case 3:
        if (!v31) {
          goto LABEL_104;
        }
        if ((*(_WORD *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_152;
          }
          __int16 v77 = *(_WORD *)(a1 + 84) << 9;
          goto LABEL_138;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_152;
        }
        uint64_t v83 = objc_alloc_init(GEOPDSearchLanguageContext);
        if (!GEOPDSearchLanguageContextReadAllFrom((uint64_t)v83, (void *)v3, v9 & 1)) {
          goto LABEL_151;
        }
        PBReaderRecallMark();
        uint64_t v39 = 24;
        goto LABEL_102;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_104;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + 84) |= 8u;
        while (2)
        {
          uint64_t v43 = *v17;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(v3 + *v19) + v44);
            *(void *)(v3 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v27 = v41++ >= 9;
              if (v27)
              {
                uint64_t v42 = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v42 = 0;
        }
LABEL_109:
        BOOL v74 = v42 != 0;
        uint64_t v75 = 80;
        goto LABEL_122;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_104;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        *(_WORD *)(a1 + 84) |= 2u;
        while (2)
        {
          uint64_t v50 = *v17;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v19) + v51);
            *(void *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v27 = v48++ >= 9;
              if (v27)
              {
                LODWORD(v49) = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v49) = 0;
        }
LABEL_113:
        uint64_t v76 = 72;
        goto LABEL_127;
      case 6:
        if (!v31) {
          goto LABEL_104;
        }
        if ((*(_WORD *)(a1 + 84) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_152;
          }
          __int16 v77 = *(_WORD *)(a1 + 84) << 10;
          goto LABEL_138;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_152;
        }
        uint64_t v83 = objc_alloc_init(GEOPDSearchKeyValuePairList);
        if (!GEOPDSearchKeyValuePairListReadAllFrom((uint64_t)v83, (void *)v3, v9 & 1)) {
          goto LABEL_151;
        }
        PBReaderRecallMark();
        uint64_t v39 = 16;
        goto LABEL_102;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_104;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v49 = 0;
        *(_WORD *)(a1 + 84) |= 4u;
        while (2)
        {
          uint64_t v56 = *v17;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v19) + v57);
            *(void *)(v3 + v56) = v58;
            v49 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              BOOL v27 = v55++ >= 9;
              if (v27)
              {
                LODWORD(v49) = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v49) = 0;
        }
LABEL_117:
        uint64_t v76 = 76;
        goto LABEL_127;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_104;
        }
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v62 = 0;
        *(_WORD *)(a1 + 84) |= 0x10u;
        while (2)
        {
          uint64_t v63 = *v17;
          uint64_t v64 = *(void *)(v3 + v63);
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(v3 + *v19) + v64);
            *(void *)(v3 + v63) = v65;
            v62 |= (unint64_t)(v66 & 0x7F) << v60;
            if (v66 < 0)
            {
              v60 += 7;
              BOOL v27 = v61++ >= 9;
              if (v27)
              {
                uint64_t v62 = 0;
                goto LABEL_121;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v62 = 0;
        }
LABEL_121:
        BOOL v74 = v62 != 0;
        uint64_t v75 = 81;
LABEL_122:
        *(unsigned char *)(a1 + v75) = v74;
        goto LABEL_140;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_104;
        }
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v49 = 0;
        *(_WORD *)(a1 + 84) |= 1u;
        while (2)
        {
          uint64_t v69 = *v17;
          uint64_t v70 = *(void *)(v3 + v69);
          unint64_t v71 = v70 + 1;
          if (v70 == -1 || v71 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(v3 + *v19) + v70);
            *(void *)(v3 + v69) = v71;
            v49 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              BOOL v27 = v68++ >= 9;
              if (v27)
              {
                LODWORD(v49) = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v49) = 0;
        }
LABEL_126:
        uint64_t v76 = 68;
LABEL_127:
        *(_DWORD *)(a1 + v76) = v49;
        goto LABEL_140;
      case 10:
        if (!v31)
        {
LABEL_104:
          char v73 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v84;
          if ((v73 & 1) == 0)
          {
LABEL_150:
            char v78 = 0;
            goto LABEL_153;
          }
LABEL_140:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_141;
          }
          continue;
        }
        if ((*(_WORD *)(a1 + 84) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_152;
          }
          __int16 v77 = *(_WORD *)(a1 + 84) << 6;
LABEL_138:
          v7 += v77 >> 15;
LABEL_139:
          char v15 = v84;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_140;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_152;
        }
        uint64_t v83 = objc_alloc_init(GEOPDSearchKeyValuePairList);
        if (GEOPDSearchKeyValuePairListReadAllFrom((uint64_t)v83, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v39 = 48;
LABEL_102:
          uint64_t v37 = *(void **)(a1 + v39);
          *(void *)(a1 + v39) = v83;
LABEL_103:

          --v7;
          goto LABEL_139;
        }
LABEL_151:

LABEL_152:
        char v78 = 0;
        char v15 = v84;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_153:
        *(_WORD *)(a1 + 84) |= 0x100u;
        *(_WORD *)(a1 + 84) |= 0x80u;
        *(_WORD *)(a1 + 84) |= 0x40u;
        *(_WORD *)(a1 + 84) |= 0x20u;
        *(_WORD *)(a1 + 84) |= 0x200u;
        if (v78)
        {
LABEL_154:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_155;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_155:
            int v81 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v38 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v84;
        if (!v38) {
          goto LABEL_150;
        }
        goto LABEL_140;
    }
  }
}

void sub_189F445AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F4471C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F4497C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F44F28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F45AD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchSpellerRequestReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchSpellerRequestReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 56) = [v6 position];
      *(_DWORD *)(a1 + 60) = [v6 length];
      unint64_t Specified = GEOPDSearchSpellerRequestReadSpecified(a1, (unint64_t)v6, (int *)&GEOPDSearchSpellerRequestReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189F45C4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F46360(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F46820(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F46FAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchSpellerResponseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int16 *)(a1 + 96) >> 10) & 1)
      + ((*(unsigned __int16 *)(a1 + 96) >> 11) & 1)
      + ((*(unsigned __int16 *)(a1 + 96) >> 9) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 1);
        if ((v14 | v8)) {
          char v15 = 0;
        }
        else {
          char v15 = a3;
        }
        LODWORD(v16) = v14;
        char v101 = (v15 == 0) | v14;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_158;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_158:
      if (v16)
      {
        char v95 = 1;
        goto LABEL_166;
      }
      if (v15)
      {
        while (1)
        {
          int v96 = *v15++;
          __int16 v97 = 1024;
          switch(v96)
          {
            case 0:
              goto LABEL_167;
            case 1:
              goto LABEL_164;
            case 5:
              __int16 v97 = 2048;
              goto LABEL_164;
            case 7:
              __int16 v97 = 512;
LABEL_164:
              *(_WORD *)(a1 + 96) |= v97;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_167;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v101 & 1) == 0)
    {
      uint64_t v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31 || (*(_WORD *)(a1 + 96) & 0x400) != 0) {
          goto LABEL_117;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_172;
        }
        int v100 = (int)v16;
        int v16 = objc_alloc_init(GEOPDSearchSpellSuggestion);
        if (!GEOPDSearchSpellSuggestionReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_173;
        }
        PBReaderRecallMark();
        -[GEOPDSearchSpellerResponse _addNoFlagsSpellSuggestion:](a1, v16);
        goto LABEL_69;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_117;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(_WORD *)(a1 + 96) |= 0x40u;
        while (2)
        {
          uint64_t v40 = *v17;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(v3 + *v19) + v41);
            *(void *)(v3 + v40) = v42;
            v39 |= (unint64_t)(v43 & 0x7F) << v37;
            if (v43 < 0)
            {
              v37 += 7;
              BOOL v27 = v38++ >= 9;
              if (v27)
              {
                LODWORD(v39) = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v39) = 0;
        }
LABEL_122:
        uint64_t v91 = 88;
        goto LABEL_148;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_117;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 96) |= 1u;
        while (2)
        {
          uint64_t v47 = *v17;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v19) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v27 = v45++ >= 9;
              if (v27)
              {
                uint64_t v46 = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v46 = 0;
        }
LABEL_126:
        *(void *)(a1 + 24) = v46;
        goto LABEL_157;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_117;
        }
        *(_WORD *)(a1 + 96) |= 2u;
        uint64_t v51 = *v17;
        unint64_t v52 = *(void *)(v3 + v51);
        if (v52 <= 0xFFFFFFFFFFFFFFF7 && v52 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v53 = *(void *)(*(void *)(v3 + *v19) + v52);
          *(void *)(v3 + v51) = v52 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v53 = 0;
        }
        uint64_t v94 = 32;
        goto LABEL_156;
      case 5:
        if (!v31 || (*(_WORD *)(a1 + 96) & 0x800) != 0) {
          goto LABEL_117;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_172;
        }
        int v100 = (int)v16;
        int v16 = objc_alloc_init(GEOPDSearchTokenCandidates);
        if (GEOPDSearchTokenCandidatesReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDSearchSpellerResponse _addNoFlagsTokenCandidates:](a1, v16);
LABEL_69:

          LODWORD(v16) = v100;
LABEL_151:
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_157:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_158;
          }
          continue;
        }
LABEL_173:

        char v95 = 0;
        LOBYTE(v16) = v100;
LABEL_174:
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_166:
        *(_WORD *)(a1 + 96) |= 0x400u;
        *(_WORD *)(a1 + 96) |= 0x800u;
        *(_WORD *)(a1 + 96) |= 0x200u;
        if (v95)
        {
LABEL_167:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_168;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_168:
            uint64_t v98 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_117;
        }
        *(_WORD *)(a1 + 96) |= 4u;
        uint64_t v54 = *v17;
        unint64_t v55 = *(void *)(v3 + v54);
        if (v55 <= 0xFFFFFFFFFFFFFFF7 && v55 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v53 = *(void *)(*(void *)(v3 + *v19) + v55);
          *(void *)(v3 + v54) = v55 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v53 = 0;
        }
        uint64_t v94 = 40;
LABEL_156:
        *(void *)(a1 + v94) = v53;
        goto LABEL_157;
      case 7:
        if (!v31) {
          goto LABEL_117;
        }
        if ((*(_WORD *)(a1 + 96) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_172:
            char v95 = 0;
            goto LABEL_174;
          }
          v7 += *(unsigned __int16 *)(a1 + 96) << 22 >> 31;
        }
        else
        {
          uint64_t v56 = PBReaderReadString();
          uint64_t v57 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v56;

          --v7;
        }
        goto LABEL_151;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_117;
        }
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v39 = 0;
        *(_WORD *)(a1 + 96) |= 0x20u;
        while (2)
        {
          uint64_t v60 = *v17;
          uint64_t v61 = *(void *)(v3 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(v3 + *v19) + v61);
            *(void *)(v3 + v60) = v62;
            v39 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              BOOL v27 = v59++ >= 9;
              if (v27)
              {
                LODWORD(v39) = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v39) = 0;
        }
LABEL_130:
        uint64_t v91 = 84;
        goto LABEL_148;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_117;
        }
        char v64 = 0;
        unsigned int v65 = 0;
        uint64_t v66 = 0;
        *(_WORD *)(a1 + 96) |= 0x80u;
        while (2)
        {
          uint64_t v67 = *v17;
          uint64_t v68 = *(void *)(v3 + v67);
          unint64_t v69 = v68 + 1;
          if (v68 == -1 || v69 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v70 = *(unsigned char *)(*(void *)(v3 + *v19) + v68);
            *(void *)(v3 + v67) = v69;
            v66 |= (unint64_t)(v70 & 0x7F) << v64;
            if (v70 < 0)
            {
              v64 += 7;
              BOOL v27 = v65++ >= 9;
              if (v27)
              {
                uint64_t v66 = 0;
                goto LABEL_134;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v66 = 0;
        }
LABEL_134:
        BOOL v92 = v66 != 0;
        uint64_t v93 = 92;
        goto LABEL_139;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_117;
        }
        char v71 = 0;
        unsigned int v72 = 0;
        uint64_t v73 = 0;
        *(_WORD *)(a1 + 96) |= 0x100u;
        while (2)
        {
          uint64_t v74 = *v17;
          uint64_t v75 = *(void *)(v3 + v74);
          unint64_t v76 = v75 + 1;
          if (v75 == -1 || v76 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(v3 + *v19) + v75);
            *(void *)(v3 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if (v77 < 0)
            {
              v71 += 7;
              BOOL v27 = v72++ >= 9;
              if (v27)
              {
                uint64_t v73 = 0;
                goto LABEL_138;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v73 = 0;
        }
LABEL_138:
        BOOL v92 = v73 != 0;
        uint64_t v93 = 93;
LABEL_139:
        *(unsigned char *)(a1 + v93) = v92;
        goto LABEL_157;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_117;
        }
        char v78 = 0;
        unsigned int v79 = 0;
        uint64_t v39 = 0;
        *(_WORD *)(a1 + 96) |= 8u;
        while (2)
        {
          uint64_t v80 = *v17;
          uint64_t v81 = *(void *)(v3 + v80);
          unint64_t v82 = v81 + 1;
          if (v81 == -1 || v82 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v83 = *(unsigned char *)(*(void *)(v3 + *v19) + v81);
            *(void *)(v3 + v80) = v82;
            v39 |= (unint64_t)(v83 & 0x7F) << v78;
            if (v83 < 0)
            {
              v78 += 7;
              BOOL v27 = v79++ >= 9;
              if (v27)
              {
                LODWORD(v39) = 0;
                goto LABEL_143;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v39) = 0;
        }
LABEL_143:
        uint64_t v91 = 76;
        goto LABEL_148;
      case 12:
        if (v8)
        {
          char v84 = 0;
          unsigned int v85 = 0;
          uint64_t v39 = 0;
          *(_WORD *)(a1 + 96) |= 0x10u;
          while (1)
          {
            uint64_t v86 = *v17;
            uint64_t v87 = *(void *)(v3 + v86);
            unint64_t v88 = v87 + 1;
            if (v87 == -1 || v88 > *(void *)(v3 + *v6)) {
              break;
            }
            char v89 = *(unsigned char *)(*(void *)(v3 + *v19) + v87);
            *(void *)(v3 + v86) = v88;
            v39 |= (unint64_t)(v89 & 0x7F) << v84;
            if ((v89 & 0x80) == 0) {
              goto LABEL_145;
            }
            v84 += 7;
            BOOL v27 = v85++ >= 9;
            if (v27)
            {
              LODWORD(v39) = 0;
              goto LABEL_147;
            }
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_145:
          if (*(unsigned char *)(v3 + *v18)) {
            LODWORD(v39) = 0;
          }
LABEL_147:
          uint64_t v91 = 80;
LABEL_148:
          *(_DWORD *)(a1 + v91) = v39;
        }
        else
        {
LABEL_117:
          char v90 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v90 & 1) == 0)
          {
LABEL_165:
            char v95 = 0;
            goto LABEL_166;
          }
        }
        goto LABEL_157;
      default:
        int v36 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v36) {
          goto LABEL_165;
        }
        goto LABEL_157;
    }
  }
}

void sub_189F481D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F4860C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F49AB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchSpellerResponseReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchSpellerResponseReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 64) = [v6 position];
      *(_DWORD *)(a1 + 68) = [v6 length];
      unint64_t Specified = GEOPDSearchSpellerResponseReadSpecified(a1, (unint64_t)v6, (int *)&GEOPDSearchSpellerResponseReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189F49C34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchTokenCandidatesIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenSetIsValid(a1)) {
            goto LABEL_78;
          }
          goto LABEL_74;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_75;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              break;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_75;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark()) {
            goto LABEL_78;
          }
          objc_msgSend(a1, "position", 0, 0);
          [a1 length];
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_78;
          }
          continue;
      }
      while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
      {
        char v28 = 0;
        unsigned int v29 = 0;
        unint64_t v30 = 0;
        while (1)
        {
          uint64_t v31 = *v2;
          uint64_t v32 = *(void *)&a1[v31];
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)&a1[*v3]) {
            break;
          }
          char v34 = *(unsigned char *)(*(void *)&a1[*v5] + v32);
          *(void *)&a1[v31] = v33;
          v30 |= (unint64_t)(v34 & 0x7F) << v28;
          if ((v34 & 0x80) == 0) {
            goto LABEL_55;
          }
          v28 += 7;
          BOOL v13 = v29++ >= 9;
          if (v13)
          {
            unint64_t v30 = 0;
            uint64_t v35 = *v4;
            int v36 = a1[v35];
            goto LABEL_57;
          }
        }
        a1[*v4] = 1;
LABEL_55:
        uint64_t v35 = *v4;
        int v36 = a1[v35];
        if (a1[v35]) {
          unint64_t v30 = 0;
        }
LABEL_57:
        int v37 = v30 & 7;
        if (v36 || v37 == 4) {
          break;
        }
        if ((v30 >> 3) == 2)
        {
          if (v37 == 1)
          {
            uint64_t v39 = *v2;
            unint64_t v40 = *(void *)&a1[v39];
            if (v40 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v41 = v40 + 8, v41 <= *(void *)&a1[*v3])) {
              *(void *)&a1[v39] = v41;
            }
            else {
              a1[v35] = 1;
            }
            continue;
          }
LABEL_77:
          PBReaderRecallMark();
LABEL_78:
          PBReaderRecallMark();
          return 0;
        }
        if ((v30 >> 3) == 1)
        {
          if (v37 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_77;
          }
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_77;
        }
      }
      int v42 = a1[*v4];
      PBReaderRecallMark();
      if (v42) {
        goto LABEL_78;
      }
LABEL_74:
      PBReaderRecallMark();
LABEL_75:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

void sub_189F4A934(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F4B078(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchTokenCandidateReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          *(unsigned char *)(a1 + 24) |= 1u;
          uint64_t v20 = *v4;
          unint64_t v21 = *(void *)&v3[v20];
          if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v22 = *(void *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v22 = 0;
          }
          *(void *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_31;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_31:
    BOOL v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_189F4BCB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchTokenCandidatesReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 48) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        BOOL v16 = v14 != 0;
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        if (v14) {
          BOOL v18 = 1;
        }
        else {
          BOOL v18 = v15 == 0;
        }
        BOOL v64 = v18;
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_87;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v17;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_87:
      if (v16)
      {
        char v58 = 1;
        goto LABEL_100;
      }
      if (!v15) {
        goto LABEL_101;
      }
      while (1)
      {
        while (1)
        {
          int v60 = *v15++;
          int v59 = v60;
          if (v60 != 1) {
            break;
          }
          LOBYTE(v59) = 8;
LABEL_95:
          *(unsigned char *)(a1 + 48) |= v59;
        }
        if (v59 == 4) {
          goto LABEL_95;
        }
        if (!v59) {
          goto LABEL_101;
        }
      }
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v16;
    if (!v64)
    {
      unint64_t v33 = v15;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 48) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_97;
          }
          BOOL v63 = v16;
          int v37 = objc_alloc_init(GEOPDSearchTokenSet);
          if (GEOPDSearchTokenSetReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            unsigned int v38 = *(void **)(a1 + 24);
            *(void *)(a1 + 24) = v37;

            --v7;
            goto LABEL_68;
          }
          goto LABEL_98;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_97;
        }
        v7 += *(unsigned __int8 *)(a1 + 48) << 28 >> 31;
        goto LABEL_82;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 48) |= 1u;
        while (2)
        {
          uint64_t v43 = *v17;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(v3 + *v20) + v44);
            *(void *)(v3 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v28 = v41++ >= 9;
              if (v28)
              {
                uint64_t v42 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v42 = 0;
        }
LABEL_74:
        BOOL v55 = v42 != 0;
        uint64_t v56 = 44;
        goto LABEL_79;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        *(unsigned char *)(a1 + 48) |= 2u;
        while (2)
        {
          uint64_t v50 = *v17;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v20) + v51);
            *(void *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v28 = v48++ >= 9;
              if (v28)
              {
                uint64_t v49 = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v49 = 0;
        }
LABEL_78:
        BOOL v55 = v49 != 0;
        uint64_t v56 = 45;
LABEL_79:
        *(unsigned char *)(a1 + v56) = v55;
        goto LABEL_83;
      case 4:
        if (!v32 || (*(unsigned char *)(a1 + 48) & 4) != 0)
        {
LABEL_69:
          char v54 = PBReaderSkipValueWithTag();
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v54 & 1) == 0)
          {
LABEL_96:
            char v58 = 0;
            goto LABEL_100;
          }
          goto LABEL_83;
        }
        if (PBReaderPlaceMark())
        {
          BOOL v63 = v16;
          int v37 = objc_alloc_init(GEOPDSearchTokenCandidate);
          if (!GEOPDSearchTokenCandidateReadAllFrom((uint64_t)v37, (void *)v3))
          {
LABEL_98:

            char v58 = 0;
            BOOL v16 = v63;
            goto LABEL_99;
          }
          PBReaderRecallMark();
          -[GEOPDSearchTokenCandidates _addNoFlagsCandidates:](a1, v37);

LABEL_68:
          BOOL v16 = v63;
LABEL_82:
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_83:
          if (v7) {
            char v57 = 1;
          }
          else {
            char v57 = v16;
          }
          if ((v57 & 1) == 0) {
            goto LABEL_87;
          }
          continue;
        }
LABEL_97:
        char v58 = 0;
LABEL_99:
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_100:
        *(unsigned char *)(a1 + 48) |= 8u;
        *(unsigned char *)(a1 + 48) |= 4u;
        if (v58)
        {
LABEL_101:
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v16) {
            goto LABEL_102;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_102:
            uint64_t v61 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v39 = PBReaderSkipValueWithTag();
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v39) {
          goto LABEL_96;
        }
        goto LABEL_83;
    }
  }
}

void sub_189F4C780(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F4CBF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F4CCEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchTokenCandidatesCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  -[GEOPDSearchTokenSet readAll:](*(void *)(a1 + 24), 1);
  long long v8 = 0u;
  long long v9 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  id v2 = *(id *)(a1 + 16);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v7;
    while (1)
    {
      if (*(void *)v7 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDSearchTokenCandidatesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchTokenCandidatesReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDSearchTokenCandidatesReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDSearchTokenCandidatesReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchTokenCandidatesReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchTokenCandidatesCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189F4D3F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F4D684(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F4D908(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F4DCBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchLanguageContextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  unsigned int v10 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFEFFFFFFFDFFFCLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 3);
  if (v9 & 1 | (v10 > 3) | v7 & 1) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = a3;
  }
  int v14 = (int *)MEMORY[0x1E4F940E8];
  int v15 = (int *)MEMORY[0x1E4F940C8];
  BOOL v16 = (int *)MEMORY[0x1E4F940B8];
  while (*(void *)(v3 + *v14) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v15))
  {
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      unint64_t v21 = *(void *)(v3 + v20);
      if (v21 == -1 || v21 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v22 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v21 + 1;
      v19 |= (unint64_t)(v22 & 0x7F) << v17;
      if ((v22 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      if (v18++ >= 9)
      {
        unint64_t v19 = 0;
        int v24 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v24 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v24 || (v19 & 7) == 4) {
      break;
    }
    unint64_t v26 = v19 >> 3;
    BOOL v27 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      BOOL v28 = v13;
      do
      {
        int v30 = *v28++;
        int v29 = v30;
        BOOL v27 = v30 != 0;
        if (v30) {
          BOOL v31 = v29 == v26;
        }
        else {
          BOOL v31 = 1;
        }
      }
      while (!v31);
    }
    switch((int)v26)
    {
      case 1:
        if (!v27 || (*(unsigned char *)(a1 + 68) & 8) != 0) {
          goto LABEL_59;
        }
        BOOL v32 = PBReaderReadString();
        if (v32) {
          -[GEOPDSearchLanguageContext _addNoFlagsDisplayLanguage:](a1, v32);
        }
        goto LABEL_48;
      case 2:
        if (!v27 || (*(unsigned char *)(a1 + 68) & 0x10) != 0) {
          goto LABEL_59;
        }
        BOOL v32 = PBReaderReadString();
        if (v32) {
          -[GEOPDSearchLanguageContext _addNoFlagsSpokenLanguage:](a1, v32);
        }
LABEL_48:

        int v15 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_60;
      case 3:
        if (!v27) {
          goto LABEL_59;
        }
        if ((*(unsigned char *)(a1 + 68) & 1) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 16;
          goto LABEL_58;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_78;
        }
        v8 -= *(unsigned char *)(a1 + 68) & 1;
        goto LABEL_60;
      case 4:
        if (!v27) {
          goto LABEL_59;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 24;
          goto LABEL_58;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_78;
        }
        char v36 = *(unsigned char *)(a1 + 68) << 6;
        goto LABEL_68;
      case 5:
        if (v27)
        {
          if ((*(unsigned char *)(a1 + 68) & 4) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_78:
              char v37 = 0;
LABEL_79:
              *(unsigned char *)(a1 + 68) |= 8u;
              *(unsigned char *)(a1 + 68) |= 0x10u;
              *(unsigned char *)(a1 + 68) |= 1u;
              *(unsigned char *)(a1 + 68) |= 2u;
              *(unsigned char *)(a1 + 68) |= 4u;
              if (v37) {
                goto LABEL_80;
              }
              unint64_t v3 = 0;
              if ((v12 & 1) == 0) {
                return v3;
              }
LABEL_81:
              char v40 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = 0;

              return v3;
            }
            char v36 = 32 * *(unsigned char *)(a1 + 68);
LABEL_68:
            v8 += v36 >> 7;
          }
          else
          {
            uint64_t v33 = PBReaderReadString();
            uint64_t v34 = 32;
LABEL_58:
            int v35 = *(void **)(a1 + v34);
            *(void *)(a1 + v34) = v33;

            --v8;
          }
        }
        else
        {
LABEL_59:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_78;
          }
        }
LABEL_60:
        if (!(v12 & 1 | (v8 != 0))) {
          goto LABEL_69;
        }
        break;
      default:
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_78;
        }
        goto LABEL_60;
    }
  }
LABEL_69:
  if (v12)
  {
    char v37 = 1;
    goto LABEL_79;
  }
  if (v13)
  {
    while (1)
    {
      int v38 = *v13++;
      char v39 = 8;
      switch(v38)
      {
        case 0:
          goto LABEL_80;
        case 1:
          goto LABEL_77;
        case 2:
          char v39 = 16;
          goto LABEL_77;
        case 3:
          char v39 = 1;
          goto LABEL_77;
        case 4:
          char v39 = 2;
          goto LABEL_77;
        case 5:
          char v39 = 4;
LABEL_77:
          *(unsigned char *)(a1 + 68) |= v39;
          break;
        default:
          continue;
      }
    }
  }
LABEL_80:
  unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
  if (v12) {
    goto LABEL_81;
  }
  return v3;
}

void sub_189F4E3E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F4EA50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F4EB38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchLanguageContextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchLanguageContextReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDSearchLanguageContextReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDSearchLanguageContextReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchLanguageContextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189F4F084(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchLanguageContextIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2) {
            goto LABEL_33;
          }
          goto LABEL_30;
        case 2u:
          if (v14 == 2) {
            goto LABEL_30;
          }
          goto LABEL_33;
        case 3u:
          if (v14 == 2) {
            goto LABEL_30;
          }
          goto LABEL_33;
        case 4u:
          if (v14 == 2) {
            goto LABEL_30;
          }
          goto LABEL_33;
        case 5u:
          if (v14 != 2) {
            goto LABEL_33;
          }
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_33:
            BOOL v16 = 0;
            goto LABEL_34;
          }
LABEL_31:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_32;
          }
          break;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_33;
          }
          goto LABEL_31;
      }
    }
  }
LABEL_32:
  BOOL v16 = a1[*v4] == 0;
LABEL_34:
  PBReaderRecallMark();
  return v16;
}

void sub_189F4F5B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchLanguageContextIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0x3F) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189F4F94C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F4FF18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchLocationContextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          BOOL v16 = 0;
        }
        else {
          BOOL v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v48 = v17;
        unsigned int v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        unint64_t v21 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_64;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v18;
      unint64_t v26 = *(void *)(v3 + v25);
      if (v26 == -1 || v26 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v26);
      *(void *)(v3 + v25) = v26 + 1;
      v24 |= (unint64_t)(v27 & 0x7F) << v22;
      if ((v27 & 0x80) == 0) {
        goto LABEL_25;
      }
      v22 += 7;
      if (v23++ >= 9)
      {
        unint64_t v24 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v24 = 0;
    }
LABEL_27:
    if (v29 || (v24 & 7) == 4)
    {
LABEL_64:
      if (v15)
      {
        char v43 = 1;
        goto LABEL_77;
      }
      if (!v16) {
        goto LABEL_78;
      }
      while (1)
      {
        int v45 = *v16++;
        int v44 = v45;
        if (v45 == 1) {
          goto LABEL_72;
        }
        if (v44 == 3)
        {
          LOBYTE(v44) = 2;
LABEL_72:
          *(unsigned char *)(a1 + v21[1020]) |= v44;
        }
        else if (!v44)
        {
          goto LABEL_78;
        }
      }
    }
    unint64_t v31 = v24 >> 3;
    BOOL v32 = v15;
    if (!v48)
    {
      uint64_t v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 3) {
      break;
    }
    if (v31 != 1)
    {
      int v40 = PBReaderSkipValueWithTag();
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v40) {
        goto LABEL_73;
      }
      goto LABEL_60;
    }
    if (v32)
    {
      if (*(unsigned char *)(a1 + v21[1020]))
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_74;
        }
        v7 -= *(unsigned char *)(a1 + v21[1020]) & 1;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_74;
        }
        char v37 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v37, (void *)v3)) {
          goto LABEL_75;
        }
        PBReaderRecallMark();
        uint64_t v38 = 16;
LABEL_50:
        char v39 = *(void **)(a1 + v38);
        *(void *)(a1 + v38) = v37;

        --v7;
        unint64_t v21 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
      }
LABEL_59:
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_60;
    }
LABEL_53:
    char v41 = PBReaderSkipValueWithTag();
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v41 & 1) == 0)
    {
LABEL_73:
      char v43 = 0;
      goto LABEL_77;
    }
LABEL_60:
    if (v7) {
      char v42 = 1;
    }
    else {
      char v42 = v15;
    }
    if ((v42 & 1) == 0) {
      goto LABEL_64;
    }
  }
  if (!v32) {
    goto LABEL_53;
  }
  if ((*(unsigned char *)(a1 + v21[1020]) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_74:
      char v43 = 0;
      goto LABEL_76;
    }
    v7 += *(unsigned __int8 *)(a1 + v21[1020]) << 30 >> 31;
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_74;
  }
  char v37 = objc_alloc_init(GEOPDSearchViewportInfo);
  if (GEOPDSearchViewportInfoReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v38 = 24;
    goto LABEL_50;
  }
LABEL_75:

  char v43 = 0;
  unint64_t v21 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
LABEL_76:
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_77:
  *(unsigned char *)(a1 + v21[1020]) |= 1u;
  *(unsigned char *)(a1 + v21[1020]) |= 2u;
  if (v43)
  {
LABEL_78:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v15) {
      goto LABEL_79;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v15)
    {
LABEL_79:
      char v46 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_189F50508(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F50870(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchLocationContextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchLocationContextReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchLocationContextReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchLocationContextReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchLocationContextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 16) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189F50D84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchLocationContextIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]]) {
    goto LABEL_74;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  do
  {
    if (a1[*v4]) {
      break;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      unint64_t v10 = *(void *)&a1[v9];
      if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
        break;
      }
      char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v10 + 1;
      v8 |= (unint64_t)(v11 & 0x7F) << v6;
      if ((v11 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v12 = v7++ >= 9;
      if (v12)
      {
        unint64_t v8 = 0;
        int v13 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v13 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v14 = v8 & 7;
    if (v13) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = v14 == 4;
    }
    if (v15) {
      break;
    }
    if ((v8 >> 3) != 3)
    {
      if ((v8 >> 3) == 1)
      {
        if (v14 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1)) {
          goto LABEL_72;
        }
      }
      else if (PBReaderSkipValueWithTag())
      {
        continue;
      }
LABEL_76:
      PBReaderRecallMark();
      return 0;
    }
    if (v14 != 2 || !PBReaderPlaceMark()) {
      goto LABEL_76;
    }
    objc_msgSend(a1, "position", 0, 0);
    [a1 length];
LABEL_27:
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
    {
      char v16 = 0;
      unsigned int v17 = 0;
      unint64_t v18 = 0;
      while (1)
      {
        uint64_t v19 = *v2;
        unint64_t v20 = *(void *)&a1[v19];
        if (v20 == -1 || v20 >= *(void *)&a1[*v3]) {
          break;
        }
        char v21 = *(unsigned char *)(*(void *)&a1[*v5] + v20);
        *(void *)&a1[v19] = v20 + 1;
        v18 |= (unint64_t)(v21 & 0x7F) << v16;
        if ((v21 & 0x80) == 0) {
          goto LABEL_37;
        }
        v16 += 7;
        BOOL v12 = v17++ >= 9;
        if (v12)
        {
          unint64_t v18 = 0;
          int v22 = a1[*v4];
          goto LABEL_39;
        }
      }
      a1[*v4] = 1;
LABEL_37:
      int v22 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v18 = 0;
      }
LABEL_39:
      int v23 = v18 & 7;
      if (v22 || v23 == 4) {
        break;
      }
      unint64_t v25 = v18 >> 3;
      if ((v18 >> 3) == 3)
      {
        if ((v18 & 7) != 0) {
          goto LABEL_75;
        }
        unsigned int v26 = 0;
        while (1)
        {
          uint64_t v27 = *v2;
          unint64_t v28 = *(void *)&a1[v27];
          if (v28 == -1 || v28 >= *(void *)&a1[*v3]) {
            goto LABEL_66;
          }
          unint64_t v29 = v28 + 1;
          int v30 = *(char *)(*(void *)&a1[*v5] + v28);
          *(void *)&a1[v27] = v29;
          if (v30 < 0)
          {
            BOOL v31 = v26++ > 8;
            if (!v31) {
              continue;
            }
          }
          goto LABEL_27;
        }
      }
      if (v25 == 2)
      {
        if ((v18 & 7) != 0) {
          goto LABEL_75;
        }
        unsigned int v32 = 0;
        while (1)
        {
          uint64_t v33 = *v2;
          unint64_t v34 = *(void *)&a1[v33];
          if (v34 == -1 || v34 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v35 = v34 + 1;
          int v36 = *(char *)(*(void *)&a1[*v5] + v34);
          *(void *)&a1[v33] = v35;
          if (v36 < 0)
          {
            BOOL v31 = v32++ > 8;
            if (!v31) {
              continue;
            }
          }
          goto LABEL_27;
        }
LABEL_66:
        a1[*v4] = 1;
      }
      else if (v25 == 1)
      {
        if (v23 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
        {
LABEL_75:
          PBReaderRecallMark();
          goto LABEL_76;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_75;
      }
    }
    int v37 = a1[*v4];
    PBReaderRecallMark();
    if (v37) {
      goto LABEL_76;
    }
LABEL_72:
    PBReaderRecallMark();
  }
  while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
LABEL_74:
  BOOL v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

void sub_189F51320(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchLocationContextIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189F51578(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchViewportInfoReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_51;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          goto LABEL_51;
        }
        unint64_t v17 = v10 >> 3;
        if ((v10 >> 3) == 3) {
          break;
        }
        if (v17 == 2)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v28 = *v4;
            unint64_t v29 = *(void *)&v3[v28];
            if (v29 == -1 || v29 >= *(void *)&v3[*v5]) {
              break;
            }
            char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
            *(void *)&v3[v28] = v29 + 1;
            v22 |= (unint64_t)(v30 & 0x7F) << v26;
            if ((v30 & 0x80) == 0) {
              goto LABEL_46;
            }
            v26 += 7;
            BOOL v14 = v27++ >= 9;
            if (v14)
            {
              LODWORD(v22) = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6]) {
            LODWORD(v22) = 0;
          }
LABEL_48:
          uint64_t v31 = 20;
LABEL_49:
          *(_DWORD *)(a1 + v31) = v22;
          goto LABEL_50;
        }
        if (v17 == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_53;
          }
          unint64_t v18 = objc_alloc_init(GEOMapRegion);
          if (!GEOMapRegionReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_53;
          }
          PBReaderRecallMark();
          uint64_t v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_53;
        }
LABEL_50:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_51;
        }
      }
      char v20 = 0;
      unsigned int v21 = 0;
      uint64_t v22 = 0;
      *(unsigned char *)(a1 + 24) |= 1u;
      while (1)
      {
        uint64_t v23 = *v4;
        unint64_t v24 = *(void *)&v3[v23];
        if (v24 == -1 || v24 >= *(void *)&v3[*v5]) {
          break;
        }
        char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
        *(void *)&v3[v23] = v24 + 1;
        v22 |= (unint64_t)(v25 & 0x7F) << v20;
        if ((v25 & 0x80) == 0) {
          goto LABEL_42;
        }
        v20 += 7;
        BOOL v14 = v21++ >= 9;
        if (v14)
        {
          LODWORD(v22) = 0;
          goto LABEL_44;
        }
      }
      v3[*v6] = 1;
LABEL_42:
      if (v3[*v6]) {
        LODWORD(v22) = 0;
      }
LABEL_44:
      uint64_t v31 = 16;
      goto LABEL_49;
    }
LABEL_51:
    BOOL v32 = v3[*v6] == 0;
  }
  else
  {
LABEL_53:
    BOOL v32 = 0;
  }
  objc_sync_exit(v3);

  return v32;
}

void sub_189F51E90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F530D4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

uint64_t _PDRSourceForGEOMapServiceTraits_Source(uint64_t result)
{
  if ((result - 1) >= 0x17) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t _MapItemRAPFlowTypeForPDRAPFlowType(uint64_t result)
{
  if ((result - 1) >= 7) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t _PDRAPFlowTypeForMapItemRAPFlowType(uint64_t result)
{
  if ((result - 1) >= 7) {
    return 0;
  }
  else {
    return result;
  }
}

unint64_t GEOMapLayerDataServiceDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 1);
  if (v9 & 1 | (v10 > 1) | v8 & 1) {
    char v13 = 0;
  }
  else {
    char v13 = a3;
  }
  BOOL v14 = (int *)MEMORY[0x1E4F940E8];
  int v15 = (int *)MEMORY[0x1E4F940C8];
  char v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_68;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      unint64_t v21 = *(void *)(v3 + v20);
      if (v21 == -1 || v21 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v22 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v21 + 1;
      v19 |= (unint64_t)(v22 & 0x7F) << v17;
      if ((v22 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      if (v18++ >= 9)
      {
        unint64_t v19 = 0;
        int v24 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v24 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v24 || (v19 & 7) == 4)
    {
LABEL_68:
      if (v12)
      {
        char v36 = 1;
        goto LABEL_77;
      }
      if (v13)
      {
        while (1)
        {
          int v38 = *v13++;
          char v37 = 2;
          switch(v38)
          {
            case 0:
              goto LABEL_78;
            case 1:
              goto LABEL_74;
            case 2:
              char v37 = 4;
              goto LABEL_74;
            case 3:
              char v37 = 1;
LABEL_74:
              *(unsigned char *)(a1 + 52) |= v37;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_78;
    }
    unint64_t v26 = v19 >> 3;
    BOOL v27 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      uint64_t v28 = v13;
      do
      {
        int v30 = *v28++;
        int v29 = v30;
        BOOL v27 = v30 != 0;
        if (v30) {
          BOOL v31 = v29 == v26;
        }
        else {
          BOOL v31 = 1;
        }
      }
      while (!v31);
    }
    if (v26 == 3)
    {
      if (v27)
      {
        if (*(unsigned char *)(a1 + 52))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_76;
          }
          v7 -= *(unsigned char *)(a1 + 52) & 1;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_76;
          }
          BOOL v32 = objc_alloc_init(GEOMapLayerDataServiceLayerIndex);
          if (!GEOMapLayerDataServiceLayerIndexReadAllFrom((uint64_t)v32, (void *)v3)) {
            goto LABEL_83;
          }
          PBReaderRecallMark();
          uint64_t v33 = 16;
LABEL_55:
          unint64_t v34 = *(void **)(a1 + v33);
          *(void *)(a1 + v33) = v32;

          --v7;
          int v15 = (int *)MEMORY[0x1E4F940C8];
        }
        goto LABEL_67;
      }
LABEL_58:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_76;
      }
      goto LABEL_67;
    }
    if (v26 != 2)
    {
      if (v26 != 1)
      {
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_76;
        }
        goto LABEL_67;
      }
      if (v27)
      {
        if ((*(unsigned char *)(a1 + 52) & 2) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_76;
          }
          BOOL v32 = objc_alloc_init(GEOMapLayerDataServiceLayer);
          if (!GEOMapLayerDataServiceLayerReadAllFrom((uint64_t)v32, (void *)v3)) {
            goto LABEL_83;
          }
          PBReaderRecallMark();
          uint64_t v33 = 24;
          goto LABEL_55;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_76;
        }
        char v35 = *(unsigned char *)(a1 + 52) << 6;
LABEL_66:
        v7 += v35 >> 7;
LABEL_67:
        if (!(v12 & 1 | (v7 != 0))) {
          goto LABEL_68;
        }
        continue;
      }
      goto LABEL_58;
    }
    break;
  }
  if (!v27) {
    goto LABEL_58;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_76:
      char v36 = 0;
      goto LABEL_77;
    }
    char v35 = 32 * *(unsigned char *)(a1 + 52);
    goto LABEL_66;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_76;
  }
  BOOL v32 = objc_alloc_init(GEOMapLayerDataServiceVersion);
  if (GEOMapLayerDataServiceVersionReadAllFrom((uint64_t)v32, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v33 = 32;
    goto LABEL_55;
  }
LABEL_83:

  char v36 = 0;
  int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_77:
  *(unsigned char *)(a1 + 52) |= 2u;
  *(unsigned char *)(a1 + 52) |= 4u;
  *(unsigned char *)(a1 + 52) |= 1u;
  if (v36)
  {
LABEL_78:
    unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
    if ((v12 & 1) == 0) {
      return v3;
    }
    goto LABEL_79;
  }
  unint64_t v3 = 0;
  if (v12)
  {
LABEL_79:
    char v39 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189F54070(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F54154(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMapLayerDataServiceDataReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOMapLayerDataServiceDataReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 40) = [v6 position];
      *(_DWORD *)(a1 + 44) = [v6 length];
      unint64_t Specified = GEOMapLayerDataServiceDataReadSpecified(a1, (unint64_t)v6, (int *)&GEOMapLayerDataServiceDataReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189F542D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F54470(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F545E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMapLayerDataServiceLayerReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_30;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            LODWORD(v19) = 0;
          }
LABEL_32:
          *(_DWORD *)(a1 + 8) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_189F54B28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMapLayerDataServiceLayerIndexReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          uint64_t v17 = PBReaderReadData();
          unsigned int v18 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v17;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    BOOL v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_189F54FC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMapLayerDataServicePatchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 2);
  if (v9 & 1 | (v10 > 2) | v8 & 1) {
    char v13 = 0;
  }
  else {
    char v13 = a3;
  }
  BOOL v14 = (int *)MEMORY[0x1E4F940E8];
  int v15 = (int *)MEMORY[0x1E4F940C8];
  char v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_73;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      unint64_t v21 = *(void *)(v3 + v20);
      if (v21 == -1 || v21 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v22 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v21 + 1;
      v19 |= (unint64_t)(v22 & 0x7F) << v17;
      if ((v22 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      if (v18++ >= 9)
      {
        unint64_t v19 = 0;
        int v24 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v24 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v24 || (v19 & 7) == 4)
    {
LABEL_73:
      if (v12)
      {
        char v36 = 1;
        goto LABEL_82;
      }
      if (v13)
      {
        while (1)
        {
          int v37 = *v13++;
          char v38 = 2;
          switch(v37)
          {
            case 0:
              goto LABEL_83;
            case 1:
              goto LABEL_80;
            case 2:
              char v38 = 4;
              goto LABEL_80;
            case 3:
              char v38 = 8;
              goto LABEL_80;
            case 4:
              char v38 = 1;
LABEL_80:
              *(unsigned char *)(a1 + 60) |= v38;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_83;
    }
    unint64_t v26 = v19 >> 3;
    BOOL v27 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      uint64_t v28 = v13;
      do
      {
        int v30 = *v28++;
        int v29 = v30;
        BOOL v27 = v30 != 0;
        if (v30) {
          BOOL v31 = v29 == v26;
        }
        else {
          BOOL v31 = 1;
        }
      }
      while (!v31);
    }
    switch((int)v26)
    {
      case 1:
        if (!v27) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + 60) & 2) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_81;
          }
          BOOL v32 = objc_alloc_init(GEOMapLayerDataServiceLayer);
          if (GEOMapLayerDataServiceLayerReadAllFrom((uint64_t)v32, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v33 = 24;
            goto LABEL_60;
          }
          goto LABEL_88;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_81;
        }
        char v35 = *(unsigned char *)(a1 + 60) << 6;
        goto LABEL_69;
      case 2:
        if (!v27) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + 60) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_81;
          }
          char v35 = 32 * *(unsigned char *)(a1 + 60);
          goto LABEL_69;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_81;
        }
        BOOL v32 = objc_alloc_init(GEOMapLayerDataServiceVersion);
        if (!GEOMapLayerDataServiceVersionReadAllFrom((uint64_t)v32, (void *)v3)) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        uint64_t v33 = 32;
        goto LABEL_60;
      case 3:
        if (!v27) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_81;
          }
          char v35 = 16 * *(unsigned char *)(a1 + 60);
LABEL_69:
          v7 += v35 >> 7;
          goto LABEL_72;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_81;
        }
        BOOL v32 = objc_alloc_init(GEOMapLayerDataServiceVersion);
        if (!GEOMapLayerDataServiceVersionReadAllFrom((uint64_t)v32, (void *)v3)) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        uint64_t v33 = 40;
        goto LABEL_60;
      case 4:
        if (!v27)
        {
LABEL_61:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_81;
          }
LABEL_72:
          if (!(v12 & 1 | (v7 != 0))) {
            goto LABEL_73;
          }
          continue;
        }
        if (*(unsigned char *)(a1 + 60))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_81:
            char v36 = 0;
            goto LABEL_82;
          }
          v7 -= *(unsigned char *)(a1 + 60) & 1;
          goto LABEL_72;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_81;
        }
        BOOL v32 = objc_alloc_init(GEOMapLayerDataServiceLayerIndex);
        if (GEOMapLayerDataServiceLayerIndexReadAllFrom((uint64_t)v32, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v33 = 16;
LABEL_60:
          unint64_t v34 = *(void **)(a1 + v33);
          *(void *)(a1 + v33) = v32;

          --v7;
          int v15 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_72;
        }
LABEL_88:

        char v36 = 0;
        int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_82:
        *(unsigned char *)(a1 + 60) |= 2u;
        *(unsigned char *)(a1 + 60) |= 4u;
        *(unsigned char *)(a1 + 60) |= 8u;
        *(unsigned char *)(a1 + 60) |= 1u;
        if (v36)
        {
LABEL_83:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_84;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v12)
          {
LABEL_84:
            char v39 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_81;
        }
        goto LABEL_72;
    }
  }
}

void sub_189F55B9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F55C84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMapLayerDataServicePatchReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOMapLayerDataServicePatchReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 48) = [v6 position];
      *(_DWORD *)(a1 + 52) = [v6 length];
      unint64_t Specified = GEOMapLayerDataServicePatchReadSpecified(a1, (unint64_t)v6, (int *)&GEOMapLayerDataServicePatchReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189F55E00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F55FBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F5614C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMapLayerDataServiceVersionReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v17 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 4u;
          while (1)
          {
            uint64_t v28 = *v4;
            unint64_t v29 = *(void *)&v3[v28];
            if (v29 == -1 || v29 >= *(void *)&v3[*v5]) {
              break;
            }
            char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
            *(void *)&v3[v28] = v29 + 1;
            v20 |= (unint64_t)(v30 & 0x7F) << v26;
            if ((v30 & 0x80) == 0)
            {
              char v25 = &OBJC_IVAR___GEOMapLayerDataServiceVersion__patchVersion;
              goto LABEL_49;
            }
            v26 += 7;
            BOOL v24 = v27++ > 8;
            if (v24)
            {
              LODWORD(v20) = 0;
              char v25 = &OBJC_IVAR___GEOMapLayerDataServiceVersion__patchVersion;
              goto LABEL_51;
            }
          }
          char v25 = &OBJC_IVAR___GEOMapLayerDataServiceVersion__patchVersion;
LABEL_48:
          v3[*v6] = 1;
        }
        else if (v17 == 2)
        {
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (1)
          {
            uint64_t v33 = *v4;
            unint64_t v34 = *(void *)&v3[v33];
            if (v34 == -1 || v34 >= *(void *)&v3[*v5])
            {
              char v25 = &OBJC_IVAR___GEOMapLayerDataServiceVersion__formatVersion;
              goto LABEL_48;
            }
            char v35 = *(unsigned char *)(*(void *)&v3[*v7] + v34);
            *(void *)&v3[v33] = v34 + 1;
            v20 |= (unint64_t)(v35 & 0x7F) << v31;
            if ((v35 & 0x80) == 0) {
              break;
            }
            v31 += 7;
            BOOL v24 = v32++ > 8;
            if (v24)
            {
              LODWORD(v20) = 0;
              char v25 = &OBJC_IVAR___GEOMapLayerDataServiceVersion__formatVersion;
              goto LABEL_51;
            }
          }
          char v25 = &OBJC_IVAR___GEOMapLayerDataServiceVersion__formatVersion;
        }
        else
        {
          if (v17 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_58;
            }
            continue;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            unint64_t v22 = *(void *)&v3[v21];
            if (v22 == -1 || v22 >= *(void *)&v3[*v5])
            {
              char v25 = &OBJC_IVAR___GEOMapLayerDataServiceVersion__dataVersion;
              goto LABEL_48;
            }
            char v23 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v24 = v19++ > 8;
            if (v24)
            {
              LODWORD(v20) = 0;
              char v25 = &OBJC_IVAR___GEOMapLayerDataServiceVersion__dataVersion;
              goto LABEL_51;
            }
          }
          char v25 = &OBJC_IVAR___GEOMapLayerDataServiceVersion__dataVersion;
        }
LABEL_49:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_51:
        *(_DWORD *)(a1 + *v25) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_58:
    BOOL v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_189F56910(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMapLayerDataServiceVersionUpdateReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 2);
  if (v9 & 1 | (v10 > 2) | v8 & 1) {
    char v13 = 0;
  }
  else {
    char v13 = a3;
  }
  BOOL v14 = (int *)MEMORY[0x1E4F940E8];
  int v15 = (int *)MEMORY[0x1E4F940C8];
  char v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_73;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      unint64_t v21 = *(void *)(v3 + v20);
      if (v21 == -1 || v21 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v22 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v21 + 1;
      v19 |= (unint64_t)(v22 & 0x7F) << v17;
      if ((v22 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      if (v18++ >= 9)
      {
        unint64_t v19 = 0;
        int v24 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v24 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v24 || (v19 & 7) == 4)
    {
LABEL_73:
      if (v12)
      {
        char v36 = 1;
        goto LABEL_82;
      }
      if (v13)
      {
        while (1)
        {
          int v37 = *v13++;
          char v38 = 2;
          switch(v37)
          {
            case 0:
              goto LABEL_83;
            case 1:
              goto LABEL_80;
            case 2:
              char v38 = 4;
              goto LABEL_80;
            case 3:
              char v38 = 8;
              goto LABEL_80;
            case 4:
              char v38 = 1;
LABEL_80:
              *(unsigned char *)(a1 + 60) |= v38;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_83;
    }
    unint64_t v26 = v19 >> 3;
    BOOL v27 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      uint64_t v28 = v13;
      do
      {
        int v30 = *v28++;
        int v29 = v30;
        BOOL v27 = v30 != 0;
        if (v30) {
          BOOL v31 = v29 == v26;
        }
        else {
          BOOL v31 = 1;
        }
      }
      while (!v31);
    }
    switch((int)v26)
    {
      case 1:
        if (!v27) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + 60) & 2) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_81;
          }
          unsigned int v32 = objc_alloc_init(GEOMapLayerDataServiceLayer);
          if (GEOMapLayerDataServiceLayerReadAllFrom((uint64_t)v32, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v33 = 24;
            goto LABEL_60;
          }
          goto LABEL_88;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_81;
        }
        char v35 = *(unsigned char *)(a1 + 60) << 6;
        goto LABEL_69;
      case 2:
        if (!v27) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + 60) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_81;
          }
          char v35 = 32 * *(unsigned char *)(a1 + 60);
          goto LABEL_69;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_81;
        }
        unsigned int v32 = objc_alloc_init(GEOMapLayerDataServiceVersion);
        if (!GEOMapLayerDataServiceVersionReadAllFrom((uint64_t)v32, (void *)v3)) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        uint64_t v33 = 32;
        goto LABEL_60;
      case 3:
        if (!v27) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_81;
          }
          char v35 = 16 * *(unsigned char *)(a1 + 60);
LABEL_69:
          v7 += v35 >> 7;
          goto LABEL_72;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_81;
        }
        unsigned int v32 = objc_alloc_init(GEOMapLayerDataServiceVersion);
        if (!GEOMapLayerDataServiceVersionReadAllFrom((uint64_t)v32, (void *)v3)) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        uint64_t v33 = 40;
        goto LABEL_60;
      case 4:
        if (!v27)
        {
LABEL_61:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_81;
          }
LABEL_72:
          if (!(v12 & 1 | (v7 != 0))) {
            goto LABEL_73;
          }
          continue;
        }
        if (*(unsigned char *)(a1 + 60))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_81:
            char v36 = 0;
            goto LABEL_82;
          }
          v7 -= *(unsigned char *)(a1 + 60) & 1;
          goto LABEL_72;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_81;
        }
        unsigned int v32 = objc_alloc_init(GEOMapLayerDataServiceLayerIndex);
        if (GEOMapLayerDataServiceLayerIndexReadAllFrom((uint64_t)v32, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v33 = 16;
LABEL_60:
          unint64_t v34 = *(void **)(a1 + v33);
          *(void *)(a1 + v33) = v32;

          --v7;
          int v15 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_72;
        }
LABEL_88:

        char v36 = 0;
        int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_82:
        *(unsigned char *)(a1 + 60) |= 2u;
        *(unsigned char *)(a1 + 60) |= 4u;
        *(unsigned char *)(a1 + 60) |= 8u;
        *(unsigned char *)(a1 + 60) |= 1u;
        if (v36)
        {
LABEL_83:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_84;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v12)
          {
LABEL_84:
            char v39 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_81;
        }
        goto LABEL_72;
    }
  }
}

void sub_189F57698(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F57780(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMapLayerDataServiceVersionUpdateReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOMapLayerDataServiceVersionUpdateReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 48) = [v6 position];
      *(_DWORD *)(a1 + 52) = [v6 length];
      unint64_t Specified = GEOMapLayerDataServiceVersionUpdateReadSpecified(a1, (unint64_t)v6, (int *)&GEOMapLayerDataServiceVersionUpdateReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189F578FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F57AB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F57C48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMapLayerDataServiceVersionedLayerReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    BOOL v14 = 0;
  }
  else {
    BOOL v14 = a3;
  }
  BOOL v15 = v14 == 0;
  if (v12) {
    BOOL v15 = 1;
  }
  BOOL v45 = v15;
  char v16 = (int *)MEMORY[0x1E4F940E8];
  char v17 = (int *)MEMORY[0x1E4F940C8];
  unsigned int v18 = &OBJC_IVAR___GEOMapItemStorage__readerMarkLength;
  unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_64;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v16;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_26;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_26:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v22 = 0;
    }
LABEL_28:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_64:
      if (v13)
      {
        char v40 = 1;
        goto LABEL_73;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            int v42 = *v14++;
            int v41 = v42;
            if (v42 != 1 && v41 != 2) {
              break;
            }
            *(unsigned char *)(a1 + v18[846]) |= v41;
          }
        }
        while (v41);
      }
      goto LABEL_74;
    }
    unint64_t v29 = v22 >> 3;
    BOOL v30 = v13;
    if (!v45)
    {
      BOOL v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 != 2)
    {
      if (v29 != 1)
      {
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_72;
        }
        goto LABEL_55;
      }
      if (v30)
      {
        if (*(unsigned char *)(a1 + v18[846]))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_72;
          }
          v7 -= *(unsigned char *)(a1 + v18[846]) & 1;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_72;
          }
          char v35 = v17;
          char v36 = objc_alloc_init(GEOMapLayerDataServiceLayer);
          if (!GEOMapLayerDataServiceLayerReadAllFrom((uint64_t)v36, (void *)v3)) {
            goto LABEL_79;
          }
          PBReaderRecallMark();
          uint64_t v37 = 16;
LABEL_51:
          char v38 = *(void **)(a1 + v37);
          *(void *)(a1 + v37) = v36;

          --v7;
          char v17 = v35;
          unsigned int v18 = &OBJC_IVAR___GEOMapItemStorage__readerMarkLength;
        }
LABEL_55:
        if (v7) {
          char v39 = 1;
        }
        else {
          char v39 = v13;
        }
        if ((v39 & 1) == 0) {
          goto LABEL_64;
        }
        continue;
      }
LABEL_54:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_72;
      }
      goto LABEL_55;
    }
    break;
  }
  if (!v30) {
    goto LABEL_54;
  }
  if ((*(unsigned char *)(a1 + v18[846]) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_72:
      char v40 = 0;
      goto LABEL_73;
    }
    v7 += *(unsigned __int8 *)(a1 + v18[846]) << 30 >> 31;
    goto LABEL_55;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_72;
  }
  char v35 = v17;
  char v36 = objc_alloc_init(GEOMapLayerDataServiceVersion);
  if (GEOMapLayerDataServiceVersionReadAllFrom((uint64_t)v36, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v37 = 24;
    goto LABEL_51;
  }
LABEL_79:

  char v40 = 0;
  char v17 = v35;
  unsigned int v18 = &OBJC_IVAR___GEOMapItemStorage__readerMarkLength;
LABEL_73:
  *(unsigned char *)(a1 + v18[846]) |= 1u;
  *(unsigned char *)(a1 + v18[846]) |= 2u;
  if (v40)
  {
LABEL_74:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if (!v13) {
      return v3;
    }
    goto LABEL_75;
  }
  unint64_t v3 = 0;
  if (v13)
  {
LABEL_75:
    char v43 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189F585DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F586BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMapLayerDataServiceVersionedLayerReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOMapLayerDataServiceVersionedLayerReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 32) = [v6 position];
      *(_DWORD *)(a1 + 36) = [v6 length];
      unint64_t Specified = GEOMapLayerDataServiceVersionedLayerReadSpecified(a1, (unint64_t)v6, GEOMapLayerDataServiceVersionedLayerReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189F58838(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F589BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F58B14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPlaceIdentifierReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          uint64_t v23 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v23, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          unint64_t v24 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v23;
        }
        else if ((v10 >> 3) == 1)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_36;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            uint64_t v19 = 0;
          }
LABEL_38:
          *(void *)(a1 + 24) = v19;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189F59424(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPlaceIdentifierIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          unint64_t v18 = *(void *)&a1[v17];
          if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v19 = v18 + 1;
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_189F59CE4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_189F5A5F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_189F5A908(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5A9FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5AB3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5AD04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5AE80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5AF3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189F5AFFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5B1B8(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_189F5B298(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5B378(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5B840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,id a38)
{
  _Block_object_dispose(&a33, 8);

  _Unwind_Resume(a1);
}

void sub_189F5B93C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_189F5BAA4(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_189F5BDC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5C0B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5C1F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5C268(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5C338(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5C44C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5C5AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189F5C6B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_189F5C7A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189F5CB24(_Unwind_Exception *a1)
{
  char v6 = v5;

  _Unwind_Resume(a1);
}

void sub_189F5CEE4(_Unwind_Exception *a1)
{
  unsigned int v7 = v4;

  _Unwind_Resume(a1);
}

void sub_189F5CFCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5D200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_189F5D504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_189F5D620(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5D70C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5D8C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5DC0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5DDF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5DFBC(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_189F5E1F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5E260()
{
}

void sub_189F5E410(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5E4CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5E65C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5E6C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F5E840(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id GEOGetOfflineDataConfigurationLog()
{
  if (qword_1EB2A01F8 != -1) {
    dispatch_once(&qword_1EB2A01F8, &__block_literal_global_153);
  }
  uint64_t v0 = (void *)_MergedGlobals_293;

  return v0;
}

void __GEOGetOfflineDataConfigurationLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "OfflineDataConfiguration");
  uint64_t v1 = (void *)_MergedGlobals_293;
  _MergedGlobals_293 = (uint64_t)v0;
}

void sub_189F5F090(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_189F5F204(_Unwind_Exception *a1)
{
}

void sub_189F5F93C(_Unwind_Exception *a1)
{
}

void sub_189F5F9D8(_Unwind_Exception *a1)
{
}

void sub_189F5FBC4(_Unwind_Exception *a1)
{
}

void sub_189F5FD34(_Unwind_Exception *a1)
{
}

void sub_189F5FDD8(_Unwind_Exception *a1)
{
}

void sub_189F60248(_Unwind_Exception *a1)
{
}

id _versionDictionaryFromProtobuf(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = [MEMORY[0x1E4F1CA60] dictionaryWithCapacity:a2];
  if (v2)
  {
    uint64_t v5 = (unsigned __int8 *)(a1 + 16);
    do
    {
      unsigned int v6 = *((_DWORD *)v5 - 4);
      uint64_t v7 = *((void *)v5 - 1);
      int v8 = *v5;
      v5 += 24;
      uint64_t v9 = (v8 << 31 >> 31) & v6;
      unint64_t v10 = [NSNumber numberWithUnsignedLongLong:v7];
      char v11 = [NSNumber numberWithInt:v9];
      [v4 setObject:v10 forKeyedSubscript:v11];

      --v2;
    }
    while (v2);
  }

  return v4;
}

void sub_189F60ACC(_Unwind_Exception *a1)
{
}

void sub_189F60C10(_Unwind_Exception *a1)
{
}

void sub_189F615D0(_Unwind_Exception *a1)
{
}

void sub_189F617D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double GEOS2TileKeyMake(int a1, int a2, char a3, char a4, char a5, char a6, unsigned int a7)
{
  if (a7 <= 0x19 && ((1 << a7) & 0x200101C) != 0)
  {
    char v7 = -112;
  }
  else if (a7 == 26)
  {
    char v7 = -112;
  }
  else
  {
    char v7 = 16;
  }
  v10.i8[14] = 0;
  v10.i16[6] = 0;
  v10.i32[2] = ((a5 & 0xF) << 11) | ((a6 & 0xF) << 15) | ((unsigned __int16)(a7 & 0x3FFF) >> 3);
  v10.i64[0] = (a1 << 6) | ((unint64_t)(a2 & 0x3FFFFFF) << 32) | a3 & 0x3F | ((unint64_t)(a4 & 7) << 58) | ((unint64_t)(a7 & 0x3FFF) << 61);
  int8x16_t v8 = vextq_s8(v10, v10, 0xFuLL);
  v8.i8[0] = v7;
  return *(double *)v8.i64;
}

void sub_189F64028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

void sub_189F641E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_189F644C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_189F64D88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

id _GEOConfigStorageCFPrefsReadWrite()
{
  _initStorage(0);
  os_log_t v0 = (void *)qword_1EB2A0228;
  if (qword_1EB2A0228)
  {
    id v1 = (id)qword_1EB2A0228;
  }
  else if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)unint64_t v3 = 0;
    _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Assertion failed: _cfprefs_readwrite_storage != ((void *)0)", v3, 2u);
  }

  return v0;
}

void __GEOGetGEOComposedStringLog_block_invoke_3()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOComposedString");
  id v1 = (void *)_MergedGlobals_3_1;
  _MergedGlobals_3_1 = (uint64_t)v0;
}

uint64_t GEOCoarseLocationTerritoryInfoContainsPoint(void *a1, double *a2, double *a3, int64x2_t *a4)
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  int v8 = [v7 hasPolygon];
  *a4 = vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
  a4[1] = vdupq_n_s64(0xFFEFFFFFFFFFFFFFLL);
  uint64_t v9 = a4 + 1;
  if (v8)
  {
    int8x16_t v10 = [v7 polygon];
    char v11 = [v10 shell];
    _polygonForRing((uint64_t)v43, v11, a2, a4);

    uint64_t v12 = 0;
    char v13 = 1;
    do
    {
      double v14 = a3[v12];
      if (v14 < *(double *)&a4->i64[v12] || v14 >= *(double *)&v9->i64[v12]) {
        goto LABEL_27;
      }
      char v15 = v13;
      char v13 = 0;
      uint64_t v12 = 1;
    }
    while ((v15 & 1) != 0);
    if (!geo::containsPoint<double>(v43, a3))
    {
LABEL_27:
      uint64_t v26 = 0;
      goto LABEL_28;
    }
    long long v41 = 0u;
    long long v42 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    unsigned int v16 = [v7 polygon];
    uint64_t v17 = [v16 holes];

    uint64_t v18 = [v17 countByEnumeratingWithState:&v39 objects:v44 count:16];
    if (v18)
    {
      uint64_t v19 = *(void *)v40;
      int64x2_t v33 = vdupq_n_s64(0xFFEFFFFFFFFFFFFFLL);
      int64x2_t v34 = vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
      while (2)
      {
        uint64_t v20 = 0;
        while (2)
        {
          if (*(void *)v40 != v19) {
            objc_enumerationMutation(v17);
          }
          unint64_t v21 = *(void **)(*((void *)&v39 + 1) + 8 * v20);
          *(int64x2_t *)uint64_t v37 = v34;
          int64x2_t v38 = v33;
          _polygonForRing((uint64_t)&__p, v21, a2, (int64x2_t *)v37);
          uint64_t v22 = 0;
          char v23 = 1;
          while (1)
          {
            double v24 = a3[v22];
            if (v24 < *(double *)&v37[v22] || v24 >= *(double *)&v38.i64[v22]) {
              break;
            }
            char v25 = v23;
            char v23 = 0;
            uint64_t v22 = 1;
            if ((v25 & 1) == 0)
            {
              if (geo::containsPoint<double>((uint64_t *)&__p, a3))
              {
                if (__p)
                {
                  char v36 = __p;
                  operator delete(__p);
                }
                uint64_t v26 = 0;
                goto LABEL_38;
              }
              break;
            }
          }
          if (__p)
          {
            char v36 = __p;
            operator delete(__p);
          }
          if (++v20 != v18) {
            continue;
          }
          break;
        }
        uint64_t v18 = [v17 countByEnumeratingWithState:&v39 objects:v44 count:16];
        if (v18) {
          continue;
        }
        break;
      }
    }
    uint64_t v26 = 1;
LABEL_38:

LABEL_28:
    BOOL v31 = (void *)v43[0];
    if (v43[0])
    {
      v43[1] = v43[0];
LABEL_33:
      operator delete(v31);
    }
  }
  else
  {
    _polygonForPackedPoints((char **)v37, [v7 coordinates], objc_msgSend(v7, "coordinatesCount"), a2, 4, a4);
    uint64_t v27 = 0;
    char v28 = 1;
    while (1)
    {
      double v29 = a3[v27];
      if (v29 < *(double *)&a4->i64[v27] || v29 >= *(double *)&v9->i64[v27]) {
        break;
      }
      char v30 = v28;
      char v28 = 0;
      uint64_t v27 = 1;
      if ((v30 & 1) == 0)
      {
        uint64_t v26 = geo::containsPoint<double>((uint64_t *)v37, a3);
        goto LABEL_31;
      }
    }
    uint64_t v26 = 0;
LABEL_31:
    BOOL v31 = v37[0];
    if (v37[0])
    {
      v37[1] = v37[0];
      goto LABEL_33;
    }
  }

  return v26;
}

void sub_189F684F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void _polygonForRing(uint64_t a1, void *a2, double *a3, int64x2_t *a4)
{
  id v6 = a2;
  long long v29 = 0uLL;
  char v30 = 0;
  std::vector<gm::Matrix<double,2,1>>::reserve((void **)&v29, [v6 pointsCount]);
  unint64_t v7 = 0;
  *a4 = vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
  a4[1] = vdupq_n_s64(0xFFEFFFFFFFFFFFFFLL);
  int v8 = a4 + 1;
  while (v7 < [v6 pointsCount])
  {
    uint64_t v9 = [v6 pointsAtIndex:v7];
    double v10 = a3[1];
    *(double *)&long long v28 = *a3 + (double)SHIDWORD(v9) * 0.00000001;
    *((double *)&v28 + 1) = v10 - (double)(int)v9 * 0.00000001;
    uint64_t v11 = *((void *)&v29 + 1);
    if (*((void *)&v29 + 1) >= (unint64_t)v30)
    {
      uint64_t v13 = (uint64_t)(*((void *)&v29 + 1) - v29) >> 4;
      unint64_t v14 = v13 + 1;
      if ((unint64_t)(v13 + 1) >> 60) {
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v15 = (uint64_t)&v30[-v29];
      if ((uint64_t)&v30[-v29] >> 3 > v14) {
        unint64_t v14 = v15 >> 3;
      }
      if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v16 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v16 = v14;
      }
      if (v16) {
        uint64_t v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>((uint64_t)&v30, v16);
      }
      else {
        uint64_t v17 = 0;
      }
      uint64_t v18 = &v17[16 * v13];
      *(_OWORD *)uint64_t v18 = v28;
      uint64_t v19 = (char *)*((void *)&v29 + 1);
      uint64_t v20 = (char *)v29;
      unint64_t v21 = v18;
      if (*((void *)&v29 + 1) != (void)v29)
      {
        do
        {
          *((_OWORD *)v21 - 1) = *((_OWORD *)v19 - 1);
          v21 -= 16;
          v19 -= 16;
        }
        while (v19 != v20);
        uint64_t v19 = (char *)v29;
      }
      uint64_t v12 = v18 + 16;
      *(void *)&long long v29 = v21;
      *((void *)&v29 + 1) = v18 + 16;
      char v30 = &v17[16 * v16];
      if (v19) {
        operator delete(v19);
      }
    }
    else
    {
      **((_OWORD **)&v29 + 1) = v28;
      uint64_t v12 = (_OWORD *)(v11 + 16);
    }
    uint64_t v22 = 0;
    *((void *)&v29 + 1) = v12;
    char v23 = 1;
    do
    {
      char v24 = v23;
      double v25 = *((double *)&v28 + v22);
      double v26 = *(double *)&a4->i64[v22];
      if (v25 < v26) {
        double v26 = *((double *)&v28 + v22);
      }
      *(double *)&a4->i64[v22] = v26;
      if (*(double *)&v8->i64[v22] >= v25) {
        double v25 = *(double *)&v8->i64[v22];
      }
      *(double *)&v8->i64[v22] = v25;
      uint64_t v22 = 1;
      char v23 = 0;
    }
    while ((v24 & 1) != 0);
    ++v7;
  }
  *(_OWORD *)a1 = v29;
  *(void *)(a1 + 16) = v30;
}

void sub_189F687B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

id GEOGetGloriaUtilLog(void)
{
  if (qword_1EB2A0260 != -1) {
    dispatch_once(&qword_1EB2A0260, &__block_literal_global_157);
  }
  os_log_t v0 = (void *)_MergedGlobals_297;

  return v0;
}

id _polygonToString(void *a1)
{
  uint64_t v2 = [MEMORY[0x1E4F28E78] string];
  [v2 appendString:@"{\n"];
  unint64_t v3 = (void *)*a1;
  uint64_t v4 = (void *)a1[1];
  if ((void *)*a1 != v4)
  {
    do
    {
      [v2 appendFormat:@"  %f, %f\n", v3[1], *v3];
      v3 += 2;
    }
    while (v3 != v4);
  }
  [v2 appendString:@"}"];

  return v2;
}

void sub_189F688DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void GEOGloriaPopulateQuadKeysWithinRadiusFromCenterOfTile(unint64_t a1, uint64_t **a2, double a3)
{
  if (a3 >= 0.0)
  {
    int v5 = 63 - __clz(a1);
    int v6 = (v5 + ((v5 & 0x80) >> 7)) << 24 >> 25;
    char v15 = v6;
    unint64_t v14 = a1 - gloria::LEADING_BITS_VALUE_LUT[v6];
    gloria::TileId::ToXYZ((gloria::TileId *)&v14, &v13);
    long double v7 = gloria::TileCoordinate::YToLat((gloria::TileCoordinate *)&v13);
    long double v8 = cos(v7 * 0.0174532925);
    gloria::TileId::Neighbors((gloria::TileId *)&v14, vcvtpd_u64_f64(a3 / (40075016.7 / (double)(1 << v6) * v8)), (uint64_t)&v17);
    uint64_t v9 = v17;
    if (v17 != v18)
    {
      do
      {
        unint64_t v16 = gloria::LEADING_BITS_VALUE_LUT[*((unsigned __int8 *)v9 + 40)] | (unint64_t)v9[4];
        std::__tree<AddrObjGoogle::protobuf::Descriptor const*>::__emplace_unique_key_args<AddrObjGoogle::protobuf::Descriptor const*,AddrObjGoogle::protobuf::Descriptor const*>(a2, &v16, (uint64_t *)&v16);
        double v10 = v9[1];
        if (v10)
        {
          do
          {
            uint64_t v11 = (void **)v10;
            double v10 = (void *)*v10;
          }
          while (v10);
        }
        else
        {
          do
          {
            uint64_t v11 = (void **)v9[2];
            BOOL v12 = *v11 == v9;
            uint64_t v9 = v11;
          }
          while (!v12);
        }
        uint64_t v9 = v11;
      }
      while (v11 != v18);
    }
    std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::destroy((uint64_t)&v17, v18[0]);
  }
}

void sub_189F68A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, void *a17)
{
}

id GEOGetQuadKeysWithinRadiusFromCoordinate(int a1, int a2, uint64_t a3, const unsigned __int8 *a4, double a5, double a6)
{
  unint64_t v14 = 0;
  uint64_t v15 = 0;
  int8x16_t v13 = (uint64_t *)&v14;
  GEOGloriaPopulateQuadKeysWithinRadiusFromCoordinate(a1, &v13, a5, a6, (double)a2, a3, a4);
  int v6 = [MEMORY[0x1E4F1CA80] setWithCapacity:v15];
  long double v7 = v13;
  if (v13 != (uint64_t *)&v14)
  {
    do
    {
      long double v8 = [NSNumber numberWithUnsignedLongLong:v7[4]];
      [v6 addObject:v8];

      uint64_t v9 = (uint64_t *)v7[1];
      if (v9)
      {
        do
        {
          double v10 = v9;
          uint64_t v9 = (uint64_t *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          double v10 = (uint64_t *)v7[2];
          BOOL v11 = *v10 == (void)v7;
          long double v7 = v10;
        }
        while (!v11);
      }
      long double v7 = v10;
    }
    while (v10 != (uint64_t *)&v14);
  }
  std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::destroy((uint64_t)&v13, v14);

  return v6;
}

void sub_189F68B44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
}

id GEOGetQuadKeysWithinRadiusFromCenterOfTile(unint64_t a1, int a2)
{
  double v10 = 0;
  uint64_t v11 = 0;
  uint64_t v9 = (uint64_t *)&v10;
  GEOGloriaPopulateQuadKeysWithinRadiusFromCenterOfTile(a1, &v9, (double)a2);
  uint64_t v2 = [MEMORY[0x1E4F1CA80] setWithCapacity:v11];
  unint64_t v3 = v9;
  if (v9 != (uint64_t *)&v10)
  {
    do
    {
      uint64_t v4 = [NSNumber numberWithUnsignedLongLong:v3[4]];
      [v2 addObject:v4];

      int v5 = (uint64_t *)v3[1];
      if (v5)
      {
        do
        {
          int v6 = v5;
          int v5 = (uint64_t *)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          int v6 = (uint64_t *)v3[2];
          BOOL v7 = *v6 == (void)v3;
          unint64_t v3 = v6;
        }
        while (!v7);
      }
      unint64_t v3 = v6;
    }
    while (v6 != (uint64_t *)&v10);
  }
  std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::destroy((uint64_t)&v9, v10);

  return v2;
}

void sub_189F68C6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
}

void ___ZL19GEOGetGloriaUtilLogv_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GloriaUtil");
  id v1 = (void *)_MergedGlobals_297;
  _MergedGlobals_297 = (uint64_t)v0;
}

id GEOGetDirectionsServiceLog_0()
{
  if (qword_1EB2A0280 != -1) {
    dispatch_once(&qword_1EB2A0280, &__block_literal_global_307);
  }
  os_log_t v0 = (void *)qword_1EB2A0278;

  return v0;
}

__CFString *GEODirectionsServiceRequestTypeAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xF) {
    return @"Unknown";
  }
  else {
    return off_1E53EA838[a1 - 1];
  }
}

void __GEOGetDirectionsServiceLog_block_invoke_0()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "DirectionsService");
  id v1 = (void *)qword_1EB2A0278;
  qword_1EB2A0278 = (uint64_t)v0;
}

uint64_t GEOCacheControlMaxAgeFromResponse(void *a1)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v1 = [a1 valueForHTTPHeaderField:@"Cache-Control"];
  if (v1)
  {
    uint64_t v2 = [MEMORY[0x1E4F28B88] whitespaceAndNewlineCharacterSet];
    [v1 componentsSeparatedByString:@","];
    long long v20 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    id v3 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v4 = [v3 countByEnumeratingWithState:&v20 objects:v24 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v21;
      BOOL v7 = @"=";
      while (2)
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v21 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v9 = [*(id *)(*((void *)&v20 + 1) + 8 * i) stringByTrimmingCharactersInSet:v2];
          double v10 = v7;
          uint64_t v11 = [v9 componentsSeparatedByString:v7];

          if ([v11 count] == 2)
          {
            BOOL v12 = [v11 firstObject];
            int v13 = [v12 isEqualToString:@"max-age"];

            if (v13)
            {
              uint64_t v15 = (void *)MEMORY[0x1E4F28FE8];
              unint64_t v16 = [v11 lastObject];
              uint64_t v17 = [v15 scannerWithString:v16];

              uint64_t v19 = 0;
              uint64_t v14 = 0x7FFFFFFFFFFFFFFFLL;
              if ([v17 scanUnsignedLongLong:&v19]
                && [v17 isAtEnd])
              {
                uint64_t v14 = v19;
              }

              goto LABEL_17;
            }
          }

          BOOL v7 = v10;
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v20 objects:v24 count:16];
        uint64_t v14 = 0x7FFFFFFFFFFFFFFFLL;
        if (v5) {
          continue;
        }
        break;
      }
    }
    else
    {
      uint64_t v14 = 0x7FFFFFFFFFFFFFFFLL;
    }
LABEL_17:
  }
  else
  {
    uint64_t v14 = 0x7FFFFFFFFFFFFFFFLL;
  }

  return v14;
}

void sub_189F6D8D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_189F6E980(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventRefineSearchSessionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 3) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v7 & 1) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  BOOL v59 = v15;
  unint64_t v16 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  uint64_t v19 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_85;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v16;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v20 += 7;
      BOOL v26 = v21++ >= 9;
      if (v26)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v22 = 0;
    }
LABEL_29:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_85:
      if (v13)
      {
        char v53 = 1;
        goto LABEL_96;
      }
      if (!v14) {
        goto LABEL_97;
      }
      while (1)
      {
        int v55 = *v14++;
        int v54 = v55;
        if (v55 == 3) {
          break;
        }
        if (v54 == 4)
        {
          char v56 = 8;
LABEL_94:
          *(unsigned char *)(a1 + v19[157]) |= v56;
        }
        else if (!v54)
        {
          goto LABEL_97;
        }
      }
      char v56 = 4;
      goto LABEL_94;
    }
    unint64_t v29 = v22 >> 3;
    BOOL v30 = v13;
    if (!v59)
    {
      BOOL v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if ((v7 & 1) == 0) {
          goto LABEL_67;
        }
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        *(unsigned char *)(a1 + v19[157]) |= 2u;
        while (1)
        {
          uint64_t v38 = *v16;
          unint64_t v39 = *(void *)(v3 + v38);
          if (v39 == -1 || v39 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v40 = *(unsigned char *)(*(void *)(v3 + *v18) + v39);
          *(void *)(v3 + v38) = v39 + 1;
          v37 |= (unint64_t)(v40 & 0x7F) << v35;
          if ((v40 & 0x80) == 0) {
            goto LABEL_70;
          }
          v35 += 7;
          BOOL v26 = v36++ >= 9;
          if (v26)
          {
            LODWORD(v37) = 0;
            goto LABEL_72;
          }
        }
        *(unsigned char *)(v3 + *v17) = 1;
LABEL_70:
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v37) = 0;
        }
LABEL_72:
        uint64_t v51 = 48;
        goto LABEL_77;
      case 2:
        if ((v7 & 1) == 0) {
          goto LABEL_67;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v37 = 0;
        *(unsigned char *)(a1 + v19[157]) |= 1u;
        while (2)
        {
          uint64_t v44 = *v16;
          unint64_t v45 = *(void *)(v3 + v44);
          if (v45 == -1 || v45 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(v3 + *v18) + v45);
            *(void *)(v3 + v44) = v45 + 1;
            v37 |= (unint64_t)(v46 & 0x7F) << v42;
            if (v46 < 0)
            {
              v42 += 7;
              BOOL v26 = v43++ >= 9;
              if (v26)
              {
                LODWORD(v37) = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v37) = 0;
        }
LABEL_76:
        uint64_t v51 = 44;
LABEL_77:
        *(_DWORD *)(a1 + v51) = v37;
        goto LABEL_81;
      case 3:
        if (!v30) {
          goto LABEL_67;
        }
        if ((*(unsigned char *)(a1 + v19[157]) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_102:
            char v53 = 0;
            goto LABEL_104;
          }
          v8 += *(unsigned __int8 *)(a1 + v19[157]) << 29 >> 31;
        }
        else
        {
          uint64_t v47 = PBReaderReadString();
          BOOL v48 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v47;

          --v8;
        }
        goto LABEL_80;
      case 4:
        if (!v30 || (*(unsigned char *)(a1 + v19[157]) & 8) != 0)
        {
LABEL_67:
          char v50 = PBReaderSkipValueWithTag();
          uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
          if ((v50 & 1) == 0)
          {
LABEL_95:
            char v53 = 0;
            goto LABEL_96;
          }
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_102;
        }
        uint64_t v49 = objc_alloc_init(GEOSuggestionItem);
        if (GEOSuggestionItemReadAllFrom((uint64_t)v49, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOLogMsgEventRefineSearchSession _addNoFlagsSuggestionItem:](a1, v49);

          uint64_t v19 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
LABEL_80:
          uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_81:
          if (v8) {
            char v52 = 1;
          }
          else {
            char v52 = v13;
          }
          if ((v52 & 1) == 0) {
            goto LABEL_85;
          }
          continue;
        }

        char v53 = 0;
        uint64_t v19 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
LABEL_104:
        uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_96:
        *(unsigned char *)(a1 + v19[157]) |= 4u;
        *(unsigned char *)(a1 + v19[157]) |= 8u;
        if (v53)
        {
LABEL_97:
          unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
          if (v13) {
            goto LABEL_98;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v13)
          {
LABEL_98:
            char v57 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v41 = PBReaderSkipValueWithTag();
        uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v41) {
          goto LABEL_95;
        }
        goto LABEL_81;
    }
  }
}

void sub_189F6F0A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F6FC04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgEventRefineSearchSessionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOLogMsgEventRefineSearchSessionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventRefineSearchSessionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOLogMsgEventRefineSearchSessionReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOLogMsgEventRefineSearchSessionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventRefineSearchSessionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgEventRefineSearchSessionCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189F6FE94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventRefineSearchSessionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventRefineSearchSessionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F6FEF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventRefineSearchSessionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_35;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_43;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v22 = 0;
          break;
        case 3u:
          if (v14 == 2) {
            goto LABEL_37;
          }
          goto LABEL_46;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOSuggestionItemIsValid(a1)) {
            goto LABEL_46;
          }
          PBReaderRecallMark();
          continue;
        default:
LABEL_37:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v23 = *v2;
        unint64_t v24 = *(void *)&a1[v23];
        if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v25 = v24 + 1;
        int v26 = *(char *)(*(void *)&a1[*v5] + v24);
        *(void *)&a1[v23] = v25;
        if (v26 < 0)
        {
          BOOL v21 = v22++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_43;
      }
LABEL_35:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOSuggestionItemIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2) {
            goto LABEL_50;
          }
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_46;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_47;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            unint64_t v24 = *(void *)&a1[v23];
            if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
              goto LABEL_46;
            }
            unint64_t v25 = v24 + 1;
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_47;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v27 = 0;
          break;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_50:
          BOOL v32 = 0;
          goto LABEL_49;
      }
      while (1)
      {
        uint64_t v28 = *v2;
        unint64_t v29 = *(void *)&a1[v28];
        if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v30 = v29 + 1;
        int v31 = *(char *)(*(void *)&a1[*v5] + v29);
        *(void *)&a1[v28] = v30;
        if (v31 < 0)
        {
          BOOL v21 = v27++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_47;
      }
LABEL_46:
      a1[*v4] = 1;
LABEL_47:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v32;
}

void sub_189F70710(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventRefineSearchSessionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189F70B80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSuggestionItemReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            uint64_t v17 = PBReaderReadString();
            unint64_t v18 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v17;

            continue;
          case 2u:
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 24) |= 4u;
            while (1)
            {
              uint64_t v22 = *v4;
              unint64_t v23 = *(void *)&v3[v22];
              if (v23 == -1 || v23 >= *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
              *(void *)&v3[v22] = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if ((v24 & 0x80) == 0) {
                goto LABEL_45;
              }
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                uint64_t v21 = 0;
                goto LABEL_47;
              }
            }
            v3[*v6] = 1;
LABEL_45:
            if (v3[*v6]) {
              uint64_t v21 = 0;
            }
LABEL_47:
            BOOL v37 = v21 != 0;
            uint64_t v38 = 21;
            goto LABEL_52;
          case 3u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            *(unsigned char *)(a1 + 24) |= 2u;
            while (2)
            {
              uint64_t v28 = *v4;
              unint64_t v29 = *(void *)&v3[v28];
              if (v29 == -1 || v29 >= *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
                *(void *)&v3[v28] = v29 + 1;
                v27 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  BOOL v14 = v26++ >= 9;
                  if (v14)
                  {
                    uint64_t v27 = 0;
                    goto LABEL_51;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v27 = 0;
            }
LABEL_51:
            BOOL v37 = v27 != 0;
            uint64_t v38 = 20;
LABEL_52:
            *(unsigned char *)(a1 + v38) = v37;
            continue;
          case 4u:
            char v31 = 0;
            unsigned int v32 = 0;
            uint64_t v33 = 0;
            *(unsigned char *)(a1 + 24) |= 1u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_59;
            }
            continue;
        }
        while (1)
        {
          uint64_t v34 = *v4;
          unint64_t v35 = *(void *)&v3[v34];
          if (v35 == -1 || v35 >= *(void *)&v3[*v5]) {
            break;
          }
          char v36 = *(unsigned char *)(*(void *)&v3[*v7] + v35);
          *(void *)&v3[v34] = v35 + 1;
          v33 |= (unint64_t)(v36 & 0x7F) << v31;
          if ((v36 & 0x80) == 0) {
            goto LABEL_54;
          }
          v31 += 7;
          BOOL v14 = v32++ >= 9;
          if (v14)
          {
            LODWORD(v33) = 0;
            goto LABEL_56;
          }
        }
        v3[*v6] = 1;
LABEL_54:
        if (v3[*v6]) {
          LODWORD(v33) = 0;
        }
LABEL_56:
        *(_DWORD *)(a1 + 16) = v33;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v39 = v3[*v6] == 0;
  }
  else
  {
LABEL_59:
    BOOL v39 = 0;
  }
  objc_sync_exit(v3);

  return v39;
}

void sub_189F718E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSuggestionItemReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOSuggestionItemReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F71954(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F720EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVenueIdentifierReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 144));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 140);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 136)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int16 *)(a1 + 152) >> 11) & 1)
      + ((*(unsigned __int16 *)(a1 + 152) >> 10) & 1)
      + ((*(unsigned __int16 *)(a1 + 152) >> 9) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 != 0;
        int v15 = v14 & ~v10 | v7;
        int v16 = v14 | v10;
        if (((v14 | v10) | v8)) {
          uint64_t v17 = 0;
        }
        else {
          uint64_t v17 = a3;
        }
        unint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        int v19 = 1;
        unsigned int v20 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_208;
        }
        char v121 = v15;
        int v123 = (v9 != 0) | v16 | v15;
        char v124 = (v17 == 0) | v16;
        uint64_t v21 = (int *)MEMORY[0x1E4F940B8];
        char v122 = v14 | v10;
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v20)) {
      goto LABEL_206;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v18;
      unint64_t v26 = *(void *)(v3 + v25);
      if (v26 == -1 || v26 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v21) + v26);
      *(void *)(v3 + v25) = v26 + 1;
      v24 |= (unint64_t)(v27 & 0x7F) << v22;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v22 += 7;
      BOOL v28 = v23++ >= 9;
      if (v28)
      {
        unint64_t v24 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v24 = 0;
    }
LABEL_26:
    int v30 = v24 & 7;
    if (v29 || v30 == 4)
    {
LABEL_206:
      int v19 = 1;
      goto LABEL_207;
    }
    unint64_t v32 = v24 >> 3;
    BOOL v33 = v16;
    if ((v124 & 1) == 0)
    {
      uint64_t v34 = v17;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 152) |= 0x80u;
        while (1)
        {
          uint64_t v41 = *v18;
          unint64_t v42 = *(void *)(v3 + v41);
          if (v42 == -1 || v42 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v21) + v42);
          *(void *)(v3 + v41) = v42 + 1;
          v40 |= (unint64_t)(v43 & 0x7F) << v38;
          if ((v43 & 0x80) == 0) {
            goto LABEL_149;
          }
          v38 += 7;
          BOOL v28 = v39++ >= 9;
          if (v28)
          {
            uint64_t v40 = 0;
            goto LABEL_151;
          }
        }
        *(unsigned char *)(v3 + *v20) = 1;
LABEL_149:
        if (*(unsigned char *)(v3 + *v20)) {
          uint64_t v40 = 0;
        }
LABEL_151:
        uint64_t v103 = 128;
        goto LABEL_184;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 152) |= 1u;
        while (2)
        {
          uint64_t v46 = *v18;
          unint64_t v47 = *(void *)(v3 + v46);
          if (v47 == -1 || v47 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v21) + v47);
            *(void *)(v3 + v46) = v47 + 1;
            v40 |= (unint64_t)(v48 & 0x7F) << v44;
            if (v48 < 0)
            {
              v44 += 7;
              BOOL v28 = v45++ >= 9;
              if (v28)
              {
                uint64_t v40 = 0;
                goto LABEL_155;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          uint64_t v40 = 0;
        }
LABEL_155:
        uint64_t v103 = 72;
        goto LABEL_184;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 152) |= 0x10u;
        while (2)
        {
          uint64_t v51 = *v18;
          unint64_t v52 = *(void *)(v3 + v51);
          if (v52 == -1 || v52 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v21) + v52);
            *(void *)(v3 + v51) = v52 + 1;
            v40 |= (unint64_t)(v53 & 0x7F) << v49;
            if (v53 < 0)
            {
              v49 += 7;
              BOOL v28 = v50++ >= 9;
              if (v28)
              {
                uint64_t v40 = 0;
                goto LABEL_159;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          uint64_t v40 = 0;
        }
LABEL_159:
        uint64_t v103 = 104;
        goto LABEL_184;
      case 4:
        if (!v33 || (*(_WORD *)(a1 + 152) & 0x800) != 0) {
          goto LABEL_146;
        }
        if (v30 != 2)
        {
          char v104 = 0;
          unsigned int v105 = 0;
          uint64_t v106 = 0;
          while (1)
          {
            uint64_t v107 = *v18;
            unint64_t v108 = *(void *)(v3 + v107);
            if (v108 == -1 || v108 >= *(void *)(v3 + *v6)) {
              goto LABEL_204;
            }
            char v109 = *(unsigned char *)(*(void *)(v3 + *v21) + v108);
            *(void *)(v3 + v107) = v108 + 1;
            v106 |= (unint64_t)(v109 & 0x7F) << v104;
            if (v109 < 0)
            {
              v104 += 7;
              BOOL v28 = v105++ >= 9;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_205;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_226;
        }
        while (1)
        {
          int v54 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_188;
          }
          char v55 = 0;
          unsigned int v56 = 0;
          uint64_t v57 = 0;
          while (1)
          {
            uint64_t v58 = *v18;
            unint64_t v59 = *(void *)(v3 + v58);
            if (v59 == -1 || v59 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v60 = *(unsigned char *)(*(void *)(v3 + *v21) + v59);
            *(void *)(v3 + v58) = v59 + 1;
            v57 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              BOOL v28 = v56++ >= 9;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_76;
          }
          *(unsigned char *)(v3 + *v54) = 1;
LABEL_76:
          PBRepeatedUInt64Add();
        }
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 152) |= 0x20u;
        while (2)
        {
          uint64_t v63 = *v18;
          unint64_t v64 = *(void *)(v3 + v63);
          if (v64 == -1 || v64 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(v3 + *v21) + v64);
            *(void *)(v3 + v63) = v64 + 1;
            v40 |= (unint64_t)(v65 & 0x7F) << v61;
            if (v65 < 0)
            {
              v61 += 7;
              BOOL v28 = v62++ >= 9;
              if (v28)
              {
                uint64_t v40 = 0;
                goto LABEL_163;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          uint64_t v40 = 0;
        }
LABEL_163:
        uint64_t v103 = 112;
        goto LABEL_184;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        char v66 = 0;
        unsigned int v67 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 152) |= 4u;
        while (2)
        {
          uint64_t v68 = *v18;
          unint64_t v69 = *(void *)(v3 + v68);
          if (v69 == -1 || v69 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v70 = *(unsigned char *)(*(void *)(v3 + *v21) + v69);
            *(void *)(v3 + v68) = v69 + 1;
            v40 |= (unint64_t)(v70 & 0x7F) << v66;
            if (v70 < 0)
            {
              v66 += 7;
              BOOL v28 = v67++ >= 9;
              if (v28)
              {
                uint64_t v40 = 0;
                goto LABEL_167;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          uint64_t v40 = 0;
        }
LABEL_167:
        uint64_t v103 = 88;
        goto LABEL_184;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        char v71 = 0;
        unsigned int v72 = 0;
        uint64_t v73 = 0;
        *(_WORD *)(a1 + 152) |= 0x100u;
        while (2)
        {
          uint64_t v74 = *v18;
          unint64_t v75 = *(void *)(v3 + v74);
          if (v75 == -1 || v75 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v76 = *(unsigned char *)(*(void *)(v3 + *v21) + v75);
            *(void *)(v3 + v74) = v75 + 1;
            v73 |= (unint64_t)(v76 & 0x7F) << v71;
            if (v76 < 0)
            {
              v71 += 7;
              BOOL v28 = v72++ >= 9;
              if (v28)
              {
                LODWORD(v73) = 0;
                goto LABEL_171;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v73) = 0;
        }
LABEL_171:
        *(_DWORD *)(a1 + 148) = v73;
        goto LABEL_185;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        char v80 = 0;
        unsigned int v81 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 152) |= 2u;
        while (2)
        {
          uint64_t v82 = *v18;
          unint64_t v83 = *(void *)(v3 + v82);
          if (v83 == -1 || v83 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v84 = *(unsigned char *)(*(void *)(v3 + *v21) + v83);
            *(void *)(v3 + v82) = v83 + 1;
            v40 |= (unint64_t)(v84 & 0x7F) << v80;
            if (v84 < 0)
            {
              v80 += 7;
              BOOL v28 = v81++ >= 9;
              if (v28)
              {
                uint64_t v40 = 0;
                goto LABEL_175;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          uint64_t v40 = 0;
        }
LABEL_175:
        uint64_t v103 = 80;
        goto LABEL_184;
      case 10:
        if (!v33 || (*(_WORD *)(a1 + 152) & 0x400) != 0) {
          goto LABEL_146;
        }
        if (v30 != 2)
        {
          char v110 = 0;
          unsigned int v111 = 0;
          uint64_t v112 = 0;
          while (1)
          {
            uint64_t v113 = *v18;
            unint64_t v114 = *(void *)(v3 + v113);
            if (v114 == -1 || v114 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v115 = *(unsigned char *)(*(void *)(v3 + *v21) + v114);
            *(void *)(v3 + v113) = v114 + 1;
            v112 |= (unint64_t)(v115 & 0x7F) << v110;
            if (v115 < 0)
            {
              v110 += 7;
              BOOL v28 = v111++ >= 9;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_205;
          }
LABEL_204:
          *(unsigned char *)(v3 + *v20) = 1;
LABEL_205:
          PBRepeatedUInt64Add();
          LOBYTE(v16) = v122;
          unsigned int v20 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_185;
        }
        if (!PBReaderPlaceMark())
        {
LABEL_226:
          int v19 = 0;
          LOBYTE(v16) = v122;
          unsigned int v20 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_207;
        }
        while (1)
        {
          unsigned int v85 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v86 = 0;
          unsigned int v87 = 0;
          uint64_t v88 = 0;
          while (1)
          {
            uint64_t v89 = *v18;
            unint64_t v90 = *(void *)(v3 + v89);
            if (v90 == -1 || v90 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v91 = *(unsigned char *)(*(void *)(v3 + *v21) + v90);
            *(void *)(v3 + v89) = v90 + 1;
            v88 |= (unint64_t)(v91 & 0x7F) << v86;
            if (v91 < 0)
            {
              v86 += 7;
              BOOL v28 = v87++ >= 9;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_129;
          }
          *(unsigned char *)(v3 + *v85) = 1;
LABEL_129:
          PBRepeatedUInt64Add();
        }
LABEL_188:
        PBReaderRecallMark();
        unsigned int v20 = (int *)MEMORY[0x1E4F940C8];
        LOBYTE(v16) = v122;
        int v19 = 1;
        if ((v123 & 1) == 0) {
          goto LABEL_207;
        }
        goto LABEL_186;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        char v92 = 0;
        unsigned int v93 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 152) |= 8u;
        while (2)
        {
          uint64_t v94 = *v18;
          unint64_t v95 = *(void *)(v3 + v94);
          if (v95 == -1 || v95 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v96 = *(unsigned char *)(*(void *)(v3 + *v21) + v95);
            *(void *)(v3 + v94) = v95 + 1;
            v40 |= (unint64_t)(v96 & 0x7F) << v92;
            if (v96 < 0)
            {
              v92 += 7;
              BOOL v28 = v93++ >= 9;
              if (v28)
              {
                uint64_t v40 = 0;
                goto LABEL_179;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          uint64_t v40 = 0;
        }
LABEL_179:
        uint64_t v103 = 96;
        goto LABEL_184;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_146;
        }
        char v97 = 0;
        unsigned int v98 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 152) |= 0x40u;
        while (2)
        {
          uint64_t v99 = *v18;
          unint64_t v100 = *(void *)(v3 + v99);
          if (v100 == -1 || v100 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v101 = *(unsigned char *)(*(void *)(v3 + *v21) + v100);
            *(void *)(v3 + v99) = v100 + 1;
            v40 |= (unint64_t)(v101 & 0x7F) << v97;
            if (v101 < 0)
            {
              v97 += 7;
              BOOL v28 = v98++ >= 9;
              if (v28)
              {
                uint64_t v40 = 0;
                goto LABEL_183;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          uint64_t v40 = 0;
        }
LABEL_183:
        uint64_t v103 = 120;
LABEL_184:
        *(void *)(a1 + v103) = v40;
        goto LABEL_185;
      default:
        if ((v121 & 1) != 0 && (*(_WORD *)(a1 + 152) & 0x200) == 0)
        {
          if (!*(void *)(a1 + 16))
          {
            id v77 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v78 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v77;
          }
          int v79 = PBUnknownFieldAdd();
          LOBYTE(v16) = v122;
          unsigned int v20 = (int *)MEMORY[0x1E4F940C8];
          if (!v79)
          {
            int v19 = 0;
            goto LABEL_209;
          }
LABEL_185:
          if ((v123 & 1) == 0) {
            goto LABEL_206;
          }
LABEL_186:
          if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6)) {
            goto LABEL_206;
          }
          continue;
        }
LABEL_146:
        int v102 = PBReaderSkipValueWithTag();
        unsigned int v20 = (int *)MEMORY[0x1E4F940C8];
        LOBYTE(v16) = v122;
        if (v102 & v123) {
          goto LABEL_186;
        }
        int v19 = v102;
LABEL_207:
        LOBYTE(v15) = v121;
LABEL_208:
        if (v15) {
LABEL_209:
        }
          *(_WORD *)(a1 + 152) |= 0x200u;
        if (v16 & 1 | ((v19 & 1) == 0))
        {
          *(_WORD *)(a1 + 152) |= 0x800u;
          *(_WORD *)(a1 + 152) |= 0x400u;
          goto LABEL_220;
        }
        if (v17)
        {
          while (1)
          {
            int v118 = *v17++;
            int v117 = v118;
            if (v118 == 4) {
              break;
            }
            if (v117 == 10)
            {
              __int16 v116 = 1024;
LABEL_216:
              *(_WORD *)(a1 + 152) |= v116;
            }
            else if (!v117)
            {
              goto LABEL_220;
            }
          }
          __int16 v116 = 2048;
          goto LABEL_216;
        }
LABEL_220:
        if (v19)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
          if ((v16 & 1) == 0) {
            return v3;
          }
LABEL_224:
          uint64_t v119 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v16) {
            goto LABEL_224;
          }
        }
        return v3;
    }
  }
}

void sub_189F73110(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F7380C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVenueIdentifierReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 140))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDVenueIdentifierReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 144));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 136) = [v8 position];
  *(_DWORD *)(a1 + 140) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDVenueIdentifierReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDVenueIdentifierReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDVenueIdentifierReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 144));
  return Specified;
}

void sub_189F74160(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDVenueIdentifierIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_133;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_107;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_108;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_133;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            unint64_t v24 = *(void *)&a1[v23];
            if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
              goto LABEL_107;
            }
            unint64_t v25 = v24 + 1;
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_108;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_133;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            unint64_t v29 = *(void *)&a1[v28];
            if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
              goto LABEL_107;
            }
            unint64_t v30 = v29 + 1;
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_108;
          }
        case 4u:
          if (v14 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_133;
            }
            while (1)
            {
              uint64_t v32 = *v2;
              unint64_t v33 = *(void *)&a1[v32];
              if (v33 == -1 || v33 >= *(void *)&a1[*v3]) {
                goto LABEL_107;
              }
              unint64_t v34 = v33 + 1;
              int v35 = *(char *)(*(void *)&a1[*v5] + v33);
              *(void *)&a1[v32] = v34;
              if (v35 < 0)
              {
                unsigned int v36 = v14++;
                if (v36 <= 8) {
                  continue;
                }
              }
              goto LABEL_108;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_133;
          }
LABEL_111:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v72 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v73 = *v2;
              unint64_t v74 = *(void *)&a1[v73];
              if (v74 == -1 || v74 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v75 = v74 + 1;
              int v76 = *(char *)(*(void *)&a1[*v5] + v74);
              *(void *)&a1[v73] = v75;
              if (v76 < 0)
              {
                BOOL v12 = v72++ >= 9;
                if (!v12) {
                  continue;
                }
              }
              goto LABEL_111;
            }
            a1[*v4] = 1;
          }
          goto LABEL_130;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_133;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            unint64_t v39 = *(void *)&a1[v38];
            if (v39 == -1 || v39 >= *(void *)&a1[*v3]) {
              goto LABEL_107;
            }
            unint64_t v40 = v39 + 1;
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v21 = v37++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_108;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_133;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            unint64_t v44 = *(void *)&a1[v43];
            if (v44 == -1 || v44 >= *(void *)&a1[*v3]) {
              goto LABEL_107;
            }
            unint64_t v45 = v44 + 1;
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v21 = v42++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_108;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_133;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v2;
            unint64_t v49 = *(void *)&a1[v48];
            if (v49 == -1 || v49 >= *(void *)&a1[*v3]) {
              goto LABEL_107;
            }
            unint64_t v50 = v49 + 1;
            int v51 = *(char *)(*(void *)&a1[*v5] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v21 = v47++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_108;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_133;
          }
          unsigned int v52 = 0;
          while (1)
          {
            uint64_t v53 = *v2;
            unint64_t v54 = *(void *)&a1[v53];
            if (v54 == -1 || v54 >= *(void *)&a1[*v3]) {
              goto LABEL_107;
            }
            unint64_t v55 = v54 + 1;
            int v56 = *(char *)(*(void *)&a1[*v5] + v54);
            *(void *)&a1[v53] = v55;
            if (v56 < 0)
            {
              BOOL v21 = v52++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_108;
          }
        case 0xAu:
          if (v14 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_133:
              PBReaderRecallMark();
              return 0;
            }
LABEL_121:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v77 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v78 = *v2;
                unint64_t v79 = *(void *)&a1[v78];
                if (v79 == -1 || v79 >= *(void *)&a1[*v3]) {
                  break;
                }
                unint64_t v80 = v79 + 1;
                int v81 = *(char *)(*(void *)&a1[*v5] + v79);
                *(void *)&a1[v78] = v80;
                if (v81 < 0)
                {
                  BOOL v12 = v77++ >= 9;
                  if (!v12) {
                    continue;
                  }
                }
                goto LABEL_121;
              }
              a1[*v4] = 1;
            }
LABEL_130:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_133;
            }
            while (1)
            {
              uint64_t v57 = *v2;
              unint64_t v58 = *(void *)&a1[v57];
              if (v58 == -1 || v58 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v59 = v58 + 1;
              int v60 = *(char *)(*(void *)&a1[*v5] + v58);
              *(void *)&a1[v57] = v59;
              if (v60 < 0)
              {
                unsigned int v61 = v14++;
                if (v61 <= 8) {
                  continue;
                }
              }
              goto LABEL_108;
            }
LABEL_107:
            a1[*v4] = 1;
          }
LABEL_108:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_131;
          }
          break;
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_133;
          }
          unsigned int v62 = 0;
          while (1)
          {
            uint64_t v63 = *v2;
            unint64_t v64 = *(void *)&a1[v63];
            if (v64 == -1 || v64 >= *(void *)&a1[*v3]) {
              goto LABEL_107;
            }
            unint64_t v65 = v64 + 1;
            int v66 = *(char *)(*(void *)&a1[*v5] + v64);
            *(void *)&a1[v63] = v65;
            if (v66 < 0)
            {
              BOOL v21 = v62++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_108;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_133;
          }
          unsigned int v67 = 0;
          while (1)
          {
            uint64_t v68 = *v2;
            unint64_t v69 = *(void *)&a1[v68];
            if (v69 == -1 || v69 >= *(void *)&a1[*v3]) {
              goto LABEL_107;
            }
            unint64_t v70 = v69 + 1;
            int v71 = *(char *)(*(void *)&a1[*v5] + v69);
            *(void *)&a1[v68] = v70;
            if (v71 < 0)
            {
              BOOL v21 = v67++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_108;
          }
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_133;
          }
          goto LABEL_108;
      }
    }
  }
LABEL_131:
  BOOL v82 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v82;
}

void sub_189F74B64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDVenueIdentifierIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 144));
  BOOL v2 = (*(_WORD *)(a1 + 152) & 0x1C00) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 144));
  return v2;
}

void sub_189F74EAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOActionURLViewPlaceURLs(void *a1, void *a2)
{
  return _GEOActionURLs(a1, a2, 0, @"view", 0);
}

id GEOActionURLViewSpecificPhotoURLs(void *a1, void *a2, void *a3)
{
  v12[1] = *MEMORY[0x1E4F143B8];
  v12[0] = a3;
  uint64_t v5 = (void *)MEMORY[0x1E4F1C978];
  id v6 = a3;
  id v7 = a2;
  id v8 = a1;
  uint64_t v9 = [v5 arrayWithObjects:v12 count:1];

  unint64_t v10 = _GEOActionURLs(v8, v7, @"photo", @"view", v9);

  return v10;
}

id GEOActionURLAddPhotoURLs(void *a1, void *a2)
{
  return _GEOActionURLs(a1, a2, @"photo", @"create", 0);
}

id GEOActionURLViewReviewsURLs(void *a1, void *a2)
{
  return _GEOActionURLs(a1, a2, @"review", @"view", 0);
}

id GEOActionURLViewSpecificReviewURLs(void *a1, void *a2, void *a3)
{
  v12[1] = *MEMORY[0x1E4F143B8];
  v12[0] = a3;
  uint64_t v5 = (void *)MEMORY[0x1E4F1C978];
  id v6 = a3;
  id v7 = a2;
  id v8 = a1;
  uint64_t v9 = [v5 arrayWithObjects:v12 count:1];

  unint64_t v10 = _GEOActionURLs(v8, v7, @"review", @"view", v9);

  return v10;
}

id GEOActionURLAddReviewURLs(void *a1, void *a2)
{
  return _GEOActionURLs(a1, a2, @"review", @"create", 0);
}

id GEOActionURLCheckinURLs(void *a1, void *a2)
{
  return _GEOActionURLs(a1, a2, 0, @"checkin", 0);
}

void sub_189F76EFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F76F80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189F7708C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F771BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F7748C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_189F77610(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189F776B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189F779CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F77C94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F77DA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id GEOGetGEORoadMatcherLog(void)
{
  if (qword_1EB2A02C0 != -1) {
    dispatch_once(&qword_1EB2A02C0, &__block_literal_global_160);
  }
  os_log_t v0 = (void *)_MergedGlobals_300;

  return v0;
}

void ___ZL23GEOGetGEORoadMatcherLogv_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEORoadMatcher");
  id v1 = (void *)_MergedGlobals_300;
  _MergedGlobals_300 = (uint64_t)v0;
}

void sub_189F78BC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id externalFileBaseURL(void *a1)
{
  id v1 = a1;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __externalFileBaseURL_block_invoke;
  block[3] = &unk_1E53D79D8;
  id v7 = v1;
  uint64_t v2 = qword_1EB2A02D0;
  id v3 = v1;
  if (v2 != -1) {
    dispatch_once(&qword_1EB2A02D0, block);
  }
  id v4 = (id)_MergedGlobals_301;

  return v4;
}

void sub_189F79168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getMetrics(void *a1)
{
  id v1 = [a1 dataTask];
  uint64_t v2 = [v1 urlTaskMetrics];
  id v3 = [v2 transactionMetrics];
  id v4 = [v3 lastObject];

  return v4;
}

id eventId(void *a1)
{
  id v1 = NSString;
  id v2 = a1;
  uint64_t v3 = [v2 requestTypeCode];
  id v4 = [v2 dataTask];
  uint64_t v5 = objc_msgSend(v1, "stringWithFormat:", @"%d:%p:%p", v3, v2, v4);

  return v5;
}

void sub_189F79AB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void FindValuesBetween(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v9 = a1;
  id v10 = a5;
  uint64_t v20 = 0;
  BOOL v21 = &v20;
  uint64_t v22 = 0x3032000000;
  uint64_t v23 = __Block_byref_object_copy__78;
  unint64_t v24 = __Block_byref_object_dispose__78;
  id v25 = 0;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = __FindValuesBetween_block_invoke;
  v14[3] = &unk_1E53D9C40;
  id v11 = v9;
  id v15 = v11;
  uint64_t v17 = &v20;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  id v12 = v10;
  id v16 = v12;
  [v11 statementForKey:@"FindValuesBetween" statementBlock:v14];
  if (a2)
  {
    int v13 = (void *)v21[5];
    if (v13) {
      *a2 = v13;
    }
  }

  _Block_object_dispose(&v20, 8);
}

void sub_189F79CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189F79E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189F7A048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189F7A1DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189F7A348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189F7A568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189F7A6CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189F7A878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189F7A9DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189F7AB88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189F7ACB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t GetTotalSize(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v16 = 0;
  uint64_t v17 = &v16;
  uint64_t v18 = 0x3032000000;
  uint64_t v19 = __Block_byref_object_copy__78;
  uint64_t v20 = __Block_byref_object_dispose__78;
  id v21 = 0;
  uint64_t v12 = 0;
  int v13 = &v12;
  uint64_t v14 = 0x2020000000;
  uint64_t v15 = 0;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  v8[2] = __GetTotalSize_block_invoke;
  v8[3] = &unk_1E53D9BA0;
  id v10 = &v12;
  id v4 = v3;
  id v9 = v4;
  id v11 = &v16;
  [v4 statementForKey:@"GetTotalSize" statementBlock:v8];
  if (a2)
  {
    uint64_t v5 = (void *)v17[5];
    if (v5) {
      *a2 = v5;
    }
  }
  uint64_t v6 = v13[3];

  _Block_object_dispose(&v12, 8);
  _Block_object_dispose(&v16, 8);

  return v6;
}

void sub_189F7AE88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_189F7AFB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189F7B19C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189F7B30C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t DeleteOlderThan(void *a1, void *a2, uint64_t a3)
{
  id v5 = a1;
  uint64_t v14 = 0;
  uint64_t v15 = &v14;
  uint64_t v16 = 0x3032000000;
  uint64_t v17 = __Block_byref_object_copy__78;
  uint64_t v18 = __Block_byref_object_dispose__78;
  id v19 = 0;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __DeleteOlderThan_block_invoke;
  v10[3] = &unk_1E53D7A50;
  id v6 = v5;
  uint64_t v12 = &v14;
  uint64_t v13 = a3;
  id v11 = v6;
  uint64_t v7 = [v6 executeStatement:@"DeleteOlderThan" statementBlock:v10];
  if (a2)
  {
    id v8 = (void *)v15[5];
    if (v8) {
      *a2 = v8;
    }
  }

  _Block_object_dispose(&v14, 8);
  return v7;
}

void sub_189F7B554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189F7B674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189F7B844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189F7B9D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_189F7BB50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_189F7C2E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
}

void _logs_ExternalResources_Delete_sqlite(sqlite3_context *a1, int a2, sqlite3_value **a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  if (a2 == 1)
  {
    id v4 = [NSString stringWithCString:sqlite3_value_text(*a3) encoding:4];
    sqlite3_user_data(a1);
    id v5 = (id)objc_claimAutoreleasedReturnValue();
    id v6 = (void *)MEMORY[0x1E4F28CB8];
    id v7 = v4;
    id v8 = [v6 defaultManager];
    uint64_t v9 = externalFileBaseURL(v5);
    id v10 = [v9 URLByAppendingPathComponent:v7];

    if (v10)
    {
      id v15 = 0;
      char v11 = [v8 removeItemAtURL:v10 error:&v15];
      id v12 = v15;
      if ((v11 & 1) == 0)
      {
        uint64_t v13 = [v5 log];
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412546;
          uint64_t v17 = v10;
          __int16 v18 = 2112;
          id v19 = v12;
          _os_log_error_impl(&dword_188D96000, v13, OS_LOG_TYPE_ERROR, "Could not remove external resource at \"%@\": %@", buf, 0x16u);
        }
      }
    }
    else
    {
      id v12 = 0;
    }
    BOOL v14 = v10 != 0;
  }
  else
  {
    BOOL v14 = 1;
  }
  sqlite3_result_int(a1, v14);
}

void __externalFileBaseURL_block_invoke(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v2 = [*(id *)(a1 + 32) databaseFileURL];
  id v3 = [v2 URLByDeletingPathExtension];
  uint64_t v4 = [v3 URLByAppendingPathExtension:@"ext"];
  id v5 = (void *)_MergedGlobals_301;
  _MergedGlobals_301 = v4;

  id v6 = [(id)_MergedGlobals_301 path];
  id v11 = 0;
  BOOL v7 = +[GEOFilePaths createDirectoryCopyingAttributesFromParent:v6 error:&v11];
  id v8 = v11;

  if (!v7)
  {
    uint64_t v9 = (void *)_MergedGlobals_301;
    _MergedGlobals_301 = 0;

    id v10 = [*(id *)(a1 + 32) log];
    if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 138412546;
      uint64_t v13 = _MergedGlobals_301;
      __int16 v14 = 2112;
      id v15 = v8;
      _os_log_fault_impl(&dword_188D96000, v10, OS_LOG_TYPE_FAULT, "Could not create external resources folder at \"%@\": %@", buf, 0x16u);
    }
  }
}

uint64_t __AddValue_block_invoke_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(*(void *)(a1 + 80) + 8);
  id v52 = *(id *)(v6 + 40);
  int v7 = [v4 bindInt64Parameter:"@timestamp" toValue:v5 inStatement:a2 error:&v52];
  objc_storeStrong((id *)(v6 + 40), v52);
  if (!v7) {
    return 0;
  }
  id v8 = *(void **)(a1 + 32);
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  uint64_t v10 = *(void *)(*(void *)(a1 + 80) + 8);
  id obj = *(id *)(v10 + 40);
  int v11 = [v8 bindIntParameter:"@type" toValue:v9 inStatement:a2 error:&obj];
  objc_storeStrong((id *)(v10 + 40), obj);
  if (!v11) {
    return 0;
  }
  id v12 = *(void **)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(*(void *)(a1 + 80) + 8);
  id v50 = *(id *)(v14 + 40);
  int v15 = [v12 bindTextParameter:"@appid" toValue:v13 inStatement:a2 error:&v50];
  objc_storeStrong((id *)(v14 + 40), v50);
  if (!v15) {
    return 0;
  }
  uint64_t v16 = *(void **)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v18 = *(void *)(*(void *)(a1 + 80) + 8);
  id v49 = *(id *)(v18 + 40);
  int v19 = [v16 bindTextParameter:"@identifier" toValue:v17 inStatement:a2 error:&v49];
  objc_storeStrong((id *)(v18 + 40), v49);
  if (!v19) {
    return 0;
  }
  uint64_t v20 = *(void **)(a1 + 32);
  uint64_t v21 = *(void *)(a1 + 56);
  uint64_t v22 = *(void *)(*(void *)(a1 + 80) + 8);
  id v48 = *(id *)(v22 + 40);
  int v23 = [v20 bindTextParameter:"@url" toValue:v21 inStatement:a2 error:&v48];
  objc_storeStrong((id *)(v22 + 40), v48);
  if (!v23) {
    return 0;
  }
  unint64_t v24 = *(void **)(a1 + 32);
  uint64_t v25 = *(void *)(a1 + 96);
  uint64_t v26 = *(void *)(*(void *)(a1 + 80) + 8);
  id v47 = *(id *)(v26 + 40);
  int v27 = [v24 bindInt64Parameter:"@size" toValue:v25 inStatement:a2 error:&v47];
  objc_storeStrong((id *)(v26 + 40), v47);
  if (!v27) {
    return 0;
  }
  if (*(void *)(a1 + 64))
  {
    uint64_t v28 = [MEMORY[0x1E4F29128] UUID];
    unint64_t v29 = [v28 UUIDString];

    unint64_t v30 = externalFileBaseURL(*(void **)(a1 + 32));
    int v31 = [v30 URLByAppendingPathComponent:v29];

    if (!v31) {
      goto LABEL_10;
    }
    uint64_t v32 = *(void **)(a1 + 32);
    uint64_t v33 = *(void *)(a1 + 64);
    uint64_t v34 = *(void *)(*(void *)(a1 + 80) + 8);
    id v46 = *(id *)(v34 + 40);
    int v35 = [v32 writeExternalResourceWithData:v33 toURL:v31 error:&v46];
    objc_storeStrong((id *)(v34 + 40), v46);

    if (!v35) {
      goto LABEL_10;
    }
  }
  else
  {
    unint64_t v29 = 0;
  }
  unsigned int v37 = *(void **)(a1 + 32);
  uint64_t v38 = *(void *)(*(void *)(a1 + 80) + 8);
  id v45 = *(id *)(v38 + 40);
  int v39 = [v37 bindTextParameter:"@data" toValue:v29 inStatement:a2 error:&v45];
  objc_storeStrong((id *)(v38 + 40), v45);
  if (v39)
  {
    unint64_t v40 = *(void **)(a1 + 32);
    uint64_t v41 = *(void *)(a1 + 72);
    uint64_t v42 = *(void *)(*(void *)(a1 + 80) + 8);
    id v44 = *(id *)(v42 + 40);
    uint64_t v36 = [v40 bindTextParameter:"@errorMessage" toValue:v41 inStatement:a2 error:&v44];
    objc_storeStrong((id *)(v42 + 40), v44);
    goto LABEL_14;
  }
LABEL_10:
  uint64_t v36 = 0;
LABEL_14:

  return v36;
}

uint64_t __FindValuesBetween_block_invoke(uint64_t a1, sqlite3_stmt *a2)
{
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  id obj = *(id *)(v6 + 40);
  int v7 = [v4 bindInt64Parameter:"@begin" toValue:v5 inStatement:a2 error:&obj];
  objc_storeStrong((id *)(v6 + 40), obj);
  if (!v7) {
    return 0;
  }
  id v8 = *(void **)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
  id v27 = *(id *)(v10 + 40);
  int v11 = [v8 bindInt64Parameter:"@end" toValue:v9 inStatement:a2 error:&v27];
  objc_storeStrong((id *)(v10 + 40), v27);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = sqlite3_step(a2);
  while (v12 == 100)
  {
    [*(id *)(a1 + 32) int64ForColumn:0 inStatment:a2];
    [*(id *)(a1 + 32) intForColumn:1 inStatment:a2];
    uint64_t v13 = [*(id *)(a1 + 32) stringForColumn:2 inStatment:a2];
    uint64_t v14 = [*(id *)(a1 + 32) stringForColumn:3 inStatment:a2];
    int v15 = [*(id *)(a1 + 32) stringForColumn:4 inStatment:a2];
    [*(id *)(a1 + 32) int64ForColumn:5 inStatment:a2];
    uint64_t v16 = [*(id *)(a1 + 32) stringForColumn:6 inStatment:a2];
    uint64_t v17 = externalFileBaseURL(*(void **)(a1 + 32));
    uint64_t v18 = [v17 URLByAppendingPathComponent:v16];

    if (!v18)
    {

      uint64_t v21 = 0;
      goto LABEL_12;
    }
    int v19 = [*(id *)(a1 + 32) stringForColumn:7 inStatment:a2];
    uint64_t v20 = v14;
    if (((*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40)) & 1) == 0)
    {

      uint64_t v21 = 1;
      goto LABEL_12;
    }
    uint64_t v12 = sqlite3_step(a2);
  }
  if (v12 == 101) {
    return 1;
  }
  uint64_t v22 = *(void **)(a1 + 32);
  uint64_t v23 = *(void *)(*(void *)(a1 + 48) + 8);
  id v26 = *(id *)(v23 + 40);
  [v22 reportSQLiteErrorCode:v12 method:@"step" error:&v26];
  id v24 = v26;
  uint64_t v21 = 0;
  uint64_t v13 = *(void **)(v23 + 40);
  *(void *)(v23 + 40) = v24;
LABEL_12:

  return v21;
}

uint64_t __FindValuesOfType_block_invoke(uint64_t a1, sqlite3_stmt *a2)
{
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  id obj = *(id *)(v6 + 40);
  int v7 = [v4 bindIntParameter:"@type" toValue:v5 inStatement:a2 error:&obj];
  objc_storeStrong((id *)(v6 + 40), obj);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = sqlite3_step(a2);
  while (v8 == 100)
  {
    [*(id *)(a1 + 32) int64ForColumn:0 inStatment:a2];
    [*(id *)(a1 + 32) intForColumn:1 inStatment:a2];
    uint64_t v9 = [*(id *)(a1 + 32) stringForColumn:2 inStatment:a2];
    uint64_t v10 = [*(id *)(a1 + 32) stringForColumn:3 inStatment:a2];
    int v11 = [*(id *)(a1 + 32) stringForColumn:4 inStatment:a2];
    [*(id *)(a1 + 32) int64ForColumn:5 inStatment:a2];
    uint64_t v12 = [*(id *)(a1 + 32) stringForColumn:6 inStatment:a2];
    uint64_t v13 = externalFileBaseURL(*(void **)(a1 + 32));
    uint64_t v14 = [v13 URLByAppendingPathComponent:v12];

    if (!v14)
    {

      uint64_t v17 = 0;
      goto LABEL_11;
    }
    int v15 = [*(id *)(a1 + 32) stringForColumn:7 inStatment:a2];
    uint64_t v16 = v10;
    if (((*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40)) & 1) == 0)
    {

      uint64_t v17 = 1;
      goto LABEL_11;
    }
    uint64_t v8 = sqlite3_step(a2);
  }
  if (v8 == 101) {
    return 1;
  }
  uint64_t v18 = *(void **)(a1 + 32);
  uint64_t v19 = *(void *)(*(void *)(a1 + 48) + 8);
  id v22 = *(id *)(v19 + 40);
  [v18 reportSQLiteErrorCode:v8 method:@"step" error:&v22];
  id v20 = v22;
  uint64_t v17 = 0;
  uint64_t v9 = *(void **)(v19 + 40);
  *(void *)(v19 + 40) = v20;
LABEL_11:

  return v17;
}

uint64_t __FindValuesBetweenOfType_block_invoke(uint64_t a1, sqlite3_stmt *a2)
{
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(unsigned int *)(a1 + 72);
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  id obj = *(id *)(v6 + 40);
  int v7 = [v4 bindIntParameter:"@type" toValue:v5 inStatement:a2 error:&obj];
  objc_storeStrong((id *)(v6 + 40), obj);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = *(void **)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
  id v32 = *(id *)(v10 + 40);
  int v11 = [v8 bindInt64Parameter:"@begin" toValue:v9 inStatement:a2 error:&v32];
  objc_storeStrong((id *)(v10 + 40), v32);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = *(void **)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v14 = *(void *)(*(void *)(a1 + 48) + 8);
  id v31 = *(id *)(v14 + 40);
  int v15 = [v12 bindInt64Parameter:"@end" toValue:v13 inStatement:a2 error:&v31];
  objc_storeStrong((id *)(v14 + 40), v31);
  if (!v15) {
    return 0;
  }
  uint64_t v16 = sqlite3_step(a2);
  while (v16 == 100)
  {
    [*(id *)(a1 + 32) int64ForColumn:0 inStatment:a2];
    [*(id *)(a1 + 32) intForColumn:1 inStatment:a2];
    uint64_t v17 = [*(id *)(a1 + 32) stringForColumn:2 inStatment:a2];
    uint64_t v18 = [*(id *)(a1 + 32) stringForColumn:3 inStatment:a2];
    uint64_t v19 = [*(id *)(a1 + 32) stringForColumn:4 inStatment:a2];
    [*(id *)(a1 + 32) int64ForColumn:5 inStatment:a2];
    id v20 = [*(id *)(a1 + 32) stringForColumn:6 inStatment:a2];
    uint64_t v21 = externalFileBaseURL(*(void **)(a1 + 32));
    id v22 = [v21 URLByAppendingPathComponent:v20];

    if (!v22)
    {

      uint64_t v25 = 0;
      goto LABEL_13;
    }
    uint64_t v23 = [*(id *)(a1 + 32) stringForColumn:7 inStatment:a2];
    id v24 = v18;
    if (((*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40)) & 1) == 0)
    {

      uint64_t v25 = 1;
      goto LABEL_13;
    }
    uint64_t v16 = sqlite3_step(a2);
  }
  if (v16 == 101) {
    return 1;
  }
  id v26 = *(void **)(a1 + 32);
  uint64_t v27 = *(void *)(*(void *)(a1 + 48) + 8);
  id v30 = *(id *)(v27 + 40);
  [v26 reportSQLiteErrorCode:v16 method:@"step" error:&v30];
  id v28 = v30;
  uint64_t v25 = 0;
  uint64_t v17 = *(void **)(v27 + 40);
  *(void *)(v27 + 40) = v28;
LABEL_13:

  return v25;
}

uint64_t __FindRequestById_block_invoke(uint64_t a1, sqlite3_stmt *a2)
{
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(*(void *)(a1 + 56) + 8);
  id obj = *(id *)(v6 + 40);
  int v7 = [v4 bindTextParameter:"@identifier" toValue:v5 inStatement:a2 error:&obj];
  objc_storeStrong((id *)(v6 + 40), obj);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = sqlite3_step(a2);
  while (v8 == 100)
  {
    [*(id *)(a1 + 32) int64ForColumn:0 inStatment:a2];
    [*(id *)(a1 + 32) intForColumn:1 inStatment:a2];
    uint64_t v9 = [*(id *)(a1 + 32) stringForColumn:2 inStatment:a2];
    uint64_t v10 = [*(id *)(a1 + 32) stringForColumn:3 inStatment:a2];
    int v11 = [*(id *)(a1 + 32) stringForColumn:4 inStatment:a2];
    [*(id *)(a1 + 32) int64ForColumn:5 inStatment:a2];
    uint64_t v12 = [*(id *)(a1 + 32) stringForColumn:6 inStatment:a2];
    uint64_t v13 = externalFileBaseURL(*(void **)(a1 + 32));
    uint64_t v14 = [v13 URLByAppendingPathComponent:v12];

    if (!v14)
    {

      uint64_t v17 = 0;
      goto LABEL_11;
    }
    int v15 = [*(id *)(a1 + 32) stringForColumn:7 inStatment:a2];
    uint64_t v16 = v10;
    if (((*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))(*(void *)(a1 + 48)) & 1) == 0)
    {

      uint64_t v17 = 1;
      goto LABEL_11;
    }
    uint64_t v8 = sqlite3_step(a2);
  }
  if (v8 == 101) {
    return 1;
  }
  uint64_t v18 = *(void **)(a1 + 32);
  uint64_t v19 = *(void *)(*(void *)(a1 + 56) + 8);
  id v22 = *(id *)(v19 + 40);
  [v18 reportSQLiteErrorCode:v8 method:@"step" error:&v22];
  id v20 = v22;
  uint64_t v17 = 0;
  uint64_t v9 = *(void **)(v19 + 40);
  *(void *)(v19 + 40) = v20;
LABEL_11:

  return v17;
}

uint64_t __FindResponseById_block_invoke(uint64_t a1, sqlite3_stmt *a2)
{
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(*(void *)(a1 + 56) + 8);
  id obj = *(id *)(v6 + 40);
  int v7 = [v4 bindTextParameter:"@identifier" toValue:v5 inStatement:a2 error:&obj];
  objc_storeStrong((id *)(v6 + 40), obj);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = sqlite3_step(a2);
  while (v8 == 100)
  {
    [*(id *)(a1 + 32) int64ForColumn:0 inStatment:a2];
    [*(id *)(a1 + 32) intForColumn:1 inStatment:a2];
    uint64_t v9 = [*(id *)(a1 + 32) stringForColumn:2 inStatment:a2];
    uint64_t v10 = [*(id *)(a1 + 32) stringForColumn:3 inStatment:a2];
    int v11 = [*(id *)(a1 + 32) stringForColumn:4 inStatment:a2];
    [*(id *)(a1 + 32) int64ForColumn:5 inStatment:a2];
    uint64_t v12 = [*(id *)(a1 + 32) stringForColumn:6 inStatment:a2];
    uint64_t v13 = externalFileBaseURL(*(void **)(a1 + 32));
    uint64_t v14 = [v13 URLByAppendingPathComponent:v12];

    if (!v14)
    {

      uint64_t v17 = 0;
      goto LABEL_11;
    }
    int v15 = [*(id *)(a1 + 32) stringForColumn:7 inStatment:a2];
    uint64_t v16 = v10;
    if (((*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))(*(void *)(a1 + 48)) & 1) == 0)
    {

      uint64_t v17 = 1;
      goto LABEL_11;
    }
    uint64_t v8 = sqlite3_step(a2);
  }
  if (v8 == 101) {
    return 1;
  }
  uint64_t v18 = *(void **)(a1 + 32);
  uint64_t v19 = *(void *)(*(void *)(a1 + 56) + 8);
  id v22 = *(id *)(v19 + 40);
  [v18 reportSQLiteErrorCode:v8 method:@"step" error:&v22];
  id v20 = v22;
  uint64_t v17 = 0;
  uint64_t v9 = *(void **)(v19 + 40);
  *(void *)(v19 + 40) = v20;
LABEL_11:

  return v17;
}

BOOL __GetTotalSize_block_invoke(void *a1, sqlite3_stmt *a2)
{
  uint64_t v4 = sqlite3_step(a2);
  uint64_t v5 = (void *)a1[4];
  if (v4 == 100)
  {
    *(void *)(*(void *)(a1[5] + 8) + 24) = [v5 int64ForColumn:0 inStatment:a2];
  }
  else
  {
    uint64_t v6 = *(void *)(a1[6] + 8);
    id obj = *(id *)(v6 + 40);
    [v5 reportSQLiteErrorCode:v4 method:@"step" error:&obj];
    objc_storeStrong((id *)(v6 + 40), obj);
  }
  return v4 == 100;
}

uint64_t __DeleteOlderThan_block_invoke(void *a1, uint64_t a2)
{
  uint64_t v2 = a1[6];
  id v3 = (void *)a1[4];
  uint64_t v4 = *(void *)(a1[5] + 8);
  id obj = *(id *)(v4 + 40);
  uint64_t v5 = [v3 bindInt64Parameter:"@timestamp" toValue:v2 inStatement:a2 error:&obj];
  objc_storeStrong((id *)(v4 + 40), obj);
  return v5;
}

uint64_t __RestoreValue_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(*(void *)(a1 + 80) + 8);
  id v52 = *(id *)(v6 + 40);
  int v7 = [v4 bindInt64Parameter:"@timestamp" toValue:v5 inStatement:a2 error:&v52];
  objc_storeStrong((id *)(v6 + 40), v52);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = *(void **)(a1 + 32);
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  uint64_t v10 = *(void *)(*(void *)(a1 + 80) + 8);
  id obj = *(id *)(v10 + 40);
  int v11 = [v8 bindIntParameter:"@type" toValue:v9 inStatement:a2 error:&obj];
  objc_storeStrong((id *)(v10 + 40), obj);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = *(void **)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(*(void *)(a1 + 80) + 8);
  id v50 = *(id *)(v14 + 40);
  int v15 = [v12 bindTextParameter:"@appid" toValue:v13 inStatement:a2 error:&v50];
  objc_storeStrong((id *)(v14 + 40), v50);
  if (!v15) {
    return 0;
  }
  uint64_t v16 = *(void **)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v18 = *(void *)(*(void *)(a1 + 80) + 8);
  id v49 = *(id *)(v18 + 40);
  int v19 = [v16 bindTextParameter:"@identifier" toValue:v17 inStatement:a2 error:&v49];
  objc_storeStrong((id *)(v18 + 40), v49);
  if (!v19) {
    return 0;
  }
  id v20 = *(void **)(a1 + 32);
  uint64_t v21 = *(void *)(a1 + 56);
  uint64_t v22 = *(void *)(*(void *)(a1 + 80) + 8);
  id v48 = *(id *)(v22 + 40);
  int v23 = [v20 bindTextParameter:"@url" toValue:v21 inStatement:a2 error:&v48];
  objc_storeStrong((id *)(v22 + 40), v48);
  if (!v23) {
    return 0;
  }
  id v24 = *(void **)(a1 + 32);
  uint64_t v25 = *(void *)(a1 + 96);
  uint64_t v26 = *(void *)(*(void *)(a1 + 80) + 8);
  id v47 = *(id *)(v26 + 40);
  int v27 = [v24 bindInt64Parameter:"@size" toValue:v25 inStatement:a2 error:&v47];
  objc_storeStrong((id *)(v26 + 40), v47);
  if (!v27) {
    return 0;
  }
  if (*(void *)(a1 + 64))
  {
    id v28 = [MEMORY[0x1E4F29128] UUID];
    unint64_t v29 = [v28 UUIDString];

    id v30 = externalFileBaseURL(*(void **)(a1 + 32));
    id v31 = [v30 URLByAppendingPathComponent:v29];

    if (!v31) {
      goto LABEL_10;
    }
    id v32 = *(void **)(a1 + 32);
    uint64_t v33 = *(void *)(a1 + 64);
    uint64_t v34 = *(void *)(*(void *)(a1 + 80) + 8);
    id v46 = *(id *)(v34 + 40);
    int v35 = [v32 moveExternalResourceAtURL:v33 toURL:v31 error:&v46];
    objc_storeStrong((id *)(v34 + 40), v46);

    if (!v35) {
      goto LABEL_10;
    }
  }
  else
  {
    unint64_t v29 = 0;
  }
  unsigned int v37 = *(void **)(a1 + 32);
  uint64_t v38 = *(void *)(*(void *)(a1 + 80) + 8);
  id v45 = *(id *)(v38 + 40);
  int v39 = [v37 bindTextParameter:"@data" toValue:v29 inStatement:a2 error:&v45];
  objc_storeStrong((id *)(v38 + 40), v45);
  if (v39)
  {
    unint64_t v40 = *(void **)(a1 + 32);
    uint64_t v41 = *(void *)(a1 + 72);
    uint64_t v42 = *(void *)(*(void *)(a1 + 80) + 8);
    id v44 = *(id *)(v42 + 40);
    uint64_t v36 = [v40 bindTextParameter:"@errorMessage" toValue:v41 inStatement:a2 error:&v44];
    objc_storeStrong((id *)(v42 + 40), v44);
    goto LABEL_14;
  }
LABEL_10:
  uint64_t v36 = 0;
LABEL_14:

  return v36;
}

id _GEOConfigStorageXPC()
{
  if (qword_1EB2A02F0 != -1) {
    dispatch_once(&qword_1EB2A02F0, &__block_literal_global_161);
  }
  os_log_t v0 = (void *)qword_1EB2A02E8;

  return v0;
}

uint64_t GEOURLRequestsAuthForURLType(uint64_t a1)
{
  id v1 = _GEOURLInfoFromActiveTileGroup(a1);
  uint64_t v2 = [v1 useAuthProxy];

  return v2;
}

id GEOURLDefaultsKey(uint64_t a1)
{
  long long v5 = 0u;
  long long v6 = 0u;
  long long v4 = 0u;
  _recordForType(a1, (uint64_t)&v4);
  int v1 = DWORD2(v4);
  uint64_t v2 = v5;

  return GEODefaultsKeyStringForConfigKey(v1, v2);
}

uint64_t GEOURLConfigKey(uint64_t a1)
{
  memset(v2, 0, sizeof(v2));
  _recordForType(a1, (uint64_t)v2);
  return *((void *)&v2[0] + 1);
}

id GEOGetURLIgnoringManifest(uint64_t a1)
{
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  v3[2] = __GEOGetURLIgnoringManifest_block_invoke;
  v3[3] = &__block_descriptor_40_e25___NSURL_16__0__NSString_8l;
  v3[4] = a1;
  int v1 = _GEOGetURLWithSource(a1, 0, 0, v3);

  return v1;
}

id __GEOGetURLIgnoringManifest_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = [MEMORY[0x1E4F1CB10] URLWithString:a2];
  if (!v3)
  {
    long long v4 = GEOGetUserDefaultsLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      unint64_t v5 = *(void *)(a1 + 32);
      if (v5 > 0x41) {
        long long v6 = 0;
      }
      else {
        long long v6 = off_1E53EADF8[v5];
      }
      int v8 = 138543362;
      uint64_t v9 = v6;
      _os_log_impl(&dword_188D96000, v4, OS_LOG_TYPE_ERROR, "URL value for type '%{public}@' is not a valid URL", (uint8_t *)&v8, 0xCu);
    }
  }

  return v3;
}

id GEOGetUserDefaultsLog()
{
  if (qword_1EB2A0310 != -1) {
    dispatch_once(&qword_1EB2A0310, &__block_literal_global_273_0);
  }
  os_log_t v0 = (void *)qword_1EB2A0308;

  return v0;
}

id GEOGetURL(uint64_t a1)
{
  return GEOGetURLWithSource(a1, 0);
}

id GEOGetURLWithTokenSubstitutions(uint64_t a1, void *a2)
{
  id v3 = a2;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __GEOGetURLWithTokenSubstitutions_block_invoke;
  v7[3] = &unk_1E53EAD90;
  id v8 = v3;
  uint64_t v9 = a1;
  id v4 = v3;
  unint64_t v5 = _GEOGetURLWithSource(a1, 0, 1, v7);

  return v5;
}

id __GEOGetURLWithTokenSubstitutions_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = objc_msgSend(MEMORY[0x1E4F1CB10], "_geo_URLWithString:tokenSubstitutions:", a2, *(void *)(a1 + 32));
  if (!v3)
  {
    id v4 = GEOGetUserDefaultsLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      unint64_t v5 = *(void *)(a1 + 40);
      if (v5 > 0x41) {
        long long v6 = 0;
      }
      else {
        long long v6 = off_1E53EADF8[v5];
      }
      int v8 = 138543362;
      uint64_t v9 = v6;
      _os_log_impl(&dword_188D96000, v4, OS_LOG_TYPE_ERROR, "URL value for type '%{public}@' is not a valid URL", (uint8_t *)&v8, 0xCu);
    }
  }

  return v3;
}

id GEOURLStringWithSource(uint64_t a1, void *a2)
{
  return _GEOGetURLWithSource(a1, a2, 1, 0);
}

id GEOURLStringIgnoringManifest(uint64_t a1)
{
  return _GEOGetURLWithSource(a1, 0, 0, 0);
}

id GEOURLWorldDefaultURLString(uint64_t a1)
{
  return _GEOURLWorldDefaultURLStringWithSource(a1, 0, 1);
}

id GEOURLDefaultResourceManifestURLTemplate()
{
  long long v13 = 0u;
  long long v14 = 0u;
  long long v12 = 0u;
  os_log_t v0 = +[GEONetworkDefaults sharedNetworkDefaults];
  int v1 = [v0 valueForKey:@"CountryProviders"];

  uint64_t v2 = +[GEOCountryConfiguration sharedConfiguration];
  id v3 = [v2 countryCode];
  id v4 = [v1 objectForKey:v3];

  unint64_t v5 = GEODefaultsKeyStringForConfigKey(SDWORD2(v12), v13);
  long long v6 = [v4 objectForKey:v5];
  if ([v6 length])
  {
    id v7 = v6;
LABEL_5:
    uint64_t v10 = v7;
    uint64_t v9 = v7;
    goto LABEL_6;
  }
  int v8 = +[GEONetworkDefaults sharedNetworkDefaults];
  uint64_t v9 = [v8 valueForKey:v5];

  if ([v9 length])
  {
    id v7 = v9;
    goto LABEL_5;
  }
  uint64_t v10 = _GEOURLWorldDefaultURLStringWithSource(1, 0, 1);
LABEL_6:

  return v10;
}

id GEOGetURLsFromResourceManifest(void *a1)
{
  return _GEOGetURLInfoFromResourceManifest(a1, &__block_literal_global_162);
}

id _GEOGetURLInfoFromResourceManifest(void *a1, void *a2)
{
  id v4 = a1;
  unint64_t v5 = a2;
  long long v6 = [[GEOResources alloc] initWithData:v4];
  if (v6)
  {
    uint64_t v16 = v6;
    id v17 = v4;
    id v7 = [(GEOResources *)v6 preferedURLSetFor:0];
    int v8 = [MEMORY[0x1E4F1CA60] dictionaryWithCapacity:66];
    for (unint64_t i = 0; i != 66; ++i)
    {
      if (i - 23 < 0x2B || i <= 0x15 && ((1 << i) & 0x3DDE27) != 0)
      {
        uint64_t v10 = 0;
        switch(i)
        {
          case 2uLL:
            if (![v7 hasDirectionsURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 directionsURL];
            goto LABEL_113;
          case 5uLL:
            if (![v7 hasEtaURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 etaURL];
            goto LABEL_113;
          case 9uLL:
            if (![v7 hasSearchAttributionManifestURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 searchAttributionManifestURL];
            goto LABEL_113;
          case 0xAuLL:
            if (![v7 hasProblemSubmissionURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 problemSubmissionURL];
            goto LABEL_113;
          case 0xBuLL:
            if (![v7 hasProblemStatusURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 problemStatusURL];
            goto LABEL_113;
          case 0xCuLL:
            if (![v7 hasProblemCategoriesURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 problemCategoriesURL];
            goto LABEL_113;
          case 0xFuLL:
            if (![v7 hasPolyLocationShiftURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 polyLocationShiftURL];
            goto LABEL_113;
          case 0x10uLL:
            if (![v7 hasBatchReverseGeocoderURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 batchReverseGeocoderURL];
            goto LABEL_113;
          case 0x12uLL:
            if (![v7 hasSimpleETAURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 simpleETAURL];
            goto LABEL_113;
          case 0x13uLL:
            if (![v7 hasAddressCorrectionInitURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 addressCorrectionInitURL];
            goto LABEL_113;
          case 0x14uLL:
            if (![v7 hasAddressCorrectionUpdateURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 addressCorrectionUpdateURL];
            goto LABEL_113;
          case 0x15uLL:
            if (![v7 hasReverseGeocoderVersionsURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 reverseGeocoderVersionsURL];
            goto LABEL_113;
          case 0x17uLL:
            if (![v7 hasAnnouncementsURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 announcementsURL];
            goto LABEL_113;
          case 0x18uLL:
            if (![v7 hasDispatcherURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 dispatcherURL];
            goto LABEL_113;
          case 0x19uLL:
            if (![v7 hasProblemOptInURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 problemOptInURL];
            goto LABEL_113;
          case 0x1AuLL:
            if (![v7 hasAbExperimentURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 abExperimentURL];
            goto LABEL_113;
          case 0x1BuLL:
            if (![v7 hasBusinessPortalBaseURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 businessPortalBaseURL];
            goto LABEL_113;
          case 0x1CuLL:
            if (![v7 hasLogMessageUsageURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 logMessageUsageURL];
            goto LABEL_113;
          case 0x1DuLL:
            if (![v7 hasSpatialLookupURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 spatialLookupURL];
            goto LABEL_113;
          case 0x1EuLL:
            if (![v7 hasRealtimeTrafficProbeURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 realtimeTrafficProbeURL];
            goto LABEL_113;
          case 0x1FuLL:
            if (![v7 hasBatchTrafficProbeURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 batchTrafficProbeURL];
            goto LABEL_113;
          case 0x20uLL:
            if (![v7 hasLogMessageUsageV3URL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 logMessageUsageV3URL];
            goto LABEL_113;
          case 0x21uLL:
            if (![v7 hasProactiveRoutingURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 proactiveRoutingURL];
            goto LABEL_113;
          case 0x22uLL:
            if (![v7 hasBackgroundDispatcherURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 backgroundDispatcherURL];
            goto LABEL_113;
          case 0x23uLL:
            if (![v7 hasBluePOIDispatcherURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 bluePOIDispatcherURL];
            goto LABEL_113;
          case 0x24uLL:
            if (![v7 hasBackgroundRevGeoURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 backgroundRevGeoURL];
            goto LABEL_113;
          case 0x25uLL:
            if (![v7 hasJunctionImageServiceURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 junctionImageServiceURL];
            goto LABEL_113;
          case 0x26uLL:
            if (![v7 hasWifiConnectionQualityProbeURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 wifiConnectionQualityProbeURL];
            goto LABEL_113;
          case 0x27uLL:
            if (![v7 hasAuthProxyURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 authProxyURL];
            goto LABEL_113;
          case 0x28uLL:
            if (![v7 hasMuninBaseURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 muninBaseURL];
            goto LABEL_113;
          case 0x29uLL:
            if (![v7 hasWifiQualityURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 wifiQualityURL];
            goto LABEL_113;
          case 0x2AuLL:
            if (![v7 hasFeedbackSubmissionURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 feedbackSubmissionURL];
            goto LABEL_113;
          case 0x2BuLL:
            if (![v7 hasFeedbackLookupURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 feedbackLookupURL];
            goto LABEL_113;
          case 0x2CuLL:
            if (![v7 hasAnalyticsCohortSessionURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 analyticsCohortSessionURL];
            goto LABEL_113;
          case 0x2DuLL:
            if (![v7 hasAnalyticsLongSessionURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 analyticsLongSessionURL];
            goto LABEL_113;
          case 0x2EuLL:
            if (![v7 hasAnalyticsShortSessionURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 analyticsShortSessionURL];
            goto LABEL_113;
          case 0x2FuLL:
            if (![v7 hasAnalyticsSessionlessURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 analyticsSessionlessURL];
            goto LABEL_113;
          case 0x30uLL:
            if (![v7 hasWebModuleBaseURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 webModuleBaseURL];
            goto LABEL_113;
          case 0x31uLL:
            if (![v7 hasWifiQualityTileURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 wifiQualityTileURL];
            goto LABEL_113;
          case 0x32uLL:
            if (![v7 hasTokenAuthenticationURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 tokenAuthenticationURL];
            goto LABEL_113;
          case 0x33uLL:
            if (![v7 hasAuthenticatedClientFeatureFlagURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 authenticatedClientFeatureFlagURL];
            goto LABEL_113;
          case 0x34uLL:
            if (![v7 hasAddressCorrectionTaggedLocationURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 addressCorrectionTaggedLocationURL];
            goto LABEL_113;
          case 0x35uLL:
            if (![v7 hasEnrichmentSubmissionURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 enrichmentSubmissionURL];
            goto LABEL_113;
          case 0x36uLL:
            if (![v7 hasUgcLogDiscardURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 ugcLogDiscardURL];
            goto LABEL_113;
          case 0x37uLL:
            if (![v7 hasBatchReverseGeocoderPlaceRequestURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 batchReverseGeocoderPlaceRequestURL];
            goto LABEL_113;
          case 0x38uLL:
            if (![v7 hasPressureProbeDataURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 pressureProbeDataURL];
            goto LABEL_113;
          case 0x39uLL:
            if (![v7 hasPoiBusynessActivityCollectionURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 poiBusynessActivityCollectionURL];
            goto LABEL_113;
          case 0x3AuLL:
            if (![v7 hasRapWebBundleURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 rapWebBundleURL];
            goto LABEL_113;
          case 0x3BuLL:
            if (![v7 hasNetworkSelectionHarvestURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 networkSelectionHarvestURL];
            goto LABEL_113;
          case 0x3CuLL:
            if (![v7 hasOfflineDataBatchListURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 offlineDataBatchListURL];
            goto LABEL_113;
          case 0x3DuLL:
            if (![v7 hasOfflineDataSizeURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 offlineDataSizeURL];
            goto LABEL_113;
          case 0x3EuLL:
            if (![v7 hasOfflineDataDownloadBaseURL]) {
              goto LABEL_114;
            }
            uint64_t v11 = [v7 offlineDataDownloadBaseURL];
            goto LABEL_113;
          case 0x3FuLL:
            if ([v7 hasBcxDispatcherURL])
            {
              uint64_t v11 = [v7 bcxDispatcherURL];
LABEL_113:
              uint64_t v10 = (void *)v11;
            }
            else
            {
LABEL_114:
              uint64_t v10 = 0;
            }
LABEL_115:
            long long v12 = v5[2](v5, v10);
            long long v13 = v12;
            if (!v12)
            {
              uint64_t v2 = [MEMORY[0x1E4F1CA98] null];
              long long v13 = v2;
            }
            long long v14 = [NSNumber numberWithUnsignedInteger:i];
            [v8 setObject:v13 forKeyedSubscript:v14];

            if (!v12) {
            break;
            }
          default:
            goto LABEL_115;
        }
      }
    }

    long long v6 = v16;
    id v4 = v17;
  }
  else
  {
    int v8 = 0;
  }

  return v8;
}

uint64_t __GEOGetURLsFromResourceManifest_block_invoke(uint64_t a1, void *a2)
{
  return [a2 url];
}

id GEOGetProxyAuthFromResourceManifest(void *a1)
{
  return _GEOGetURLInfoFromResourceManifest(a1, &__block_literal_global_124);
}

uint64_t __GEOGetProxyAuthFromResourceManifest_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = NSNumber;
  uint64_t v3 = [a2 useAuthProxy];

  return [v2 numberWithBool:v3];
}

void GEOWaitForURLsFromManifestAndThen(void *a1)
{
}

void __GEOGetUserDefaultsLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "UserDefaults");
  int v1 = (void *)qword_1EB2A0308;
  qword_1EB2A0308 = (uint64_t)v0;
}

void sub_189F7F888(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackLayoutConfigParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          uint64_t v16 = 0;
        }
        else {
          uint64_t v16 = a3;
        }
        char v54 = (v16 == 0) | v15;
        id v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        int v19 = (int *)MEMORY[0x1E4F940B8];
        id v20 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
        char v53 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_78;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v17;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v27 = v22++ >= 9;
      if (v27)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_78:
      if (v15)
      {
        char v48 = 1;
        goto LABEL_89;
      }
      if (v16)
      {
        while (1)
        {
          int v49 = *v16++;
          char v50 = 4;
          switch(v49)
          {
            case 0:
              goto LABEL_90;
            case 2:
              goto LABEL_84;
            case 3:
              char v50 = 2;
              goto LABEL_84;
            case 4:
              char v50 = 8;
LABEL_84:
              *(unsigned char *)(a1 + v20[221]) |= v50;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_90;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v15;
    if ((v54 & 1) == 0)
    {
      id v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_63;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + v20[221]) |= 1u;
        while (1)
        {
          uint64_t v39 = *v17;
          unint64_t v40 = *(void *)(v3 + v39);
          if (v40 == -1 || v40 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v41 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v40 + 1;
          v38 |= (unint64_t)(v41 & 0x7F) << v36;
          if ((v41 & 0x80) == 0) {
            goto LABEL_66;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_68;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_66:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_68:
        *(_DWORD *)(a1 + 52) = v38;
        goto LABEL_77;
      case 2:
        if (!v31) {
          goto LABEL_63;
        }
        if ((*(unsigned char *)(a1 + v20[221]) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_86;
          }
          char v47 = 32 * *(unsigned char *)(a1 + v20[221]);
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        uint64_t v43 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v43, (void *)v3)) {
          goto LABEL_87;
        }
        PBReaderRecallMark();
        uint64_t v44 = 24;
        goto LABEL_62;
      case 3:
        if (!v31) {
          goto LABEL_63;
        }
        if ((*(unsigned char *)(a1 + v20[221]) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_86;
          }
          char v47 = *(unsigned char *)(a1 + v20[221]) << 6;
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        uint64_t v43 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v43, (void *)v3)) {
          goto LABEL_87;
        }
        PBReaderRecallMark();
        uint64_t v44 = 16;
        goto LABEL_62;
      case 4:
        if (!v31)
        {
LABEL_63:
          char v46 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v53;
          if ((v46 & 1) == 0)
          {
LABEL_85:
            char v48 = 0;
            goto LABEL_89;
          }
LABEL_77:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_78;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + v20[221]) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_86:
            char v48 = 0;
            goto LABEL_88;
          }
          char v47 = 16 * *(unsigned char *)(a1 + v20[221]);
LABEL_75:
          v7 += v47 >> 7;
          goto LABEL_76;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        uint64_t v43 = objc_alloc_init(GEOPDMapsIdentifier);
        if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v43, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v44 = 32;
LABEL_62:
          id v45 = *(void **)(a1 + v44);
          *(void *)(a1 + v44) = v43;

          --v7;
          id v20 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
LABEL_76:
          char v15 = v53;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_77;
        }
LABEL_87:

        char v48 = 0;
        id v20 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
LABEL_88:
        char v15 = v53;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_89:
        *(unsigned char *)(a1 + v20[221]) |= 4u;
        *(unsigned char *)(a1 + v20[221]) |= 2u;
        *(unsigned char *)(a1 + v20[221]) |= 8u;
        if (v48)
        {
LABEL_90:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_91;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_91:
            int v51 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v42 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v53;
        if (!v42) {
          goto LABEL_85;
        }
        goto LABEL_77;
    }
  }
}

void sub_189F80058(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F801C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F80978(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackLayoutConfigParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackLayoutConfigParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackLayoutConfigParametersReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackLayoutConfigParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackLayoutConfigParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 16) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189F80B40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackLayoutConfigParametersReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackLayoutConfigParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F80BA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLayoutConfigParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    unint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v16 = 0;
          do
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_41;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if ((v20 & 0x80000000) == 0) {
              break;
            }
          }
          while (v16++ <= 8);
          goto LABEL_41;
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1)) {
            goto LABEL_46;
          }
          goto LABEL_40;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_46;
          }
          goto LABEL_40;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_46;
          }
LABEL_40:
          PBReaderRecallMark();
          goto LABEL_41;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_46:
            PBReaderRecallMark();
            return 0;
          }
LABEL_41:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_44;
          }
          break;
      }
    }
  }
LABEL_44:
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_189F81030(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLayoutConfigParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189F81424(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLayoutConfigResultReadAllFrom(void *a1, void *a2, int a3)
{
  unint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          unint64_t v14 = *(void *)&v5[v13];
          if (v14 == -1 || v14 >= *(void *)&v5[*v7]) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v17 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v17 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          unint64_t v19 = objc_alloc_init(GEORPFeedbackLayoutFormConfig);
          if (!GEORPFeedbackLayoutFormConfigReadAllFrom(v19, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addForm:", v19, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v20 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v20 = 0;
  }
  objc_sync_exit(v5);

  return v20;
}

void sub_189F81E74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLayoutConfigResultReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackLayoutConfigResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F81ED8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLayoutConfigResultIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    unint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackLayoutFormConfigIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEORPFeedbackLayoutFormConfigIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    unint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            unint64_t v24 = *(void *)&a1[v23];
            if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            unint64_t v25 = v24 + 1;
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPLayoutFieldIsValid(a1)) {
            goto LABEL_61;
          }
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            unint64_t v29 = *(void *)&a1[v28];
            if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            unint64_t v30 = v29 + 1;
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_61:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        unint64_t v34 = *(void *)&a1[v33];
        if (v34 == -1 || v34 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v35 = v34 + 1;
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v21 = v32++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_58;
      }
LABEL_57:
      a1[*v4] = 1;
LABEL_58:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

BOOL GEORPFeedbackLayoutFieldNameReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    unint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (!v3[*v6])
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v17 = 0;
            unsigned int v18 = 0;
            uint64_t v19 = 0;
            *(unsigned char *)(a1 + 48) |= 0x80u;
            while (1)
            {
              uint64_t v20 = *v4;
              unint64_t v21 = *(void *)&v3[v20];
              if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
                break;
              }
              char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
              *(void *)&v3[v20] = v21 + 1;
              v19 |= (unint64_t)(v22 & 0x7F) << v17;
              if ((v22 & 0x80) == 0) {
                goto LABEL_82;
              }
              v17 += 7;
              BOOL v14 = v18++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_84;
              }
            }
            v3[*v6] = 1;
LABEL_82:
            if (v3[*v6]) {
              LODWORD(v19) = 0;
            }
LABEL_84:
            uint64_t v60 = 44;
            goto LABEL_113;
          case 2u:
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v19 = 0;
            *(unsigned char *)(a1 + 48) |= 0x20u;
            while (2)
            {
              uint64_t v25 = *v4;
              unint64_t v26 = *(void *)&v3[v25];
              if (v26 == -1 || v26 >= *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v26);
                *(void *)&v3[v25] = v26 + 1;
                v19 |= (unint64_t)(v27 & 0x7F) << v23;
                if (v27 < 0)
                {
                  v23 += 7;
                  BOOL v14 = v24++ >= 9;
                  if (v14)
                  {
                    LODWORD(v19) = 0;
                    goto LABEL_88;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v19) = 0;
            }
LABEL_88:
            uint64_t v60 = 36;
            goto LABEL_113;
          case 3u:
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v19 = 0;
            *(unsigned char *)(a1 + 48) |= 1u;
            while (2)
            {
              uint64_t v30 = *v4;
              unint64_t v31 = *(void *)&v3[v30];
              if (v31 == -1 || v31 >= *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
                *(void *)&v3[v30] = v31 + 1;
                v19 |= (unint64_t)(v32 & 0x7F) << v28;
                if (v32 < 0)
                {
                  v28 += 7;
                  BOOL v14 = v29++ >= 9;
                  if (v14)
                  {
                    LODWORD(v19) = 0;
                    goto LABEL_92;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v19) = 0;
            }
LABEL_92:
            uint64_t v60 = 16;
            goto LABEL_113;
          case 4u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v19 = 0;
            *(unsigned char *)(a1 + 48) |= 0x10u;
            while (2)
            {
              uint64_t v35 = *v4;
              unint64_t v36 = *(void *)&v3[v35];
              if (v36 == -1 || v36 >= *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v37 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
                *(void *)&v3[v35] = v36 + 1;
                v19 |= (unint64_t)(v37 & 0x7F) << v33;
                if (v37 < 0)
                {
                  v33 += 7;
                  BOOL v14 = v34++ >= 9;
                  if (v14)
                  {
                    LODWORD(v19) = 0;
                    goto LABEL_96;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v19) = 0;
            }
LABEL_96:
            uint64_t v60 = 32;
            goto LABEL_113;
          case 5u:
            char v38 = 0;
            unsigned int v39 = 0;
            uint64_t v19 = 0;
            *(unsigned char *)(a1 + 48) |= 4u;
            while (2)
            {
              uint64_t v40 = *v4;
              unint64_t v41 = *(void *)&v3[v40];
              if (v41 == -1 || v41 >= *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v42 = *(unsigned char *)(*(void *)&v3[*v7] + v41);
                *(void *)&v3[v40] = v41 + 1;
                v19 |= (unint64_t)(v42 & 0x7F) << v38;
                if (v42 < 0)
                {
                  v38 += 7;
                  BOOL v14 = v39++ >= 9;
                  if (v14)
                  {
                    LODWORD(v19) = 0;
                    goto LABEL_100;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v19) = 0;
            }
LABEL_100:
            uint64_t v60 = 24;
            goto LABEL_113;
          case 6u:
            char v43 = 0;
            unsigned int v44 = 0;
            uint64_t v19 = 0;
            *(unsigned char *)(a1 + 48) |= 8u;
            while (2)
            {
              uint64_t v45 = *v4;
              unint64_t v46 = *(void *)&v3[v45];
              if (v46 == -1 || v46 >= *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v47 = *(unsigned char *)(*(void *)&v3[*v7] + v46);
                *(void *)&v3[v45] = v46 + 1;
                v19 |= (unint64_t)(v47 & 0x7F) << v43;
                if (v47 < 0)
                {
                  v43 += 7;
                  BOOL v14 = v44++ >= 9;
                  if (v14)
                  {
                    LODWORD(v19) = 0;
                    goto LABEL_104;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v19) = 0;
            }
LABEL_104:
            uint64_t v60 = 28;
            goto LABEL_113;
          case 7u:
            char v48 = 0;
            unsigned int v49 = 0;
            uint64_t v19 = 0;
            *(unsigned char *)(a1 + 48) |= 0x40u;
            while (2)
            {
              uint64_t v50 = *v4;
              unint64_t v51 = *(void *)&v3[v50];
              if (v51 == -1 || v51 >= *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v52 = *(unsigned char *)(*(void *)&v3[*v7] + v51);
                *(void *)&v3[v50] = v51 + 1;
                v19 |= (unint64_t)(v52 & 0x7F) << v48;
                if (v52 < 0)
                {
                  v48 += 7;
                  BOOL v14 = v49++ >= 9;
                  if (v14)
                  {
                    LODWORD(v19) = 0;
                    goto LABEL_108;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v19) = 0;
            }
LABEL_108:
            uint64_t v60 = 40;
            goto LABEL_113;
          case 8u:
            char v53 = 0;
            unsigned int v54 = 0;
            uint64_t v19 = 0;
            *(unsigned char *)(a1 + 48) |= 2u;
            while (2)
            {
              uint64_t v55 = *v4;
              unint64_t v56 = *(void *)&v3[v55];
              if (v56 == -1 || v56 >= *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v57 = *(unsigned char *)(*(void *)&v3[*v7] + v56);
                *(void *)&v3[v55] = v56 + 1;
                v19 |= (unint64_t)(v57 & 0x7F) << v53;
                if (v57 < 0)
                {
                  v53 += 7;
                  BOOL v14 = v54++ >= 9;
                  if (v14)
                  {
                    LODWORD(v19) = 0;
                    goto LABEL_112;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v19) = 0;
            }
LABEL_112:
            uint64_t v60 = 20;
LABEL_113:
            *(_DWORD *)(a1 + v60) = v19;
            goto LABEL_114;
          case 9u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_117;
            }
            unint64_t v58 = objc_alloc_init(GEORPIncidentField);
            if (!GEORPIncidentFieldReadAllFrom((uint64_t)v58, v3))
            {

              goto LABEL_117;
            }
            PBReaderRecallMark();
            unint64_t v59 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v58;

LABEL_114:
            if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
              goto LABEL_115;
            }
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_117;
            }
            goto LABEL_114;
        }
      }
    }
LABEL_115:
    BOOL v61 = v3[*v6] == 0;
  }
  else
  {
LABEL_117:
    BOOL v61 = 0;
  }
  objc_sync_exit(v3);

  return v61;
}

void sub_189F853E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLayoutFieldNameReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackLayoutFieldNameReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F8546C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLayoutFieldNameIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    unint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_94;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_85;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_94;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            unint64_t v24 = *(void *)&a1[v23];
            if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
              goto LABEL_85;
            }
            unint64_t v25 = v24 + 1;
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_94;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            unint64_t v29 = *(void *)&a1[v28];
            if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
              goto LABEL_85;
            }
            unint64_t v30 = v29 + 1;
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_94;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            unint64_t v34 = *(void *)&a1[v33];
            if (v34 == -1 || v34 >= *(void *)&a1[*v3]) {
              goto LABEL_85;
            }
            unint64_t v35 = v34 + 1;
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v21 = v32++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_94;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            unint64_t v39 = *(void *)&a1[v38];
            if (v39 == -1 || v39 >= *(void *)&a1[*v3]) {
              goto LABEL_85;
            }
            unint64_t v40 = v39 + 1;
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v21 = v37++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_94;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            unint64_t v44 = *(void *)&a1[v43];
            if (v44 == -1 || v44 >= *(void *)&a1[*v3]) {
              goto LABEL_85;
            }
            unint64_t v45 = v44 + 1;
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v21 = v42++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_94;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v2;
            unint64_t v49 = *(void *)&a1[v48];
            if (v49 == -1 || v49 >= *(void *)&a1[*v3]) {
              goto LABEL_85;
            }
            unint64_t v50 = v49 + 1;
            int v51 = *(char *)(*(void *)&a1[*v5] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v21 = v47++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_94;
          }
          unsigned int v52 = 0;
          break;
        case 9u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPIncidentFieldIsValid(a1)) {
            goto LABEL_94;
          }
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_94:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v53 = *v2;
        unint64_t v54 = *(void *)&a1[v53];
        if (v54 == -1 || v54 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v55 = v54 + 1;
        int v56 = *(char *)(*(void *)&a1[*v5] + v54);
        *(void *)&a1[v53] = v55;
        if (v56 < 0)
        {
          BOOL v21 = v52++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_86;
      }
LABEL_85:
      a1[*v4] = 1;
LABEL_86:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v57 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v57;
}

BOOL GEORPIncidentFieldIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    unint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_42;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_42;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v23 = 0;
        while (1)
        {
          uint64_t v24 = *v2;
          unint64_t v25 = *(void *)&a1[v24];
          if (v25 == -1 || v25 >= *(void *)&a1[*v3]) {
            goto LABEL_39;
          }
          unint64_t v26 = v25 + 1;
          int v27 = *(char *)(*(void *)&a1[*v5] + v25);
          *(void *)&a1[v24] = v26;
          if (v27 < 0)
          {
            BOOL v22 = v23++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_41;
        }
      }
      if (v16 == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_44:
        BOOL v28 = 0;
        goto LABEL_43;
      }
LABEL_41:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_42;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_44;
    }
    unsigned int v17 = 0;
    while (1)
    {
      uint64_t v18 = *v2;
      unint64_t v19 = *(void *)&a1[v18];
      if (v19 == -1 || v19 >= *(void *)&a1[*v3]) {
        break;
      }
      unint64_t v20 = v19 + 1;
      int v21 = *(char *)(*(void *)&a1[*v5] + v19);
      *(void *)&a1[v18] = v20;
      if (v21 < 0)
      {
        BOOL v22 = v17++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_41;
    }
LABEL_39:
    a1[*v4] = 1;
    goto LABEL_41;
  }
LABEL_42:
  BOOL v28 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v28;
}

BOOL GEORPFeedbackLayoutFormConfigReadAllFrom(unsigned char *a1, void *a2, int a3)
{
  unint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      while (!v5[*v8])
      {
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          unint64_t v14 = *(void *)&v5[v13];
          if (v14 == -1 || v14 >= *(void *)&v5[*v7]) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v16 = v11++ >= 9;
          if (v16)
          {
            unint64_t v12 = 0;
            int v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v17 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v17 || (v12 & 7) == 4) {
          break;
        }
        switch((v12 >> 3))
        {
          case 1u:
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            a1[32] |= 4u;
            while (1)
            {
              uint64_t v22 = *v6;
              unint64_t v23 = *(void *)&v5[v22];
              if (v23 == -1 || v23 >= *(void *)&v5[*v7]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v5[*v9] + v23);
              *(void *)&v5[v22] = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if ((v24 & 0x80) == 0) {
                goto LABEL_54;
              }
              v19 += 7;
              BOOL v16 = v20++ >= 9;
              if (v16)
              {
                LODWORD(v21) = 0;
                goto LABEL_56;
              }
            }
            v5[*v8] = 1;
LABEL_54:
            if (v5[*v8]) {
              LODWORD(v21) = 0;
            }
LABEL_56:
            uint64_t v42 = 24;
            goto LABEL_69;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v21 = 0;
            a1[32] |= 1u;
            while (2)
            {
              uint64_t v27 = *v6;
              unint64_t v28 = *(void *)&v5[v27];
              if (v28 == -1 || v28 >= *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v29 = *(unsigned char *)(*(void *)&v5[*v9] + v28);
                *(void *)&v5[v27] = v28 + 1;
                v21 |= (unint64_t)(v29 & 0x7F) << v25;
                if (v29 < 0)
                {
                  v25 += 7;
                  BOOL v16 = v26++ >= 9;
                  if (v16)
                  {
                    LODWORD(v21) = 0;
                    goto LABEL_60;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v21) = 0;
            }
LABEL_60:
            uint64_t v42 = 16;
            goto LABEL_69;
          case 3u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_73;
            }
            unint64_t v30 = objc_alloc_init(GEORPLayoutField);
            if (!GEORPLayoutFieldReadAllFrom((uint64_t)v30, v5, a3))
            {

              goto LABEL_73;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "addLayoutField:", v30, 0, 0);

LABEL_70:
            if (*(void *)&v5[*v6] >= *(void *)&v5[*v7]) {
              goto LABEL_71;
            }
            break;
          case 4u:
            char v31 = 0;
            unsigned int v32 = 0;
            uint64_t v33 = 0;
            a1[32] |= 8u;
            while (2)
            {
              uint64_t v34 = *v6;
              unint64_t v35 = *(void *)&v5[v34];
              if (v35 == -1 || v35 >= *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v36 = *(unsigned char *)(*(void *)&v5[*v9] + v35);
                *(void *)&v5[v34] = v35 + 1;
                v33 |= (unint64_t)(v36 & 0x7F) << v31;
                if (v36 < 0)
                {
                  v31 += 7;
                  BOOL v16 = v32++ >= 9;
                  if (v16)
                  {
                    uint64_t v33 = 0;
                    goto LABEL_64;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              uint64_t v33 = 0;
            }
LABEL_64:
            a1[28] = v33 != 0;
            goto LABEL_70;
          case 6u:
            char v37 = 0;
            unsigned int v38 = 0;
            uint64_t v21 = 0;
            a1[32] |= 2u;
            while (2)
            {
              uint64_t v39 = *v6;
              unint64_t v40 = *(void *)&v5[v39];
              if (v40 == -1 || v40 >= *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v41 = *(unsigned char *)(*(void *)&v5[*v9] + v40);
                *(void *)&v5[v39] = v40 + 1;
                v21 |= (unint64_t)(v41 & 0x7F) << v37;
                if (v41 < 0)
                {
                  v37 += 7;
                  BOOL v16 = v38++ >= 9;
                  if (v16)
                  {
                    LODWORD(v21) = 0;
                    goto LABEL_68;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v21) = 0;
            }
LABEL_68:
            uint64_t v42 = 20;
LABEL_69:
            *(_DWORD *)&a1[v42] = v21;
            goto LABEL_70;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_73;
            }
            goto LABEL_70;
        }
      }
    }
LABEL_71:
    BOOL v43 = v5[*v8] == 0;
  }
  else
  {
LABEL_73:
    BOOL v43 = 0;
  }
  objc_sync_exit(v5);

  return v43;
}

void sub_189F87728(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackLayoutFormConfigReadFrom(unsigned char *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackLayoutFormConfigReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F877A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPLayoutFieldIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    unint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_50;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_51;
          }
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackLayoutFieldNameIsValid(a1)) {
            goto LABEL_54;
          }
          PBReaderRecallMark();
          continue;
        case 3u:
          if (v14 == 2) {
            goto LABEL_32;
          }
          goto LABEL_54;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            unint64_t v24 = *(void *)&a1[v23];
            if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
              goto LABEL_50;
            }
            unint64_t v25 = v24 + 1;
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_51;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v27 = 0;
          break;
        default:
LABEL_32:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_54:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v28 = *v2;
        unint64_t v29 = *(void *)&a1[v28];
        if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v30 = v29 + 1;
        int v31 = *(char *)(*(void *)&a1[*v5] + v29);
        *(void *)&a1[v28] = v30;
        if (v31 < 0)
        {
          BOOL v21 = v27++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_51;
      }
LABEL_50:
      a1[*v4] = 1;
LABEL_51:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEORPIncidentFieldReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    unint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v17 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v23 = *v4;
            unint64_t v24 = *(void *)&v3[v23];
            if (v24 == -1 || v24 >= *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v24 + 1;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if ((v25 & 0x80) == 0) {
              goto LABEL_40;
            }
            v20 += 7;
            BOOL v14 = v21++ >= 9;
            if (v14)
            {
              uint64_t v22 = 0;
              goto LABEL_42;
            }
          }
          v3[*v6] = 1;
LABEL_40:
          if (v3[*v6]) {
            uint64_t v22 = 0;
          }
LABEL_42:
          *(unsigned char *)(a1 + 20) = v22 != 0;
        }
        else if (v17 == 2)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v29 = *v4;
            unint64_t v30 = *(void *)&v3[v29];
            if (v30 == -1 || v30 >= *(void *)&v3[*v5]) {
              break;
            }
            char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if ((v31 & 0x80) == 0) {
              goto LABEL_44;
            }
            v26 += 7;
            BOOL v14 = v27++ >= 9;
            if (v14)
            {
              LODWORD(v28) = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6]) {
            LODWORD(v28) = 0;
          }
LABEL_46:
          *(_DWORD *)(a1 + 16) = v28;
        }
        else if (v17 == 1)
        {
          uint64_t v18 = PBReaderReadString();
          unint64_t v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_49;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v32 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    BOOL v32 = 0;
  }
  objc_sync_exit(v3);

  return v32;
}

void sub_189F89084(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPIncidentFieldReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPIncidentFieldReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F890E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F89950(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPLayoutFieldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 56) >> 4) & 1) + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v7 & 1) {
    BOOL v14 = 0;
  }
  else {
    BOOL v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  BOOL v64 = v15;
  unsigned int v16 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v17 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_99;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      unint64_t v23 = *(void *)(v3 + v22);
      if (v23 == -1 || v23 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v25 = v20++ >= 9;
      if (v25)
      {
        unint64_t v21 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_99:
      if (v13)
      {
        char v58 = 1;
        goto LABEL_110;
      }
      if (!v14) {
        goto LABEL_111;
      }
      while (1)
      {
        int v60 = *v14++;
        int v59 = v60;
        if (v60 == 2) {
          break;
        }
        if (v59 == 3)
        {
          char v61 = 8;
LABEL_108:
          *(unsigned char *)(a1 + 56) |= v61;
        }
        else if (!v59)
        {
          goto LABEL_111;
        }
      }
      char v61 = 16;
      goto LABEL_108;
    }
    unint64_t v28 = v21 >> 3;
    BOOL v29 = v13;
    if (!v64)
    {
      unint64_t v30 = v14;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if ((v7 & 1) == 0) {
          goto LABEL_75;
        }
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        *(unsigned char *)(a1 + 56) |= 2u;
        while (1)
        {
          uint64_t v37 = *v16;
          unint64_t v38 = *(void *)(v3 + v37);
          if (v38 == -1 || v38 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v39 = *(unsigned char *)(*(void *)(v3 + *v18) + v38);
          *(void *)(v3 + v37) = v38 + 1;
          v36 |= (unint64_t)(v39 & 0x7F) << v34;
          if ((v39 & 0x80) == 0) {
            goto LABEL_78;
          }
          v34 += 7;
          BOOL v25 = v35++ >= 9;
          if (v25)
          {
            LODWORD(v36) = 0;
            goto LABEL_80;
          }
        }
        *(unsigned char *)(v3 + *v17) = 1;
LABEL_78:
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v36) = 0;
        }
LABEL_80:
        uint64_t v55 = 48;
        goto LABEL_89;
      case 2:
        if (!v29) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 56) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_109;
          }
          char v56 = 8 * *(unsigned char *)(a1 + 56);
LABEL_94:
          v8 += v56 >> 7;
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_109;
        }
        unint64_t v40 = objc_alloc_init(GEORPFeedbackLayoutFieldName);
        if (GEORPFeedbackLayoutFieldNameReadAllFrom((uint64_t)v40, (void *)v3))
        {
          PBReaderRecallMark();
          char v41 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v40;

          --v8;
          unint64_t v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
          if (v8) {
            char v57 = 1;
          }
          else {
            char v57 = v13;
          }
          if ((v57 & 1) == 0) {
            goto LABEL_99;
          }
          continue;
        }

        char v58 = 0;
        unint64_t v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_110:
        *(unsigned char *)(a1 + 56) |= 0x10u;
        *(unsigned char *)(a1 + 56) |= 8u;
        if (v58)
        {
LABEL_111:
          unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
          if (v13) {
            goto LABEL_112;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v13)
          {
LABEL_112:
            unsigned int v62 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 3:
        if (!v29) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 56) & 8) == 0)
        {
          uint64_t v42 = PBReaderReadString();
          BOOL v43 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v42;

          --v8;
          goto LABEL_95;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_109:
          char v58 = 0;
          goto LABEL_110;
        }
        char v56 = 16 * *(unsigned char *)(a1 + 56);
        goto LABEL_94;
      case 4:
        if ((v7 & 1) == 0) {
          goto LABEL_75;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(unsigned char *)(a1 + 56) |= 4u;
        while (2)
        {
          uint64_t v47 = *v16;
          unint64_t v48 = *(void *)(v3 + v47);
          if (v48 == -1 || v48 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v18) + v48);
            *(void *)(v3 + v47) = v48 + 1;
            v46 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              BOOL v25 = v45++ >= 9;
              if (v25)
              {
                uint64_t v46 = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          uint64_t v46 = 0;
        }
LABEL_84:
        *(unsigned char *)(a1 + 52) = v46 != 0;
        goto LABEL_95;
      case 5:
        if (v7)
        {
          char v50 = 0;
          unsigned int v51 = 0;
          uint64_t v36 = 0;
          *(unsigned char *)(a1 + 56) |= 1u;
          while (1)
          {
            uint64_t v52 = *v16;
            unint64_t v53 = *(void *)(v3 + v52);
            if (v53 == -1 || v53 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v54 = *(unsigned char *)(*(void *)(v3 + *v18) + v53);
            *(void *)(v3 + v52) = v53 + 1;
            v36 |= (unint64_t)(v54 & 0x7F) << v50;
            if ((v54 & 0x80) == 0) {
              goto LABEL_86;
            }
            v50 += 7;
            BOOL v25 = v51++ >= 9;
            if (v25)
            {
              LODWORD(v36) = 0;
              goto LABEL_88;
            }
          }
          *(unsigned char *)(v3 + *v17) = 1;
LABEL_86:
          if (*(unsigned char *)(v3 + *v17)) {
            LODWORD(v36) = 0;
          }
LABEL_88:
          uint64_t v55 = 44;
LABEL_89:
          *(_DWORD *)(a1 + v55) = v36;
        }
        else
        {
LABEL_75:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_109;
          }
        }
        goto LABEL_95;
      default:
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_109;
        }
        goto LABEL_95;
    }
  }
}

void sub_189F8A154(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F8A988(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPLayoutFieldReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPLayoutFieldReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPLayoutFieldReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPLayoutFieldReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPLayoutFieldReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189F8AB30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPLayoutFieldReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPLayoutFieldReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F8AB94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F8AD88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPLayoutFieldIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189F8B12C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOSetQueryForExperimentTypeInDictionary(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v13 = a1;
  id v7 = a4;
  id v8 = objc_msgSend(NSString, "stringWithFormat:", @"%d", a2);
  if (a2 == 1)
  {
    char v9 = [v13 objectForKeyedSubscript:v8];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v10 = v9;
    }
    else
    {
      if (v9)
      {
        uint64_t v11 = [v9 mutableCopy];
      }
      else
      {
        uint64_t v11 = [MEMORY[0x1E4F1CA60] dictionary];
      }
      id v10 = (id)v11;
      [v13 setObject:v11 forKeyedSubscript:v8];
    }
    if (a3 >= 0x3F)
    {
      objc_msgSend(NSString, "stringWithFormat:", @"(unknown: %i)", a3);
      int v12 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      int v12 = off_1E53EB3B8[(int)a3];
    }
    [v10 setObject:v7 forKeyedSubscript:v12];
  }
  else
  {
    [v13 setObject:v7 forKeyedSubscript:v8];
  }
}

void _GEOSetQueryForExperimentType(int a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v9 = a5;
  id v10 = _getValue(a1, a2, 1, 0, 0, 0);
  id v11 = (id)[v10 mutableCopy];

  _GEOSetQueryForExperimentTypeInDictionary(v11, a3, a4, v9);
  _setValue(a1, a2, v11, 1, 0);
}

void sub_189F8D078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_189F8D18C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189F8D3F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F8D698(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F8E798(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189F8E964(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id GEOGetGEORouteBuilder_PersistentDataLog()
{
  if (qword_1EB2A0340 != -1) {
    dispatch_once(&qword_1EB2A0340, &__block_literal_global_166);
  }
  os_log_t v0 = (void *)_MergedGlobals_306;

  return v0;
}

BOOL GEOAbAssignInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    unint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      id v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_51;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_51;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3) {
          break;
        }
        if (v18 == 2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 40) |= 2u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v23 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0) {
              goto LABEL_46;
            }
            v28 += 7;
            BOOL v15 = v29++ >= 9;
            if (v15)
            {
              uint64_t v23 = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6]) {
            uint64_t v23 = 0;
          }
LABEL_48:
          uint64_t v36 = 32;
LABEL_49:
          *(void *)(a1 + v36) = v23;
          goto LABEL_50;
        }
        if (v18 == 1)
        {
          uint64_t v19 = PBReaderReadString();
          unsigned int v20 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v19;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v34 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v35 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v34;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_52;
          }
        }
LABEL_50:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_51;
        }
      }
      char v21 = 0;
      unsigned int v22 = 0;
      uint64_t v23 = 0;
      *(unsigned char *)(a1 + 40) |= 1u;
      while (1)
      {
        uint64_t v24 = *v4;
        uint64_t v25 = *(void *)&v3[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&v3[*v5]) {
          break;
        }
        char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v25);
        *(void *)&v3[v24] = v26;
        v23 |= (unint64_t)(v27 & 0x7F) << v21;
        if ((v27 & 0x80) == 0) {
          goto LABEL_42;
        }
        v21 += 7;
        BOOL v15 = v22++ >= 9;
        if (v15)
        {
          uint64_t v23 = 0;
          goto LABEL_44;
        }
      }
      v3[*v6] = 1;
LABEL_42:
      if (v3[*v6]) {
        uint64_t v23 = 0;
      }
LABEL_44:
      uint64_t v36 = 24;
      goto LABEL_49;
    }
LABEL_51:
    BOOL v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_52:
    BOOL v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_189F8FAA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAbAssignInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOAbAssignInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F8FB04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAbAssignInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    unint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_42;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_42;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v24 = 0;
        while (1)
        {
          uint64_t v25 = *v2;
          uint64_t v26 = *(void *)&a1[v25];
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
            goto LABEL_39;
          }
          int v28 = *(char *)(*(void *)&a1[*v5] + v26);
          *(void *)&a1[v25] = v27;
          if (v28 < 0)
          {
            BOOL v23 = v24++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_41;
        }
      }
      if (v17 == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_44:
        BOOL v29 = 0;
        goto LABEL_43;
      }
LABEL_41:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_42;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_44;
    }
    unsigned int v18 = 0;
    while (1)
    {
      uint64_t v19 = *v2;
      uint64_t v20 = *(void *)&a1[v19];
      unint64_t v21 = v20 + 1;
      if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
        break;
      }
      int v22 = *(char *)(*(void *)&a1[*v5] + v20);
      *(void *)&a1[v19] = v21;
      if (v22 < 0)
      {
        BOOL v23 = v18++ > 8;
        if (!v23) {
          continue;
        }
      }
      goto LABEL_41;
    }
LABEL_39:
    a1[*v4] = 1;
    goto LABEL_41;
  }
LABEL_42:
  BOOL v29 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v29;
}

unint64_t GEOAddressReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOAddressReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F90CC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    unint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 16)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_38;
        }
        a1[*v4] = 1;
      }
      else if (v17 == 15)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOStructuredAddressIsValid(a1)) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
      }
      else if (v17 == 11 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        PBReaderRecallMark();
        return 0;
      }
LABEL_38:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEOStructuredAddressIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    unint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_84;
          }
          goto LABEL_68;
        case 2u:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_84;
        case 3u:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_84;
        case 4u:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_84;
        case 5u:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_84;
        case 6u:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_84;
        case 7u:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_84;
        case 8u:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_84;
        case 9u:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_84;
        case 0xAu:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_84;
        case 0xBu:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_84;
        case 0xCu:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_84;
        case 0xDu:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_84;
        case 0xEu:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_84;
        case 0xFu:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_84;
        case 0x10u:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_84;
        case 0x11u:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_84;
        case 0x12u:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_84;
        case 0x13u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOSubPremiseIsValid(a1)) {
            goto LABEL_66;
          }
          goto LABEL_84;
        case 0x14u:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_84;
        default:
          if ((v8 >> 3) == 100)
          {
            if (v15 == 2)
            {
              if (!PBReaderPlaceMark())
              {
LABEL_84:
                PBReaderRecallMark();
                return 0;
              }
LABEL_72:
              while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
              {
                unsigned int v22 = a1[*v4];
                if (a1[*v4]) {
                  break;
                }
                while (1)
                {
                  uint64_t v23 = *v2;
                  uint64_t v24 = *(void *)&a1[v23];
                  unint64_t v25 = v24 + 1;
                  if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                    break;
                  }
                  int v26 = *(char *)(*(void *)&a1[*v5] + v24);
                  *(void *)&a1[v23] = v25;
                  if (v26 < 0)
                  {
                    BOOL v13 = v22++ >= 9;
                    if (!v13) {
                      continue;
                    }
                  }
                  goto LABEL_72;
                }
                a1[*v4] = 1;
              }
LABEL_66:
              PBReaderRecallMark();
            }
            else
            {
              if ((v8 & 7) != 0) {
                goto LABEL_84;
              }
              while (1)
              {
                uint64_t v17 = *v2;
                uint64_t v18 = *(void *)&a1[v17];
                unint64_t v19 = v18 + 1;
                if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
                  break;
                }
                int v20 = *(char *)(*(void *)&a1[*v5] + v18);
                *(void *)&a1[v17] = v19;
                if (v20 < 0)
                {
                  unsigned int v21 = v15++;
                  if (v21 <= 8) {
                    continue;
                  }
                }
                goto LABEL_69;
              }
              a1[*v4] = 1;
            }
          }
          else
          {
LABEL_68:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_84;
            }
          }
LABEL_69:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_82;
          }
          break;
      }
    }
  }
LABEL_82:
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOAddressIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189F9193C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAttributeKeyValueReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        unsigned __int8 v15 = v14 | v7;
        unsigned __int8 v51 = v14 & ~(_BYTE)v7 | v8;
        if (((v14 | v7) | v9)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        uint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_59;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_59:
      int v49 = 1;
      goto LABEL_60;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      unint64_t v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 2) {
      break;
    }
    if (v30 == 1)
    {
      if (v31)
      {
        if ((*(unsigned char *)(a1 + 52) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_79;
          }
          char v43 = *(unsigned char *)(a1 + 52) << 6;
          goto LABEL_57;
        }
        uint64_t v36 = PBReaderReadString();
        uint64_t v37 = 24;
        goto LABEL_44;
      }
    }
    else if ((v51 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v40 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v39;
      }
      int v41 = PBUnknownFieldAdd();
      uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
      if (!v41)
      {
        int v49 = 0;
        char v50 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
        goto LABEL_62;
      }
      goto LABEL_58;
    }
LABEL_51:
    char v42 = PBReaderSkipValueWithTag();
    uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
    if ((v42 & 1) == 0)
    {
      int v49 = 0;
LABEL_60:
      char v50 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
      goto LABEL_61;
    }
LABEL_58:
    if (!((v15 | v51) & 1 | (v10 != 0))) {
      goto LABEL_59;
    }
  }
  if (!v31) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) == 0)
  {
    uint64_t v36 = PBReaderReadString();
    uint64_t v37 = 32;
LABEL_44:
    unint64_t v38 = *(void **)(a1 + v37);
    *(void *)(a1 + v37) = v36;

    uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v43 = 32 * *(unsigned char *)(a1 + 52);
LABEL_57:
    v10 += v43 >> 7;
    uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_58;
  }
LABEL_79:
  int v49 = 0;
  char v50 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
  uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_61:
  if ((v51 & 1) == 0) {
    goto LABEL_63;
  }
LABEL_62:
  *(unsigned char *)(a1 + v50[279]) |= 1u;
LABEL_63:
  if (v15 & 1 | ((v49 & 1) == 0))
  {
    *(unsigned char *)(a1 + v50[279]) |= 2u;
    *(unsigned char *)(a1 + v50[279]) |= 4u;
    goto LABEL_73;
  }
  if (v16)
  {
    while (1)
    {
      int v46 = *v16++;
      int v45 = v46;
      if (v46 == 1) {
        break;
      }
      if (v45 == 2)
      {
        char v44 = 4;
LABEL_69:
        *(unsigned char *)(a1 + v50[279]) |= v44;
      }
      else if (!v45)
      {
        goto LABEL_73;
      }
    }
    char v44 = 2;
    goto LABEL_69;
  }
LABEL_73:
  if (v49)
  {
    unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
    if ((v15 & 1) == 0) {
      return v3;
    }
LABEL_77:
    uint64_t v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v15) {
      goto LABEL_77;
    }
  }
  return v3;
}

void sub_189F922F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F923D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAttributeKeyValueReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOAttributeKeyValueReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOAttributeKeyValueReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOAttributeKeyValueReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOAttributeKeyValueReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189F927B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F92944(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAttributeKeyValueIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189F92B30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F92F60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCarInfoReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 132);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 128)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  v11.i64[0] = 0x100000001;
  v11.i64[1] = 0x100000001;
  unsigned int v12 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32((uint32x4_t)vdupq_n_s32(*(_DWORD *)(a1 + 160)), (uint32x4_t)xmmword_18A63EC20), v11))+ ((*(_DWORD *)(a1 + 160) >> 15) & 1)+ ((*(_DWORD *)(a1 + 160) >> 11) & 1)+ ((*(_DWORD *)(a1 + 160) >> 9) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v15 = v12 > 3;
        char v16 = v15 & ~(_BYTE)v10 | v9;
        char v17 = v15 | v10;
        if (((v15 | v10) | v8)) {
          uint64_t v18 = 0;
        }
        else {
          uint64_t v18 = a3;
        }
        unint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        int v20 = 1;
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        char v22 = v16;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_235;
        }
        char v144 = v16;
        char v146 = v17 | v16;
        char v147 = (v18 == 0) | v17;
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        char v145 = v17;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
LABEL_9:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_233;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v19;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_24;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_24:
    int v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v26 = 0;
    }
LABEL_26:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_233:
      int v20 = 1;
      goto LABEL_234;
    }
    unint64_t v35 = v26 >> 3;
    BOOL v36 = v17;
    if ((v147 & 1) == 0)
    {
      uint64_t v37 = v18;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 2:
        if (!v36) {
          goto LABEL_166;
        }
        if ((*(unsigned char *)(a1 + 161) & 0x20) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 104;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_255;
        }
        int v125 = (int)(*(_DWORD *)(a1 + 160) << 18) >> 31;
        goto LABEL_210;
      case 3:
        if (!v36) {
          goto LABEL_166;
        }
        if ((*(unsigned char *)(a1 + 161) & 0x40) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 112;
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_255;
        }
        int v125 = (int)(*(_DWORD *)(a1 + 160) << 17) >> 31;
        goto LABEL_210;
      case 4:
        if ((v8 & 1) == 0)
        {
          char v120 = PBReaderSkipValueWithTag();
          char v17 = v145;
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          if ((v120 & 1) == 0) {
            goto LABEL_253;
          }
          goto LABEL_231;
        }
        if (!PBReaderPlaceMark() || (GEOScreenResolutionReadAllFrom(a1 + 72, v3) & 1) == 0) {
          goto LABEL_255;
        }
        PBReaderRecallMark();
        *(_DWORD *)(a1 + 160) |= 1u;
        goto LABEL_229;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(_DWORD *)(a1 + 160) |= 8u;
        while (2)
        {
          uint64_t v49 = *v19;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v23) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v31 = v47++ >= 9;
              if (v31)
              {
                LODWORD(v48) = 0;
                goto LABEL_171;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v48) = 0;
        }
LABEL_171:
        uint64_t v122 = 148;
        goto LABEL_188;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        *(_DWORD *)(a1 + 160) |= 0x20u;
        while (2)
        {
          uint64_t v56 = *v19;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v23) + v57);
            *(void *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              BOOL v31 = v54++ >= 9;
              if (v31)
              {
                uint64_t v55 = 0;
                goto LABEL_175;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v55 = 0;
        }
LABEL_175:
        BOOL v123 = v55 != 0;
        uint64_t v124 = 156;
        goto LABEL_201;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v48 = 0;
        *(_DWORD *)(a1 + 160) |= 0x10u;
        while (2)
        {
          uint64_t v62 = *v19;
          uint64_t v63 = *(void *)(v3 + v62);
          unint64_t v64 = v63 + 1;
          if (v63 == -1 || v64 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(v3 + *v23) + v63);
            *(void *)(v3 + v62) = v64;
            v48 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              BOOL v31 = v61++ >= 9;
              if (v31)
              {
                LODWORD(v48) = 0;
                goto LABEL_179;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v48) = 0;
        }
LABEL_179:
        uint64_t v122 = 152;
        goto LABEL_188;
      case 8:
        if (!v36 || (*(unsigned char *)(a1 + 161) & 4) != 0) {
          goto LABEL_166;
        }
        if (v33 != 2)
        {
          char v126 = 0;
          unsigned int v127 = 0;
          uint64_t v128 = 0;
          while (1)
          {
            uint64_t v129 = *v19;
            uint64_t v130 = *(void *)(v3 + v129);
            unint64_t v131 = v130 + 1;
            if (v130 == -1 || v131 > *(void *)(v3 + *v6)) {
              break;
            }
            char v132 = *(unsigned char *)(*(void *)(v3 + *v23) + v130);
            *(void *)(v3 + v129) = v131;
            v128 |= (unint64_t)(v132 & 0x7F) << v126;
            if (v132 < 0)
            {
              v126 += 7;
              BOOL v31 = v127++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_228;
          }
          *(unsigned char *)(v3 + *v21) = 1;
          goto LABEL_228;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_255;
        }
        while (1)
        {
          int v66 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_211;
          }
          char v67 = 0;
          unsigned int v68 = 0;
          uint64_t v69 = 0;
          unint64_t v70 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v71 = *v19;
            uint64_t v72 = *(void *)(v3 + v71);
            unint64_t v73 = v72 + 1;
            if (v72 == -1 || v73 > *(void *)(v3 + *v6)) {
              break;
            }
            char v74 = *(unsigned char *)(*(void *)(v3 + *v70) + v72);
            *(void *)(v3 + v71) = v73;
            v69 |= (unint64_t)(v74 & 0x7F) << v67;
            if (v74 < 0)
            {
              v67 += 7;
              BOOL v31 = v68++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_92;
          }
          *(unsigned char *)(v3 + *v66) = 1;
LABEL_92:
          PBRepeatedInt32Add();
        }
      case 9:
        if (!v36) {
          goto LABEL_166;
        }
        if ((*(unsigned char *)(a1 + 161) & 0x10) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 96;
LABEL_96:
          unint64_t v75 = *(void **)(a1 + v42);
          *(void *)(a1 + v42) = v41;
          goto LABEL_102;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_255;
        }
        int v125 = (int)(*(_DWORD *)(a1 + 160) << 19) >> 31;
        goto LABEL_210;
      case 10:
        if (!v36) {
          goto LABEL_166;
        }
        if ((*(unsigned char *)(a1 + 161) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_255;
          }
          int v125 = (int)(*(_DWORD *)(a1 + 160) << 16) >> 31;
LABEL_210:
          v7 += v125;
          goto LABEL_229;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_255;
        }
        int v76 = objc_alloc_init(GEOScreenDimension);
        if (GEOScreenDimensionReadAllFrom((uint64_t)v76, (void *)v3))
        {
          PBReaderRecallMark();
          unint64_t v75 = *(void **)(a1 + 120);
          *(void *)(a1 + 120) = v76;
LABEL_102:

          --v7;
LABEL_229:
          char v17 = v145;
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_230:
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
LABEL_231:
          if (!(v146 & 1 | (v7 != 0)) || *(void *)(v3 + *v19) >= *(void *)(v3 + *v6)) {
            goto LABEL_233;
          }
          continue;
        }

LABEL_255:
        int v20 = 0;
        char v17 = v145;
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_234:
        char v22 = v144;
LABEL_235:
        if (v22) {
LABEL_236:
        }
          *(_DWORD *)(a1 + 160) |= 0x200u;
        if (v17 & 1 | ((v20 & 1) == 0))
        {
          *(_DWORD *)(a1 + 160) |= 0x2000u;
          *(_DWORD *)(a1 + 160) |= 0x4000u;
          *(_DWORD *)(a1 + 160) |= 0x400u;
          *(_DWORD *)(a1 + 160) |= 0x1000u;
          *(_DWORD *)(a1 + 160) |= 0x8000u;
          *(_DWORD *)(a1 + 160) |= 0x800u;
        }
        else if (v18)
        {
          while (1)
          {
            int v140 = *v18++;
            int v141 = 0x2000;
            switch(v140)
            {
              case 0:
                goto LABEL_247;
              case 2:
                goto LABEL_246;
              case 3:
                int v141 = 0x4000;
                goto LABEL_246;
              case 8:
                int v141 = 1024;
                goto LABEL_246;
              case 9:
                int v141 = 4096;
                goto LABEL_246;
              case 10:
                int v141 = 0x8000;
                goto LABEL_246;
              case 13:
                int v141 = 2048;
LABEL_246:
                *(_DWORD *)(a1 + 160) |= v141;
                break;
              default:
                continue;
            }
          }
        }
LABEL_247:
        if (v20)
        {
          uint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if ((v17 & 1) == 0) {
            return v3;
          }
LABEL_251:
          unsigned int v142 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          uint64_t v3 = 0;
          if (v17) {
            goto LABEL_251;
          }
        }
        return v3;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        char v77 = 0;
        unsigned int v78 = 0;
        uint64_t v48 = 0;
        *(_DWORD *)(a1 + 160) |= 4u;
        while (2)
        {
          uint64_t v79 = *v19;
          uint64_t v80 = *(void *)(v3 + v79);
          unint64_t v81 = v80 + 1;
          if (v80 == -1 || v81 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v82 = *(unsigned char *)(*(void *)(v3 + *v23) + v80);
            *(void *)(v3 + v79) = v81;
            v48 |= (unint64_t)(v82 & 0x7F) << v77;
            if (v82 < 0)
            {
              v77 += 7;
              BOOL v31 = v78++ >= 9;
              if (v31)
              {
                LODWORD(v48) = 0;
                goto LABEL_183;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v48) = 0;
        }
LABEL_183:
        uint64_t v122 = 144;
        goto LABEL_188;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        char v83 = 0;
        unsigned int v84 = 0;
        uint64_t v48 = 0;
        *(_DWORD *)(a1 + 160) |= 2u;
        while (2)
        {
          uint64_t v85 = *v19;
          uint64_t v86 = *(void *)(v3 + v85);
          unint64_t v87 = v86 + 1;
          if (v86 == -1 || v87 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v88 = *(unsigned char *)(*(void *)(v3 + *v23) + v86);
            *(void *)(v3 + v85) = v87;
            v48 |= (unint64_t)(v88 & 0x7F) << v83;
            if (v88 < 0)
            {
              v83 += 7;
              BOOL v31 = v84++ >= 9;
              if (v31)
              {
                LODWORD(v48) = 0;
                goto LABEL_187;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v48) = 0;
        }
LABEL_187:
        uint64_t v122 = 140;
LABEL_188:
        *(_DWORD *)(a1 + v122) = v48;
        goto LABEL_231;
      case 13:
        if (!v36 || (*(unsigned char *)(a1 + 161) & 8) != 0)
        {
          char v119 = PBReaderSkipValueWithTag();
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          char v17 = v145;
          if ((v119 & 1) == 0) {
            goto LABEL_253;
          }
          goto LABEL_231;
        }
        if (v33 != 2)
        {
          char v133 = 0;
          unsigned int v134 = 0;
          uint64_t v135 = 0;
          while (1)
          {
            uint64_t v136 = *v19;
            uint64_t v137 = *(void *)(v3 + v136);
            unint64_t v138 = v137 + 1;
            if (v137 == -1 || v138 > *(void *)(v3 + *v6)) {
              break;
            }
            char v139 = *(unsigned char *)(*(void *)(v3 + *v23) + v137);
            *(void *)(v3 + v136) = v138;
            v135 |= (unint64_t)(v139 & 0x7F) << v133;
            if (v139 < 0)
            {
              v133 += 7;
              BOOL v31 = v134++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_228;
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_228:
          PBRepeatedInt32Add();
          goto LABEL_229;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_255;
        }
        while (1)
        {
          uint64_t v89 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v90 = 0;
          unsigned int v91 = 0;
          uint64_t v92 = 0;
          unsigned int v93 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v94 = *v19;
            uint64_t v95 = *(void *)(v3 + v94);
            unint64_t v96 = v95 + 1;
            if (v95 == -1 || v96 > *(void *)(v3 + *v6)) {
              break;
            }
            char v97 = *(unsigned char *)(*(void *)(v3 + *v93) + v95);
            *(void *)(v3 + v94) = v96;
            v92 |= (unint64_t)(v97 & 0x7F) << v90;
            if (v97 < 0)
            {
              v90 += 7;
              BOOL v31 = v91++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_133;
          }
          *(unsigned char *)(v3 + *v89) = 1;
LABEL_133:
          PBRepeatedInt32Add();
        }
LABEL_211:
        PBReaderRecallMark();
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        char v17 = v145;
        goto LABEL_230;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        char v98 = 0;
        unsigned int v99 = 0;
        uint64_t v100 = 0;
        *(_DWORD *)(a1 + 160) |= 0x80u;
        while (2)
        {
          uint64_t v101 = *v19;
          uint64_t v102 = *(void *)(v3 + v101);
          unint64_t v103 = v102 + 1;
          if (v102 == -1 || v103 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v104 = *(unsigned char *)(*(void *)(v3 + *v23) + v102);
            *(void *)(v3 + v101) = v103;
            v100 |= (unint64_t)(v104 & 0x7F) << v98;
            if (v104 < 0)
            {
              v98 += 7;
              BOOL v31 = v99++ >= 9;
              if (v31)
              {
                uint64_t v100 = 0;
                goto LABEL_192;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v100 = 0;
        }
LABEL_192:
        BOOL v123 = v100 != 0;
        uint64_t v124 = 158;
        goto LABEL_201;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        char v105 = 0;
        unsigned int v106 = 0;
        uint64_t v107 = 0;
        *(_DWORD *)(a1 + 160) |= 0x40u;
        while (2)
        {
          uint64_t v108 = *v19;
          uint64_t v109 = *(void *)(v3 + v108);
          unint64_t v110 = v109 + 1;
          if (v109 == -1 || v110 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v111 = *(unsigned char *)(*(void *)(v3 + *v23) + v109);
            *(void *)(v3 + v108) = v110;
            v107 |= (unint64_t)(v111 & 0x7F) << v105;
            if (v111 < 0)
            {
              v105 += 7;
              BOOL v31 = v106++ >= 9;
              if (v31)
              {
                uint64_t v107 = 0;
                goto LABEL_196;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v107 = 0;
        }
LABEL_196:
        BOOL v123 = v107 != 0;
        uint64_t v124 = 157;
        goto LABEL_201;
      case 16:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        char v112 = 0;
        unsigned int v113 = 0;
        uint64_t v114 = 0;
        *(_DWORD *)(a1 + 160) |= 0x100u;
        while (2)
        {
          uint64_t v115 = *v19;
          uint64_t v116 = *(void *)(v3 + v115);
          unint64_t v117 = v116 + 1;
          if (v116 == -1 || v117 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v118 = *(unsigned char *)(*(void *)(v3 + *v23) + v116);
            *(void *)(v3 + v115) = v117;
            v114 |= (unint64_t)(v118 & 0x7F) << v112;
            if (v118 < 0)
            {
              v112 += 7;
              BOOL v31 = v113++ >= 9;
              if (v31)
              {
                uint64_t v114 = 0;
                goto LABEL_200;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v114 = 0;
        }
LABEL_200:
        BOOL v123 = v114 != 0;
        uint64_t v124 = 159;
LABEL_201:
        *(unsigned char *)(a1 + v124) = v123;
        goto LABEL_231;
      default:
        if ((v144 & 1) == 0 || (*(unsigned char *)(a1 + 161) & 2) != 0)
        {
LABEL_166:
          char v121 = PBReaderSkipValueWithTag();
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          char v17 = v145;
          if ((v121 & 1) == 0)
          {
LABEL_253:
            int v20 = 0;
            goto LABEL_234;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v44 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v43;
          }
          int v45 = PBUnknownFieldAdd();
          char v17 = v145;
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v45)
          {
            int v20 = 0;
            goto LABEL_236;
          }
        }
        goto LABEL_231;
    }
  }
}

void sub_189F94194(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F947AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F94C5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F94DD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F9503C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F96904(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCarInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 132))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOCarInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 136));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 128) = [v8 position];
  *(_DWORD *)(a1 + 132) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOCarInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOCarInfoReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOCarInfoReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 120) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 136));
  return Specified;
}

void sub_189F96AA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCarInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOCarInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F96B0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCarInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    unint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 2u:
          if (v15 != 2) {
            goto LABEL_137;
          }
          goto LABEL_59;
        case 3u:
          if (v15 == 2) {
            goto LABEL_59;
          }
          goto LABEL_137;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOScreenResolutionIsValid(a1)) {
            goto LABEL_137;
          }
          goto LABEL_64;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_112;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_113;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_112;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_113;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_112;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_113;
          }
        case 8u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_137;
            }
            while (1)
            {
              uint64_t v33 = *v2;
              uint64_t v34 = *(void *)&a1[v33];
              unint64_t v35 = v34 + 1;
              if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
                goto LABEL_112;
              }
              int v36 = *(char *)(*(void *)&a1[*v5] + v34);
              *(void *)&a1[v33] = v35;
              if (v36 < 0)
              {
                unsigned int v37 = v15++;
                if (v37 <= 8) {
                  continue;
                }
              }
              goto LABEL_113;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_137;
          }
LABEL_116:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v68 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v69 = *v2;
              uint64_t v70 = *(void *)&a1[v69];
              unint64_t v71 = v70 + 1;
              if (v70 == -1 || v71 > *(void *)&a1[*v3]) {
                break;
              }
              int v72 = *(char *)(*(void *)&a1[*v5] + v70);
              *(void *)&a1[v69] = v71;
              if (v72 < 0)
              {
                BOOL v13 = v68++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_116;
            }
            a1[*v4] = 1;
          }
          goto LABEL_64;
        case 9u:
          if (v15 == 2) {
            goto LABEL_59;
          }
          goto LABEL_137;
        case 0xAu:
          if (v15 == 2 && PBReaderPlaceMark() && GEOScreenDimensionIsValid(a1)) {
            goto LABEL_64;
          }
          goto LABEL_137;
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_112;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_113;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_112;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_113;
          }
        case 0xDu:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_137:
              PBReaderRecallMark();
              return 0;
            }
LABEL_126:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v73 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v74 = *v2;
                uint64_t v75 = *(void *)&a1[v74];
                unint64_t v76 = v75 + 1;
                if (v75 == -1 || v76 > *(void *)&a1[*v3]) {
                  break;
                }
                int v77 = *(char *)(*(void *)&a1[*v5] + v75);
                *(void *)&a1[v74] = v76;
                if (v77 < 0)
                {
                  BOOL v13 = v73++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_126;
              }
              a1[*v4] = 1;
            }
LABEL_64:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_137;
            }
            while (1)
            {
              uint64_t v48 = *v2;
              uint64_t v49 = *(void *)&a1[v48];
              unint64_t v50 = v49 + 1;
              if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
                break;
              }
              int v51 = *(char *)(*(void *)&a1[*v5] + v49);
              *(void *)&a1[v48] = v50;
              if (v51 < 0)
              {
                unsigned int v52 = v15++;
                if (v52 <= 8) {
                  continue;
                }
              }
              goto LABEL_113;
            }
LABEL_112:
            a1[*v4] = 1;
          }
LABEL_113:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_135;
          }
          break;
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v53 = 0;
          while (1)
          {
            uint64_t v54 = *v2;
            uint64_t v55 = *(void *)&a1[v54];
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
              goto LABEL_112;
            }
            int v57 = *(char *)(*(void *)&a1[*v5] + v55);
            *(void *)&a1[v54] = v56;
            if (v57 < 0)
            {
              BOOL v22 = v53++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_113;
          }
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v58 = 0;
          while (1)
          {
            uint64_t v59 = *v2;
            uint64_t v60 = *(void *)&a1[v59];
            unint64_t v61 = v60 + 1;
            if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
              goto LABEL_112;
            }
            int v62 = *(char *)(*(void *)&a1[*v5] + v60);
            *(void *)&a1[v59] = v61;
            if (v62 < 0)
            {
              BOOL v22 = v58++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_113;
          }
        case 0x10u:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v63 = 0;
          while (1)
          {
            uint64_t v64 = *v2;
            uint64_t v65 = *(void *)&a1[v64];
            unint64_t v66 = v65 + 1;
            if (v65 == -1 || v66 > *(void *)&a1[*v3]) {
              goto LABEL_112;
            }
            int v67 = *(char *)(*(void *)&a1[*v5] + v65);
            *(void *)&a1[v64] = v66;
            if (v67 < 0)
            {
              BOOL v22 = v63++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_113;
          }
        default:
LABEL_59:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_137;
          }
          goto LABEL_113;
      }
    }
  }
LABEL_135:
  BOOL v78 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v78;
}

uint64_t GEOScreenResolutionIsValid(void *a1)
{
  v4[3] = [a1 position];
  v4[4] = [a1 length];
  memset(v4, 0, 24);
  uint64_t AllFrom = GEOScreenResolutionReadAllFrom((uint64_t)v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

BOOL GEOScreenDimensionIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    unint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v16 != 1) {
          goto LABEL_30;
        }
        uint64_t v18 = *v2;
        unint64_t v19 = *(void *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v20 = v19 + 8, v20 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v18] = v20;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_30:
        BOOL v21 = 0;
        goto LABEL_29;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_29:
  PBReaderRecallMark();
  return v21;
}

void sub_189F977C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOScreenResolutionWriteTo(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 16);
  if ((v2 & 2) != 0)
  {
    Class result = PBDataWriterWriteDoubleField();
    char v2 = *(unsigned char *)(v1 + 16);
  }
  if (v2)
  {
    return PBDataWriterWriteDoubleField();
  }
  return result;
}

BOOL GEOCarInfoIsDirty(os_unfair_lock_s *a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner(a1 + 34);
  BOOL v2 = (a1[40]._os_unfair_lock_opaque & 0x1FC00) != 0;
  os_unfair_lock_unlock(a1 + 34);
  return v2;
}

void sub_189F97F38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOScreenResolutionEquals(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

void sub_189F98800(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCoarseLocationMetadataReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    unint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189F991A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCoarseLocationMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOCoarseLocationMetadataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F99204(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCoarseLocationMetadataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    unint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

id GEOECEFCoordinateDescription(uint64_t a1)
{
  BOOL v2 = NSString;
  id v3 = _GEOECEFCoordinateDictionaryRepresentation(a1);
  id v4 = [v2 stringWithFormat:@"GEOECEFCoordinate<%p> %@", a1, v3];

  return v4;
}

id _GEOECEFCoordinateDictionaryRepresentation(uint64_t a1)
{
  BOOL v2 = [MEMORY[0x1E4F1CA60] dictionary];
  char v3 = *(unsigned char *)(a1 + 24);
  if (v3)
  {
    char v6 = [NSNumber numberWithDouble:*(double *)a1];
    [v2 setObject:v6 forKey:@"x"];

    char v3 = *(unsigned char *)(a1 + 24);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 24) & 2) == 0)
  {
    goto LABEL_3;
  }
  unsigned int v7 = [NSNumber numberWithDouble:*(double *)(a1 + 8)];
  [v2 setObject:v7 forKey:@"y"];

  if ((*(unsigned char *)(a1 + 24) & 4) != 0)
  {
LABEL_4:
    id v4 = [NSNumber numberWithDouble:*(double *)(a1 + 16)];
    [v2 setObject:v4 forKey:@"z"];
  }
LABEL_5:

  return v2;
}

void _GEOECEFCoordinateFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  id v9 = a1;
  char v3 = [v9 objectForKeyedSubscript:@"x"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 24) |= 1u;
    [v3 doubleValue];
    *(void *)a2 = v4;
  }

  unint64_t v5 = [v9 objectForKeyedSubscript:@"y"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 24) |= 2u;
    [v5 doubleValue];
    *(void *)(a2 + 8) = v6;
  }

  unsigned int v7 = [v9 objectForKeyedSubscript:@"z"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 24) |= 4u;
    [v7 doubleValue];
    *(void *)(a2 + 16) = v8;
  }
}

uint64_t GEOECEFCoordinateReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOECEFCoordinateReadAllFrom(a1, a2);
}

uint64_t GEOECEFCoordinateReadAllFrom(uint64_t a1, uint64_t a2)
{
  char v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v19 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 24) |= 4u;
        uint64_t v23 = *v3;
        unint64_t v24 = *(void *)(a2 + v23);
        if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v25 = *(void *)(*(void *)(a2 + *v7) + v24);
          *(void *)(a2 + v23) = v24 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          uint64_t v25 = 0;
        }
        *(void *)(a1 + 16) = v25;
      }
      else if (v19 == 2)
      {
        *(unsigned char *)(a1 + 24) |= 2u;
        uint64_t v26 = *v3;
        unint64_t v27 = *(void *)(a2 + v26);
        if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v28 = *(void *)(*(void *)(a2 + *v7) + v27);
          *(void *)(a2 + v26) = v27 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          uint64_t v28 = 0;
        }
        *(void *)(a1 + 8) = v28;
      }
      else if (v19 == 1)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        uint64_t v20 = *v3;
        unint64_t v21 = *(void *)(a2 + v20);
        if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v22 = *(void *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          uint64_t v22 = 0;
        }
        *(void *)a1 = v22;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t GEOECEFCoordinateWriteTo(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 24);
  if ((v2 & 1) == 0)
  {
    if ((*(unsigned char *)(result + 24) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PBDataWriterWriteDoubleField();
    if ((*(unsigned char *)(v1 + 24) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PBDataWriterWriteDoubleField();
  char v2 = *(unsigned char *)(v1 + 24);
  if ((v2 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v2 & 4) == 0) {
    return result;
  }
LABEL_7:

  return PBDataWriterWriteDoubleField();
}

BOOL GEOECEFCoordinateEquals(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

uint64_t GEOECEFCoordinateHash()
{
  return PBHashBytes();
}

uint64_t GEOECEFCoordinateIsValid(void *a1)
{
  uint64_t v5 = [a1 position];
  uint64_t v6 = [a1 length];
  memset(v4, 0, sizeof(v4));
  uint64_t AllFrom = GEOECEFCoordinateReadAllFrom((uint64_t)v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

BOOL GEOGeoServiceTagReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOGeoServiceTagReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F9AA14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOGeoServiceTagIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = 0;
  }
  else
  {
    int v5 = 0;
    uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v2;
        uint64_t v11 = *(void *)&a1[v10];
        unint64_t v12 = v11 + 1;
        if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        if (v8++ >= 9)
        {
          unint64_t v9 = 0;
          int v15 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v15 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v16 = v9 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v9 >> 3) == 2)
      {
        uint64_t v24 = 0;
        if (v5 || v16 != 2) {
          goto LABEL_44;
        }
        int v5 = 2;
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_45:
          uint64_t v24 = 0;
          goto LABEL_44;
        }
      }
      else if ((v9 >> 3) == 1)
      {
        if ((v9 & 7) != 0) {
          goto LABEL_45;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v6] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_45;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  if (a1[*v4]) {
    BOOL v25 = 1;
  }
  else {
    BOOL v25 = v5 == 0;
  }
  uint64_t v24 = !v25;
LABEL_44:
  PBReaderRecallMark();
  return v24;
}

BOOL GEOInterpolationParametersReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 28) |= 2u;
          while (1)
          {
            uint64_t v24 = *v4;
            uint64_t v25 = *(void *)&v3[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&v3[*v5]) {
              break;
            }
            char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v25);
            *(void *)&v3[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0) {
              goto LABEL_36;
            }
            v21 += 7;
            BOOL v15 = v22++ >= 9;
            if (v15)
            {
              LODWORD(v23) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            LODWORD(v23) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v23;
        }
        else if ((v10 >> 3) == 1)
        {
          *(unsigned char *)(a1 + 28) |= 1u;
          uint64_t v18 = *v4;
          unint64_t v19 = *(void *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
            *(void *)&v3[v18] = v19 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v20 = 0;
          }
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v28 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v29 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v28;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_43;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v30 = v3[*v6] == 0;
  }
  else
  {
LABEL_43:
    BOOL v30 = 0;
  }
  objc_sync_exit(v3);

  return v30;
}

void sub_189F9B83C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOInterpolationParametersReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOInterpolationParametersReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F9B8A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOInterpolationParametersIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_37;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        goto LABEL_37;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v16 != 1) {
          goto LABEL_39;
        }
        uint64_t v18 = *v2;
        unint64_t v19 = *(void *)&a1[v18];
        if (v19 > 0xFFFFFFFFFFFFFFF7) {
          goto LABEL_35;
        }
        unint64_t v20 = v19 + 8;
        if (v20 > *(void *)&a1[*v3]) {
          goto LABEL_35;
        }
        *(void *)&a1[v18] = v20;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_39:
        BOOL v27 = 0;
        goto LABEL_38;
      }
LABEL_36:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_37;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_39;
    }
    unsigned int v21 = 0;
    while (1)
    {
      uint64_t v22 = *v2;
      uint64_t v23 = *(void *)&a1[v22];
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
        break;
      }
      int v25 = *(char *)(*(void *)&a1[*v5] + v23);
      *(void *)&a1[v22] = v24;
      if (v25 < 0 && v21++ <= 8) {
        continue;
      }
      goto LABEL_36;
    }
    uint64_t v14 = *v4;
LABEL_35:
    a1[v14] = 1;
    goto LABEL_36;
  }
LABEL_37:
  BOOL v27 = a1[*v4] == 0;
LABEL_38:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLatLngReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLatLngReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F9C5C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLatLngE7ReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLatLngE7ReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F9CD14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLocalTimeReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 2000)
        {
          uint64_t v26 = PBReaderReadString();
          BOOL v27 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v26;
        }
        else if (v18 == 2)
        {
          *(unsigned char *)(a1 + 36) |= 2u;
          uint64_t v28 = *v4;
          unint64_t v29 = *(void *)&v3[v28];
          if (v29 <= 0xFFFFFFFFFFFFFFFBLL && v29 + 4 <= *(void *)&v3[*v5])
          {
            int v30 = *(_DWORD *)(*(void *)&v3[*v7] + v29);
            *(void *)&v3[v28] = v29 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v30 = 0;
          }
          *(_DWORD *)(a1 + 32) = v30;
        }
        else if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 36) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_38;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              uint64_t v21 = 0;
              goto LABEL_40;
            }
          }
          v3[*v6] = 1;
LABEL_38:
          if (v3[*v6]) {
            uint64_t v21 = 0;
          }
LABEL_40:
          *(void *)(a1 + 24) = v21;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v31 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v32 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v31;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_45;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_45:
    BOOL v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_189F9D7A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLocalTimeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLocalTimeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F9D808(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLocalTimeIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      unint64_t v18 = v8 >> 3;
      if ((v8 >> 3) == 2000)
      {
        if (v16 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_43:
          BOOL v28 = 0;
          goto LABEL_42;
        }
      }
      else if (v18 == 2)
      {
        if (v16 != 5) {
          goto LABEL_43;
        }
        uint64_t v25 = *v2;
        unint64_t v26 = *(void *)&a1[v25];
        if (v26 > 0xFFFFFFFFFFFFFFFBLL) {
          goto LABEL_39;
        }
        unint64_t v27 = v26 + 4;
        if (v27 > *(void *)&a1[*v3]) {
          goto LABEL_39;
        }
        *(void *)&a1[v25] = v27;
      }
      else
      {
        if (v18 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_43;
          }
          unsigned int v19 = 0;
          while (1)
          {
            uint64_t v20 = *v2;
            uint64_t v21 = *(void *)&a1[v20];
            unint64_t v22 = v21 + 1;
            if (v21 == -1 || v22 > *(void *)&a1[*v3]) {
              break;
            }
            int v23 = *(char *)(*(void *)&a1[*v5] + v21);
            *(void *)&a1[v20] = v22;
            if (v23 < 0 && v19++ <= 8) {
              continue;
            }
            goto LABEL_40;
          }
          uint64_t v14 = *v4;
LABEL_39:
          a1[v14] = 1;
          continue;
        }
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_43;
        }
      }
LABEL_40:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
LABEL_42:
  PBReaderRecallMark();
  return v28;
}

BOOL GEOLocalizationCapabilitiesReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLocalizationCapabilitiesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F9E878(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLocalizationCapabilitiesIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_50;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_50;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              break;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              unsigned int v21 = v15++;
              if (v21 <= 8) {
                continue;
              }
            }
            goto LABEL_49;
          }
LABEL_37:
          a1[*v4] = 1;
          goto LABEL_49;
        }
        if (!PBReaderPlaceMark())
        {
LABEL_52:
          PBReaderRecallMark();
          return 0;
        }
LABEL_39:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v28 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              break;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v13 = v28++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_39;
          }
          a1[*v4] = 1;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_52;
      }
LABEL_49:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_50;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_52;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_37;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0 && v22++ <= 8) {
        continue;
      }
      goto LABEL_49;
    }
  }
LABEL_50:
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

void sub_189F9F030(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLocalizedBytesReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        unsigned __int8 v15 = v14 | v7;
        unsigned __int8 v51 = v14 & ~(_BYTE)v7 | v8;
        if (((v14 | v7) | v9)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        uint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_59;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_59:
      int v49 = 1;
      goto LABEL_60;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 3) {
      break;
    }
    if (v30 == 1)
    {
      if (v31)
      {
        if ((*(unsigned char *)(a1 + 52) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_79;
          }
          char v43 = 32 * *(unsigned char *)(a1 + 52);
          goto LABEL_57;
        }
        uint64_t v36 = PBReaderReadString();
        uint64_t v37 = 32;
        goto LABEL_44;
      }
    }
    else if ((v51 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v40 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v39;
      }
      int v41 = PBUnknownFieldAdd();
      uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
      if (!v41)
      {
        int v49 = 0;
        unint64_t v50 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
        goto LABEL_62;
      }
      goto LABEL_58;
    }
LABEL_51:
    char v42 = PBReaderSkipValueWithTag();
    uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
    if ((v42 & 1) == 0)
    {
      int v49 = 0;
LABEL_60:
      unint64_t v50 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
      goto LABEL_61;
    }
LABEL_58:
    if (!((v15 | v51) & 1 | (v10 != 0))) {
      goto LABEL_59;
    }
  }
  if (!v31) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0)
  {
    uint64_t v36 = PBReaderReadData();
    uint64_t v37 = 24;
LABEL_44:
    unsigned int v38 = *(void **)(a1 + v37);
    *(void *)(a1 + v37) = v36;

    uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v43 = *(unsigned char *)(a1 + 52) << 6;
LABEL_57:
    v10 += v43 >> 7;
    uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_58;
  }
LABEL_79:
  int v49 = 0;
  unint64_t v50 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
  uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_61:
  if ((v51 & 1) == 0) {
    goto LABEL_63;
  }
LABEL_62:
  *(unsigned char *)(a1 + v50[285]) |= 1u;
LABEL_63:
  if (v15 & 1 | ((v49 & 1) == 0))
  {
    *(unsigned char *)(a1 + v50[285]) |= 4u;
    *(unsigned char *)(a1 + v50[285]) |= 2u;
    goto LABEL_73;
  }
  if (v16)
  {
    while (1)
    {
      int v46 = *v16++;
      int v45 = v46;
      if (v46 == 1) {
        break;
      }
      if (v45 == 3)
      {
        char v44 = 2;
LABEL_69:
        *(unsigned char *)(a1 + v50[285]) |= v44;
      }
      else if (!v45)
      {
        goto LABEL_73;
      }
    }
    char v44 = 4;
    goto LABEL_69;
  }
LABEL_73:
  if (v49)
  {
    unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
    if ((v15 & 1) == 0) {
      return v3;
    }
LABEL_77:
    int v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v15) {
      goto LABEL_77;
    }
  }
  return v3;
}

void sub_189F9F698(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189F9FC8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLocalizedBytesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLocalizedBytesReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOLocalizedBytesReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOLocalizedBytesReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLocalizedBytesReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189F9FE18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLocalizedBytesReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLocalizedBytesReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189F9FE7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLocalizedBytesIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 3) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v15 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

void sub_189FA01E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLocalizedBytesIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189FA04A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FA06F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLocalizedStringReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLocalizedStringReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FA0D74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLocalizedStringIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189FA1048(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FA11E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FA1884(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLocationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLocationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FA3458(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOLocationIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = 0;
    char v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_140;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v2;
        uint64_t v11 = *(void *)&a1[v10];
        unint64_t v12 = v11 + 1;
        if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        if (v8++ >= 9)
        {
          unint64_t v9 = 0;
          uint64_t v15 = *v4;
          int v16 = a1[v15];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v15 = *v4;
      int v16 = a1[v15];
      if (a1[v15]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v17 = v9 & 7;
      if (v16 || v17 == 4) {
        goto LABEL_140;
      }
      switch((v9 >> 3))
      {
        case 1u:
          if (v5 || v17 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_148;
          }
          PBReaderRecallMark();
          int v5 = 1;
          goto LABEL_137;
        case 2u:
          if ((v9 & 7) != 0) {
            goto LABEL_148;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_135;
            }
            int v26 = *(char *)(*(void *)&a1[*v6] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v27 = v22++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_137;
          }
        case 3u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xCu:
LABEL_25:
          if (v17 != 1) {
            goto LABEL_148;
          }
          uint64_t v19 = *v2;
          unint64_t v20 = *(void *)&a1[v19];
          if (v20 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_136;
          }
          unint64_t v21 = v20 + 8;
          if (v21 > *(void *)&a1[*v3]) {
            goto LABEL_136;
          }
          *(void *)&a1[v19] = v21;
          goto LABEL_137;
        case 4u:
          if ((v9 & 7) != 0) {
            goto LABEL_148;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_135;
            }
            int v32 = *(char *)(*(void *)&a1[*v6] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v27 = v28++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_137;
          }
        case 0xAu:
          if ((v9 & 7) != 0) {
            goto LABEL_148;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_135;
            }
            int v37 = *(char *)(*(void *)&a1[*v6] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v27 = v33++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_137;
          }
        case 0xBu:
          if (v17 != 2 || !PBReaderPlaceMark() || !GEOCoarseLocationMetadataIsValid(a1)) {
            goto LABEL_148;
          }
LABEL_102:
          PBReaderRecallMark();
          goto LABEL_137;
        case 0xDu:
          if ((v9 & 7) != 0)
          {
LABEL_148:
            PBReaderRecallMark();
            return 0;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              break;
            }
            int v42 = *(char *)(*(void *)&a1[*v6] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v27 = v38++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_137;
          }
LABEL_135:
          uint64_t v15 = *v4;
LABEL_136:
          a1[v15] = 1;
LABEL_137:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_140;
          }
          break;
        default:
          switch((v9 >> 3))
          {
            case 'e':
            case 'k':
              goto LABEL_25;
            case 'f':
              if ((v9 & 7) != 0) {
                goto LABEL_148;
              }
              unsigned int v43 = 0;
              while (1)
              {
                uint64_t v44 = *v2;
                uint64_t v45 = *(void *)&a1[v44];
                unint64_t v46 = v45 + 1;
                if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
                  goto LABEL_135;
                }
                int v47 = *(char *)(*(void *)&a1[*v6] + v45);
                *(void *)&a1[v44] = v46;
                if (v47 < 0)
                {
                  BOOL v27 = v43++ > 8;
                  if (!v27) {
                    continue;
                  }
                }
                goto LABEL_137;
              }
            case 'g':
              if ((v9 & 7) != 0) {
                goto LABEL_148;
              }
              unsigned int v48 = 0;
              while (1)
              {
                uint64_t v49 = *v2;
                uint64_t v50 = *(void *)&a1[v49];
                unint64_t v51 = v50 + 1;
                if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
                  goto LABEL_135;
                }
                int v52 = *(char *)(*(void *)&a1[*v6] + v50);
                *(void *)&a1[v49] = v51;
                if (v52 < 0)
                {
                  BOOL v27 = v48++ > 8;
                  if (!v27) {
                    continue;
                  }
                }
                goto LABEL_137;
              }
            case 'h':
              if ((v9 & 7) != 0) {
                goto LABEL_148;
              }
              unsigned int v53 = 0;
              while (1)
              {
                uint64_t v54 = *v2;
                uint64_t v55 = *(void *)&a1[v54];
                unint64_t v56 = v55 + 1;
                if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
                  goto LABEL_135;
                }
                int v57 = *(char *)(*(void *)&a1[*v6] + v55);
                *(void *)&a1[v54] = v56;
                if (v57 < 0)
                {
                  BOOL v27 = v53++ > 8;
                  if (!v27) {
                    continue;
                  }
                }
                goto LABEL_137;
              }
            case 'i':
              if ((v9 & 7) != 0) {
                goto LABEL_148;
              }
              unsigned int v58 = 0;
              while (1)
              {
                uint64_t v59 = *v2;
                uint64_t v60 = *(void *)&a1[v59];
                unint64_t v61 = v60 + 1;
                if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
                  goto LABEL_135;
                }
                int v62 = *(char *)(*(void *)&a1[*v6] + v60);
                *(void *)&a1[v59] = v61;
                if (v62 < 0)
                {
                  BOOL v27 = v58++ > 8;
                  if (!v27) {
                    continue;
                  }
                }
                goto LABEL_137;
              }
            case 'j':
              if (v17 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1)) {
                goto LABEL_102;
              }
              goto LABEL_148;
            case 'l':
              if ((v9 & 7) != 0) {
                goto LABEL_148;
              }
              unsigned int v63 = 0;
              while (1)
              {
                uint64_t v64 = *v2;
                uint64_t v65 = *(void *)&a1[v64];
                unint64_t v66 = v65 + 1;
                if (v65 == -1 || v66 > *(void *)&a1[*v3]) {
                  goto LABEL_135;
                }
                int v67 = *(char *)(*(void *)&a1[*v6] + v65);
                *(void *)&a1[v64] = v66;
                if (v67 < 0)
                {
                  BOOL v27 = v63++ > 8;
                  if (!v27) {
                    continue;
                  }
                }
                goto LABEL_137;
              }
            case 'm':
              if ((v9 & 7) != 0) {
                goto LABEL_148;
              }
              unsigned int v68 = 0;
              while (1)
              {
                uint64_t v69 = *v2;
                uint64_t v70 = *(void *)&a1[v69];
                unint64_t v71 = v70 + 1;
                if (v70 == -1 || v71 > *(void *)&a1[*v3]) {
                  goto LABEL_135;
                }
                int v72 = *(char *)(*(void *)&a1[*v6] + v70);
                *(void *)&a1[v69] = v71;
                if (v72 < 0)
                {
                  BOOL v27 = v68++ > 8;
                  if (!v27) {
                    continue;
                  }
                }
                goto LABEL_137;
              }
            case 'n':
              if ((v9 & 7) != 0) {
                goto LABEL_148;
              }
              unsigned int v73 = 0;
              while (1)
              {
                uint64_t v74 = *v2;
                uint64_t v75 = *(void *)&a1[v74];
                unint64_t v76 = v75 + 1;
                if (v75 == -1 || v76 > *(void *)&a1[*v3]) {
                  goto LABEL_135;
                }
                int v77 = *(char *)(*(void *)&a1[*v6] + v75);
                *(void *)&a1[v74] = v76;
                if (v77 < 0)
                {
                  BOOL v27 = v73++ > 8;
                  if (!v27) {
                    continue;
                  }
                }
                goto LABEL_137;
              }
            case 'o':
              if ((v9 & 7) != 0) {
                goto LABEL_148;
              }
              unsigned int v78 = 0;
              break;
            default:
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_148;
              }
              goto LABEL_137;
          }
          while (1)
          {
            uint64_t v79 = *v2;
            uint64_t v80 = *(void *)&a1[v79];
            unint64_t v81 = v80 + 1;
            if (v80 == -1 || v81 > *(void *)&a1[*v3]) {
              goto LABEL_135;
            }
            int v82 = *(char *)(*(void *)&a1[*v6] + v80);
            *(void *)&a1[v79] = v81;
            if (v82 < 0)
            {
              BOOL v27 = v78++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_137;
          }
      }
    }
  }
  int v5 = 0;
LABEL_140:
  if (a1[*v4]) {
    BOOL v83 = 1;
  }
  else {
    BOOL v83 = v5 == 0;
  }
  uint64_t v84 = !v83;
  PBReaderRecallMark();
  return v84;
}

BOOL GEOLocationIsDirty(os_unfair_lock_s *a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner(a1 + 34);
  BOOL v2 = (a1[45]._os_unfair_lock_opaque & 0x3C00000) != 0;
  os_unfair_lock_unlock(a1 + 34);
  return v2;
}

void sub_189FA50A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMapRegionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOMapRegionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FA6DCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMapRegionE7ReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      while (!v3[*v6])
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            *(unsigned char *)(a1 + 40) |= 4u;
            uint64_t v18 = *v4;
            unint64_t v19 = *(void *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v20 = v19 + 4, v19 + 4 <= *(void *)&v3[*v5]))
            {
              int v21 = *(_DWORD *)(*(void *)&v3[*v7] + v19);
              *(void *)&v3[v18] = v20;
            }
            else
            {
              int v21 = 0;
              v3[*v6] = 1;
            }
            uint64_t v34 = 32;
            goto LABEL_47;
          case 2u:
            *(unsigned char *)(a1 + 40) |= 8u;
            uint64_t v24 = *v4;
            unint64_t v25 = *(void *)&v3[v24];
            if (v25 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v26 = v25 + 4, v25 + 4 <= *(void *)&v3[*v5]))
            {
              int v21 = *(_DWORD *)(*(void *)&v3[*v7] + v25);
              *(void *)&v3[v24] = v26;
            }
            else
            {
              int v21 = 0;
              v3[*v6] = 1;
            }
            uint64_t v34 = 36;
            goto LABEL_47;
          case 3u:
            *(unsigned char *)(a1 + 40) |= 2u;
            uint64_t v27 = *v4;
            unint64_t v28 = *(void *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v29 = v28 + 4, v28 + 4 <= *(void *)&v3[*v5]))
            {
              int v21 = *(_DWORD *)(*(void *)&v3[*v7] + v28);
              *(void *)&v3[v27] = v29;
            }
            else
            {
              int v21 = 0;
              v3[*v6] = 1;
            }
            uint64_t v34 = 28;
            goto LABEL_47;
          case 4u:
            *(unsigned char *)(a1 + 40) |= 1u;
            uint64_t v30 = *v4;
            unint64_t v31 = *(void *)&v3[v30];
            if (v31 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v32 = v31 + 4, v31 + 4 <= *(void *)&v3[*v5]))
            {
              int v21 = *(_DWORD *)(*(void *)&v3[*v7] + v31);
              *(void *)&v3[v30] = v32;
            }
            else
            {
              int v21 = 0;
              v3[*v6] = 1;
            }
            uint64_t v34 = 24;
LABEL_47:
            *(_DWORD *)(a1 + v34) = v21;
            goto LABEL_48;
          case 5u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_51;
            }
            unsigned int v33 = objc_alloc_init(GEOLatLngE7);
            if (!GEOLatLngE7ReadAllFrom((uint64_t)v33, v3))
            {

              goto LABEL_51;
            }
            PBReaderRecallMark();
            objc_msgSend((id)a1, "addVertexE7:", v33, 0, 0);

LABEL_48:
            if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
              goto LABEL_49;
            }
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v22 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              uint64_t v23 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v22;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_51;
            }
            goto LABEL_48;
        }
      }
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_51:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189FA84BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMapRegionE7ReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOMapRegionE7ReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FA8534(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMapRegionE7IsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
          if (v16 != 5) {
            goto LABEL_33;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v20 = v19 + 4, v20 <= *(void *)&a1[*v3])) {
            *(void *)&a1[v18] = v20;
          }
          else {
            a1[v14] = 1;
          }
          goto LABEL_30;
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngE7IsValid(a1)) {
            goto LABEL_33;
          }
          PBReaderRecallMark();
          goto LABEL_30;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_33:
            PBReaderRecallMark();
            return 0;
          }
LABEL_30:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_31;
          }
          break;
      }
    }
  }
LABEL_31:
  BOOL v21 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v21;
}

void sub_189FA937C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONameInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 80)), (uint16x4_t)0xFFFCFFF9FFFBFFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 80) >> 3) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 > 2;
        char v15 = v14 & ~(_BYTE)v10 | v7;
        unsigned __int8 v16 = v14 | v10;
        char v72 = v15;
        char v73 = v16 | v15;
        if ((v16 | v8)) {
          int v17 = 0;
        }
        else {
          int v17 = a3;
        }
        char v74 = (v17 == 0) | v16;
        BOOL v75 = v16;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_106;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_106:
      int v70 = 1;
      goto LABEL_107;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v75;
    if ((v74 & 1) == 0)
    {
      unsigned int v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 80) & 0x20) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 32;
          goto LABEL_80;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_125;
        }
        __int16 v65 = *(_WORD *)(a1 + 80) << 10;
        goto LABEL_105;
      case 2:
        if (!v32) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 80) & 0x40) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 40;
          goto LABEL_80;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_125;
        }
        __int16 v65 = *(_WORD *)(a1 + 80) << 9;
        goto LABEL_105;
      case 3:
        if (!v32) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 80) & 0x80) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 48;
          goto LABEL_80;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_125;
        }
        __int16 v65 = *(_WORD *)(a1 + 80) << 8;
        goto LABEL_105;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_81;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + 80) |= 2u;
        while (2)
        {
          uint64_t v45 = *v18;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v20) + v46);
            *(void *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v28 = v43++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v44) = 0;
        }
LABEL_87:
        *(_DWORD *)(a1 + 72) = -(v44 & 1) ^ ((int)v44 >> 1);
        goto LABEL_82;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_81;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        *(_WORD *)(a1 + 80) |= 1u;
        while (2)
        {
          uint64_t v52 = *v18;
          uint64_t v53 = *(void *)(v3 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(v3 + *v20) + v53);
            *(void *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v28 = v50++ >= 9;
              if (v28)
              {
                LODWORD(v51) = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v51) = 0;
        }
LABEL_91:
        uint64_t v64 = 68;
        goto LABEL_96;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_81;
        }
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v51 = 0;
        *(_WORD *)(a1 + 80) |= 4u;
        while (2)
        {
          uint64_t v58 = *v18;
          uint64_t v59 = *(void *)(v3 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(v3 + *v20) + v59);
            *(void *)(v3 + v58) = v60;
            v51 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              BOOL v28 = v57++ >= 9;
              if (v28)
              {
                LODWORD(v51) = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v51) = 0;
        }
LABEL_95:
        uint64_t v64 = 76;
LABEL_96:
        *(_DWORD *)(a1 + v64) = v51;
        goto LABEL_82;
      case 7:
        if (!v32) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 80) & 0x10) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 24;
LABEL_80:
          int v62 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          --v9;
          goto LABEL_82;
        }
        if (PBReaderSkipValueWithTag())
        {
          __int16 v65 = *(_WORD *)(a1 + 80) << 11;
LABEL_105:
          v9 += v65 >> 15;
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_82:
          if (!(v73 & 1 | (v9 != 0))) {
            goto LABEL_106;
          }
          continue;
        }
LABEL_125:
        int v70 = 0;
        unint64_t v71 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_108:
        if (v72) {
LABEL_109:
        }
          *(_WORD *)(a1 + v71[291]) |= 8u;
        if (v75 || (v70 & 1) == 0)
        {
          *(_WORD *)(a1 + v71[291]) |= 0x20u;
          *(_WORD *)(a1 + v71[291]) |= 0x40u;
          *(_WORD *)(a1 + v71[291]) |= 0x80u;
          *(_WORD *)(a1 + v71[291]) |= 0x10u;
        }
        else if (v17)
        {
          while (1)
          {
            int v66 = *v17++;
            __int16 v67 = 32;
            switch(v66)
            {
              case 0:
                goto LABEL_118;
              case 1:
                goto LABEL_117;
              case 2:
                __int16 v67 = 64;
                goto LABEL_117;
              case 3:
                __int16 v67 = 128;
                goto LABEL_117;
              case 7:
                __int16 v67 = 16;
LABEL_117:
                *(_WORD *)(a1 + v71[291]) |= v67;
                break;
              default:
                continue;
            }
          }
        }
LABEL_118:
        if (v70) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v75)
        {
          unsigned int v68 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v72 & 1) == 0 || (*(_WORD *)(a1 + 80) & 8) != 0)
        {
LABEL_81:
          char v63 = PBReaderSkipValueWithTag();
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          if (v63) {
            goto LABEL_82;
          }
          int v70 = 0;
LABEL_107:
          unint64_t v71 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
          goto LABEL_108;
        }
        if (!*(void *)(a1 + 16))
        {
          id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          uint64_t v40 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v39;
        }
        int v41 = PBUnknownFieldAdd();
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v41)
        {
          int v70 = 0;
          unint64_t v71 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
          goto LABEL_109;
        }
        goto LABEL_82;
    }
  }
}

void sub_189FA9D88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FA9EF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FAA450(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FAADF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONameInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEONameInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEONameInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEONameInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEONameInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189FAAF84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONameInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEONameInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FAAFE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONameInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_55;
          }
          goto LABEL_51;
        case 2u:
          if (v15 == 2) {
            goto LABEL_51;
          }
          goto LABEL_55;
        case 3u:
          if (v15 == 2) {
            goto LABEL_51;
          }
          goto LABEL_55;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_55;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_52;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_55;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_52;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_55;
          }
          unsigned int v28 = 0;
          break;
        case 7u:
          if (v15 == 2) {
            goto LABEL_51;
          }
          goto LABEL_55;
        default:
LABEL_51:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_55:
          BOOL v33 = 0;
          goto LABEL_54;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_52;
      }
LABEL_49:
      a1[*v4] = 1;
LABEL_52:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
LABEL_54:
  PBReaderRecallMark();
  return v33;
}

void sub_189FAB55C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONameInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(_WORD *)(a1 + 80) & 0x1F0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189FAB9AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FABE24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONameInfoListReadAllFrom(void *a1, void *a2, int a3)
{
  int v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v20 = objc_alloc_init(GEONameInfo);
          if (!GEONameInfoReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addNameInfo:", v20, 0, 0);
        }
        else
        {
          if (!a1[1])
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v22 = (void *)a1[1];
            a1[1] = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189FAC864(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONameInfoListReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEONameInfoListReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FAC8C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONameInfoListIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPrivacyMetadataReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 20) |= 8u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOPrivacyMetadata__isUnderageAccount;
                goto LABEL_56;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                break;
              }
              v18 += 7;
              BOOL v25 = v19++ > 8;
              if (v25)
              {
                uint64_t v20 = 0;
                unint64_t v26 = &OBJC_IVAR___GEOPrivacyMetadata__isUnderageAccount;
                goto LABEL_59;
              }
            }
            unint64_t v26 = &OBJC_IVAR___GEOPrivacyMetadata__isUnderageAccount;
            goto LABEL_57;
          case 2u:
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 20) |= 1u;
            while (2)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOPrivacyMetadata__isManagedAccount;
                goto LABEL_56;
              }
              char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
              *(void *)&v3[v31] = v33;
              v20 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                BOOL v25 = v30++ > 8;
                if (v25)
                {
                  uint64_t v20 = 0;
                  unint64_t v26 = &OBJC_IVAR___GEOPrivacyMetadata__isManagedAccount;
                  goto LABEL_59;
                }
                continue;
              }
              break;
            }
            unint64_t v26 = &OBJC_IVAR___GEOPrivacyMetadata__isManagedAccount;
            goto LABEL_57;
          case 3u:
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 20) |= 2u;
            while (2)
            {
              uint64_t v37 = *v4;
              uint64_t v38 = *(void *)&v3[v37];
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOPrivacyMetadata__isMismatchedStorefrontDeviceRegion;
                goto LABEL_56;
              }
              char v40 = *(unsigned char *)(*(void *)&v3[*v7] + v38);
              *(void *)&v3[v37] = v39;
              v20 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                BOOL v25 = v36++ > 8;
                if (v25)
                {
                  uint64_t v20 = 0;
                  unint64_t v26 = &OBJC_IVAR___GEOPrivacyMetadata__isMismatchedStorefrontDeviceRegion;
                  goto LABEL_59;
                }
                continue;
              }
              break;
            }
            unint64_t v26 = &OBJC_IVAR___GEOPrivacyMetadata__isMismatchedStorefrontDeviceRegion;
            goto LABEL_57;
          case 4u:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 20) |= 4u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              unsigned int v28 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v27;
            }
            if ((PBUnknownFieldAdd() & 1) == 0) {
              goto LABEL_67;
            }
            continue;
        }
        while (1)
        {
          uint64_t v43 = *v4;
          uint64_t v44 = *(void *)&v3[v43];
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)&v3[*v5]) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)&v3[*v7] + v44);
          *(void *)&v3[v43] = v45;
          v20 |= (unint64_t)(v46 & 0x7F) << v41;
          if ((v46 & 0x80) == 0)
          {
            unint64_t v26 = &OBJC_IVAR___GEOPrivacyMetadata__isSharedIpadForEducation;
            goto LABEL_57;
          }
          v41 += 7;
          BOOL v25 = v42++ > 8;
          if (v25)
          {
            uint64_t v20 = 0;
            unint64_t v26 = &OBJC_IVAR___GEOPrivacyMetadata__isSharedIpadForEducation;
            goto LABEL_59;
          }
        }
        unint64_t v26 = &OBJC_IVAR___GEOPrivacyMetadata__isSharedIpadForEducation;
LABEL_56:
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6]) {
          uint64_t v20 = 0;
        }
LABEL_59:
        *(unsigned char *)(a1 + *v26) = v20 != 0;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v47 = v3[*v6] == 0;
  }
  else
  {
LABEL_67:
    BOOL v47 = 0;
  }
  objc_sync_exit(v3);

  return v47;
}

void sub_189FADDBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPrivacyMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPrivacyMetadataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FADE30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPrivacyMetadataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          BOOL v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v21 = v32++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

BOOL GEORoadAccessPointReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORoadAccessPointReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FB00E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOScreenDimensionReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_37;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_37;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          *(unsigned char *)(a1 + 32) |= 2u;
          uint64_t v18 = *v4;
          unint64_t v19 = *(void *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
            *(void *)&v3[v18] = v19 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v20 = 0;
          }
          unint64_t v25 = &OBJC_IVAR___GEOScreenDimension__width;
LABEL_35:
          *(void *)(a1 + *v25) = v20;
          goto LABEL_36;
        }
        if (!*(void *)(a1 + 8))
        {
          id v23 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          uint64_t v24 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v23;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_38;
        }
LABEL_36:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_37;
        }
      }
      *(unsigned char *)(a1 + 32) |= 1u;
      uint64_t v21 = *v4;
      unint64_t v22 = *(void *)&v3[v21];
      if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)&v3[*v5])
      {
        uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v22);
        *(void *)&v3[v21] = v22 + 8;
      }
      else
      {
        v3[*v6] = 1;
        uint64_t v20 = 0;
      }
      unint64_t v25 = &OBJC_IVAR___GEOScreenDimension__height;
      goto LABEL_35;
    }
LABEL_37:
    BOOL v26 = v3[*v6] == 0;
  }
  else
  {
LABEL_38:
    BOOL v26 = 0;
  }
  objc_sync_exit(v3);

  return v26;
}

void sub_189FB1060(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOScreenDimensionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOScreenDimensionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FB10C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOScreenResolutionDescription(uint64_t a1)
{
  BOOL v2 = NSString;
  id v3 = _GEOScreenResolutionDictionaryRepresentation(a1);
  uint64_t v4 = [v2 stringWithFormat:@"GEOScreenResolution<%p> %@", a1, v3];

  return v4;
}

id _GEOScreenResolutionDictionaryRepresentation(uint64_t a1)
{
  BOOL v2 = [MEMORY[0x1E4F1CA60] dictionary];
  char v3 = *(unsigned char *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = [NSNumber numberWithDouble:*(double *)a1];
    [v2 setObject:v4 forKey:@"height"];

    char v3 = *(unsigned char *)(a1 + 16);
  }
  if ((v3 & 2) != 0)
  {
    int v5 = [NSNumber numberWithDouble:*(double *)(a1 + 8)];
    [v2 setObject:v5 forKey:@"width"];
  }

  return v2;
}

void _GEOScreenResolutionFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 objectForKeyedSubscript:@"width"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 16) |= 2u;
    [v4 doubleValue];
    *(void *)(a2 + 8) = v5;
  }

  id v7 = [v3 objectForKeyedSubscript:@"height"];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 16) |= 1u;
    [v7 doubleValue];
    *(void *)a2 = v6;
  }
}

uint64_t GEOScreenResolutionReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOScreenResolutionReadAllFrom(a1, a2);
}

uint64_t GEOScreenResolutionReadAllFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 16) |= 1u;
        uint64_t v22 = *v3;
        unint64_t v23 = *(void *)(a2 + v22);
        if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v24 = *(void *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          uint64_t v24 = 0;
        }
        *(void *)a1 = v24;
      }
      else if ((v10 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 16) |= 2u;
        uint64_t v19 = *v3;
        unint64_t v20 = *(void *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v20);
          *(void *)(a2 + v19) = v20 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          uint64_t v21 = 0;
        }
        *(void *)(a1 + 8) = v21;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t GEOScreenResolutionHash()
{
  return PBHashBytes();
}

id GEOSessionIDDescription(void *a1)
{
  BOOL v2 = NSString;
  id v3 = _GEOSessionIDDictionaryRepresentation(a1);
  uint64_t v4 = [v2 stringWithFormat:@"GEOSessionID<%p> %@", a1, v3];

  return v4;
}

id _GEOSessionIDDictionaryRepresentation(void *a1)
{
  BOOL v2 = [MEMORY[0x1E4F1CA60] dictionary];
  id v3 = [NSNumber numberWithUnsignedLongLong:*a1];
  [v2 setObject:v3 forKey:@"high"];

  uint64_t v4 = [NSNumber numberWithUnsignedLongLong:a1[1]];
  [v2 setObject:v4 forKey:@"low"];

  return v2;
}

void _GEOSessionIDFromDictionaryRepresentation(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 objectForKeyedSubscript:@"low"];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    a2[1] = [v4 unsignedLongLongValue];
  }

  id v5 = [v3 objectForKeyedSubscript:@"high"];

  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    *a2 = [v5 unsignedLongLongValue];
  }
}

uint64_t GEOSessionIDReadFrom(void *a1, uint64_t a2)
{
  return GEOSessionIDReadAllFrom(a1, a2);
}

uint64_t GEOSessionIDWriteTo()
{
  PBDataWriterWriteUint64Field();

  return PBDataWriterWriteUint64Field();
}

BOOL GEOSessionIDEquals(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t GEOSessionIDHash()
{
  return PBHashBytes();
}

uint64_t GEOSessionIDIsValid(void *a1)
{
  _OWORD v4[2] = [a1 position];
  v4[3] = [a1 length];
  uint64_t v2 = GEOSessionIDReadAllFrom(v4, (uint64_t)a1);
  PBReaderRecallMark();
  return v2;
}

BOOL GEOSlippyTileReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      id v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_59;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_59;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 4u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              unsigned int v27 = &OBJC_IVAR___GEOSlippyTile__z;
              goto LABEL_51;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              unsigned int v27 = &OBJC_IVAR___GEOSlippyTile__z;
              goto LABEL_53;
            }
          }
          unsigned int v27 = &OBJC_IVAR___GEOSlippyTile__z;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if (v18 == 2) {
          break;
        }
        if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              unsigned int v27 = &OBJC_IVAR___GEOSlippyTile__x;
              goto LABEL_50;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              unsigned int v27 = &OBJC_IVAR___GEOSlippyTile__x;
              goto LABEL_53;
            }
          }
          unsigned int v27 = &OBJC_IVAR___GEOSlippyTile__x;
          goto LABEL_51;
        }
        if (!*(void *)(a1 + 8))
        {
          id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          char v41 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v40;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_60;
        }
LABEL_54:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_59;
        }
      }
      char v34 = 0;
      unsigned int v35 = 0;
      uint64_t v21 = 0;
      *(unsigned char *)(a1 + 28) |= 2u;
      while (1)
      {
        uint64_t v36 = *v4;
        uint64_t v37 = *(void *)&v3[v36];
        unint64_t v38 = v37 + 1;
        if (v37 == -1 || v38 > *(void *)&v3[*v5])
        {
          unsigned int v27 = &OBJC_IVAR___GEOSlippyTile__y;
          goto LABEL_50;
        }
        char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
        *(void *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0) {
          break;
        }
        v34 += 7;
        BOOL v26 = v35++ > 8;
        if (v26)
        {
          LODWORD(v21) = 0;
          unsigned int v27 = &OBJC_IVAR___GEOSlippyTile__y;
          goto LABEL_53;
        }
      }
      unsigned int v27 = &OBJC_IVAR___GEOSlippyTile__y;
LABEL_51:
      if (v3[*v6]) {
        LODWORD(v21) = 0;
      }
LABEL_53:
      *(_DWORD *)(a1 + *v27) = v21;
      goto LABEL_54;
    }
LABEL_59:
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_189FB2708(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSlippyTileReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOSlippyTileReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FB276C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSlippyTileIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOStructuredAddressReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOStructuredAddressReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FB46F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSubPremiseIsValid(char *a1)
{
  v34[1] = *MEMORY[0x1E4F143B8];
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  v34[0] = 0;
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v31 = 0;
  }
  else
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        uint64_t v21 = 0;
        char v22 = 1;
        while (1)
        {
          char v23 = v22;
          int v24 = *((_DWORD *)v34 + v21);
          if (!v24) {
            break;
          }
          if (v24 != 1)
          {
            char v22 = 0;
            uint64_t v21 = 1;
            if (v23) {
              continue;
            }
          }
          goto LABEL_49;
        }
        *((_DWORD *)v34 + v21) = 1;
        if (v15)
        {
LABEL_49:
          PBReaderRecallMark();
          return 0;
        }
        unsigned int v25 = 0;
        while (1)
        {
          uint64_t v26 = *v2;
          uint64_t v27 = *(void *)&a1[v26];
          unint64_t v28 = v27 + 1;
          if (v27 == -1 || v28 > *(void *)&a1[*v3]) {
            break;
          }
          int v29 = *(char *)(*(void *)&a1[*v5] + v27);
          *(void *)&a1[v26] = v28;
          if (v29 < 0 && v25++ <= 8) {
            continue;
          }
          goto LABEL_33;
        }
        a1[*v4] = 1;
      }
      else
      {
        if ((v8 >> 3) == 2)
        {
          uint64_t v17 = 0;
          char v18 = 1;
          while (1)
          {
            char v19 = v18;
            int v20 = *((_DWORD *)v34 + v17);
            if (!v20) {
              break;
            }
            if (v20 != 2)
            {
              char v18 = 0;
              uint64_t v17 = 1;
              if (v19) {
                continue;
              }
            }
            goto LABEL_49;
          }
          *((_DWORD *)v34 + v17) = 2;
          if (v15 != 2) {
            goto LABEL_49;
          }
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_49;
        }
      }
LABEL_33:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
    BOOL v31 = HIDWORD(v34[0]) != 0;
  }
  if (a1[*v4]) {
    BOOL v32 = 0;
  }
  else {
    BOOL v32 = v31;
  }
  PBReaderRecallMark();
  return v32;
}

BOOL GEOSubPremiseReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          uint64_t v25 = PBReaderReadString();
          uint64_t v26 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_34;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 24) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v28 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v27;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_39;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_39:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_189FB5DF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSubPremiseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOSubPremiseReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FB5E5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FB63C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTextLinkReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v9)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_64;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_64:
      int v51 = 1;
      goto LABEL_65;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      unsigned int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 52) & 4) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          id v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v39;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_84;
        }
        char v46 = 32 * *(unsigned char *)(a1 + 52);
        goto LABEL_61;
      }
    }
    else if ((v53 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v43 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v42;
      }
      int v44 = PBUnknownFieldAdd();
      uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v44)
      {
        int v51 = 0;
        uint64_t v52 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
        goto LABEL_67;
      }
      goto LABEL_63;
    }
LABEL_55:
    char v45 = PBReaderSkipValueWithTag();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
      int v51 = 0;
LABEL_65:
      uint64_t v52 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
      goto LABEL_66;
    }
LABEL_63:
    if (!(v54 & 1 | (v10 != 0))) {
      goto LABEL_64;
    }
  }
  if (!v34) {
    goto LABEL_55;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_84;
    }
    char v46 = *(unsigned char *)(a1 + 52) << 6;
LABEL_61:
    v10 += v46 >> 7;
    goto LABEL_62;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_84;
  }
  char v41 = objc_alloc_init(GEOLocalizedString);
  if (GEOLocalizedStringReadAllFrom((uint64_t)v41, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    id v40 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v41;
LABEL_48:

    --v10;
LABEL_62:
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_63;
  }

LABEL_84:
  int v51 = 0;
  uint64_t v52 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
  if ((v53 & 1) == 0) {
    goto LABEL_68;
  }
LABEL_67:
  *(unsigned char *)(a1 + v52[293]) |= 1u;
LABEL_68:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[293]) |= 4u;
    *(unsigned char *)(a1 + v52[293]) |= 2u;
    goto LABEL_77;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v48 = *v19++;
        int v47 = v48;
        if (v48 == 1) {
          break;
        }
        if (v47 == 2) {
          goto LABEL_76;
        }
        if (!v47) {
          goto LABEL_77;
        }
      }
      LOBYTE(v47) = 4;
LABEL_76:
      *(unsigned char *)(a1 + v52[293]) |= v47;
      continue;
    }
  }
LABEL_77:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    char v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189FB6A74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FB706C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTextLinkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTextLinkReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOTextLinkReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOTextLinkReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTextLinkReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189FB7210(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTextLinkReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTextLinkReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FB7274(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTextLinkIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1)) {
          goto LABEL_29;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_189FB75F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOTextLinkIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 52) & 0xC) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 24);

  return GEOLocalizedStringIsDirty(v3);
}

os_unfair_lock_s *GEOTextLinkIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOTextLinkIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189FB791C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FB7B7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTileCoordinateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTileCoordinateReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FB8328(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPolygonFeatureContains(float *a1, float a2, float a3)
{
  *(float *)uint64_t v10 = a2;
  *(float *)&v10[1] = a3;
  id v3 = geo::codec::multiSectionFeatureBounds(a1);
  char v4 = 0;
  uint64_t v5 = 0;
  while (1)
  {
    float v6 = *(float *)&v10[v5];
    if (v6 < *(float *)&v3[v5]) {
      break;
    }
    float v7 = *(float *)&v3[v5 + 2];
    uint64_t v5 = 1;
    char v8 = (v6 < v7) & ~v4;
    char v4 = 1;
    if ((v8 & 1) == 0) {
      return v6 < v7;
    }
  }
  return 0;
}

void GEONetworkLoadLoopRun(void *a1)
{
  uint64_t v1 = qword_1EB2A0350;
  id v2 = a1;
  id v4 = v2;
  if (v1 == -1)
  {
    id v3 = v2;
  }
  else
  {
    dispatch_once(&qword_1EB2A0350, &__block_literal_global_168);
    id v3 = v4;
  }
  dispatch_async((dispatch_queue_t)_MergedGlobals_307, v3);
}

void __GEONetworkLoadQueue_block_invoke()
{
  uint64_t v0 = geo_dispatch_queue_create();
  uint64_t v1 = (void *)_MergedGlobals_307;
  _MergedGlobals_307 = v0;
}

void sub_189FBA888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

void sub_189FBAC7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189FBAE74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189FBBA34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189FBBF5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_189FBC0B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189FBC4B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_189FBC564(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189FBC5CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189FBC654(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189FBC6E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189FBC7C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189FBC8B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189FBCD68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_189FBD070(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id GEOGetStringConditionEvaluatorLog()
{
  if (qword_1EB2A0378 != -1) {
    dispatch_once(&qword_1EB2A0378, &__block_literal_global_170);
  }
  uint64_t v0 = (void *)_MergedGlobals_309;

  return v0;
}

void __GEOGetStringConditionEvaluatorLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "StringConditionEvaluator");
  uint64_t v1 = (void *)_MergedGlobals_309;
  _MergedGlobals_309 = (uint64_t)v0;
}

void sub_189FBF13C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189FBF444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  if (v11) {
    operator delete(v11);
  }

  _Unwind_Resume(a1);
}

void sub_189FBF640(_Unwind_Exception *a1, void *a2, ...)
{
  va_start(va, a2);
  std::__function::__value_func<void ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>::~__value_func[abi:ne180100]((uint64_t *)va);

  _Unwind_Resume(a1);
}

void geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::enumerate(uint64_t a1, uint64_t a2)
{
  id v11 = &v11;
  char v12 = &v11;
  uint64_t v13 = 0;
  std::mutex::lock((std::mutex *)a1);
  geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::_prune(a1);
  for (uint64_t i = *(void *)(a1 + 72); i != a1 + 64; uint64_t i = *(void *)(i + 8))
  {
    uint64_t v5 = operator new(0x38uLL);
    *(void *)uint64_t v5 = 0;
    *((void *)v5 + 1) = 0;
    long long v6 = *(_OWORD *)(i + 32);
    *((_OWORD *)v5 + 1) = *(_OWORD *)(i + 16);
    *((_OWORD *)v5 + 2) = v6;
    objc_copyWeak((id *)v5 + 6, (id *)(i + 48));
    float v7 = v12;
    *(void *)uint64_t v5 = &v11;
    *((void *)v5 + 1) = v7;
    *float v7 = v5;
    char v12 = (id *)v5;
    ++v13;
  }
  std::mutex::unlock((std::mutex *)a1);
  for (j = v12; j != &v11; j = (id *)j[1])
  {
    id v9 = j[5];
    uint64_t v10 = *(void *)(a2 + 24);
    id v15 = j[4];
    id v14 = v9;
    if (!v10) {
      std::__throw_bad_function_call[abi:ne180100]();
    }
    (*(void (**)(uint64_t, id *, id *, id *, id *))(*(void *)v10 + 48))(v10, j + 2, j + 6, &v15, &v14);
  }
  std::__list_imp<geo::detail::_CacheItem<_GEOTileKey,objc_object * {__strong},geo::detail::_GEOGenericContainer<_GEOTileKey,objc_object * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::_value_ptr>>::clear(&v11);
}

void sub_189FBF790(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__list_imp<geo::detail::_CacheItem<_GEOTileKey,objc_object * {__strong},geo::detail::_GEOGenericContainer<_GEOTileKey,objc_object * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::_value_ptr>>::clear((id *)va);
  _Unwind_Resume(a1);
}

void sub_189FBFAAC(_Unwind_Exception *a1, void *a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  std::__list_imp<std::__list_iterator<LoadItem,void *>>::clear((uint64_t *)va);
  std::__function::__value_func<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>::~__value_func[abi:ne180100](va1);

  _Unwind_Resume(a1);
}

void std::__list_imp<geo::detail::_CacheItem<_GEOTileKey,objc_object * {__strong},geo::detail::_GEOGenericContainer<_GEOTileKey,objc_object * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::_value_ptr>>::clear(id *a1)
{
  if (a1[2])
  {
    id v2 = (void **)*a1;
    uint64_t v3 = (id *)a1[1];
    id v4 = *v3;
    v4[1] = *((void *)*a1 + 1);
    *v2[1] = v4;
    a1[2] = 0;
    if (v3 != a1)
    {
      do
      {
        uint64_t v5 = (id *)v3[1];
        objc_storeWeak(v3 + 6, 0);
        objc_destroyWeak(v3 + 6);
        operator delete(v3);
        uint64_t v3 = v5;
      }
      while (v5 != a1);
    }
  }
}

void *std::__hash_table<std::__hash_value_type<_GEOTileKey,std::__list_iterator<geo::detail::_CacheItem<_GEOTileKey,objc_object * {__strong},geo::detail::_GEOGenericContainer<_GEOTileKey,objc_object * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::_value_ptr>,void *>>,std::__unordered_map_hasher<_GEOTileKey,std::__hash_value_type<_GEOTileKey,std::__list_iterator<geo::detail::_CacheItem<_GEOTileKey,objc_object * {__strong},geo::detail::_GEOGenericContainer<_GEOTileKey,objc_object * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::_value_ptr>,void *>>,std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,true>,std::__unordered_map_equal<_GEOTileKey,std::__hash_value_type<_GEOTileKey,std::__list_iterator<geo::detail::_CacheItem<_GEOTileKey,objc_object * {__strong},geo::detail::_GEOGenericContainer<_GEOTileKey,objc_object * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::_value_ptr>,void *>>,std::equal_to<_GEOTileKey>,std::hash<_GEOTileKey>,true>,std::allocator<std::__hash_value_type<_GEOTileKey,std::__list_iterator<geo::detail::_CacheItem<_GEOTileKey,objc_object * {__strong},geo::detail::_GEOGenericContainer<_GEOTileKey,objc_object * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::_value_ptr>,void *>>>>::__emplace_unique_key_args<_GEOTileKey,std::piecewise_construct_t const&,std::tuple<_GEOTileKey const&>,std::tuple<>>(float *a1, void *a2, _OWORD *a3)
{
  unint64_t v7 = GEOTileKeyHash(a2);
  unint64_t v8 = v7;
  unint64_t v9 = *((void *)a1 + 1);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = v7;
      if (v7 >= v9) {
        unint64_t v3 = v7 % v9;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v7;
    }
    uint64_t v11 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      for (uint64_t i = *v11; i; uint64_t i = (void *)*i)
      {
        unint64_t v13 = i[1];
        if (v13 == v7)
        {
          if (i[2] == *a2 && i[3] == a2[1]) {
            return i;
          }
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x28uLL);
  *uint64_t i = 0;
  i[1] = v8;
  *((_OWORD *)i + 1) = *a3;
  i[4] = 0;
  float v15 = (float)(unint64_t)(*((void *)a1 + 3) + 1);
  float v16 = a1[8];
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    BOOL v17 = 1;
    if (v9 >= 3) {
      BOOL v17 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v9);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      int8x8_t prime = (int8x8_t)v19;
    }
    else {
      int8x8_t prime = (int8x8_t)v18;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v9 = *((void *)a1 + 1);
    }
    if (*(void *)&prime > v9) {
      goto LABEL_34;
    }
    if (*(void *)&prime < v9)
    {
      unint64_t v27 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
      if (v9 < 3 || (uint8x8_t v28 = (uint8x8_t)vcnt_s8((int8x8_t)v9), v28.i16[0] = vaddlv_u8(v28), v28.u32[0] > 1uLL))
      {
        unint64_t v27 = std::__next_prime(v27);
      }
      else
      {
        uint64_t v29 = 1 << -(char)__clz(v27 - 1);
        if (v27 >= 2) {
          unint64_t v27 = v29;
        }
      }
      if (*(void *)&prime <= v27) {
        int8x8_t prime = (int8x8_t)v27;
      }
      if (*(void *)&prime >= v9)
      {
        unint64_t v9 = *((void *)a1 + 1);
      }
      else
      {
        if (prime)
        {
LABEL_34:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          uint64_t v21 = operator new(8 * *(void *)&prime);
          uint64_t v22 = *(void **)a1;
          *(void *)a1 = v21;
          if (v22) {
            operator delete(v22);
          }
          uint64_t v23 = 0;
          *((int8x8_t *)a1 + 1) = prime;
          do
            *(void *)(*(void *)a1 + 8 * v23++) = 0;
          while (*(void *)&prime != v23);
          unsigned int v24 = (void *)*((void *)a1 + 2);
          if (v24)
          {
            unint64_t v25 = v24[1];
            uint8x8_t v26 = (uint8x8_t)vcnt_s8(prime);
            v26.i16[0] = vaddlv_u8(v26);
            if (v26.u32[0] > 1uLL)
            {
              if (v25 >= *(void *)&prime) {
                v25 %= *(void *)&prime;
              }
            }
            else
            {
              v25 &= *(void *)&prime - 1;
            }
            *(void *)(*(void *)a1 + 8 * v25) = a1 + 4;
            uint64_t v30 = (void *)*v24;
            if (*v24)
            {
              do
              {
                unint64_t v31 = v30[1];
                if (v26.u32[0] > 1uLL)
                {
                  if (v31 >= *(void *)&prime) {
                    v31 %= *(void *)&prime;
                  }
                }
                else
                {
                  v31 &= *(void *)&prime - 1;
                }
                if (v31 != v25)
                {
                  if (!*(void *)(*(void *)a1 + 8 * v31))
                  {
                    *(void *)(*(void *)a1 + 8 * v31) = v24;
                    goto LABEL_59;
                  }
                  *unsigned int v24 = *v30;
                  void *v30 = **(void **)(*(void *)a1 + 8 * v31);
                  **(void **)(*(void *)a1 + 8 * v31) = v30;
                  uint64_t v30 = v24;
                }
                unint64_t v31 = v25;
LABEL_59:
                unsigned int v24 = v30;
                uint64_t v30 = (void *)*v30;
                unint64_t v25 = v31;
              }
              while (v30);
            }
          }
          unint64_t v9 = (unint64_t)prime;
          goto LABEL_63;
        }
        int v36 = *(void **)a1;
        *(void *)a1 = 0;
        if (v36) {
          operator delete(v36);
        }
        unint64_t v9 = 0;
        *((void *)a1 + 1) = 0;
      }
    }
LABEL_63:
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  BOOL v32 = *(void **)a1;
  unint64_t v33 = *(void **)(*(void *)a1 + 8 * v3);
  if (v33)
  {
    *uint64_t i = *v33;
LABEL_76:
    void *v33 = i;
    goto LABEL_77;
  }
  *uint64_t i = *((void *)a1 + 2);
  *((void *)a1 + 2) = i;
  v32[v3] = a1 + 4;
  if (*i)
  {
    unint64_t v34 = *(void *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v34 >= v9) {
        v34 %= v9;
      }
    }
    else
    {
      v34 &= v9 - 1;
    }
    unint64_t v33 = (void *)(*(void *)a1 + 8 * v34);
    goto LABEL_76;
  }
LABEL_77:
  ++*((void *)a1 + 3);
  return i;
}

void sub_189FC03DC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::_removeForKey(int64x2_t *a1, void *a2)
{
  unint64_t v3 = &a1[5].i64[1];
  id v4 = std::__hash_table<std::__hash_value_type<_GEOTileKey,std::__list_iterator<CacheItem,void *>>,std::__unordered_map_hasher<_GEOTileKey,std::__hash_value_type<_GEOTileKey,std::__list_iterator<CacheItem,void *>>,hashkey,eqkey,true>,std::__unordered_map_equal<_GEOTileKey,std::__hash_value_type<_GEOTileKey,std::__list_iterator<CacheItem,void *>>,eqkey,hashkey,true>,std::allocator<std::__hash_value_type<_GEOTileKey,std::__list_iterator<CacheItem,void *>>>>::find<_GEOTileKey>(&a1[5].i64[1], a2);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = v4[4];
    id location = 0;
    geo::_geo_weak_ptr<GEOTileData * {__strong}>::operator=((id *)(v6 + 48), &location);
    objc_storeWeak(&location, 0);
    objc_destroyWeak(&location);
    int64x2_t v7 = a1[9];
    v8.i64[0] = -1;
    v8.i64[1] = -1;
    v9.i64[1] = -1;
    v9.i64[0] = *(void *)(v6 + 40);
    v9.i64[0] = vsubq_s64(v7, v9).u64[0];
    v9.i64[1] = vaddq_s64(v7, v8).i64[1];
    a1[9] = v9;
    std::list<geo::detail::_CacheItem<_GEOTileKey,GEOTileData * {__strong},geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::_value_ptr>>::erase((uint64_t)a1[4].i64, (char *)v6);
    std::__hash_table<std::__hash_value_type<_GEOTileKey,std::__list_iterator<CacheItem,void *>>,std::__unordered_map_hasher<_GEOTileKey,std::__hash_value_type<_GEOTileKey,std::__list_iterator<CacheItem,void *>>,hashkey,eqkey,true>,std::__unordered_map_equal<_GEOTileKey,std::__hash_value_type<_GEOTileKey,std::__list_iterator<CacheItem,void *>>,eqkey,hashkey,true>,std::allocator<std::__hash_value_type<_GEOTileKey,std::__list_iterator<CacheItem,void *>>>>::erase(v3, v5);
  }
}

void std::list<geo::detail::_CacheItem<_GEOTileKey,GEOTileData * {__strong},geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::_value_ptr>>::erase(uint64_t a1, char *a2)
{
  uint64_t v3 = *(void *)a2;
  *(void *)(v3 + 8) = *((void *)a2 + 1);
  **((void **)a2 + 1) = v3;
  --*(void *)(a1 + 16);
  id v4 = (id *)(a2 + 48);
  objc_storeWeak((id *)a2 + 6, 0);
  objc_destroyWeak(v4);

  operator delete(a2);
}

void std::__hash_table<std::__hash_value_type<_GEOTileKey,std::__list_iterator<geo::detail::_CacheItem<_GEOTileKey,GEOTileData * {__strong},geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::_value_ptr>,void *>>,std::__unordered_map_hasher<_GEOTileKey,std::__hash_value_type<_GEOTileKey,std::__list_iterator<geo::detail::_CacheItem<_GEOTileKey,GEOTileData * {__strong},geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::_value_ptr>,void *>>,std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,true>,std::__unordered_map_equal<_GEOTileKey,std::__hash_value_type<_GEOTileKey,std::__list_iterator<geo::detail::_CacheItem<_GEOTileKey,GEOTileData * {__strong},geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::_value_ptr>,void *>>,std::equal_to<_GEOTileKey>,std::hash<_GEOTileKey>,true>,std::allocator<std::__hash_value_type<_GEOTileKey,std::__list_iterator<geo::detail::_CacheItem<_GEOTileKey,GEOTileData * {__strong},geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::_value_ptr>,void *>>>>::__erase_unique<_GEOTileKey>(void *a1, void *a2)
{
  uint64_t v3 = std::__hash_table<std::__hash_value_type<_GEOTileKey,std::__list_iterator<CacheItem,void *>>,std::__unordered_map_hasher<_GEOTileKey,std::__hash_value_type<_GEOTileKey,std::__list_iterator<CacheItem,void *>>,hashkey,eqkey,true>,std::__unordered_map_equal<_GEOTileKey,std::__hash_value_type<_GEOTileKey,std::__list_iterator<CacheItem,void *>>,eqkey,hashkey,true>,std::allocator<std::__hash_value_type<_GEOTileKey,std::__list_iterator<CacheItem,void *>>>>::find<_GEOTileKey>(a1, a2);
  if (v3)
  {
    std::__hash_table<std::__hash_value_type<_GEOTileKey,std::__list_iterator<CacheItem,void *>>,std::__unordered_map_hasher<_GEOTileKey,std::__hash_value_type<_GEOTileKey,std::__list_iterator<CacheItem,void *>>,hashkey,eqkey,true>,std::__unordered_map_equal<_GEOTileKey,std::__hash_value_type<_GEOTileKey,std::__list_iterator<CacheItem,void *>>,eqkey,hashkey,true>,std::allocator<std::__hash_value_type<_GEOTileKey,std::__list_iterator<CacheItem,void *>>>>::erase(a1, v3);
  }
}

void sub_189FC0650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void *std::__function::__value_func<void ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>::~__value_func[abi:ne180100](void *a1)
{
  id v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void std::__function::__func<geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)#1},std::allocator<geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)#1}>,void ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>::~__func()
{
}

__n128 std::__function::__func<geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)#1},std::allocator<geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)#1}>,void ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>::__clone(uint64_t a1)
{
  id v2 = (char *)operator new(0x18uLL);
  *(void *)id v2 = &unk_1ED517F48;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 std::__function::__func<geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)#1},std::allocator<geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)#1}>,void ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>::__clone(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1ED517F48;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

__n128 std::__function::__func<geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)#1},std::allocator<geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)#1}>,void ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>::operator()(uint64_t a1, __n128 *a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v6 = *a5;
  uint64_t v7 = *(void *)(*(void *)(a1 + 16) + 24);
  uint64_t v15 = *a4;
  uint64_t v14 = v6;
  if (!v7) {
    std::__throw_bad_function_call[abi:ne180100]();
  }
  if ((*(unsigned int (**)(uint64_t, __n128 *, uint64_t, uint64_t *, uint64_t *))(*(void *)v7 + 48))(v7, a2, a3, &v15, &v14))
  {
    unint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (__n128 *)operator new(0x20uLL);
    __n128 result = *a2;
    v11[1] = *a2;
    v11->n128_u64[0] = v10;
    char v12 = *(__n128 ***)(v10 + 8);
    v11->n128_u64[1] = (unint64_t)v12;
    *char v12 = v11;
    uint64_t v13 = *(void *)(v10 + 16) + 1;
    *(void *)(v10 + 8) = v11;
    *(void *)(v10 + 16) = v13;
  }
  return result;
}

uint64_t std::__function::__func<geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)#1},std::allocator<geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)#1}>,void ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)#1},std::allocator<geo::detail::_GEOGenericContainer<_GEOTileKey,GEOTileData * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)#1}>,void ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>::target_type()
{
}

void sub_189FC09EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *std::__function::__value_func<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<GEOTileData * {__strong}> const&,double,unsigned long)>::~__value_func[abi:ne180100](void *a1)
{
  id v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void std::__function::__func<geo::detail::_GEOGenericContainer<_GEOTileKey,objc_object * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)#1},std::allocator<geo::detail::_GEOGenericContainer<_GEOTileKey,objc_object * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)#1}>,void ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>::~__func()
{
}

__n128 std::__function::__func<geo::detail::_GEOGenericContainer<_GEOTileKey,objc_object * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)#1},std::allocator<geo::detail::_GEOGenericContainer<_GEOTileKey,objc_object * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)#1}>,void ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>::__clone(uint64_t a1)
{
  id v2 = (char *)operator new(0x18uLL);
  *(void *)id v2 = &unk_1ED517FA0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 std::__function::__func<geo::detail::_GEOGenericContainer<_GEOTileKey,objc_object * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)#1},std::allocator<geo::detail::_GEOGenericContainer<_GEOTileKey,objc_object * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)#1}>,void ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>::__clone(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1ED517FA0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

__n128 std::__function::__func<geo::detail::_GEOGenericContainer<_GEOTileKey,objc_object * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)#1},std::allocator<geo::detail::_GEOGenericContainer<_GEOTileKey,objc_object * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)#1}>,void ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>::operator()(uint64_t a1, __n128 *a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v6 = *a5;
  uint64_t v7 = *(void *)(*(void *)(a1 + 16) + 24);
  uint64_t v15 = *a4;
  uint64_t v14 = v6;
  if (!v7) {
    std::__throw_bad_function_call[abi:ne180100]();
  }
  if ((*(unsigned int (**)(uint64_t, __n128 *, uint64_t, uint64_t *, uint64_t *))(*(void *)v7 + 48))(v7, a2, a3, &v15, &v14))
  {
    unint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (__n128 *)operator new(0x20uLL);
    __n128 result = *a2;
    v11[1] = *a2;
    v11->n128_u64[0] = v10;
    char v12 = *(__n128 ***)(v10 + 8);
    v11->n128_u64[1] = (unint64_t)v12;
    *char v12 = v11;
    uint64_t v13 = *(void *)(v10 + 16) + 1;
    *(void *)(v10 + 8) = v11;
    *(void *)(v10 + 16) = v13;
  }
  return result;
}

uint64_t std::__function::__func<geo::detail::_GEOGenericContainer<_GEOTileKey,objc_object * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)#1},std::allocator<geo::detail::_GEOGenericContainer<_GEOTileKey,objc_object * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)#1}>,void ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<geo::detail::_GEOGenericContainer<_GEOTileKey,objc_object * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)#1},std::allocator<geo::detail::_GEOGenericContainer<_GEOTileKey,objc_object * {__strong},std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,geo::GEOGenericContainerWeakReferenceTag,0ul,0ul,geo::GEOGenericContainerLockingTag,geo::detail::_default_pointer_type>::removeAllMatchingPredicate(std::function<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>)::{lambda(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)#1}>,void ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>::target_type()
{
}

void *std::__function::__value_func<void ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>::~__value_func[abi:ne180100](void *a1)
{
  id v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_189FC0E10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *std::__function::__value_func<BOOL ()(_GEOTileKey const&,geo::_geo_weak_ptr<objc_object * {__strong}> const&,double,unsigned long)>::~__value_func[abi:ne180100](void *a1)
{
  id v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

BOOL GEOLocationShiftRequestReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if (!PBReaderPlaceMark() || (GEOPixelPointReadAllFrom(a1 + 8, (uint64_t)v3) & 1) == 0) {
            goto LABEL_26;
          }
          PBReaderRecallMark();
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_26;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v18 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v18 = 0;
  }
  objc_sync_exit(v3);

  return v18;
}

void sub_189FC1318(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLocationShiftRequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLocationShiftRequestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FC137C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOLocationShiftRequestIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = 0;
  }
  else
  {
    int v5 = 0;
    uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v2;
        uint64_t v11 = *(void *)&a1[v10];
        unint64_t v12 = v11 + 1;
        if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        if (v8++ >= 9)
        {
          unint64_t v9 = 0;
          int v15 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v15 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v16 = v9 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v9 >> 3) == 1)
      {
        if (v5 || v16 != 2 || !PBReaderPlaceMark() || !GEOPixelPointIsValid(a1))
        {
LABEL_35:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
        int v5 = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_35;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  if (a1[*v4]) {
    BOOL v18 = 1;
  }
  else {
    BOOL v18 = v5 == 0;
  }
  uint64_t v19 = !v18;
  PBReaderRecallMark();
  return v19;
}

uint64_t GEOPixelPointIsValid(void *a1)
{
  v4[3] = [a1 position];
  void v4[4] = [a1 length];
  memset(v4, 0, 24);
  uint64_t AllFrom = GEOPixelPointReadAllFrom((uint64_t)v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

uint64_t GEOPixelPointWriteTo(uint64_t a1)
{
  PBDataWriterWriteDoubleField();
  uint64_t result = PBDataWriterWriteDoubleField();
  if (*(unsigned char *)(a1 + 20))
  {
    return PBDataWriterWriteInt32Field();
  }
  return result;
}

BOOL GEOPixelPointEquals(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

BOOL GEOLocationShiftResponseReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if (!PBReaderPlaceMark() || (GEOPixelPointReadAllFrom(a1 + 8, (uint64_t)v3) & 1) == 0) {
            goto LABEL_26;
          }
          PBReaderRecallMark();
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_26;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v18 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v18 = 0;
  }
  objc_sync_exit(v3);

  return v18;
}

void sub_189FC1D24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLocationShiftResponseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLocationShiftResponseReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FC1D88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOLocationShiftResponseIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = 0;
  }
  else
  {
    int v5 = 0;
    uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v2;
        uint64_t v11 = *(void *)&a1[v10];
        unint64_t v12 = v11 + 1;
        if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        if (v8++ >= 9)
        {
          unint64_t v9 = 0;
          int v15 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v15 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v16 = v9 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v9 >> 3) == 1)
      {
        if (v5 || v16 != 2 || !PBReaderPlaceMark() || !GEOPixelPointIsValid(a1))
        {
LABEL_35:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
        int v5 = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_35;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  if (a1[*v4]) {
    BOOL v18 = 1;
  }
  else {
    BOOL v18 = v5 == 0;
  }
  uint64_t v19 = !v18;
  PBReaderRecallMark();
  return v19;
}

id GEOPixelPointDescription(uint64_t a1)
{
  id v2 = NSString;
  id v3 = _GEOPixelPointDictionaryRepresentation(a1);
  id v4 = [v2 stringWithFormat:@"GEOPixelPoint<%p> %@", a1, v3];

  return v4;
}

id _GEOPixelPointDictionaryRepresentation(uint64_t a1)
{
  id v2 = [MEMORY[0x1E4F1CA60] dictionary];
  id v3 = [NSNumber numberWithDouble:*(double *)a1];
  [v2 setObject:v3 forKey:@"x"];

  id v4 = [NSNumber numberWithDouble:*(double *)(a1 + 8)];
  [v2 setObject:v4 forKey:@"y"];

  if (*(unsigned char *)(a1 + 20))
  {
    int v5 = [NSNumber numberWithInt:*(unsigned int *)(a1 + 16)];
    [v2 setObject:v5 forKey:@"z"];
  }

  return v2;
}

void _GEOPixelPointFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  id v8 = a1;
  id v3 = [v8 objectForKeyedSubscript:@"x"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [v3 doubleValue];
    *(void *)a2 = v4;
  }

  int v5 = [v8 objectForKeyedSubscript:@"y"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [v5 doubleValue];
    *(void *)(a2 + 8) = v6;
  }

  char v7 = [v8 objectForKeyedSubscript:@"z"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 20) |= 1u;
    *(_DWORD *)(a2 + 16) = [v7 intValue];
  }
}

uint64_t GEOPixelPointReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOPixelPointReadAllFrom(a1, a2);
}

uint64_t GEOPixelPointReadAllFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  int v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v19 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        *(unsigned char *)(a1 + 20) |= 1u;
        while (1)
        {
          uint64_t v26 = *v3;
          uint64_t v27 = *(void *)(a2 + v26);
          unint64_t v28 = v27 + 1;
          if (v27 == -1 || v28 > *(void *)(a2 + *v4)) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
          *(void *)(a2 + v26) = v28;
          v25 |= (unint64_t)(v29 & 0x7F) << v23;
          if ((v29 & 0x80) == 0) {
            goto LABEL_37;
          }
          v23 += 7;
          BOOL v15 = v24++ >= 9;
          if (v15)
          {
            LODWORD(v25) = 0;
            goto LABEL_39;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v25) = 0;
        }
LABEL_39:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else if (v19 == 2)
      {
        uint64_t v30 = *v3;
        unint64_t v31 = *(void *)(a2 + v30);
        if (v31 <= 0xFFFFFFFFFFFFFFF7 && v31 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v32 = *(void *)(*(void *)(a2 + *v7) + v31);
          *(void *)(a2 + v30) = v31 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          uint64_t v32 = 0;
        }
        *(void *)(a1 + 8) = v32;
      }
      else if (v19 == 1)
      {
        uint64_t v20 = *v3;
        unint64_t v21 = *(void *)(a2 + v20);
        if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v22 = *(void *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          uint64_t v22 = 0;
        }
        *(void *)a1 = v22;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t GEOPixelPointHash()
{
  return PBHashBytes();
}

BOOL GEOPolyLocationShiftRequestReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          BOOL v18 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          unint64_t v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    BOOL v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_189FC2B74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPolyLocationShiftRequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPolyLocationShiftRequestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FC2BD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPolyLocationShiftRequestIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = 0;
  }
  else
  {
    int v5 = 0;
    uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v2;
        uint64_t v11 = *(void *)&a1[v10];
        unint64_t v12 = v11 + 1;
        if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        if (v8++ >= 9)
        {
          unint64_t v9 = 0;
          int v15 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v15 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v16 = v9 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v9 >> 3) == 1)
      {
        if (v5 || v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
        {
LABEL_35:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
        int v5 = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_35;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  if (a1[*v4]) {
    BOOL v18 = 1;
  }
  else {
    BOOL v18 = v5 == 0;
  }
  uint64_t v19 = !v18;
  PBReaderRecallMark();
  return v19;
}

void sub_189FC336C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPolyLocationShiftResponseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 72) >> 1) & 1) + (*(unsigned char *)(a1 + 72) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -3:
        char v7 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = (v10 & 1 | v11) != 0;
        if ((v14 | v7)) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        BOOL v16 = v14;
        int v17 = (int *)MEMORY[0x1E4F940E8];
        BOOL v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_96;
        }
        if (v15) {
          char v19 = v14;
        }
        else {
          char v19 = 1;
        }
        char v67 = v19;
        BOOL v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_96;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v17;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        uint64_t v29 = *v18;
        int v30 = *(unsigned __int8 *)(v3 + v29);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_26:
    uint64_t v29 = *v18;
    int v30 = *(unsigned __int8 *)(v3 + v29);
    if (*(unsigned char *)(v3 + v29)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    int v31 = v23 & 7;
    if (v30 || v31 == 4)
    {
LABEL_96:
      if (v16)
      {
        char v60 = 1;
        goto LABEL_98;
      }
      if (!v15) {
        goto LABEL_109;
      }
      while (1)
      {
        int v62 = *v15++;
        int v61 = v62;
        if (v62 == 2) {
          break;
        }
        if (v61 == 100)
        {
          char v63 = 2;
LABEL_108:
          *(unsigned char *)(a1 + 72) |= v63;
        }
        else if (!v61)
        {
          goto LABEL_109;
        }
      }
      char v63 = 1;
      goto LABEL_108;
    }
    unint64_t v33 = v23 >> 3;
    BOOL v34 = v16;
    if ((v67 & 1) == 0)
    {
      unsigned int v35 = v15;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if ((int)v33 <= 2)
    {
      if (v33 == 1)
      {
        if (v7)
        {
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v47 = 0;
          while (1)
          {
            uint64_t v48 = *v17;
            uint64_t v49 = *(void *)(v3 + v48);
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)(v3 + *v6)) {
              break;
            }
            char v51 = *(unsigned char *)(*(void *)(v3 + *v20) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if ((v51 & 0x80) == 0) {
              goto LABEL_77;
            }
            v45 += 7;
            BOOL v28 = v46++ >= 9;
            if (v28)
            {
              LODWORD(v47) = 0;
              goto LABEL_79;
            }
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_77:
          if (*(unsigned char *)(v3 + *v18)) {
            LODWORD(v47) = 0;
          }
LABEL_79:
          *(_DWORD *)(a1 + 68) = v47;
          goto LABEL_91;
        }
      }
      else
      {
        if (v33 != 2) {
          goto LABEL_72;
        }
        if (v34 && (*(unsigned char *)(a1 + 72) & 1) == 0)
        {
          if (v31 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_113;
            }
            while (1)
            {
              uint64_t v39 = (unint64_t *)(v3 + *v17);
              unint64_t v40 = *v39;
              unint64_t v41 = *(void *)(v3 + *v6);
              if (*v39 >= v41) {
                break;
              }
              uint64_t v42 = (int)*MEMORY[0x1E4F940C8];
              if (*(unsigned char *)(v3 + v42)) {
                break;
              }
              if (v40 > 0xFFFFFFFFFFFFFFF7 || v40 + 8 > v41) {
                *(unsigned char *)(v3 + v42) = 1;
              }
              else {
                *uint64_t v39 = v40 + 8;
              }
              PBRepeatedDoubleAdd();
            }
            PBReaderRecallMark();
          }
          else
          {
            uint64_t v57 = *v17;
            unint64_t v58 = *(void *)(v3 + v57);
            if (v58 <= 0xFFFFFFFFFFFFFFF7 && v58 + 8 <= *(void *)(v3 + *v6)) {
              *(void *)(v3 + v57) = v58 + 8;
            }
            else {
              *(unsigned char *)(v3 + v29) = 1;
            }
            PBRepeatedDoubleAdd();
          }
          goto LABEL_90;
        }
      }
      goto LABEL_74;
    }
    if (v33 == 3)
    {
      if (v7)
      {
        uint64_t v52 = *v17;
        unint64_t v53 = *(void *)(v3 + v52);
        if (v53 <= 0xFFFFFFFFFFFFFFF7 && v53 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v54 = *(void *)(*(void *)(v3 + *v20) + v53);
          *(void *)(v3 + v52) = v53 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + v29) = 1;
          uint64_t v54 = 0;
        }
        *(void *)(a1 + 48) = v54;
        goto LABEL_91;
      }
      goto LABEL_74;
    }
    if (v33 != 100)
    {
LABEL_72:
      int v55 = PBReaderSkipValueWithTag();
      BOOL v18 = (int *)MEMORY[0x1E4F940C8];
      if (!v55) {
        goto LABEL_112;
      }
      goto LABEL_91;
    }
    if (v34) {
      break;
    }
LABEL_74:
    char v56 = PBReaderSkipValueWithTag();
    BOOL v18 = (int *)MEMORY[0x1E4F940C8];
    if ((v56 & 1) == 0)
    {
LABEL_112:
      char v60 = 0;
      goto LABEL_98;
    }
LABEL_91:
    if (v8) {
      int v59 = 1;
    }
    else {
      int v59 = v16;
    }
    if (v59 != 1 || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
      goto LABEL_96;
    }
  }
  if ((*(unsigned char *)(a1 + 72) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_113:
      char v60 = 0;
      goto LABEL_115;
    }
    v8 += *(unsigned __int8 *)(a1 + 72) << 30 >> 31;
    goto LABEL_90;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_113;
  }
  BOOL v66 = v16;
  uint64_t v43 = objc_alloc_init(GEOLatLng);
  if (GEOLatLngReadAllFrom((uint64_t)v43, (void *)v3))
  {
    PBReaderRecallMark();
    int v44 = *(void **)(a1 + 40);
    *(void *)(a1 + 40) = v43;

    --v8;
    BOOL v16 = v66;
LABEL_90:
    BOOL v18 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_91;
  }

  char v60 = 0;
  BOOL v16 = v66;
LABEL_115:
  BOOL v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_98:
  *(unsigned char *)(a1 + 72) |= 1u;
  *(unsigned char *)(a1 + 72) |= 2u;
  if (v60)
  {
LABEL_109:
    unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
    if (v16) {
      goto LABEL_110;
    }
    return v3;
  }
  unint64_t v3 = 0;
  if (!v16) {
    return v3;
  }
LABEL_110:
  uint64_t v64 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = 0;

  return v3;
}

void sub_189FC4308(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPolyLocationShiftResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPolyLocationShiftResponseReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPolyLocationShiftResponseReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPolyLocationShiftResponseReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPolyLocationShiftResponseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189FC44B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPolyLocationShiftResponseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPolyLocationShiftResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FC4514(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPolyLocationShiftResponseIsValid(char *a1)
{
  v44[1] = *MEMORY[0x1E4F143B8];
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  v44[0] = 0;
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_63;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4)
      {
LABEL_63:
        BOOL v41 = HIDWORD(v44[0]) != 0;
        goto LABEL_65;
      }
      unint64_t v18 = v8 >> 3;
      if ((int)(v8 >> 3) > 2)
      {
        if (v18 == 100)
        {
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_69;
          }
          goto LABEL_45;
        }
        if (v18 != 3)
        {
LABEL_46:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_69;
          }
          goto LABEL_62;
        }
        uint64_t v24 = 0;
        char v25 = 1;
        while (1)
        {
          char v26 = v25;
          int v27 = *((_DWORD *)v44 + v24);
          if (!v27) {
            break;
          }
          if (v27 != 3)
          {
            char v25 = 0;
            uint64_t v24 = 1;
            if (v26) {
              continue;
            }
          }
          goto LABEL_69;
        }
        *((_DWORD *)v44 + v24) = 3;
        if (v16 != 1)
        {
LABEL_69:
          PBReaderRecallMark();
          return 0;
        }
      }
      else
      {
        if (v18 == 1)
        {
          uint64_t v28 = 0;
          char v29 = 1;
          while (1)
          {
            char v30 = v29;
            int v31 = *((_DWORD *)v44 + v28);
            if (!v31) {
              break;
            }
            if (v31 != 1)
            {
              char v29 = 0;
              uint64_t v28 = 1;
              if (v30) {
                continue;
              }
            }
            goto LABEL_69;
          }
          *((_DWORD *)v44 + v28) = 1;
          if (v16) {
            goto LABEL_69;
          }
          unsigned int v35 = 0;
          while (1)
          {
            uint64_t v36 = *v2;
            uint64_t v37 = *(void *)&a1[v36];
            unint64_t v38 = v37 + 1;
            if (v37 == -1 || v38 > *(void *)&a1[*v3]) {
              break;
            }
            int v39 = *(char *)(*(void *)&a1[*v5] + v37);
            *(void *)&a1[v36] = v38;
            if (v39 < 0 && v35++ <= 8) {
              continue;
            }
            goto LABEL_62;
          }
          uint64_t v14 = *v4;
LABEL_61:
          a1[v14] = 1;
          goto LABEL_62;
        }
        if (v18 != 2) {
          goto LABEL_46;
        }
        if (v16 != 1)
        {
          if (v16 != 2 || !PBReaderPlaceMark()) {
            goto LABEL_69;
          }
          while (1)
          {
            char v19 = (unint64_t *)&a1[*v2];
            unint64_t v20 = *v19;
            unint64_t v21 = *(void *)&a1[*v3];
            if (*v19 >= v21) {
              break;
            }
            uint64_t v22 = *v4;
            if (a1[v22]) {
              break;
            }
            if (v20 > 0xFFFFFFFFFFFFFFF7 || (unint64_t v23 = v20 + 8, v23 > v21)) {
              a1[v22] = 1;
            }
            else {
              *char v19 = v23;
            }
          }
LABEL_45:
          PBReaderRecallMark();
          goto LABEL_62;
        }
      }
      uint64_t v32 = *v2;
      unint64_t v33 = *(void *)&a1[v32];
      if (v33 > 0xFFFFFFFFFFFFFFF7) {
        goto LABEL_61;
      }
      unint64_t v34 = v33 + 8;
      if (v34 > *(void *)&a1[*v3]) {
        goto LABEL_61;
      }
      *(void *)&a1[v32] = v34;
LABEL_62:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_63;
      }
    }
  }
  BOOL v41 = 0;
LABEL_65:
  if (a1[*v4]) {
    BOOL v42 = 0;
  }
  else {
    BOOL v42 = v41;
  }
  PBReaderRecallMark();
  return v42;
}

void sub_189FC4A94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPolyLocationShiftResponseIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 72) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189FC4C24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FC4EB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOPDCameraPathFrameDescription(uint64_t a1)
{
  BOOL v2 = NSString;
  id v3 = _GEOPDCameraPathFrameDictionaryRepresentation(a1, 0);
  uint64_t v4 = [v2 stringWithFormat:@"GEOPDCameraPathFrame<%p> %@", a1, v3];

  return v4;
}

id GEOPDCameraPathFrameDictionaryRepresentation(uint64_t a1)
{
  return _GEOPDCameraPathFrameDictionaryRepresentation(a1, 0);
}

id _GEOPDCameraPathFrameDictionaryRepresentation(uint64_t a1, int a2)
{
  uint64_t v4 = [MEMORY[0x1E4F1CA60] dictionary];
  __int16 v6 = *(_WORD *)(a1 + 80);
  if (v6)
  {
    LODWORD(v5) = *(_DWORD *)a1;
    uint64_t v9 = [NSNumber numberWithFloat:v5];
    if (a2) {
      uint64_t v10 = @"easeIn";
    }
    else {
      uint64_t v10 = @"ease_in";
    }
    [v4 setObject:v9 forKey:v10];

    __int16 v6 = *(_WORD *)(a1 + 80);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  LODWORD(v5) = *(_DWORD *)(a1 + 4);
  unint64_t v11 = [NSNumber numberWithFloat:v5];
  if (a2) {
    char v12 = @"easeOut";
  }
  else {
    char v12 = @"ease_out";
  }
  [v4 setObject:v11 forKey:v12];

  __int16 v6 = *(_WORD *)(a1 + 80);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_28;
  }
LABEL_24:
  LODWORD(v5) = *(_DWORD *)(a1 + 8);
  uint64_t v13 = [NSNumber numberWithFloat:v5];
  if (a2) {
    uint64_t v14 = @"fieldOfView";
  }
  else {
    uint64_t v14 = @"field_of_view";
  }
  [v4 setObject:v13 forKey:v14];

  __int16 v6 = *(_WORD *)(a1 + 80);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v15 = [NSNumber numberWithDouble:*(double *)(a1 + 16)];
  [v4 setObject:v15 forKey:@"height"];

  __int16 v6 = *(_WORD *)(a1 + 80);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v16 = [NSNumber numberWithDouble:*(double *)(a1 + 24)];
  [v4 setObject:v16 forKey:@"latitude"];

  __int16 v6 = *(_WORD *)(a1 + 80);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v17 = [NSNumber numberWithDouble:*(double *)(a1 + 32)];
  [v4 setObject:v17 forKey:@"longitude"];

  __int16 v6 = *(_WORD *)(a1 + 80);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_32;
  }
LABEL_31:
  unint64_t v18 = [NSNumber numberWithDouble:*(double *)(a1 + 40)];
  [v4 setObject:v18 forKey:@"roll"];

  __int16 v6 = *(_WORD *)(a1 + 80);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_33;
  }
LABEL_32:
  char v19 = [NSNumber numberWithDouble:*(double *)(a1 + 48)];
  [v4 setObject:v19 forKey:@"rotation"];

  __int16 v6 = *(_WORD *)(a1 + 80);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_37;
  }
LABEL_33:
  unint64_t v20 = [NSNumber numberWithDouble:*(double *)(a1 + 56)];
  if (a2) {
    unint64_t v21 = @"secondsToNextFrame";
  }
  else {
    unint64_t v21 = @"seconds_to_next_frame";
  }
  [v4 setObject:v20 forKey:v21];

  __int16 v6 = *(_WORD *)(a1 + 80);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_37:
  uint64_t v22 = [NSNumber numberWithDouble:*(double *)(a1 + 64)];
  [v4 setObject:v22 forKey:@"tilt"];

  if ((*(_WORD *)(a1 + 80) & 0x400) != 0)
  {
LABEL_12:
    unsigned int v7 = [NSNumber numberWithDouble:*(double *)(a1 + 72)];
    [v4 setObject:v7 forKey:@"zoom"];
  }
LABEL_13:

  return v4;
}

id GEOPDCameraPathFrameJSONRepresentation(uint64_t a1)
{
  return _GEOPDCameraPathFrameDictionaryRepresentation(a1, 1);
}

void GEOPDCameraPathFrameFromDictionaryRepresentation(void *a1, uint64_t a2)
{
}

void _GEOPDCameraPathFrameFromDictionaryRepresentation(void *a1, uint64_t a2, int a3)
{
  id v31 = a1;
  double v5 = [v31 objectForKeyedSubscript:@"latitude"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_WORD *)(a2 + 80) |= 0x10u;
    [v5 doubleValue];
    *(void *)(a2 + 24) = v6;
  }

  unsigned int v7 = [v31 objectForKeyedSubscript:@"longitude"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_WORD *)(a2 + 80) |= 0x20u;
    [v7 doubleValue];
    *(void *)(a2 + 32) = v8;
  }

  uint64_t v9 = [v31 objectForKeyedSubscript:@"height"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_WORD *)(a2 + 80) |= 8u;
    [v9 doubleValue];
    *(void *)(a2 + 16) = v10;
  }

  unint64_t v11 = [v31 objectForKeyedSubscript:@"zoom"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_WORD *)(a2 + 80) |= 0x400u;
    [v11 doubleValue];
    *(void *)(a2 + 72) = v12;
  }

  uint64_t v13 = [v31 objectForKeyedSubscript:@"tilt"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_WORD *)(a2 + 80) |= 0x200u;
    [v13 doubleValue];
    *(void *)(a2 + 64) = v14;
  }

  int v15 = [v31 objectForKeyedSubscript:@"rotation"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_WORD *)(a2 + 80) |= 0x80u;
    [v15 doubleValue];
    *(void *)(a2 + 48) = v16;
  }

  int v17 = [v31 objectForKeyedSubscript:@"roll"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_WORD *)(a2 + 80) |= 0x40u;
    [v17 doubleValue];
    *(void *)(a2 + 40) = v18;
  }

  if (a3) {
    char v19 = @"secondsToNextFrame";
  }
  else {
    char v19 = @"seconds_to_next_frame";
  }
  unint64_t v20 = [v31 objectForKeyedSubscript:v19];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_WORD *)(a2 + 80) |= 0x100u;
    [v20 doubleValue];
    *(void *)(a2 + 56) = v21;
  }

  if (a3) {
    uint64_t v22 = @"easeIn";
  }
  else {
    uint64_t v22 = @"ease_in";
  }
  unint64_t v23 = [v31 objectForKeyedSubscript:v22];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_WORD *)(a2 + 80) |= 1u;
    [v23 floatValue];
    *(_DWORD *)a2 = v24;
  }

  if (a3) {
    char v25 = @"easeOut";
  }
  else {
    char v25 = @"ease_out";
  }
  char v26 = [v31 objectForKeyedSubscript:v25];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_WORD *)(a2 + 80) |= 2u;
    [v26 floatValue];
    *(_DWORD *)(a2 + 4) = v27;
  }

  if (a3) {
    uint64_t v28 = @"fieldOfView";
  }
  else {
    uint64_t v28 = @"field_of_view";
  }
  char v29 = [v31 objectForKeyedSubscript:v28];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_WORD *)(a2 + 80) |= 4u;
    [v29 floatValue];
    *(_DWORD *)(a2 + 8) = v30;
  }
}

void GEOPDCameraPathFrameFromJSONRepresentation(void *a1, uint64_t a2)
{
}

uint64_t GEOPDCameraPathFrameReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOPDCameraPathFrameReadAllFrom(a1, a2);
}

uint64_t GEOPDCameraPathFrameReadAllFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  double v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          uint64_t v12 = *(void *)(a2 + v11);
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            uint64_t v16 = *v5;
            int v17 = *(unsigned __int8 *)(a2 + v16);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        uint64_t v16 = *v5;
        int v17 = *(unsigned __int8 *)(a2 + v16);
        if (*(unsigned char *)(a2 + v16)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v17) {
          BOOL v18 = 1;
        }
        else {
          BOOL v18 = (v10 & 7) == 4;
        }
        if (!v18)
        {
          switch((v10 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 80) |= 0x10u;
              uint64_t v19 = *v3;
              unint64_t v20 = *(void *)(a2 + v19);
              if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v20);
                *(void *)(a2 + v19) = v20 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + v16) = 1;
                uint64_t v21 = 0;
              }
              *(void *)(a1 + 24) = v21;
              goto LABEL_76;
            case 2u:
              *(_WORD *)(a1 + 80) |= 0x20u;
              uint64_t v22 = *v3;
              unint64_t v23 = *(void *)(a2 + v22);
              if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v24 = *(void *)(*(void *)(a2 + *v7) + v23);
                *(void *)(a2 + v22) = v23 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + v16) = 1;
                uint64_t v24 = 0;
              }
              *(void *)(a1 + 32) = v24;
              goto LABEL_76;
            case 3u:
              *(_WORD *)(a1 + 80) |= 8u;
              uint64_t v25 = *v3;
              unint64_t v26 = *(void *)(a2 + v25);
              if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v27 = *(void *)(*(void *)(a2 + *v7) + v26);
                *(void *)(a2 + v25) = v26 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + v16) = 1;
                uint64_t v27 = 0;
              }
              *(void *)(a1 + 16) = v27;
              goto LABEL_76;
            case 4u:
              *(_WORD *)(a1 + 80) |= 0x400u;
              uint64_t v28 = *v3;
              unint64_t v29 = *(void *)(a2 + v28);
              if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v30 = *(void *)(*(void *)(a2 + *v7) + v29);
                *(void *)(a2 + v28) = v29 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + v16) = 1;
                uint64_t v30 = 0;
              }
              *(void *)(a1 + 72) = v30;
              goto LABEL_76;
            case 5u:
              *(_WORD *)(a1 + 80) |= 0x200u;
              uint64_t v31 = *v3;
              unint64_t v32 = *(void *)(a2 + v31);
              if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v33 = *(void *)(*(void *)(a2 + *v7) + v32);
                *(void *)(a2 + v31) = v32 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + v16) = 1;
                uint64_t v33 = 0;
              }
              *(void *)(a1 + 64) = v33;
              goto LABEL_76;
            case 6u:
              *(_WORD *)(a1 + 80) |= 0x80u;
              uint64_t v34 = *v3;
              unint64_t v35 = *(void *)(a2 + v34);
              if (v35 <= 0xFFFFFFFFFFFFFFF7 && v35 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v36 = *(void *)(*(void *)(a2 + *v7) + v35);
                *(void *)(a2 + v34) = v35 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + v16) = 1;
                uint64_t v36 = 0;
              }
              *(void *)(a1 + 48) = v36;
              goto LABEL_76;
            case 7u:
              *(_WORD *)(a1 + 80) |= 0x40u;
              uint64_t v37 = *v3;
              unint64_t v38 = *(void *)(a2 + v37);
              if (v38 <= 0xFFFFFFFFFFFFFFF7 && v38 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v39 = *(void *)(*(void *)(a2 + *v7) + v38);
                *(void *)(a2 + v37) = v38 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + v16) = 1;
                uint64_t v39 = 0;
              }
              *(void *)(a1 + 40) = v39;
              goto LABEL_76;
            case 8u:
              *(_WORD *)(a1 + 80) |= 0x100u;
              uint64_t v40 = *v3;
              unint64_t v41 = *(void *)(a2 + v40);
              if (v41 <= 0xFFFFFFFFFFFFFFF7 && v41 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v42 = *(void *)(*(void *)(a2 + *v7) + v41);
                *(void *)(a2 + v40) = v41 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + v16) = 1;
                uint64_t v42 = 0;
              }
              *(void *)(a1 + 56) = v42;
              goto LABEL_76;
            case 9u:
              *(_WORD *)(a1 + 80) |= 1u;
              uint64_t v50 = *v3;
              unint64_t v51 = *(void *)(a2 + v50);
              if (v51 <= 0xFFFFFFFFFFFFFFFBLL && v51 + 4 <= *(void *)(a2 + *v4))
              {
                int v52 = *(_DWORD *)(*(void *)(a2 + *v7) + v51);
                *(void *)(a2 + v50) = v51 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v16) = 1;
                int v52 = 0;
              }
              *(_DWORD *)a1 = v52;
              goto LABEL_76;
            case 0xAu:
              *(_WORD *)(a1 + 80) |= 2u;
              uint64_t v43 = *v3;
              unint64_t v44 = *(void *)(a2 + v43);
              if (v44 <= 0xFFFFFFFFFFFFFFFBLL && v44 + 4 <= *(void *)(a2 + *v4))
              {
                int v45 = *(_DWORD *)(*(void *)(a2 + *v7) + v44);
                *(void *)(a2 + v43) = v44 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v16) = 1;
                int v45 = 0;
              }
              *(_DWORD *)(a1 + 4) = v45;
              goto LABEL_76;
            case 0xBu:
              *(_WORD *)(a1 + 80) |= 4u;
              uint64_t v46 = *v3;
              unint64_t v47 = *(void *)(a2 + v46);
              if (v47 <= 0xFFFFFFFFFFFFFFFBLL && v47 + 4 <= *(void *)(a2 + *v4))
              {
                int v48 = *(_DWORD *)(*(void *)(a2 + *v7) + v47);
                *(void *)(a2 + v46) = v47 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v16) = 1;
                int v48 = 0;
              }
              *(_DWORD *)(a1 + 8) = v48;
              goto LABEL_76;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_76:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t GEOPDCameraPathFrameWriteTo(uint64_t result)
{
  uint64_t v1 = result;
  __int16 v2 = *(_WORD *)(result + 80);
  if ((v2 & 0x10) != 0)
  {
    uint64_t result = PBDataWriterWriteDoubleField();
    __int16 v2 = *(_WORD *)(v1 + 80);
    if ((v2 & 0x20) == 0)
    {
LABEL_3:
      if ((v2 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PBDataWriterWriteDoubleField();
  __int16 v2 = *(_WORD *)(v1 + 80);
  if ((v2 & 8) == 0)
  {
LABEL_4:
    if ((v2 & 0x400) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PBDataWriterWriteDoubleField();
  __int16 v2 = *(_WORD *)(v1 + 80);
  if ((v2 & 0x400) == 0)
  {
LABEL_5:
    if ((v2 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PBDataWriterWriteDoubleField();
  __int16 v2 = *(_WORD *)(v1 + 80);
  if ((v2 & 0x200) == 0)
  {
LABEL_6:
    if ((v2 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PBDataWriterWriteDoubleField();
  __int16 v2 = *(_WORD *)(v1 + 80);
  if ((v2 & 0x80) == 0)
  {
LABEL_7:
    if ((v2 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PBDataWriterWriteDoubleField();
  __int16 v2 = *(_WORD *)(v1 + 80);
  if ((v2 & 0x40) == 0)
  {
LABEL_8:
    if ((v2 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PBDataWriterWriteDoubleField();
  __int16 v2 = *(_WORD *)(v1 + 80);
  if ((v2 & 0x100) == 0)
  {
LABEL_9:
    if ((v2 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PBDataWriterWriteDoubleField();
  __int16 v2 = *(_WORD *)(v1 + 80);
  if ((v2 & 1) == 0)
  {
LABEL_10:
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t result = PBDataWriterWriteFloatField();
    if ((*(_WORD *)(v1 + 80) & 4) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = PBDataWriterWriteFloatField();
  __int16 v2 = *(_WORD *)(v1 + 80);
  if ((v2 & 2) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v2 & 4) == 0) {
    return result;
  }
LABEL_23:

  return PBDataWriterWriteFloatField();
}

BOOL GEOPDCameraPathFrameEquals(const void *a1, const void *a2)
{
  return memcmp(a1, a2, 0x58uLL) == 0;
}

uint64_t GEOPDCameraPathFrameHash()
{
  return PBHashBytes();
}

uint64_t GEOPDCameraPathFrameIsValid(void *a1)
{
  uint64_t v6 = [a1 position];
  uint64_t v7 = [a1 length];
  uint64_t v5 = 0;
  memset(v4, 0, sizeof(v4));
  uint64_t AllFrom = GEOPDCameraPathFrameReadAllFrom((uint64_t)v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

void sub_189FC6CD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDFlyoverReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 96)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFDFFFFFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 2);
        if ((v14 | v8)) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        LODWORD(v16) = v14;
        char v52 = (v7 != 0) | v14;
        char v53 = (v15 == 0) | v14;
        int v17 = (int *)MEMORY[0x1E4F940E8];
        BOOL v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_77;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_77:
      if (v16)
      {
        char v46 = 1;
        goto LABEL_89;
      }
      if (v15)
      {
        while (1)
        {
          int v47 = *v15++;
          char v48 = 2;
          switch(v47)
          {
            case 0:
              goto LABEL_90;
            case 1:
              goto LABEL_84;
            case 3:
              char v48 = 4;
              goto LABEL_84;
            case 4:
              char v48 = 8;
              goto LABEL_84;
            case 5:
              char v48 = 16;
LABEL_84:
              *(unsigned char *)(a1 + 96) |= v48;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_90;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v53 & 1) == 0)
    {
      unint64_t v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31 || (*(unsigned char *)(a1 + 96) & 2) != 0) {
          goto LABEL_70;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_86;
        }
        -[GEOPDFlyover _reserveCameraPaths:](a1, 1uLL);
        if ((GEOPDCameraPathFrameReadAllFrom(*(void *)(a1 + 16) + 88 * *(void *)(a1 + 24), v3) & 1) == 0) {
          goto LABEL_86;
        }
        PBReaderRecallMark();
        uint64_t v36 = 24;
        goto LABEL_57;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_70;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 96) |= 1u;
        while (2)
        {
          uint64_t v41 = *v17;
          uint64_t v42 = *(void *)(v3 + v41);
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(v3 + *v19) + v42);
            *(void *)(v3 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              BOOL v27 = v39++ >= 9;
              if (v27)
              {
                uint64_t v40 = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v40 = 0;
        }
LABEL_76:
        *(unsigned char *)(a1 + 92) = v40 != 0;
        goto LABEL_71;
      case 3:
        if (!v31 || (*(unsigned char *)(a1 + 96) & 4) != 0) {
          goto LABEL_70;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_86;
        }
        -[GEOPDFlyover _reserveLabelFrames:](a1, 1uLL);
        if ((GEOPDLabelFrameReadAllFrom(*(void *)(a1 + 40) + 16 * *(void *)(a1 + 48), v3) & 1) == 0) {
          goto LABEL_86;
        }
        PBReaderRecallMark();
        uint64_t v36 = 48;
LABEL_57:
        ++*(void *)(a1 + v36);
        goto LABEL_69;
      case 4:
        if (!v31 || (*(unsigned char *)(a1 + 96) & 8) != 0) {
          goto LABEL_70;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        int v51 = (int)v16;
        uint64_t v16 = objc_alloc_init(GEOPDLabelLocalizations);
        if (!GEOPDLabelLocalizationsReadAllFrom(v16, (void *)v3, v9 & 1)) {
          goto LABEL_87;
        }
        PBReaderRecallMark();
        -[GEOPDFlyover _addNoFlagsLabel:](a1, v16);
        goto LABEL_68;
      case 5:
        if (!v31 || (*(unsigned char *)(a1 + 96) & 0x10) != 0)
        {
LABEL_70:
          char v45 = PBReaderSkipValueWithTag();
          BOOL v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v45 & 1) == 0)
          {
LABEL_85:
            char v46 = 0;
            goto LABEL_89;
          }
          goto LABEL_71;
        }
        if (PBReaderPlaceMark())
        {
          int v51 = (int)v16;
          uint64_t v16 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          {
LABEL_87:

            char v46 = 0;
            LOBYTE(v16) = v51;
            goto LABEL_88;
          }
          PBReaderRecallMark();
          -[GEOPDFlyover _addNoFlagsNotificationMessage:](a1, v16);
LABEL_68:

          LODWORD(v16) = v51;
LABEL_69:
          BOOL v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_71:
          if ((v52 & 1) == 0) {
            goto LABEL_77;
          }
          continue;
        }
LABEL_86:
        char v46 = 0;
LABEL_88:
        BOOL v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_89:
        *(unsigned char *)(a1 + 96) |= 2u;
        *(unsigned char *)(a1 + 96) |= 4u;
        *(unsigned char *)(a1 + 96) |= 8u;
        *(unsigned char *)(a1 + 96) |= 0x10u;
        if (v46)
        {
LABEL_90:
          uint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_91;
          }
        }
        else
        {
          uint64_t v3 = 0;
          if (v16)
          {
LABEL_91:
            uint64_t v49 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v37 = PBReaderSkipValueWithTag();
        BOOL v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v37) {
          goto LABEL_85;
        }
        goto LABEL_71;
    }
  }
}

void sub_189FC7944(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FC7E14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FC81D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOPDLabelFrameJSONRepresentation(uint64_t a1)
{
  return _GEOPDLabelFrameDictionaryRepresentation(a1, 1);
}

id GEOPDLabelFrameDictionaryRepresentation(uint64_t a1)
{
  return _GEOPDLabelFrameDictionaryRepresentation(a1, 0);
}

void GEOPDLabelFrameFromJSONRepresentation(void *a1, uint64_t a2)
{
}

void GEOPDLabelFrameFromDictionaryRepresentation(void *a1, uint64_t a2)
{
}

void sub_189FC9084(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDFlyoverCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 64);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 72);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

uint64_t GEOPDFlyoverReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDFlyoverReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDFlyoverReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDFlyoverReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOPDFlyoverReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDFlyoverCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_189FC93B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDFlyoverReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOPDFlyoverReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FC9414(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDFlyoverIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDCameraPathFrameIsValid(a1)) {
            goto LABEL_44;
          }
          goto LABEL_49;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_49;
          }
          unsigned int v17 = 0;
          break;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDLabelFrameIsValid(a1)) {
            goto LABEL_49;
          }
          goto LABEL_44;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDLabelLocalizationsIsValid(a1)) {
            goto LABEL_49;
          }
          goto LABEL_44;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1)) {
            goto LABEL_49;
          }
LABEL_44:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_49:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_45;
      }
      a1[*v4] = 1;
LABEL_45:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

uint64_t GEOPDLabelFrameIsValid(void *a1)
{
  _OWORD v4[2] = [a1 position];
  v4[3] = [a1 length];
  v4[0] = 0;
  v4[1] = 0;
  uint64_t AllFrom = GEOPDLabelFrameReadAllFrom((uint64_t)v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

BOOL GEOPDLabelLocalizationsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_189FC9CB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDFlyoverIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  if ((*(unsigned char *)(a1 + 96) & 0x3E) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 96) & 0x10) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 72);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOLocalizedStringIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

uint64_t GEOPDLabelFrameWriteTo(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 12);
  if ((v2 & 2) == 0)
  {
    if ((*(unsigned char *)(result + 12) & 4) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PBDataWriterWriteFloatField();
    if ((*(unsigned char *)(v1 + 12) & 1) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PBDataWriterWriteUint32Field();
  char v2 = *(unsigned char *)(v1 + 12);
  if ((v2 & 4) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v2 & 1) == 0) {
    return result;
  }
LABEL_7:

  return PBDataWriterWriteFloatField();
}

os_unfair_lock_s *GEOPDFlyoverIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDFlyoverIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189FCA470(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOPDLabelFrameDescription(uint64_t a1)
{
  char v2 = NSString;
  id v3 = _GEOPDLabelFrameDictionaryRepresentation(a1, 0);
  uint64_t v4 = [v2 stringWithFormat:@"GEOPDLabelFrame<%p> %@", a1, v3];

  return v4;
}

id _GEOPDLabelFrameDictionaryRepresentation(uint64_t a1, int a2)
{
  uint64_t v4 = [MEMORY[0x1E4F1CA60] dictionary];
  char v6 = *(unsigned char *)(a1 + 12);
  if ((v6 & 1) == 0)
  {
    if ((*(unsigned char *)(a1 + 12) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_15:
    uint64_t v12 = [NSNumber numberWithUnsignedInt:*(unsigned int *)(a1 + 4)];
    if (a2) {
      long long v13 = @"labelIndex";
    }
    else {
      long long v13 = @"label_index";
    }
    [v4 setObject:v12 forKey:v13];

    if ((*(unsigned char *)(a1 + 12) & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_4;
  }
  LODWORD(v5) = *(_DWORD *)a1;
  long long v10 = [NSNumber numberWithFloat:v5];
  if (a2) {
    unint64_t v11 = @"endFraction";
  }
  else {
    unint64_t v11 = @"end_fraction";
  }
  [v4 setObject:v10 forKey:v11];

  char v6 = *(unsigned char *)(a1 + 12);
  if ((v6 & 2) != 0) {
    goto LABEL_15;
  }
LABEL_3:
  if ((v6 & 4) != 0)
  {
LABEL_4:
    LODWORD(v5) = *(_DWORD *)(a1 + 8);
    long long v7 = [NSNumber numberWithFloat:v5];
    if (a2) {
      long long v8 = @"startFraction";
    }
    else {
      long long v8 = @"start_fraction";
    }
    [v4 setObject:v7 forKey:v8];
  }
LABEL_8:

  return v4;
}

void _GEOPDLabelFrameFromDictionaryRepresentation(void *a1, uint64_t a2, int a3)
{
  id v5 = a1;
  if (a3) {
    char v6 = @"labelIndex";
  }
  else {
    char v6 = @"label_index";
  }
  id v14 = v5;
  long long v7 = [v5 objectForKeyedSubscript:v6];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 12) |= 2u;
    *(_DWORD *)(a2 + 4) = [v7 unsignedIntValue];
  }

  if (a3) {
    long long v8 = @"startFraction";
  }
  else {
    long long v8 = @"start_fraction";
  }
  long long v9 = [v14 objectForKeyedSubscript:v8];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 12) |= 4u;
    [v9 floatValue];
    *(_DWORD *)(a2 + 8) = v10;
  }

  if (a3) {
    unint64_t v11 = @"endFraction";
  }
  else {
    unint64_t v11 = @"end_fraction";
  }
  uint64_t v12 = [v14 objectForKeyedSubscript:v11];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 12) |= 1u;
    [v12 floatValue];
    *(_DWORD *)a2 = v13;
  }
}

uint64_t GEOPDLabelFrameReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOPDLabelFrameReadAllFrom(a1, a2);
}

uint64_t GEOPDLabelFrameReadAllFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v19 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        uint64_t v27 = *v3;
        unint64_t v28 = *(void *)(a2 + v27);
        if (v28 <= 0xFFFFFFFFFFFFFFFBLL && v28 + 4 <= *(void *)(a2 + *v4))
        {
          int v29 = *(_DWORD *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          int v29 = 0;
        }
        *(_DWORD *)a1 = v29;
      }
      else if (v19 == 2)
      {
        *(unsigned char *)(a1 + 12) |= 4u;
        uint64_t v30 = *v3;
        unint64_t v31 = *(void *)(a2 + v30);
        if (v31 <= 0xFFFFFFFFFFFFFFFBLL && v31 + 4 <= *(void *)(a2 + *v4))
        {
          int v32 = *(_DWORD *)(*(void *)(a2 + *v7) + v31);
          *(void *)(a2 + v30) = v31 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          int v32 = 0;
        }
        *(_DWORD *)(a1 + 8) = v32;
      }
      else if (v19 == 1)
      {
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 12) |= 2u;
        while (1)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
          *(void *)(a2 + v23) = v25;
          v22 |= (unint64_t)(v26 & 0x7F) << v20;
          if ((v26 & 0x80) == 0) {
            goto LABEL_37;
          }
          v20 += 7;
          BOOL v15 = v21++ >= 9;
          if (v15)
          {
            LODWORD(v22) = 0;
            goto LABEL_39;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_39:
        *(_DWORD *)(a1 + 4) = v22;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL GEOPDLabelFrameEquals(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t GEOPDLabelFrameHash()
{
  return PBHashBytes();
}

BOOL GEOPDLabelLocalizationsReadAllFrom(void *a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          char v20 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addLocalizedString:", v20, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v21 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v21 = 0;
  }
  objc_sync_exit(v5);

  return v21;
}

void sub_189FCB6AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLabelLocalizationsReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDLabelLocalizationsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FCB710(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPolylineCoordinateIsValid(uint64_t a1)
{
  return *((float *)&a1 + 1) >= 0.0;
}

BOOL GEOPolylineCoordinateIsInvalid(uint64_t a1)
{
  return *((float *)&a1 + 1) < 0.0;
}

BOOL GEOPolylineCoordinateRangeIsValid(uint64_t a1, uint64_t a2)
{
  if (*((float *)&a1 + 1) < 0.0 || *((float *)&a2 + 1) < 0.0) {
    return 0;
  }
  BOOL v3 = *((float *)&a1 + 1) == *((float *)&a2 + 1) || *((float *)&a1 + 1) < *((float *)&a2 + 1);
  if (a1 == a2) {
    return v3;
  }
  else {
    return a1 < a2;
  }
}

BOOL GEOPolylineCoordinateIsABeforeOrEqualToB(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *((float *)&a1 + 1) == *((float *)&a2 + 1) || *((float *)&a1 + 1) < *((float *)&a2 + 1);
  if (a1 == a2) {
    return v2;
  }
  else {
    return a1 < a2;
  }
}

BOOL GEOPolylineCoordinateRangeIsInvalid(uint64_t a1, uint64_t a2)
{
  if (*((float *)&a1 + 1) >= 0.0 && *((float *)&a2 + 1) >= 0.0)
  {
    BOOL v2 = a1 < a2;
    BOOL v3 = *((float *)&a1 + 1) == *((float *)&a2 + 1) || *((float *)&a1 + 1) < *((float *)&a2 + 1);
    if (a1 == a2) {
      BOOL v2 = v3;
    }
  }
  else
  {
    BOOL v2 = 0;
  }
  return !v2;
}

BOOL GEOPolylineCoordinateIsZero(uint64_t a1)
{
  return fabsf((float)a1 + *((float *)&a1 + 1)) < 0.001;
}

BOOL GEOPolylineCoordinateEqual(uint64_t a1, uint64_t a2)
{
  return vabds_f32((float)a1 + *((float *)&a1 + 1), (float)a2 + *((float *)&a2 + 1)) < 0.001;
}

BOOL GEOPolylineCoordinateEqualEps(uint64_t a1, uint64_t a2, double a3)
{
  return vabds_f32((float)a1 + *((float *)&a1 + 1), (float)a2 + *((float *)&a2 + 1)) < a3;
}

BOOL GEOPolylineCoordinateRangeEqual(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return vabds_f32((float)a1 + *((float *)&a1 + 1), (float)a3 + *((float *)&a3 + 1)) < 0.001
      && vabds_f32((float)a2 + *((float *)&a2 + 1), (float)a4 + *((float *)&a4 + 1)) < 0.001;
}

BOOL GEOPolylineCoordinateRangeEqualEps(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  return vabds_f32((float)a1 + *((float *)&a1 + 1), (float)a3 + *((float *)&a3 + 1)) < a5
      && vabds_f32((float)a2 + *((float *)&a2 + 1), (float)a4 + *((float *)&a4 + 1)) < a5;
}

uint64_t GEOPolylineCoordinateCompare(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = -1;
  if (a1 < a2) {
    uint64_t v3 = -1;
  }
  else {
    uint64_t v3 = 1;
  }
  if (*((float *)&a1 + 1) >= *((float *)&a2 + 1)) {
    uint64_t v2 = 1;
  }
  if (*((float *)&a1 + 1) == *((float *)&a2 + 1)) {
    uint64_t v2 = 0;
  }
  if (a1 == a2) {
    return v2;
  }
  else {
    return v3;
  }
}

BOOL GEOPolylineCoordinateWithinRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == a1)
  {
    if (*((float *)&a2 + 1) > *((float *)&a1 + 1)) {
      return 0;
    }
  }
  else if (a2 >= a1)
  {
    return 0;
  }
  BOOL v4 = *((float *)&a1 + 1) == *((float *)&a3 + 1) || *((float *)&a1 + 1) < *((float *)&a3 + 1);
  if (a1 == a3) {
    return v4;
  }
  else {
    return a1 < a3;
  }
}

BOOL GEOPolylineCoordinateIsABeforeB(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *((float *)&a1 + 1) < *((float *)&a2 + 1);
  if (*((float *)&a1 + 1) == *((float *)&a2 + 1)) {
    BOOL v2 = 0;
  }
  if (a1 == a2) {
    return v2;
  }
  else {
    return a1 < a2;
  }
}

BOOL GEOPolylineCoordinateInRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == a1)
  {
    if (*((float *)&a2 + 1) > *((float *)&a1 + 1)) {
      return 0;
    }
  }
  else if (a2 >= a1)
  {
    return 0;
  }
  BOOL v4 = *((float *)&a1 + 1) == *((float *)&a3 + 1) || *((float *)&a1 + 1) < *((float *)&a3 + 1);
  if (a1 == a3) {
    return v4;
  }
  else {
    return a1 < a3;
  }
}

BOOL GEOPolylineCoordinateRangeIntersectsRange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == a3)
  {
    if (*((float *)&a2 + 1) <= *((float *)&a3 + 1)) {
      return 0;
    }
  }
  else if (a2 < a3)
  {
    return 0;
  }
  BOOL v5 = a4 < a1;
  BOOL v6 = *((float *)&a4 + 1) == *((float *)&a1 + 1) || *((float *)&a4 + 1) < *((float *)&a1 + 1);
  if (a4 == a1) {
    BOOL v5 = v6;
  }
  return !v5;
}

BOOL GEOPolylineCoordinateRangeEncompassesRange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3)
  {
    if (*((float *)&a1 + 1) > *((float *)&a3 + 1)) {
      return 0;
    }
  }
  else if (a1 >= a3)
  {
    return 0;
  }
  BOOL v5 = *((float *)&a4 + 1) == *((float *)&a2 + 1) || *((float *)&a4 + 1) < *((float *)&a2 + 1);
  if (a4 == a2) {
    return v5;
  }
  else {
    return a4 < a2;
  }
}

uint64_t GEOPolylineCoordinateNearestIndex(uint64_t a1)
{
  unint64_t v1 = vcvtas_u32_f32((float)a1 + *((float *)&a1 + 1));
  if (*((float *)&a1 + 1) >= 0.0) {
    return v1;
  }
  else {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
}

id GEOPolylineCoordinateAsString(uint64_t a1, char a2, char a3, double a4)
{
  LODWORD(a4) = HIDWORD(a1);
  if (a2)
  {
    if ((a3 & 1) != 0 || fabsf(*((float *)&a1 + 1)) >= 0.01) {
      objc_msgSend(NSString, "stringWithFormat:", @"%0.2f", (float)((float)a1 + *((float *)&a1 + 1)), (float)((float)a1 + *((float *)&a1 + 1)), v6);
    }
    else {
      objc_msgSend(NSString, "stringWithFormat:", @"%u", a4, a1, v6);
    }
  }
  else
  {
    [NSString stringWithFormat:@"%u, %0.2f", *((float *)&a1 + 1), a1, *((float *)&a1 + 1)];
  BOOL v4 = };

  return v4;
}

uint64_t GEOPolylineCoordinateAsFullString(uint64_t a1)
{
  return [NSString stringWithFormat:@"%u, %0.2f", a1, *((float *)&a1 + 1)];
}

id GEOPolylineCoordinateAsShortString(uint64_t a1, double a2)
{
  return GEOPolylineCoordinateAsString(a1, 1, 0, a2);
}

id GEOPolylineCoordinateRangeAsString(uint64_t a1, uint64_t a2, double a3)
{
  BOOL v4 = NSString;
  BOOL v5 = GEOPolylineCoordinateAsString(a1, 1, 0, a3);
  long long v7 = GEOPolylineCoordinateAsString(a2, 1, 0, v6);
  char v8 = [v4 stringWithFormat:@"%@ - %@", v5, v7];

  return v8;
}

BOOL GEOServicesStateReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    BOOL v5 = (int *)MEMORY[0x1E4F940E0];
    double v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v17 = PBReaderReadString();
          int v18 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v17;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    BOOL v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_189FCE620(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOServicesStateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOServicesStateReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FCE684(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOServicesStateIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v16 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v16;
}

BOOL GEOListResultItemReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    BOOL v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v17 = 0;
            unsigned int v18 = 0;
            uint64_t v19 = 0;
            *(unsigned char *)(a1 + 36) |= 4u;
            while (1)
            {
              uint64_t v20 = *v4;
              unint64_t v21 = *(void *)&v3[v20];
              if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
                break;
              }
              char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
              *(void *)&v3[v20] = v21 + 1;
              v19 |= (unint64_t)(v22 & 0x7F) << v17;
              if ((v22 & 0x80) == 0) {
                goto LABEL_65;
              }
              v17 += 7;
              BOOL v14 = v18++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_67;
              }
            }
            v3[*v6] = 1;
LABEL_65:
            if (v3[*v6]) {
              LODWORD(v19) = 0;
            }
LABEL_67:
            uint64_t v51 = 24;
            goto LABEL_85;
          case 2u:
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            *(unsigned char *)(a1 + 36) |= 0x20u;
            while (2)
            {
              uint64_t v26 = *v4;
              unint64_t v27 = *(void *)&v3[v26];
              if (v27 == -1 || v27 >= *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v28 = *(unsigned char *)(*(void *)&v3[*v7] + v27);
                *(void *)&v3[v26] = v27 + 1;
                v25 |= (unint64_t)(v28 & 0x7F) << v23;
                if (v28 < 0)
                {
                  v23 += 7;
                  BOOL v14 = v24++ >= 9;
                  if (v14)
                  {
                    uint64_t v25 = 0;
                    goto LABEL_71;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v25 = 0;
            }
LABEL_71:
            BOOL v52 = v25 != 0;
            uint64_t v53 = 33;
            goto LABEL_76;
          case 3u:
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v31 = 0;
            *(unsigned char *)(a1 + 36) |= 0x10u;
            while (2)
            {
              uint64_t v32 = *v4;
              unint64_t v33 = *(void *)&v3[v32];
              if (v33 == -1 || v33 >= *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v33);
                *(void *)&v3[v32] = v33 + 1;
                v31 |= (unint64_t)(v34 & 0x7F) << v29;
                if (v34 < 0)
                {
                  v29 += 7;
                  BOOL v14 = v30++ >= 9;
                  if (v14)
                  {
                    uint64_t v31 = 0;
                    goto LABEL_75;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v31 = 0;
            }
LABEL_75:
            BOOL v52 = v31 != 0;
            uint64_t v53 = 32;
LABEL_76:
            *(unsigned char *)(a1 + v53) = v52;
            continue;
          case 4u:
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v37 = 0;
            *(unsigned char *)(a1 + 36) |= 2u;
            while (2)
            {
              uint64_t v38 = *v4;
              unint64_t v39 = *(void *)&v3[v38];
              if (v39 == -1 || v39 >= *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v40 = *(unsigned char *)(*(void *)&v3[*v7] + v39);
                *(void *)&v3[v38] = v39 + 1;
                v37 |= (unint64_t)(v40 & 0x7F) << v35;
                if (v40 < 0)
                {
                  v35 += 7;
                  BOOL v14 = v36++ >= 9;
                  if (v14)
                  {
                    uint64_t v37 = 0;
                    goto LABEL_80;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v37 = 0;
            }
LABEL_80:
            uint64_t v54 = 16;
            goto LABEL_90;
          case 5u:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v19 = 0;
            *(unsigned char *)(a1 + 36) |= 8u;
            while (2)
            {
              uint64_t v43 = *v4;
              unint64_t v44 = *(void *)&v3[v43];
              if (v44 == -1 || v44 >= *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v45 = *(unsigned char *)(*(void *)&v3[*v7] + v44);
                *(void *)&v3[v43] = v44 + 1;
                v19 |= (unint64_t)(v45 & 0x7F) << v41;
                if (v45 < 0)
                {
                  v41 += 7;
                  BOOL v14 = v42++ >= 9;
                  if (v14)
                  {
                    LODWORD(v19) = 0;
                    goto LABEL_84;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v19) = 0;
            }
LABEL_84:
            uint64_t v51 = 28;
LABEL_85:
            *(_DWORD *)(a1 + v51) = v19;
            continue;
          case 6u:
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v37 = 0;
            *(unsigned char *)(a1 + 36) |= 1u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_93;
            }
            continue;
        }
        while (1)
        {
          uint64_t v48 = *v4;
          unint64_t v49 = *(void *)&v3[v48];
          if (v49 == -1 || v49 >= *(void *)&v3[*v5]) {
            break;
          }
          char v50 = *(unsigned char *)(*(void *)&v3[*v7] + v49);
          *(void *)&v3[v48] = v49 + 1;
          v37 |= (unint64_t)(v50 & 0x7F) << v46;
          if ((v50 & 0x80) == 0) {
            goto LABEL_87;
          }
          v46 += 7;
          BOOL v14 = v47++ >= 9;
          if (v14)
          {
            uint64_t v37 = 0;
            goto LABEL_89;
          }
        }
        v3[*v6] = 1;
LABEL_87:
        if (v3[*v6]) {
          uint64_t v37 = 0;
        }
LABEL_89:
        uint64_t v54 = 8;
LABEL_90:
        *(void *)(a1 + v54) = v37;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v55 = v3[*v6] == 0;
  }
  else
  {
LABEL_93:
    BOOL v55 = 0;
  }
  objc_sync_exit(v3);

  return v55;
}

void sub_189FD1308(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOListResultItemReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOListResultItemReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FD1384(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOListResultItemIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v13 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v15 = 0;
          while (1)
          {
            uint64_t v16 = *v2;
            unint64_t v17 = *(void *)&a1[v16];
            if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            unint64_t v18 = v17 + 1;
            int v19 = *(char *)(*(void *)&a1[*v5] + v17);
            *(void *)&a1[v16] = v18;
            if (v19 < 0)
            {
              BOOL v20 = v15++ > 8;
              if (!v20) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            unint64_t v23 = *(void *)&a1[v22];
            if (v23 == -1 || v23 >= *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            unint64_t v24 = v23 + 1;
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v20 = v21++ > 8;
              if (!v20) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v26 = 0;
          while (1)
          {
            uint64_t v27 = *v2;
            unint64_t v28 = *(void *)&a1[v27];
            if (v28 == -1 || v28 >= *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            unint64_t v29 = v28 + 1;
            int v30 = *(char *)(*(void *)&a1[*v5] + v28);
            *(void *)&a1[v27] = v29;
            if (v30 < 0)
            {
              BOOL v20 = v26++ > 8;
              if (!v20) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v31 = 0;
          while (1)
          {
            uint64_t v32 = *v2;
            unint64_t v33 = *(void *)&a1[v32];
            if (v33 == -1 || v33 >= *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            unint64_t v34 = v33 + 1;
            int v35 = *(char *)(*(void *)&a1[*v5] + v33);
            *(void *)&a1[v32] = v34;
            if (v35 < 0)
            {
              BOOL v20 = v31++ > 8;
              if (!v20) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v36 = 0;
          while (1)
          {
            uint64_t v37 = *v2;
            unint64_t v38 = *(void *)&a1[v37];
            if (v38 == -1 || v38 >= *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            unint64_t v39 = v38 + 1;
            int v40 = *(char *)(*(void *)&a1[*v5] + v38);
            *(void *)&a1[v37] = v39;
            if (v40 < 0)
            {
              BOOL v20 = v36++ > 8;
              if (!v20) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v41 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_73:
          BOOL v46 = 0;
          goto LABEL_72;
      }
      while (1)
      {
        uint64_t v42 = *v2;
        unint64_t v43 = *(void *)&a1[v42];
        if (v43 == -1 || v43 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v44 = v43 + 1;
        int v45 = *(char *)(*(void *)&a1[*v5] + v43);
        *(void *)&a1[v42] = v44;
        if (v45 < 0)
        {
          BOOL v20 = v41++ > 8;
          if (!v20) {
            continue;
          }
        }
        goto LABEL_70;
      }
LABEL_69:
      a1[*v4] = 1;
LABEL_70:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v46 = a1[*v4] == 0;
LABEL_72:
  PBReaderRecallMark();
  return v46;
}

void sub_189FD230C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventListInteractionSessionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v7 & 1) {
    BOOL v14 = 0;
  }
  else {
    BOOL v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  BOOL v52 = v15;
  uint64_t v16 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v17 = (int *)MEMORY[0x1E4F940C8];
  unint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  int v19 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_74;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v16;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v20 += 7;
      BOOL v26 = v21++ >= 9;
      if (v26)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v22 = 0;
    }
LABEL_29:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_74:
      if (v13)
      {
        char v47 = 1;
        goto LABEL_88;
      }
      if (!v14) {
        goto LABEL_89;
      }
      while (1)
      {
        while (1)
        {
          int v49 = *v14++;
          int v48 = v49;
          if (v49 != 2) {
            break;
          }
LABEL_79:
          *(unsigned char *)(a1 + v19[409]) |= v48;
        }
        if (v48 == 3)
        {
          LOBYTE(v48) = 4;
          goto LABEL_79;
        }
        if (!v48) {
          goto LABEL_89;
        }
      }
    }
    unint64_t v29 = v22 >> 3;
    BOOL v30 = v13;
    if (!v52)
    {
      unsigned int v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 == 3)
    {
      if (!v30) {
        goto LABEL_61;
      }
      if ((*(unsigned char *)(a1 + v19[409]) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_85:
          char v47 = 0;
          goto LABEL_87;
        }
        v8 += *(unsigned __int8 *)(a1 + v19[409]) << 29 >> 31;
      }
      else
      {
        uint64_t v41 = PBReaderReadString();
        uint64_t v42 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v41;

        --v8;
      }
LABEL_69:
      unint64_t v17 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_70;
    }
    if (v29 != 2)
    {
      if (v29 != 1)
      {
        int v44 = PBReaderSkipValueWithTag();
        unint64_t v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v44) {
          goto LABEL_84;
        }
LABEL_70:
        if (v8) {
          char v46 = 1;
        }
        else {
          char v46 = v13;
        }
        if ((v46 & 1) == 0) {
          goto LABEL_74;
        }
        continue;
      }
      if (v7)
      {
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        *(unsigned char *)(a1 + v19[409]) |= 1u;
        while (1)
        {
          uint64_t v38 = *v16;
          unint64_t v39 = *(void *)(v3 + v38);
          if (v39 == -1 || v39 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v40 = *(unsigned char *)(*(void *)(v3 + *v18) + v39);
          *(void *)(v3 + v38) = v39 + 1;
          v37 |= (unint64_t)(v40 & 0x7F) << v35;
          if ((v40 & 0x80) == 0) {
            goto LABEL_64;
          }
          v35 += 7;
          BOOL v26 = v36++ >= 9;
          if (v26)
          {
            LODWORD(v37) = 0;
            goto LABEL_66;
          }
        }
        *(unsigned char *)(v3 + *v17) = 1;
LABEL_64:
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v37) = 0;
        }
LABEL_66:
        *(_DWORD *)(a1 + 44) = v37;
        goto LABEL_70;
      }
LABEL_61:
      char v45 = PBReaderSkipValueWithTag();
      unint64_t v17 = (int *)MEMORY[0x1E4F940C8];
      if ((v45 & 1) == 0)
      {
LABEL_84:
        char v47 = 0;
        goto LABEL_88;
      }
      goto LABEL_70;
    }
    break;
  }
  if (!v30 || (*(unsigned char *)(a1 + v19[409]) & 2) != 0) {
    goto LABEL_61;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_85;
  }
  unint64_t v43 = objc_alloc_init(GEOListResultItem);
  if (GEOListResultItemReadAllFrom((uint64_t)v43, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOLogMsgEventListInteractionSession _addNoFlagsListResultItem:](a1, v43);

    int v19 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
    goto LABEL_69;
  }

  char v47 = 0;
  int v19 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
LABEL_87:
  unint64_t v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_88:
  *(unsigned char *)(a1 + v19[409]) |= 2u;
  *(unsigned char *)(a1 + v19[409]) |= 4u;
  if (v47)
  {
LABEL_89:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if (v13) {
      goto LABEL_90;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v13)
    {
LABEL_90:
      char v50 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_189FD2BA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FD3478(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgEventListInteractionSessionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 16);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOLogMsgEventListInteractionSessionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventListInteractionSessionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOLogMsgEventListInteractionSessionReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOLogMsgEventListInteractionSessionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventListInteractionSessionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgEventListInteractionSessionCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189FD3708(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventListInteractionSessionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventListInteractionSessionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FD376C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventListInteractionSessionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_39;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 != 2)
      {
        if (v16 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_41;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            unint64_t v19 = *(void *)&a1[v18];
            if (v19 == -1 || v19 >= *(void *)&a1[*v3]) {
              break;
            }
            unint64_t v20 = v19 + 1;
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0 && v17++ <= 8) {
              continue;
            }
            goto LABEL_38;
          }
          a1[*v4] = 1;
          goto LABEL_38;
        }
        goto LABEL_35;
      }
      if (v14 != 2 || !PBReaderPlaceMark() || !GEOListResultItemIsValid(a1))
      {
LABEL_41:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if (v14 != 2) {
      goto LABEL_41;
    }
LABEL_35:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_41;
    }
    goto LABEL_38;
  }
LABEL_39:
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_189FD3C14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventListInteractionSessionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 48) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189FD4044(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

_GEOSingleTileSetMapRegionTileKeyEnumerator *GEOTileKeyEnumeratorForRegion(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = a1;
  unsigned int v7 = [[_GEOSingleTileSetMapRegionTileKeyEnumerator alloc] initWithMapRegion:v6 tileSet:v5 zoomMode:a3];

  return v7;
}

_GEOMultiTileKeyEnumerator *GEOTileKeyEnumeratorContainingEnumerators(void *a1)
{
  id v1 = a1;
  BOOL v2 = [[_GEOMultiTileKeyEnumerator alloc] initWithEnumerators:v1];

  return v2;
}

void sub_189FD4670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189FD4BB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189FD518C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189FD558C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_189FD5E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
}

void sub_189FD6298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
}

void sub_189FD6B84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
}

void sub_189FD6C8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189FD74AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, uint64_t a17, void *a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_189FD7F8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_189FD8310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);

  _Unwind_Resume(a1);
}

void sub_189FD853C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189FD8964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_189FD8BEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);
  _Block_object_dispose((const void *)(v21 - 112), 8);

  _Unwind_Resume(a1);
}

void sub_189FD8E58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location, char a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a20, 8);
  _Block_object_dispose(&a24, 8);
  _Unwind_Resume(a1);
}

void sub_189FD912C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189FD9668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_189FD9A6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189FD9C30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_189FD9FB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL25GEOGetGEOComposedRouteLogv_block_invoke_2()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOComposedRoute");
  id v1 = (void *)_MergedGlobals_310;
  _MergedGlobals_310 = (uint64_t)v0;
}

void sub_189FDAB28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOABAssignmentRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        uint64_t v12 = v6;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v12 = v6;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v15 = v11 != 0;
        char v16 = v15 & ~(_BYTE)v10 | v7;
        unsigned __int8 v17 = v15 | v10;
        char v61 = v16;
        char v62 = v17 | v16;
        if ((v17 | v8)) {
          uint64_t v18 = 0;
        }
        else {
          uint64_t v18 = a3;
        }
        char v63 = (v18 == 0) | v17;
        BOOL v64 = v17;
        uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940B8];
        unint64_t v22 = (int *)MEMORY[0x1E4F940E0];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v6;
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
LABEL_10:
        ++v9;
        uint64_t v6 = v12;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v22) || *(unsigned char *)(v3 + *v20)) {
      goto LABEL_77;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v19;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v22)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v21) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_77:
      int v59 = 1;
      goto LABEL_78;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v64;
    if ((v63 & 1) == 0)
    {
      char v35 = v18;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3) {
      break;
    }
    if (v33 == 2)
    {
      if ((v8 & 1) == 0) {
        goto LABEL_64;
      }
      char v42 = 0;
      unsigned int v43 = 0;
      uint64_t v44 = 0;
      *(unsigned char *)(a1 + 56) |= 1u;
      while (1)
      {
        uint64_t v45 = *v19;
        uint64_t v46 = *(void *)(v3 + v45);
        unint64_t v47 = v46 + 1;
        if (v46 == -1 || v47 > *(void *)(v3 + *v22)) {
          break;
        }
        char v48 = *(unsigned char *)(*(void *)(v3 + *v21) + v46);
        *(void *)(v3 + v45) = v47;
        v44 |= (unint64_t)(v48 & 0x7F) << v42;
        if ((v48 & 0x80) == 0) {
          goto LABEL_67;
        }
        v42 += 7;
        BOOL v30 = v43++ >= 9;
        if (v30)
        {
          LODWORD(v44) = 0;
          goto LABEL_69;
        }
      }
      *(unsigned char *)(v3 + *v20) = 1;
LABEL_67:
      if (*(unsigned char *)(v3 + *v20)) {
        LODWORD(v44) = 0;
      }
LABEL_69:
      *(_DWORD *)(a1 + 52) = v44;
    }
    else
    {
      if (v33 == 1)
      {
        if (!v34) {
          goto LABEL_64;
        }
        if ((*(unsigned char *)(a1 + 56) & 8) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          char v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v39;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_97;
        }
        char v53 = 16 * *(unsigned char *)(a1 + 56);
LABEL_74:
        v9 += v53 >> 7;
LABEL_75:
        unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v22 = (int *)MEMORY[0x1E4F940E0];
        goto LABEL_76;
      }
      if ((v61 & 1) == 0 || (*(unsigned char *)(a1 + 56) & 2) != 0)
      {
LABEL_64:
        char v52 = PBReaderSkipValueWithTag();
        unint64_t v22 = (int *)MEMORY[0x1E4F940E0];
        unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        if ((v52 & 1) == 0)
        {
          int v59 = 0;
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v51 = PBUnknownFieldAdd();
      unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
      unint64_t v22 = (int *)MEMORY[0x1E4F940E0];
      if (!v51)
      {
        int v59 = 0;
        char v60 = &OBJC_IVAR___GEOLocalizedBytes__unknownFields;
        goto LABEL_79;
      }
    }
LABEL_76:
    if (!(v62 & 1 | (v9 != 0))) {
      goto LABEL_77;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_97;
    }
    char v53 = 32 * *(unsigned char *)(a1 + 56);
    goto LABEL_74;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_97;
  }
  uint64_t v41 = objc_alloc_init(GEOPDClientMetadata);
  if (GEOPDClientMetadataReadAllFrom((uint64_t)v41, (void *)v3, v6 & 1))
  {
    PBReaderRecallMark();
    char v40 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v41;
LABEL_49:

    --v9;
    goto LABEL_75;
  }

LABEL_97:
  int v59 = 0;
  unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_78:
  char v60 = &OBJC_IVAR___GEOLocalizedBytes__unknownFields;
  if ((v61 & 1) == 0) {
    goto LABEL_80;
  }
LABEL_79:
  *(unsigned char *)(a1 + v60[169]) |= 2u;
LABEL_80:
  if (v64 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[169]) |= 8u;
    *(unsigned char *)(a1 + v60[169]) |= 4u;
    goto LABEL_90;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v18++;
        int v54 = v55;
        if (v55 == 1) {
          break;
        }
        if (v54 == 3)
        {
          char v56 = 4;
          goto LABEL_89;
        }
        if (!v54) {
          goto LABEL_90;
        }
      }
      char v56 = 8;
LABEL_89:
      *(unsigned char *)(a1 + v60[169]) |= v56;
      continue;
    }
  }
LABEL_90:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v64)
  {
    uint64_t v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189FDB464(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FDBBCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOABAssignmentRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOABAssignmentRequestReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOABAssignmentRequestReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOABAssignmentRequestReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOABAssignmentRequestReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189FDBD74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOABAssignmentRequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOABAssignmentRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FDBDD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOABAssignmentRequestIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDClientMetadataIsValid(a1)) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
      }
      else if (v17 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_38;
        }
        a1[*v4] = 1;
      }
      else if (v17 == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        PBReaderRecallMark();
        return 0;
      }
LABEL_38:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

void sub_189FDC1E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOABAssignmentRequestIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 56) & 0x18) != 0) {
    return (os_unfair_lock_s *)1;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) == 0) {
    return 0;
  }
  id v3 = *(os_unfair_lock_s **)(a1 + 24);

  return GEOPDClientMetadataIsDirty(v3);
}

os_unfair_lock_s *GEOABAssignmentRequestIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL v2 = _GEOABAssignmentRequestIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return v2;
  }
  return result;
}

void GEOABAssignmentRequestClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasClientMetadata]
    && ([a1 clientMetadata],
        id v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOPDClientMetadataHasSensitiveFields(v5),
        v5,
        HasSensitiveFields))
  {
    unsigned int v7 = [a1 clientMetadata];
    unint64_t v8 = (id *)[v7 copy];

    GEOPDClientMetadataClearSensitiveFields(v8, a2, 0);
    [a1 setClientMetadata:v8];
  }
  else
  {
    unint64_t v8 = [a1 clientMetadata];
    [v8 clearSensitiveFields:a2];
  }
}

void *GEOABAssignmentRequestHasSensitiveFields(void *result)
{
  if (result)
  {
    id v1 = [result clientMetadata];
    uint64_t HasSensitiveFields = GEOPDClientMetadataHasSensitiveFields(v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_189FDC6F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FDC9F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FDCC48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FDCE20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FDD47C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FDE51C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOABAssignmentResponseCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = a1[3];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  [a1[5] readAll:1];
  [a1[7] readAll:1];
  [a1[11] readAll:1];
  [a1[8] readAll:1];
  return [a1[6] readAll:1];
}

unint64_t GEOABAssignmentResponseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOABAssignmentResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FDE6D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOABAssignmentResponseIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      unint64_t v18 = v8 >> 3;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2) {
            goto LABEL_79;
          }
          goto LABEL_75;
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOABExperimentAssignmentIsValid(a1)) {
            goto LABEL_79;
          }
          goto LABEL_22;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_79;
          }
          unsigned int v19 = 0;
          while (1)
          {
            uint64_t v20 = *v2;
            uint64_t v21 = *(void *)&a1[v20];
            unint64_t v22 = v21 + 1;
            if (v21 == -1 || v22 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v23 = *(char *)(*(void *)&a1[*v5] + v21);
            *(void *)&a1[v20] = v22;
            if (v23 < 0)
            {
              BOOL v24 = v19++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_76;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_79;
          }
          unsigned int v25 = 0;
          while (1)
          {
            uint64_t v26 = *v2;
            uint64_t v27 = *(void *)&a1[v26];
            unint64_t v28 = v27 + 1;
            if (v27 == -1 || v28 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v29 = *(char *)(*(void *)&a1[*v5] + v27);
            *(void *)&a1[v26] = v28;
            if (v29 < 0)
            {
              BOOL v24 = v25++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_76;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_79;
          }
          unsigned int v30 = 0;
          while (1)
          {
            uint64_t v31 = *v2;
            uint64_t v32 = *(void *)&a1[v31];
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v34 = *(char *)(*(void *)&a1[*v5] + v32);
            *(void *)&a1[v31] = v33;
            if (v34 < 0)
            {
              BOOL v24 = v30++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_76;
          }
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOABClientConfigIsValid(a1)) {
            goto LABEL_79;
          }
          goto LABEL_22;
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOABSecondPartyPlaceRequestClientMetaDataIsValid(a1)) {
            goto LABEL_79;
          }
LABEL_22:
          PBReaderRecallMark();
          goto LABEL_76;
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_79;
          }
          unsigned int v35 = 0;
          while (1)
          {
            uint64_t v36 = *v2;
            uint64_t v37 = *(void *)&a1[v36];
            unint64_t v38 = v37 + 1;
            if (v37 == -1 || v38 > *(void *)&a1[*v3]) {
              break;
            }
            int v39 = *(char *)(*(void *)&a1[*v5] + v37);
            *(void *)&a1[v36] = v38;
            if (v39 < 0)
            {
              BOOL v24 = v35++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_76;
          }
LABEL_69:
          uint64_t v14 = *v4;
          goto LABEL_70;
        default:
          if (v18 == 100)
          {
            if (v16 != 1) {
              goto LABEL_79;
            }
            uint64_t v40 = *v2;
            unint64_t v41 = *(void *)&a1[v40];
            if (v41 > 0xFFFFFFFFFFFFFFF7 || (unint64_t v42 = v41 + 8, v42 > *(void *)&a1[*v3])) {
LABEL_70:
            }
              a1[v14] = 1;
            else {
              *(void *)&a1[v40] = v42;
            }
          }
          else
          {
            if (v18 == 101 && v16 != 2)
            {
LABEL_79:
              PBReaderRecallMark();
              return 0;
            }
LABEL_75:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_79;
            }
          }
LABEL_76:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_77;
          }
          break;
      }
    }
  }
LABEL_77:
  BOOL v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

BOOL GEOABExperimentAssignmentIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_47;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_35;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_44;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_47;
          }
          unsigned int v23 = 0;
          break;
        case 3u:
          if (v15 == 2) {
            goto LABEL_43;
          }
          goto LABEL_47;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOABDebugPanelExperimentBranchIsValid(a1)) {
            goto LABEL_47;
          }
          PBReaderRecallMark();
          continue;
        case 5u:
          if (v15 == 2) {
            goto LABEL_43;
          }
          goto LABEL_47;
        default:
LABEL_43:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_47:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_44;
      }
LABEL_35:
      a1[*v4] = 1;
LABEL_44:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOABClientConfigIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_32;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_32;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2) {
          goto LABEL_33;
        }
      }
      else if (v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOABConfigKeyValuePairIsValid(a1)) {
          goto LABEL_33;
        }
LABEL_28:
        PBReaderRecallMark();
        goto LABEL_31;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_33;
      }
LABEL_31:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_32;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOABClientDebugPanelExperimentBranchIsValid(a1))
    {
LABEL_33:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_28;
  }
LABEL_32:
  BOOL v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

BOOL GEOABSecondPartyPlaceRequestClientMetaDataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_35;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_35;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 5)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDABClientDatasetMetadataIsValid(a1))
        {
LABEL_36:
          PBReaderRecallMark();
          return 0;
        }
        goto LABEL_32;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOABExperimentAssignmentIsValid(a1)) {
          goto LABEL_36;
        }
LABEL_32:
        PBReaderRecallMark();
        goto LABEL_34;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_36;
      }
LABEL_34:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_35;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOABClientConfigIsValid(a1)) {
      goto LABEL_36;
    }
    goto LABEL_32;
  }
LABEL_35:
  BOOL v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

void sub_189FDF594(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOABAssignmentResponseIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  __int16 v2 = *(_WORD *)(a1 + 128);
  if ((v2 & 0x4840) != 0) {
    return 1;
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEOABClientConfigIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 128);
  }
  if ((v2 & 0x200) != 0)
  {
    if (GEOABSecondPartyPlaceRequestClientMetaDataIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 128);
  }
  if ((v2 & 0x1000) != 0)
  {
    if (GEOABSecondPartyPlaceRequestClientMetaDataIsDirty(*(os_unfair_lock_s **)(a1 + 88))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 128);
  }
  if ((v2 & 0x400) != 0)
  {
    if (GEOABSecondPartyPlaceRequestClientMetaDataIsDirty(*(os_unfair_lock_s **)(a1 + 64))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 128);
  }
  if ((v2 & 0x100) == 0) {
    goto LABEL_19;
  }
  if (GEOABSecondPartyPlaceRequestClientMetaDataIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
    return 1;
  }
  __int16 v2 = *(_WORD *)(a1 + 128);
LABEL_19:
  if ((v2 & 0x2000) != 0) {
    return 1;
  }
  if ((v2 & 0x40) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 24);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOABExperimentAssignmentIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_32;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_32:

  return v3;
}

os_unfair_lock_s *GEOABAssignmentResponseIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOABAssignmentResponseIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 30);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189FDFE48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FE0694(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FE0988(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FE0C84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOABBranchInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        unsigned __int8 v15 = v14 | v7;
        unsigned __int8 v51 = v14 & ~(_BYTE)v7 | v8;
        if (((v14 | v7) | v9)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        unint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        BOOL v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_59;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_59:
      int v49 = 1;
      goto LABEL_60;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      uint64_t v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 2) {
      break;
    }
    if (v30 == 1)
    {
      if (v31)
      {
        if ((*(unsigned char *)(a1 + 52) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_79;
          }
          char v43 = *(unsigned char *)(a1 + 52) << 6;
          goto LABEL_57;
        }
        uint64_t v36 = PBReaderReadString();
        uint64_t v37 = 24;
        goto LABEL_44;
      }
    }
    else if ((v51 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v40 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v39;
      }
      int v41 = PBUnknownFieldAdd();
      BOOL v18 = (int *)MEMORY[0x1E4F940C8];
      if (!v41)
      {
        int v49 = 0;
        char v50 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
        goto LABEL_62;
      }
      goto LABEL_58;
    }
LABEL_51:
    char v42 = PBReaderSkipValueWithTag();
    BOOL v18 = (int *)MEMORY[0x1E4F940C8];
    if ((v42 & 1) == 0)
    {
      int v49 = 0;
LABEL_60:
      char v50 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
      goto LABEL_61;
    }
LABEL_58:
    if (!((v15 | v51) & 1 | (v10 != 0))) {
      goto LABEL_59;
    }
  }
  if (!v31) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) == 0)
  {
    uint64_t v36 = PBReaderReadString();
    uint64_t v37 = 32;
LABEL_44:
    unint64_t v38 = *(void **)(a1 + v37);
    *(void *)(a1 + v37) = v36;

    BOOL v18 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v43 = 32 * *(unsigned char *)(a1 + 52);
LABEL_57:
    v10 += v43 >> 7;
    BOOL v18 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_58;
  }
LABEL_79:
  int v49 = 0;
  char v50 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
  BOOL v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_61:
  if ((v51 & 1) == 0) {
    goto LABEL_63;
  }
LABEL_62:
  *(unsigned char *)(a1 + v50[428]) |= 1u;
LABEL_63:
  if (v15 & 1 | ((v49 & 1) == 0))
  {
    *(unsigned char *)(a1 + v50[428]) |= 2u;
    *(unsigned char *)(a1 + v50[428]) |= 4u;
    goto LABEL_73;
  }
  if (v16)
  {
    while (1)
    {
      int v46 = *v16++;
      int v45 = v46;
      if (v46 == 1) {
        break;
      }
      if (v45 == 2)
      {
        char v44 = 4;
LABEL_69:
        *(unsigned char *)(a1 + v50[428]) |= v44;
      }
      else if (!v45)
      {
        goto LABEL_73;
      }
    }
    char v44 = 2;
    goto LABEL_69;
  }
LABEL_73:
  if (v49)
  {
    unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
    if ((v15 & 1) == 0) {
      return v3;
    }
LABEL_77:
    unint64_t v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v15) {
      goto LABEL_77;
    }
  }
  return v3;
}

void sub_189FE12F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FE18CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOABBranchInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOABBranchInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOABBranchInfoReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOABBranchInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOABBranchInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189FE1A58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOABBranchInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOABBranchInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FE1ABC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOABBranchInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v15 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

void sub_189FE1E20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOABBranchInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189FE20E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FE2338(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FE2854(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FE29C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOABClientConfigCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 40);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOABClientConfigReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOABClientConfigReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FE379C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOABConfigKeyValuePairIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOABConfigValueIsValid(a1)) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
      }
      else if (v17 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_38;
        }
        a1[*v4] = 1;
      }
      else if (v17 == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        PBReaderRecallMark();
        return 0;
      }
LABEL_38:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEOABClientDebugPanelExperimentBranchIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOABDebugPanelExperimentBranchIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOABConfigKeyValuePairIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

os_unfair_lock_s *GEOABClientConfigIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOABClientConfigIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189FE40B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FE448C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FE488C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOABClientDebugPanelExperimentBranchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v51 = v17;
        char v52 = v18 | v17;
        if ((v18 | v7)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v53 = (v19 == 0) | v18;
        BOOL v54 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_62;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_62:
      int v49 = 1;
      goto LABEL_63;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v54;
    if ((v53 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 52) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_82;
          }
          v8 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_82;
          }
          id v39 = objc_alloc_init(GEOABDebugPanelExperimentBranch);
          if (!GEOABDebugPanelExperimentBranchReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
            goto LABEL_81;
          }
          PBReaderRecallMark();
          uint64_t v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v39;

          --v8;
        }
        goto LABEL_60;
      }
    }
    else if ((v51 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v42 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v41;
      }
      int v43 = PBUnknownFieldAdd();
      unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v43)
      {
        int v49 = 0;
        char v50 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
        goto LABEL_65;
      }
      goto LABEL_61;
    }
LABEL_56:
    char v44 = PBReaderSkipValueWithTag();
    unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v44 & 1) == 0)
    {
      int v49 = 0;
LABEL_63:
      char v50 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v52 & 1 | (v8 != 0))) {
      goto LABEL_62;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
    goto LABEL_56;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_82;
  }
  id v39 = objc_alloc_init(GEOABConfigKeyValuePair);
  if (GEOABConfigKeyValuePairReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOABClientDebugPanelExperimentBranch _addNoFlagsConfigKeyValue:](a1, v39);

LABEL_60:
    unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_61;
  }
LABEL_81:

LABEL_82:
  int v49 = 0;
  char v50 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
  unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_64:
  if ((v51 & 1) == 0) {
    goto LABEL_66;
  }
LABEL_65:
  *(unsigned char *)(a1 + v50[433]) |= 1u;
LABEL_66:
  if (v54 || (v49 & 1) == 0)
  {
    *(unsigned char *)(a1 + v50[433]) |= 4u;
    *(unsigned char *)(a1 + v50[433]) |= 2u;
    goto LABEL_75;
  }
  if (v19)
  {
    while (1)
    {
      int v46 = *v19++;
      int v45 = v46;
      if (v46 == 1) {
        break;
      }
      if (v45 == 2)
      {
LABEL_71:
        *(unsigned char *)(a1 + v50[433]) |= v45;
      }
      else if (!v45)
      {
        goto LABEL_75;
      }
    }
    LOBYTE(v45) = 4;
    goto LABEL_71;
  }
LABEL_75:
  if (v49) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v54)
  {
    unint64_t v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189FE4F44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FE59E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOABClientDebugPanelExperimentBranchCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 32) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOABClientDebugPanelExperimentBranchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOABClientDebugPanelExperimentBranchReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOABClientDebugPanelExperimentBranchReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOABClientDebugPanelExperimentBranchReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOABClientDebugPanelExperimentBranchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOABClientDebugPanelExperimentBranchCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189FE5C88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOABClientDebugPanelExperimentBranchReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOABClientDebugPanelExperimentBranchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FE5CEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOABDebugPanelExperimentBranchIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_32;
          }
          goto LABEL_28;
        case 2u:
          if (v15 == 2) {
            goto LABEL_28;
          }
          goto LABEL_32;
        case 3u:
          if (v15 == 2) {
            goto LABEL_28;
          }
          goto LABEL_32;
        case 4u:
          if (v15 != 2) {
            goto LABEL_32;
          }
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_32:
            BOOL v17 = 0;
            goto LABEL_31;
          }
LABEL_29:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_30;
          }
          break;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_32;
          }
          goto LABEL_29;
      }
    }
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v17;
}

void sub_189FE6134(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOABClientDebugPanelExperimentBranchIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 4) != 0)
  {
    if (GEOABDebugPanelExperimentBranchIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOABClientDebugPanelExperimentBranchIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOABClientDebugPanelExperimentBranchIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189FE656C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FE6880(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FE6BF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOABConfigKeyValuePairReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v10 | v7;
        unsigned __int8 v16 = v14 | v10;
        char v59 = v15;
        char v60 = v16 | v15;
        if ((v16 | v8)) {
          BOOL v17 = 0;
        }
        else {
          BOOL v17 = a3;
        }
        char v61 = (v17 == 0) | v16;
        BOOL v62 = v16;
        unsigned __int8 v18 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_76;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_76:
      int v57 = 1;
      goto LABEL_77;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v62;
    if ((v61 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 3) {
      break;
    }
    if (v31 == 2)
    {
      if ((v8 & 1) == 0) {
        goto LABEL_63;
      }
      char v40 = 0;
      unsigned int v41 = 0;
      uint64_t v42 = 0;
      *(unsigned char *)(a1 + 56) |= 1u;
      while (1)
      {
        uint64_t v43 = *v18;
        uint64_t v44 = *(void *)(v3 + v43);
        unint64_t v45 = v44 + 1;
        if (v44 == -1 || v45 > *(void *)(v3 + *v6)) {
          break;
        }
        char v46 = *(unsigned char *)(*(void *)(v3 + *v20) + v44);
        *(void *)(v3 + v43) = v45;
        v42 |= (unint64_t)(v46 & 0x7F) << v40;
        if ((v46 & 0x80) == 0) {
          goto LABEL_66;
        }
        v40 += 7;
        BOOL v28 = v41++ >= 9;
        if (v28)
        {
          LODWORD(v42) = 0;
          goto LABEL_68;
        }
      }
      *(unsigned char *)(v3 + *v19) = 1;
LABEL_66:
      if (*(unsigned char *)(v3 + *v19)) {
        LODWORD(v42) = 0;
      }
LABEL_68:
      *(_DWORD *)(a1 + 52) = v42;
    }
    else
    {
      if (v31 == 1)
      {
        if (!v32) {
          goto LABEL_63;
        }
        if ((*(unsigned char *)(a1 + 56) & 4) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          BOOL v38 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v37;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_96;
        }
        char v51 = 32 * *(unsigned char *)(a1 + 56);
LABEL_73:
        v9 += v51 >> 7;
LABEL_74:
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_75;
      }
      if ((v59 & 1) == 0 || (*(unsigned char *)(a1 + 56) & 2) != 0)
      {
LABEL_63:
        char v50 = PBReaderSkipValueWithTag();
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if ((v50 & 1) == 0)
        {
          int v57 = 0;
          goto LABEL_77;
        }
        goto LABEL_75;
      }
      if (!*(void *)(a1 + 16))
      {
        id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v48 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v47;
      }
      int v49 = PBUnknownFieldAdd();
      uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v49)
      {
        int v57 = 0;
        unint64_t v58 = &OBJC_IVAR___GEOLocalizedBytes__unknownFields;
        goto LABEL_78;
      }
    }
LABEL_75:
    if (!(v60 & 1 | (v9 != 0))) {
      goto LABEL_76;
    }
  }
  if (!v32) {
    goto LABEL_63;
  }
  if ((*(unsigned char *)(a1 + 56) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_96;
    }
    char v51 = 16 * *(unsigned char *)(a1 + 56);
    goto LABEL_73;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_96;
  }
  id v39 = objc_alloc_init(GEOABConfigValue);
  if (GEOABConfigValueReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    BOOL v38 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v39;
LABEL_48:

    --v9;
    goto LABEL_74;
  }

LABEL_96:
  int v57 = 0;
  uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_77:
  unint64_t v58 = &OBJC_IVAR___GEOLocalizedBytes__unknownFields;
  if ((v59 & 1) == 0) {
    goto LABEL_79;
  }
LABEL_78:
  *(unsigned char *)(a1 + v58[213]) |= 2u;
LABEL_79:
  if (v62 || (v57 & 1) == 0)
  {
    *(unsigned char *)(a1 + v58[213]) |= 4u;
    *(unsigned char *)(a1 + v58[213]) |= 8u;
    goto LABEL_89;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        int v53 = *v17++;
        int v52 = v53;
        if (v53 == 1) {
          break;
        }
        if (v52 == 3)
        {
          char v54 = 8;
          goto LABEL_88;
        }
        if (!v52) {
          goto LABEL_89;
        }
      }
      char v54 = 4;
LABEL_88:
      *(unsigned char *)(a1 + v58[213]) |= v54;
      continue;
    }
  }
LABEL_89:
  if (v57) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v62)
  {
    int v55 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189FE7530(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FE7CEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOABConfigKeyValuePairReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOABConfigKeyValuePairReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOABConfigKeyValuePairReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOABConfigKeyValuePairReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOABConfigKeyValuePairReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189FE7E94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOABConfigKeyValuePairReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOABConfigKeyValuePairReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FE7EF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOABConfigValueIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_49;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_44;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_46;
          }
        case 2u:
          if (v16 != 1) {
            goto LABEL_49;
          }
          uint64_t v24 = *v2;
          unint64_t v25 = *(void *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_45;
          }
          unint64_t v26 = v25 + 8;
          if (v26 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          *(void *)&a1[v24] = v26;
          continue;
        case 3u:
          if (v16 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_49;
          }
          continue;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_49;
          }
          unsigned int v27 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_49:
          BOOL v32 = 0;
          goto LABEL_48;
      }
      while (1)
      {
        uint64_t v28 = *v2;
        uint64_t v29 = *(void *)&a1[v28];
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
          break;
        }
        int v31 = *(char *)(*(void *)&a1[*v5] + v29);
        *(void *)&a1[v28] = v30;
        if (v31 < 0)
        {
          BOOL v23 = v27++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_46;
      }
LABEL_44:
      uint64_t v14 = *v4;
LABEL_45:
      a1[v14] = 1;
LABEL_46:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
LABEL_48:
  PBReaderRecallMark();
  return v32;
}

void sub_189FE837C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOABConfigKeyValuePairIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189FE86A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FE89A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOABConfigValueReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 44) |= 2u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_43;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                uint64_t v20 = 0;
                goto LABEL_45;
              }
            }
            v3[*v6] = 1;
LABEL_43:
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_45:
            *(void *)(a1 + 24) = -(v20 & 1) ^ (v20 >> 1);
            break;
          case 2u:
            *(unsigned char *)(a1 + 44) |= 1u;
            uint64_t v27 = *v4;
            unint64_t v28 = *(void *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v29 = *(void *)(*(void *)&v3[*v7] + v28);
              *(void *)&v3[v27] = v28 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v29 = 0;
            }
            *(void *)(a1 + 16) = v29;
            break;
          case 3u:
            uint64_t v30 = PBReaderReadString();
            int v31 = *(void **)(a1 + 32);
            *(void *)(a1 + 32) = v30;

            break;
          case 4u:
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            *(unsigned char *)(a1 + 44) |= 4u;
            while (1)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5]) {
                break;
              }
              char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
              *(void *)&v3[v35] = v37;
              v34 |= (unint64_t)(v38 & 0x7F) << v32;
              if ((v38 & 0x80) == 0) {
                goto LABEL_47;
              }
              v32 += 7;
              BOOL v15 = v33++ >= 9;
              if (v15)
              {
                uint64_t v34 = 0;
                goto LABEL_49;
              }
            }
            v3[*v6] = 1;
LABEL_47:
            if (v3[*v6]) {
              uint64_t v34 = 0;
            }
LABEL_49:
            *(unsigned char *)(a1 + 40) = v34 != 0;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              unint64_t v26 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v25;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_54;
            }
            break;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v39 = v3[*v6] == 0;
  }
  else
  {
LABEL_54:
    BOOL v39 = 0;
  }
  objc_sync_exit(v3);

  return v39;
}

void sub_189FE9630(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOABConfigValueReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOABConfigValueReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FE96A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FE9EE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOABDebugPanelExperimentBranchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFEFFFFFFFDFFFCLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 > 2;
        char v15 = v14 & ~(_BYTE)v10 | v7;
        unsigned __int8 v16 = v14 | v10;
        char v50 = v15;
        char v51 = v16 | v15;
        if ((v16 | v8)) {
          BOOL v17 = 0;
        }
        else {
          BOOL v17 = a3;
        }
        char v18 = (int *)MEMORY[0x1E4F940E8];
        char v52 = (v17 == 0) | v16;
        BOOL v53 = v16;
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_69;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_69:
      int v49 = 1;
      goto LABEL_70;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v53;
    if ((v52 & 1) == 0)
    {
      unsigned int v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 40;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_87;
        }
        char v44 = 16 * *(unsigned char *)(a1 + 68);
        goto LABEL_67;
      case 2:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 48;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_87;
        }
        char v44 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_67;
      case 3:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 24;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_87;
        }
        char v44 = *(unsigned char *)(a1 + 68) << 6;
        goto LABEL_67;
      case 4:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 32;
LABEL_56:
          uint64_t v42 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          --v9;
LABEL_68:
          if (!(v51 & 1 | (v9 != 0))) {
            goto LABEL_69;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v44 = 32 * *(unsigned char *)(a1 + 68);
LABEL_67:
          v9 += v44 >> 7;
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_68;
        }
LABEL_87:
        int v49 = 0;
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_70:
        if (v50) {
LABEL_71:
        }
          *(unsigned char *)(a1 + 68) |= 1u;
        if (v53 || (v49 & 1) == 0)
        {
          *(unsigned char *)(a1 + 68) |= 8u;
          *(unsigned char *)(a1 + 68) |= 0x10u;
          *(unsigned char *)(a1 + 68) |= 2u;
          *(unsigned char *)(a1 + 68) |= 4u;
        }
        else if (v17)
        {
          while (1)
          {
            int v46 = *v17++;
            char v45 = 8;
            switch(v46)
            {
              case 0:
                goto LABEL_81;
              case 1:
                goto LABEL_79;
              case 2:
                char v45 = 16;
                goto LABEL_79;
              case 3:
                char v45 = 2;
                goto LABEL_79;
              case 4:
                char v45 = 4;
LABEL_79:
                *(unsigned char *)(a1 + 68) |= v45;
                break;
              default:
                continue;
            }
          }
        }
LABEL_81:
        if (v49) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v53)
        {
          id v47 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v50 & 1) == 0 || (*(unsigned char *)(a1 + 68))
        {
LABEL_57:
          char v43 = PBReaderSkipValueWithTag();
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v43 & 1) == 0)
          {
            int v49 = 0;
            goto LABEL_70;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v40 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v39;
          }
          int v41 = PBUnknownFieldAdd();
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v41)
          {
            int v49 = 0;
            goto LABEL_71;
          }
        }
        goto LABEL_68;
    }
  }
}

void sub_189FEA66C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FEA7D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FEA93C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FEB054(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOABDebugPanelExperimentBranchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOABDebugPanelExperimentBranchReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOABDebugPanelExperimentBranchReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOABDebugPanelExperimentBranchReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOABDebugPanelExperimentBranchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189FEB1E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOABDebugPanelExperimentBranchReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOABDebugPanelExperimentBranchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FEB244(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FEB42C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOABDebugPanelExperimentBranchIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0x3E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189FEB760(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FEBA50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FEC720(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOABExperimentAssignmentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFCFFFBFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v7;
        unsigned __int8 v18 = v16 | v11;
        char v68 = v17;
        char v69 = v8;
        char v70 = v18 | v17;
        if ((v18 | v8)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v21 = (int *)MEMORY[0x1E4F940C8];
        char v71 = (v19 == 0) | v18;
        BOOL v72 = v18;
        unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_94;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_94:
      int v66 = 1;
      goto LABEL_95;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v72;
    if ((v71 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v69 & 1) == 0) {
          goto LABEL_74;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_77;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_79;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_77:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_79:
        uint64_t v60 = 64;
        goto LABEL_84;
      case 2:
        if ((v69 & 1) == 0) {
          goto LABEL_74;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (2)
        {
          uint64_t v51 = *v20;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v22) + v52);
            *(void *)(v3 + v51) = v53;
            v41 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v30 = v50++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_83:
        uint64_t v60 = 60;
LABEL_84:
        *(_DWORD *)(a1 + v60) = v41;
        goto LABEL_93;
      case 3:
        if (!v34) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x20) == 0)
        {
          uint64_t v55 = PBReaderReadString();
          uint64_t v56 = 40;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_112;
        }
        char v61 = 4 * *(unsigned char *)(a1 + 68);
        goto LABEL_91;
      case 4:
        if (!v34) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_112;
          }
          char v61 = 16 * *(unsigned char *)(a1 + 68);
LABEL_91:
          v9 += v61 >> 7;
          goto LABEL_92;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_112;
        }
        int v57 = objc_alloc_init(GEOABDebugPanelExperimentBranch);
        if (GEOABDebugPanelExperimentBranchReadAllFrom((uint64_t)v57, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          unint64_t v58 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v57;
LABEL_73:

          --v9;
LABEL_92:
          char v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_93;
        }

LABEL_112:
        int v66 = 0;
        char v67 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
        char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_96:
        if (v68) {
LABEL_97:
        }
          *(unsigned char *)(a1 + v67[438]) |= 4u;
        if (v72 || (v66 & 1) == 0)
        {
          *(unsigned char *)(a1 + v67[438]) |= 0x20u;
          *(unsigned char *)(a1 + v67[438]) |= 8u;
          *(unsigned char *)(a1 + v67[438]) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            int v62 = *v19++;
            char v63 = 32;
            switch(v62)
            {
              case 0:
                goto LABEL_105;
              case 3:
                goto LABEL_104;
              case 4:
                char v63 = 8;
                goto LABEL_104;
              case 5:
                char v63 = 16;
LABEL_104:
                *(unsigned char *)(a1 + v67[438]) |= v63;
                break;
              default:
                continue;
            }
          }
        }
LABEL_105:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v72)
        {
          BOOL v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 5:
        if (!v34) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v55 = PBReaderReadString();
          uint64_t v56 = 32;
LABEL_72:
          unint64_t v58 = *(void **)(a1 + v56);
          *(void *)(a1 + v56) = v55;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_112;
        }
        char v61 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_91;
      default:
        if ((v68 & 1) == 0 || (*(unsigned char *)(a1 + 68) & 4) != 0)
        {
LABEL_74:
          char v59 = PBReaderSkipValueWithTag();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v59 & 1) == 0)
          {
            int v66 = 0;
LABEL_95:
            char v67 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
            goto LABEL_96;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v48)
          {
            int v66 = 0;
            char v67 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
            goto LABEL_97;
          }
        }
LABEL_93:
        if (!(v70 & 1 | (v9 != 0))) {
          goto LABEL_94;
        }
        continue;
    }
  }
}

void sub_189FED02C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FED198(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FEE1BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOABExperimentAssignmentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOABExperimentAssignmentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOABExperimentAssignmentReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOABExperimentAssignmentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOABExperimentAssignmentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189FEE360(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOABExperimentAssignmentReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOABExperimentAssignmentReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FEE3C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FEE5CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOABExperimentAssignmentIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x60) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEOABDebugPanelExperimentBranchIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  }
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEOABExperimentAssignmentIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOABExperimentAssignmentIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189FEE9E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FEEDA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FEF004(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FEF3F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOABSecondPartyPlaceRequestClientMetaDataCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v2 = a1[5];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v17 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v4);
  }

  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = a1[3];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * v11++), "readAll:", 1, (void)v13);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v9);
  }

  return [a1[4] readAll:1];
}

unint64_t GEOABSecondPartyPlaceRequestClientMetaDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOABSecondPartyPlaceRequestClientMetaDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FF0274(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *GEOABSecondPartyPlaceRequestClientMetaDataIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOABSecondPartyPlaceRequestClientMetaDataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189FF074C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FF0B34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FF3DC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAmenityCorrectionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1) + (*(unsigned char *)(a1 + 76) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  BOOL v12 = (v9 & 1 | v10) != 0;
  if (((v9 & 1 | v10) != 0) | v7 & 1) {
    long long v13 = 0;
  }
  else {
    long long v13 = a3;
  }
  long long v14 = (int *)MEMORY[0x1E4F940E8];
  long long v15 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6))
  {
LABEL_97:
    if (v12)
    {
      char v60 = 1;
      goto LABEL_99;
    }
    if (!v13) {
      goto LABEL_110;
    }
    while (1)
    {
      int v62 = *v13++;
      int v61 = v62;
      if (v62 == 3) {
        break;
      }
      if (v61 == 4)
      {
        char v63 = 2;
LABEL_109:
        *(unsigned char *)(a1 + 76) |= v63;
      }
      else if (!v61)
      {
        goto LABEL_110;
      }
    }
    char v63 = 1;
    goto LABEL_109;
  }
  if (v13) {
    BOOL v16 = (v9 & 1 | v10) != 0;
  }
  else {
    BOOL v16 = 1;
  }
  if (v8) {
    BOOL v17 = 1;
  }
  else {
    BOOL v17 = (v9 & 1 | v10) != 0;
  }
  BOOL v66 = v17;
  long long v18 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    if (*(unsigned char *)(v3 + *v15)) {
      goto LABEL_97;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v14;
      unint64_t v23 = *(void *)(v3 + v22);
      if (v23 == -1 || v23 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0) {
        goto LABEL_30;
      }
      v19 += 7;
      BOOL v25 = v20++ >= 9;
      if (v25)
      {
        unint64_t v21 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_32;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_30:
    int v26 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v21 = 0;
    }
LABEL_32:
    int v27 = v21 & 7;
    if (v26 || v27 == 4) {
      goto LABEL_97;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v12;
    if (!v16)
    {
      int v31 = v13;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 != 4)
    {
      if v29 != 3 || !v30 || (*(unsigned char *)(a1 + 76)) {
        break;
      }
      if (v27 != 2)
      {
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        while (1)
        {
          uint64_t v50 = *v14;
          unint64_t v51 = *(void *)(v3 + v50);
          if (v51 == -1 || v51 >= *(void *)(v3 + *v6)) {
            goto LABEL_95;
          }
          char v52 = *(unsigned char *)(*(void *)(v3 + *v18) + v51);
          *(void *)(v3 + v50) = v51 + 1;
          v49 |= (unint64_t)(v52 & 0x7F) << v47;
          if (v52 < 0)
          {
            v47 += 7;
            BOOL v53 = v48++ > 8;
            if (!v53) {
              continue;
            }
          }
          goto LABEL_96;
        }
      }
      if (!PBReaderPlaceMark()) {
        goto LABEL_113;
      }
      while (*(void *)(v3 + *v14) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v15))
      {
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        while (1)
        {
          uint64_t v38 = *v14;
          unint64_t v39 = *(void *)(v3 + v38);
          if (v39 == -1 || v39 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v40 = *(unsigned char *)(*(void *)(v3 + *v18) + v39);
          *(void *)(v3 + v38) = v39 + 1;
          v37 |= (unint64_t)(v40 & 0x7F) << v35;
          if (v40 < 0)
          {
            v35 += 7;
            BOOL v25 = v36++ >= 9;
            if (!v25) {
              continue;
            }
          }
          goto LABEL_59;
        }
        *(unsigned char *)(v3 + *v15) = 1;
LABEL_59:
        PBRepeatedInt32Add();
      }
      goto LABEL_79;
    }
    if (!v30 || (*(unsigned char *)(a1 + 76) & 2) != 0) {
      break;
    }
    if (v27 != 2)
    {
      char v54 = 0;
      unsigned int v55 = 0;
      uint64_t v56 = 0;
      while (1)
      {
        uint64_t v57 = *v14;
        unint64_t v58 = *(void *)(v3 + v57);
        if (v58 == -1 || v58 >= *(void *)(v3 + *v6)) {
          break;
        }
        char v59 = *(unsigned char *)(*(void *)(v3 + *v18) + v58);
        *(void *)(v3 + v57) = v58 + 1;
        v56 |= (unint64_t)(v59 & 0x7F) << v54;
        if (v59 < 0)
        {
          v54 += 7;
          BOOL v53 = v55++ > 8;
          if (!v53) {
            continue;
          }
        }
        goto LABEL_96;
      }
LABEL_95:
      *(unsigned char *)(v3 + *v15) = 1;
LABEL_96:
      PBRepeatedInt32Add();
LABEL_76:
      if (!v66) {
        goto LABEL_97;
      }
      goto LABEL_77;
    }
    if (!PBReaderPlaceMark()) {
      goto LABEL_113;
    }
    while (*(void *)(v3 + *v14) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v15))
    {
      char v41 = 0;
      unsigned int v42 = 0;
      uint64_t v43 = 0;
      while (1)
      {
        uint64_t v44 = *v14;
        unint64_t v45 = *(void *)(v3 + v44);
        if (v45 == -1 || v45 >= *(void *)(v3 + *v6)) {
          break;
        }
        char v46 = *(unsigned char *)(*(void *)(v3 + *v18) + v45);
        *(void *)(v3 + v44) = v45 + 1;
        v43 |= (unint64_t)(v46 & 0x7F) << v41;
        if (v46 < 0)
        {
          v41 += 7;
          BOOL v25 = v42++ >= 9;
          if (!v25) {
            continue;
          }
        }
        goto LABEL_74;
      }
      *(unsigned char *)(v3 + *v15) = 1;
LABEL_74:
      PBRepeatedInt32Add();
    }
LABEL_79:
    PBReaderRecallMark();
    if (!v66) {
      goto LABEL_97;
    }
LABEL_77:
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6)) {
      goto LABEL_97;
    }
  }
  if (PBReaderSkipValueWithTag()) {
    goto LABEL_76;
  }
LABEL_113:
  char v60 = 0;
LABEL_99:
  *(unsigned char *)(a1 + 76) |= 1u;
  *(unsigned char *)(a1 + 76) |= 2u;
  if (v60)
  {
LABEL_110:
    unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
    if (v12) {
      goto LABEL_111;
    }
    return v3;
  }
  unint64_t v3 = 0;
  if (!v12) {
    return v3;
  }
LABEL_111:
  BOOL v64 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = 0;

  return v3;
}

void sub_189FF4EEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FF6DBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAmenityCorrectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPAmenityCorrectionsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPAmenityCorrectionsReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPAmenityCorrectionsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPAmenityCorrectionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189FF6F48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAmenityCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPAmenityCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FF6FAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAmenityCorrectionsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_59;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_59;
      }
      if ((v8 >> 3) == 4) {
        break;
      }
      if ((v8 >> 3) == 3)
      {
        if (v14 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_61;
          }
LABEL_38:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v26 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v27 = *v2;
              unint64_t v28 = *(void *)&a1[v27];
              if (v28 == -1 || v28 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v29 = v28 + 1;
              int v30 = *(char *)(*(void *)&a1[*v5] + v28);
              *(void *)&a1[v27] = v29;
              if (v30 < 0)
              {
                BOOL v12 = v26++ >= 9;
                if (!v12) {
                  continue;
                }
              }
              goto LABEL_38;
            }
            a1[*v4] = 1;
          }
LABEL_57:
          PBReaderRecallMark();
          goto LABEL_58;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_61;
        }
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0)
          {
            unsigned int v20 = v14++;
            if (v20 <= 8) {
              continue;
            }
          }
          goto LABEL_58;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_58;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_61;
      }
LABEL_58:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_59;
      }
    }
    if (v14 == 2)
    {
      if (!PBReaderPlaceMark())
      {
LABEL_61:
        PBReaderRecallMark();
        return 0;
      }
LABEL_48:
      while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
      {
        unsigned int v31 = a1[*v4];
        if (a1[*v4]) {
          break;
        }
        while (1)
        {
          uint64_t v32 = *v2;
          unint64_t v33 = *(void *)&a1[v32];
          if (v33 == -1 || v33 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v34 = v33 + 1;
          int v35 = *(char *)(*(void *)&a1[*v5] + v33);
          *(void *)&a1[v32] = v34;
          if (v35 < 0)
          {
            BOOL v12 = v31++ >= 9;
            if (!v12) {
              continue;
            }
          }
          goto LABEL_48;
        }
        a1[*v4] = 1;
      }
      goto LABEL_57;
    }
    if ((v8 & 7) != 0) {
      goto LABEL_61;
    }
    while (1)
    {
      uint64_t v21 = *v2;
      unint64_t v22 = *(void *)&a1[v21];
      if (v22 == -1 || v22 >= *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      unint64_t v23 = v22 + 1;
      int v24 = *(char *)(*(void *)&a1[*v5] + v22);
      *(void *)&a1[v21] = v23;
      if (v24 < 0)
      {
        unsigned int v25 = v14++;
        if (v25 <= 8) {
          continue;
        }
      }
      goto LABEL_58;
    }
  }
LABEL_59:
  BOOL v36 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v36;
}

void sub_189FF7510(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAmenityCorrectionsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(unsigned char *)(a1 + 76) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_189FF7818(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDebugSettingsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          unint64_t v23 = PBReaderReadString();
          if (v23) {
            [(id)a1 addKeywords:v23];
          }
        }
        else if ((v10 >> 3) == 1)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_34;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            LODWORD(v19) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 16) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_39;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v24 = v3[*v6] == 0;
  }
  else
  {
LABEL_39:
    BOOL v24 = 0;
  }
  objc_sync_exit(v3);

  return v24;
}

void sub_189FF82C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDebugSettingsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPDebugSettingsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FF8328(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDebugSettingsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          BOOL v22 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          unint64_t v18 = *(void *)&a1[v17];
          if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v19 = v18 + 1;
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v22;
}

void sub_189FF8CD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackAddressFieldsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 2);
  if (v9 & 1 | (v10 > 2) | v7 & 1) {
    int v13 = 0;
  }
  else {
    int v13 = a3;
  }
  int v14 = (int *)MEMORY[0x1E4F940E8];
  int v15 = (int *)MEMORY[0x1E4F940C8];
  unsigned int v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_66;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      unint64_t v21 = *(void *)(v3 + v20);
      if (v21 == -1 || v21 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v22 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v21 + 1;
      v19 |= (unint64_t)(v22 & 0x7F) << v17;
      if ((v22 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      if (v18++ >= 9)
      {
        unint64_t v19 = 0;
        int v24 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v24 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v24 || (v19 & 7) == 4)
    {
LABEL_66:
      if (v12)
      {
        char v38 = 1;
        goto LABEL_77;
      }
      if (v13)
      {
        while (1)
        {
          int v40 = *v13++;
          char v39 = 1;
          switch(v40)
          {
            case 0:
              goto LABEL_78;
            case 1:
              goto LABEL_73;
            case 2:
              char v39 = 8;
              goto LABEL_73;
            case 3:
              char v39 = 4;
              goto LABEL_73;
            case 4:
              char v39 = 2;
LABEL_73:
              *(unsigned char *)(a1 + 60) |= v39;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_78;
    }
    unint64_t v26 = v19 >> 3;
    BOOL v27 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      unint64_t v28 = v13;
      do
      {
        int v30 = *v28++;
        int v29 = v30;
        BOOL v27 = v30 != 0;
        if (v30) {
          BOOL v31 = v29 == v26;
        }
        else {
          BOOL v31 = 1;
        }
      }
      while (!v31);
    }
    switch((int)v26)
    {
      case 1:
        if (!v27) {
          goto LABEL_53;
        }
        if ((*(unsigned char *)(a1 + 60) & 1) == 0)
        {
          uint64_t v32 = PBReaderReadString();
          uint64_t v33 = 16;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_76;
        }
        v8 -= *(unsigned char *)(a1 + 60) & 1;
        goto LABEL_64;
      case 2:
        if (!v27) {
          goto LABEL_53;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v32 = PBReaderReadString();
          uint64_t v33 = 40;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_76;
        }
        char v37 = 16 * *(unsigned char *)(a1 + 60);
        goto LABEL_63;
      case 3:
        if (!v27) {
          goto LABEL_53;
        }
        if ((*(unsigned char *)(a1 + 60) & 4) == 0)
        {
          uint64_t v32 = PBReaderReadString();
          uint64_t v33 = 32;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_76;
        }
        char v37 = 32 * *(unsigned char *)(a1 + 60);
        goto LABEL_63;
      case 4:
        if (!v27)
        {
LABEL_53:
          char v36 = PBReaderSkipValueWithTag();
          int v15 = (int *)MEMORY[0x1E4F940C8];
          if ((v36 & 1) == 0)
          {
LABEL_75:
            char v38 = 0;
            goto LABEL_77;
          }
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 60) & 2) == 0)
        {
          uint64_t v32 = PBReaderReadString();
          uint64_t v33 = 24;
LABEL_52:
          int v35 = *(void **)(a1 + v33);
          *(void *)(a1 + v33) = v32;

          int v15 = (int *)MEMORY[0x1E4F940C8];
          --v8;
          goto LABEL_65;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v37 = *(unsigned char *)(a1 + 60) << 6;
LABEL_63:
          v8 += v37 >> 7;
LABEL_64:
          int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_65:
          if (!(v12 & 1 | (v8 != 0))) {
            goto LABEL_66;
          }
          continue;
        }
LABEL_76:
        char v38 = 0;
        int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_77:
        *(unsigned char *)(a1 + 60) |= 1u;
        *(unsigned char *)(a1 + 60) |= 8u;
        *(unsigned char *)(a1 + 60) |= 4u;
        *(unsigned char *)(a1 + 60) |= 2u;
        if (v38)
        {
LABEL_78:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_79;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v12)
          {
LABEL_79:
            char v41 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v34 = PBReaderSkipValueWithTag();
        int v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v34) {
          goto LABEL_75;
        }
        goto LABEL_65;
    }
  }
}

void sub_189FF9354(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FF94BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FF9628(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FF9B88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackAddressFieldsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackAddressFieldsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPFeedbackAddressFieldsReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPFeedbackAddressFieldsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackAddressFieldsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189FF9D14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackAddressFieldsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackAddressFieldsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FF9D78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackAddressFieldsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2) {
            goto LABEL_32;
          }
          goto LABEL_28;
        case 2u:
          if (v14 == 2) {
            goto LABEL_28;
          }
          goto LABEL_32;
        case 3u:
          if (v14 == 2) {
            goto LABEL_28;
          }
          goto LABEL_32;
        case 4u:
          if (v14 != 2) {
            goto LABEL_32;
          }
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_32:
            BOOL v16 = 0;
            goto LABEL_31;
          }
LABEL_29:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_30;
          }
          break;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_32;
          }
          goto LABEL_29;
      }
    }
  }
LABEL_30:
  BOOL v16 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v16;
}

void sub_189FFA154(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackAddressFieldsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x1F) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_189FFA474(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FFA8B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackBusinessHoursReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1) + ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          BOOL v16 = 0;
        }
        else {
          BOOL v16 = a3;
        }
        char v17 = (int *)MEMORY[0x1E4F940E8];
        if (v14) {
          BOOL v18 = 1;
        }
        else {
          BOOL v18 = v16 == 0;
        }
        BOOL v70 = v18;
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        unint64_t v21 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
        BOOL v69 = v15;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_99;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v17;
      unint64_t v26 = *(void *)(v3 + v25);
      if (v26 == -1 || v26 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v26);
      *(void *)(v3 + v25) = v26 + 1;
      v24 |= (unint64_t)(v27 & 0x7F) << v22;
      if ((v27 & 0x80) == 0) {
        goto LABEL_26;
      }
      v22 += 7;
      BOOL v28 = v23++ >= 9;
      if (v28)
      {
        unint64_t v24 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v24 = 0;
    }
LABEL_28:
    if (v29 || (v24 & 7) == 4)
    {
LABEL_99:
      if (v15)
      {
        char v63 = 1;
        goto LABEL_113;
      }
      if (!v16) {
        goto LABEL_114;
      }
      while (1)
      {
        int v65 = *v16++;
        int v64 = v65;
        if (v65 == 1) {
          break;
        }
        if (v64 == 4)
        {
          char v66 = 8;
LABEL_108:
          *(unsigned char *)(a1 + v21[456]) |= v66;
        }
        else if (!v64)
        {
          goto LABEL_114;
        }
      }
      char v66 = 16;
      goto LABEL_108;
    }
    unint64_t v31 = v24 >> 3;
    BOOL v32 = v15;
    if (!v70)
    {
      uint64_t v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + v21[456]) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_110;
          }
          char v37 = objc_alloc_init(GEOPDHours);
          if (GEOPDHoursReadAllFrom((uint64_t)v37, (void *)v3, v7 & 1))
          {
            PBReaderRecallMark();
            char v38 = *(void **)(a1 + 40);
            *(void *)(a1 + 40) = v37;

            --v9;
            unint64_t v21 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
            goto LABEL_94;
          }

          char v63 = 0;
          unint64_t v21 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
          goto LABEL_112;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_110;
        }
        char v61 = 8 * *(unsigned char *)(a1 + v21[456]);
        goto LABEL_93;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_74;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + v21[456]) |= 2u;
        while (2)
        {
          uint64_t v43 = *v17;
          unint64_t v44 = *(void *)(v3 + v43);
          if (v44 == -1 || v44 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(v3 + *v20) + v44);
            *(void *)(v3 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              BOOL v28 = v41++ >= 9;
              if (v28)
              {
                uint64_t v42 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v42 = 0;
        }
LABEL_79:
        uint64_t v60 = 32;
        goto LABEL_84;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_74;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + v21[456]) |= 1u;
        while (2)
        {
          uint64_t v48 = *v17;
          unint64_t v49 = *(void *)(v3 + v48);
          if (v49 == -1 || v49 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v20) + v49);
            *(void *)(v3 + v48) = v49 + 1;
            v42 |= (unint64_t)(v50 & 0x7F) << v46;
            if (v50 < 0)
            {
              v46 += 7;
              BOOL v28 = v47++ >= 9;
              if (v28)
              {
                uint64_t v42 = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v42 = 0;
        }
LABEL_83:
        uint64_t v60 = 24;
LABEL_84:
        *(void *)(a1 + v60) = v42;
        goto LABEL_95;
      case 4:
        if (!v32) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + v21[456]) & 8) == 0)
        {
          uint64_t v51 = PBReaderReadString();
          char v52 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v51;

          --v9;
LABEL_94:
          BOOL v15 = v69;
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
          if (v9) {
            char v62 = 1;
          }
          else {
            char v62 = v15;
          }
          if ((v62 & 1) == 0) {
            goto LABEL_99;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v61 = 16 * *(unsigned char *)(a1 + v21[456]);
LABEL_93:
          v9 += v61 >> 7;
          goto LABEL_94;
        }
LABEL_110:
        char v63 = 0;
LABEL_112:
        BOOL v15 = v69;
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_113:
        *(unsigned char *)(a1 + v21[456]) |= 0x10u;
        *(unsigned char *)(a1 + v21[456]) |= 8u;
        if (v63)
        {
LABEL_114:
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v15) {
            goto LABEL_115;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_115:
            char v67 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 5:
        if (v8)
        {
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          *(unsigned char *)(a1 + v21[456]) |= 4u;
          while (1)
          {
            uint64_t v56 = *v17;
            unint64_t v57 = *(void *)(v3 + v56);
            if (v57 == -1 || v57 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v58 = *(unsigned char *)(*(void *)(v3 + *v20) + v57);
            *(void *)(v3 + v56) = v57 + 1;
            v55 |= (unint64_t)(v58 & 0x7F) << v53;
            if ((v58 & 0x80) == 0) {
              goto LABEL_86;
            }
            v53 += 7;
            BOOL v28 = v54++ >= 9;
            if (v28)
            {
              LODWORD(v55) = 0;
              goto LABEL_88;
            }
          }
          *(unsigned char *)(v3 + *v19) = 1;
LABEL_86:
          if (*(unsigned char *)(v3 + *v19)) {
            LODWORD(v55) = 0;
          }
LABEL_88:
          *(_DWORD *)(a1 + 60) = v55;
        }
        else
        {
LABEL_74:
          char v59 = PBReaderSkipValueWithTag();
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          BOOL v15 = v69;
          if ((v59 & 1) == 0)
          {
LABEL_109:
            char v63 = 0;
            goto LABEL_113;
          }
        }
        goto LABEL_95;
      default:
        int v39 = PBReaderSkipValueWithTag();
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        BOOL v15 = v69;
        if (!v39) {
          goto LABEL_109;
        }
        goto LABEL_95;
    }
  }
}

void sub_189FFB1E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FFBAE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackBusinessHoursReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackBusinessHoursReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackBusinessHoursReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackBusinessHoursReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackBusinessHoursReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189FFBC8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackBusinessHoursReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackBusinessHoursReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FFBCF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackBusinessHoursIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDHoursIsValid(a1)) {
            goto LABEL_54;
          }
          PBReaderRecallMark();
          continue;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_50;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_51;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            unint64_t v24 = *(void *)&a1[v23];
            if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
              goto LABEL_50;
            }
            unint64_t v25 = v24 + 1;
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_51;
          }
        case 4u:
          if (v14 == 2) {
            goto LABEL_40;
          }
          goto LABEL_54;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v27 = 0;
          break;
        default:
LABEL_40:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_54:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v28 = *v2;
        unint64_t v29 = *(void *)&a1[v28];
        if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v30 = v29 + 1;
        int v31 = *(char *)(*(void *)&a1[*v5] + v29);
        *(void *)&a1[v28] = v30;
        if (v31 < 0)
        {
          BOOL v21 = v27++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_51;
      }
LABEL_50:
      a1[*v4] = 1;
LABEL_51:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

void sub_189FFC1F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackBusinessHoursIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 64);
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEOPDHoursIsDirty(*(void *)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 64);
  }
  return (v2 >> 3) & 1;
}

os_unfair_lock_s *GEORPFeedbackBusinessHoursIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPFeedbackBusinessHoursIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189FFC600(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FFCB20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPhotoMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFF9FFFBFFFEFFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 3) & 1)+ ((*(_WORD *)(a1 + 88) >> 4) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          unsigned int v16 = 0;
        }
        else {
          unsigned int v16 = a3;
        }
        char v60 = (v16 == 0) | v15;
        uint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v59 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_102;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v26 = v21++ >= 9;
      if (v26)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_102:
      if (v15)
      {
        char v53 = 1;
        goto LABEL_115;
      }
      if (v16)
      {
        while (1)
        {
          int v54 = *v16++;
          __int16 v55 = 4;
          switch(v54)
          {
            case 0:
              goto LABEL_116;
            case 1:
              goto LABEL_111;
            case 2:
              __int16 v55 = 64;
              goto LABEL_111;
            case 3:
              __int16 v55 = 32;
              goto LABEL_111;
            case 5:
              __int16 v55 = 128;
              goto LABEL_111;
            case 7:
              __int16 v55 = 8;
              goto LABEL_111;
            case 8:
              __int16 v55 = 16;
LABEL_111:
              *(_WORD *)(a1 + 88) |= v55;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_116;
    }
    unint64_t v29 = v22 >> 3;
    BOOL v30 = v15;
    if ((v60 & 1) == 0)
    {
      int v31 = v16;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30) {
          goto LABEL_77;
        }
        if ((*(_WORD *)(a1 + 88) & 4) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 16;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_114;
        }
        __int16 v52 = *(_WORD *)(a1 + 88) << 13;
        goto LABEL_99;
      case 2:
        if (!v30) {
          goto LABEL_77;
        }
        if ((*(_WORD *)(a1 + 88) & 0x40) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 48;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_114;
        }
        __int16 v52 = *(_WORD *)(a1 + 88) << 9;
        goto LABEL_99;
      case 3:
        if (!v30) {
          goto LABEL_77;
        }
        if ((*(_WORD *)(a1 + 88) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_114;
          }
          __int16 v52 = *(_WORD *)(a1 + 88) << 10;
LABEL_99:
          v7 += v52 >> 15;
LABEL_100:
          char v15 = v59;
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_101:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_102;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_114;
        }
        char v58 = objc_alloc_init(GEOLocation);
        if (GEOLocationReadAllFrom((uint64_t)v58, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          char v38 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v58;
LABEL_76:

          --v7;
          goto LABEL_100;
        }

LABEL_114:
        char v53 = 0;
        char v15 = v59;
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_115:
        *(_WORD *)(a1 + 88) |= 4u;
        *(_WORD *)(a1 + 88) |= 0x40u;
        *(_WORD *)(a1 + 88) |= 0x20u;
        *(_WORD *)(a1 + 88) |= 0x80u;
        *(_WORD *)(a1 + 88) |= 8u;
        *(_WORD *)(a1 + 88) |= 0x10u;
        if (v53)
        {
LABEL_116:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_117;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_117:
            uint64_t v56 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_77;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (2)
        {
          uint64_t v42 = *v17;
          unint64_t v43 = *(void *)(v3 + v42);
          if (v43 == -1 || v43 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(v3 + *v19) + v43);
            *(void *)(v3 + v42) = v43 + 1;
            v41 |= (unint64_t)(v44 & 0x7F) << v39;
            if (v44 < 0)
            {
              v39 += 7;
              BOOL v26 = v40++ >= 9;
              if (v26)
              {
                uint64_t v41 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v41 = 0;
        }
LABEL_82:
        *(void *)(a1 + 64) = v41;
        goto LABEL_101;
      case 5:
        if (!v30) {
          goto LABEL_77;
        }
        if ((*(_WORD *)(a1 + 88) & 0x80) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 56;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_114;
        }
        __int16 v52 = *(_WORD *)(a1 + 88) << 8;
        goto LABEL_99;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_77;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(_WORD *)(a1 + 88) |= 2u;
        while (2)
        {
          uint64_t v48 = *v17;
          unint64_t v49 = *(void *)(v3 + v48);
          if (v49 == -1 || v49 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v19) + v49);
            *(void *)(v3 + v48) = v49 + 1;
            v47 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              BOOL v26 = v46++ >= 9;
              if (v26)
              {
                LODWORD(v47) = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v47) = 0;
        }
LABEL_86:
        *(_DWORD *)(a1 + 84) = v47;
        goto LABEL_101;
      case 7:
        if (!v30) {
          goto LABEL_77;
        }
        if ((*(_WORD *)(a1 + 88) & 8) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 24;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_114;
        }
        __int16 v52 = *(_WORD *)(a1 + 88) << 12;
        goto LABEL_99;
      case 8:
        if (!v30)
        {
LABEL_77:
          char v51 = PBReaderSkipValueWithTag();
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v59;
          if ((v51 & 1) == 0)
          {
LABEL_112:
            char v53 = 0;
            goto LABEL_115;
          }
          goto LABEL_101;
        }
        if ((*(_WORD *)(a1 + 88) & 0x10) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 32;
LABEL_75:
          char v38 = *(void **)(a1 + v36);
          *(void *)(a1 + v36) = v35;
          goto LABEL_76;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_114;
        }
        __int16 v52 = *(_WORD *)(a1 + 88) << 11;
        goto LABEL_99;
      default:
        int v37 = PBReaderSkipValueWithTag();
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v59;
        if (!v37) {
          goto LABEL_112;
        }
        goto LABEL_101;
    }
  }
}

void sub_189FFD4C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FFD62C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FFD800(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FFDB20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FFDC8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189FFE534(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPhotoMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPPhotoMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPPhotoMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPPhotoMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPPhotoMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189FFE6D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPhotoMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPPhotoMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FFE73C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPhotoMetadataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2) {
            goto LABEL_53;
          }
          goto LABEL_49;
        case 2u:
          if (v14 == 2) {
            goto LABEL_49;
          }
          goto LABEL_53;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1)) {
            goto LABEL_53;
          }
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 5u:
          if (v14 == 2) {
            goto LABEL_49;
          }
          goto LABEL_53;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v22 = 0;
          break;
        case 7u:
          if (v14 == 2) {
            goto LABEL_49;
          }
          goto LABEL_53;
        case 8u:
          if (v14 == 2) {
            goto LABEL_49;
          }
          goto LABEL_53;
        default:
LABEL_49:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v23 = *v2;
        unint64_t v24 = *(void *)&a1[v23];
        if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v25 = v24 + 1;
        int v26 = *(char *)(*(void *)&a1[*v5] + v24);
        *(void *)&a1[v23] = v25;
        if (v26 < 0)
        {
          BOOL v21 = v22++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_189FFEC9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPhotoMetadataIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 88);
  if ((v2 & 0x144) != 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 88);
  }
  if ((v2 & 0x88) != 0) {
    return 1;
  }
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEORPPhotoMetadataIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPPhotoMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEORPPhotoMetadataClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasGeotag]
    && ([a1 geotag],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    unsigned int v7 = [a1 geotag];
    unint64_t v8 = (_DWORD *)[v7 copy];

    GEOLocationClearSensitiveFields(v8);
    [a1 setGeotag:v8];
  }
  else
  {
    unint64_t v8 = [a1 geotag];
    [v8 clearSensitiveFields:a2];
  }
}

void *GEORPPhotoMetadataHasSensitiveFields(void *result)
{
  if (result)
  {
    id v1 = [result geotag];
    uint64_t HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_189FFF2C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTimestampReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            uint64_t v26 = *v4;
            unint64_t v27 = *(void *)&v3[v26];
            if (v27 == -1 || v27 >= *(void *)&v3[*v5]) {
              break;
            }
            char v28 = *(unsigned char *)(*(void *)&v3[*v7] + v27);
            *(void *)&v3[v26] = v27 + 1;
            v25 |= (unint64_t)(v28 & 0x7F) << v23;
            if ((v28 & 0x80) == 0) {
              goto LABEL_42;
            }
            v23 += 7;
            BOOL v14 = v24++ >= 9;
            if (v14)
            {
              uint64_t v25 = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6]) {
            uint64_t v25 = 0;
          }
LABEL_44:
          *(void *)(a1 + 8) = v25;
        }
        else if ((v10 >> 3) == 2)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_38;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_40;
            }
          }
          v3[*v6] = 1;
LABEL_38:
          if (v3[*v6]) {
            LODWORD(v19) = 0;
          }
LABEL_40:
          *(_DWORD *)(a1 + 16) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_47;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_47:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_189FFFD08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTimestampReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPTimestampReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189FFFD6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTimestampIsValid(char *a1)
{
  v38[1] = *MEMORY[0x1E4F143B8];
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  v38[0] = 0;
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_50;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4)
      {
LABEL_50:
        BOOL v35 = HIDWORD(v38[0]) != 0;
        goto LABEL_52;
      }
      if ((v8 >> 3) == 1)
      {
        uint64_t v20 = 0;
        char v21 = 1;
        while (1)
        {
          char v22 = v21;
          int v23 = *((_DWORD *)v38 + v20);
          if (!v23) {
            break;
          }
          if (v23 != 1)
          {
            char v21 = 0;
            uint64_t v20 = 1;
            if (v22) {
              continue;
            }
          }
          goto LABEL_56;
        }
        *((_DWORD *)v38 + v20) = 1;
        if (v14)
        {
LABEL_56:
          PBReaderRecallMark();
          return 0;
        }
        unsigned int v30 = 0;
        while (1)
        {
          uint64_t v31 = *v2;
          unint64_t v32 = *(void *)&a1[v31];
          if (v32 == -1 || v32 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v33 = v32 + 1;
          int v34 = *(char *)(*(void *)&a1[*v5] + v32);
          *(void *)&a1[v31] = v33;
          if (v34 < 0)
          {
            BOOL v29 = v30++ > 8;
            if (!v29) {
              continue;
            }
          }
          goto LABEL_49;
        }
      }
      else
      {
        if ((v8 >> 3) != 2)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_56;
          }
          goto LABEL_49;
        }
        uint64_t v16 = 0;
        char v17 = 1;
        while (1)
        {
          char v18 = v17;
          int v19 = *((_DWORD *)v38 + v16);
          if (!v19) {
            break;
          }
          if (v19 != 2)
          {
            char v17 = 0;
            uint64_t v16 = 1;
            if (v18) {
              continue;
            }
          }
          goto LABEL_56;
        }
        *((_DWORD *)v38 + v16) = 2;
        if (v14) {
          goto LABEL_56;
        }
        unsigned int v24 = 0;
        while (1)
        {
          uint64_t v25 = *v2;
          unint64_t v26 = *(void *)&a1[v25];
          if (v26 == -1 || v26 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v27 = v26 + 1;
          int v28 = *(char *)(*(void *)&a1[*v5] + v26);
          *(void *)&a1[v25] = v27;
          if (v28 < 0)
          {
            BOOL v29 = v24++ > 8;
            if (!v29) {
              continue;
            }
          }
          goto LABEL_49;
        }
      }
      a1[*v4] = 1;
LABEL_49:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_50;
      }
    }
  }
  BOOL v35 = 0;
LABEL_52:
  if (a1[*v4]) {
    BOOL v36 = 0;
  }
  else {
    BOOL v36 = v35;
  }
  PBReaderRecallMark();
  return v36;
}

id GEOGetGEORouteBuilder_GeometryRouteLog()
{
  if (qword_1E9116918 != -1) {
    dispatch_once(&qword_1E9116918, &__block_literal_global_173);
  }
  os_log_t v0 = (void *)_MergedGlobals_1_1;

  return v0;
}

void sub_18A0021FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOClientACSuggestionEntryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 108);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 104)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  char v11 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
  unsigned int v12 = (HIWORD(*(void *)(a1 + 216)) & 1) + ((*(void *)(a1 + 216) >> 47) & 1) + ((*(void *)(a1 + 216) >> 46) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        char v15 = v10 | (v12 > 1);
        if (v10 & 1 | (v12 > 1) | v8 & 1) {
          uint64_t v16 = 0;
        }
        else {
          uint64_t v16 = a3;
        }
        char v17 = (int *)MEMORY[0x1E4F940E8];
        char v18 = (v16 == 0) | v15;
        int v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_6:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_560;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v17;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_560:
      if (v15)
      {
        *(void *)(a1 + v11[468]) |= 0x1C00000000000uLL;
        goto LABEL_572;
      }
      if (!v16)
      {
LABEL_572:
        unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        if ((v15 & 1) == 0) {
          return v3;
        }
LABEL_573:
        unsigned int v311 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      }
      while (1)
      {
        while (1)
        {
          int v309 = *v16++;
          int v308 = v309;
          if (v309 <= 21) {
            break;
          }
          if (v308 == 31)
          {
            uint64_t v310 = 0x400000000000;
LABEL_570:
            *(void *)(a1 + v11[468]) |= v310;
          }
          else if (v308 == 22)
          {
            uint64_t v310 = 0x800000000000;
            goto LABEL_570;
          }
        }
        if (v308 == 20)
        {
          uint64_t v310 = 0x1000000000000;
          goto LABEL_570;
        }
        if (!v308) {
          goto LABEL_572;
        }
      }
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v15;
    if ((v18 & 1) == 0)
    {
      unint64_t v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + v11[468]) |= 0x4000000uLL;
        while (1)
        {
          uint64_t v40 = *v17;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v20) + v41);
          *(void *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_385;
          }
          v37 += 7;
          BOOL v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_387;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_385:
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_387:
        uint64_t v299 = 188;
        goto LABEL_529;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(void *)(a1 + v11[468]) |= 0x200000000000uLL;
        while (2)
        {
          uint64_t v48 = *v17;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v20) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v28 = v46++ >= 9;
              if (v28)
              {
                uint64_t v47 = 0;
                goto LABEL_391;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v47 = 0;
        }
LABEL_391:
        BOOL v300 = v47 != 0;
        uint64_t v301 = 213;
        goto LABEL_524;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        *(void *)(a1 + v11[468]) |= 4uLL;
        uint64_t v52 = *v17;
        unint64_t v53 = *(void *)(v3 + v52);
        if (v53 <= 0xFFFFFFFFFFFFFFF7 && v53 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v54 = *(void *)(*(void *)(v3 + *v20) + v53);
          *(void *)(v3 + v52) = v53 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v54 = 0;
        }
        uint64_t v306 = 32;
        goto LABEL_553;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + v11[468]) |= 0x400uLL;
        while (2)
        {
          uint64_t v57 = *v17;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v20) + v58);
            *(void *)(v3 + v57) = v59;
            v39 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              BOOL v28 = v56++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_395;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_395:
        uint64_t v299 = 124;
        goto LABEL_529;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        *(void *)(a1 + v11[468]) |= 1uLL;
        uint64_t v61 = *v17;
        unint64_t v62 = *(void *)(v3 + v61);
        if (v62 <= 0xFFFFFFFFFFFFFFF7 && v62 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v54 = *(void *)(*(void *)(v3 + *v20) + v62);
          *(void *)(v3 + v61) = v62 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v54 = 0;
        }
        uint64_t v306 = 16;
        goto LABEL_553;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v65 = 0;
        *(void *)(a1 + v11[468]) |= 0x20000000000uLL;
        while (2)
        {
          uint64_t v66 = *v17;
          uint64_t v67 = *(void *)(v3 + v66);
          unint64_t v68 = v67 + 1;
          if (v67 == -1 || v68 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(v3 + *v20) + v67);
            *(void *)(v3 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              BOOL v28 = v64++ >= 9;
              if (v28)
              {
                uint64_t v65 = 0;
                goto LABEL_399;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v65 = 0;
        }
LABEL_399:
        BOOL v300 = v65 != 0;
        uint64_t v301 = 209;
        goto LABEL_524;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v70 = 0;
        unsigned int v71 = 0;
        uint64_t v72 = 0;
        *(void *)(a1 + v11[468]) |= 0x40000000000uLL;
        while (2)
        {
          uint64_t v73 = *v17;
          uint64_t v74 = *(void *)(v3 + v73);
          unint64_t v75 = v74 + 1;
          if (v74 == -1 || v75 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v76 = *(unsigned char *)(*(void *)(v3 + *v20) + v74);
            *(void *)(v3 + v73) = v75;
            v72 |= (unint64_t)(v76 & 0x7F) << v70;
            if (v76 < 0)
            {
              v70 += 7;
              BOOL v28 = v71++ >= 9;
              if (v28)
              {
                uint64_t v72 = 0;
                goto LABEL_403;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v72 = 0;
        }
LABEL_403:
        BOOL v300 = v72 != 0;
        uint64_t v301 = 210;
        goto LABEL_524;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v77 = 0;
        unsigned int v78 = 0;
        uint64_t v79 = 0;
        *(void *)(a1 + v11[468]) |= 0x4000000000uLL;
        while (2)
        {
          uint64_t v80 = *v17;
          uint64_t v81 = *(void *)(v3 + v80);
          unint64_t v82 = v81 + 1;
          if (v81 == -1 || v82 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v83 = *(unsigned char *)(*(void *)(v3 + *v20) + v81);
            *(void *)(v3 + v80) = v82;
            v79 |= (unint64_t)(v83 & 0x7F) << v77;
            if (v83 < 0)
            {
              v77 += 7;
              BOOL v28 = v78++ >= 9;
              if (v28)
              {
                uint64_t v79 = 0;
                goto LABEL_407;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v79 = 0;
        }
LABEL_407:
        BOOL v300 = v79 != 0;
        uint64_t v301 = 206;
        goto LABEL_524;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v84 = 0;
        unsigned int v85 = 0;
        uint64_t v86 = 0;
        *(void *)(a1 + v11[468]) |= 0x10000000000uLL;
        while (2)
        {
          uint64_t v87 = *v17;
          uint64_t v88 = *(void *)(v3 + v87);
          unint64_t v89 = v88 + 1;
          if (v88 == -1 || v89 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v90 = *(unsigned char *)(*(void *)(v3 + *v20) + v88);
            *(void *)(v3 + v87) = v89;
            v86 |= (unint64_t)(v90 & 0x7F) << v84;
            if (v90 < 0)
            {
              v84 += 7;
              BOOL v28 = v85++ >= 9;
              if (v28)
              {
                uint64_t v86 = 0;
                goto LABEL_411;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v86 = 0;
        }
LABEL_411:
        BOOL v300 = v86 != 0;
        uint64_t v301 = 208;
        goto LABEL_524;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v91 = 0;
        unsigned int v92 = 0;
        uint64_t v93 = 0;
        *(void *)(a1 + v11[468]) |= 0x8000000000uLL;
        while (2)
        {
          uint64_t v94 = *v17;
          uint64_t v95 = *(void *)(v3 + v94);
          unint64_t v96 = v95 + 1;
          if (v95 == -1 || v96 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v97 = *(unsigned char *)(*(void *)(v3 + *v20) + v95);
            *(void *)(v3 + v94) = v96;
            v93 |= (unint64_t)(v97 & 0x7F) << v91;
            if (v97 < 0)
            {
              v91 += 7;
              BOOL v28 = v92++ >= 9;
              if (v28)
              {
                uint64_t v93 = 0;
                goto LABEL_415;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v93 = 0;
        }
LABEL_415:
        BOOL v300 = v93 != 0;
        uint64_t v301 = 207;
        goto LABEL_524;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v98 = 0;
        unsigned int v99 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + v11[468]) |= 0x800uLL;
        while (2)
        {
          uint64_t v100 = *v17;
          uint64_t v101 = *(void *)(v3 + v100);
          unint64_t v102 = v101 + 1;
          if (v101 == -1 || v102 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v103 = *(unsigned char *)(*(void *)(v3 + *v20) + v101);
            *(void *)(v3 + v100) = v102;
            v39 |= (unint64_t)(v103 & 0x7F) << v98;
            if (v103 < 0)
            {
              v98 += 7;
              BOOL v28 = v99++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_419;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_419:
        uint64_t v299 = 128;
        goto LABEL_529;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v104 = 0;
        unsigned int v105 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + v11[468]) |= 0x100uLL;
        while (2)
        {
          uint64_t v106 = *v17;
          uint64_t v107 = *(void *)(v3 + v106);
          unint64_t v108 = v107 + 1;
          if (v107 == -1 || v108 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v109 = *(unsigned char *)(*(void *)(v3 + *v20) + v107);
            *(void *)(v3 + v106) = v108;
            v39 |= (unint64_t)(v109 & 0x7F) << v104;
            if (v109 < 0)
            {
              v104 += 7;
              BOOL v28 = v105++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_423;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_423:
        uint64_t v299 = 116;
        goto LABEL_529;
      case 13:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v110 = 0;
        unsigned int v111 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + v11[468]) |= 0x800000uLL;
        while (2)
        {
          uint64_t v112 = *v17;
          uint64_t v113 = *(void *)(v3 + v112);
          unint64_t v114 = v113 + 1;
          if (v113 == -1 || v114 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v115 = *(unsigned char *)(*(void *)(v3 + *v20) + v113);
            *(void *)(v3 + v112) = v114;
            v39 |= (unint64_t)(v115 & 0x7F) << v110;
            if (v115 < 0)
            {
              v110 += 7;
              BOOL v28 = v111++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_427;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_427:
        uint64_t v299 = 176;
        goto LABEL_529;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v116 = 0;
        unsigned int v117 = 0;
        uint64_t v118 = 0;
        *(void *)(a1 + v11[468]) |= 0x1000000000uLL;
        while (2)
        {
          uint64_t v119 = *v17;
          uint64_t v120 = *(void *)(v3 + v119);
          unint64_t v121 = v120 + 1;
          if (v120 == -1 || v121 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v122 = *(unsigned char *)(*(void *)(v3 + *v20) + v120);
            *(void *)(v3 + v119) = v121;
            v118 |= (unint64_t)(v122 & 0x7F) << v116;
            if (v122 < 0)
            {
              v116 += 7;
              BOOL v28 = v117++ >= 9;
              if (v28)
              {
                uint64_t v118 = 0;
                goto LABEL_431;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v118 = 0;
        }
LABEL_431:
        BOOL v300 = v118 != 0;
        uint64_t v301 = 204;
        goto LABEL_524;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v123 = 0;
        unsigned int v124 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + v11[468]) |= 0x1000uLL;
        while (2)
        {
          uint64_t v125 = *v17;
          uint64_t v126 = *(void *)(v3 + v125);
          unint64_t v127 = v126 + 1;
          if (v126 == -1 || v127 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v128 = *(unsigned char *)(*(void *)(v3 + *v20) + v126);
            *(void *)(v3 + v125) = v127;
            v39 |= (unint64_t)(v128 & 0x7F) << v123;
            if (v128 < 0)
            {
              v123 += 7;
              BOOL v28 = v124++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_435;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_435:
        uint64_t v299 = 132;
        goto LABEL_529;
      case 16:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        *(void *)(a1 + v11[468]) |= 8uLL;
        uint64_t v129 = *v17;
        unint64_t v130 = *(void *)(v3 + v129);
        if (v130 <= 0xFFFFFFFFFFFFFFF7 && v130 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v54 = *(void *)(*(void *)(v3 + *v20) + v130);
          *(void *)(v3 + v129) = v130 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v54 = 0;
        }
        uint64_t v306 = 48;
        goto LABEL_553;
      case 17:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        *(void *)(a1 + v11[468]) |= 0x20uLL;
        uint64_t v131 = *v17;
        unint64_t v132 = *(void *)(v3 + v131);
        if (v132 <= 0xFFFFFFFFFFFFFFF7 && v132 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v54 = *(void *)(*(void *)(v3 + *v20) + v132);
          *(void *)(v3 + v131) = v132 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v54 = 0;
        }
        uint64_t v306 = 64;
        goto LABEL_553;
      case 18:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        *(void *)(a1 + v11[468]) |= 0x10uLL;
        uint64_t v133 = *v17;
        unint64_t v134 = *(void *)(v3 + v133);
        if (v134 <= 0xFFFFFFFFFFFFFFF7 && v134 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v54 = *(void *)(*(void *)(v3 + *v20) + v134);
          *(void *)(v3 + v133) = v134 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v54 = 0;
        }
        uint64_t v306 = 56;
        goto LABEL_553;
      case 19:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v135 = 0;
        unsigned int v136 = 0;
        uint64_t v137 = 0;
        *(void *)(a1 + v11[468]) |= 0x10000000uLL;
        while (2)
        {
          uint64_t v138 = *v17;
          uint64_t v139 = *(void *)(v3 + v138);
          unint64_t v140 = v139 + 1;
          if (v139 == -1 || v140 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v141 = *(unsigned char *)(*(void *)(v3 + *v20) + v139);
            *(void *)(v3 + v138) = v140;
            v137 |= (unint64_t)(v141 & 0x7F) << v135;
            if (v141 < 0)
            {
              v135 += 7;
              BOOL v28 = v136++ >= 9;
              if (v28)
              {
                uint64_t v137 = 0;
                goto LABEL_439;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v137 = 0;
        }
LABEL_439:
        BOOL v300 = v137 != 0;
        uint64_t v301 = 196;
        goto LABEL_524;
      case 20:
        if (!v32) {
          goto LABEL_382;
        }
        if ((*(unsigned char *)(a1 + v11[468] + 6) & 1) == 0)
        {
          uint64_t v142 = PBReaderReadString();
          uint64_t v143 = *(void **)(a1 + 80);
          *(void *)(a1 + 80) = v142;
          goto LABEL_245;
        }
        char v302 = PBReaderSkipValueWithTag();
        char v11 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
        int v19 = (int *)MEMORY[0x1E4F940C8];
        char v18 = (v16 == 0) | v15;
        if ((v302 & 1) == 0) {
          goto LABEL_577;
        }
        uint64_t v303 = *(void *)(a1 + 216) << 15;
        goto LABEL_536;
      case 21:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v144 = 0;
        unsigned int v145 = 0;
        uint64_t v146 = 0;
        *(void *)(a1 + v11[468]) |= 0x2000000000uLL;
        while (2)
        {
          uint64_t v147 = *v17;
          uint64_t v148 = *(void *)(v3 + v147);
          unint64_t v149 = v148 + 1;
          if (v148 == -1 || v149 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v150 = *(unsigned char *)(*(void *)(v3 + *v20) + v148);
            *(void *)(v3 + v147) = v149;
            v146 |= (unint64_t)(v150 & 0x7F) << v144;
            if (v150 < 0)
            {
              v144 += 7;
              BOOL v28 = v145++ >= 9;
              if (v28)
              {
                uint64_t v146 = 0;
                goto LABEL_443;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v146 = 0;
        }
LABEL_443:
        BOOL v300 = v146 != 0;
        uint64_t v301 = 205;
        goto LABEL_524;
      case 22:
        if (!v32) {
          goto LABEL_382;
        }
        if ((*(unsigned char *)(a1 + v11[468] + 5) & 0x80) != 0)
        {
          char v304 = PBReaderSkipValueWithTag();
          char v11 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
          int v19 = (int *)MEMORY[0x1E4F940C8];
          char v18 = (v16 == 0) | v15;
          if ((v304 & 1) == 0) {
            goto LABEL_577;
          }
          uint64_t v303 = *(void *)(a1 + 216) << 16;
          goto LABEL_536;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_576;
        }
        uint64_t v313 = objc_alloc_init(GEOSubactionMetaData);
        if (!GEOSubactionMetaDataReadAllFrom((uint64_t)v313, (void *)v3, v9 & 1)) {
          goto LABEL_575;
        }
        PBReaderRecallMark();
        uint64_t v151 = 72;
        goto LABEL_244;
      case 23:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v152 = 0;
        unsigned int v153 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + v11[468]) |= 0x200uLL;
        while (2)
        {
          uint64_t v154 = *v17;
          uint64_t v155 = *(void *)(v3 + v154);
          unint64_t v156 = v155 + 1;
          if (v155 == -1 || v156 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v157 = *(unsigned char *)(*(void *)(v3 + *v20) + v155);
            *(void *)(v3 + v154) = v156;
            v39 |= (unint64_t)(v157 & 0x7F) << v152;
            if (v157 < 0)
            {
              v152 += 7;
              BOOL v28 = v153++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_447;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_447:
        uint64_t v299 = 120;
        goto LABEL_529;
      case 24:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v158 = 0;
        unsigned int v159 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + v11[468]) |= 0x2000000uLL;
        while (2)
        {
          uint64_t v160 = *v17;
          uint64_t v161 = *(void *)(v3 + v160);
          unint64_t v162 = v161 + 1;
          if (v161 == -1 || v162 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v163 = *(unsigned char *)(*(void *)(v3 + *v20) + v161);
            *(void *)(v3 + v160) = v162;
            v39 |= (unint64_t)(v163 & 0x7F) << v158;
            if (v163 < 0)
            {
              v158 += 7;
              BOOL v28 = v159++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_451;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_451:
        uint64_t v299 = 184;
        goto LABEL_529;
      case 25:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v164 = 0;
        unsigned int v165 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + v11[468]) |= 0x1000000uLL;
        while (2)
        {
          uint64_t v166 = *v17;
          uint64_t v167 = *(void *)(v3 + v166);
          unint64_t v168 = v167 + 1;
          if (v167 == -1 || v168 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v169 = *(unsigned char *)(*(void *)(v3 + *v20) + v167);
            *(void *)(v3 + v166) = v168;
            v39 |= (unint64_t)(v169 & 0x7F) << v164;
            if (v169 < 0)
            {
              v164 += 7;
              BOOL v28 = v165++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_455;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_455:
        uint64_t v299 = 180;
        goto LABEL_529;
      case 26:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v170 = 0;
        unsigned int v171 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + v11[468]) |= 0x8000000uLL;
        while (2)
        {
          uint64_t v172 = *v17;
          uint64_t v173 = *(void *)(v3 + v172);
          unint64_t v174 = v173 + 1;
          if (v173 == -1 || v174 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v175 = *(unsigned char *)(*(void *)(v3 + *v20) + v173);
            *(void *)(v3 + v172) = v174;
            v39 |= (unint64_t)(v175 & 0x7F) << v170;
            if (v175 < 0)
            {
              v170 += 7;
              BOOL v28 = v171++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_459;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_459:
        uint64_t v299 = 192;
        goto LABEL_529;
      case 27:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        *(void *)(a1 + v11[468]) |= 2uLL;
        uint64_t v176 = *v17;
        unint64_t v177 = *(void *)(v3 + v176);
        if (v177 <= 0xFFFFFFFFFFFFFFF7 && v177 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v54 = *(void *)(*(void *)(v3 + *v20) + v177);
          *(void *)(v3 + v176) = v177 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v54 = 0;
        }
        uint64_t v306 = 24;
        goto LABEL_553;
      case 28:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        *(void *)(a1 + v11[468]) |= 0x40uLL;
        uint64_t v178 = *v17;
        unint64_t v179 = *(void *)(v3 + v178);
        if (v179 <= 0xFFFFFFFFFFFFFFF7 && v179 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v54 = *(void *)(*(void *)(v3 + *v20) + v179);
          *(void *)(v3 + v178) = v179 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v54 = 0;
        }
        uint64_t v306 = 88;
        goto LABEL_553;
      case 29:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v180 = 0;
        unsigned int v181 = 0;
        uint64_t v182 = 0;
        *(void *)(a1 + v11[468]) |= 0x800000000uLL;
        while (2)
        {
          uint64_t v183 = *v17;
          uint64_t v184 = *(void *)(v3 + v183);
          unint64_t v185 = v184 + 1;
          if (v184 == -1 || v185 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v186 = *(unsigned char *)(*(void *)(v3 + *v20) + v184);
            *(void *)(v3 + v183) = v185;
            v182 |= (unint64_t)(v186 & 0x7F) << v180;
            if (v186 < 0)
            {
              v180 += 7;
              BOOL v28 = v181++ >= 9;
              if (v28)
              {
                uint64_t v182 = 0;
                goto LABEL_463;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v182 = 0;
        }
LABEL_463:
        BOOL v300 = v182 != 0;
        uint64_t v301 = 203;
        goto LABEL_524;
      case 30:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        *(void *)(a1 + v11[468]) |= 0x80uLL;
        uint64_t v187 = *v17;
        unint64_t v188 = *(void *)(v3 + v187);
        if (v188 <= 0xFFFFFFFFFFFFFFF7 && v188 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v54 = *(void *)(*(void *)(v3 + *v20) + v188);
          *(void *)(v3 + v187) = v188 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v54 = 0;
        }
        uint64_t v306 = 96;
LABEL_553:
        *(void *)(a1 + v306) = v54;
        goto LABEL_559;
      case 31:
        if (!v32) {
          goto LABEL_382;
        }
        if ((*(unsigned char *)(a1 + v11[468] + 5) & 0x40) != 0)
        {
          char v305 = PBReaderSkipValueWithTag();
          char v11 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
          int v19 = (int *)MEMORY[0x1E4F940C8];
          char v18 = (v16 == 0) | v15;
          if ((v305 & 1) == 0) {
            goto LABEL_577;
          }
          uint64_t v303 = *(void *)(a1 + 216) << 17;
LABEL_536:
          v7 += v303 >> 63;
          goto LABEL_559;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_576;
        }
        uint64_t v313 = objc_alloc_init(GEOHyperlinkMetaData);
        if (GEOHyperlinkMetaDataReadAllFrom((uint64_t)v313, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v151 = 40;
LABEL_244:
          uint64_t v143 = *(void **)(a1 + v151);
          *(void *)(a1 + v151) = v313;
LABEL_245:

          --v7;
          char v11 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
          int v19 = (int *)MEMORY[0x1E4F940C8];
          char v18 = (v16 == 0) | v15;
LABEL_559:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_560;
          }
          continue;
        }
LABEL_575:

LABEL_576:
        char v11 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
LABEL_577:
        unint64_t v3 = 0;
        *(void *)(a1 + v11[468]) |= 0x1C00000000000uLL;
        if (v15) {
          goto LABEL_573;
        }
        return v3;
      case 32:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v189 = 0;
        unsigned int v190 = 0;
        uint64_t v191 = 0;
        *(void *)(a1 + v11[468]) |= 0x20000000uLL;
        while (2)
        {
          uint64_t v192 = *v17;
          uint64_t v193 = *(void *)(v3 + v192);
          unint64_t v194 = v193 + 1;
          if (v193 == -1 || v194 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v195 = *(unsigned char *)(*(void *)(v3 + *v20) + v193);
            *(void *)(v3 + v192) = v194;
            v191 |= (unint64_t)(v195 & 0x7F) << v189;
            if (v195 < 0)
            {
              v189 += 7;
              BOOL v28 = v190++ >= 9;
              if (v28)
              {
                uint64_t v191 = 0;
                goto LABEL_467;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v191 = 0;
        }
LABEL_467:
        BOOL v300 = v191 != 0;
        uint64_t v301 = 197;
        goto LABEL_524;
      case 33:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v196 = 0;
        unsigned int v197 = 0;
        uint64_t v198 = 0;
        *(void *)(a1 + v11[468]) |= 0x400000000uLL;
        while (2)
        {
          uint64_t v199 = *v17;
          uint64_t v200 = *(void *)(v3 + v199);
          unint64_t v201 = v200 + 1;
          if (v200 == -1 || v201 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v202 = *(unsigned char *)(*(void *)(v3 + *v20) + v200);
            *(void *)(v3 + v199) = v201;
            v198 |= (unint64_t)(v202 & 0x7F) << v196;
            if (v202 < 0)
            {
              v196 += 7;
              BOOL v28 = v197++ >= 9;
              if (v28)
              {
                uint64_t v198 = 0;
                goto LABEL_471;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v198 = 0;
        }
LABEL_471:
        BOOL v300 = v198 != 0;
        uint64_t v301 = 202;
        goto LABEL_524;
      case 34:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v203 = 0;
        unsigned int v204 = 0;
        uint64_t v205 = 0;
        *(void *)(a1 + v11[468]) |= 0x200000000uLL;
        while (2)
        {
          uint64_t v206 = *v17;
          uint64_t v207 = *(void *)(v3 + v206);
          unint64_t v208 = v207 + 1;
          if (v207 == -1 || v208 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v209 = *(unsigned char *)(*(void *)(v3 + *v20) + v207);
            *(void *)(v3 + v206) = v208;
            v205 |= (unint64_t)(v209 & 0x7F) << v203;
            if (v209 < 0)
            {
              v203 += 7;
              BOOL v28 = v204++ >= 9;
              if (v28)
              {
                uint64_t v205 = 0;
                goto LABEL_475;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v205 = 0;
        }
LABEL_475:
        BOOL v300 = v205 != 0;
        uint64_t v301 = 201;
        goto LABEL_524;
      case 35:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v210 = 0;
        unsigned int v211 = 0;
        uint64_t v212 = 0;
        *(void *)(a1 + v11[468]) |= 0x100000000uLL;
        while (2)
        {
          uint64_t v213 = *v17;
          uint64_t v214 = *(void *)(v3 + v213);
          unint64_t v215 = v214 + 1;
          if (v214 == -1 || v215 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v216 = *(unsigned char *)(*(void *)(v3 + *v20) + v214);
            *(void *)(v3 + v213) = v215;
            v212 |= (unint64_t)(v216 & 0x7F) << v210;
            if (v216 < 0)
            {
              v210 += 7;
              BOOL v28 = v211++ >= 9;
              if (v28)
              {
                uint64_t v212 = 0;
                goto LABEL_479;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v212 = 0;
        }
LABEL_479:
        BOOL v300 = v212 != 0;
        uint64_t v301 = 200;
        goto LABEL_524;
      case 36:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v217 = 0;
        unsigned int v218 = 0;
        uint64_t v219 = 0;
        *(void *)(a1 + v11[468]) |= 0x40000000uLL;
        while (2)
        {
          uint64_t v220 = *v17;
          uint64_t v221 = *(void *)(v3 + v220);
          unint64_t v222 = v221 + 1;
          if (v221 == -1 || v222 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v223 = *(unsigned char *)(*(void *)(v3 + *v20) + v221);
            *(void *)(v3 + v220) = v222;
            v219 |= (unint64_t)(v223 & 0x7F) << v217;
            if (v223 < 0)
            {
              v217 += 7;
              BOOL v28 = v218++ >= 9;
              if (v28)
              {
                uint64_t v219 = 0;
                goto LABEL_483;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v219 = 0;
        }
LABEL_483:
        BOOL v300 = v219 != 0;
        uint64_t v301 = 198;
        goto LABEL_524;
      case 37:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v224 = 0;
        unsigned int v225 = 0;
        uint64_t v226 = 0;
        *(void *)(a1 + v11[468]) |= 0x80000000uLL;
        while (2)
        {
          uint64_t v227 = *v17;
          uint64_t v228 = *(void *)(v3 + v227);
          unint64_t v229 = v228 + 1;
          if (v228 == -1 || v229 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v230 = *(unsigned char *)(*(void *)(v3 + *v20) + v228);
            *(void *)(v3 + v227) = v229;
            v226 |= (unint64_t)(v230 & 0x7F) << v224;
            if (v230 < 0)
            {
              v224 += 7;
              BOOL v28 = v225++ >= 9;
              if (v28)
              {
                uint64_t v226 = 0;
                goto LABEL_487;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v226 = 0;
        }
LABEL_487:
        BOOL v300 = v226 != 0;
        uint64_t v301 = 199;
        goto LABEL_524;
      case 38:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        *(void *)(a1 + v11[468]) |= 0x2000uLL;
        uint64_t v231 = *v17;
        unint64_t v232 = *(void *)(v3 + v231);
        if (v232 <= 0xFFFFFFFFFFFFFFFBLL && v232 + 4 <= *(void *)(v3 + *v6))
        {
          int v233 = *(_DWORD *)(*(void *)(v3 + *v20) + v232);
          *(void *)(v3 + v231) = v232 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          int v233 = 0;
        }
        uint64_t v307 = 136;
        goto LABEL_558;
      case 39:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        *(void *)(a1 + v11[468]) |= 0x4000uLL;
        uint64_t v234 = *v17;
        unint64_t v235 = *(void *)(v3 + v234);
        if (v235 <= 0xFFFFFFFFFFFFFFFBLL && v235 + 4 <= *(void *)(v3 + *v6))
        {
          int v233 = *(_DWORD *)(*(void *)(v3 + *v20) + v235);
          *(void *)(v3 + v234) = v235 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          int v233 = 0;
        }
        uint64_t v307 = 140;
LABEL_558:
        *(_DWORD *)(a1 + v307) = v233;
        goto LABEL_559;
      case 40:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v236 = 0;
        unsigned int v237 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + v11[468]) |= 0x8000uLL;
        while (2)
        {
          uint64_t v238 = *v17;
          uint64_t v239 = *(void *)(v3 + v238);
          unint64_t v240 = v239 + 1;
          if (v239 == -1 || v240 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v241 = *(unsigned char *)(*(void *)(v3 + *v20) + v239);
            *(void *)(v3 + v238) = v240;
            v39 |= (unint64_t)(v241 & 0x7F) << v236;
            if (v241 < 0)
            {
              v236 += 7;
              BOOL v28 = v237++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_491;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_491:
        uint64_t v299 = 144;
        goto LABEL_529;
      case 41:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v242 = 0;
        unsigned int v243 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + v11[468]) |= 0x10000uLL;
        while (2)
        {
          uint64_t v244 = *v17;
          uint64_t v245 = *(void *)(v3 + v244);
          unint64_t v246 = v245 + 1;
          if (v245 == -1 || v246 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v247 = *(unsigned char *)(*(void *)(v3 + *v20) + v245);
            *(void *)(v3 + v244) = v246;
            v39 |= (unint64_t)(v247 & 0x7F) << v242;
            if (v247 < 0)
            {
              v242 += 7;
              BOOL v28 = v243++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_495;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_495:
        uint64_t v299 = 148;
        goto LABEL_529;
      case 42:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v248 = 0;
        unsigned int v249 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + v11[468]) |= 0x20000uLL;
        while (2)
        {
          uint64_t v250 = *v17;
          uint64_t v251 = *(void *)(v3 + v250);
          unint64_t v252 = v251 + 1;
          if (v251 == -1 || v252 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v253 = *(unsigned char *)(*(void *)(v3 + *v20) + v251);
            *(void *)(v3 + v250) = v252;
            v39 |= (unint64_t)(v253 & 0x7F) << v248;
            if (v253 < 0)
            {
              v248 += 7;
              BOOL v28 = v249++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_499;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_499:
        uint64_t v299 = 152;
        goto LABEL_529;
      case 43:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v254 = 0;
        unsigned int v255 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + v11[468]) |= 0x200000uLL;
        while (2)
        {
          uint64_t v256 = *v17;
          uint64_t v257 = *(void *)(v3 + v256);
          unint64_t v258 = v257 + 1;
          if (v257 == -1 || v258 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v259 = *(unsigned char *)(*(void *)(v3 + *v20) + v257);
            *(void *)(v3 + v256) = v258;
            v39 |= (unint64_t)(v259 & 0x7F) << v254;
            if (v259 < 0)
            {
              v254 += 7;
              BOOL v28 = v255++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_503;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_503:
        uint64_t v299 = 168;
        goto LABEL_529;
      case 44:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v260 = 0;
        unsigned int v261 = 0;
        uint64_t v262 = 0;
        *(void *)(a1 + v11[468]) |= 0x80000000000uLL;
        while (2)
        {
          uint64_t v263 = *v17;
          uint64_t v264 = *(void *)(v3 + v263);
          unint64_t v265 = v264 + 1;
          if (v264 == -1 || v265 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v266 = *(unsigned char *)(*(void *)(v3 + *v20) + v264);
            *(void *)(v3 + v263) = v265;
            v262 |= (unint64_t)(v266 & 0x7F) << v260;
            if (v266 < 0)
            {
              v260 += 7;
              BOOL v28 = v261++ >= 9;
              if (v28)
              {
                uint64_t v262 = 0;
                goto LABEL_507;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v262 = 0;
        }
LABEL_507:
        BOOL v300 = v262 != 0;
        uint64_t v301 = 211;
        goto LABEL_524;
      case 45:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v267 = 0;
        unsigned int v268 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + v11[468]) |= 0x80000uLL;
        while (2)
        {
          uint64_t v269 = *v17;
          uint64_t v270 = *(void *)(v3 + v269);
          unint64_t v271 = v270 + 1;
          if (v270 == -1 || v271 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v272 = *(unsigned char *)(*(void *)(v3 + *v20) + v270);
            *(void *)(v3 + v269) = v271;
            v39 |= (unint64_t)(v272 & 0x7F) << v267;
            if (v272 < 0)
            {
              v267 += 7;
              BOOL v28 = v268++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_511;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_511:
        uint64_t v299 = 160;
        goto LABEL_529;
      case 46:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v273 = 0;
        unsigned int v274 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + v11[468]) |= 0x40000uLL;
        while (2)
        {
          uint64_t v275 = *v17;
          uint64_t v276 = *(void *)(v3 + v275);
          unint64_t v277 = v276 + 1;
          if (v276 == -1 || v277 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v278 = *(unsigned char *)(*(void *)(v3 + *v20) + v276);
            *(void *)(v3 + v275) = v277;
            v39 |= (unint64_t)(v278 & 0x7F) << v273;
            if (v278 < 0)
            {
              v273 += 7;
              BOOL v28 = v274++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_515;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_515:
        uint64_t v299 = 156;
        goto LABEL_529;
      case 47:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v279 = 0;
        unsigned int v280 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + v11[468]) |= 0x400000uLL;
        while (2)
        {
          uint64_t v281 = *v17;
          uint64_t v282 = *(void *)(v3 + v281);
          unint64_t v283 = v282 + 1;
          if (v282 == -1 || v283 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v284 = *(unsigned char *)(*(void *)(v3 + *v20) + v282);
            *(void *)(v3 + v281) = v283;
            v39 |= (unint64_t)(v284 & 0x7F) << v279;
            if (v284 < 0)
            {
              v279 += 7;
              BOOL v28 = v280++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_519;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_519:
        uint64_t v299 = 172;
        goto LABEL_529;
      case 48:
        if ((v8 & 1) == 0) {
          goto LABEL_382;
        }
        char v285 = 0;
        unsigned int v286 = 0;
        uint64_t v287 = 0;
        *(void *)(a1 + v11[468]) |= 0x100000000000uLL;
        while (2)
        {
          uint64_t v288 = *v17;
          uint64_t v289 = *(void *)(v3 + v288);
          unint64_t v290 = v289 + 1;
          if (v289 == -1 || v290 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v291 = *(unsigned char *)(*(void *)(v3 + *v20) + v289);
            *(void *)(v3 + v288) = v290;
            v287 |= (unint64_t)(v291 & 0x7F) << v285;
            if (v291 < 0)
            {
              v285 += 7;
              BOOL v28 = v286++ >= 9;
              if (v28)
              {
                uint64_t v287 = 0;
                goto LABEL_523;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v287 = 0;
        }
LABEL_523:
        BOOL v300 = v287 != 0;
        uint64_t v301 = 212;
LABEL_524:
        *(unsigned char *)(a1 + v301) = v300;
        goto LABEL_559;
      case 49:
        if (v8)
        {
          char v292 = 0;
          unsigned int v293 = 0;
          uint64_t v39 = 0;
          *(void *)(a1 + v11[468]) |= 0x100000uLL;
          while (1)
          {
            uint64_t v294 = *v17;
            uint64_t v295 = *(void *)(v3 + v294);
            unint64_t v296 = v295 + 1;
            if (v295 == -1 || v296 > *(void *)(v3 + *v6)) {
              break;
            }
            char v297 = *(unsigned char *)(*(void *)(v3 + *v20) + v295);
            *(void *)(v3 + v294) = v296;
            v39 |= (unint64_t)(v297 & 0x7F) << v292;
            if ((v297 & 0x80) == 0) {
              goto LABEL_526;
            }
            v292 += 7;
            BOOL v28 = v293++ >= 9;
            if (v28)
            {
              LODWORD(v39) = 0;
              goto LABEL_528;
            }
          }
          *(unsigned char *)(v3 + *v19) = 1;
LABEL_526:
          if (*(unsigned char *)(v3 + *v19)) {
            LODWORD(v39) = 0;
          }
LABEL_528:
          uint64_t v299 = 164;
LABEL_529:
          *(_DWORD *)(a1 + v299) = v39;
        }
        else
        {
LABEL_382:
          char v298 = PBReaderSkipValueWithTag();
          char v18 = (v16 == 0) | v15;
          int v19 = (int *)MEMORY[0x1E4F940C8];
          char v11 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
          if ((v298 & 1) == 0) {
            goto LABEL_577;
          }
        }
        goto LABEL_559;
      default:
        int v44 = PBReaderSkipValueWithTag();
        char v18 = (v16 == 0) | v15;
        int v19 = (int *)MEMORY[0x1E4F940C8];
        char v11 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
        if (!v44) {
          goto LABEL_577;
        }
        goto LABEL_559;
    }
  }
}

void sub_18A0047F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A00502C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A00822C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOClientACSuggestionEntryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 108))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOClientACSuggestionEntryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 104) = [v8 position];
  *(_DWORD *)(a1 + 108) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOClientACSuggestionEntryReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOClientACSuggestionEntryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOClientACSuggestionEntryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 72) readAll:1];
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 112));
  return Specified;
}

void sub_18A0083E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOClientACSuggestionEntryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOClientACSuggestionEntryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A008448(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOClientACSuggestionEntryIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v27 = v22++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v27 = v28++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 3u:
        case 5u:
        case 0x10u:
        case 0x11u:
        case 0x12u:
        case 0x1Bu:
        case 0x1Cu:
        case 0x1Eu:
          if (v16 != 1) {
            goto LABEL_331;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_327;
          }
          unint64_t v20 = v19 + 8;
          goto LABEL_25;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v27 = v33++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v27 = v38++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v27 = v43++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v27 = v48++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v53 = 0;
          while (1)
          {
            uint64_t v54 = *v2;
            uint64_t v55 = *(void *)&a1[v54];
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v57 = *(char *)(*(void *)&a1[*v5] + v55);
            *(void *)&a1[v54] = v56;
            if (v57 < 0)
            {
              BOOL v27 = v53++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v58 = 0;
          while (1)
          {
            uint64_t v59 = *v2;
            uint64_t v60 = *(void *)&a1[v59];
            unint64_t v61 = v60 + 1;
            if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v62 = *(char *)(*(void *)&a1[*v5] + v60);
            *(void *)&a1[v59] = v61;
            if (v62 < 0)
            {
              BOOL v27 = v58++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v63 = 0;
          while (1)
          {
            uint64_t v64 = *v2;
            uint64_t v65 = *(void *)&a1[v64];
            unint64_t v66 = v65 + 1;
            if (v65 == -1 || v66 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v67 = *(char *)(*(void *)&a1[*v5] + v65);
            *(void *)&a1[v64] = v66;
            if (v67 < 0)
            {
              BOOL v27 = v63++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v68 = 0;
          while (1)
          {
            uint64_t v69 = *v2;
            uint64_t v70 = *(void *)&a1[v69];
            unint64_t v71 = v70 + 1;
            if (v70 == -1 || v71 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v72 = *(char *)(*(void *)&a1[*v5] + v70);
            *(void *)&a1[v69] = v71;
            if (v72 < 0)
            {
              BOOL v27 = v68++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v73 = 0;
          while (1)
          {
            uint64_t v74 = *v2;
            uint64_t v75 = *(void *)&a1[v74];
            unint64_t v76 = v75 + 1;
            if (v75 == -1 || v76 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v77 = *(char *)(*(void *)&a1[*v5] + v75);
            *(void *)&a1[v74] = v76;
            if (v77 < 0)
            {
              BOOL v27 = v73++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v78 = 0;
          while (1)
          {
            uint64_t v79 = *v2;
            uint64_t v80 = *(void *)&a1[v79];
            unint64_t v81 = v80 + 1;
            if (v80 == -1 || v81 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v82 = *(char *)(*(void *)&a1[*v5] + v80);
            *(void *)&a1[v79] = v81;
            if (v82 < 0)
            {
              BOOL v27 = v78++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v83 = 0;
          while (1)
          {
            uint64_t v84 = *v2;
            uint64_t v85 = *(void *)&a1[v84];
            unint64_t v86 = v85 + 1;
            if (v85 == -1 || v86 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v87 = *(char *)(*(void *)&a1[*v5] + v85);
            *(void *)&a1[v84] = v86;
            if (v87 < 0)
            {
              BOOL v27 = v83++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x13u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v88 = 0;
          while (1)
          {
            uint64_t v89 = *v2;
            uint64_t v90 = *(void *)&a1[v89];
            unint64_t v91 = v90 + 1;
            if (v90 == -1 || v91 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v92 = *(char *)(*(void *)&a1[*v5] + v90);
            *(void *)&a1[v89] = v91;
            if (v92 < 0)
            {
              BOOL v27 = v88++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x14u:
          if (v16 == 2) {
            goto LABEL_140;
          }
          goto LABEL_331;
        case 0x15u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v93 = 0;
          while (1)
          {
            uint64_t v94 = *v2;
            uint64_t v95 = *(void *)&a1[v94];
            unint64_t v96 = v95 + 1;
            if (v95 == -1 || v96 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v97 = *(char *)(*(void *)&a1[*v5] + v95);
            *(void *)&a1[v94] = v96;
            if (v97 < 0)
            {
              BOOL v27 = v93++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x16u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSubactionMetaDataIsValid(a1)) {
            goto LABEL_331;
          }
          goto LABEL_197;
        case 0x17u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v98 = 0;
          while (1)
          {
            uint64_t v99 = *v2;
            uint64_t v100 = *(void *)&a1[v99];
            unint64_t v101 = v100 + 1;
            if (v100 == -1 || v101 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v102 = *(char *)(*(void *)&a1[*v5] + v100);
            *(void *)&a1[v99] = v101;
            if (v102 < 0)
            {
              BOOL v27 = v98++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x18u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v103 = 0;
          while (1)
          {
            uint64_t v104 = *v2;
            uint64_t v105 = *(void *)&a1[v104];
            unint64_t v106 = v105 + 1;
            if (v105 == -1 || v106 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v107 = *(char *)(*(void *)&a1[*v5] + v105);
            *(void *)&a1[v104] = v106;
            if (v107 < 0)
            {
              BOOL v27 = v103++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x19u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v108 = 0;
          while (1)
          {
            uint64_t v109 = *v2;
            uint64_t v110 = *(void *)&a1[v109];
            unint64_t v111 = v110 + 1;
            if (v110 == -1 || v111 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v112 = *(char *)(*(void *)&a1[*v5] + v110);
            *(void *)&a1[v109] = v111;
            if (v112 < 0)
            {
              BOOL v27 = v108++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x1Au:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v113 = 0;
          while (1)
          {
            uint64_t v114 = *v2;
            uint64_t v115 = *(void *)&a1[v114];
            unint64_t v116 = v115 + 1;
            if (v115 == -1 || v116 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v117 = *(char *)(*(void *)&a1[*v5] + v115);
            *(void *)&a1[v114] = v116;
            if (v117 < 0)
            {
              BOOL v27 = v113++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x1Du:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v118 = 0;
          while (1)
          {
            uint64_t v119 = *v2;
            uint64_t v120 = *(void *)&a1[v119];
            unint64_t v121 = v120 + 1;
            if (v120 == -1 || v121 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v122 = *(char *)(*(void *)&a1[*v5] + v120);
            *(void *)&a1[v119] = v121;
            if (v122 < 0)
            {
              BOOL v27 = v118++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x1Fu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOHyperlinkMetaDataIsValid(a1)) {
            goto LABEL_331;
          }
LABEL_197:
          PBReaderRecallMark();
          continue;
        case 0x20u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v123 = 0;
          while (1)
          {
            uint64_t v124 = *v2;
            uint64_t v125 = *(void *)&a1[v124];
            unint64_t v126 = v125 + 1;
            if (v125 == -1 || v126 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v127 = *(char *)(*(void *)&a1[*v5] + v125);
            *(void *)&a1[v124] = v126;
            if (v127 < 0)
            {
              BOOL v27 = v123++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x21u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v128 = 0;
          while (1)
          {
            uint64_t v129 = *v2;
            uint64_t v130 = *(void *)&a1[v129];
            unint64_t v131 = v130 + 1;
            if (v130 == -1 || v131 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v132 = *(char *)(*(void *)&a1[*v5] + v130);
            *(void *)&a1[v129] = v131;
            if (v132 < 0)
            {
              BOOL v27 = v128++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x22u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v133 = 0;
          while (1)
          {
            uint64_t v134 = *v2;
            uint64_t v135 = *(void *)&a1[v134];
            unint64_t v136 = v135 + 1;
            if (v135 == -1 || v136 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v137 = *(char *)(*(void *)&a1[*v5] + v135);
            *(void *)&a1[v134] = v136;
            if (v137 < 0)
            {
              BOOL v27 = v133++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x23u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v138 = 0;
          while (1)
          {
            uint64_t v139 = *v2;
            uint64_t v140 = *(void *)&a1[v139];
            unint64_t v141 = v140 + 1;
            if (v140 == -1 || v141 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v142 = *(char *)(*(void *)&a1[*v5] + v140);
            *(void *)&a1[v139] = v141;
            if (v142 < 0)
            {
              BOOL v27 = v138++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x24u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v143 = 0;
          while (1)
          {
            uint64_t v144 = *v2;
            uint64_t v145 = *(void *)&a1[v144];
            unint64_t v146 = v145 + 1;
            if (v145 == -1 || v146 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v147 = *(char *)(*(void *)&a1[*v5] + v145);
            *(void *)&a1[v144] = v146;
            if (v147 < 0)
            {
              BOOL v27 = v143++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x25u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v148 = 0;
          while (1)
          {
            uint64_t v149 = *v2;
            uint64_t v150 = *(void *)&a1[v149];
            unint64_t v151 = v150 + 1;
            if (v150 == -1 || v151 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v152 = *(char *)(*(void *)&a1[*v5] + v150);
            *(void *)&a1[v149] = v151;
            if (v152 < 0)
            {
              BOOL v27 = v148++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x26u:
        case 0x27u:
          if (v16 != 5) {
            goto LABEL_331;
          }
          uint64_t v18 = *v2;
          unint64_t v21 = *(void *)&a1[v18];
          if (v21 > 0xFFFFFFFFFFFFFFFBLL) {
            goto LABEL_327;
          }
          unint64_t v20 = v21 + 4;
LABEL_25:
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_327;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 0x28u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v153 = 0;
          while (1)
          {
            uint64_t v154 = *v2;
            uint64_t v155 = *(void *)&a1[v154];
            unint64_t v156 = v155 + 1;
            if (v155 == -1 || v156 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v157 = *(char *)(*(void *)&a1[*v5] + v155);
            *(void *)&a1[v154] = v156;
            if (v157 < 0)
            {
              BOOL v27 = v153++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x29u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v158 = 0;
          while (1)
          {
            uint64_t v159 = *v2;
            uint64_t v160 = *(void *)&a1[v159];
            unint64_t v161 = v160 + 1;
            if (v160 == -1 || v161 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v162 = *(char *)(*(void *)&a1[*v5] + v160);
            *(void *)&a1[v159] = v161;
            if (v162 < 0)
            {
              BOOL v27 = v158++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x2Au:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v163 = 0;
          while (1)
          {
            uint64_t v164 = *v2;
            uint64_t v165 = *(void *)&a1[v164];
            unint64_t v166 = v165 + 1;
            if (v165 == -1 || v166 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v167 = *(char *)(*(void *)&a1[*v5] + v165);
            *(void *)&a1[v164] = v166;
            if (v167 < 0)
            {
              BOOL v27 = v163++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x2Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v168 = 0;
          while (1)
          {
            uint64_t v169 = *v2;
            uint64_t v170 = *(void *)&a1[v169];
            unint64_t v171 = v170 + 1;
            if (v170 == -1 || v171 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v172 = *(char *)(*(void *)&a1[*v5] + v170);
            *(void *)&a1[v169] = v171;
            if (v172 < 0)
            {
              BOOL v27 = v168++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x2Cu:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v173 = 0;
          while (1)
          {
            uint64_t v174 = *v2;
            uint64_t v175 = *(void *)&a1[v174];
            unint64_t v176 = v175 + 1;
            if (v175 == -1 || v176 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v177 = *(char *)(*(void *)&a1[*v5] + v175);
            *(void *)&a1[v174] = v176;
            if (v177 < 0)
            {
              BOOL v27 = v173++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x2Du:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v178 = 0;
          while (1)
          {
            uint64_t v179 = *v2;
            uint64_t v180 = *(void *)&a1[v179];
            unint64_t v181 = v180 + 1;
            if (v180 == -1 || v181 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v182 = *(char *)(*(void *)&a1[*v5] + v180);
            *(void *)&a1[v179] = v181;
            if (v182 < 0)
            {
              BOOL v27 = v178++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x2Eu:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v183 = 0;
          while (1)
          {
            uint64_t v184 = *v2;
            uint64_t v185 = *(void *)&a1[v184];
            unint64_t v186 = v185 + 1;
            if (v185 == -1 || v186 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v187 = *(char *)(*(void *)&a1[*v5] + v185);
            *(void *)&a1[v184] = v186;
            if (v187 < 0)
            {
              BOOL v27 = v183++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x2Fu:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v188 = 0;
          while (1)
          {
            uint64_t v189 = *v2;
            uint64_t v190 = *(void *)&a1[v189];
            unint64_t v191 = v190 + 1;
            if (v190 == -1 || v191 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v192 = *(char *)(*(void *)&a1[*v5] + v190);
            *(void *)&a1[v189] = v191;
            if (v192 < 0)
            {
              BOOL v27 = v188++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x30u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v193 = 0;
          while (1)
          {
            uint64_t v194 = *v2;
            uint64_t v195 = *(void *)&a1[v194];
            unint64_t v196 = v195 + 1;
            if (v195 == -1 || v196 > *(void *)&a1[*v3]) {
              goto LABEL_326;
            }
            int v197 = *(char *)(*(void *)&a1[*v5] + v195);
            *(void *)&a1[v194] = v196;
            if (v197 < 0)
            {
              BOOL v27 = v193++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_328;
          }
        case 0x31u:
          if ((v8 & 7) != 0) {
            goto LABEL_331;
          }
          unsigned int v198 = 0;
          break;
        default:
LABEL_140:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_331:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v199 = *v2;
        uint64_t v200 = *(void *)&a1[v199];
        unint64_t v201 = v200 + 1;
        if (v200 == -1 || v201 > *(void *)&a1[*v3]) {
          break;
        }
        int v202 = *(char *)(*(void *)&a1[*v5] + v200);
        *(void *)&a1[v199] = v201;
        if (v202 < 0)
        {
          BOOL v27 = v198++ > 8;
          if (!v27) {
            continue;
          }
        }
        goto LABEL_328;
      }
LABEL_326:
      uint64_t v14 = *v4;
LABEL_327:
      a1[v14] = 1;
LABEL_328:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v203 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v203;
}

BOOL GEOSubactionMetaDataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_64;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_44;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_49;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_64;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_44;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_49;
          }
        case 3u:
          if (v15 == 2) {
            goto LABEL_48;
          }
          goto LABEL_64;
        case 4u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_64:
              PBReaderRecallMark();
              return 0;
            }
LABEL_52:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v33 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v34 = *v2;
                uint64_t v35 = *(void *)&a1[v34];
                unint64_t v36 = v35 + 1;
                if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
                  break;
                }
                int v37 = *(char *)(*(void *)&a1[*v5] + v35);
                *(void *)&a1[v34] = v36;
                if (v37 < 0)
                {
                  BOOL v13 = v33++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_52;
              }
              a1[*v4] = 1;
            }
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_64;
            }
            while (1)
            {
              uint64_t v28 = *v2;
              uint64_t v29 = *(void *)&a1[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
                break;
              }
              int v31 = *(char *)(*(void *)&a1[*v5] + v29);
              *(void *)&a1[v28] = v30;
              if (v31 < 0)
              {
                unsigned int v32 = v15++;
                if (v32 <= 8) {
                  continue;
                }
              }
              goto LABEL_49;
            }
LABEL_44:
            a1[*v4] = 1;
          }
LABEL_49:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_62;
          }
          break;
        case 5u:
          if (v15 == 2) {
            goto LABEL_48;
          }
          goto LABEL_64;
        case 6u:
          if (v15 == 2) {
            goto LABEL_48;
          }
          goto LABEL_64;
        default:
LABEL_48:
          if (PBReaderSkipValueWithTag()) {
            goto LABEL_49;
          }
          goto LABEL_64;
      }
    }
  }
LABEL_62:
  BOOL v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOHyperlinkMetaDataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          BOOL v23 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

void sub_18A00A0A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOClientACSuggestionEntryIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  unint64_t v2 = *(void *)(a1 + 216);
  if ((v2 & 0x3000000000000) != 0) {
    return 1;
  }
  if ((v2 & 0x800000000000) != 0)
  {
    if (GEOSubactionMetaDataIsDirty(*(void *)(a1 + 72))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 216);
  }
  return (v2 >> 46) & 1;
}

os_unfair_lock_s *GEOClientACSuggestionEntryIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOClientACSuggestionEntryIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 28);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A00B27C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOHyperlinkMetaDataReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 3)
        {
          uint64_t v25 = PBReaderReadString();
          unint64_t v26 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v25;
        }
        else if ((v10 >> 3) == 2)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18A00D678(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOHyperlinkMetaDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOHyperlinkMetaDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A00D6DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A00DC10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventClientACSuggestionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int16 *)(a1 + 88) >> 12) & 1)
      + ((*(unsigned __int16 *)(a1 + 88) >> 11) & 1)
      + ((*(unsigned __int16 *)(a1 + 88) >> 10) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -3:
        char v7 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v10 | v14;
        if (((v10 | v14) | v7)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        char v116 = (v16 == 0) | v15;
        char v18 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v19 = (int *)MEMORY[0x1E4F940B8];
        uint64_t v20 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
        char v115 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_180;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v17;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v19) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_180:
      if (v15)
      {
        char v110 = 1;
        goto LABEL_188;
      }
      if (v16)
      {
        while (1)
        {
          int v111 = *v16++;
          __int16 v112 = 4096;
          switch(v111)
          {
            case 0:
              goto LABEL_189;
            case 1:
              goto LABEL_186;
            case 2:
              __int16 v112 = 2048;
              goto LABEL_186;
            case 3:
              __int16 v112 = 1024;
LABEL_186:
              *(_WORD *)(a1 + v20[471]) |= v112;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_189;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v15;
    if ((v116 & 1) == 0)
    {
      unsigned int v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_132;
        }
        if ((*(_WORD *)(a1 + v20[471]) & 0x1000) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          BOOL v38 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v37;

          --v8;
          goto LABEL_178;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_194;
        }
        v8 += *(unsigned __int16 *)(a1 + v20[471]) << 19 >> 31;
        goto LABEL_178;
      case 2:
        if (!v32 || (*(_WORD *)(a1 + v20[471]) & 0x800) != 0) {
          goto LABEL_132;
        }
        PBReaderReadString();
        uint64_t v40 = (GEOClientACSuggestionEntry *)objc_claimAutoreleasedReturnValue();
        if (v40) {
          -[GEOLogMsgEventClientACSuggestions _addNoFlagsQueryTokens:](a1, v40);
        }
        goto LABEL_51;
      case 3:
        if (!v32 || (*(_WORD *)(a1 + v20[471]) & 0x400) != 0) {
          goto LABEL_132;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
        {
LABEL_194:
          char v110 = 0;
          goto LABEL_196;
        }
        uint64_t v40 = objc_alloc_init(GEOClientACSuggestionEntry);
        if (GEOClientACSuggestionEntryReadAllFrom((uint64_t)v40, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOLogMsgEventClientACSuggestions _addNoFlagsEntries:](a1, v40);
LABEL_51:

          uint64_t v20 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
LABEL_178:
          char v15 = v115;
          char v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_179:
          if (!(v15 & 1 | (v8 != 0))) {
            goto LABEL_180;
          }
          continue;
        }

        char v110 = 0;
        uint64_t v20 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
LABEL_196:
        char v15 = v115;
        char v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_188:
        *(_WORD *)(a1 + v20[471]) |= 0x1000u;
        *(_WORD *)(a1 + v20[471]) |= 0x800u;
        *(_WORD *)(a1 + v20[471]) |= 0x400u;
        if (v110)
        {
LABEL_189:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_190;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_190:
            unsigned int v113 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 4:
        if ((v7 & 1) == 0) {
          goto LABEL_132;
        }
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(_WORD *)(a1 + v20[471]) |= 8u;
        while (2)
        {
          uint64_t v44 = *v17;
          uint64_t v45 = *(void *)(v3 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(v3 + *v19) + v45);
            *(void *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v28 = v42++ >= 9;
              if (v28)
              {
                LODWORD(v43) = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v43) = 0;
        }
LABEL_137:
        uint64_t v107 = 68;
        goto LABEL_175;
      case 5:
        if ((v7 & 1) == 0) {
          goto LABEL_132;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v43 = 0;
        *(_WORD *)(a1 + v20[471]) |= 0x20u;
        while (2)
        {
          uint64_t v50 = *v17;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v19) + v51);
            *(void *)(v3 + v50) = v52;
            v43 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              BOOL v28 = v49++ >= 9;
              if (v28)
              {
                LODWORD(v43) = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v43) = 0;
        }
LABEL_141:
        uint64_t v107 = 76;
        goto LABEL_175;
      case 6:
        if ((v7 & 1) == 0) {
          goto LABEL_132;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v43 = 0;
        *(_WORD *)(a1 + v20[471]) |= 4u;
        while (2)
        {
          uint64_t v56 = *v17;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v19) + v57);
            *(void *)(v3 + v56) = v58;
            v43 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              BOOL v28 = v55++ >= 9;
              if (v28)
              {
                LODWORD(v43) = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v43) = 0;
        }
LABEL_145:
        uint64_t v107 = 64;
        goto LABEL_175;
      case 7:
        if ((v7 & 1) == 0) {
          goto LABEL_132;
        }
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v43 = 0;
        *(_WORD *)(a1 + v20[471]) |= 0x40u;
        while (2)
        {
          uint64_t v62 = *v17;
          uint64_t v63 = *(void *)(v3 + v62);
          unint64_t v64 = v63 + 1;
          if (v63 == -1 || v64 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(v3 + *v19) + v63);
            *(void *)(v3 + v62) = v64;
            v43 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              BOOL v28 = v61++ >= 9;
              if (v28)
              {
                LODWORD(v43) = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v43) = 0;
        }
LABEL_149:
        uint64_t v107 = 80;
        goto LABEL_175;
      case 8:
        if ((v7 & 1) == 0) {
          goto LABEL_132;
        }
        char v66 = 0;
        unsigned int v67 = 0;
        uint64_t v43 = 0;
        *(_WORD *)(a1 + v20[471]) |= 0x10u;
        while (2)
        {
          uint64_t v68 = *v17;
          uint64_t v69 = *(void *)(v3 + v68);
          unint64_t v70 = v69 + 1;
          if (v69 == -1 || v70 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(v3 + *v19) + v69);
            *(void *)(v3 + v68) = v70;
            v43 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              BOOL v28 = v67++ >= 9;
              if (v28)
              {
                LODWORD(v43) = 0;
                goto LABEL_153;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v43) = 0;
        }
LABEL_153:
        uint64_t v107 = 72;
        goto LABEL_175;
      case 9:
        if ((v7 & 1) == 0) {
          goto LABEL_132;
        }
        char v72 = 0;
        unsigned int v73 = 0;
        uint64_t v74 = 0;
        *(_WORD *)(a1 + v20[471]) |= 0x100u;
        while (2)
        {
          uint64_t v75 = *v17;
          uint64_t v76 = *(void *)(v3 + v75);
          unint64_t v77 = v76 + 1;
          if (v76 == -1 || v77 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v78 = *(unsigned char *)(*(void *)(v3 + *v19) + v76);
            *(void *)(v3 + v75) = v77;
            v74 |= (unint64_t)(v78 & 0x7F) << v72;
            if (v78 < 0)
            {
              v72 += 7;
              BOOL v28 = v73++ >= 9;
              if (v28)
              {
                uint64_t v74 = 0;
                goto LABEL_157;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v74 = 0;
        }
LABEL_157:
        BOOL v108 = v74 != 0;
        uint64_t v109 = 85;
        goto LABEL_170;
      case 10:
        if ((v7 & 1) == 0) {
          goto LABEL_132;
        }
        char v79 = 0;
        unsigned int v80 = 0;
        uint64_t v81 = 0;
        *(_WORD *)(a1 + v20[471]) |= 0x80u;
        while (2)
        {
          uint64_t v82 = *v17;
          uint64_t v83 = *(void *)(v3 + v82);
          unint64_t v84 = v83 + 1;
          if (v83 == -1 || v84 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v85 = *(unsigned char *)(*(void *)(v3 + *v19) + v83);
            *(void *)(v3 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              BOOL v28 = v80++ >= 9;
              if (v28)
              {
                uint64_t v81 = 0;
                goto LABEL_161;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v81 = 0;
        }
LABEL_161:
        BOOL v108 = v81 != 0;
        uint64_t v109 = 84;
        goto LABEL_170;
      case 11:
        if ((v7 & 1) == 0) {
          goto LABEL_132;
        }
        char v86 = 0;
        unsigned int v87 = 0;
        uint64_t v88 = 0;
        *(_WORD *)(a1 + v20[471]) |= 1u;
        while (2)
        {
          uint64_t v89 = *v17;
          uint64_t v90 = *(void *)(v3 + v89);
          unint64_t v91 = v90 + 1;
          if (v90 == -1 || v91 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v92 = *(unsigned char *)(*(void *)(v3 + *v19) + v90);
            *(void *)(v3 + v89) = v91;
            v88 |= (unint64_t)(v92 & 0x7F) << v86;
            if (v92 < 0)
            {
              v86 += 7;
              BOOL v28 = v87++ >= 9;
              if (v28)
              {
                uint64_t v88 = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v88 = 0;
        }
LABEL_165:
        *(void *)(a1 + 24) = v88;
        goto LABEL_179;
      case 12:
        if ((v7 & 1) == 0) {
          goto LABEL_132;
        }
        char v93 = 0;
        unsigned int v94 = 0;
        uint64_t v95 = 0;
        *(_WORD *)(a1 + v20[471]) |= 0x200u;
        while (2)
        {
          uint64_t v96 = *v17;
          uint64_t v97 = *(void *)(v3 + v96);
          unint64_t v98 = v97 + 1;
          if (v97 == -1 || v98 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v99 = *(unsigned char *)(*(void *)(v3 + *v19) + v97);
            *(void *)(v3 + v96) = v98;
            v95 |= (unint64_t)(v99 & 0x7F) << v93;
            if (v99 < 0)
            {
              v93 += 7;
              BOOL v28 = v94++ >= 9;
              if (v28)
              {
                uint64_t v95 = 0;
                goto LABEL_169;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v95 = 0;
        }
LABEL_169:
        BOOL v108 = v95 != 0;
        uint64_t v109 = 86;
LABEL_170:
        *(unsigned char *)(a1 + v109) = v108;
        goto LABEL_179;
      case 13:
        if (v7)
        {
          char v100 = 0;
          unsigned int v101 = 0;
          uint64_t v43 = 0;
          *(_WORD *)(a1 + v20[471]) |= 2u;
          while (1)
          {
            uint64_t v102 = *v17;
            uint64_t v103 = *(void *)(v3 + v102);
            unint64_t v104 = v103 + 1;
            if (v103 == -1 || v104 > *(void *)(v3 + *v6)) {
              break;
            }
            char v105 = *(unsigned char *)(*(void *)(v3 + *v19) + v103);
            *(void *)(v3 + v102) = v104;
            v43 |= (unint64_t)(v105 & 0x7F) << v100;
            if ((v105 & 0x80) == 0) {
              goto LABEL_172;
            }
            v100 += 7;
            BOOL v28 = v101++ >= 9;
            if (v28)
            {
              LODWORD(v43) = 0;
              goto LABEL_174;
            }
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_172:
          if (*(unsigned char *)(v3 + *v18)) {
            LODWORD(v43) = 0;
          }
LABEL_174:
          uint64_t v107 = 60;
LABEL_175:
          *(_DWORD *)(a1 + v107) = v43;
        }
        else
        {
LABEL_132:
          char v106 = PBReaderSkipValueWithTag();
          char v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v115;
          if ((v106 & 1) == 0)
          {
LABEL_187:
            char v110 = 0;
            goto LABEL_188;
          }
        }
        goto LABEL_179;
      default:
        int v39 = PBReaderSkipValueWithTag();
        char v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v115;
        if (!v39) {
          goto LABEL_187;
        }
        goto LABEL_179;
    }
  }
}

void sub_18A00E9B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A00ED70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A010804(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgEventClientACSuggestionsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 16);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOLogMsgEventClientACSuggestionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventClientACSuggestionsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOLogMsgEventClientACSuggestionsReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOLogMsgEventClientACSuggestionsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventClientACSuggestionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgEventClientACSuggestionsCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18A010A94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventClientACSuggestionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventClientACSuggestionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A010AF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventClientACSuggestionsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_112;
          }
          goto LABEL_22;
        case 2u:
          if (v15 == 2) {
            goto LABEL_22;
          }
          goto LABEL_112;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOClientACSuggestionEntryIsValid(a1)) {
            goto LABEL_112;
          }
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_112;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_108;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_109;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_112;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_108;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_109;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_112;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_108;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_109;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_112;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_108;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_109;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_112;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_108;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_109;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_112;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_108;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_109;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_112;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_108;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_109;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_112;
          }
          unsigned int v53 = 0;
          while (1)
          {
            uint64_t v54 = *v2;
            uint64_t v55 = *(void *)&a1[v54];
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
              goto LABEL_108;
            }
            int v57 = *(char *)(*(void *)&a1[*v5] + v55);
            *(void *)&a1[v54] = v56;
            if (v57 < 0)
            {
              BOOL v22 = v53++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_109;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_112;
          }
          unsigned int v58 = 0;
          while (1)
          {
            uint64_t v59 = *v2;
            uint64_t v60 = *(void *)&a1[v59];
            unint64_t v61 = v60 + 1;
            if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
              goto LABEL_108;
            }
            int v62 = *(char *)(*(void *)&a1[*v5] + v60);
            *(void *)&a1[v59] = v61;
            if (v62 < 0)
            {
              BOOL v22 = v58++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_109;
          }
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_112;
          }
          unsigned int v63 = 0;
          break;
        default:
LABEL_22:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_112:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v64 = *v2;
        uint64_t v65 = *(void *)&a1[v64];
        unint64_t v66 = v65 + 1;
        if (v65 == -1 || v66 > *(void *)&a1[*v3]) {
          break;
        }
        int v67 = *(char *)(*(void *)&a1[*v5] + v65);
        *(void *)&a1[v64] = v66;
        if (v67 < 0)
        {
          BOOL v22 = v63++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_109;
      }
LABEL_108:
      a1[*v4] = 1;
LABEL_109:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v68 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v68;
}

void sub_18A011474(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgEventClientACSuggestionsIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(_WORD *)(a1 + 88) & 0x3C00) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 88) & 0x400) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 16);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOClientACSuggestionEntryIsDirty(*(os_unfair_lock_s **)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOLogMsgEventClientACSuggestionsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLogMsgEventClientACSuggestionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A011DA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0129F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSubactionMetaDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  unsigned int v10 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 84)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFBFFFCFFFELL) & 0xFF01FF01FF01FF01));
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 2);
  if (v9 & 1 | (v10 > 2) | v7 & 1) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = a3;
  }
  int v14 = (int *)MEMORY[0x1E4F940E8];
  int v15 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6))
  {
LABEL_110:
    if (v12)
    {
      char v68 = 1;
      goto LABEL_112;
    }
    if (v13)
    {
      while (1)
      {
        int v69 = *v13++;
        char v70 = 16;
        switch(v69)
        {
          case 0:
            goto LABEL_121;
          case 3:
            goto LABEL_120;
          case 4:
            char v70 = 4;
            goto LABEL_120;
          case 5:
            char v70 = 32;
            goto LABEL_120;
          case 6:
            char v70 = 8;
LABEL_120:
            *(unsigned char *)(a1 + 84) |= v70;
            break;
          default:
            continue;
        }
      }
    }
    goto LABEL_121;
  }
  int v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(v3 + *v15)) {
      goto LABEL_110;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      BOOL v24 = v18++ >= 9;
      if (v24)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    int v26 = v19 & 7;
    if (v25 || v26 == 4) {
      goto LABEL_110;
    }
    unint64_t v28 = v19 >> 3;
    BOOL v29 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      uint64_t v30 = v13;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if ((v7 & 1) == 0) {
          goto LABEL_84;
        }
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        *(unsigned char *)(a1 + 84) |= 1u;
        while (1)
        {
          uint64_t v37 = *v14;
          uint64_t v38 = *(void *)(v3 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(v3 + *v6)) {
            break;
          }
          char v40 = *(unsigned char *)(*(void *)(v3 + *v16) + v38);
          *(void *)(v3 + v37) = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if ((v40 & 0x80) == 0) {
            goto LABEL_87;
          }
          v34 += 7;
          BOOL v24 = v35++ >= 9;
          if (v24)
          {
            LODWORD(v36) = 0;
            goto LABEL_89;
          }
        }
        *(unsigned char *)(v3 + *v15) = 1;
LABEL_87:
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v36) = 0;
        }
LABEL_89:
        uint64_t v60 = 76;
        goto LABEL_94;
      case 2:
        if ((v7 & 1) == 0) {
          goto LABEL_84;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v36 = 0;
        *(unsigned char *)(a1 + 84) |= 2u;
        while (2)
        {
          uint64_t v44 = *v14;
          uint64_t v45 = *(void *)(v3 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(v3 + *v16) + v45);
            *(void *)(v3 + v44) = v46;
            v36 |= (unint64_t)(v47 & 0x7F) << v42;
            if (v47 < 0)
            {
              v42 += 7;
              BOOL v24 = v43++ >= 9;
              if (v24)
              {
                LODWORD(v36) = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v36) = 0;
        }
LABEL_93:
        uint64_t v60 = 80;
LABEL_94:
        *(_DWORD *)(a1 + v60) = v36;
        goto LABEL_108;
      case 3:
        if (!v29) {
          goto LABEL_84;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x10) == 0)
        {
          uint64_t v48 = PBReaderReadString();
          uint64_t v49 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v48;

          --v8;
LABEL_107:
          int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_108:
          if (!(v12 & 1 | (v8 != 0)) || *(void *)(v3 + *v14) >= *(void *)(v3 + *v6)) {
            goto LABEL_110;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          v8 += *(unsigned __int8 *)(a1 + 84) << 27 >> 31;
          goto LABEL_107;
        }
LABEL_125:
        char v68 = 0;
        int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_112:
        *(unsigned char *)(a1 + 84) |= 0x10u;
        *(unsigned char *)(a1 + 84) |= 4u;
        *(unsigned char *)(a1 + 84) |= 0x20u;
        *(unsigned char *)(a1 + 84) |= 8u;
        if (v68)
        {
LABEL_121:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_122;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v12 & 1) == 0) {
          return v3;
        }
LABEL_122:
        char v71 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 4:
        if (!v29 || (*(unsigned char *)(a1 + 84) & 4) != 0) {
          goto LABEL_84;
        }
        if (v26 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_125;
          }
          while (1)
          {
            uint64_t v50 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
              break;
            }
            char v51 = 0;
            unsigned int v52 = 0;
            uint64_t v53 = 0;
            while (1)
            {
              uint64_t v54 = *v14;
              uint64_t v55 = *(void *)(v3 + v54);
              unint64_t v56 = v55 + 1;
              if (v55 == -1 || v56 > *(void *)(v3 + *v6)) {
                break;
              }
              char v57 = *(unsigned char *)(*(void *)(v3 + *v16) + v55);
              *(void *)(v3 + v54) = v56;
              v53 |= (unint64_t)(v57 & 0x7F) << v51;
              if (v57 < 0)
              {
                v51 += 7;
                BOOL v24 = v52++ >= 9;
                if (!v24) {
                  continue;
                }
              }
              goto LABEL_73;
            }
            *(unsigned char *)(v3 + *v50) = 1;
LABEL_73:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v61 = 0;
          unsigned int v62 = 0;
          uint64_t v63 = 0;
          while (1)
          {
            uint64_t v64 = *v14;
            uint64_t v65 = *(void *)(v3 + v64);
            unint64_t v66 = v65 + 1;
            if (v65 == -1 || v66 > *(void *)(v3 + *v6)) {
              break;
            }
            char v67 = *(unsigned char *)(*(void *)(v3 + *v16) + v65);
            *(void *)(v3 + v64) = v66;
            v63 |= (unint64_t)(v67 & 0x7F) << v61;
            if (v67 < 0)
            {
              v61 += 7;
              BOOL v24 = v62++ >= 9;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_106;
          }
          *(unsigned char *)(v3 + *v15) = 1;
LABEL_106:
          PBRepeatedInt32Add();
        }
        goto LABEL_107;
      case 5:
        if (!v29 || (*(unsigned char *)(a1 + 84) & 0x20) != 0) {
          goto LABEL_84;
        }
        unsigned int v58 = PBReaderReadString();
        if (!v58) {
          goto LABEL_83;
        }
        unsigned int v73 = v58;
        -[GEOSubactionMetaData _addNoFlagsDisplayedText:](a1, v58);
        goto LABEL_82;
      case 6:
        if (v29 && (*(unsigned char *)(a1 + 84) & 8) == 0)
        {
          unsigned int v58 = PBReaderReadString();
          if (v58)
          {
            unsigned int v73 = v58;
            -[GEOSubactionMetaData _addNoFlagsChildItemSubactionType:](a1, v58);
LABEL_82:
            unsigned int v58 = v73;
          }
LABEL_83:

          goto LABEL_107;
        }
LABEL_84:
        char v59 = PBReaderSkipValueWithTag();
        int v15 = (int *)MEMORY[0x1E4F940C8];
        if ((v59 & 1) == 0)
        {
LABEL_124:
          char v68 = 0;
          goto LABEL_112;
        }
        goto LABEL_108;
      default:
        int v41 = PBReaderSkipValueWithTag();
        int v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v41) {
          goto LABEL_124;
        }
        goto LABEL_108;
    }
  }
}

void sub_18A013344(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0137D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A013B94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0148F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSubactionMetaDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOSubactionMetaDataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOSubactionMetaDataReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOSubactionMetaDataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOSubactionMetaDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18A014A80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSubactionMetaDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOSubactionMetaDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A014AE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A014E34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSubactionMetaDataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(unsigned char *)(a1 + 84) & 0x7C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_18A01540C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEORegionalResourceTileKeyActiveScenariosBitSet(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  uint64_t v2 = [v1 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    LODWORD(v4) = 0;
    uint64_t v5 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v1);
        }
        unsigned int v7 = [*(id *)(*((void *)&v10 + 1) + 8 * i) intValue];
        int v8 = 1 << v7;
        if (v7 > 6) {
          int v8 = 0;
        }
        uint64_t v4 = v8 | v4;
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

id _geo_requestClassForMessageType(int a1)
{
  uint64_t v3 = 0;
  switch(a1)
  {
    case 1005:
    case 1009:
    case 1010:
    case 1013:
    case 1014:
    case 1015:
    case 1016:
    case 1017:
    case 1021:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1028:
LABEL_3:
      uint64_t v3 = objc_opt_class();
      break;
    case 1006:
    case 1007:
    case 1008:
    case 1011:
    case 1012:
    case 1018:
    case 1019:
    case 1020:
    case 1022:
    case 1023:
      break;
    default:
      switch(a1)
      {
        case '+':
        case ',':
        case '.':
        case '0':
        case '1':
        case '2':
        case '4':
        case '5':
        case '6':
        case ':':
        case '<':
          goto LABEL_3;
        default:
          goto LABEL_4;
      }
  }
LABEL_4:
  return v3;
}

id _geo_responseClassForMessageType(int a1)
{
  uint64_t v3 = 0;
  switch(a1)
  {
    case 1005:
    case 1009:
    case 1010:
    case 1013:
    case 1014:
    case 1015:
    case 1016:
    case 1017:
    case 1021:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1028:
LABEL_3:
      uint64_t v3 = objc_opt_class();
      break;
    case 1006:
    case 1007:
    case 1008:
    case 1011:
    case 1012:
    case 1018:
    case 1019:
    case 1020:
    case 1022:
    case 1023:
      break;
    default:
      switch(a1)
      {
        case '+':
        case ',':
        case '.':
        case '0':
        case '1':
        case '2':
        case '4':
        case '5':
        case '6':
        case ':':
        case '<':
          goto LABEL_3;
        default:
          goto LABEL_4;
      }
  }
LABEL_4:
  return v3;
}

void sub_18A018150(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 168), 8);
  _Unwind_Resume(a1);
}

void sub_18A01CCE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A01CE24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A01D35C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18A01EE04(_Unwind_Exception *a1)
{
}

void setupGYBStatements(void *a1, int a2)
{
  id v3 = a1;
  if (a2) {
    uint64_t v4 = "DROP TABLE reqcountdata";
  }
  else {
    uint64_t v4 = 0;
  }
  id v9 = v3;
  if (objc_msgSend(v3, "createTable:withDrop:", "CREATE TABLE IF NOT EXISTS reqcountdata(   startTime REAL NOT NULL,    endTime REAL NOT NULL,    appid TEXT NOT NULL,    requesttype INT NOT NULL,    result INT NOT NULL,    xmitbytes INT NOT NULL,    recvbytes INT NOT NULL,    interface INT NOT NULL   );",
                       v4))
  {
    uint64_t v5 = a2 ? "DROP TABLE proactivetile" : 0;
    if (objc_msgSend(v9, "createTable:withDrop:", "CREATE TABLE IF NOT EXISTS proactivetile(   identifier TEXT NOT NULL,    policy INT NOT NULL,    start_timestamp INT NOT NULL,    end_timestamp INT,    tile_count INT,    dl_attempts INT,    success_count INT,    failure_count INT,    bytes_downloaded INT   );",
                         v5))
    {
      char v6 = a2 ? "DROP TABLE route_preload_sessions" : 0;
      if (objc_msgSend(v9, "createTable:withDrop:", "CREATE TABLE IF NOT EXISTS route_preload_sessions(   start_time INT NOT NULL,    end_time INT NOT NULL,    transport_type INT NOT NULL,    tiles_preloaded INT NOT NULL,    tiles_used INT NOT NULL,    tiles_missed INT NOT NULL   );",
                           v6))
      {
        unsigned int v7 = a2 ? "DROP TABLE externalreqcountdata" : 0;
        if (objc_msgSend(v9, "createTable:withDrop:", "CREATE TABLE IF NOT EXISTS externalreqcountdata(   startTime REAL NOT NULL,    endTime REAL NOT NULL,    xmitbytes INT,    recvbytes INT,    interface INT,    appid TEXT NOT NULL,    requesttype TEXT NOT NULL,    requestsubtype TEXT,    source TEXT   );",
                             v7))
        {
          int v8 = a2 ? "DROP TABLE placecache" : 0;
          if (objc_msgSend(v9, "createTable:withDrop:", "CREATE TABLE IF NOT EXISTS placecache(   timestamp REAL NOT NULL,    appid TEXT NOT NULL,    requesttype INT NOT NULL,    result INT NOT NULL   );",
                               v8)
            && objc_msgSend(v9, "prepareStatement:forKey:", "INSERT INTO reqcountdata    (startTime, endTime, appid, requesttype, result, xmitbytes, recvbytes, interface)    VALUES (@startTime, @endTime, @appid, @requesttype, @result, @xmitbytes, @recvbytes, @interface);",
                               @"reqcountdata_insert")
            && objc_msgSend(v9, "prepareStatement:forKey:", "SELECT startTime, endTime, appid, requesttype, result, xmitbytes, recvbytes, interface    FROM reqcountdata    WHERE startTime >= @startTime and endTime <= @endTime    ORDER BY startTime, rowid;",
                               @"reqcountdata_readlog")
            && objc_msgSend(v9, "prepareStatement:forKey:", "SELECT appid, requesttype, result, xmitbytes, recvbytes, startTime, endTime, interface    FROM reqcountdata    WHERE startTime >= @startTime and endTime <= @endTime;",
                               @"reqcountdata_readcounts")
            && objc_msgSend(v9, "prepareStatement:forKey:", "DELETE FROM reqcountdata    WHERE startTime < @startTime;",
                               @"reqcountdata_prune")
            && objc_msgSend(v9, "prepareStatement:forKey:", "DELETE FROM reqcountdata;",
                               @"reqcountdata_deleteall")
            && objc_msgSend(v9, "prepareStatement:forKey:", "INSERT INTO proactivetile    (identifier, policy, start_timestamp, end_timestamp, tile_count, dl_attempts, success_count, failure_count, bytes_downloaded)    VALUES (@identifier, @policy, @start_timestamp, NULL, NULL, NULL, NULL, NULL, NULL);",
                               @"proactivetile_insertstart")
            && objc_msgSend(v9, "prepareStatement:forKey:", "UPDATE proactivetile    SET end_timestamp = @end_timestamp, tile_count = @tile_count, dl_attempts = @dl_attempts, success_count = @success_count, failure_count = @failure_count, bytes_downloaded = @bytes_downloaded    WHERE identifier = @identifier AND policy = @policy;",
                               @"proactivetile_insertend")
            && objc_msgSend(v9, "prepareStatement:forKey:", "DELETE FROM proactivetile;",
                               @"proactivetile_deleteall")
            && objc_msgSend(v9, "prepareStatement:forKey:", "SELECT identifier, policy, start_timestamp, end_timestamp, tile_count, dl_attempts, success_count, failure_count, bytes_downloaded    FROM proactivetile    WHERE start_timestamp >= @start_timestamp    ORDER BY start_timestamp;",
                               @"proactivetile_query")
            && objc_msgSend(v9, "prepareStatement:forKey:", "INSERT INTO route_preload_sessions    (start_time, end_time, transport_type, tiles_preloaded, tiles_used, tiles_missed)    VALUES (@start_time, @end_time, @transport_type, @tiles_preloaded, @tiles_used, @tiles_missed);",
                               @"routepreload_insert")
            && objc_msgSend(v9, "prepareStatement:forKey:", "SELECT start_time, end_time, transport_type, tiles_preloaded, tiles_used, tiles_missed    FROM route_preload_sessions    WHERE start_time >= @start_time;",
                               @"routepreload_read")
            && objc_msgSend(v9, "prepareStatement:forKey:", "INSERT INTO externalreqcountdata    (startTime, endTime, xmitbytes, recvbytes, interface, appid, requesttype, requestsubtype, source)    VALUES (@startTime, @endTime, @xmitbytes, @recvbytes, @interface, @appid, @requesttype, @requestsubtype, @source);",
                               @"externalreqcountdata_insert")
            && objc_msgSend(v9, "prepareStatement:forKey:", "SELECT startTime, endTime, xmitbytes, recvbytes, interface, appid, requesttype, requestsubtype, source    FROM externalreqcountdata;",
                               @"externalreqcountdata_readcounts")
            && objc_msgSend(v9, "prepareStatement:forKey:", "DELETE FROM externalreqcountdata    WHERE startTime < @startTime;",
                               @"externalreqcountdata_prune")
            && objc_msgSend(v9, "prepareStatement:forKey:", "DELETE FROM externalreqcountdata;",
                               @"externalreqcountdata_deleteall")
            && objc_msgSend(v9, "prepareStatement:forKey:", "INSERT INTO placecache    (timestamp, appid, requesttype, result)    VALUES (@timestamp, @appid, @requesttype, @result);",
                               @"placecache_insert")
            && objc_msgSend(v9, "prepareStatement:forKey:", "SELECT appid, requesttype, result, timestamp    FROM placecache    WHERE timestamp >= @begin and timestamp <= @end;",
                               @"placecache_readcounts")
            && objc_msgSend(v9, "prepareStatement:forKey:", "DELETE FROM placecache    WHERE timestamp < @timestamp;",
                               @"placecache_prune"))
          {
            [v9 prepareStatement:"DELETE FROM placecache;" forKey:@"placecache_deleteall"];
          }
        }
      }
    }
  }
}

void sub_18A021448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_18A021934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A021F50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A02267C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_18A022A74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_18A022D0C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_18A0231C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

void sub_18A0236F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A023870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A023B30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A0240BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
}

void sub_18A024370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A024684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A024A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __reqcountdata_insert_block_invoke(double *a1, uint64_t a2)
{
  uint64_t v4 = (void *)*((void *)a1 + 4);
  double v5 = a1[7];
  uint64_t v6 = *(void *)(*((void *)a1 + 6) + 8);
  id v44 = *(id *)(v6 + 40);
  int v7 = [v4 bindRealParameter:"@startTime" toValue:a2 inStatement:&v44 error:v5];
  objc_storeStrong((id *)(v6 + 40), v44);
  if (!v7) {
    return 0;
  }
  int v8 = (void *)*((void *)a1 + 4);
  double v9 = a1[8];
  uint64_t v10 = *(void *)(*((void *)a1 + 6) + 8);
  id obj = *(id *)(v10 + 40);
  int v11 = [v8 bindRealParameter:"@endTime" toValue:a2 inStatement:&obj error:v9];
  objc_storeStrong((id *)(v10 + 40), obj);
  if (!v11) {
    return 0;
  }
  long long v12 = (void *)*((void *)a1 + 4);
  uint64_t v13 = *((void *)a1 + 5);
  uint64_t v14 = *(void *)(*((void *)a1 + 6) + 8);
  id v42 = *(id *)(v14 + 40);
  int v15 = [v12 bindTextParameter:"@appid" toValue:v13 inStatement:a2 error:&v42];
  objc_storeStrong((id *)(v14 + 40), v42);
  if (!v15) {
    return 0;
  }
  int v16 = (void *)*((void *)a1 + 4);
  uint64_t v17 = *((void *)a1 + 9);
  uint64_t v18 = *(void *)(*((void *)a1 + 6) + 8);
  id v41 = *(id *)(v18 + 40);
  int v19 = [v16 bindInt64Parameter:"@requesttype" toValue:v17 inStatement:a2 error:&v41];
  objc_storeStrong((id *)(v18 + 40), v41);
  if (!v19) {
    return 0;
  }
  uint64_t v20 = (void *)*((void *)a1 + 4);
  uint64_t v21 = *((void *)a1 + 10);
  uint64_t v22 = *(void *)(*((void *)a1 + 6) + 8);
  id v40 = *(id *)(v22 + 40);
  int v23 = [v20 bindInt64Parameter:"@result" toValue:v21 inStatement:a2 error:&v40];
  objc_storeStrong((id *)(v22 + 40), v40);
  if (!v23) {
    return 0;
  }
  BOOL v24 = (void *)*((void *)a1 + 4);
  uint64_t v25 = *((void *)a1 + 11);
  uint64_t v26 = *(void *)(*((void *)a1 + 6) + 8);
  id v39 = *(id *)(v26 + 40);
  int v27 = [v24 bindInt64Parameter:"@xmitbytes" toValue:v25 inStatement:a2 error:&v39];
  objc_storeStrong((id *)(v26 + 40), v39);
  if (!v27) {
    return 0;
  }
  unint64_t v28 = (void *)*((void *)a1 + 4);
  uint64_t v29 = *((void *)a1 + 12);
  uint64_t v30 = *(void *)(*((void *)a1 + 6) + 8);
  id v38 = *(id *)(v30 + 40);
  int v31 = [v28 bindInt64Parameter:"@recvbytes" toValue:v29 inStatement:a2 error:&v38];
  objc_storeStrong((id *)(v30 + 40), v38);
  if (!v31) {
    return 0;
  }
  int v32 = (void *)*((void *)a1 + 4);
  uint64_t v33 = *((void *)a1 + 13);
  uint64_t v34 = *(void *)(*((void *)a1 + 6) + 8);
  id v37 = *(id *)(v34 + 40);
  uint64_t v35 = [v32 bindInt64Parameter:"@interface" toValue:v33 inStatement:a2 error:&v37];
  objc_storeStrong((id *)(v34 + 40), v37);
  return v35;
}

uint64_t __reqcountdata_readcounts_block_invoke(uint64_t a1, sqlite3_stmt *a2)
{
  uint64_t v4 = *(void **)(a1 + 32);
  double v5 = *(double *)(a1 + 56);
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  id obj = *(id *)(v6 + 40);
  uint64_t v7 = [v4 bindRealParameter:"@startTime" toValue:a2 inStatement:&obj error:v5];
  objc_storeStrong((id *)(v6 + 40), obj);
  if (v7)
  {
    int v8 = *(void **)(a1 + 32);
    double v9 = *(double *)(a1 + 64);
    uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
    id v22 = *(id *)(v10 + 40);
    uint64_t v7 = [v8 bindRealParameter:"@endTime" toValue:a2 inStatement:&v22 error:v9];
    objc_storeStrong((id *)(v10 + 40), v22);
    if (v7)
    {
      uint64_t v11 = sqlite3_step(a2);
      while (v11 == 100)
      {
        long long v12 = [*(id *)(a1 + 32) stringForColumn:0 inStatment:a2];
        uint64_t v7 = 1;
        [*(id *)(a1 + 32) int64ForColumn:1 inStatment:a2];
        [*(id *)(a1 + 32) int64ForColumn:2 inStatment:a2];
        [*(id *)(a1 + 32) int64ForColumn:3 inStatment:a2];
        [*(id *)(a1 + 32) int64ForColumn:4 inStatment:a2];
        [*(id *)(a1 + 32) doubleForColumn:5 inStatment:a2];
        double v14 = v13;
        [*(id *)(a1 + 32) doubleForColumn:6 inStatment:a2];
        double v16 = v15;
        [*(id *)(a1 + 32) int64ForColumn:7 inStatment:a2];
        if (!(*(unsigned int (**)(double, double))(*(void *)(a1 + 40) + 16))(v14, v16)) {
          goto LABEL_10;
        }
        uint64_t v11 = sqlite3_step(a2);
      }
      if (v11 == 101) {
        return 1;
      }
      uint64_t v17 = *(void **)(a1 + 32);
      uint64_t v18 = *(void *)(*(void *)(a1 + 48) + 8);
      id v21 = *(id *)(v18 + 40);
      [v17 reportSQLiteErrorCode:v11 method:@"step" error:&v21];
      id v19 = v21;
      uint64_t v7 = 0;
      long long v12 = *(void **)(v18 + 40);
      *(void *)(v18 + 40) = v19;
LABEL_10:
    }
  }
  return v7;
}

uint64_t __reqcountdata_readlog_block_invoke(uint64_t a1, sqlite3_stmt *a2)
{
  uint64_t v4 = *(void **)(a1 + 32);
  double v5 = *(double *)(a1 + 56);
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  id obj = *(id *)(v6 + 40);
  int v7 = [v4 bindRealParameter:"@startTime" toValue:a2 inStatement:&obj error:v5];
  objc_storeStrong((id *)(v6 + 40), obj);
  if (!v7) {
    return 0;
  }
  int v8 = *(void **)(a1 + 32);
  double v9 = *(double *)(a1 + 64);
  uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
  id v24 = *(id *)(v10 + 40);
  int v11 = [v8 bindRealParameter:"@endTime" toValue:a2 inStatement:&v24 error:v9];
  objc_storeStrong((id *)(v10 + 40), v24);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = sqlite3_step(a2);
  while (v12 == 100)
  {
    [*(id *)(a1 + 32) doubleForColumn:0 inStatment:a2];
    double v14 = v13;
    uint64_t v15 = 1;
    [*(id *)(a1 + 32) doubleForColumn:1 inStatment:a2];
    double v17 = v16;
    uint64_t v18 = [*(id *)(a1 + 32) stringForColumn:2 inStatment:a2];
    [*(id *)(a1 + 32) int64ForColumn:3 inStatment:a2];
    [*(id *)(a1 + 32) int64ForColumn:4 inStatment:a2];
    [*(id *)(a1 + 32) int64ForColumn:5 inStatment:a2];
    [*(id *)(a1 + 32) int64ForColumn:6 inStatment:a2];
    [*(id *)(a1 + 32) int64ForColumn:7 inStatment:a2];
    if (!(*(unsigned int (**)(double, double))(*(void *)(a1 + 40) + 16))(v14, v17)) {
      goto LABEL_10;
    }
    uint64_t v12 = sqlite3_step(a2);
  }
  if (v12 == 101) {
    return 1;
  }
  id v19 = *(void **)(a1 + 32);
  uint64_t v20 = *(void *)(*(void *)(a1 + 48) + 8);
  id v23 = *(id *)(v20 + 40);
  [v19 reportSQLiteErrorCode:v12 method:@"step" error:&v23];
  id v21 = v23;
  uint64_t v15 = 0;
  uint64_t v18 = *(void **)(v20 + 40);
  *(void *)(v20 + 40) = v21;
LABEL_10:

  return v15;
}

uint64_t __reqcountdata_prune_block_invoke(double *a1, uint64_t a2)
{
  double v2 = a1[6];
  id v3 = (void *)*((void *)a1 + 4);
  uint64_t v4 = *(void *)(*((void *)a1 + 5) + 8);
  id obj = *(id *)(v4 + 40);
  uint64_t v5 = [v3 bindRealParameter:"@startTime" toValue:a2 inStatement:&obj error:v2];
  objc_storeStrong((id *)(v4 + 40), obj);
  return v5;
}

uint64_t __externalreqcountdata_prune_block_invoke(double *a1, uint64_t a2)
{
  double v2 = a1[6];
  id v3 = (void *)*((void *)a1 + 4);
  uint64_t v4 = *(void *)(*((void *)a1 + 5) + 8);
  id obj = *(id *)(v4 + 40);
  uint64_t v5 = [v3 bindRealParameter:"@startTime" toValue:a2 inStatement:&obj error:v2];
  objc_storeStrong((id *)(v4 + 40), obj);
  return v5;
}

uint64_t __placecache_prune_block_invoke(double *a1, uint64_t a2)
{
  double v2 = a1[6];
  id v3 = (void *)*((void *)a1 + 4);
  uint64_t v4 = *(void *)(*((void *)a1 + 5) + 8);
  id obj = *(id *)(v4 + 40);
  uint64_t v5 = [v3 bindRealParameter:"@timestamp" toValue:a2 inStatement:&obj error:v2];
  objc_storeStrong((id *)(v4 + 40), obj);
  return v5;
}

uint64_t __reqcountdata_deleteall_block_invoke()
{
  return 1;
}

uint64_t __proactivetile_deleteall_block_invoke()
{
  return 1;
}

uint64_t __externalreqcountdata_deleteall_block_invoke()
{
  return 1;
}

uint64_t __placecache_deleteall_block_invoke()
{
  return 1;
}

uint64_t __proactivetile_insertstart_block_invoke(void *a1, uint64_t a2)
{
  uint64_t v4 = (void *)a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = *(void *)(a1[6] + 8);
  id obj = *(id *)(v6 + 40);
  int v7 = [v4 bindTextParameter:"@identifier" toValue:v5 inStatement:a2 error:&obj];
  objc_storeStrong((id *)(v6 + 40), obj);
  if (!v7) {
    return 0;
  }
  int v8 = (void *)a1[4];
  uint64_t v9 = a1[7];
  uint64_t v10 = *(void *)(a1[6] + 8);
  id v18 = *(id *)(v10 + 40);
  int v11 = [v8 bindInt64Parameter:"@policy" toValue:v9 inStatement:a2 error:&v18];
  objc_storeStrong((id *)(v10 + 40), v18);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = (void *)a1[4];
  uint64_t v13 = a1[8];
  uint64_t v14 = *(void *)(a1[6] + 8);
  id v17 = *(id *)(v14 + 40);
  uint64_t v15 = [v12 bindInt64Parameter:"@start_timestamp" toValue:v13 inStatement:a2 error:&v17];
  objc_storeStrong((id *)(v14 + 40), v17);
  return v15;
}

uint64_t __proactivetile_insertend_block_invoke(void *a1, uint64_t a2)
{
  uint64_t v4 = (void *)a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = *(void *)(a1[6] + 8);
  id v44 = *(id *)(v6 + 40);
  int v7 = [v4 bindTextParameter:"@identifier" toValue:v5 inStatement:a2 error:&v44];
  objc_storeStrong((id *)(v6 + 40), v44);
  if (!v7) {
    return 0;
  }
  int v8 = (void *)a1[4];
  uint64_t v9 = a1[7];
  uint64_t v10 = *(void *)(a1[6] + 8);
  id obj = *(id *)(v10 + 40);
  int v11 = [v8 bindInt64Parameter:"@policy" toValue:v9 inStatement:a2 error:&obj];
  objc_storeStrong((id *)(v10 + 40), obj);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = (void *)a1[4];
  uint64_t v13 = a1[8];
  uint64_t v14 = *(void *)(a1[6] + 8);
  id v42 = *(id *)(v14 + 40);
  int v15 = [v12 bindInt64Parameter:"@end_timestamp" toValue:v13 inStatement:a2 error:&v42];
  objc_storeStrong((id *)(v14 + 40), v42);
  if (!v15) {
    return 0;
  }
  double v16 = (void *)a1[4];
  uint64_t v17 = a1[9];
  uint64_t v18 = *(void *)(a1[6] + 8);
  id v41 = *(id *)(v18 + 40);
  int v19 = [v16 bindInt64Parameter:"@tile_count" toValue:v17 inStatement:a2 error:&v41];
  objc_storeStrong((id *)(v18 + 40), v41);
  if (!v19) {
    return 0;
  }
  uint64_t v20 = (void *)a1[4];
  uint64_t v21 = a1[10];
  uint64_t v22 = *(void *)(a1[6] + 8);
  id v40 = *(id *)(v22 + 40);
  int v23 = [v20 bindInt64Parameter:"@dl_attempts" toValue:v21 inStatement:a2 error:&v40];
  objc_storeStrong((id *)(v22 + 40), v40);
  if (!v23) {
    return 0;
  }
  id v24 = (void *)a1[4];
  uint64_t v25 = a1[11];
  uint64_t v26 = *(void *)(a1[6] + 8);
  id v39 = *(id *)(v26 + 40);
  int v27 = [v24 bindInt64Parameter:"@success_count" toValue:v25 inStatement:a2 error:&v39];
  objc_storeStrong((id *)(v26 + 40), v39);
  if (!v27) {
    return 0;
  }
  unint64_t v28 = (void *)a1[4];
  uint64_t v29 = a1[12];
  uint64_t v30 = *(void *)(a1[6] + 8);
  id v38 = *(id *)(v30 + 40);
  int v31 = [v28 bindInt64Parameter:"@failure_count" toValue:v29 inStatement:a2 error:&v38];
  objc_storeStrong((id *)(v30 + 40), v38);
  if (!v31) {
    return 0;
  }
  int v32 = (void *)a1[4];
  uint64_t v33 = a1[13];
  uint64_t v34 = *(void *)(a1[6] + 8);
  id v37 = *(id *)(v34 + 40);
  uint64_t v35 = [v32 bindInt64Parameter:"@bytes_downloaded" toValue:v33 inStatement:a2 error:&v37];
  objc_storeStrong((id *)(v34 + 40), v37);
  return v35;
}

uint64_t __proactivetile_query_block_invoke(uint64_t a1, sqlite3_stmt *a2)
{
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  id obj = *(id *)(v6 + 40);
  uint64_t v7 = [v4 bindInt64Parameter:"@start_timestamp" toValue:v5 inStatement:a2 error:&obj];
  objc_storeStrong((id *)(v6 + 40), obj);
  if (v7)
  {
    uint64_t v8 = sqlite3_step(a2);
    while (v8 == 100)
    {
      uint64_t v9 = [*(id *)(a1 + 32) stringForColumn:0 inStatment:a2];
      uint64_t v7 = 1;
      if (!(*(unsigned int (**)(void, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), v9, [*(id *)(a1 + 32) int64ForColumn:1 inStatment:a2], objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 2, a2), objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 3, a2), objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 4, a2), objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 5, a2), objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 6, a2), objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 7, a2), objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 8, a2)))goto LABEL_9; {
      uint64_t v8 = sqlite3_step(a2);
      }
    }
    if (v8 == 101) {
      return 1;
    }
    uint64_t v10 = *(void **)(a1 + 32);
    uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 8);
    id v14 = *(id *)(v11 + 40);
    [v10 reportSQLiteErrorCode:v8 method:@"step" error:&v14];
    id v12 = v14;
    uint64_t v7 = 0;
    uint64_t v9 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = v12;
LABEL_9:
  }
  return v7;
}

uint64_t __routepreload_insert_block_invoke(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[6];
  uint64_t v5 = (void *)a1[4];
  uint64_t v6 = *(void *)(a1[5] + 8);
  id obj = *(id *)(v6 + 40);
  int v7 = [v5 bindInt64Parameter:"@start_time" toValue:v4 inStatement:a2 error:&obj];
  objc_storeStrong((id *)(v6 + 40), obj);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = a1[7];
  uint64_t v9 = (void *)a1[4];
  uint64_t v10 = *(void *)(a1[5] + 8);
  id v33 = *(id *)(v10 + 40);
  int v11 = [v9 bindInt64Parameter:"@end_time" toValue:v8 inStatement:a2 error:&v33];
  objc_storeStrong((id *)(v10 + 40), v33);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = a1[8];
  uint64_t v13 = (void *)a1[4];
  uint64_t v14 = *(void *)(a1[5] + 8);
  id v32 = *(id *)(v14 + 40);
  int v15 = [v13 bindInt64Parameter:"@transport_type" toValue:v12 inStatement:a2 error:&v32];
  objc_storeStrong((id *)(v14 + 40), v32);
  if (!v15) {
    return 0;
  }
  uint64_t v16 = a1[9];
  uint64_t v17 = (void *)a1[4];
  uint64_t v18 = *(void *)(a1[5] + 8);
  id v31 = *(id *)(v18 + 40);
  int v19 = [v17 bindInt64Parameter:"@tiles_preloaded" toValue:v16 inStatement:a2 error:&v31];
  objc_storeStrong((id *)(v18 + 40), v31);
  if (!v19) {
    return 0;
  }
  uint64_t v20 = a1[10];
  uint64_t v21 = (void *)a1[4];
  uint64_t v22 = *(void *)(a1[5] + 8);
  id v30 = *(id *)(v22 + 40);
  int v23 = [v21 bindInt64Parameter:"@tiles_used" toValue:v20 inStatement:a2 error:&v30];
  objc_storeStrong((id *)(v22 + 40), v30);
  if (!v23) {
    return 0;
  }
  uint64_t v24 = a1[11];
  uint64_t v25 = (void *)a1[4];
  uint64_t v26 = *(void *)(a1[5] + 8);
  id v29 = *(id *)(v26 + 40);
  uint64_t v27 = [v25 bindInt64Parameter:"@tiles_missed" toValue:v24 inStatement:a2 error:&v29];
  objc_storeStrong((id *)(v26 + 40), v29);
  return v27;
}

uint64_t __routepreload_read_block_invoke(uint64_t a1, sqlite3_stmt *a2)
{
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  id obj = *(id *)(v6 + 40);
  int v7 = [v4 bindInt64Parameter:"@start_time" toValue:v5 inStatement:a2 error:&obj];
  objc_storeStrong((id *)(v6 + 40), obj);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = sqlite3_step(a2);
  uint64_t v9 = 1;
  while (v8 == 100)
  {
    [*(id *)(a1 + 32) int64ForColumn:0 inStatment:a2];
    [*(id *)(a1 + 32) int64ForColumn:1 inStatment:a2];
    [*(id *)(a1 + 32) int64ForColumn:2 inStatment:a2];
    [*(id *)(a1 + 32) int64ForColumn:3 inStatment:a2];
    [*(id *)(a1 + 32) int64ForColumn:4 inStatment:a2];
    [*(id *)(a1 + 32) int64ForColumn:5 inStatment:a2];
    if (!(*(unsigned int (**)(void))(*(void *)(a1 + 40) + 16))()) {
      return v9;
    }
    uint64_t v8 = sqlite3_step(a2);
  }
  if (v8 != 101)
  {
    uint64_t v10 = *(void **)(a1 + 32);
    uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 8);
    id v13 = *(id *)(v11 + 40);
    [v10 reportSQLiteErrorCode:v8 method:@"step" error:&v13];
    objc_storeStrong((id *)(v11 + 40), v13);
    return 0;
  }
  return 1;
}

uint64_t __externalreqcountdata_insert_block_invoke(double *a1, uint64_t a2)
{
  uint64_t v4 = (void *)*((void *)a1 + 4);
  double v5 = a1[10];
  uint64_t v6 = *(void *)(*((void *)a1 + 9) + 8);
  id v49 = *(id *)(v6 + 40);
  int v7 = [v4 bindRealParameter:"@startTime" toValue:a2 inStatement:&v49 error:v5];
  objc_storeStrong((id *)(v6 + 40), v49);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = (void *)*((void *)a1 + 4);
  double v9 = a1[11];
  uint64_t v10 = *(void *)(*((void *)a1 + 9) + 8);
  id v48 = *(id *)(v10 + 40);
  int v11 = [v8 bindRealParameter:"@endTime" toValue:a2 inStatement:&v48 error:v9];
  objc_storeStrong((id *)(v10 + 40), v48);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = (void *)*((void *)a1 + 4);
  uint64_t v13 = *((void *)a1 + 12);
  uint64_t v14 = *(void *)(*((void *)a1 + 9) + 8);
  id obj = *(id *)(v14 + 40);
  int v15 = [v12 bindInt64Parameter:"@xmitbytes" toValue:v13 inStatement:a2 error:&obj];
  objc_storeStrong((id *)(v14 + 40), obj);
  if (!v15) {
    return 0;
  }
  uint64_t v16 = (void *)*((void *)a1 + 4);
  uint64_t v17 = *((void *)a1 + 13);
  uint64_t v18 = *(void *)(*((void *)a1 + 9) + 8);
  id v46 = *(id *)(v18 + 40);
  int v19 = [v16 bindInt64Parameter:"@recvbytes" toValue:v17 inStatement:a2 error:&v46];
  objc_storeStrong((id *)(v18 + 40), v46);
  if (!v19) {
    return 0;
  }
  uint64_t v20 = (void *)*((void *)a1 + 4);
  uint64_t v21 = *((void *)a1 + 14);
  uint64_t v22 = *(void *)(*((void *)a1 + 9) + 8);
  id v45 = *(id *)(v22 + 40);
  int v23 = [v20 bindInt64Parameter:"@interface" toValue:v21 inStatement:a2 error:&v45];
  objc_storeStrong((id *)(v22 + 40), v45);
  if (!v23) {
    return 0;
  }
  uint64_t v24 = (void *)*((void *)a1 + 4);
  uint64_t v25 = *((void *)a1 + 5);
  uint64_t v26 = *(void *)(*((void *)a1 + 9) + 8);
  id v44 = *(id *)(v26 + 40);
  int v27 = [v24 bindTextParameter:"@appid" toValue:v25 inStatement:a2 error:&v44];
  objc_storeStrong((id *)(v26 + 40), v44);
  if (!v27) {
    return 0;
  }
  unint64_t v28 = (void *)*((void *)a1 + 4);
  uint64_t v29 = *((void *)a1 + 6);
  uint64_t v30 = *(void *)(*((void *)a1 + 9) + 8);
  id v43 = *(id *)(v30 + 40);
  int v31 = [v28 bindTextParameter:"@requesttype" toValue:v29 inStatement:a2 error:&v43];
  objc_storeStrong((id *)(v30 + 40), v43);
  if (!v31) {
    return 0;
  }
  id v32 = (void *)*((void *)a1 + 4);
  uint64_t v33 = *((void *)a1 + 7);
  uint64_t v34 = *(void *)(*((void *)a1 + 9) + 8);
  id v42 = *(id *)(v34 + 40);
  int v35 = [v32 bindTextParameter:"@requestsubtype" toValue:v33 inStatement:a2 error:&v42];
  objc_storeStrong((id *)(v34 + 40), v42);
  if (!v35) {
    return 0;
  }
  uint64_t v36 = (void *)*((void *)a1 + 4);
  uint64_t v37 = *((void *)a1 + 8);
  uint64_t v38 = *(void *)(*((void *)a1 + 9) + 8);
  id v41 = *(id *)(v38 + 40);
  uint64_t v39 = [v36 bindTextParameter:"@source" toValue:v37 inStatement:a2 error:&v41];
  objc_storeStrong((id *)(v38 + 40), v41);
  return v39;
}

BOOL __externalreqcountdata_readcounts_block_invoke(uint64_t a1, sqlite3_stmt *a2)
{
  uint64_t v4 = sqlite3_step(a2);
  do
  {
    if (v4 != 100) {
      break;
    }
    [*(id *)(a1 + 32) doubleForColumn:0 inStatment:a2];
    double v6 = v5;
    [*(id *)(a1 + 32) doubleForColumn:1 inStatment:a2];
    double v8 = v7;
    [*(id *)(a1 + 32) int64ForColumn:2 inStatment:a2];
    [*(id *)(a1 + 32) int64ForColumn:3 inStatment:a2];
    [*(id *)(a1 + 32) int64ForColumn:4 inStatment:a2];
    double v9 = [*(id *)(a1 + 32) stringForColumn:5 inStatment:a2];
    uint64_t v10 = [*(id *)(a1 + 32) stringForColumn:6 inStatment:a2];
    int v11 = [*(id *)(a1 + 32) stringForColumn:7 inStatment:a2];
    uint64_t v12 = [*(id *)(a1 + 32) stringForColumn:8 inStatment:a2];
    int v13 = (*(uint64_t (**)(double, double))(*(void *)(a1 + 40) + 16))(v6, v8);
    char v14 = v13;
    uint64_t v4 = v13 ? sqlite3_step(a2) : 101;
  }
  while ((v14 & 1) != 0);
  if (v4 != 101)
  {
    int v15 = *(void **)(a1 + 32);
    uint64_t v16 = *(void *)(*(void *)(a1 + 48) + 8);
    id obj = *(id *)(v16 + 40);
    [v15 reportSQLiteErrorCode:v4 method:@"step" error:&obj];
    objc_storeStrong((id *)(v16 + 40), obj);
  }
  return v4 == 101;
}

uint64_t __placecache_insert_block_invoke(double *a1, uint64_t a2)
{
  uint64_t v4 = (void *)*((void *)a1 + 4);
  double v5 = a1[7];
  uint64_t v6 = *(void *)(*((void *)a1 + 6) + 8);
  id obj = *(id *)(v6 + 40);
  int v7 = [v4 bindRealParameter:"@timestamp" toValue:a2 inStatement:&obj error:v5];
  objc_storeStrong((id *)(v6 + 40), obj);
  if (!v7) {
    return 0;
  }
  double v8 = (void *)*((void *)a1 + 4);
  uint64_t v9 = *((void *)a1 + 5);
  uint64_t v10 = *(void *)(*((void *)a1 + 6) + 8);
  id v23 = *(id *)(v10 + 40);
  int v11 = [v8 bindTextParameter:"@appid" toValue:v9 inStatement:a2 error:&v23];
  objc_storeStrong((id *)(v10 + 40), v23);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = (void *)*((void *)a1 + 4);
  uint64_t v13 = *((void *)a1 + 8);
  uint64_t v14 = *(void *)(*((void *)a1 + 6) + 8);
  id v22 = *(id *)(v14 + 40);
  int v15 = [v12 bindInt64Parameter:"@requesttype" toValue:v13 inStatement:a2 error:&v22];
  objc_storeStrong((id *)(v14 + 40), v22);
  if (!v15) {
    return 0;
  }
  uint64_t v16 = (void *)*((void *)a1 + 4);
  uint64_t v17 = *((void *)a1 + 9);
  uint64_t v18 = *(void *)(*((void *)a1 + 6) + 8);
  id v21 = *(id *)(v18 + 40);
  uint64_t v19 = [v16 bindInt64Parameter:"@result" toValue:v17 inStatement:a2 error:&v21];
  objc_storeStrong((id *)(v18 + 40), v21);
  return v19;
}

uint64_t __placecache_readcounts_block_invoke(uint64_t a1, sqlite3_stmt *a2)
{
  uint64_t v4 = *(void **)(a1 + 32);
  double v5 = *(double *)(a1 + 56);
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  id obj = *(id *)(v6 + 40);
  uint64_t v7 = [v4 bindRealParameter:"@begin" toValue:a2 inStatement:&obj error:v5];
  objc_storeStrong((id *)(v6 + 40), obj);
  if (v7)
  {
    double v8 = *(void **)(a1 + 32);
    double v9 = *(double *)(a1 + 64);
    uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
    id v18 = *(id *)(v10 + 40);
    uint64_t v7 = [v8 bindRealParameter:"@end" toValue:a2 inStatement:&v18 error:v9];
    objc_storeStrong((id *)(v10 + 40), v18);
    if (v7)
    {
      uint64_t v11 = sqlite3_step(a2);
      while (v11 == 100)
      {
        uint64_t v12 = [*(id *)(a1 + 32) stringForColumn:0 inStatment:a2];
        uint64_t v7 = 1;
        [*(id *)(a1 + 32) int64ForColumn:1 inStatment:a2];
        [*(id *)(a1 + 32) int64ForColumn:2 inStatment:a2];
        [*(id *)(a1 + 32) doubleForColumn:3 inStatment:a2];
        if (!(*(unsigned int (**)(void))(*(void *)(a1 + 40) + 16))()) {
          goto LABEL_10;
        }
        uint64_t v11 = sqlite3_step(a2);
      }
      if (v11 == 101) {
        return 1;
      }
      uint64_t v13 = *(void **)(a1 + 32);
      uint64_t v14 = *(void *)(*(void *)(a1 + 48) + 8);
      id v17 = *(id *)(v14 + 40);
      [v13 reportSQLiteErrorCode:v11 method:@"step" error:&v17];
      id v15 = v17;
      uint64_t v7 = 0;
      uint64_t v12 = *(void **)(v14 + 40);
      *(void *)(v14 + 40) = v15;
LABEL_10:
    }
  }
  return v7;
}

void navdRestarted(uint64_t a1, void *a2)
{
  objc_initWeak(&location, a2);
  uint32_t v2 = arc4random_uniform(0x2EEu);
  dispatch_time_t v3 = dispatch_time(0, (uint64_t)((double)v2 / 1000.0 * 1000000000.0));
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  _OWORD v4[2] = __navdRestarted_block_invoke;
  v4[3] = &unk_1E53D7B90;
  objc_copyWeak(&v5, &location);
  dispatch_after(v3, MEMORY[0x1E4F14428], v4);
  objc_destroyWeak(&v5);
  objc_destroyWeak(&location);
}

void sub_18A0265D8(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_18A0267A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A026D2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,id a36)
{
}

uint64_t __Block_byref_object_copy__90(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x18C120660](*(void *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void __navdRestarted_block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained open];
}

void __GEOGetGeographicMetadataLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GeographicMetadata");
  uint64_t v1 = (void *)_MergedGlobals_314;
  _MergedGlobals_314 = (uint64_t)v0;
}

void sub_18A02A58C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double GEOAutomaticUpdateFrequencyForOfflineDataSize(unint64_t a1)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  _getValue(GeoOfflineConfig_AutomaticUpdatesFrequencyBuckets, (uint64_t)off_1E91157C8, 1, 0, 0, 0);
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v3 = [v2 countByEnumeratingWithState:&v20 objects:v24 count:16];
  double v4 = -1.0;
  if (v3)
  {
    uint64_t v5 = v3;
    uint64_t v6 = *(void *)v21;
LABEL_3:
    uint64_t v7 = 0;
    while (1)
    {
      if (*(void *)v21 != v6) {
        objc_enumerationMutation(v2);
      }
      double v8 = *(void **)(*((void *)&v20 + 1) + 8 * v7);
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)uint64_t v19 = 0;
          _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Assertion failed: [testBucket isKindOfClass:NSDictionary.class]", v19, 2u);
        }
        goto LABEL_11;
      }
      double v9 = [v8 objectForKeyedSubscript:@"sizeInMB"];
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t v10 = [v8 objectForKeyedSubscript:@"interval"];
        objc_opt_class();
        char isKindOfClass = objc_opt_isKindOfClass();

        if (isKindOfClass)
        {
          if (1000000 * [v9 unsignedLongLongValue] >= a1)
          {
            id v15 = v8;

            if (v15)
            {
              uint64_t v16 = [v15 objectForKeyedSubscript:@"interval"];
              [v16 doubleValue];
              double v4 = v17;

              goto LABEL_24;
            }
            double v4 = -1.0;
            goto LABEL_26;
          }
          goto LABEL_10;
        }
        if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)uint64_t v19 = 0;
          uint64_t v12 = MEMORY[0x1E4F14500];
          uint64_t v13 = "Assertion failed: [testBucket[IntervalBucketKey] isKindOfClass:NSNumber.class]";
          goto LABEL_19;
        }
      }
      else if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)uint64_t v19 = 0;
        uint64_t v12 = MEMORY[0x1E4F14500];
        uint64_t v13 = "Assertion failed: [sizeThresholdNumber isKindOfClass:NSNumber.class]";
LABEL_19:
        _os_log_fault_impl(&dword_188D96000, v12, OS_LOG_TYPE_FAULT, v13, v19, 2u);
      }
LABEL_10:

LABEL_11:
      if (v5 == ++v7)
      {
        uint64_t v14 = [v2 countByEnumeratingWithState:&v20 objects:v24 count:16];
        uint64_t v5 = v14;
        if (v14) {
          goto LABEL_3;
        }
        break;
      }
    }
  }
  id v15 = v2;
LABEL_24:

LABEL_26:
  return v4;
}

uint64_t GEOMaximumAutomaticUpdateOfflineDataSize()
{
  os_log_t v0 = _getValue(GeoOfflineConfig_AutomaticUpdatesFrequencyBuckets, (uint64_t)off_1E91157C8, 1, 0, 0, 0);
  uint64_t v1 = [v0 lastObject];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v2 = [v1 objectForKeyedSubscript:@"sizeInMB"];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v3 = 1000000 * [v2 unsignedIntegerValue];
    }
    else
    {
      if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)uint64_t v5 = 0;
        _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Assertion failed: [sizeThresholdNumber isKindOfClass:NSNumber.class]", v5, 2u);
      }
      uint64_t v3 = 0;
    }
  }
  else
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Assertion failed: [bucket isKindOfClass:NSDictionary.class]", buf, 2u);
    }
    uint64_t v3 = 0;
  }

  return v3;
}

void GEOFetchOfflineMapsDownloadURLForSFFlightLeg(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  qos_class_self();
  uint64_t v5 = geo_dispatch_queue_create_with_qos();
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __GEOFetchOfflineMapsDownloadURLForSFFlightLeg_block_invoke;
  block[3] = &unk_1E53D8E18;
  id v11 = v5;
  id v12 = v4;
  id v10 = v3;
  uint64_t v6 = v5;
  id v7 = v4;
  id v8 = v3;
  dispatch_async(v6, block);
}

void __GEOFetchOfflineMapsDownloadURLForSFFlightLeg_block_invoke(id *a1)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v2 = GEOGetOfflineUtilitiesLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    id v3 = a1[4];
    *(_DWORD *)buf = 138477827;
    id v26 = v3;
    _os_log_impl(&dword_188D96000, v2, OS_LOG_TYPE_DEBUG, "[Flight] Fetching offline punchout for flight leg: %{private}@", buf, 0xCu);
  }

  if (GEOConfigGetBOOL(GeoOfflineConfig_SpotlightFlightDetailsDownloadMapEnabled, (uint64_t)off_1E9115898))
  {
    if (GEOSupportsOfflineMaps())
    {
      id v4 = [a1[4] arrivalAirport];
      uint64_t v5 = [v4 location];
      [v5 lat];
      double v7 = v6;
      id v8 = [a1[4] arrivalAirport];
      double v9 = [v8 location];
      [v9 lng];
      double v11 = v10;

      id v12 = [GEOMapRegion alloc];
      double Double = GEOConfigGetDouble(GeoOfflineConfig_FlightLegDownloadRegionRadius, (uint64_t)off_1E91158A8);
      uint64_t v14 = [(GEOMapRegion *)v12 initWithMapRect:(double)GEOMapRectMakeWithRadialDistance(v7, v11, Double)];
      id v15 = [[GEOMapSubscriptionContainmentRequest alloc] initWithTraits:0 auditToken:0 throttleToken:0];
      [(GEOMapSubscriptionContainmentRequest *)v15 setRegion:v14];
      [(GEOMapSubscriptionContainmentRequest *)v15 setDataTypes:1024];
      v20[0] = MEMORY[0x1E4F143A8];
      v20[1] = 3221225472;
      _OWORD v20[2] = __GEOFetchOfflineMapsDownloadURLForSFFlightLeg_block_invoke_8;
      v20[3] = &unk_1E53ECF90;
      id v16 = a1[5];
      id v24 = a1[6];
      long long v21 = v14;
      id v22 = a1[5];
      id v23 = a1[4];
      double v17 = v14;
      [(GEOXPCRequest *)v15 send:0 withReply:v16 handler:v20];

      return;
    }
    id v18 = GEOGetOfflineUtilitiesLog();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      uint64_t v19 = "[Flight] Offline is not supported";
      goto LABEL_10;
    }
  }
  else
  {
    id v18 = GEOGetOfflineUtilitiesLog();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      uint64_t v19 = "[Flight] Not enabled";
LABEL_10:
      _os_log_impl(&dword_188D96000, v18, OS_LOG_TYPE_INFO, v19, buf, 2u);
    }
  }

  (*((void (**)(void))a1[6] + 2))();
}

id GEOGetOfflineUtilitiesLog()
{
  if (qword_1EB2A03D8 != -1) {
    dispatch_once(&qword_1EB2A03D8, &__block_literal_global_177);
  }
  os_log_t v0 = (void *)_MergedGlobals_315;

  return v0;
}

void __GEOFetchOfflineMapsDownloadURLForSFFlightLeg_block_invoke_8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    if (![v5 sufficientlyContained])
    {
      *(void *)&long long buf = 0;
      *((void *)&buf + 1) = &buf;
      uint64_t v24 = 0x3032000000;
      uint64_t v25 = __Block_byref_object_copy__87;
      id v26 = __Block_byref_object_dispose__87;
      id v27 = 0;
      v22[0] = 0;
      v22[1] = v22;
      v22[2] = 0x2810000000;
      v22[3] = "";
      v22[4] = 0;
      id v8 = objc_alloc_init(GEOMapDataSubscriptionManager);
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = *(void *)(a1 + 40);
      v16[0] = MEMORY[0x1E4F143A8];
      v16[1] = 3221225472;
      v16[2] = __GEOFetchOfflineMapsDownloadURLForSFFlightLeg_block_invoke_10;
      v16[3] = &unk_1E53ECF68;
      p_long long buf = &buf;
      long long v21 = v22;
      id v19 = *(id *)(a1 + 56);
      id v17 = *(id *)(a1 + 32);
      id v18 = *(id *)(a1 + 48);
      double v11 = [(GEOMapDataSubscriptionManager *)v8 determineEstimatedSizeForSubscriptionWithRegion:v9 dataTypes:1024 queue:v10 completionHandler:v16];
      GEOConfigGetDouble(GeoOfflineConfig_FlightLegEligibilityTimeout, (uint64_t)off_1E91158B8);
      id v14 = v11;
      id v15 = *(id *)(a1 + 56);
      uint64_t v12 = geo_dispatch_timer_create_on_queue();
      uint64_t v13 = *(void **)(*((void *)&buf + 1) + 40);
      *(void *)(*((void *)&buf + 1) + 40) = v12;

      dispatch_resume(*(dispatch_object_t *)(*((void *)&buf + 1) + 40));
      _Block_object_dispose(v22, 8);
      _Block_object_dispose(&buf, 8);

      goto LABEL_10;
    }
    double v7 = GEOGetOfflineUtilitiesLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      LOWORD(buf) = 0;
      _os_log_impl(&dword_188D96000, v7, OS_LOG_TYPE_INFO, "[Flight] Destination is sufficiently contained. Not enabling download action", (uint8_t *)&buf, 2u);
    }
  }
  else
  {
    double v7 = GEOGetOfflineUtilitiesLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf) = 138543362;
      *(void *)((char *)&buf + 4) = v6;
      _os_log_impl(&dword_188D96000, v7, OS_LOG_TYPE_ERROR, "[Flight] Failed to check containment: %{public}@", (uint8_t *)&buf, 0xCu);
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
LABEL_10:
}

void sub_18A02B354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void __GEOFetchOfflineMapsDownloadURLForSFFlightLeg_block_invoke_10(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = *(NSObject **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
  if (v6)
  {
    dispatch_source_cancel(v6);
    uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8);
    id v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = 0;
  }
  uint64_t v9 = *(void *)(*(void *)(a1 + 64) + 8) + 32;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  v11[2] = __GEOFetchOfflineMapsDownloadURLForSFFlightLeg_block_invoke_2;
  v11[3] = &unk_1E53ECF40;
  id v12 = v5;
  uint64_t v16 = a2;
  id v15 = *(id *)(a1 + 48);
  id v13 = *(id *)(a1 + 32);
  id v14 = *(id *)(a1 + 40);
  id v10 = v5;
  GEOOnce(v9, v11);
}

void __GEOFetchOfflineMapsDownloadURLForSFFlightLeg_block_invoke_2(uint64_t a1)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  if (*(void *)(a1 + 32) || !*(void *)(a1 + 64))
  {
    id v2 = GEOGetOfflineUtilitiesLog();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138543362;
      uint64_t v24 = v3;
      _os_log_impl(&dword_188D96000, v2, OS_LOG_TYPE_INFO, "[Flight] Request failed with error: %{public}@. Not enabling download action", buf, 0xCu);
    }

    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
  else
  {
    id v4 = objc_alloc_init(MEMORY[0x1E4F29088]);
    [v4 setScheme:@"maps"];
    id v5 = (void *)MEMORY[0x1E4F290C8];
    id v6 = NSString;
    [*(id *)(a1 + 40) northLat];
    uint64_t v8 = v7;
    [*(id *)(a1 + 40) westLng];
    uint64_t v10 = v9;
    [*(id *)(a1 + 40) southLat];
    uint64_t v12 = v11;
    [*(id *)(a1 + 40) eastLng];
    id v14 = objc_msgSend(v6, "stringWithFormat:", @"%f,%f,%f,%f", v8, v10, v12, v13);
    id v15 = [v5 queryItemWithName:@"_odr" value:v14];
    v22[0] = v15;
    uint64_t v16 = (void *)MEMORY[0x1E4F290C8];
    id v17 = [*(id *)(a1 + 48) arrivalAirport];
    id v18 = [v17 city];
    id v19 = [v16 queryItemWithName:@"label" value:v18];
    v22[1] = v19;
    long long v20 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:2];
    [v4 setQueryItems:v20];

    long long v21 = [v4 URL];
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
}

void __GEOFetchOfflineMapsDownloadURLForSFFlightLeg_block_invoke_29(uint64_t a1)
{
  id v2 = *(NSObject **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  if (v2)
  {
    dispatch_source_cancel(v2);
    uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
    id v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 40) = 0;
  }
  uint64_t v5 = *(void *)(*(void *)(a1 + 56) + 8) + 32;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __GEOFetchOfflineMapsDownloadURLForSFFlightLeg_block_invoke_2_30;
  v6[3] = &unk_1E53D7ED0;
  id v7 = *(id *)(a1 + 32);
  id v8 = *(id *)(a1 + 40);
  GEOOnce(v5, v6);
}

uint64_t __GEOFetchOfflineMapsDownloadURLForSFFlightLeg_block_invoke_2_30(uint64_t a1)
{
  [*(id *)(a1 + 32) cancel];
  id v2 = GEOGetOfflineUtilitiesLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl(&dword_188D96000, v2, OS_LOG_TYPE_INFO, "[Flight] Request timed out. Not enabling download action", v4, 2u);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void __GEOGetOfflineUtilitiesLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "OfflineUtilities");
  uint64_t v1 = (void *)_MergedGlobals_315;
  _MergedGlobals_315 = (uint64_t)v0;
}

double geod_init(uint64_t a1, double a2, double a3)
{
  if ((_MergedGlobals_316 & 1) == 0)
  {
    byte_1EB2A03E8 = 1;
    byte_1EB2A03E4 = 1;
    qword_1EB2A0400 = 0x2000000000000000;
    qword_1EB2A0410 = 0x400921FB54442D18;
    unk_1EB2A0418 = 0x3CB0000000000000;
    qword_1EB2A0420 = 0x3B10000000000000;
    qword_1EB2A0428 = 0x3D29000000000000;
    qword_1EB2A0430 = 0x3EEF400000000000;
    qword_1EB2A03F0 = 0x3E50000000000000;
    qword_1EB2A03F8 = 0x3F91DF46A2529D39;
    qword_1EB2A0408 = sqrt(-1.0);
    _MergedGlobals_316 = 1;
  }
  double v5 = 1.0;
  if (a3 > 1.0) {
    a3 = 1.0 / a3;
  }
  *(double *)a1 = a2;
  *(double *)(a1 + _Block_object_dispose(&a9, 8) = a3;
  double v6 = a3 * (2.0 - a3);
  *(double *)(a1 + 16) = 1.0 - a3;
  *(double *)(a1 + 24) = v6;
  double v7 = a3 / (2.0 - a3);
  *(double *)(a1 + 32) = v6 / ((1.0 - a3) * (1.0 - a3));
  *(double *)(a1 + 40) = v7;
  double v8 = (1.0 - a3) * a2;
  *(double *)(a1 + 4_Block_object_dispose(&a9, 8) = v8;
  if (v6 == 0.0)
  {
    double v9 = sqrt(fabs(v6));
  }
  else
  {
    if (v6 <= 0.0)
    {
      double v27 = a3 / (2.0 - a3);
      double v13 = atan(sqrt(-v6));
      double v7 = v27;
    }
    else
    {
      double v10 = fabs(sqrt(v6));
      double v11 = (v10 + v10) / (1.0 - v10);
      if (v11 + 1.0 + -1.0 != 0.0)
      {
        double v26 = a3 / (2.0 - a3);
        long double v12 = log(v11 + 1.0);
        double v7 = v26;
        double v11 = v11 * v12 / (v11 + 1.0 + -1.0);
      }
      double v13 = v11 * 0.5;
    }
    double v9 = sqrt(fabs(v6));
    double v5 = v13 / v9;
  }
  double v14 = (a2 * a2 + v8 * v8 * v5) * 0.5;
  double v15 = *(double *)&qword_1EB2A03F0 * 0.01;
  if (v9 < 0.1) {
    double v9 = 0.1;
  }
  *(double *)(a1 + 56) = v14;
  *(double *)(a1 + 64) = v15 / v9;
  *(void *)(a1 + 72) = 0x3FF0000000000000;
  *(double *)(a1 + 80) = (v7 + -1.0) * 0.5;
  *(double *)(a1 + 8_Block_object_dispose(&a9, 8) = (v7 * (v7 * 3.0 + -1.0) + -2.0) * 0.125;
  *(double *)(a1 + 96) = ((-3.0 - v7) * v7 + -1.0) * 0.0625;
  *(double *)(a1 + 104) = (v7 * -2.0 + -3.0) * 0.015625;
  *(void *)(a1 + 112) = 0xBF98000000000000;
  *(double *)(a1 + 120) = (1.0 - v7) * 0.25;
  *(double *)(a1 + 12_Block_object_dispose(&a9, 8) = (1.0 - v7 * v7) * 0.125;
  *(double *)(a1 + 136) = ((3.0 - v7) * v7 + 3.0) * 0.015625;
  *(double *)(a1 + 144) = (v7 * 2.0 + 5.0) * 0.0078125;
  *(void *)(a1 + 152) = 0x3F98000000000000;
  *(double *)(a1 + 160) = ((v7 + -3.0) * v7 + 2.0) * 0.03125;
  *(double *)(a1 + 16_Block_object_dispose(&a9, 8) = ((v7 * -3.0 + -2.0) * v7 + 3.0) * 0.015625;
  *(double *)(a1 + 176) = (v7 + 3.0) * 0.0078125;
  *(void *)(a1 + 184) = 0x3F94000000000000;
  __asm { FMOV            V4.2D, #-10.0 }
  _Q4.f64[0] = v7 * 5.0 + -9.0;
  *(float64x2_t *)(a1 + 192) = vdivq_f64(vmlaq_n_f64((float64x2_t)xmmword_18A63FDF0, _Q4, v7), (float64x2_t)xmmword_18A63FE00);
  *(void *)(a1 + 20_Block_object_dispose(&a9, 8) = 0x3F8C000000000000;
  *(double *)(a1 + 216) = (v7 * -14.0 + 7.0) * 0.001953125;
  float64x2_t v21 = (float64x2_t)vdupq_lane_s64(0x4050000000000000, 0);
  v21.f64[0] = v7 * 100.0 + 208.0;
  *(_OWORD *)(a1 + 224) = xmmword_18A63FE10;
  *(float64x2_t *)(a1 + 240) = vdivq_f64(vmlaq_n_f64((float64x2_t)xmmword_18A63FE50, vmlaq_n_f64((float64x2_t)xmmword_18A63FE40, vmlaq_n_f64((float64x2_t)xmmword_18A63FE30, vmlaq_n_f64((float64x2_t)xmmword_18A63FE20, v21, v7), v7), v7), v7), (float64x2_t)xmmword_18A63FE60);
  *(double *)(a1 + 256) = (v7 * ((v7 * -10656.0 + 14144.0) * v7 + -4576.0) + -858.0) / 45045.0;
  *(double *)(a1 + 264) = ((v7 * -224.0 + -4784.0) * v7 + 1573.0) / 45045.0;
  *(double *)(a1 + 272) = (v7 * 1088.0 + 156.0) / 45045.0;
  *(void *)(a1 + 280) = 0x3F7A7604778D4A49;
  *(double *)(a1 + 28_Block_object_dispose(&a9, 8) = (v7 * (v7 * ((v7 * -64.0 + -624.0) * v7 + 4576.0) + -6864.0) + 3003.0) / 135135.0;
  id v22 = (const double *)&unk_18A63FD78;
  float64x2_t v23 = vld1q_dup_f64(v22);
  v23.f64[0] = v7 * 5952.0 + -11648.0;
  *(float64x2_t *)(a1 + 296) = vdivq_f64(vmlaq_n_f64((float64x2_t)xmmword_18A63FE80, vmlaq_n_f64((float64x2_t)xmmword_18A63FE70, v23, v7), v7), (float64x2_t)vdupq_n_s64(0x41007EF800000000uLL));
  *(double *)(a1 + 312) = (v7 * -2944.0 + 468.0) / 135135.0;
  *(void *)(a1 + 320) = 0x3F1D191762EA8BC0;
  *(double *)(a1 + 32_Block_object_dispose(&a9, 8) = (v7 * ((v7 * -1440.0 + 4160.0) * v7 + -4576.0) + 1716.0) / 225225.0;
  *(double *)(a1 + 336) = ((v7 * -8448.0 + 4992.0) * v7 + -1144.0) / 225225.0;
  *(double *)(a1 + 344) = (v7 * 1856.0 + -936.0) / 225225.0;
  *(void *)(a1 + 352) = 0x3F48713C9AC504C0;
  float64x2_t v24 = (float64x2_t)vdupq_lane_s64(0x4090000000000000, 0);
  v24.f64[0] = v7 * 3584.0 + -3328.0;
  *(float64x2_t *)(a1 + 360) = vdivq_f64(vmlaq_n_f64((float64x2_t)xmmword_18A63FE90, v24, v7), (float64x2_t)xmmword_18A63FEA0);
  *(void *)(a1 + 376) = 0xBF61AAA9A0A0B047;
  double result = (v7 * -2560.0 + 832.0) / 405405.0;
  *(double *)(a1 + 384) = result;
  *(void *)(a1 + 392) = 0xBF4F09B28BA4D955;
  *(void *)(a1 + 400) = 0x3F5529855F363717;
  return result;
}

void geod_lineinit(uint64_t a1, uint64_t a2, int a3, double a4, double a5, double a6)
{
  *(_OWORD *)(a1 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 48);
  double v9 = *(double *)(a2 + 16);
  *(double *)(a1 + 56) = v9;
  if (a3) {
    int v10 = a3 | 0x280;
  }
  else {
    int v10 = 2955;
  }
  *(_DWORD *)(a1 + 48_Block_object_dispose(&a9, 8) = v10;
  double v11 = a6 + 360.0;
  if (a6 >= -180.0) {
    double v11 = a6;
  }
  if (a6 >= 180.0) {
    double v12 = a6 + -360.0;
  }
  else {
    double v12 = v11;
  }
  double v13 = fabs(v12);
  if (v13 < 0.0625) {
    double v13 = v13 + -0.0625 + 0.0625;
  }
  double v14 = v13;
  double v15 = -v13;
  if (v12 >= 0.0) {
    double v16 = v14;
  }
  else {
    double v16 = v15;
  }
  double v17 = a5 + -360.0;
  double v18 = a5 + 360.0;
  if (a5 >= -180.0) {
    double v18 = a5;
  }
  if (a5 < 180.0) {
    double v17 = v18;
  }
  *(double *)a1 = a4;
  *(double *)(a1 + _Block_object_dispose(&a9, 8) = v17;
  *(double *)(a1 + 16) = v16;
  double v19 = *(double *)&qword_1EB2A03F8;
  __double2 v20 = __sincos_stret(v16 * *(double *)&qword_1EB2A03F8);
  if (v16 == -180.0) {
    double sinval = 0.0;
  }
  else {
    double sinval = v20.__sinval;
  }
  if (fabs(v14) == 90.0) {
    double cosval = 0.0;
  }
  else {
    double cosval = v20.__cosval;
  }
  *(double *)(a1 + 8_Block_object_dispose(&a9, 8) = sinval;
  *(double *)(a1 + 96) = cosval;
  double v23 = v9 * sin(v19 * a4);
  if (fabs(a4) == 90.0) {
    double v24 = *(double *)&qword_1EB2A0400;
  }
  else {
    double v24 = cos(v19 * a4);
  }
  double v25 = sqrt(v24 * v24 + v23 * v23);
  double v26 = v23 / v25;
  double v27 = v24 / v25;
  *(double *)(a1 + 120) = sqrt(*(double *)(a2 + 32) * (v26 * v26) + 1.0);
  double v28 = sqrt(sinval * v26 * (sinval * v26) + cosval * cosval);
  *(double *)(a1 + 64) = sinval * v27;
  *(double *)(a1 + 72) = v28;
  double v29 = v26 * (sinval * v27);
  double v30 = 0.0;
  BOOL v31 = cosval == 0.0 && v26 == 0.0;
  double v32 = cosval * v27;
  if (v31) {
    double v32 = 1.0;
  }
  *(double *)(a1 + 144) = v29;
  *(double *)(a1 + 152) = v32;
  double v33 = sqrt(v32 * v32 + v26 * v26);
  *(double *)(a1 + 104) = v26 / v33;
  *(double *)(a1 + 112) = v32 / v33;
  double v34 = v28 * v28 * *(double *)(a2 + 32);
  *(double *)(a1 + 80) = v34;
  double v35 = v34 / (v34 + (sqrt(v34 + 1.0) + 1.0) * 2.0);
  double v70 = v35;
  if (v10)
  {
    *(double *)(a1 + 160) = (v35 + v35 * v35 * (v35 * v35 * (v35 * v35 + 4.0) + 64.0) * 0.00390625) / (1.0 - v35);
    C1f(a1 + 224, v35);
    double v36 = *(double *)(a1 + 104);
    double v37 = *(double *)(a1 + 112);
    double v38 = (v36 + v37) * (v37 - v36 + v37 - v36);
    uint64_t v39 = (double *)(a1 + 272);
    int v40 = -3;
    double v41 = 0.0;
    do
    {
      double v30 = *v39 - (v30 - v38 * v41);
      double v41 = *(v39 - 1) - (v41 - v38 * v30);
      v39 -= 2;
      BOOL v42 = __CFADD__(v40++, 1);
    }
    while (!v42);
    double v43 = (v36 + v36) * v37 * v41;
    *(double *)(a1 + 184) = v43;
    __double2 v44 = __sincos_stret(v43);
    *(double *)(a1 + 12_Block_object_dispose(&a9, 8) = v37 * v44.__sinval + v36 * v44.__cosval;
    *(double *)(a1 + 136) = v37 * v44.__cosval - v36 * v44.__sinval;
    int v10 = *(_DWORD *)(a1 + 488);
    double v35 = v70;
    if ((v10 & 2) == 0)
    {
LABEL_35:
      if ((v10 & 4) == 0) {
        goto LABEL_36;
      }
      goto LABEL_44;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_35;
  }
  float64x2_t v45 = (float64x2_t)vdupq_lane_s64(COERCE__INT64(v35 * v35), 0);
  v45.f64[0] = v35;
  v46.f64[0] = v35 * (v35 * v35);
  double v47 = v35 * v46.f64[0];
  v46.f64[1] = v35 * v46.f64[0];
  *(float64x2_t *)(a1 + 28_Block_object_dispose(&a9, 8) = vdivq_f64(vmulq_f64(v45, vmlaq_n_f64((float64x2_t)xmmword_18A63FED0, vmlaq_n_f64((float64x2_t)xmmword_18A63FEC0, (float64x2_t)xmmword_18A63FEB0, v35 * v35), v35 * v35)), (float64x2_t)xmmword_18A63FEE0);
  *(float64x2_t *)(a1 + 304) = vdivq_f64(vmulq_f64(v46, vmlaq_n_f64((float64x2_t)xmmword_18A63FF00, (float64x2_t)xmmword_18A63FEF0, v35 * v35)), (float64x2_t)xmmword_18A63FF10);
  v46.f64[0] = v35 * (v35 * v46.f64[0]);
  v46.f64[1] = v35 * (v35 * v47);
  *(float64x2_t *)(a1 + 320) = vdivq_f64(vmulq_f64(v46, (float64x2_t)xmmword_18A63FF20), (float64x2_t)xmmword_18A63FF30);
  if ((v10 & 4) == 0)
  {
LABEL_36:
    if ((v10 & 8) == 0) {
      goto LABEL_37;
    }
    goto LABEL_48;
  }
LABEL_44:
  *(double *)(a1 + 16_Block_object_dispose(&a9, 8) = -(v35 - v35 * v35 * (v35 * v35 * (v35 * v35 * 25.0 + 36.0) + 64.0) * 0.00390625 * (1.0 - v35));
  C2f(a1 + 336, v35);
  double v48 = *(double *)(a1 + 104);
  double v49 = *(double *)(a1 + 112);
  double v50 = (v48 + v49) * (v49 - v48 + v49 - v48);
  char v51 = (double *)(a1 + 384);
  double v52 = 0.0;
  int v53 = -3;
  double v54 = 0.0;
  do
  {
    double v52 = *v51 - (v52 - v50 * v54);
    double v54 = *(v51 - 1) - (v54 - v50 * v52);
    v51 -= 2;
    BOOL v42 = __CFADD__(v53++, 1);
  }
  while (!v42);
  *(double *)(a1 + 192) = (v48 + v48) * v49 * v54;
  int v10 = *(_DWORD *)(a1 + 488);
  double v35 = v70;
  if ((v10 & 8) == 0)
  {
LABEL_37:
    if ((v10 & 0x10) == 0) {
      return;
    }
    goto LABEL_54;
  }
LABEL_48:
  C3f(a2, a1 + 392, v35);
  double v35 = v70;
  double v55 = 0.0;
  for (uint64_t i = 112; i != 64; i -= 8)
    double v55 = *(double *)(a2 + i) + v70 * v55;
  *(double *)(a1 + 176) = -(*(double *)(a1 + 32) * *(double *)(a1 + 64)) * v55;
  double v57 = *(double *)(a1 + 104);
  double v58 = *(double *)(a1 + 112);
  double v59 = (v57 + v58) * (v58 - v57 + v58 - v57);
  double v60 = *(double *)(a1 + 432);
  char v61 = (double *)(a1 + 424);
  double v62 = 0.0;
  int v63 = -2;
  do
  {
    double v62 = *v61 - (v62 - v59 * v60);
    double v60 = *(v61 - 1) - (v60 - v59 * v62);
    v61 -= 2;
    BOOL v42 = __CFADD__(v63++, 1);
  }
  while (!v42);
  *(double *)(a1 + 200) = (v57 + v57) * v58 * v60;
  if ((*(_DWORD *)(a1 + 488) & 0x10) != 0)
  {
LABEL_54:
    C4f(a2, a1 + 440, v35);
    *(double *)(a1 + 20_Block_object_dispose(&a9, 8) = *(double *)(a1 + 24)
                          * *(double *)(a1 + 24)
                          * *(double *)(a1 + 72)
                          * *(double *)(a1 + 64)
                          * *(double *)(a2 + 24);
    double v64 = *(double *)(a1 + 112);
    double v65 = (*(double *)(a1 + 104) + v64) * (v64 - *(double *)(a1 + 104) + v64 - *(double *)(a1 + 104));
    unint64_t v66 = (double *)(a1 + 480);
    double v67 = 0.0;
    int v68 = -3;
    double v69 = 0.0;
    do
    {
      double v67 = *v66 - (v67 - v65 * v69);
      double v69 = *(v66 - 1) - (v69 - v65 * v67);
      v66 -= 2;
      BOOL v42 = __CFADD__(v68++, 1);
    }
    while (!v42);
    *(double *)(a1 + 216) = v64 * (v69 - v67);
  }
}

float64_t C1f(uint64_t a1, float64_t a2)
{
  v2.f64[0] = 6.0 - a2 * a2;
  v2.f64[1] = a2 * a2 * -9.0 + 64.0;
  float64x2_t v3 = (float64x2_t)vdupq_lane_s64(COERCE__INT64(a2 * a2), 0);
  v3.f64[0] = a2;
  *(float64x2_t *)(a1 + _Block_object_dispose(&a9, 8) = vmulq_f64(vmulq_f64(v3, vmlaq_n_f64((float64x2_t)xmmword_18A63FF40, v2, a2 * a2)), (float64x2_t)xmmword_18A63FF50);
  float64_t v4 = a2 * a2 * a2;
  v2.f64[0] = v4 * (a2 * a2 * 9.0 + -16.0) / 768.0;
  float64_t v5 = v4 * a2;
  *(float64_t *)(a1 + 24) = v2.f64[0];
  *(float64_t *)(a1 + 32) = (a2 * a2 * 3.0 + -5.0) * v5 * 0.001953125;
  float64_t v6 = v5 * a2;
  float64_t result = v6 * a2 * -7.0 * 0.00048828125;
  *(float64_t *)(a1 + 40) = v6 * -7.0 / 1280.0;
  *(float64_t *)(a1 + 4_Block_object_dispose(&a9, 8) = result;
  return result;
}

float64_t C2f(uint64_t a1, float64_t a2)
{
  v2.f64[0] = a2 * a2 + 2.0;
  float64x2_t v3 = (float64x2_t)vdupq_lane_s64(COERCE__INT64(a2 * a2), 0);
  v2.f64[1] = a2 * a2 * 35.0 + 64.0;
  v3.f64[0] = a2;
  *(float64x2_t *)(a1 + _Block_object_dispose(&a9, 8) = vmulq_f64(vmulq_f64(v3, vmlaq_n_f64((float64x2_t)xmmword_18A63FF60, v2, a2 * a2)), (float64x2_t)xmmword_18A63FF50);
  v2.f64[0] = a2 * a2 * a2;
  float64_t v4 = v2.f64[0] * (a2 * a2 * 15.0 + 80.0) / 768.0;
  v2.f64[0] = v2.f64[0] * a2;
  *(float64_t *)(a1 + 24) = v4;
  *(float64_t *)(a1 + 32) = (a2 * a2 * 7.0 + 35.0) * v2.f64[0] * 0.001953125;
  float64_t v5 = v2.f64[0] * a2;
  v2.f64[0] = v2.f64[0] * a2 * 63.0 / 1280.0;
  float64_t result = v5 * a2 * 77.0 * 0.00048828125;
  *(float64_t *)(a1 + 40) = v2.f64[0];
  *(float64_t *)(a1 + 4_Block_object_dispose(&a9, 8) = result;
  return result;
}

double C3f(uint64_t a1, uint64_t a2, double result)
{
  int v3 = -1;
  int v4 = 15;
  uint64_t v5 = 5;
  do
  {
    int v6 = v4;
    double v7 = 0.0;
    int v8 = v3;
    double v9 = (double *)(a1 + 112 + 8 * v4);
    do
    {
      double v10 = *v9--;
      double v7 = v10 + result * v7;
    }
    while (!__CFADD__(v8++, 1));
    int v4 = v6 + v3;
    *(double *)(a2 + 8 * v5) = v7;
    --v3;
    --v5;
  }
  while (v5);
  double v12 = 1.0;
  for (uint64_t i = 8; i != 48; i += 8)
  {
    double v12 = v12 * result;
    *(double *)(a2 + i) = v12 * *(double *)(a2 + i);
  }
  return result;
}

double C4f(uint64_t a1, uint64_t a2, double result)
{
  int v3 = -1;
  int v4 = 21;
  uint64_t v5 = 6;
  do
  {
    int v6 = v4;
    double v7 = 0.0;
    int v8 = v3;
    double v9 = (double *)(a1 + 232 + 8 * v4);
    do
    {
      double v10 = *v9--;
      double v7 = v10 + result * v7;
    }
    while (!__CFADD__(v8++, 1));
    int v4 = v6 + v3--;
    --v5;
    *(double *)(a2 + 8 * v5) = v7;
  }
  while (v5);
  double v12 = 1.0;
  for (uint64_t i = 8; i != 48; i += 8)
  {
    double v12 = v12 * result;
    *(double *)(a2 + i) = v12 * *(double *)(a2 + i);
  }
  return result;
}

double geod_genposition(uint64_t a1, int a2, double *a3, double *a4, double *a5, double *a6, double *a7, double *a8, double a9, double *a10, double *a11)
{
  int v11 = *(_DWORD *)(a1 + 488);
  if (!(a2 | v11 & 0x800)) {
    return *(double *)&qword_1EB2A0408;
  }
  double v12 = a9;
  unsigned int v20 = (unsigned __int16)v11 & (((a3 != 0) << 7) | ((a4 != 0) << 8) | ((a5 != 0) << 9) | ((a6 != 0) << 10) | ((a7 != 0) << 12) | ((((unint64_t)a8 | (unint64_t)a10) != 0) << 13) | ((a11 != 0) << 14));
  if (a2)
  {
    double v21 = fabs(a9);
    double v22 = v21 + floor(v21 / 180.0) * -180.0;
    double v131 = *(double *)&qword_1EB2A03F8 * a9;
    __double2 v24 = __sincos_stret(*(double *)&qword_1EB2A03F8 * a9);
    double sinval = v24.__sinval;
    double v25 = 0.0;
    if (v22 == 0.0) {
      double sinval = 0.0;
    }
    if (v22 == 90.0) {
      double cosval = 0.0;
    }
    else {
      double cosval = v24.__cosval;
    }
  }
  else
  {
    double v27 = *(double *)(a1 + 40);
    double v28 = *(double *)(a1 + 160) + 1.0;
    double v29 = a9 / (v27 * v28);
    __double2 v30 = __sincos_stret(v29);
    double v31 = *(double *)(a1 + 128);
    double v32 = *(double *)(a1 + 136);
    double v33 = v32 * v30.__sinval + v31 * v30.__cosval;
    double v34 = v32 * v30.__cosval - v31 * v30.__sinval;
    double v35 = (v33 + v34) * (v34 - v33 + v34 - v33);
    double v36 = (double *)(a1 + 328);
    double v37 = 0.0;
    int v38 = -3;
    double v39 = 0.0;
    do
    {
      double v37 = *v36 - (v37 - v35 * v39);
      double v39 = *(v36 - 1) - (v39 - v35 * v37);
      v36 -= 2;
      BOOL v40 = __CFADD__(v38++, 1);
    }
    while (!v40);
    double v25 = v34 * (v33 * -2.0) * v39;
    double v41 = *(double *)(a1 + 184);
    double v131 = v29 - (v25 - v41);
    __double2 v42 = __sincos_stret(v131);
    double sinval = v42.__sinval;
    double cosval = v42.__cosval;
    if (fabs(*(double *)(a1 + 32)) > 0.01)
    {
      double v43 = *(double *)(a1 + 104);
      double v44 = *(double *)(a1 + 112);
      double v45 = v42.__sinval * v44 + v43 * v42.__cosval;
      double v46 = v44 * v42.__cosval - v43 * v42.__sinval;
      double v47 = (v46 + v45) * (v46 - v45 + v46 - v45);
      double v48 = (double *)(a1 + 272);
      double v49 = 0.0;
      int v50 = -3;
      double v51 = 0.0;
      do
      {
        double v49 = *v48 - (v49 - v47 * v51);
        double v51 = *(v48 - 1) - (v51 - v47 * v49);
        v48 -= 2;
        BOOL v40 = __CFADD__(v50++, 1);
      }
      while (!v40);
      double v25 = v46 * (v45 + v45) * v51;
      double v131 = v131 - (-v12 / v27 + v28 * (v131 + v25 - v41)) / sqrt(*(double *)(a1 + 80) * (v45 * v45) + 1.0);
      __double2 v52 = __sincos_stret(v131);
      double sinval = v52.__sinval;
      double cosval = v52.__cosval;
    }
  }
  double v54 = *(double *)(a1 + 104);
  double v53 = *(double *)(a1 + 112);
  double v118 = sinval * v53;
  double v55 = sinval * v53 + v54 * cosval;
  double v123 = v53;
  double v56 = v53 * cosval - v54 * sinval;
  double v57 = 0.0;
  if ((v20 & 0x3400) != 0)
  {
    if (a2 || fabs(*(double *)(a1 + 32)) > 0.01)
    {
      double v58 = (v56 + v55) * (v56 - v55 + v56 - v55);
      double v59 = (double *)(a1 + 272);
      double v60 = 0.0;
      int v61 = -3;
      double v62 = 0.0;
      do
      {
        double v60 = *v59 - (v60 - v58 * v62);
        double v62 = *(v59 - 1) - (v62 - v58 * v60);
        v59 -= 2;
        BOOL v40 = __CFADD__(v61++, 1);
      }
      while (!v40);
      double v25 = v56 * (v55 + v55) * v62;
    }
    double v57 = (*(double *)(a1 + 160) + 1.0) * (v25 - *(double *)(a1 + 184));
  }
  double v127 = v57;
  double v122 = cosval;
  double v119 = sinval;
  double v63 = *(double *)(a1 + 72);
  double v124 = *(double *)(a1 + 80);
  double v64 = *(double *)(a1 + 64);
  double v65 = sqrt(v56 * v63 * (v56 * v63) + v64 * v64);
  if (v65 == 0.0) {
    double v66 = *(double *)&qword_1EB2A0400;
  }
  else {
    double v66 = v56;
  }
  double v117 = *(double *)&qword_1EB2A0400;
  if (v65 == 0.0) {
    double v67 = *(double *)&qword_1EB2A0400;
  }
  else {
    double v67 = v65;
  }
  double v68 = atan2(v55 * v64 * *(double *)(a1 + 152) - v66 * *(double *)(a1 + 144), v55 * v64 * *(double *)(a1 + 144) + v66 * *(double *)(a1 + 152));
  double v69 = 0.0;
  if ((v20 & 0x400) != 0) {
    double v69 = v12;
  }
  double v126 = v69;
  double v70 = &qword_1EB2A0000;
  if (a2 && (v20 & 0x400) != 0) {
    double v126 = *(double *)(a1 + 40) * (v127 + (*(double *)(a1 + 160) + 1.0) * v131);
  }
  double v125 = 0.0;
  double v129 = v55 + v66;
  double v130 = v66 - v55;
  double v71 = 0.0;
  if ((v20 & 0x100) != 0)
  {
    double v72 = v129 * (v130 + v130);
    double v73 = *(double *)(a1 + 432);
    uint64_t v74 = (double *)(a1 + 424);
    double v75 = 0.0;
    int v76 = -2;
    do
    {
      double v75 = *v74 - (v75 - v72 * v73);
      double v73 = *(v74 - 1) - (v73 - v72 * v75);
      v74 -= 2;
      BOOL v40 = __CFADD__(v76++, 1);
    }
    while (!v40);
    double v77 = fmod((v68 + *(double *)(a1 + 176) * (v131 + (v55 + v55) * v66 * v73 - *(double *)(a1 + 200)))/ *(double *)&qword_1EB2A03F8, 360.0);
    double v70 = &qword_1EB2A0000;
    double v78 = v77 + 360.0;
    if (v77 >= -180.0) {
      double v78 = v77;
    }
    if (v77 >= 180.0) {
      double v79 = v77 + -360.0;
    }
    else {
      double v79 = v78;
    }
    double v80 = *(double *)(a1 + 8) + v79;
    double v81 = v80 + 360.0;
    if (v80 >= -180.0) {
      double v81 = v80;
    }
    if (v80 >= 180.0) {
      double v71 = v80 + -360.0;
    }
    else {
      double v71 = v81;
    }
  }
  if ((v20 & 0x80) != 0)
  {
    long double v82 = atan2(v55 * v63, v67 * *(double *)(a1 + 56));
    double v70 = &qword_1EB2A0000;
    double v125 = v82 / *(double *)&qword_1EB2A03F8;
  }
  double v120 = v71;
  double v83 = 0.0;
  double v84 = 0.0;
  if ((v20 & 0x200) != 0)
  {
    long double v85 = atan2(-v64, v63 * v66);
    double v83 = 0.0;
    double v70 = &qword_1EB2A0000;
    double v84 = 0.0 - v85 / *(double *)&qword_1EB2A03F8;
  }
  double v86 = 0.0;
  double v87 = 0.0;
  if ((v20 & 0x3000) != 0)
  {
    double v88 = sqrt(v124 * (v55 * v55) + 1.0);
    double v89 = v129 * (v130 + v130);
    uint64_t v90 = (double *)(a1 + 384);
    double v91 = 0.0;
    int v92 = -3;
    double v93 = 0.0;
    do
    {
      double v91 = *v90 - (v91 - v89 * v93);
      double v93 = *(v90 - 1) - (v93 - v89 * v91);
      v90 -= 2;
      BOOL v40 = __CFADD__(v92++, 1);
    }
    while (!v40);
    double v94 = v127
        - (*(double *)(a1 + 168) + 1.0) * ((v55 + v55) * v66 * v93 - *(double *)(a1 + 192))
        + (*(double *)(a1 + 160) - *(double *)(a1 + 168)) * v131;
    double v83 = 0.0;
    double v87 = 0.0;
    if ((v20 & 0x1000) != 0) {
      double v87 = *(double *)(a1 + 40) * (v88 * (v123 * v55) - *(double *)(a1 + 120) * (v54 * v66) + -(v123 * v66) * v94);
    }
    if ((v20 & 0x2000) != 0)
    {
      double v95 = *(double *)(a1 + 120);
      double v96 = (v54 + v55) * (v124 * (v55 - v54)) / (v88 + v95);
      double v86 = v122 + v54 * (v94 * -v66 + v96 * v55) / v95;
      double v83 = v122 - v55 * (v96 * v54 - v123 * v94) / v88;
    }
    else
    {
      double v86 = 0.0;
    }
  }
  double v97 = 0.0;
  if (v20 >= 0x4000)
  {
    double v98 = v129 * (v130 + v130);
    char v99 = (double *)(a1 + 480);
    double v100 = 0.0;
    int v101 = -3;
    double v102 = 0.0;
    do
    {
      double v100 = *v99 - (v100 - v98 * v102);
      double v102 = *(v99 - 1) - (v102 - v98 * v100);
      v99 -= 2;
      BOOL v40 = __CFADD__(v101++, 1);
    }
    while (!v40);
    double v103 = v66 * (v102 - v100);
    double v128 = v86;
    if (v63 == 0.0 || v64 == 0.0)
    {
      double v105 = v87;
      double v106 = v12;
      double v107 = v83;
      double v108 = v84;
      double v113 = *(double *)(a1 + 88);
      double v112 = *(double *)(a1 + 96);
      double v114 = v64 * v112 - v63 * v66 * v113;
      double v111 = v64 * v113 + v63 * v66 * v112;
      double v110 = v117 * v112;
      if (v114 == 0.0 && v111 < 0.0) {
        double v111 = -1.0;
      }
      else {
        double v110 = v114;
      }
    }
    else
    {
      double v104 = v54;
      double v105 = v87;
      double v106 = v12;
      double v107 = v83;
      double v108 = v84;
      double v109 = v119 * v104 + v123 * (1.0 - v122);
      if (v122 > 0.0) {
        double v109 = v119 * (v104 + v118 / (v122 + 1.0));
      }
      double v110 = v63 * v64 * v109;
      double v111 = v64 * v64 + v123 * (v63 * v63) * v66;
    }
    double v115 = *(double *)(a1 + 48);
    double v97 = *(double *)(a1 + 208) * (v103 - *(double *)(a1 + 216)) + v115 * atan2(v110, v111);
    double v70 = &qword_1EB2A0000;
    double v84 = v108;
    double v83 = v107;
    double v12 = v106;
    double v87 = v105;
    double v86 = v128;
  }
  if (a3 && (v20 & 0x80) != 0) {
    *a3 = v125;
  }
  if (a4 && (v20 & 0x100) != 0) {
    *a4 = v120;
  }
  if (a5 && (v20 & 0x200) != 0) {
    *a5 = v84;
  }
  if (a6 && (v20 & 0x400) != 0) {
    *a6 = v126;
  }
  if (a7 && (v20 & 0x1000) != 0) {
    *a7 = v87;
  }
  if ((v20 & 0x2000) != 0)
  {
    if (a8) {
      *a8 = v86;
    }
    if (a10) {
      *a10 = v83;
    }
  }
  if (a11 && v20 >= 0x4000) {
    *a11 = v97;
  }
  if (!a2) {
    return v131 / *((double *)v70 + 127);
  }
  return v12;
}

double geod_geninverse(double *a1, double *a2, double *a3, double *a4, double *a5, unint64_t a6, long double *a7, double *a8, double a9, double a10, double a11, double a12)
{
  v302[7] = *(double *)MEMORY[0x1E4F143B8];
  long double v293 = 0.0;
  double v294 = 0.0;
  double v291 = 0.0;
  double v292 = 0.0;
  BOOL v15 = ((unint64_t)a3 | (unint64_t)a4) != 0;
  BOOL v16 = (a6 | (unint64_t)a7) != 0;
  double v17 = a10 + 360.0;
  if (a10 >= -180.0) {
    double v17 = a10;
  }
  if (a10 >= 180.0) {
    double v18 = a10 + -360.0;
  }
  else {
    double v18 = v17;
  }
  double v19 = a12 + 360.0;
  if (a12 >= -180.0) {
    double v19 = a12;
  }
  if (a12 >= 180.0) {
    double v20 = a12 + -360.0;
  }
  else {
    double v20 = v19;
  }
  v302[0] = v20 - v18;
  v301[0] = v20 - v18 - v20;
  v299[0] = v20 - v18 - v301[0];
  v301[0] = v18 + v301[0];
  v299[0] = v299[0] - v20;
  double v21 = v301[0] + v299[0];
  double v22 = v302[0];
  if (v302[0] + -180.0 - (v301[0] + v299[0]) <= 0.0)
  {
    if (v302[0] + 180.0 - v21 <= 0.0) {
      double v22 = v302[0] + 360.0;
    }
  }
  else
  {
    double v22 = v302[0] + -360.0;
  }
  double v23 = v22 - v21;
  double v24 = vabdd_f64(v22, v21);
  v302[0] = v24;
  if (v24 >= 0.0625) {
    double v25 = v302[0];
  }
  else {
    double v25 = v24 + -0.0625 + 0.0625;
  }
  v302[0] = v25;
  if (v23 >= 0.0) {
    double v26 = v302[0];
  }
  else {
    double v26 = -v25;
  }
  double v27 = fabs(a9);
  v302[0] = v27;
  if (v27 >= 0.0625) {
    double v28 = v302[0];
  }
  else {
    double v28 = v27 + -0.0625 + 0.0625;
  }
  v302[0] = v28;
  if (a9 >= 0.0) {
    double v29 = v302[0];
  }
  else {
    double v29 = -v28;
  }
  double v30 = fabs(a11);
  v302[0] = v30;
  if (v30 >= 0.0625) {
    double v31 = v302[0];
  }
  else {
    double v31 = v30 + -0.0625 + 0.0625;
  }
  v302[0] = v31;
  if (a11 >= 0.0) {
    double v32 = v302[0];
  }
  else {
    double v32 = -v31;
  }
  if (v26 >= 0.0) {
    int v33 = 1;
  }
  else {
    int v33 = -1;
  }
  double v34 = fabs(v28);
  double v35 = fabs(v31);
  if (v26 < 0.0) {
    int v36 = 1;
  }
  else {
    int v36 = -1;
  }
  double v250 = v35;
  double v251 = v34;
  BOOL v37 = v34 < v35;
  if (v34 >= v35) {
    int v38 = 1;
  }
  else {
    int v38 = -1;
  }
  if (v34 >= v35) {
    double v39 = v32;
  }
  else {
    double v39 = v29;
  }
  if (v37)
  {
    double v29 = v32;
    int v40 = v36;
  }
  else
  {
    int v40 = v33;
  }
  if (v29 < 0.0) {
    int v41 = 1;
  }
  else {
    int v41 = -1;
  }
  double v42 = v29 * (double)v41;
  double v43 = v39 * (double)v41;
  double v282 = *(double *)&qword_1EB2A03F8;
  double v44 = *(double *)&qword_1EB2A03F8 * v42;
  double v45 = a1[2];
  double v46 = v45 * sin(*(double *)&qword_1EB2A03F8 * v42);
  double v47 = &qword_1EB2A0000;
  if (v42 == -90.0) {
    double v48 = *(double *)&qword_1EB2A0400;
  }
  else {
    double v48 = cos(v44);
  }
  double v49 = sqrt(v48 * v48 + v46 * v46);
  double v289 = v48 / v49;
  double v290 = v46 / v49;
  double v249 = v45;
  double v50 = v45 * sin(v282 * v43);
  if (fabs(v43) == 90.0) {
    double v51 = *(double *)&qword_1EB2A0400;
  }
  else {
    double v51 = cos(v282 * v43);
  }
  double v52 = v26 * (double)v33;
  double v53 = sqrt(v51 * v51 + v50 * v50);
  double v54 = v50 / v53;
  double v275 = -v290;
  if (v289 >= -v290)
  {
    if (fabs(v54) == -v290) {
      double v281 = v289;
    }
    else {
      double v281 = v51 / v53;
    }
  }
  else
  {
    double v281 = v51 / v53;
    if (v51 / v53 == v289)
    {
      if (v54 >= 0.0) {
        double v54 = -v290;
      }
      else {
        double v54 = v290;
      }
    }
  }
  double v55 = a1[4];
  double v56 = 1.0;
  double v260 = sqrt(v55 * (v290 * v290) + 1.0);
  double v261 = v55;
  double v257 = sqrt(v55 * (v54 * v54) + 1.0);
  double __x = v52 * v282;
  double v57 = sin(v52 * v282);
  double v58 = 0.0;
  double v272 = v57;
  if (v52 == 180.0) {
    double v59 = 0.0;
  }
  else {
    double v59 = v57;
  }
  double v288 = v54;
  if ((v42 == -90.0 || v59 == 0.0)
    && ((double v283 = cos(__x),
         double v60 = atan2(fmax(v281 * v275 + v283 * v289 * v54, 0.0), v290 * v54 + v283 * v289 * v281),
         Lengths((uint64_t)a1, &v292, &v291, v299, v16, &v294, &v293, (uint64_t)v302, a1[5], v60, v290, v283 * v289, v260, v54, v281, v257, v289, v281, (uint64_t)v301),
         v60 < 1.0)
     || (double v58 = 1.0, v291 >= 0.0)))
  {
    int v71 = 0;
    double v76 = a1[6];
    double v273 = v76 * v292;
    double v276 = v291 * v76;
    double v268 = 0.0;
    double v74 = v283;
    double v73 = v60 / v282;
    double v75 = v289;
    double v72 = 0.0;
  }
  else if (v290 == 0.0 {
         && ((double v61 = a1[1], v61 <= 0.0) || __x <= *(double *)&qword_1EB2A0410 - v61 * *(double *)&qword_1EB2A0410))
  }
  {
    double v68 = *a1;
    double v69 = a1[6];
    double v70 = sin(__x / v249);
    if (v16)
    {
      long double v293 = cos(__x / v249);
      double v294 = v293;
    }
    double v268 = __x / v249;
    double v273 = __x * v68;
    double v276 = v70 * v69;
    double v59 = 1.0;
    int v71 = 1;
    double v56 = 0.0;
    double v72 = 1.0;
    double v73 = v52 / v249;
    double v74 = 0.0;
    double v75 = v289;
  }
  else
  {
    double v62 = -(v290 * v281 - v54 * v289);
    double v63 = v289 * v54;
    v299[0] = v289 * v54;
    v297[0] = v290 * v281;
    double v64 = v289 * v54 + v290 * v281;
    BOOL v65 = v290 * v54 + v281 * v289 >= 0.0 && v62 < 0.5;
    double v258 = v58;
    double v284 = v290 * v54;
    if (v65)
    {
      double v67 = __x;
      if (*(double *)&qword_1EB2A0410 / 6.0 >= __x)
      {
        double v67 = __x / (v249 * (v260 + v257) * 0.5);
        double v272 = sin(v67);
        int v66 = 1;
      }
      else
      {
        int v66 = 0;
      }
    }
    else
    {
      int v66 = 0;
      double v67 = __x;
    }
    double v77 = cos(v67);
    double v78 = v281 * v272;
    double v79 = v290 * v281 * (v272 * v272);
    double v80 = v289 * v54 + v290 * v281;
    double v81 = v64 - v79 / (1.0 - v77);
    double v82 = v79 / (v77 + 1.0) - (v290 * v281 - v54 * v289);
    if (v77 >= 0.0) {
      double v83 = v82;
    }
    else {
      double v83 = v81;
    }
    double v84 = sqrt(v83 * v83 + v78 * v78);
    double v85 = v289 * v281 * v77 + v290 * v54;
    if (v66 && v84 < a1[8])
    {
      double v75 = v289;
      double v86 = v62 - v63 * (v272 * v272) / (v77 + 1.0);
      double v87 = sqrt(v86 * v86 + v289 * v272 * (v289 * v272));
      double v265 = v289 * v272 / v87;
      double v56 = v86 / v87;
      double v88 = atan2(v84, v85);
    }
    else
    {
      double v88 = -1.0;
      double v265 = 0.0;
      if (v85 >= 0.0
        || (float64_t v89 = a1[5], v90 = fabs(v89), v90 > 0.1)
        || (double v91 = *(double *)&qword_1EB2A0410, v84 >= v289 * v289 * (v90 * 6.0 * *(double *)&qword_1EB2A0410)))
      {
        double v56 = 0.0;
        double v75 = v289;
      }
      else
      {
        v299[0] = 0.0;
        double v92 = a1[1];
        if (v92 >= 0.0)
        {
          double v96 = v290 * v290 * v261 / (v290 * v290 * v261 + (sqrt(v290 * v290 * v261 + 1.0) + 1.0) * 2.0);
          double v97 = 0.0;
          for (uint64_t i = 14; i != 8; --i)
            double v97 = a1[i] + v96 * v97;
          double v75 = v289;
          double v99 = *(double *)&qword_1EB2A0410 * (v289 * v92 * v97);
          v299[0] = (__x - *(double *)&qword_1EB2A0410) / v99;
          double v100 = v64 / (v289 * v99);
        }
        else
        {
          double v269 = a1[1];
          double v93 = v54;
          double v75 = v289;
          long double v94 = atan2(v64, -(v284 - v281 * v289));
          double v296 = 0.0;
          v297[0] = 0.0;
          Lengths((uint64_t)a1, &v295, v297, &v296, 0, &v295, &v295, (uint64_t)v302, v89, v91 + v94, v290, -v75, v260, v93, v281, v257, v75, v281, (uint64_t)v301);
          v299[0] = v297[0] / (v91 * (v289 * v281 * v296)) + -1.0;
          if (v299[0] >= -0.01)
          {
            double v92 = v269;
            double v95 = v91 * -(v269 * (v289 * v289));
            double v80 = v64;
          }
          else
          {
            double v95 = v64 / v299[0];
            double v80 = v64;
            double v92 = v269;
          }
          double v99 = v95 / v289;
          double v100 = (__x - v91) / (v95 / v289);
          double v88 = -1.0;
        }
        if (v100 <= -*(double *)&qword_1EB2A0428 || v299[0] <= -1.0 - *(double *)&qword_1EB2A0430)
        {
          double v102 = v100 * v100;
          double v103 = (v100 * v100 + v299[0] * v299[0] + -1.0) / 6.0;
          if (v100 * v100 != 0.0 || (double v104 = 0.0, v103 > 0.0))
          {
            double v270 = v92;
            double v105 = v80;
            double v106 = v102 * (v299[0] * v299[0]) * 0.25;
            double v107 = v103 * (v103 * v103);
            double v108 = v106 * (v106 + v107 * 2.0);
            if (v108 >= 0.0)
            {
              double v111 = v106 + v107;
              double v112 = sqrt(v108);
              if (v111 < 0.0) {
                double v112 = -v112;
              }
              double v113 = v111 + v112;
              double v114 = pow(fabs(v111 + v112), 0.333333333);
              if (v113 < 0.0) {
                double v114 = -v114;
              }
              double v115 = v103 * v103 / v114;
              if (v114 == 0.0) {
                double v115 = 0.0;
              }
              double v110 = v103 + v114 + v115;
            }
            else
            {
              long double v109 = atan2(sqrt(-v108), -(v106 + v107));
              double v110 = v103 + (v103 + v103) * cos(v109 / 3.0);
            }
            double v116 = sqrt(v102 + v110 * v110);
            if (v110 >= 0.0) {
              double v117 = v110 + v116;
            }
            else {
              double v117 = v102 / (v116 - v110);
            }
            double v80 = v105;
            double v92 = v270;
            double v104 = v117
                 / ((v117 - v102) / (v116 + v116)
                  + sqrt(v117 + (v117 - v102) / (v116 + v116) * ((v117 - v102) / (v116 + v116))));
          }
          double v118 = v80;
          if (v92 >= 0.0)
          {
            double v119 = -(v299[0] * v104);
            double v104 = v104 + 1.0;
          }
          else
          {
            double v119 = -(v100 * (v104 + 1.0));
          }
          __double2 v120 = __sincos_stret(v99 * (v119 / v104));
          double v78 = v281 * v120.__sinval;
          double v83 = v118 - v290 * v281 * (v120.__sinval * v120.__sinval) / (v120.__cosval + 1.0);
          double v88 = -1.0;
        }
        else if (v92 >= 0.0)
        {
          if (v299[0] >= -1.0) {
            double v78 = -v299[0];
          }
          else {
            double v78 = 1.0;
          }
          double v83 = -sqrt(1.0 - v78 * v78);
        }
        else
        {
          double v101 = 0.0;
          if (v299[0] <= -*(double *)&qword_1EB2A0428) {
            double v101 = -1.0;
          }
          if (v299[0] >= v101) {
            double v83 = v299[0];
          }
          else {
            double v83 = v101;
          }
          double v78 = sqrt(1.0 - v83 * v83);
        }
        double v56 = 0.0;
      }
    }
    if (v78 <= 0.0)
    {
      double v74 = 0.0;
      double v59 = 1.0;
    }
    else
    {
      double v121 = sqrt(v83 * v83 + v78 * v78);
      double v59 = v78 / v121;
      double v74 = v83 / v121;
    }
    if (v88 >= 0.0)
    {
      double v286 = v74;
      double v181 = (v260 + v257) * 0.5;
      double v182 = a1[6];
      double v278 = v88 * v182;
      double v183 = v181 * v181 * v182;
      double v184 = v88;
      double v185 = v88 / v181;
      double v186 = sin(v88 / v181);
      if (v16)
      {
        long double v293 = cos(v185);
        double v294 = v293;
      }
      double v273 = v181 * v278;
      double v276 = v186 * v183;
      double v73 = v184 / v282;
      int v71 = 1;
      double v268 = __x / (v249 * v181);
      double v74 = v286;
      double v72 = v265;
    }
    else
    {
      double v72 = 0.0;
      if (byte_1EB2A03E4 == 1)
      {
        int v231 = v41;
        int v232 = v40;
        BOOL v233 = v15;
        uint64_t v234 = a2;
        uint64_t v238 = a8;
        BOOL v122 = 0;
        BOOL v123 = 0;
        unsigned int v124 = 0;
        uint64_t v125 = qword_1EB2A0400;
        int v126 = byte_1EB2A03E8;
        double v241 = -*(double *)&qword_1EB2A0400;
        BOOL v127 = fabs(v288) != v275 || v281 != v75;
        if (byte_1EB2A03E8) {
          unsigned int v128 = 20;
        }
        else {
          unsigned int v128 = 0;
        }
        double v235 = unk_1EB2A0418 * 16.0;
        double v236 = *(double *)&qword_1EB2A0410;
        if (v75 >= v275) {
          double v129 = (v290 - v288) * (v290 + v288);
        }
        else {
          double v129 = (v281 - v75) * (v75 + v281);
        }
        double v237 = v129;
        double v239 = *(double *)&qword_1EB2A0420;
        double v240 = unk_1EB2A0418;
        double v130 = -1.0;
        double v245 = *(double *)&qword_1EB2A0400;
        double v246 = 1.0;
        while (1)
        {
          double v131 = v59;
          if (v124 < 0x14) {
            int v132 = v126;
          }
          else {
            int v132 = 0;
          }
          BOOL v133 = v74 == 0.0 && v290 == 0.0;
          v297[0] = 0.0;
          double v134 = v241;
          if (!v133) {
            double v134 = v74;
          }
          double v135 = v75 * v134;
          double v136 = v135 * v135;
          double v285 = v74;
          double v274 = v130;
          double v277 = *(double *)&v125;
          if (v127)
          {
            double v137 = v281;
            double v138 = sqrt(v237 + v136) / v281;
          }
          else
          {
            double v138 = fabs(v134);
            double v137 = v281;
          }
          double v258 = v138;
          double v259 = v75 * v131;
          double v139 = sqrt(v290 * v131 * (v290 * v131) + v134 * v134);
          double v140 = sqrt(v136 + v290 * v290);
          double v141 = v290 / v140;
          double v142 = v135 / v140;
          double v143 = v137 * v138;
          double v144 = sqrt(v143 * v143 + v288 * v288);
          double v145 = v288 / v144;
          double v146 = v137 * v138 / v144;
          double v254 = v142 * (v288 / v144) - v141 * v146;
          double v256 = v131;
          double v147 = v261 * (v139 * v139) / (v261 * (v139 * v139) + (sqrt(v261 * (v139 * v139) + 1.0) + 1.0) * 2.0);
          C3f((uint64_t)a1, (uint64_t)v299, v147);
          double v148 = v146;
          uint64_t v149 = 0;
          double v150 = (v145 + v146) * (v146 - v145 + v146 - v145);
          double v151 = 0.0;
          double v152 = v300;
          double v153 = v300;
          do
          {
            double v151 = v299[v149 + 4] - (v151 - v150 * v153);
            double v153 = v299[v149 + 3] - (v153 - v150 * v151);
            v149 -= 2;
          }
          while ((v149 * 8) != -32);
          uint64_t v154 = 0;
          double v263 = v148;
          double v266 = v145;
          double v155 = v141 * v145 + v142 * v148;
          double v156 = (v141 + v142) * (v142 - v141 + v142 - v141);
          double v157 = 0.0;
          do
          {
            double v157 = v299[v154 + 4] - (v157 - v156 * v152);
            double v152 = v299[v154 + 3] - (v152 - v156 * v157);
            v154 -= 2;
          }
          while ((v154 * 8) != -32);
          double v271 = v142;
          double v242 = v141;
          double v158 = v141 + v141;
          double v253 = a1[1];
          double v159 = 0.0;
          for (uint64_t j = 14; j != 8; --j)
            double v159 = a1[j] + v147 * v159;
          double v161 = 0.0;
          double v162 = atan2(fmax(v254, 0.0), v155);
          double v255 = v162;
          if (v132)
          {
            double v161 = v249 * -2.0 * v260 / v290;
            if (v258 != 0.0)
            {
              Lengths((uint64_t)a1, &v296, v297, &v296, 0, &v296, &v296, (uint64_t)v302, v147, v162, v242, v271, v260, v266, v263, v257, v289, v281, (uint64_t)v301);
              double v162 = v255;
              double v161 = v249 / v143 * v297[0];
            }
          }
          double v163 = v259 * -(v253 * v159) * (v263 * (v266 + v266) * v153 - v271 * v158 * v152 + v162);
          double v164 = atan2(fmax(v135 * (v288 * v259) - v290 * v259 * v143, 0.0), v290 * v259 * (v288 * v259) + v135 * v143);
          if (v122) {
            break;
          }
          double v165 = v163 + v164 - __x;
          double v166 = fabs(v165);
          if (v123) {
            int v167 = 8;
          }
          else {
            int v167 = 2;
          }
          double v75 = v289;
          double v74 = v285;
          double v168 = v256;
          if (v166 < v240 * (double)v167)
          {
            double v180 = v281;
            if (v281 == v289) {
              double v72 = v256;
            }
            else {
              double v72 = v259 / v281;
            }
LABEL_210:
            a8 = v238;
            a2 = v234;
            BOOL v15 = v233;
            int v41 = v231;
            int v40 = v232;
            double v47 = &qword_1EB2A0000;
            goto LABEL_211;
          }
          if (v165 <= 0.0 || v124 <= v128 && v285 / v256 <= v274 / v277)
          {
            if (v124 > v128 || v285 / v256 < v246 / v245)
            {
              double v245 = v256;
              double v246 = v285;
            }
          }
          else
          {
            double v274 = v285;
            double v277 = v256;
          }
          if (v161 > 0.0) {
            int v169 = v132;
          }
          else {
            int v169 = 0;
          }
          if (v169 == 1
            && ((double v170 = -v165 / v161,
                 __double2 v171 = __sincos_stret(v170),
                 double v172 = v285 * v171.__sinval + v256 * v171.__cosval,
                 double v173 = fabs(v170),
                 v172 > 0.0)
              ? (BOOL v174 = v173 < v236)
              : (BOOL v174 = 0),
                v174))
          {
            BOOL v122 = 0;
            double v178 = v285 * v171.__cosval - v256 * v171.__sinval;
            double v179 = sqrt(v178 * v178 + v172 * v172);
            double v59 = v172 / v179;
            double v74 = v178 / v179;
            BOOL v123 = v166 <= v235;
            double v130 = v274;
            *(double *)&uint64_t v125 = v277;
          }
          else
          {
            double v130 = v274;
            *(double *)&uint64_t v125 = v277;
            double v175 = (v245 + v277) * 0.5;
            double v176 = (v246 + v274) * 0.5;
            double v177 = sqrt(v176 * v176 + v175 * v175);
            double v59 = v175 / v177;
            double v74 = v176 / v177;
            BOOL v122 = v246 - v176 / v177 + vabdd_f64(v245, v175 / v177) < v239 || v74 - v274 + vabdd_f64(v59, v277) < v239;
            BOOL v123 = 0;
          }
          if (++v124 == 83)
          {
            double v180 = v281;
            if (v281 == v289) {
              double v72 = v256;
            }
            else {
              double v72 = v259 / v281;
            }
            double v168 = v59;
            goto LABEL_210;
          }
        }
        double v180 = v281;
        double v75 = v289;
        double v168 = v256;
        if (v281 == v289) {
          double v72 = v256;
        }
        else {
          double v72 = v259 / v281;
        }
        a8 = v238;
        a2 = v234;
        BOOL v15 = v233;
        int v41 = v231;
        int v40 = v232;
        double v47 = &qword_1EB2A0000;
        double v74 = v285;
LABEL_211:
        double v187 = v242;
        double v189 = v266;
        double v188 = v271;
        double v190 = v263;
      }
      else
      {
        double v255 = v88;
        double v168 = v59;
        double v163 = 0.0;
        double v187 = 0.0;
        double v188 = 0.0;
        double v189 = 0.0;
        double v190 = 0.0;
        double v147 = 0.0;
        double v180 = v281;
      }
      Lengths((uint64_t)a1, &v292, &v291, v297, v16, &v294, &v293, (uint64_t)v302, v147, v255, v187, v188, v260, v189, v190, v257, v75, v180, (uint64_t)v301);
      double v191 = a1[6];
      double v276 = v191 * v291;
      double v273 = v191 * v292;
      double v268 = __x - v163;
      int v71 = 1;
      double v59 = v168;
      double v56 = v258;
      double v73 = v255 / v282;
    }
  }
  double v192 = 0.0;
  if (a8)
  {
    double v287 = v74;
    double v193 = sqrt(v290 * v59 * (v290 * v59) + v74 * v74);
    double v194 = 0.0;
    if (v193 != 0.0)
    {
      double v195 = v75 * v59;
      if (v75 * v59 != 0.0)
      {
        double __xa = v73;
        double v267 = v72;
        double v196 = v281 * v56;
        double v197 = v261 * (v193 * v193) / (v261 * (v193 * v193) + (sqrt(v261 * (v193 * v193) + 1.0) + 1.0) * 2.0);
        double v262 = *a1 * *a1;
        double v264 = a1[3];
        double v198 = sqrt(v75 * v287 * (v75 * v287) + v290 * v290);
        double v199 = v290 / v198;
        double v200 = v75 * v287 / v198;
        double v201 = sqrt(v196 * v196 + v288 * v288);
        C4f((uint64_t)a1, (uint64_t)v297, v197);
        double v202 = (v199 + v200) * (v200 - v199 + v200 - v199);
        BOOL v203 = (double *)&v298;
        double v204 = 0.0;
        int v205 = -3;
        double v206 = 0.0;
        do
        {
          double v204 = *v203 - (v204 - v202 * v206);
          double v206 = *(v203 - 1) - (v206 - v202 * v204);
          v203 -= 2;
          BOOL v207 = __CFADD__(v205++, 1);
        }
        while (!v207);
        double v208 = v196 / v201;
        double v209 = (v288 / v201 + v196 / v201) * (v196 / v201 - v288 / v201 + v196 / v201 - v288 / v201);
        char v210 = (double *)&v298;
        double v211 = 0.0;
        int v212 = -3;
        double v213 = 0.0;
        do
        {
          double v211 = *v210 - (v211 - v209 * v213);
          double v213 = *(v210 - 1) - (v213 - v209 * v211);
          v210 -= 2;
          BOOL v207 = __CFADD__(v212++, 1);
        }
        while (!v207);
        double v72 = v267;
        double v194 = v264 * (v195 * (v193 * v262)) * (v208 * (v213 - v211) - v200 * (v206 - v204));
        double v75 = v289;
        double v73 = __xa;
      }
    }
    if (v71 && (v268 < *(double *)&qword_1EB2A0410 * 0.75 ? (BOOL v214 = v288 - v290 < 1.75) : (BOOL v214 = 0), v214))
    {
      __double2 v218 = __sincos_stret(v268);
      long double v219 = atan2(((v75 + 1.0) * v288 + v290 * (v281 + 1.0)) * v218.__sinval, ((v75 + 1.0) * (v281 + 1.0) + v290 * v288) * (v218.__cosval + 1.0));
      double v217 = v219 + v219;
      double v74 = v287;
    }
    else
    {
      double v74 = v287;
      double v215 = v72 * v287 - v56 * v59;
      double v216 = v59 * v72 + v56 * v287;
      if (v215 == 0.0 && v216 < 0.0)
      {
        double v215 = v287 * *((double *)v47 + 128);
        double v216 = -1.0;
      }
      double v217 = atan2(v215, v216);
    }
    double v192 = (v194 + a1[7] * v217) * (double)(v38 * v40 * v41) + 0.0;
  }
  if (v251 >= v250)
  {
    double v221 = v74;
    double v222 = v59;
    double v74 = v56;
    double v59 = v72;
  }
  else
  {
    if (v16)
    {
      long double v220 = v293;
      long double v293 = v294;
      double v294 = v220;
    }
    double v221 = v56;
    double v222 = v72;
  }
  double v223 = 0.0;
  double v224 = 0.0;
  if (v15)
  {
    double v225 = (double)(v41 * v38);
    long double v226 = v74 * v225;
    double v227 = v73;
    double v228 = (double)(v38 * v40);
    double v224 = 0.0 - atan2(-(v222 * v228), v221 * v225) / v282;
    long double v229 = -(v59 * v228);
    double v73 = v227;
    double v223 = 0.0 - atan2(v229, v226) / v282;
  }
  if (a2) {
    *a2 = v273 + 0.0;
  }
  if (v15)
  {
    if (a3) {
      *a3 = v224;
    }
    if (a4) {
      *a4 = v223;
    }
  }
  if (a5) {
    *a5 = v276 + 0.0;
  }
  if (v16)
  {
    if (a6) {
      *(double *)a6 = v294;
    }
    if (a7) {
      *a7 = v293;
    }
  }
  if (a8) {
    *a8 = v192;
  }
  return v73;
}

void Lengths(uint64_t a1, double *a2, double *a3, double *a4, int a5, double *a6, double *a7, uint64_t a8, float64_t a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, double a17, double a18, uint64_t a19)
{
  C1f(a8, a9);
  C2f(a19, a9);
  uint64_t v35 = 0;
  double v36 = 1.0 - a9;
  double v37 = (a14 + a15) * (a15 - a14 + a15 - a14);
  double v38 = 0.0;
  double v39 = 0.0;
  do
  {
    double v38 = *(double *)(a8 + v35 + 48) - (v38 - v37 * v39);
    double v39 = *(double *)(a8 + v35 + 40) - (v39 - v37 * v38);
    v35 -= 16;
  }
  while (v35 != -48);
  uint64_t v40 = 0;
  double v41 = (a11 + a12) * (a12 - a11 + a12 - a11);
  double v42 = 0.0;
  double v43 = 0.0;
  do
  {
    double v42 = *(double *)(a8 + v40 + 48) - (v42 - v41 * v43);
    double v43 = *(double *)(a8 + v40 + 40) - (v43 - v41 * v42);
    v40 -= 16;
  }
  while (v40 != -48);
  uint64_t v44 = 0;
  double v45 = (a14 + a14) * a15;
  double v46 = (a11 + a11) * a12;
  double v47 = v46 * v43;
  double v48 = 0.0;
  double v49 = 0.0;
  do
  {
    double v48 = *(double *)(a19 + v44 + 48) - (v48 - v37 * v49);
    double v49 = *(double *)(a19 + v44 + 40) - (v49 - v37 * v48);
    v44 -= 16;
  }
  while (v44 != -48);
  uint64_t v50 = 0;
  double v51 = (a9 * a9 * (a9 * a9 * (a9 * a9 + 4.0) + 64.0) * 0.00390625 + a9) / v36;
  double v52 = v45 * v39;
  double v53 = v51 + 1.0;
  double v54 = 0.0;
  double v55 = 0.0;
  do
  {
    double v54 = *(double *)(a19 + v50 + 48) - (v54 - v41 * v55);
    double v55 = *(double *)(a19 + v50 + 40) - (v55 - v41 * v54);
    v50 -= 16;
  }
  while (v50 != -48);
  float64_t v56 = a9 * a9 * (a9 * a9 * (a9 * a9 * 25.0 + 36.0) + 64.0) * 0.00390625 * v36 - a9;
  double v57 = v53 * (v52 - v47);
  float64_t v58 = (v56 + 1.0) * (v45 * v49 - v46 * v55);
  double v59 = v51 - v56;
  double v60 = v57 - v58 + v59 * a10;
  double v61 = -(a11 * a15) * a13 + a16 * (a12 * a14) + -(a12 * a15) * v60;
  double v62 = v57 + v53 * a10;
  if (a5)
  {
    double v63 = a11 * a14 + a12 * a15;
    double v64 = (a17 + a18) * ((a17 - a18) * *(double *)(a1 + 32)) / (a13 + a16);
    *a2 = v62;
    *a3 = v61;
    *a4 = v59;
    *a6 = v63 + (v64 * a14 - v60 * a15) * a11 / a13;
    *a7 = v63 - (v64 * a11 - v60 * a12) * a14 / a16;
  }
  else
  {
    *a2 = v62;
    *a3 = v61;
    *a4 = v59;
  }
}

void sub_18A02F9FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchBrandCountInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  int v9 = 0;
  unsigned int v10 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 84)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFBFFFDFFFALL) & 0xFF01FF01FF01FF01));
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      int v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 | (v10 > 2);
  if ((v12 | v8)) {
    double v13 = 0;
  }
  else {
    double v13 = a3;
  }
  LODWORD(v14) = v12;
  BOOL v15 = (int *)MEMORY[0x1E4F940E8];
  BOOL v16 = (int *)MEMORY[0x1E4F940C8];
  char v66 = (v13 == 0) | v12;
  double v17 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v16)) {
      goto LABEL_104;
    }
    char v18 = 0;
    unsigned int v19 = 0;
    unint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = *v15;
      uint64_t v22 = *(void *)(v3 + v21);
      unint64_t v23 = v22 + 1;
      if (v22 == -1 || v23 > *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v17) + v22);
      *(void *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0) {
        goto LABEL_24;
      }
      v18 += 7;
      BOOL v25 = v19++ >= 9;
      if (v25)
      {
        unint64_t v20 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v16) = 1;
LABEL_24:
    int v26 = *(unsigned __int8 *)(v3 + *v16);
    if (*(unsigned char *)(v3 + *v16)) {
      unint64_t v20 = 0;
    }
LABEL_26:
    if (v26 || (v20 & 7) == 4)
    {
LABEL_104:
      if (v14)
      {
        char v60 = 1;
        goto LABEL_117;
      }
      if (v13)
      {
        while (1)
        {
          int v62 = *v13++;
          char v61 = 8;
          switch(v62)
          {
            case 0:
              goto LABEL_118;
            case 1:
              goto LABEL_111;
            case 2:
              char v61 = 64;
              goto LABEL_111;
            case 4:
              char v61 = 32;
              goto LABEL_111;
            case 7:
              char v61 = 16;
LABEL_111:
              *(unsigned char *)(a1 + 84) |= v61;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_118;
    }
    unint64_t v28 = v20 >> 3;
    BOOL v29 = (char)v14;
    if ((v66 & 1) == 0)
    {
      double v30 = v13;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if (!v29) {
          goto LABEL_82;
        }
        if ((*(unsigned char *)(a1 + 84) & 8) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 16;
          goto LABEL_46;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_114;
        }
        char v59 = 16 * *(unsigned char *)(a1 + 84);
        goto LABEL_101;
      case 2:
        if (!v29) {
          goto LABEL_82;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_114:
            char v60 = 0;
            goto LABEL_116;
          }
          char v59 = 2 * *(unsigned char *)(a1 + 84);
LABEL_101:
          v7 += v59 >> 7;
        }
        else
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 40;
LABEL_46:
          double v37 = *(void **)(a1 + v35);
          *(void *)(a1 + v35) = v34;

          --v7;
        }
        goto LABEL_102;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_82;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 84) |= 4u;
        while (2)
        {
          uint64_t v41 = *v15;
          uint64_t v42 = *(void *)(v3 + v41);
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(v3 + *v17) + v42);
            *(void *)(v3 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              BOOL v25 = v39++ >= 9;
              if (v25)
              {
                uint64_t v40 = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          uint64_t v40 = 0;
        }
LABEL_87:
        uint64_t v58 = 64;
        goto LABEL_96;
      case 4:
        if (!v29 || (*(unsigned char *)(a1 + 84) & 0x20) != 0) {
          goto LABEL_82;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_114;
        }
        int v65 = (int)v14;
        double v14 = objc_alloc_init(GEOPDSearchCountryOccurrence);
        if (!GEOPDSearchCountryOccurrenceReadAllFrom((uint64_t)v14, (void *)v3)) {
          goto LABEL_115;
        }
        PBReaderRecallMark();
        -[GEOPDSearchBrandCountInfo _addNoFlagsCountryOccurrence:](a1, v14);
        goto LABEL_81;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_82;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 84) |= 1u;
        while (2)
        {
          uint64_t v47 = *v15;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v17) + v48);
            *(void *)(v3 + v47) = v49;
            v40 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              BOOL v25 = v46++ >= 9;
              if (v25)
              {
                uint64_t v40 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          uint64_t v40 = 0;
        }
LABEL_91:
        uint64_t v58 = 48;
        goto LABEL_96;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_82;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 84) |= 2u;
        while (2)
        {
          uint64_t v53 = *v15;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v17) + v54);
            *(void *)(v3 + v53) = v55;
            v40 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              BOOL v25 = v52++ >= 9;
              if (v25)
              {
                uint64_t v40 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          uint64_t v40 = 0;
        }
LABEL_95:
        uint64_t v58 = 56;
LABEL_96:
        *(void *)(a1 + v5_Block_object_dispose(&a9, 8) = v40;
        goto LABEL_103;
      case 7:
        if (!v29 || (*(unsigned char *)(a1 + 84) & 0x10) != 0)
        {
LABEL_82:
          char v57 = PBReaderSkipValueWithTag();
          BOOL v16 = (int *)MEMORY[0x1E4F940C8];
          if ((v57 & 1) == 0)
          {
LABEL_113:
            char v60 = 0;
            goto LABEL_117;
          }
          goto LABEL_103;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_114;
        }
        int v65 = (int)v14;
        double v14 = objc_alloc_init(GEOPDSearchBrandRelationship);
        if (GEOPDSearchBrandRelationshipReadAllFrom((uint64_t)v14, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDSearchBrandCountInfo _addNoFlagsBrandRelationship:](a1, v14);
LABEL_81:

          LODWORD(v14) = v65;
LABEL_102:
          BOOL v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_103:
          if (!(v14 & 1 | (v7 != 0))) {
            goto LABEL_104;
          }
          continue;
        }
LABEL_115:

        char v60 = 0;
        LOBYTE(v14) = v65;
LABEL_116:
        BOOL v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_117:
        *(unsigned char *)(a1 + 84) |= 8u;
        *(unsigned char *)(a1 + 84) |= 0x40u;
        *(unsigned char *)(a1 + 84) |= 0x20u;
        *(unsigned char *)(a1 + 84) |= 0x10u;
        if (v60)
        {
LABEL_118:
          unint64_t v3 = *(unsigned char *)(v3 + *v16) == 0;
          if (v14) {
            goto LABEL_119;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v14)
          {
LABEL_119:
            double v63 = *(void **)(a1 + 8);
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = 0;
          }
        }
        return v3;
      default:
        int v36 = PBReaderSkipValueWithTag();
        BOOL v16 = (int *)MEMORY[0x1E4F940C8];
        if (!v36) {
          goto LABEL_113;
        }
        goto LABEL_103;
    }
  }
}

void sub_18A031CF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A031F40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchBrandCountInfoReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchBrandCountInfoReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 72) = [v6 position];
      *(_DWORD *)(a1 + 76) = [v6 length];
      unint64_t Specified = GEOPDSearchBrandCountInfoReadSpecified(a1, (unint64_t)v6, (int *)&GEOPDSearchBrandCountInfoReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_18A0320C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchBrandRelationshipIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  float64x2_t v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_50;
          }
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_46;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_47;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_46;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_47;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v28 = 0;
          break;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_50:
          BOOL v33 = 0;
          goto LABEL_49;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_47;
      }
LABEL_46:
      a1[*v4] = 1;
LABEL_47:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_18A0326D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A032BA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchBrandRelationshipReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            uint64_t v18 = PBReaderReadString();
            uint64_t v19 = *(void **)(a1 + 32);
            *(void *)(a1 + 32) = v18;

            continue;
          case 2u:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 40) |= 2u;
            while (1)
            {
              uint64_t v23 = *v4;
              uint64_t v24 = *(void *)&v3[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
              *(void *)&v3[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0) {
                goto LABEL_45;
              }
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_47;
              }
            }
            v3[*v6] = 1;
LABEL_45:
            if (v3[*v6]) {
              uint64_t v22 = 0;
            }
LABEL_47:
            uint64_t v39 = 16;
            goto LABEL_56;
          case 3u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 40) |= 4u;
            while (2)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
                *(void *)&v3[v29] = v31;
                v22 |= (unint64_t)(v32 & 0x7F) << v27;
                if (v32 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    uint64_t v22 = 0;
                    goto LABEL_51;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v22 = 0;
            }
LABEL_51:
            uint64_t v39 = 24;
            goto LABEL_56;
          case 4u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 40) |= 1u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_59;
            }
            continue;
        }
        while (1)
        {
          uint64_t v35 = *v4;
          uint64_t v36 = *(void *)&v3[v35];
          unint64_t v37 = v36 + 1;
          if (v36 == -1 || v37 > *(void *)&v3[*v5]) {
            break;
          }
          char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
          *(void *)&v3[v35] = v37;
          v22 |= (unint64_t)(v38 & 0x7F) << v33;
          if ((v38 & 0x80) == 0) {
            goto LABEL_53;
          }
          v33 += 7;
          BOOL v15 = v34++ >= 9;
          if (v15)
          {
            uint64_t v22 = 0;
            goto LABEL_55;
          }
        }
        v3[*v6] = 1;
LABEL_53:
        if (v3[*v6]) {
          uint64_t v22 = 0;
        }
LABEL_55:
        uint64_t v39 = 8;
LABEL_56:
        *(void *)(a1 + v39) = v22;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_59:
    BOOL v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_18A0336DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchBrandTriggerReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            uint64_t v16 = *v6;
            int v17 = v3[v16];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        uint64_t v16 = *v6;
        int v17 = v3[v16];
        if (v3[v16]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v17 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          uint64_t v21 = *v4;
          unint64_t v22 = *(void *)&v3[v21];
          if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v23 = *(void *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v22 + 8;
          }
          else
          {
            v3[v16] = 1;
            uint64_t v23 = 0;
          }
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v23;
        }
        else if ((v10 >> 3) == 1)
        {
          uint64_t v19 = PBReaderReadString();
          char v20 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_31;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v24 = v3[*v6] == 0;
  }
  else
  {
LABEL_31:
    BOOL v24 = 0;
  }
  objc_sync_exit(v3);

  return v24;
}

void sub_18A033E00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchBrandTriggerInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v7 & 1) {
    char v14 = 0;
  }
  else {
    char v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  BOOL v59 = v15;
  uint64_t v16 = (int *)MEMORY[0x1E4F940E8];
  int v17 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_85;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_85:
      if (v13)
      {
        char v53 = 1;
        goto LABEL_96;
      }
      if (!v14) {
        goto LABEL_97;
      }
      while (1)
      {
        int v55 = *v14++;
        int v54 = v55;
        if (v55 == 1) {
          break;
        }
        if (v54 == 2)
        {
          char v56 = 8;
LABEL_94:
          *(unsigned char *)(a1 + 60) |= v56;
        }
        else if (!v54)
        {
          goto LABEL_97;
        }
      }
      char v56 = 4;
      goto LABEL_94;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v59)
    {
      unint64_t v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30) {
          goto LABEL_67;
        }
        if ((*(unsigned char *)(a1 + 60) & 4) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v35;

          --v8;
          goto LABEL_78;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_95;
        }
        v8 += *(unsigned __int8 *)(a1 + 60) << 29 >> 31;
        goto LABEL_78;
      case 2:
        if (!v30 || (*(unsigned char *)(a1 + 60) & 8) != 0) {
          goto LABEL_67;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_95;
        }
        unint64_t v37 = objc_alloc_init(GEOPDSearchBrandTrigger);
        if (GEOPDSearchBrandTriggerReadAllFrom((uint64_t)v37, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDSearchBrandTriggerInfo _addNoFlagsTrigger:](a1, v37);

          int v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_78:
          if (v8) {
            char v52 = 1;
          }
          else {
            char v52 = v13;
          }
          if ((v52 & 1) == 0) {
            goto LABEL_85;
          }
          continue;
        }

        char v53 = 0;
        int v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_96:
        *(unsigned char *)(a1 + 60) |= 4u;
        *(unsigned char *)(a1 + 60) |= 8u;
        if (v53)
        {
LABEL_97:
          unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
          if (v13) {
            goto LABEL_98;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v13)
          {
LABEL_98:
            char v57 = *(void **)(a1 + 8);
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = 0;
          }
        }
        return v3;
      case 3:
        if ((v7 & 1) == 0) {
          goto LABEL_67;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v41 = *v16;
          uint64_t v42 = *(void *)(v3 + v41);
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(v3 + *v18) + v42);
            *(void *)(v3 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              BOOL v26 = v39++ >= 9;
              if (v26)
              {
                uint64_t v40 = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          uint64_t v40 = 0;
        }
LABEL_72:
        uint64_t v51 = 24;
        goto LABEL_77;
      case 4:
        if (v7)
        {
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v40 = 0;
          *(unsigned char *)(a1 + 60) |= 2u;
          while (1)
          {
            uint64_t v47 = *v16;
            uint64_t v48 = *(void *)(v3 + v47);
            unint64_t v49 = v48 + 1;
            if (v48 == -1 || v49 > *(void *)(v3 + *v6)) {
              break;
            }
            char v50 = *(unsigned char *)(*(void *)(v3 + *v18) + v48);
            *(void *)(v3 + v47) = v49;
            v40 |= (unint64_t)(v50 & 0x7F) << v45;
            if ((v50 & 0x80) == 0) {
              goto LABEL_74;
            }
            v45 += 7;
            BOOL v26 = v46++ >= 9;
            if (v26)
            {
              uint64_t v40 = 0;
              goto LABEL_76;
            }
          }
          *(unsigned char *)(v3 + *v17) = 1;
LABEL_74:
          if (*(unsigned char *)(v3 + *v17)) {
            uint64_t v40 = 0;
          }
LABEL_76:
          uint64_t v51 = 32;
LABEL_77:
          *(void *)(a1 + v51) = v40;
        }
        else
        {
LABEL_67:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_95:
            char v53 = 0;
            goto LABEL_96;
          }
        }
        goto LABEL_78;
      default:
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_95;
        }
        goto LABEL_78;
    }
  }
}

void sub_18A034B00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A034CC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchBrandTriggerInfoReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchBrandTriggerInfoReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = [v6 position];
      *(_DWORD *)(a1 + 52) = [v6 length];
      unint64_t Specified = GEOPDSearchBrandTriggerInfoReadSpecified(a1, (unint64_t)v6, (int *)&GEOPDSearchBrandTriggerInfoReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)char v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_18A034E48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0350B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0353DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchCountryOccurrenceReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_32;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              uint64_t v22 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v22 = 0;
          }
LABEL_34:
          *(void *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          char v19 = *(void **)(a1 + 8);
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18A035A10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchSearchChainInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  int v9 = 0;
  unsigned int v10 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFEFFFDFFFCLL) & 0xFF01FF01FF01FF01));
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      int v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 | (v10 > 2);
  if ((v12 | v8)) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  LODWORD(v14) = v12;
  char v53 = (v13 == 0) | v12;
  BOOL v15 = (int *)MEMORY[0x1E4F940E8];
  int v16 = (int *)MEMORY[0x1E4F940C8];
  int v17 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v16)) {
      goto LABEL_78;
    }
    char v18 = 0;
    unsigned int v19 = 0;
    unint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = *v15;
      uint64_t v22 = *(void *)(v3 + v21);
      unint64_t v23 = v22 + 1;
      if (v22 == -1 || v23 > *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v17) + v22);
      *(void *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0) {
        goto LABEL_24;
      }
      v18 += 7;
      BOOL v25 = v19++ >= 9;
      if (v25)
      {
        unint64_t v20 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v16) = 1;
LABEL_24:
    int v26 = *(unsigned __int8 *)(v3 + *v16);
    if (*(unsigned char *)(v3 + *v16)) {
      unint64_t v20 = 0;
    }
LABEL_26:
    if (v26 || (v20 & 7) == 4)
    {
LABEL_78:
      if (v14)
      {
        char v47 = 1;
        goto LABEL_90;
      }
      if (v13)
      {
        while (1)
        {
          int v48 = *v13++;
          char v49 = 8;
          switch(v48)
          {
            case 0:
              goto LABEL_91;
            case 1:
              goto LABEL_85;
            case 2:
              char v49 = 16;
              goto LABEL_85;
            case 3:
              char v49 = 4;
              goto LABEL_85;
            case 5:
              char v49 = 2;
LABEL_85:
              *(unsigned char *)(a1 + 68) |= v49;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_91;
    }
    unint64_t v28 = v20 >> 3;
    BOOL v29 = (char)v14;
    if ((v53 & 1) == 0)
    {
      BOOL v30 = v13;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if (!v29) {
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 32;
          goto LABEL_64;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_87;
        }
        char v46 = 16 * *(unsigned char *)(a1 + 68);
        goto LABEL_75;
      case 2:
        if (!v29 || (*(unsigned char *)(a1 + 68) & 0x10) != 0) {
          goto LABEL_65;
        }
        int v52 = (int)v14;
        PBReaderReadString();
        char v14 = (GEOPDSearchCountryOccurrence *)objc_claimAutoreleasedReturnValue();
        if (v14) {
          -[GEOPDSearchSearchChainInfo _addNoFlagsTrigger:](a1, v14);
        }
        goto LABEL_52;
      case 3:
        if (!v29 || (*(unsigned char *)(a1 + 68) & 4) != 0) {
          goto LABEL_65;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_87;
        }
        int v52 = (int)v14;
        char v14 = objc_alloc_init(GEOPDSearchCountryOccurrence);
        if (GEOPDSearchCountryOccurrenceReadAllFrom((uint64_t)v14, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDSearchSearchChainInfo _addNoFlagsCountryOccurrence:](a1, v14);
LABEL_52:

          LODWORD(v14) = v52;
LABEL_76:
          int v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_77:
          if (!(v14 & 1 | (v7 != 0))) {
            goto LABEL_78;
          }
          continue;
        }

        char v47 = 0;
        LOBYTE(v14) = v52;
LABEL_89:
        int v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_90:
        *(unsigned char *)(a1 + 68) |= 8u;
        *(unsigned char *)(a1 + 68) |= 0x10u;
        *(unsigned char *)(a1 + 68) |= 4u;
        *(unsigned char *)(a1 + 68) |= 2u;
        if (v47)
        {
LABEL_91:
          unint64_t v3 = *(unsigned char *)(v3 + *v16) == 0;
          if (v14) {
            goto LABEL_92;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v14)
          {
LABEL_92:
            char v50 = *(void **)(a1 + 8);
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = 0;
          }
        }
        return v3;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_65;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (2)
        {
          uint64_t v40 = *v15;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(v3 + *v17) + v41);
            *(void *)(v3 + v40) = v42;
            v39 |= (unint64_t)(v43 & 0x7F) << v37;
            if (v43 < 0)
            {
              v37 += 7;
              BOOL v25 = v38++ >= 9;
              if (v25)
              {
                uint64_t v39 = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          uint64_t v39 = 0;
        }
LABEL_70:
        *(void *)(a1 + 40) = v39;
        goto LABEL_77;
      case 5:
        if (v29)
        {
          if ((*(unsigned char *)(a1 + 68) & 2) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_87:
              char v47 = 0;
              goto LABEL_89;
            }
            char v46 = *(unsigned char *)(a1 + 68) << 6;
LABEL_75:
            v7 += v46 >> 7;
          }
          else
          {
            uint64_t v34 = PBReaderReadString();
            uint64_t v35 = 16;
LABEL_64:
            char v44 = *(void **)(a1 + v35);
            *(void *)(a1 + v35) = v34;

            --v7;
          }
          goto LABEL_76;
        }
LABEL_65:
        char v45 = PBReaderSkipValueWithTag();
        int v16 = (int *)MEMORY[0x1E4F940C8];
        if ((v45 & 1) == 0)
        {
LABEL_86:
          char v47 = 0;
          goto LABEL_90;
        }
        goto LABEL_77;
      default:
        int v36 = PBReaderSkipValueWithTag();
        int v16 = (int *)MEMORY[0x1E4F940C8];
        if (!v36) {
          goto LABEL_86;
        }
        goto LABEL_77;
    }
  }
}

void sub_18A0363E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A036954(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A036B1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchSearchChainInfoReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchSearchChainInfoReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 56) = [v6 position];
      *(_DWORD *)(a1 + 60) = [v6 length];
      unint64_t Specified = GEOPDSearchSearchChainInfoReadSpecified(a1, (unint64_t)v6, (int *)&GEOPDSearchSearchChainInfoReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_18A036CA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A036FA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0373E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0384BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18A03871C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_18A038B60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18A038D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A038ED0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_18A039288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A03967C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_18A039A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A03A14C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location)
{
}

void sub_18A03A550(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18A03AD38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
}

void sub_18A03C150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
}

void sub_18A03D544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose((const void *)(v37 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_18A03DA78(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_18A03DEEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A03E054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A03E2C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A03E784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceCheckinWithSubscriptionStateSummaryRequestReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadData();
          unsigned int v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v21 = *(void **)(a1 + 8);
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_26;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_18A03F2B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceCheckinWithSubscriptionStateSummaryRequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPairedDeviceCheckinWithSubscriptionStateSummaryRequestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A03F31C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceCheckinWithSubscriptionStateSummaryRequestIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPairedDeviceConfigureSubscriptionShouldSyncReplyReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        id v20 = *(void **)(a1 + 8);
        *(void *)(a1 + _Block_object_dispose(&a9, 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18A03FCD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceConfigureSubscriptionShouldSyncReplyReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPairedDeviceConfigureSubscriptionShouldSyncReplyReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A03FD3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceConfigureSubscriptionShouldSyncReplyIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      uint64_t v11 = *(void *)&a1[v10];
      unint64_t v12 = v11 + 1;
      if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v9 & 7) == 4;
    }
    if (v15) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v16 = 0;
      goto LABEL_22;
    }
  }
  BOOL v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

BOOL GEOPairedDeviceConfigureSubscriptionShouldSyncRequestReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    int v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_34;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              uint64_t v22 = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            uint64_t v22 = 0;
          }
LABEL_36:
          *(unsigned char *)(a1 + 24) = v22 != 0;
        }
        else if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          id v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v28 = *(void **)(a1 + 8);
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v27;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_39;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_39:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_18A040800(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceConfigureSubscriptionShouldSyncRequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPairedDeviceConfigureSubscriptionShouldSyncRequestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A040864(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceConfigureSubscriptionShouldSyncRequestIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          BOOL v23 = 0;
          goto LABEL_36;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPairedDeviceGetStorageInfoReplyReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_34:
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v26 = *(void **)(a1 + 8);
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18A0415D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceGetStorageInfoReplyReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPairedDeviceGetStorageInfoReplyReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A041638(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceGetStorageInfoReplyIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOPairedDeviceGetStorageInfoRequestReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        int v20 = *(void **)(a1 + 8);
        *(void *)(a1 + _Block_object_dispose(&a9, 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18A042040(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceGetStorageInfoRequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPairedDeviceGetStorageInfoRequestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A0420A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceGetStorageInfoRequestIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      uint64_t v11 = *(void *)&a1[v10];
      unint64_t v12 = v11 + 1;
      if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v9 & 7) == 4;
    }
    if (v15) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v16 = 0;
      goto LABEL_22;
    }
  }
  BOOL v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

void sub_18A0428B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceMessageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  char v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = *(unsigned __int16 *)(a1 + 112);
  unsigned int v14 = ((v13 >> 6) & 1)
      + (v13 & 1)
      + ((v13 >> 9) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v13), (uint16x4_t)0xFFFEFFFDFFFCFFFBLL), (int8x8_t)0x1000100010001))+ ((v13 >> 8) & 1)+ ((v13 >> 1) & 1)+ ((v13 >> 7) & 1));
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v16 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v18 = v14 > 6;
        char v19 = v18 & ~(_BYTE)v12 | v10;
        unsigned __int8 v20 = v18 | v12;
        char v70 = v19;
        char v71 = v20 | v19;
        if ((v20 | v9)) {
          BOOL v21 = 0;
        }
        else {
          BOOL v21 = a3;
        }
        BOOL v22 = (int *)MEMORY[0x1E4F940E8];
        char v72 = (v21 == 0) | v20;
        BOOL v73 = v20;
        unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        char v24 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v14;
LABEL_7:
        uint64_t v15 = v10;
LABEL_8:
        uint64_t v16 = v11;
        uint64_t v17 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        uint64_t v12 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v23)) {
      goto LABEL_152;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v22;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v7)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v2_Block_object_dispose(&a9, 8) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v32 = v26++ >= 9;
      if (v32)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_152:
      int v69 = 1;
      goto LABEL_153;
    }
    unint64_t v35 = v27 >> 3;
    BOOL v36 = v73;
    if ((v72 & 1) == 0)
    {
      uint64_t v37 = v21;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 'd':
        if (v9) {
          *(void *)(a1 + 120) = 3;
        }
        if (!v36) {
          goto LABEL_125;
        }
        if ((*(_WORD *)(a1 + 112) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_176;
          }
          __int16 v63 = *(_WORD *)(a1 + 112) << 13;
          goto LABEL_149;
        }
        [(id)a1 resetPayload];
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_176;
        }
        uint64_t v41 = objc_alloc_init(GEOPairedDeviceConfigureSubscriptionShouldSyncRequest);
        if (!GEOPairedDeviceConfigureSubscriptionShouldSyncRequestReadAllFrom((uint64_t)v41, (void *)v3)) {
          goto LABEL_175;
        }
        PBReaderRecallMark();
        unint64_t v42 = *(void **)(a1 + 32);
        *(void *)(a1 + 32) = v41;

        if (*(void *)(a1 + 32))
        {
          uint64_t v43 = 3;
          goto LABEL_123;
        }
        goto LABEL_124;
      case 'e':
        if (v9) {
          *(void *)(a1 + 120) = 4;
        }
        if (!v36) {
          goto LABEL_125;
        }
        if ((*(_WORD *)(a1 + 112) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_176;
          }
          __int16 v63 = *(_WORD *)(a1 + 112) << 7;
          goto LABEL_149;
        }
        [(id)a1 resetPayload];
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_176;
        }
        uint64_t v41 = objc_alloc_init(GEOPairedDeviceSubscriptionStartStopDownloadRequest);
        if (!GEOPairedDeviceSubscriptionStartStopDownloadRequestReadAllFrom((uint64_t)v41, (void *)v3)) {
          goto LABEL_175;
        }
        PBReaderRecallMark();
        uint64_t v51 = *(void **)(a1 + 80);
        *(void *)(a1 + 80) = v41;

        if (*(void *)(a1 + 80))
        {
          uint64_t v43 = 4;
          goto LABEL_123;
        }
        goto LABEL_124;
      case 'f':
        if (v9) {
          *(void *)(a1 + 120) = 5;
        }
        if (!v36) {
          goto LABEL_125;
        }
        if ((*(_WORD *)(a1 + 112) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_176;
          }
          __int16 v63 = *(_WORD *)(a1 + 112) << 14;
          goto LABEL_149;
        }
        [(id)a1 resetPayload];
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_176;
        }
        uint64_t v41 = objc_alloc_init(GEOPairedDeviceCheckinWithSubscriptionStateSummaryRequest);
        if (!GEOPairedDeviceCheckinWithSubscriptionStateSummaryRequestReadAllFrom((uint64_t)v41, (void *)v3)) {
          goto LABEL_175;
        }
        PBReaderRecallMark();
        int v52 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v41;

        if (*(void *)(a1 + 24))
        {
          uint64_t v43 = 5;
          goto LABEL_123;
        }
        goto LABEL_124;
      case 'g':
        if (v9) {
          *(void *)(a1 + 120) = 6;
        }
        if (!v36) {
          goto LABEL_125;
        }
        if ((*(_WORD *)(a1 + 112) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_176;
          }
          __int16 v63 = *(_WORD *)(a1 + 112) << 8;
          goto LABEL_149;
        }
        [(id)a1 resetPayload];
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_176;
        }
        uint64_t v41 = objc_alloc_init(GEOPairedDeviceSubscriptionStatesSummary);
        if (!GEOPairedDeviceSubscriptionStatesSummaryReadAllFrom((uint64_t)v41, (void *)v3)) {
          goto LABEL_175;
        }
        PBReaderRecallMark();
        char v53 = *(void **)(a1 + 72);
        *(void *)(a1 + 72) = v41;

        if (*(void *)(a1 + 72))
        {
          uint64_t v43 = 6;
          goto LABEL_123;
        }
        goto LABEL_124;
      case 'h':
        if (v9) {
          *(void *)(a1 + 120) = 7;
        }
        if (!v36) {
          goto LABEL_125;
        }
        if ((*(_WORD *)(a1 + 112) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_176;
          }
          __int16 v63 = *(_WORD *)(a1 + 112) << 9;
          goto LABEL_149;
        }
        [(id)a1 resetPayload];
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_176;
        }
        uint64_t v41 = objc_alloc_init(GEOPairedDeviceSubscriptionStateSynchronizationRequest);
        if (!GEOPairedDeviceSubscriptionStateSynchronizationRequestReadAllFrom(v41, (void *)v3)) {
          goto LABEL_175;
        }
        PBReaderRecallMark();
        int v54 = *(void **)(a1 + 64);
        *(void *)(a1 + 64) = v41;

        if (*(void *)(a1 + 64))
        {
          uint64_t v43 = 7;
          goto LABEL_123;
        }
        goto LABEL_124;
      case 'i':
        if (v9) {
          *(void *)(a1 + 120) = 8;
        }
        if (!v36)
        {
LABEL_125:
          char v62 = PBReaderSkipValueWithTag();
          char v24 = (int *)MEMORY[0x1E4F940B8];
          char v7 = (int *)MEMORY[0x1E4F940E0];
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          if ((v62 & 1) == 0)
          {
            int v69 = 0;
            goto LABEL_153;
          }
          goto LABEL_151;
        }
        if ((*(_WORD *)(a1 + 112) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_176;
          }
          __int16 v63 = *(_WORD *)(a1 + 112) << 6;
          goto LABEL_149;
        }
        [(id)a1 resetPayload];
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_176;
        }
        uint64_t v41 = objc_alloc_init(GEOPairedDeviceSubscriptionStateUpdate);
        if (!GEOPairedDeviceSubscriptionStateUpdateReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1)) {
          goto LABEL_175;
        }
        PBReaderRecallMark();
        int v55 = *(void **)(a1 + 88);
        *(void *)(a1 + 8_Block_object_dispose(&a9, 8) = v41;

        if (*(void *)(a1 + 88))
        {
          uint64_t v43 = 8;
          goto LABEL_123;
        }
        goto LABEL_124;
      default:
        switch((int)v35)
        {
          case 1:
            if ((v9 & 1) == 0) {
              goto LABEL_125;
            }
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v46 = 0;
            while (2)
            {
              uint64_t v47 = *v22;
              uint64_t v48 = *(void *)(v3 + v47);
              unint64_t v49 = v48 + 1;
              if (v48 == -1 || v49 > *(void *)(v3 + *v7))
              {
                *(unsigned char *)(v3 + *v23) = 1;
              }
              else
              {
                char v50 = *(unsigned char *)(*(void *)(v3 + *v24) + v48);
                *(void *)(v3 + v47) = v49;
                v46 |= (unint64_t)(v50 & 0x7F) << v44;
                if (v50 < 0)
                {
                  v44 += 7;
                  BOOL v32 = v45++ >= 9;
                  if (v32)
                  {
                    LODWORD(v46) = 0;
                    goto LABEL_130;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(v3 + *v23)) {
              LODWORD(v46) = 0;
            }
LABEL_130:
            *(_DWORD *)(a1 + 10_Block_object_dispose(&a9, 8) = v46;
            goto LABEL_151;
          case 2:
            if (!v36) {
              goto LABEL_125;
            }
            if ((*(_WORD *)(a1 + 112) & 0x10) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_176;
              }
              __int16 v63 = *(_WORD *)(a1 + 112) << 11;
              goto LABEL_149;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_176;
            }
            uint64_t v41 = objc_alloc_init(GEOPairedDeviceMessageMetadata);
            if (!GEOPairedDeviceMessageMetadataReadAllFrom((uint64_t)v41, (void *)v3)) {
              goto LABEL_175;
            }
            PBReaderRecallMark();
            BOOL v59 = *(void **)(a1 + 48);
            *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = v41;

            goto LABEL_124;
          case 3:
            if (v9) {
              *(void *)(a1 + 120) = 1;
            }
            if (!v36) {
              goto LABEL_125;
            }
            if ((*(_WORD *)(a1 + 112) & 0x20) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_176;
              }
              __int16 v63 = *(_WORD *)(a1 + 112) << 10;
              goto LABEL_149;
            }
            [(id)a1 resetPayload];
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_176;
            }
            uint64_t v41 = objc_alloc_init(GEOPairedDevicePingRequest);
            if (!GEOPairedDevicePingRequestReadAllFrom((uint64_t)v41, (void *)v3)) {
              goto LABEL_175;
            }
            PBReaderRecallMark();
            char v60 = *(void **)(a1 + 56);
            *(void *)(a1 + 56) = v41;

            if (*(void *)(a1 + 56))
            {
              uint64_t v43 = 1;
              goto LABEL_123;
            }
            goto LABEL_124;
          case 4:
            if (v9) {
              *(void *)(a1 + 120) = 2;
            }
            if (!v36) {
              goto LABEL_125;
            }
            if ((*(_WORD *)(a1 + 112) & 8) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_176;
              }
              __int16 v63 = *(_WORD *)(a1 + 112) << 12;
LABEL_149:
              v8 += v63 >> 15;
              goto LABEL_150;
            }
            [(id)a1 resetPayload];
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_176;
            }
            uint64_t v41 = objc_alloc_init(GEOPairedDeviceGetStorageInfoRequest);
            if (GEOPairedDeviceGetStorageInfoRequestReadAllFrom((uint64_t)v41, (void *)v3))
            {
              PBReaderRecallMark();
              char v61 = *(void **)(a1 + 40);
              *(void *)(a1 + 40) = v41;

              if (*(void *)(a1 + 40))
              {
                uint64_t v43 = 2;
LABEL_123:
                *(void *)(a1 + 120) = v43;
              }
LABEL_124:
              --v8;
LABEL_150:
              unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
              char v7 = (int *)MEMORY[0x1E4F940E0];
              char v24 = (int *)MEMORY[0x1E4F940B8];
LABEL_151:
              if (!(v71 & 1 | (v8 != 0))) {
                goto LABEL_152;
              }
              continue;
            }
LABEL_175:

LABEL_176:
            int v69 = 0;
            unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_153:
            if (v70) {
LABEL_154:
            }
              *(_WORD *)(a1 + 112) |= 1u;
            if (v73 || (v69 & 1) == 0)
            {
              *(_WORD *)(a1 + 112) |= 0x10u;
              *(_WORD *)(a1 + 112) |= 0x20u;
              *(_WORD *)(a1 + 112) |= 8u;
              *(_WORD *)(a1 + 112) |= 4u;
              *(_WORD *)(a1 + 112) |= 0x100u;
              *(_WORD *)(a1 + 112) |= 2u;
              *(_WORD *)(a1 + 112) |= 0x80u;
              *(_WORD *)(a1 + 112) |= 0x40u;
              *(_WORD *)(a1 + 112) |= 0x200u;
            }
            else if (v21)
            {
              while (2)
              {
                int v64 = *v21++;
                int v65 = v64 - 100;
                switch(v64)
                {
                  case 'd':
                    __int16 v66 = 4;
                    goto LABEL_168;
                  case 'e':
                    __int16 v66 = 256;
                    goto LABEL_168;
                  case 'f':
                    __int16 v66 = 2;
                    goto LABEL_168;
                  case 'g':
                    __int16 v66 = 128;
                    goto LABEL_168;
                  case 'h':
                    __int16 v66 = 64;
                    goto LABEL_168;
                  case 'i':
                    __int16 v66 = 512;
LABEL_168:
                    *(_WORD *)(a1 + 112) |= v66;
                    continue;
                  default:
                    __int16 v66 = 16;
                    switch(v65)
                    {
                      case 0:
                        goto LABEL_169;
                      case 2:
                        goto LABEL_168;
                      case 3:
                        __int16 v66 = 32;
                        goto LABEL_168;
                      case 4:
                        __int16 v66 = 8;
                        goto LABEL_168;
                      default:
                        continue;
                    }
                    goto LABEL_169;
                }
              }
            }
LABEL_169:
            if (v69) {
              unint64_t v3 = *(unsigned char *)(v3 + *v23) == 0;
            }
            else {
              unint64_t v3 = 0;
            }
            if (v73)
            {
              double v67 = *(void **)(a1 + 8);
              *(void *)(a1 + _Block_object_dispose(&a9, 8) = 0;
            }
            return v3;
          default:
            if (v70 & 1) == 0 || (*(_WORD *)(a1 + 112)) {
              goto LABEL_125;
            }
            if (!*(void *)(a1 + 16))
            {
              id v56 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              char v57 = *(void **)(a1 + 16);
              *(void *)(a1 + 16) = v56;
            }
            int v58 = PBUnknownFieldAdd();
            unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
            char v7 = (int *)MEMORY[0x1E4F940E0];
            char v24 = (int *)MEMORY[0x1E4F940B8];
            if (v58) {
              goto LABEL_151;
            }
            int v69 = 0;
            goto LABEL_154;
        }
    }
  }
}

void sub_18A04380C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A043970(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A043AD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A043C34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A043D98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A043EFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A044060(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0441C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A044C40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPairedDeviceMessageCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 56) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 80) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 72) readAll:1];
  [*(id *)(a1 + 64) readAll:1];
  uint64_t v2 = *(void **)(a1 + 88);

  return [v2 readAll:1];
}

unint64_t GEOPairedDeviceMessageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPairedDeviceMessageReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = [v8 position];
  *(_DWORD *)(a1 + 100) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPairedDeviceMessageReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPairedDeviceMessageReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPairedDeviceMessageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPairedDeviceMessageCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_18A044EA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceMessageReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPairedDeviceMessageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A044F04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPairedDeviceMessageIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = 0;
    int v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_71;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v2;
        uint64_t v11 = *(void *)&a1[v10];
        unint64_t v12 = v11 + 1;
        if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        if (v8++ >= 9)
        {
          unint64_t v9 = 0;
          int v15 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v15 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v16 = v9 & 7;
      if (v15 || v16 == 4) {
        goto LABEL_71;
      }
      switch((v9 >> 3))
      {
        case 'd':
          if (v16 == 2
            && PBReaderPlaceMark()
            && GEOPairedDeviceConfigureSubscriptionShouldSyncRequestIsValid(a1))
          {
            goto LABEL_66;
          }
          goto LABEL_78;
        case 'e':
          if (v16 != 2
            || !PBReaderPlaceMark()
            || !GEOPairedDeviceSubscriptionStartStopDownloadRequestIsValid(a1))
          {
            goto LABEL_78;
          }
          goto LABEL_66;
        case 'f':
          if (v16 != 2
            || !PBReaderPlaceMark()
            || !GEOPairedDeviceCheckinWithSubscriptionStateSummaryRequestIsValid(a1))
          {
            goto LABEL_78;
          }
          goto LABEL_66;
        case 'g':
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPairedDeviceSubscriptionStatesSummaryIsValid(a1)) {
            goto LABEL_78;
          }
          goto LABEL_66;
        case 'h':
          if (v16 != 2
            || !PBReaderPlaceMark()
            || !GEOPairedDeviceSubscriptionStateSynchronizationRequestIsValid(a1))
          {
            goto LABEL_78;
          }
          goto LABEL_66;
        case 'i':
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPairedDeviceSubscriptionStateUpdateIsValid(a1))
          {
LABEL_78:
            PBReaderRecallMark();
            return 0;
          }
LABEL_66:
          PBReaderRecallMark();
LABEL_67:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_71;
          }
          break;
        default:
          switch((v9 >> 3))
          {
            case 1u:
              if (v5 || (v9 & 7) != 0) {
                goto LABEL_78;
              }
              unsigned int v18 = 0;
              break;
            case 2u:
              if (v16 != 2 || !PBReaderPlaceMark() || !GEOPairedDeviceMessageMetadataIsValid(a1)) {
                goto LABEL_78;
              }
              goto LABEL_66;
            case 3u:
              if (v16 != 2 || !PBReaderPlaceMark() || !GEOPairedDevicePingRequestIsValid(a1)) {
                goto LABEL_78;
              }
              goto LABEL_66;
            case 4u:
              if (v16 == 2
                && PBReaderPlaceMark()
                && GEOPairedDeviceGetStorageInfoRequestIsValid((unsigned __int8 *)a1))
              {
                goto LABEL_66;
              }
              goto LABEL_78;
            default:
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_78;
              }
              goto LABEL_67;
          }
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v6] + v20);
            *(void *)&a1[v19] = v21;
            int v5 = 1;
            if (v22 < 0 && v18++ <= 8) {
              continue;
            }
            goto LABEL_67;
          }
          int v5 = 1;
          a1[*v4] = 1;
          goto LABEL_67;
      }
    }
  }
  int v5 = 0;
LABEL_71:
  if (a1[*v4]) {
    BOOL v24 = 1;
  }
  else {
    BOOL v24 = v5 == 0;
  }
  uint64_t v25 = !v24;
  PBReaderRecallMark();
  return v25;
}

BOOL GEOPairedDeviceMessageMetadataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      unint64_t v18 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v16 != 1) {
          goto LABEL_43;
        }
        uint64_t v19 = *v2;
        unint64_t v20 = *(void *)&a1[v19];
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v21 = v20 + 8, v21 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v19] = v21;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if (v18 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_43;
        }
        unsigned int v22 = 0;
        while (1)
        {
          uint64_t v23 = *v2;
          uint64_t v24 = *(void *)&a1[v23];
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
            break;
          }
          int v26 = *(char *)(*(void *)&a1[*v5] + v24);
          *(void *)&a1[v23] = v25;
          if (v26 < 0 && v22++ <= 8) {
            continue;
          }
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else if (v18 == 1)
      {
        if (v16 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_43:
          BOOL v28 = 0;
          goto LABEL_42;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_43;
      }
LABEL_40:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
LABEL_42:
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPairedDevicePingRequestIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOPairedDeviceSubscriptionStartStopDownloadRequestIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_42;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_42;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v24 = 0;
        while (1)
        {
          uint64_t v25 = *v2;
          uint64_t v26 = *(void *)&a1[v25];
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
            goto LABEL_39;
          }
          int v28 = *(char *)(*(void *)&a1[*v5] + v26);
          *(void *)&a1[v25] = v27;
          if (v28 < 0)
          {
            BOOL v23 = v24++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_41;
        }
      }
      if (v17 == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_44:
        BOOL v29 = 0;
        goto LABEL_43;
      }
LABEL_41:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_42;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_44;
    }
    unsigned int v18 = 0;
    while (1)
    {
      uint64_t v19 = *v2;
      uint64_t v20 = *(void *)&a1[v19];
      unint64_t v21 = v20 + 1;
      if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
        break;
      }
      int v22 = *(char *)(*(void *)&a1[*v5] + v20);
      *(void *)&a1[v19] = v21;
      if (v22 < 0)
      {
        BOOL v23 = v18++ > 8;
        if (!v23) {
          continue;
        }
      }
      goto LABEL_41;
    }
LABEL_39:
    a1[*v4] = 1;
    goto LABEL_41;
  }
LABEL_42:
  BOOL v29 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v29;
}

BOOL GEOPairedDeviceSubscriptionStatesSummaryIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      unint64_t v18 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v16 != 1) {
          goto LABEL_67;
        }
        uint64_t v29 = *v2;
        unint64_t v30 = *(void *)&a1[v29];
        if (v30 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v31 = v30 + 8, v31 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v29] = v31;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if (v18 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_67;
        }
        unsigned int v32 = 0;
        while (1)
        {
          uint64_t v33 = *v2;
          uint64_t v34 = *(void *)&a1[v33];
          unint64_t v35 = v34 + 1;
          if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
            break;
          }
          int v36 = *(char *)(*(void *)&a1[*v5] + v34);
          *(void *)&a1[v33] = v35;
          if (v36 < 0 && v32++ <= 8) {
            continue;
          }
          goto LABEL_65;
        }
        a1[*v4] = 1;
      }
      else if (v18 == 1)
      {
        if (v16 != 2 || !PBReaderPlaceMark() || *(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
          goto LABEL_67;
        }
        char v19 = 0;
        char v20 = 0;
        do
        {
          if (a1[*v4]) {
            break;
          }
          char v21 = 0;
          unsigned int v22 = 0;
          unint64_t v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              break;
            }
            char v27 = *(unsigned char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0) {
              goto LABEL_35;
            }
            v21 += 7;
            BOOL v13 = v22++ >= 9;
            if (v13)
            {
              unint64_t v23 = 0;
              if (a1[*v4]) {
                goto LABEL_46;
              }
              goto LABEL_36;
            }
          }
          a1[*v4] = 1;
LABEL_35:
          if (a1[*v4]) {
            break;
          }
LABEL_36:
          int v28 = v23 & 7;
          if ((v23 >> 3) == 2)
          {
            if (v28 != 2 || !GEOPairedDeviceSubscriptionStateSummaryIsValid(a1)) {
              goto LABEL_67;
            }
            char v20 = 1;
          }
          else if ((v23 >> 3) == 1)
          {
            if (v28 != 2) {
              goto LABEL_67;
            }
            char v19 = 1;
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_67;
            }
          }
          else if (!PBReaderSkipValueWithTag())
          {
            goto LABEL_67;
          }
        }
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
LABEL_46:
        if ((v19 & 1) == 0 || (v20 & 1) == 0)
        {
LABEL_67:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_67;
      }
LABEL_65:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOPairedDeviceSubscriptionStateSynchronizationRequestIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPairedDeviceSubscriptionStateUpdateIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_50;
          }
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_38;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_47;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v23 = 0;
          break;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPairedDeviceProgressIsValid(a1)) {
            goto LABEL_50;
          }
          goto LABEL_46;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPairedDeviceSubscriptionStateUserInfoIsValid(a1)) {
            goto LABEL_50;
          }
LABEL_46:
          PBReaderRecallMark();
          continue;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_50:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_47;
      }
LABEL_38:
      a1[*v4] = 1;
LABEL_47:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_18A0464A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPairedDeviceMessageIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  if ((*(_WORD *)(a1 + 112) & 0x5FE) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 112) & 0x200) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 88);

  return GEOPairedDeviceSubscriptionStateUpdateIsDirty(v3);
}

os_unfair_lock_s *GEOPairedDeviceMessageIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOPairedDeviceMessageIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A0468C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A046CA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceMessageMetadataReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          *(unsigned char *)(a1 + 36) |= 1u;
          uint64_t v21 = *v4;
          unint64_t v22 = *(void *)&v3[v21];
          if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v23 = *(void *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v22 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v23 = 0;
          }
          *(void *)(a1 + 24) = v23;
        }
        else if (v18 == 2)
        {
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          *(unsigned char *)(a1 + 36) |= 2u;
          while (1)
          {
            uint64_t v27 = *v4;
            uint64_t v28 = *(void *)&v3[v27];
            unint64_t v29 = v28 + 1;
            if (v28 == -1 || v29 > *(void *)&v3[*v5]) {
              break;
            }
            char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
            *(void *)&v3[v27] = v29;
            v26 |= (unint64_t)(v30 & 0x7F) << v24;
            if ((v30 & 0x80) == 0) {
              goto LABEL_38;
            }
            v24 += 7;
            BOOL v15 = v25++ >= 9;
            if (v15)
            {
              LODWORD(v26) = 0;
              goto LABEL_40;
            }
          }
          v3[*v6] = 1;
LABEL_38:
          if (v3[*v6]) {
            LODWORD(v26) = 0;
          }
LABEL_40:
          *(_DWORD *)(a1 + 32) = v26;
        }
        else if (v18 == 1)
        {
          uint64_t v19 = PBReaderReadString();
          unint64_t v20 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v19;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v31 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v32 = *(void **)(a1 + 8);
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v31;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_45;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_45:
    BOOL v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_18A0479E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceMessageMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPairedDeviceMessageMetadataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A047A4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDevicePingReplyReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18A04886C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDevicePingReplyReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPairedDevicePingReplyReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A0488D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDevicePingReplyIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOPairedDevicePingRequestReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18A049578(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDevicePingRequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPairedDevicePingRequestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A0495DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceProgressReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 44) |= 0x10u;
            while (2)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
                *(void *)&v3[v21] = v23;
                v20 |= (unint64_t)(v24 & 0x7F) << v18;
                if (v24 < 0)
                {
                  v18 += 7;
                  BOOL v15 = v19++ >= 9;
                  if (v15)
                  {
                    uint64_t v20 = 0;
                    goto LABEL_58;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_58:
            *(unsigned char *)(a1 + 40) = v20 != 0;
            continue;
          case 2u:
            *(unsigned char *)(a1 + 44) |= 4u;
            uint64_t v27 = *v4;
            unint64_t v28 = *(void *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFFBLL && v28 + 4 <= *(void *)&v3[*v5])
            {
              int v29 = *(_DWORD *)(*(void *)&v3[*v7] + v28);
              *(void *)&v3[v27] = v28 + 4;
            }
            else
            {
              v3[*v6] = 1;
              int v29 = 0;
            }
            *(_DWORD *)(a1 + 32) = v29;
            continue;
          case 3u:
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v32 = 0;
            *(unsigned char *)(a1 + 44) |= 8u;
            while (2)
            {
              uint64_t v33 = *v4;
              uint64_t v34 = *(void *)&v3[v33];
              unint64_t v35 = v34 + 1;
              if (v34 == -1 || v35 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v36 = *(unsigned char *)(*(void *)&v3[*v7] + v34);
                *(void *)&v3[v33] = v35;
                v32 |= (unint64_t)(v36 & 0x7F) << v30;
                if (v36 < 0)
                {
                  v30 += 7;
                  BOOL v15 = v31++ >= 9;
                  if (v15)
                  {
                    LODWORD(v32) = 0;
                    goto LABEL_62;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v32) = 0;
            }
LABEL_62:
            *(_DWORD *)(a1 + 36) = v32;
            continue;
          case 4u:
            char v37 = 0;
            unsigned int v38 = 0;
            uint64_t v39 = 0;
            *(unsigned char *)(a1 + 44) |= 2u;
            while (1)
            {
              uint64_t v40 = *v4;
              uint64_t v41 = *(void *)&v3[v40];
              unint64_t v42 = v41 + 1;
              if (v41 == -1 || v42 > *(void *)&v3[*v5]) {
                break;
              }
              char v43 = *(unsigned char *)(*(void *)&v3[*v7] + v41);
              *(void *)&v3[v40] = v42;
              v39 |= (unint64_t)(v43 & 0x7F) << v37;
              if ((v43 & 0x80) == 0) {
                goto LABEL_64;
              }
              v37 += 7;
              BOOL v15 = v38++ >= 9;
              if (v15)
              {
                uint64_t v39 = 0;
                goto LABEL_66;
              }
            }
            v3[*v6] = 1;
LABEL_64:
            if (v3[*v6]) {
              uint64_t v39 = 0;
            }
LABEL_66:
            uint64_t v50 = 24;
            goto LABEL_71;
          case 5u:
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v39 = 0;
            *(unsigned char *)(a1 + 44) |= 1u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              uint64_t v26 = *(void **)(a1 + 8);
              *(void *)(a1 + _Block_object_dispose(&a9, 8) = v25;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_76;
            }
            continue;
        }
        while (1)
        {
          uint64_t v46 = *v4;
          uint64_t v47 = *(void *)&v3[v46];
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)&v3[*v5]) {
            break;
          }
          char v49 = *(unsigned char *)(*(void *)&v3[*v7] + v47);
          *(void *)&v3[v46] = v48;
          v39 |= (unint64_t)(v49 & 0x7F) << v44;
          if ((v49 & 0x80) == 0) {
            goto LABEL_68;
          }
          v44 += 7;
          BOOL v15 = v45++ >= 9;
          if (v15)
          {
            uint64_t v39 = 0;
            goto LABEL_70;
          }
        }
        v3[*v6] = 1;
LABEL_68:
        if (v3[*v6]) {
          uint64_t v39 = 0;
        }
LABEL_70:
        uint64_t v50 = 16;
LABEL_71:
        *(void *)(a1 + v50) = v39;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v51 = v3[*v6] == 0;
  }
  else
  {
LABEL_76:
    BOOL v51 = 0;
  }
  objc_sync_exit(v3);

  return v51;
}

void sub_18A04A82C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceProgressReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPairedDeviceProgressReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A04A8A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceProgressIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_59;
          }
        case 2u:
          if (v16 != 5) {
            goto LABEL_62;
          }
          uint64_t v24 = *v2;
          unint64_t v25 = *(void *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFFBLL) {
            goto LABEL_58;
          }
          unint64_t v26 = v25 + 4;
          if (v26 > *(void *)&a1[*v3]) {
            goto LABEL_58;
          }
          *(void *)&a1[v24] = v26;
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v23 = v27++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_59;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v23 = v32++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_59;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v37 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_62:
          BOOL v42 = 0;
          goto LABEL_61;
      }
      while (1)
      {
        uint64_t v38 = *v2;
        uint64_t v39 = *(void *)&a1[v38];
        unint64_t v40 = v39 + 1;
        if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
          break;
        }
        int v41 = *(char *)(*(void *)&a1[*v5] + v39);
        *(void *)&a1[v38] = v40;
        if (v41 < 0)
        {
          BOOL v23 = v37++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_59;
      }
LABEL_57:
      uint64_t v14 = *v4;
LABEL_58:
      a1[v14] = 1;
LABEL_59:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v42 = a1[*v4] == 0;
LABEL_61:
  PBReaderRecallMark();
  return v42;
}

unint64_t GEOPairedDeviceReplyReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v14 & ~(_BYTE)v10 | v9;
        unsigned __int8 v16 = v14 | v10;
        char v55 = v15;
        char v56 = v16 | v15;
        if ((v16 | v8)) {
          uint64_t v17 = 0;
        }
        else {
          uint64_t v17 = a3;
        }
        unsigned int v18 = (int *)MEMORY[0x1E4F940E8];
        char v57 = (v17 == 0) | v16;
        BOOL v58 = v16;
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v9;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_83;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_83:
      int v53 = 1;
      goto LABEL_84;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v58;
    if ((v57 & 1) == 0)
    {
      uint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 100)
    {
      if (v8) {
        *(void *)(a1 + 64) = 3;
      }
      if (!v32)
      {
LABEL_72:
        char v45 = PBReaderSkipValueWithTag();
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if ((v45 & 1) == 0)
        {
          int v53 = 0;
          goto LABEL_84;
        }
        goto LABEL_82;
      }
      if ((*(unsigned char *)(a1 + 60) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_106;
        }
        char v46 = *(unsigned char *)(a1 + 60) << 6;
        goto LABEL_80;
      }
      [(id)a1 resetPayload];
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_106;
      }
      unsigned int v37 = objc_alloc_init(GEOPairedDeviceConfigureSubscriptionShouldSyncReply);
      if (!GEOPairedDeviceConfigureSubscriptionShouldSyncReplyReadAllFrom((uint64_t)v37, (void *)v3)) {
        goto LABEL_105;
      }
      PBReaderRecallMark();
      unint64_t v40 = *(void **)(a1 + 24);
      *(void *)(a1 + 24) = v37;

      if (!*(void *)(a1 + 24)) {
        goto LABEL_65;
      }
      uint64_t v39 = 3;
LABEL_64:
      *(void *)(a1 + 64) = v39;
      goto LABEL_65;
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (v8) {
        *(void *)(a1 + 64) = 1;
      }
      if (!v32) {
        goto LABEL_72;
      }
      if ((*(unsigned char *)(a1 + 60) & 8) == 0)
      {
        [(id)a1 resetPayload];
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_106;
        }
        unsigned int v37 = objc_alloc_init(GEOPairedDevicePingReply);
        if (!GEOPairedDevicePingReplyReadAllFrom((uint64_t)v37, (void *)v3)) {
          goto LABEL_105;
        }
        PBReaderRecallMark();
        uint64_t v38 = *(void **)(a1 + 40);
        *(void *)(a1 + 40) = v37;

        if (*(void *)(a1 + 40))
        {
          uint64_t v39 = 1;
          goto LABEL_64;
        }
LABEL_65:
        --v7;
LABEL_81:
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_82;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_106;
      }
      char v46 = 16 * *(unsigned char *)(a1 + 60);
LABEL_80:
      v7 += v46 >> 7;
      goto LABEL_81;
    }
    if (v55 & 1) == 0 || (*(unsigned char *)(a1 + 60)) {
      goto LABEL_72;
    }
    if (!*(void *)(a1 + 16))
    {
      id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      char v43 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v42;
    }
    int v44 = PBUnknownFieldAdd();
    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if (!v44)
    {
      int v53 = 0;
      int v54 = &OBJC_IVAR___GEOLocalizedBytes__unknownFields;
      goto LABEL_85;
    }
LABEL_82:
    if (!(v56 & 1 | (v7 != 0))) {
      goto LABEL_83;
    }
  }
  if (v8) {
    *(void *)(a1 + 64) = 2;
  }
  if (!v32) {
    goto LABEL_72;
  }
  if ((*(unsigned char *)(a1 + 60) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_106;
    }
    char v46 = 32 * *(unsigned char *)(a1 + 60);
    goto LABEL_80;
  }
  [(id)a1 resetPayload];
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_106;
  }
  unsigned int v37 = objc_alloc_init(GEOPairedDeviceGetStorageInfoReply);
  if (GEOPairedDeviceGetStorageInfoReplyReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    int v41 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v37;

    if (!*(void *)(a1 + 32)) {
      goto LABEL_65;
    }
    uint64_t v39 = 2;
    goto LABEL_64;
  }
LABEL_105:

LABEL_106:
  int v53 = 0;
  uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_84:
  int v54 = &OBJC_IVAR___GEOLocalizedBytes__unknownFields;
  if ((v55 & 1) == 0) {
    goto LABEL_86;
  }
LABEL_85:
  *(unsigned char *)(a1 + v54[487]) |= 1u;
LABEL_86:
  if (v58 || (v53 & 1) == 0)
  {
    *(unsigned char *)(a1 + v54[487]) |= 8u;
    *(unsigned char *)(a1 + v54[487]) |= 4u;
    *(unsigned char *)(a1 + v54[487]) |= 2u;
    goto LABEL_99;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        int v48 = *v17++;
        int v47 = v48;
        BOOL v49 = v48 == 1;
        if (v48 > 1) {
          break;
        }
        if (v49)
        {
          char v50 = 8;
LABEL_97:
          *(unsigned char *)(a1 + v54[487]) |= v50;
          continue;
        }
        if (!v47) {
          goto LABEL_99;
        }
      }
      if (v47 == 100)
      {
        char v50 = 2;
      }
      else
      {
        if (v47 != 2) {
          continue;
        }
        char v50 = 4;
      }
      goto LABEL_97;
    }
  }
LABEL_99:
  if (v53) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v58)
  {
    BOOL v51 = *(void **)(a1 + 8);
    *(void *)(a1 + _Block_object_dispose(&a9, 8) = 0;
  }
  return v3;
}

void sub_18A04BC64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A04BDC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A04BF28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A04C488(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceReplyReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPairedDeviceReplyReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPairedDeviceReplyReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPairedDeviceReplyReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPairedDeviceReplyReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 40) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18A04C654(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceReplyReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPairedDeviceReplyReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A04C6B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceReplyIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_35;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_35;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 100)
      {
        if (v15 != 2
          || !PBReaderPlaceMark()
          || !GEOPairedDeviceConfigureSubscriptionShouldSyncReplyIsValid((unsigned __int8 *)a1))
        {
LABEL_36:
          PBReaderRecallMark();
          return 0;
        }
        goto LABEL_32;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPairedDevicePingReplyIsValid(a1)) {
          goto LABEL_36;
        }
LABEL_32:
        PBReaderRecallMark();
        goto LABEL_34;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_36;
      }
LABEL_34:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_35;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPairedDeviceGetStorageInfoReplyIsValid(a1)) {
      goto LABEL_36;
    }
    goto LABEL_32;
  }
LABEL_35:
  BOOL v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

void sub_18A04CAD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceReplyIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_18A04CDD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A04D088(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A04D3CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceReplyEnvelopeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 1;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v56 = v18;
        char v57 = v19 | v18;
        if ((v19 | v9)) {
          uint64_t v20 = 0;
        }
        else {
          uint64_t v20 = a3;
        }
        char v58 = (v20 == 0) | v19;
        BOOL v59 = v19;
        char v21 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_81;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      if (v25++ >= 9)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_81:
      int v54 = 1;
      goto LABEL_82;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v59;
    if ((v58 & 1) == 0)
    {
      BOOL v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    if (v34 == 3)
    {
      if (v9) {
        *(void *)(a1 + 64) = 2;
      }
      if (!v35)
      {
LABEL_70:
        char v48 = PBReaderSkipValueWithTag();
        unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
        if ((v48 & 1) == 0)
        {
          int v54 = 0;
          goto LABEL_82;
        }
        goto LABEL_80;
      }
      if ((*(unsigned char *)(a1 + 60) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_99;
        }
        char v49 = *(unsigned char *)(a1 + 60) << 6;
        goto LABEL_78;
      }
      [(id)a1 resetResult];
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_99;
      }
      unint64_t v40 = objc_alloc_init(GEOPairedDeviceReplyError);
      if (!GEOPairedDeviceReplyErrorReadAllFrom((uint64_t)v40, (void *)v3)) {
        goto LABEL_98;
      }
      PBReaderRecallMark();
      id v42 = *(void **)(a1 + 24);
      *(void *)(a1 + 24) = v40;

      if (!*(void *)(a1 + 24))
      {
LABEL_63:
        --v8;
        goto LABEL_79;
      }
      uint64_t v43 = 2;
LABEL_62:
      *(void *)(a1 + 64) = v43;
      goto LABEL_63;
    }
    if (v34 == 2) {
      break;
    }
    if (v34 == 1)
    {
      if (!v35) {
        goto LABEL_70;
      }
      if ((*(unsigned char *)(a1 + 60) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_99;
        }
        unint64_t v40 = objc_alloc_init(GEOPairedDeviceReplyMetadata);
        if (!GEOPairedDeviceReplyMetadataReadAllFrom((uint64_t)v40, (void *)v3)) {
          goto LABEL_98;
        }
        PBReaderRecallMark();
        int v41 = *(void **)(a1 + 32);
        *(void *)(a1 + 32) = v40;

        goto LABEL_63;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_99;
      }
      char v49 = 32 * *(unsigned char *)(a1 + 60);
LABEL_78:
      v8 += v49 >> 7;
LABEL_79:
      unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_80;
    }
    if (v56 & 1) == 0 || (*(unsigned char *)(a1 + 60)) {
      goto LABEL_70;
    }
    if (!*(void *)(a1 + 16))
    {
      id v45 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      char v46 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v45;
    }
    int v47 = PBUnknownFieldAdd();
    unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
    if (!v47)
    {
      int v54 = 0;
      char v55 = &OBJC_IVAR___GEOLocalizedBytes__unknownFields;
      goto LABEL_83;
    }
LABEL_80:
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    if (!(v57 & 1 | (v8 != 0))) {
      goto LABEL_81;
    }
  }
  if (v9) {
    *(void *)(a1 + 64) = 1;
  }
  if (!v35) {
    goto LABEL_70;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_99;
    }
    char v49 = 16 * *(unsigned char *)(a1 + 60);
    goto LABEL_78;
  }
  [(id)a1 resetResult];
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_99;
  }
  unint64_t v40 = objc_alloc_init(GEOPairedDeviceReply);
  if (GEOPairedDeviceReplyReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
  {
    PBReaderRecallMark();
    int v44 = *(void **)(a1 + 40);
    *(void *)(a1 + 40) = v40;

    if (!*(void *)(a1 + 40)) {
      goto LABEL_63;
    }
    uint64_t v43 = 1;
    goto LABEL_62;
  }
LABEL_98:

LABEL_99:
  int v54 = 0;
  unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_82:
  char v55 = &OBJC_IVAR___GEOLocalizedBytes__unknownFields;
  if ((v56 & 1) == 0) {
    goto LABEL_84;
  }
LABEL_83:
  *(unsigned char *)(a1 + v55[496]) |= 1u;
LABEL_84:
  if (v59 || (v54 & 1) == 0)
  {
    *(unsigned char *)(a1 + v55[496]) |= 4u;
    *(unsigned char *)(a1 + v55[496]) |= 8u;
    *(unsigned char *)(a1 + v55[496]) |= 2u;
  }
  else if (v20)
  {
    while (1)
    {
      int v51 = *v20++;
      char v50 = 4;
      switch(v51)
      {
        case 0:
          goto LABEL_92;
        case 1:
          goto LABEL_90;
        case 2:
          char v50 = 8;
          goto LABEL_90;
        case 3:
          char v50 = 2;
LABEL_90:
          *(unsigned char *)(a1 + v55[496]) |= v50;
          break;
        default:
          continue;
      }
    }
  }
LABEL_92:
  if (v54) {
    unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v59)
  {
    int v52 = *(void **)(a1 + 8);
    *(void *)(a1 + _Block_object_dispose(&a9, 8) = 0;
  }
  return v3;
}

void sub_18A04DC34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A04DD94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A04E3A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceReplyEnvelopeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPairedDeviceReplyEnvelopeReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPairedDeviceReplyEnvelopeReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPairedDeviceReplyEnvelopeReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPairedDeviceReplyEnvelopeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 40) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18A04E574(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceReplyEnvelopeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPairedDeviceReplyEnvelopeReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A04E5D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceReplyEnvelopeIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_35;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_35;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPairedDeviceReplyErrorIsValid(a1))
        {
LABEL_36:
          PBReaderRecallMark();
          return 0;
        }
        goto LABEL_32;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPairedDeviceReplyMetadataIsValid(a1)) {
          goto LABEL_36;
        }
LABEL_32:
        PBReaderRecallMark();
        goto LABEL_34;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_36;
      }
LABEL_34:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_35;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPairedDeviceReplyIsValid(a1)) {
      goto LABEL_36;
    }
    goto LABEL_32;
  }
LABEL_35:
  BOOL v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

BOOL GEOPairedDeviceReplyMetadataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 2 && (PBReaderSkipValueWithTag() & 1) != 0) {
            goto LABEL_29;
          }
          goto LABEL_32;
        case 2u:
        case 3u:
        case 4u:
          if (v16 != 1) {
            goto LABEL_32;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v20 = v19 + 8, v20 <= *(void *)&a1[*v3])) {
            *(void *)&a1[v18] = v20;
          }
          else {
            a1[v14] = 1;
          }
          goto LABEL_29;
        default:
          if (!PBReaderSkipValueWithTag())
          {
LABEL_32:
            BOOL v21 = 0;
            goto LABEL_31;
          }
LABEL_29:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_30;
          }
          break;
      }
    }
  }
LABEL_30:
  BOOL v21 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPairedDeviceReplyErrorIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

void sub_18A04ED88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPairedDeviceReplyEnvelopeIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 60);
  if ((v2 & 0x14) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEOPairedDeviceReplyIsDirty(*(void *)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 60);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOPairedDeviceReplyEnvelopeIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPairedDeviceReplyEnvelopeIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A04F120(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A04F428(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceReplyErrorReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadData();
          unint64_t v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v21 = *(void **)(a1 + 8);
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_26;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_18A04FBDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceReplyErrorReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPairedDeviceReplyErrorReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A04FC40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceReplyMetadataReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            uint64_t v18 = PBReaderReadString();
            unint64_t v19 = *(void **)(a1 + 32);
            *(void *)(a1 + 32) = v18;

            break;
          case 2u:
            *(unsigned char *)(a1 + 48) |= 2u;
            uint64_t v22 = *v4;
            unint64_t v23 = *(void *)&v3[v22];
            if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v24 = *(void *)(*(void *)&v3[*v7] + v23);
              *(void *)&v3[v22] = v23 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v24 = 0;
            }
            uint64_t v29 = 24;
            goto LABEL_40;
          case 3u:
            *(unsigned char *)(a1 + 48) |= 1u;
            uint64_t v25 = *v4;
            unint64_t v26 = *(void *)&v3[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v24 = *(void *)(*(void *)&v3[*v7] + v26);
              *(void *)&v3[v25] = v26 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v24 = 0;
            }
            uint64_t v29 = 16;
            goto LABEL_40;
          case 4u:
            *(unsigned char *)(a1 + 48) |= 4u;
            uint64_t v27 = *v4;
            unint64_t v28 = *(void *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v24 = *(void *)(*(void *)&v3[*v7] + v28);
              *(void *)&v3[v27] = v28 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v24 = 0;
            }
            uint64_t v29 = 40;
LABEL_40:
            *(void *)(a1 + v29) = v24;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              BOOL v21 = *(void **)(a1 + 8);
              *(void *)(a1 + _Block_object_dispose(&a9, 8) = v20;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_43;
            }
            break;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v30 = v3[*v6] == 0;
  }
  else
  {
LABEL_43:
    BOOL v30 = 0;
  }
  objc_sync_exit(v3);

  return v30;
}

void sub_18A050A0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceReplyMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPairedDeviceReplyMetadataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A050A80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStartStopDownloadRequestReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_44;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6]) {
            LODWORD(v22) = 0;
          }
LABEL_46:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else if (v18 == 2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          *(unsigned char *)(a1 + 32) |= 2u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if ((v33 & 0x80) == 0) {
              goto LABEL_48;
            }
            v27 += 7;
            BOOL v15 = v28++ >= 9;
            if (v15)
            {
              uint64_t v29 = 0;
              goto LABEL_50;
            }
          }
          v3[*v6] = 1;
LABEL_48:
          if (v3[*v6]) {
            uint64_t v29 = 0;
          }
LABEL_50:
          *(unsigned char *)(a1 + 2_Block_object_dispose(&a9, 8) = v29 != 0;
        }
        else if (v18 == 1)
        {
          unint64_t v19 = PBReaderReadString();
          if (v19) {
            [(id)a1 addIdentifiers:v19];
          }
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v34 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v35 = *(void **)(a1 + 8);
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v34;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_53;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_53:
    BOOL v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_18A051D1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStartStopDownloadRequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPairedDeviceSubscriptionStartStopDownloadRequestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A051D80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStateSummaryReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_34:
          *(unsigned char *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v26 = *(void **)(a1 + 8);
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18A052C44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStateSummaryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPairedDeviceSubscriptionStateSummaryReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A052CA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStateSummaryIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOPairedDeviceSubscriptionStateSynchronizationRequestReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          if (v18) {
            [a1 addIdentifiersToObserve:v18];
          }
        }
        else
        {
          if (!a1[1])
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v20 = (void *)a1[1];
            a1[1] = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_28;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_28:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18A0539E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStateSynchronizationRequestReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPairedDeviceSubscriptionStateSynchronizationRequestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A053A44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0541C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceSubscriptionStateUpdateReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFBFFFDFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v14 & ~(_BYTE)v10 | v9;
        unsigned __int8 v16 = v14 | v10;
        char v66 = v15;
        char v67 = v16 | v15;
        if ((v16 | v8)) {
          uint64_t v17 = 0;
        }
        else {
          uint64_t v17 = a3;
        }
        char v68 = (v17 == 0) | v16;
        BOOL v69 = v16;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        id v19 = (int *)MEMORY[0x1E4F940C8];
        int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v9;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_95;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_95:
      int v64 = 1;
      goto LABEL_96;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v69;
    if ((v68 & 1) == 0)
    {
      char v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          int v38 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v37;
          goto LABEL_74;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_112;
        }
        char v59 = 16 * *(unsigned char *)(a1 + 68);
        goto LABEL_92;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_75;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        while (2)
        {
          uint64_t v45 = *v18;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v20) + v46);
            *(void *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v28 = v43++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v44) = 0;
        }
LABEL_80:
        uint64_t v58 = 64;
        goto LABEL_85;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_75;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (2)
        {
          uint64_t v51 = *v18;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v20) + v52);
            *(void *)(v3 + v51) = v53;
            v44 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v28 = v50++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v44) = 0;
        }
LABEL_84:
        uint64_t v58 = 60;
LABEL_85:
        *(_DWORD *)(a1 + v5_Block_object_dispose(&a9, 8) = v44;
        goto LABEL_94;
      case 4:
        if (!v32) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_112;
          }
          char v59 = 8 * *(unsigned char *)(a1 + 68);
          goto LABEL_92;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_112;
        }
        char v55 = objc_alloc_init(GEOPairedDeviceProgress);
        if (!GEOPairedDeviceProgressReadAllFrom((uint64_t)v55, (void *)v3)) {
          goto LABEL_111;
        }
        PBReaderRecallMark();
        uint64_t v56 = 32;
        goto LABEL_73;
      case 5:
        if (!v32) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_112;
          }
          char v59 = 4 * *(unsigned char *)(a1 + 68);
LABEL_92:
          v7 += v59 >> 7;
LABEL_93:
          id v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_94:
          if (!(v67 & 1 | (v7 != 0))) {
            goto LABEL_95;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_112;
        }
        char v55 = objc_alloc_init(GEOPairedDeviceSubscriptionStateUserInfo);
        if (GEOPairedDeviceSubscriptionStateUserInfoReadAllFrom((uint64_t)v55, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v56 = 40;
LABEL_73:
          int v38 = *(void **)(a1 + v56);
          *(void *)(a1 + v56) = v55;
LABEL_74:

          --v7;
          goto LABEL_93;
        }
LABEL_111:

LABEL_112:
        int v64 = 0;
        id v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_96:
        int v65 = &OBJC_IVAR___GEOLocalizedBytes__unknownFields;
        if (v66) {
LABEL_97:
        }
          *(unsigned char *)(a1 + v65[521]) |= 4u;
        if (v69 || (v64 & 1) == 0)
        {
          *(unsigned char *)(a1 + v65[521]) |= 8u;
          *(unsigned char *)(a1 + v65[521]) |= 0x10u;
          *(unsigned char *)(a1 + v65[521]) |= 0x20u;
        }
        else if (v17)
        {
          while (1)
          {
            int v60 = *v17++;
            char v61 = 8;
            switch(v60)
            {
              case 0:
                goto LABEL_105;
              case 1:
                goto LABEL_104;
              case 4:
                char v61 = 16;
                goto LABEL_104;
              case 5:
                char v61 = 32;
LABEL_104:
                *(unsigned char *)(a1 + v65[521]) |= v61;
                break;
              default:
                continue;
            }
          }
        }
LABEL_105:
        if (v64) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v69)
        {
          char v62 = *(void **)(a1 + 8);
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = 0;
        }
        return v3;
      default:
        if ((v66 & 1) == 0 || (*(unsigned char *)(a1 + 68) & 4) != 0)
        {
LABEL_75:
          char v57 = PBReaderSkipValueWithTag();
          id v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v57 & 1) == 0)
          {
            int v64 = 0;
            goto LABEL_96;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v40 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v39;
          }
          int v41 = PBUnknownFieldAdd();
          id v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v41)
          {
            int v64 = 0;
            int v65 = &OBJC_IVAR___GEOLocalizedBytes__unknownFields;
            goto LABEL_97;
          }
        }
        goto LABEL_94;
    }
  }
}

void sub_18A054BC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A054D34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A055574(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceSubscriptionStateUpdateReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPairedDeviceSubscriptionStateUpdateReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPairedDeviceSubscriptionStateUpdateReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPairedDeviceSubscriptionStateUpdateReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPairedDeviceSubscriptionStateUpdateReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18A055730(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceSubscriptionStateUpdateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPairedDeviceSubscriptionStateUpdateReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A055794(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStateUserInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_18A055BE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStateUpdateIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0x78) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_18A055F84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A056350(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStateUserInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              int v26 = &OBJC_IVAR___GEOPairedDeviceSubscriptionStateUserInfo__waitingReasons;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              int v26 = &OBJC_IVAR___GEOPairedDeviceSubscriptionStateUserInfo__waitingReasons;
              goto LABEL_44;
            }
          }
          int v26 = &OBJC_IVAR___GEOPairedDeviceSubscriptionStateUserInfo__waitingReasons;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          int v34 = *(void **)(a1 + 8);
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 1u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          int v26 = &OBJC_IVAR___GEOPairedDeviceSubscriptionStateUserInfo__minBatteryLevel;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          int v26 = &OBJC_IVAR___GEOPairedDeviceSubscriptionStateUserInfo__minBatteryLevel;
          goto LABEL_44;
        }
      }
      int v26 = &OBJC_IVAR___GEOPairedDeviceSubscriptionStateUserInfo__minBatteryLevel;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_18A056D58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStateUserInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPairedDeviceSubscriptionStateUserInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A056DBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStatesSummaryReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = &OBJC_IVAR___GEOLocalizedBytes__unknownFields;
      char v8 = &OBJC_IVAR___GEOLocalizedBytes__unknownFields;
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v4;
          uint64_t v14 = *(void *)&v3[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v3[*v5]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v3[*v9] + v14);
          *(void *)&v3[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v18 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        unint64_t v20 = v12 >> 3;
        if ((v12 >> 3) == 3)
        {
          *(unsigned char *)(a1 + v7[537]) |= 1u;
          uint64_t v34 = *v4;
          unint64_t v35 = *(void *)&v3[v34];
          if (v35 <= 0xFFFFFFFFFFFFFFF7 && v35 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v36 = *(void *)(*(void *)&v3[*v9] + v35);
            *(void *)&v3[v34] = v35 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v36 = 0;
          }
          *(void *)(a1 + v8[538]) = v36;
        }
        else if (v20 == 2)
        {
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v39 = 0;
          *(unsigned char *)(a1 + v7[537]) |= 2u;
          while (1)
          {
            uint64_t v40 = *v4;
            uint64_t v41 = *(void *)&v3[v40];
            unint64_t v42 = v41 + 1;
            if (v41 == -1 || v42 > *(void *)&v3[*v5]) {
              break;
            }
            char v43 = *(unsigned char *)(*(void *)&v3[*v9] + v41);
            *(void *)&v3[v40] = v42;
            v39 |= (unint64_t)(v43 & 0x7F) << v37;
            if ((v43 & 0x80) == 0) {
              goto LABEL_62;
            }
            v37 += 7;
            BOOL v17 = v38++ >= 9;
            if (v17)
            {
              uint64_t v39 = 0;
              goto LABEL_64;
            }
          }
          v3[*v6] = 1;
LABEL_62:
          if (v3[*v6]) {
            uint64_t v39 = 0;
          }
LABEL_64:
          *(unsigned char *)(a1 + 32) = v39 != 0;
        }
        else if (v20 == 1)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_72;
          }
          if (*(void *)&v3[*v4] >= *(void *)&v3[*v5])
          {
            unint64_t v23 = 0;
            uint64_t v22 = 0;
LABEL_71:

            goto LABEL_72;
          }
          char v21 = 0;
          char v48 = 0;
          uint64_t v22 = 0;
          unint64_t v23 = 0;
          while (2)
          {
            if (!v3[*v6])
            {
              char v24 = 0;
              unsigned int v25 = 0;
              unint64_t v26 = 0;
              while (1)
              {
                uint64_t v27 = *v4;
                uint64_t v28 = *(void *)&v3[v27];
                unint64_t v29 = v28 + 1;
                if (v28 == -1 || v29 > *(void *)&v3[*v5]) {
                  break;
                }
                char v30 = *(unsigned char *)(*(void *)&v3[*v9] + v28);
                *(void *)&v3[v27] = v29;
                v26 |= (unint64_t)(v30 & 0x7F) << v24;
                if ((v30 & 0x80) == 0) {
                  goto LABEL_34;
                }
                v24 += 7;
                if (v25++ > 8) {
                  goto LABEL_42;
                }
              }
              v3[*v6] = 1;
LABEL_34:
              if (v3[*v6]) {
                unint64_t v26 = 0;
              }
              if ((v26 >> 3) != 2)
              {
                if ((v26 >> 3) == 1)
                {
                  uint64_t v32 = PBReaderReadString();

                  char v48 = 1;
                  unint64_t v23 = (void *)v32;
                  goto LABEL_43;
                }
LABEL_42:
                if (!PBReaderSkipValueWithTag()) {
                  goto LABEL_71;
                }
                goto LABEL_43;
              }
              if (!PBReaderPlaceMark()) {
                goto LABEL_71;
              }
              id v33 = objc_alloc_init(GEOPairedDeviceSubscriptionStateSummary);

              if (!GEOPairedDeviceSubscriptionStateSummaryReadAllFrom((uint64_t)v33, v3))
              {
                uint64_t v22 = v33;
                goto LABEL_71;
              }
              PBReaderRecallMark();
              char v21 = 1;
              uint64_t v22 = v33;
LABEL_43:
              if (*(void *)&v3[*v4] < *(void *)&v3[*v5]) {
                continue;
              }
            }
            break;
          }
          if ((v48 & 1) == 0 || (v21 & 1) == 0) {
            goto LABEL_71;
          }
          [(id)a1 setSubscriptionStatesValue:v22 forKey:v23];
          unsigned int v7 = &OBJC_IVAR___GEOLocalizedBytes__unknownFields;
          char v8 = &OBJC_IVAR___GEOLocalizedBytes__unknownFields;
          PBReaderRecallMark();
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v44 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v45 = *(void **)(a1 + 8);
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v44;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_72;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v46 = v3[*v6] == 0;
  }
  else
  {
LABEL_72:
    BOOL v46 = 0;
  }
  objc_sync_exit(v3);

  return v46;
}