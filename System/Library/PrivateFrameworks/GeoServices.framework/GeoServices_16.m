void sub_18A058094(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStatesSummaryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPairedDeviceSubscriptionStatesSummaryReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A0580FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOYelpPhotosURLs(void *a1)
{
  return _GEOYelpURLs(a1, 0, @"photos", 0);
}

id _GEOYelpURLs(void *a1, void *a2, void *a3, void *a4)
{
  v42[2] = *MEMORY[0x1E4F143B8];
  v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  id v11 = objc_alloc_init(MEMORY[0x1E4F29088]);
  [v11 setScheme:@"yelp6"];
  [v11 setHost:&stru_1ED51F370];
  v12 = [MEMORY[0x1E4F28E78] stringWithString:@"/biz"];
  v13 = v12;
  if (v8) {
    [v12 appendFormat:@"/%@", v8];
  }
  if (v9) {
    [v13 appendFormat:@"/%@", v9];
  }
  v36 = v9;
  [v11 setPath:v13];
  if (v7) {
    v14 = v7;
  }
  else {
    v14 = &stru_1ED51F370;
  }
  v15 = [MEMORY[0x1E4F290C8] queryItemWithName:@"biz_id" value:v14];
  v42[0] = v15;
  v16 = [MEMORY[0x1E4F290C8] queryItemWithName:@"xref" value:@"apple"];
  v42[1] = v16;
  v17 = [MEMORY[0x1E4F1C978] arrayWithObjects:v42 count:2];
  v18 = (void *)[v17 mutableCopy];

  v19 = v10;
  if (v10)
  {
    id v34 = v8;
    v35 = v7;
    long long v39 = 0u;
    long long v40 = 0u;
    long long v37 = 0u;
    long long v38 = 0u;
    id v33 = v10;
    id v20 = v10;
    uint64_t v21 = [v20 countByEnumeratingWithState:&v37 objects:v41 count:16];
    if (v21)
    {
      uint64_t v22 = v21;
      uint64_t v23 = *(void *)v38;
      do
      {
        for (uint64_t i = 0; i != v22; ++i)
        {
          if (*(void *)v38 != v23) {
            objc_enumerationMutation(v20);
          }
          uint64_t v25 = *(void *)(*((void *)&v37 + 1) + 8 * i);
          v26 = (void *)MEMORY[0x1E4F290C8];
          v27 = [v20 objectForKey:v25];
          v28 = [v26 queryItemWithName:v25 value:v27];
          [v18 addObject:v28];
        }
        uint64_t v22 = [v20 countByEnumeratingWithState:&v37 objects:v41 count:16];
      }
      while (v22);
    }

    id v8 = v34;
    v7 = v35;
    v19 = v33;
  }
  [v11 setQueryItems:v18];
  v29 = [v11 URL];
  v30 = [v29 absoluteString];

  v31 = [MEMORY[0x1E4F1C978] arrayWithObject:v30];

  return v31;
}

id GEOYelpAddPhotoURLs(void *a1)
{
  return _GEOYelpURLs(a1, @"add", @"photo", 0);
}

id GEOYelpViewPhotoURLs(void *a1, void *a2)
{
  v11[1] = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  v4 = v3;
  if (v3)
  {
    id v10 = @"photo_id";
    v11[0] = v3;
    v5 = (void *)MEMORY[0x1E4F1C9E8];
    id v6 = a1;
    id v7 = [v5 dictionaryWithObjects:v11 forKeys:&v10 count:1];
    id v8 = _GEOYelpURLs(v6, 0, @"photo", v7);
  }
  else
  {
    id v7 = a1;
    id v8 = _GEOYelpURLs(v7, 0, @"photos", 0);
  }

  return v8;
}

id GEOYelpReviewsURLs(void *a1)
{
  return _GEOYelpURLs(a1, 0, @"reviews", 0);
}

id GEOYelpAddReviewURLs(void *a1)
{
  return _GEOYelpURLs(a1, @"add", @"reviewdraft", 0);
}

id GEOYelpViewReviewURLs(void *a1, void *a2)
{
  v11[1] = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  v4 = v3;
  if (v3)
  {
    id v10 = @"review_id";
    v11[0] = v3;
    v5 = (void *)MEMORY[0x1E4F1C9E8];
    id v6 = a1;
    id v7 = [v5 dictionaryWithObjects:v11 forKeys:&v10 count:1];
    id v8 = _GEOYelpURLs(v6, 0, @"review", v7);
  }
  else
  {
    id v7 = a1;
    id v8 = _GEOYelpURLs(v7, 0, @"reviews", 0);
  }

  return v8;
}

id GEOYelpCheckInURLs(void *a1)
{
  return _GEOYelpURLs(a1, @"add", @"check_in", 0);
}

uint64_t GEOGeodesicEvaluate(uint64_t a1, double a2, double a3, double a4, double a5, double a6)
{
  double v19 = 0.0;
  double v20 = 0.0;
  if (_MergedGlobals_317 != -1) {
    dispatch_once(&_MergedGlobals_317, &__block_literal_global_179);
  }
  geod_geninverse(dbl_1EB2A0440, &v20, &v19, 0, 0, 0, 0, 0, a2, a3, a4, a5);
  if (v20 >= a6)
  {
    memset(v18, 0, sizeof(v18));
    geod_lineinit((uint64_t)v18, (uint64_t)dbl_1EB2A0440, 0, a2, a3, v19);
    (*(void (**)(uint64_t, double, double))(a1 + 16))(a1, a2, a3);
    int v13 = vcvtpd_s64_f64(v20 / a6);
    if (v13 >= 2)
    {
      int v14 = v13 - 1;
      double v15 = 1.0;
      do
      {
        double v16 = 0.0;
        double v17 = 0.0;
        geod_genposition((uint64_t)v18, 0, &v16, &v17, 0, 0, 0, 0, v15 * a6, 0, 0);
        (*(void (**)(uint64_t, double, double))(a1 + 16))(a1, v16, v17);
        double v15 = v15 + 1.0;
        --v14;
      }
      while (v14);
    }
    return (*(uint64_t (**)(uint64_t, double, double))(a1 + 16))(a1, a4, a5);
  }
  else
  {
    (*(void (**)(uint64_t, double, double))(a1 + 16))(a1, a2, a3);
    return (*(uint64_t (**)(uint64_t, double, double))(a1 + 16))(a1, a4, a5);
  }
}

double ___geodesic_block_invoke()
{
  return geod_init((uint64_t)dbl_1EB2A0440, 6378137.0, 0.00335281066);
}

void sub_18A059DE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A059E9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A059F34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A05A280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A05A4B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t GEOSolarEventTypeToOrdinal(int a1)
{
  if (a1 > 31)
  {
    if (a1 <= 127)
    {
      if (a1 == 32) {
        return 8;
      }
      if (a1 == 64) {
        return 5;
      }
    }
    else
    {
      switch(a1)
      {
        case 128:
          return 6;
        case 256:
          return 7;
        case 512:
          return 9;
      }
    }
    return 0xFFFFFFFFLL;
  }
  else
  {
    int v1 = a1 - 1;
    uint64_t result = 0;
    switch(v1)
    {
      case 0:
        return result;
      case 1:
        uint64_t result = 1;
        break;
      case 3:
        uint64_t result = 2;
        break;
      case 7:
        uint64_t result = 3;
        break;
      default:
        return 0xFFFFFFFFLL;
    }
  }
  return result;
}

void sub_18A05A8B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t GEOGreenTeaLog(NSObject *a1, uint64_t a2, void *a3)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  if (+[GEOPlatform isRunningInGeod]
    || !os_log_type_enabled(a1, OS_LOG_TYPE_INFO))
  {
    return 0;
  }
  uint64_t v6 = [a3 bundleId];
  if (!v6) {
    uint64_t v6 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F28B50], "mainBundle"), "bundleIdentifier");
  }
  uint64_t v7 = 1;
  if (os_log_type_enabled(a1, OS_LOG_TYPE_INFO))
  {
    id v8 = @"Unknown";
    if (v6) {
      id v8 = (__CFString *)v6;
    }
    int v10 = 138412546;
    id v11 = v8;
    __int16 v12 = 2080;
    uint64_t v13 = a2;
    _os_log_impl(&dword_188D96000, a1, OS_LOG_TYPE_INFO, "%@ is transmitting user location for %s", (uint8_t *)&v10, 0x16u);
  }
  return v7;
}

id _GEOConfigStorageDirectUserReadWrite()
{
  if (qword_1EB29DE38 != -1) {
    dispatch_once(&qword_1EB29DE38, &__block_literal_global_95_0);
  }
  v0 = (void *)_MergedGlobals_3_2;

  return v0;
}

id _GEOConfigStorageDirectSystemReadWrite()
{
  if (qword_1EB29DE38 != -1) {
    dispatch_once(&qword_1EB29DE38, &__block_literal_global_95_0);
  }
  v0 = (void *)qword_1EB29DE30;

  return v0;
}

void ___initStorageReadWrite_block_invoke()
{
  if (!+[GEOPlatform isRunningInGeod])
  {
    if (!os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT)) {
      return;
    }
    __int16 v12 = 0;
    uint64_t v7 = MEMORY[0x1E4F14500];
    id v8 = "Assertion failed: GEOPlatform.isRunningInGeod";
    id v9 = (uint8_t *)&v12;
    goto LABEL_11;
  }
  if (_user_storage_readonly)
  {
    if (!os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT)) {
      return;
    }
    *(_WORD *)buf = 0;
    uint64_t v7 = MEMORY[0x1E4F14500];
    id v8 = "Assertion failed: _user_storage_readonly == ((void *)0)";
    id v9 = buf;
LABEL_11:
    _os_log_fault_impl(&dword_188D96000, v7, OS_LOG_TYPE_FAULT, v8, v9, 2u);
    return;
  }
  v0 = [GEOConfigStorageDirectReadWrite alloc];
  int v1 = +[GEOFilePaths urlFor:34];
  uint64_t v2 = [(GEOConfigStorageDirectReadWrite *)v0 initWithPath:v1 forSource:7];
  id v3 = (void *)_MergedGlobals_3_2;
  _MergedGlobals_3_2 = v2;

  v4 = [GEOConfigStorageDirectReadWrite alloc];
  id v10 = +[GEOFilePaths urlFor:33];
  uint64_t v5 = [(GEOConfigStorageDirectReadWrite *)v4 initWithPath:v10 forSource:6];
  uint64_t v6 = (void *)qword_1EB29DE30;
  qword_1EB29DE30 = v5;
}

uint64_t NanoRegistryLibraryCore()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = 0;
  id v3 = &v2;
  uint64_t v4 = 0x2020000000;
  uint64_t v0 = NanoRegistryLibraryCore_frameworkLibrary;
  uint64_t v5 = NanoRegistryLibraryCore_frameworkLibrary;
  if (!NanoRegistryLibraryCore_frameworkLibrary)
  {
    long long v6 = __const__block__paths_5;
    long long v7 = *(_OWORD *)&off_1E53ED610;
    v3[3] = _sl_dlopen();
    NanoRegistryLibraryCore_frameworkLibrary = v3[3];
    uint64_t v0 = v3[3];
  }
  _Block_object_dispose(&v2, 8);
  return v0;
}

void sub_18A05C53C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __NanoRegistryLibraryCore_block_invoke(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  NanoRegistryLibraryCore_frameworkLibrary = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t NanoRegistryLibrary()
{
  uint64_t v0 = NanoRegistryLibraryCore();
  if (!v0)
  {
    uint64_t v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

uint64_t PairedDeviceRegistryLibraryCore()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = 0;
  id v3 = &v2;
  uint64_t v4 = 0x2020000000;
  uint64_t v0 = PairedDeviceRegistryLibraryCore_frameworkLibrary;
  uint64_t v5 = PairedDeviceRegistryLibraryCore_frameworkLibrary;
  if (!PairedDeviceRegistryLibraryCore_frameworkLibrary)
  {
    long long v6 = __const__block__paths_8;
    long long v7 = *(_OWORD *)&off_1E53ED630;
    v3[3] = _sl_dlopen();
    PairedDeviceRegistryLibraryCore_frameworkLibrary = v3[3];
    uint64_t v0 = v3[3];
  }
  _Block_object_dispose(&v2, 8);
  return v0;
}

void sub_18A05C750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __PairedDeviceRegistryLibraryCore_block_invoke(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  PairedDeviceRegistryLibraryCore_frameworkLibrary = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t PairedDeviceRegistryLibrary()
{
  uint64_t v0 = PairedDeviceRegistryLibraryCore();
  if (!v0)
  {
    uint64_t v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

Class __getNRPairedDeviceRegistryClass_block_invoke(uint64_t a1)
{
  NanoRegistryLibrary();
  Class result = objc_getClass("NRPairedDeviceRegistry");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getNRPairedDeviceRegistryClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    return (Class)getPDRRegistryClass();
  }
  return result;
}

id getPDRRegistryClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getPDRRegistryClass_softClass;
  uint64_t v7 = getPDRRegistryClass_softClass;
  if (!getPDRRegistryClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getPDRRegistryClass_block_invoke;
    v3[3] = &unk_1E53DB3C8;
    v3[4] = &v4;
    __getPDRRegistryClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_18A05C990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getPDRRegistryClass_block_invoke(uint64_t a1)
{
  PairedDeviceRegistryLibrary();
  Class result = objc_getClass("PDRRegistry");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getPDRRegistryClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    return (Class)getNRDevicePropertySystemVersionSymbolLoc();
  }
  return result;
}

uint64_t getNRDevicePropertySystemVersionSymbolLoc()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = getNRDevicePropertySystemVersionSymbolLoc_ptr;
  uint64_t v6 = getNRDevicePropertySystemVersionSymbolLoc_ptr;
  if (!getNRDevicePropertySystemVersionSymbolLoc_ptr)
  {
    id v1 = (void *)NanoRegistryLibrary();
    v4[3] = (uint64_t)dlsym(v1, "NRDevicePropertySystemVersion");
    getNRDevicePropertySystemVersionSymbolLoc_ptr = v4[3];
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_18A05CAF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getNRDevicePropertySystemVersionSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)NanoRegistryLibrary();
  Class result = dlsym(v2, "NRDevicePropertySystemVersion");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getNRDevicePropertySystemVersionSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id getNRDevicePropertySystemVersion()
{
  NRDevicePropertySystemVersionSymbolLoc = (void **)getNRDevicePropertySystemVersionSymbolLoc();
  if (NRDevicePropertySystemVersionSymbolLoc)
  {
    id v1 = *NRDevicePropertySystemVersionSymbolLoc;
    return v1;
  }
  else
  {
    dlerror();
    uint64_t v3 = abort_report_np();
    return (id)getNRDevicePropertySystemBuildVersionSymbolLoc(v3);
  }
}

uint64_t getNRDevicePropertySystemBuildVersionSymbolLoc()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = getNRDevicePropertySystemBuildVersionSymbolLoc_ptr;
  uint64_t v6 = getNRDevicePropertySystemBuildVersionSymbolLoc_ptr;
  if (!getNRDevicePropertySystemBuildVersionSymbolLoc_ptr)
  {
    id v1 = (void *)NanoRegistryLibrary();
    v4[3] = (uint64_t)dlsym(v1, "NRDevicePropertySystemBuildVersion");
    getNRDevicePropertySystemBuildVersionSymbolLoc_ptr = v4[3];
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_18A05CC7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getNRDevicePropertySystemBuildVersionSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)NanoRegistryLibrary();
  Class result = dlsym(v2, "NRDevicePropertySystemBuildVersion");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getNRDevicePropertySystemBuildVersionSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id getNRDevicePropertySystemBuildVersion()
{
  NRDevicePropertySystemBuildVersionSymbolLoc = (void **)getNRDevicePropertySystemBuildVersionSymbolLoc();
  if (NRDevicePropertySystemBuildVersionSymbolLoc)
  {
    id v1 = *NRDevicePropertySystemBuildVersionSymbolLoc;
    return v1;
  }
  else
  {
    dlerror();
    uint64_t v3 = abort_report_np();
    return (id)getNRDevicePropertyProductTypeSymbolLoc(v3);
  }
}

uint64_t getNRDevicePropertyProductTypeSymbolLoc()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = getNRDevicePropertyProductTypeSymbolLoc_ptr;
  uint64_t v6 = getNRDevicePropertyProductTypeSymbolLoc_ptr;
  if (!getNRDevicePropertyProductTypeSymbolLoc_ptr)
  {
    id v1 = (void *)NanoRegistryLibrary();
    v4[3] = (uint64_t)dlsym(v1, "NRDevicePropertyProductType");
    getNRDevicePropertyProductTypeSymbolLoc_ptr = v4[3];
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_18A05CE08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getNRDevicePropertyProductTypeSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)NanoRegistryLibrary();
  Class result = dlsym(v2, "NRDevicePropertyProductType");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getNRDevicePropertyProductTypeSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id getNRDevicePropertyProductType()
{
  NRDevicePropertyProductTypeSymbolLoc = (void **)getNRDevicePropertyProductTypeSymbolLoc();
  if (NRDevicePropertyProductTypeSymbolLoc)
  {
    id v1 = *NRDevicePropertyProductTypeSymbolLoc;
    return v1;
  }
  else
  {
    dlerror();
    uint64_t v3 = abort_report_np();
    return (id)getNRDevicePropertyScreenScaleSymbolLoc(v3);
  }
}

uint64_t getNRDevicePropertyScreenScaleSymbolLoc()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = getNRDevicePropertyScreenScaleSymbolLoc_ptr;
  uint64_t v6 = getNRDevicePropertyScreenScaleSymbolLoc_ptr;
  if (!getNRDevicePropertyScreenScaleSymbolLoc_ptr)
  {
    id v1 = (void *)NanoRegistryLibrary();
    v4[3] = (uint64_t)dlsym(v1, "NRDevicePropertyScreenScale");
    getNRDevicePropertyScreenScaleSymbolLoc_ptr = v4[3];
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_18A05CF94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getNRDevicePropertyScreenScaleSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)NanoRegistryLibrary();
  Class result = dlsym(v2, "NRDevicePropertyScreenScale");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getNRDevicePropertyScreenScaleSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id getNRDevicePropertyScreenScale()
{
  NRDevicePropertyScreenScaleSymbolLoc = (void **)getNRDevicePropertyScreenScaleSymbolLoc();
  if (NRDevicePropertyScreenScaleSymbolLoc)
  {
    id v1 = *NRDevicePropertyScreenScaleSymbolLoc;
    return v1;
  }
  else
  {
    dlerror();
    uint64_t v3 = abort_report_np();
    return (id)getNRDevicePropertyIsActiveSymbolLoc(v3);
  }
}

uint64_t getNRDevicePropertyIsActiveSymbolLoc()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = getNRDevicePropertyIsActiveSymbolLoc_ptr;
  uint64_t v6 = getNRDevicePropertyIsActiveSymbolLoc_ptr;
  if (!getNRDevicePropertyIsActiveSymbolLoc_ptr)
  {
    id v1 = (void *)NanoRegistryLibrary();
    v4[3] = (uint64_t)dlsym(v1, "NRDevicePropertyIsActive");
    getNRDevicePropertyIsActiveSymbolLoc_ptr = v4[3];
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_18A05D120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getNRDevicePropertyIsActiveSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)NanoRegistryLibrary();
  Class result = dlsym(v2, "NRDevicePropertyIsActive");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getNRDevicePropertyIsActiveSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id getNRDevicePropertyIsActive()
{
  IsActiveSymbolLoc = (void **)getNRDevicePropertyIsActiveSymbolLoc();
  if (IsActiveSymbolLoc)
  {
    id v1 = *IsActiveSymbolLoc;
    return v1;
  }
  else
  {
    dlerror();
    abort_report_np();
    return (id)getNRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc();
  }
}

uint64_t getNRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = getNRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc_ptr;
  uint64_t v6 = getNRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc_ptr;
  if (!getNRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc_ptr)
  {
    id v1 = (void *)NanoRegistryLibrary();
    v4[3] = (uint64_t)dlsym(v1, "NRPairedDeviceRegistryDevicesDidUpdateNotification");
    getNRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc_ptr = v4[3];
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_18A05D2AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getNRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)NanoRegistryLibrary();
  Class result = dlsym(v2, "NRPairedDeviceRegistryDevicesDidUpdateNotification");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getNRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                                 + 24);
  return result;
}

id getNRPairedDeviceRegistryDevicesDidUpdateNotification()
{
  NRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc = (void **)getNRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc();
  if (NRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc)
  {
    id v1 = *NRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc;
    return v1;
  }
  else
  {
    dlerror();
    abort_report_np();
    return (id)getNRWatchOSVersionForRemoteDeviceSymbolLoc();
  }
}

uint64_t getNRWatchOSVersionForRemoteDeviceSymbolLoc()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = getNRWatchOSVersionForRemoteDeviceSymbolLoc_ptr;
  uint64_t v6 = getNRWatchOSVersionForRemoteDeviceSymbolLoc_ptr;
  if (!getNRWatchOSVersionForRemoteDeviceSymbolLoc_ptr)
  {
    id v1 = (void *)NanoRegistryLibrary();
    v4[3] = (uint64_t)dlsym(v1, "NRWatchOSVersionForRemoteDevice");
    getNRWatchOSVersionForRemoteDeviceSymbolLoc_ptr = v4[3];
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_18A05D438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getNRWatchOSVersionForRemoteDeviceSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)NanoRegistryLibrary();
  Class result = dlsym(v2, "NRWatchOSVersionForRemoteDevice");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getNRWatchOSVersionForRemoteDeviceSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t geoNRWatchOSVersionForRemoteDevice(void *a1)
{
  id v1 = a1;
  NRWatchOSVersionForRemoteDeviceSymbolLoc = (uint64_t (*)(id))getNRWatchOSVersionForRemoteDeviceSymbolLoc();
  if (NRWatchOSVersionForRemoteDeviceSymbolLoc)
  {
    uint64_t v3 = NRWatchOSVersionForRemoteDeviceSymbolLoc(v1);

    return v3;
  }
  else
  {
    dlerror();
    uint64_t v5 = abort_report_np();
    return getNRVersionIsGreaterThanOrEqualSymbolLoc(v5);
  }
}

uint64_t getNRVersionIsGreaterThanOrEqualSymbolLoc()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = getNRVersionIsGreaterThanOrEqualSymbolLoc_ptr;
  uint64_t v6 = getNRVersionIsGreaterThanOrEqualSymbolLoc_ptr;
  if (!getNRVersionIsGreaterThanOrEqualSymbolLoc_ptr)
  {
    id v1 = (void *)NanoRegistryLibrary();
    v4[3] = (uint64_t)dlsym(v1, "NRVersionIsGreaterThanOrEqual");
    getNRVersionIsGreaterThanOrEqualSymbolLoc_ptr = v4[3];
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_18A05D5D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getNRVersionIsGreaterThanOrEqualSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)NanoRegistryLibrary();
  Class result = dlsym(v2, "NRVersionIsGreaterThanOrEqual");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getNRVersionIsGreaterThanOrEqualSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id geoNRVersionIsGreaterThanOrEqual(uint64_t a1, uint64_t a2)
{
  IsGreaterThanOrEqualSymbolLoc = (uint64_t (*)(uint64_t, uint64_t))getNRVersionIsGreaterThanOrEqualSymbolLoc();
  if (IsGreaterThanOrEqualSymbolLoc)
  {
    return (id)IsGreaterThanOrEqualSymbolLoc(a1, a2);
  }
  else
  {
    dlerror();
    uint64_t v6 = (void *)abort_report_np();
    return +[GEOUserSession highBytesStringFromSession:v9];
  }
}

uint64_t onLocationServicesResetNotification()
{
  return _setValue(GeoUserSessionConfig_LongSessionDataByAppID, (uint64_t)off_1E9110828, 0, 0, 0);
}

void sub_18A05D9A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A05DBBC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_18A05DE84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a35, 8);
  _Block_object_dispose((const void *)(v35 - 192), 8);
  _Block_object_dispose((const void *)(v35 - 160), 8);
  _Block_object_dispose((const void *)(v35 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_18A05E380(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_18A05E4DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A05E728(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_18A05E9C4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_18A05ED3C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v2 - 112), 8);
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_18A05EF84(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_18A060DFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A0611A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18A0612FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A0618AC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_18A061A94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A0620B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A062704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id GEOStringForDuration(uint64_t a1, double a2)
{
  double v3 = ceil(a2 / 60.0) * 60.0;
  uint64_t v4 = [MEMORY[0x1E4F1C9A8] currentCalendar];
  if (+[GEOComposedString hasLocalizationProvider])
  {
    uint64_t v5 = +[GEOComposedString localizationProvider];
    uint64_t v6 = [v5 locale];
    [v4 setLocale:v6];
  }
  else
  {
    uint64_t v5 = [MEMORY[0x1E4F1CA20] autoupdatingCurrentLocale];
    [v4 setLocale:v5];
  }

  id v7 = objc_alloc_init(MEMORY[0x1E4F28C00]);
  [v7 setCalendar:v4];
  [v7 setZeroFormattingBehavior:14];
  [v7 setAllowedUnits:112];
  [v7 setMaximumUnitCount:2];
  [v7 setUnitsStyle:a1];
  uint64_t v8 = [v7 stringFromTimeInterval:v3];
  if ([v8 length])
  {
    uint64_t v9 = [v8 stringByReplacingOccurrencesOfString:@"," withString:&stru_1ED51F370];

    uint64_t v8 = (void *)v9;
  }

  return v8;
}

BOOL GEOBookedTableReadAllFrom(uint64_t a1, void *a2)
{
  double v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      id v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(_WORD *)(a1 + 36) |= 2u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_115;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                uint64_t v20 = 0;
                goto LABEL_117;
              }
            }
            v3[*v6] = 1;
LABEL_115:
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_117:
            BOOL v111 = v20 != 0;
            uint64_t v112 = 24;
            goto LABEL_166;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            *(_WORD *)(a1 + 36) |= 8u;
            while (2)
            {
              uint64_t v28 = *v4;
              uint64_t v29 = *(void *)&v3[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
                *(void *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    uint64_t v27 = 0;
                    goto LABEL_121;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v27 = 0;
            }
LABEL_121:
            BOOL v111 = v27 != 0;
            uint64_t v112 = 26;
            goto LABEL_166;
          case 3u:
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            *(_WORD *)(a1 + 36) |= 0x1000u;
            while (2)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
                *(void *)&v3[v35] = v37;
                v34 |= (unint64_t)(v38 & 0x7F) << v32;
                if (v38 < 0)
                {
                  v32 += 7;
                  BOOL v15 = v33++ >= 9;
                  if (v15)
                  {
                    uint64_t v34 = 0;
                    goto LABEL_125;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v34 = 0;
            }
LABEL_125:
            BOOL v111 = v34 != 0;
            uint64_t v112 = 35;
            goto LABEL_166;
          case 4u:
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            *(_WORD *)(a1 + 36) |= 0x200u;
            while (2)
            {
              uint64_t v42 = *v4;
              uint64_t v43 = *(void *)&v3[v42];
              unint64_t v44 = v43 + 1;
              if (v43 == -1 || v44 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v45 = *(unsigned char *)(*(void *)&v3[*v7] + v43);
                *(void *)&v3[v42] = v44;
                v41 |= (unint64_t)(v45 & 0x7F) << v39;
                if (v45 < 0)
                {
                  v39 += 7;
                  BOOL v15 = v40++ >= 9;
                  if (v15)
                  {
                    uint64_t v41 = 0;
                    goto LABEL_129;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v41 = 0;
            }
LABEL_129:
            BOOL v111 = v41 != 0;
            uint64_t v112 = 32;
            goto LABEL_166;
          case 5u:
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v48 = 0;
            *(_WORD *)(a1 + 36) |= 0x800u;
            while (2)
            {
              uint64_t v49 = *v4;
              uint64_t v50 = *(void *)&v3[v49];
              unint64_t v51 = v50 + 1;
              if (v50 == -1 || v51 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v52 = *(unsigned char *)(*(void *)&v3[*v7] + v50);
                *(void *)&v3[v49] = v51;
                v48 |= (unint64_t)(v52 & 0x7F) << v46;
                if (v52 < 0)
                {
                  v46 += 7;
                  BOOL v15 = v47++ >= 9;
                  if (v15)
                  {
                    uint64_t v48 = 0;
                    goto LABEL_133;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v48 = 0;
            }
LABEL_133:
            BOOL v111 = v48 != 0;
            uint64_t v112 = 34;
            goto LABEL_166;
          case 6u:
            char v53 = 0;
            unsigned int v54 = 0;
            uint64_t v55 = 0;
            *(_WORD *)(a1 + 36) |= 0x400u;
            while (2)
            {
              uint64_t v56 = *v4;
              uint64_t v57 = *(void *)&v3[v56];
              unint64_t v58 = v57 + 1;
              if (v57 == -1 || v58 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v59 = *(unsigned char *)(*(void *)&v3[*v7] + v57);
                *(void *)&v3[v56] = v58;
                v55 |= (unint64_t)(v59 & 0x7F) << v53;
                if (v59 < 0)
                {
                  v53 += 7;
                  BOOL v15 = v54++ >= 9;
                  if (v15)
                  {
                    uint64_t v55 = 0;
                    goto LABEL_137;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v55 = 0;
            }
LABEL_137:
            BOOL v111 = v55 != 0;
            uint64_t v112 = 33;
            goto LABEL_166;
          case 7u:
            char v60 = 0;
            unsigned int v61 = 0;
            uint64_t v62 = 0;
            *(_WORD *)(a1 + 36) |= 0x10u;
            while (2)
            {
              uint64_t v63 = *v4;
              uint64_t v64 = *(void *)&v3[v63];
              unint64_t v65 = v64 + 1;
              if (v64 == -1 || v65 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v66 = *(unsigned char *)(*(void *)&v3[*v7] + v64);
                *(void *)&v3[v63] = v65;
                v62 |= (unint64_t)(v66 & 0x7F) << v60;
                if (v66 < 0)
                {
                  v60 += 7;
                  BOOL v15 = v61++ >= 9;
                  if (v15)
                  {
                    uint64_t v62 = 0;
                    goto LABEL_141;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v62 = 0;
            }
LABEL_141:
            BOOL v111 = v62 != 0;
            uint64_t v112 = 27;
            goto LABEL_166;
          case 8u:
            uint64_t v67 = PBReaderReadString();
            v68 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v67;

            continue;
          case 9u:
            char v69 = 0;
            unsigned int v70 = 0;
            uint64_t v71 = 0;
            *(_WORD *)(a1 + 36) |= 1u;
            while (2)
            {
              uint64_t v72 = *v4;
              uint64_t v73 = *(void *)&v3[v72];
              unint64_t v74 = v73 + 1;
              if (v73 == -1 || v74 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v75 = *(unsigned char *)(*(void *)&v3[*v7] + v73);
                *(void *)&v3[v72] = v74;
                v71 |= (unint64_t)(v75 & 0x7F) << v69;
                if (v75 < 0)
                {
                  v69 += 7;
                  BOOL v15 = v70++ >= 9;
                  if (v15)
                  {
                    uint64_t v71 = 0;
                    goto LABEL_145;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v71 = 0;
            }
LABEL_145:
            *(void *)(a1 + 16) = v71;
            continue;
          case 0xAu:
            char v76 = 0;
            unsigned int v77 = 0;
            uint64_t v78 = 0;
            *(_WORD *)(a1 + 36) |= 4u;
            while (2)
            {
              uint64_t v79 = *v4;
              uint64_t v80 = *(void *)&v3[v79];
              unint64_t v81 = v80 + 1;
              if (v80 == -1 || v81 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v82 = *(unsigned char *)(*(void *)&v3[*v7] + v80);
                *(void *)&v3[v79] = v81;
                v78 |= (unint64_t)(v82 & 0x7F) << v76;
                if (v82 < 0)
                {
                  v76 += 7;
                  BOOL v15 = v77++ >= 9;
                  if (v15)
                  {
                    uint64_t v78 = 0;
                    goto LABEL_149;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v78 = 0;
            }
LABEL_149:
            BOOL v111 = v78 != 0;
            uint64_t v112 = 25;
            goto LABEL_166;
          case 0xBu:
            char v83 = 0;
            unsigned int v84 = 0;
            uint64_t v85 = 0;
            *(_WORD *)(a1 + 36) |= 0x20u;
            while (2)
            {
              uint64_t v86 = *v4;
              uint64_t v87 = *(void *)&v3[v86];
              unint64_t v88 = v87 + 1;
              if (v87 == -1 || v88 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v89 = *(unsigned char *)(*(void *)&v3[*v7] + v87);
                *(void *)&v3[v86] = v88;
                v85 |= (unint64_t)(v89 & 0x7F) << v83;
                if (v89 < 0)
                {
                  v83 += 7;
                  BOOL v15 = v84++ >= 9;
                  if (v15)
                  {
                    uint64_t v85 = 0;
                    goto LABEL_153;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v85 = 0;
            }
LABEL_153:
            BOOL v111 = v85 != 0;
            uint64_t v112 = 28;
            goto LABEL_166;
          case 0xCu:
            char v90 = 0;
            unsigned int v91 = 0;
            uint64_t v92 = 0;
            *(_WORD *)(a1 + 36) |= 0x100u;
            while (2)
            {
              uint64_t v93 = *v4;
              uint64_t v94 = *(void *)&v3[v93];
              unint64_t v95 = v94 + 1;
              if (v94 == -1 || v95 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v96 = *(unsigned char *)(*(void *)&v3[*v7] + v94);
                *(void *)&v3[v93] = v95;
                v92 |= (unint64_t)(v96 & 0x7F) << v90;
                if (v96 < 0)
                {
                  v90 += 7;
                  BOOL v15 = v91++ >= 9;
                  if (v15)
                  {
                    uint64_t v92 = 0;
                    goto LABEL_157;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v92 = 0;
            }
LABEL_157:
            BOOL v111 = v92 != 0;
            uint64_t v112 = 31;
            goto LABEL_166;
          case 0xDu:
            char v97 = 0;
            unsigned int v98 = 0;
            uint64_t v99 = 0;
            *(_WORD *)(a1 + 36) |= 0x80u;
            while (2)
            {
              uint64_t v100 = *v4;
              uint64_t v101 = *(void *)&v3[v100];
              unint64_t v102 = v101 + 1;
              if (v101 == -1 || v102 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v103 = *(unsigned char *)(*(void *)&v3[*v7] + v101);
                *(void *)&v3[v100] = v102;
                v99 |= (unint64_t)(v103 & 0x7F) << v97;
                if (v103 < 0)
                {
                  v97 += 7;
                  BOOL v15 = v98++ >= 9;
                  if (v15)
                  {
                    uint64_t v99 = 0;
                    goto LABEL_161;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v99 = 0;
            }
LABEL_161:
            BOOL v111 = v99 != 0;
            uint64_t v112 = 30;
            goto LABEL_166;
          case 0xEu:
            char v104 = 0;
            unsigned int v105 = 0;
            uint64_t v106 = 0;
            *(_WORD *)(a1 + 36) |= 0x40u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_169;
            }
            continue;
        }
        while (1)
        {
          uint64_t v107 = *v4;
          uint64_t v108 = *(void *)&v3[v107];
          unint64_t v109 = v108 + 1;
          if (v108 == -1 || v109 > *(void *)&v3[*v5]) {
            break;
          }
          char v110 = *(unsigned char *)(*(void *)&v3[*v7] + v108);
          *(void *)&v3[v107] = v109;
          v106 |= (unint64_t)(v110 & 0x7F) << v104;
          if ((v110 & 0x80) == 0) {
            goto LABEL_163;
          }
          v104 += 7;
          BOOL v15 = v105++ >= 9;
          if (v15)
          {
            uint64_t v106 = 0;
            goto LABEL_165;
          }
        }
        v3[*v6] = 1;
LABEL_163:
        if (v3[*v6]) {
          uint64_t v106 = 0;
        }
LABEL_165:
        BOOL v111 = v106 != 0;
        uint64_t v112 = 29;
LABEL_166:
        *(unsigned char *)(a1 + v112) = v111;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v113 = v3[*v6] == 0;
  }
  else
  {
LABEL_169:
    BOOL v113 = 0;
  }
  objc_sync_exit(v3);

  return v113;
}

void sub_18A064AF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOBookedTableReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOBookedTableReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A064B90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOBookedTableIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_130;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_126;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_127;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_130;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_126;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_127;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_130;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_126;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_127;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_130;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_126;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_127;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_130;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_126;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_127;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_130;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_126;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_127;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_130;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_126;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_127;
          }
        case 8u:
          if (v15 == 2) {
            goto LABEL_76;
          }
          goto LABEL_130;
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_130;
          }
          unsigned int v53 = 0;
          while (1)
          {
            uint64_t v54 = *v2;
            uint64_t v55 = *(void *)&a1[v54];
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
              goto LABEL_126;
            }
            int v57 = *(char *)(*(void *)&a1[*v5] + v55);
            *(void *)&a1[v54] = v56;
            if (v57 < 0)
            {
              BOOL v22 = v53++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_127;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_130;
          }
          unsigned int v58 = 0;
          while (1)
          {
            uint64_t v59 = *v2;
            uint64_t v60 = *(void *)&a1[v59];
            unint64_t v61 = v60 + 1;
            if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
              goto LABEL_126;
            }
            int v62 = *(char *)(*(void *)&a1[*v5] + v60);
            *(void *)&a1[v59] = v61;
            if (v62 < 0)
            {
              BOOL v22 = v58++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_127;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_130;
          }
          unsigned int v63 = 0;
          while (1)
          {
            uint64_t v64 = *v2;
            uint64_t v65 = *(void *)&a1[v64];
            unint64_t v66 = v65 + 1;
            if (v65 == -1 || v66 > *(void *)&a1[*v3]) {
              goto LABEL_126;
            }
            int v67 = *(char *)(*(void *)&a1[*v5] + v65);
            *(void *)&a1[v64] = v66;
            if (v67 < 0)
            {
              BOOL v22 = v63++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_127;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_130;
          }
          unsigned int v68 = 0;
          while (1)
          {
            uint64_t v69 = *v2;
            uint64_t v70 = *(void *)&a1[v69];
            unint64_t v71 = v70 + 1;
            if (v70 == -1 || v71 > *(void *)&a1[*v3]) {
              goto LABEL_126;
            }
            int v72 = *(char *)(*(void *)&a1[*v5] + v70);
            *(void *)&a1[v69] = v71;
            if (v72 < 0)
            {
              BOOL v22 = v68++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_127;
          }
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_130;
          }
          unsigned int v73 = 0;
          while (1)
          {
            uint64_t v74 = *v2;
            uint64_t v75 = *(void *)&a1[v74];
            unint64_t v76 = v75 + 1;
            if (v75 == -1 || v76 > *(void *)&a1[*v3]) {
              goto LABEL_126;
            }
            int v77 = *(char *)(*(void *)&a1[*v5] + v75);
            *(void *)&a1[v74] = v76;
            if (v77 < 0)
            {
              BOOL v22 = v73++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_127;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_130;
          }
          unsigned int v78 = 0;
          break;
        default:
LABEL_76:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_130:
          BOOL v83 = 0;
          goto LABEL_129;
      }
      while (1)
      {
        uint64_t v79 = *v2;
        uint64_t v80 = *(void *)&a1[v79];
        unint64_t v81 = v80 + 1;
        if (v80 == -1 || v81 > *(void *)&a1[*v3]) {
          break;
        }
        int v82 = *(char *)(*(void *)&a1[*v5] + v80);
        *(void *)&a1[v79] = v81;
        if (v82 < 0)
        {
          BOOL v22 = v78++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_127;
      }
LABEL_126:
      a1[*v4] = 1;
LABEL_127:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v83 = a1[*v4] == 0;
LABEL_129:
  PBReaderRecallMark();
  return v83;
}

void sub_18A066230(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTableBookedSessionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v7 & 1) {
    int v14 = 0;
  }
  else {
    int v14 = a3;
  }
  int v15 = (int *)MEMORY[0x1E4F940E8];
  int v16 = (int *)MEMORY[0x1E4F940C8];
  if (v12) {
    BOOL v17 = 1;
  }
  else {
    BOOL v17 = v14 == 0;
  }
  uint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  uint64_t v19 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
  while (2)
  {
    if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v16)) {
      goto LABEL_61;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v15;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v18) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_27;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v16) = 1;
LABEL_27:
    int v28 = *(unsigned __int8 *)(v3 + *v16);
    if (*(unsigned char *)(v3 + *v16)) {
      unint64_t v22 = 0;
    }
LABEL_29:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_61:
      if (v13)
      {
        char v42 = 1;
        goto LABEL_74;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            int v44 = *v14++;
            int v43 = v44;
            if (v44 != 1 && v43 != 2) {
              break;
            }
            *(unsigned char *)(a1 + v19[623]) |= v43;
          }
        }
        while (v43);
      }
      goto LABEL_75;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v13;
    if (!v17)
    {
      int v32 = v14;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 != 2)
    {
      if (v30 != 1)
      {
        int v39 = PBReaderSkipValueWithTag();
        int v16 = (int *)MEMORY[0x1E4F940C8];
        if (!v39) {
          goto LABEL_70;
        }
        goto LABEL_57;
      }
      if (v31)
      {
        if (*(unsigned char *)(a1 + v19[623]))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_71:
            char v42 = 0;
            goto LABEL_73;
          }
          v8 -= *(unsigned char *)(a1 + v19[623]) & 1;
        }
        else
        {
          uint64_t v36 = PBReaderReadString();
          int v37 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v36;

          --v8;
        }
LABEL_56:
        int v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_57:
        if (v8) {
          char v41 = 1;
        }
        else {
          char v41 = v13;
        }
        if ((v41 & 1) == 0) {
          goto LABEL_61;
        }
        continue;
      }
LABEL_52:
      char v40 = PBReaderSkipValueWithTag();
      int v16 = (int *)MEMORY[0x1E4F940C8];
      if ((v40 & 1) == 0)
      {
LABEL_70:
        char v42 = 0;
        goto LABEL_74;
      }
      goto LABEL_57;
    }
    break;
  }
  if (!v31 || (*(unsigned char *)(a1 + v19[623]) & 2) != 0) {
    goto LABEL_52;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_71;
  }
  unsigned int v38 = objc_alloc_init(GEOBookedTable);
  if (GEOBookedTableReadAllFrom((uint64_t)v38, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOLogMsgEventTableBookedSession _addNoFlagsBookedTable:](a1, v38);

    uint64_t v19 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
    goto LABEL_56;
  }

  char v42 = 0;
  uint64_t v19 = &OBJC_IVAR___GEOPDSearchViewportInfo__mapRegion;
LABEL_73:
  int v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_74:
  *(unsigned char *)(a1 + v19[623]) |= 1u;
  *(unsigned char *)(a1 + v19[623]) |= 2u;
  if (v42)
  {
LABEL_75:
    unint64_t v3 = *(unsigned char *)(v3 + *v16) == 0;
    if (!v13) {
      return v3;
    }
    goto LABEL_76;
  }
  unint64_t v3 = 0;
  if (v13)
  {
LABEL_76:
    uint64_t v45 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18A06679C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A06705C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgEventTableBookedSessionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOLogMsgEventTableBookedSessionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventTableBookedSessionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOLogMsgEventTableBookedSessionReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOLogMsgEventTableBookedSessionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventTableBookedSessionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgEventTableBookedSessionCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18A0672EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTableBookedSessionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventTableBookedSessionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A067350(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTableBookedSessionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOBookedTableIsValid(a1)) {
          goto LABEL_29;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_18A067768(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTableBookedSessionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_18A067B2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A067F64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTableBookingSessionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = (const float *)(a1 + 112);
  uint32x4_t v11 = (uint32x4_t)vld1q_dup_f32(v10);
  v12.i64[0] = 0x100000001;
  v12.i64[1] = 0x100000001;
  unsigned int v13 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v11, (uint32x4_t)xmmword_18A640200), v12));
  while (1)
  {
    unsigned int v14 = a3[v8];
    if (v14 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v14 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v14)
  {
    ++v13;
    goto LABEL_9;
  }
  char v15 = v9 | (v13 > 2);
  if (v9 & 1 | (v13 > 2) | v7 & 1) {
    int v16 = 0;
  }
  else {
    int v16 = a3;
  }
  BOOL v17 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_207;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_24;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_24:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_26:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_207:
      if (v15)
      {
        char v123 = 1;
        goto LABEL_223;
      }
      if (!v16) {
        goto LABEL_224;
      }
      while (1)
      {
        while (1)
        {
          int v125 = *v16++;
          int v124 = v125;
          if (v125 <= 9) {
            break;
          }
          if (v124 == 10)
          {
            int v126 = 0x8000;
LABEL_219:
            *(_DWORD *)(a1 + 112) |= v126;
          }
          else if (v124 == 16)
          {
            int v126 = 0x4000;
            goto LABEL_219;
          }
        }
        switch(v124)
        {
          case 1:
            int v126 = 0x2000;
            goto LABEL_219;
          case 4:
            int v126 = 4096;
            goto LABEL_219;
          case 0:
            goto LABEL_224;
        }
      }
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_147;
        }
        if ((*(unsigned char *)(a1 + 113) & 0x20) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = 40;
          goto LABEL_101;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_229;
        }
        int v122 = (int)(*(_DWORD *)(a1 + 112) << 18) >> 31;
        goto LABEL_202;
      case 2:
        if ((v7 & 1) == 0) {
          goto LABEL_147;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(_DWORD *)(a1 + 112) |= 0x10u;
        while (2)
        {
          uint64_t v42 = *v17;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(v3 + *v19) + v43);
            *(void *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v27 = v40++ >= 9;
              if (v27)
              {
                LODWORD(v41) = 0;
                goto LABEL_152;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v41) = 0;
        }
LABEL_152:
        uint64_t v118 = 92;
        goto LABEL_182;
      case 3:
        if ((v7 & 1) == 0) {
          goto LABEL_147;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v41 = 0;
        *(_DWORD *)(a1 + 112) |= 0x20u;
        while (2)
        {
          uint64_t v48 = *v17;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v19) + v49);
            *(void *)(v3 + v48) = v50;
            v41 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              BOOL v27 = v47++ >= 9;
              if (v27)
              {
                LODWORD(v41) = 0;
                goto LABEL_156;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v41) = 0;
        }
LABEL_156:
        uint64_t v118 = 96;
        goto LABEL_182;
      case 4:
        if (!v31) {
          goto LABEL_147;
        }
        if ((*(unsigned char *)(a1 + 113) & 0x10) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = 32;
          goto LABEL_101;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_229;
        }
        int v122 = (int)(*(_DWORD *)(a1 + 112) << 19) >> 31;
        goto LABEL_202;
      case 5:
        if ((v7 & 1) == 0) {
          goto LABEL_147;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        *(_DWORD *)(a1 + 112) |= 8u;
        while (2)
        {
          uint64_t v55 = *v17;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v19) + v56);
            *(void *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              BOOL v27 = v53++ >= 9;
              if (v27)
              {
                uint64_t v54 = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v54 = 0;
        }
LABEL_160:
        uint64_t v119 = 72;
        goto LABEL_169;
      case 6:
        if ((v7 & 1) == 0) {
          goto LABEL_147;
        }
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v54 = 0;
        *(_DWORD *)(a1 + 112) |= 2u;
        while (2)
        {
          uint64_t v61 = *v17;
          uint64_t v62 = *(void *)(v3 + v61);
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(v3 + *v19) + v62);
            *(void *)(v3 + v61) = v63;
            v54 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              BOOL v27 = v60++ >= 9;
              if (v27)
              {
                uint64_t v54 = 0;
                goto LABEL_164;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v54 = 0;
        }
LABEL_164:
        uint64_t v119 = 24;
        goto LABEL_169;
      case 7:
        if ((v7 & 1) == 0) {
          goto LABEL_147;
        }
        char v65 = 0;
        unsigned int v66 = 0;
        uint64_t v54 = 0;
        *(_DWORD *)(a1 + 112) |= 1u;
        while (2)
        {
          uint64_t v67 = *v17;
          uint64_t v68 = *(void *)(v3 + v67);
          unint64_t v69 = v68 + 1;
          if (v68 == -1 || v69 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v70 = *(unsigned char *)(*(void *)(v3 + *v19) + v68);
            *(void *)(v3 + v67) = v69;
            v54 |= (unint64_t)(v70 & 0x7F) << v65;
            if (v70 < 0)
            {
              v65 += 7;
              BOOL v27 = v66++ >= 9;
              if (v27)
              {
                uint64_t v54 = 0;
                goto LABEL_168;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v54 = 0;
        }
LABEL_168:
        uint64_t v119 = 16;
LABEL_169:
        *(void *)(a1 + v119) = v54;
        goto LABEL_206;
      case 8:
        if ((v7 & 1) == 0) {
          goto LABEL_147;
        }
        *(_DWORD *)(a1 + 112) |= 4u;
        uint64_t v71 = *v17;
        unint64_t v72 = *(void *)(v3 + v71);
        if (v72 <= 0xFFFFFFFFFFFFFFF7 && v72 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v73 = *(void *)(*(void *)(v3 + *v19) + v72);
          *(void *)(v3 + v71) = v72 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v73 = 0;
        }
        *(void *)(a1 + 48) = v73;
        goto LABEL_206;
      case 9:
        if ((v7 & 1) == 0) {
          goto LABEL_147;
        }
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v76 = 0;
        *(_DWORD *)(a1 + 112) |= 0x200u;
        while (2)
        {
          uint64_t v77 = *v17;
          uint64_t v78 = *(void *)(v3 + v77);
          unint64_t v79 = v78 + 1;
          if (v78 == -1 || v79 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v80 = *(unsigned char *)(*(void *)(v3 + *v19) + v78);
            *(void *)(v3 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              BOOL v27 = v75++ >= 9;
              if (v27)
              {
                uint64_t v76 = 0;
                goto LABEL_173;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v76 = 0;
        }
LABEL_173:
        BOOL v120 = v76 != 0;
        uint64_t v121 = 106;
        goto LABEL_195;
      case 10:
        if (!v31) {
          goto LABEL_147;
        }
        if ((*(unsigned char *)(a1 + 113) & 0x80) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = 64;
LABEL_101:
          unint64_t v81 = *(void **)(a1 + v37);
          *(void *)(a1 + v37) = v36;

          --v8;
          goto LABEL_203;
        }
        if (PBReaderSkipValueWithTag())
        {
          int v122 = (int)(*(_DWORD *)(a1 + 112) << 16) >> 31;
LABEL_202:
          v8 += v122;
LABEL_203:
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_206:
          if (!(v15 & 1 | (v8 != 0))) {
            goto LABEL_207;
          }
          continue;
        }
LABEL_229:
        char v123 = 0;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_223:
        *(_DWORD *)(a1 + 112) |= 0x2000u;
        *(_DWORD *)(a1 + 112) |= 0x1000u;
        *(_DWORD *)(a1 + 112) |= 0x8000u;
        *(_DWORD *)(a1 + 112) |= 0x4000u;
        if (v123)
        {
LABEL_224:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_225;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_225:
            v127 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 11:
        if ((v7 & 1) == 0) {
          goto LABEL_147;
        }
        char v82 = 0;
        unsigned int v83 = 0;
        uint64_t v84 = 0;
        *(_DWORD *)(a1 + 112) |= 0x100u;
        while (2)
        {
          uint64_t v85 = *v17;
          uint64_t v86 = *(void *)(v3 + v85);
          unint64_t v87 = v86 + 1;
          if (v86 == -1 || v87 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v88 = *(unsigned char *)(*(void *)(v3 + *v19) + v86);
            *(void *)(v3 + v85) = v87;
            v84 |= (unint64_t)(v88 & 0x7F) << v82;
            if (v88 < 0)
            {
              v82 += 7;
              BOOL v27 = v83++ >= 9;
              if (v27)
              {
                uint64_t v84 = 0;
                goto LABEL_177;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v84 = 0;
        }
LABEL_177:
        BOOL v120 = v84 != 0;
        uint64_t v121 = 105;
        goto LABEL_195;
      case 12:
        if ((v7 & 1) == 0) {
          goto LABEL_147;
        }
        char v89 = 0;
        unsigned int v90 = 0;
        uint64_t v41 = 0;
        *(_DWORD *)(a1 + 112) |= 0x40u;
        while (2)
        {
          uint64_t v91 = *v17;
          uint64_t v92 = *(void *)(v3 + v91);
          unint64_t v93 = v92 + 1;
          if (v92 == -1 || v93 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v94 = *(unsigned char *)(*(void *)(v3 + *v19) + v92);
            *(void *)(v3 + v91) = v93;
            v41 |= (unint64_t)(v94 & 0x7F) << v89;
            if (v94 < 0)
            {
              v89 += 7;
              BOOL v27 = v90++ >= 9;
              if (v27)
              {
                LODWORD(v41) = 0;
                goto LABEL_181;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v41) = 0;
        }
LABEL_181:
        uint64_t v118 = 100;
LABEL_182:
        *(_DWORD *)(a1 + v118) = v41;
        goto LABEL_206;
      case 13:
        if ((v7 & 1) == 0) {
          goto LABEL_147;
        }
        char v95 = 0;
        unsigned int v96 = 0;
        uint64_t v97 = 0;
        *(_DWORD *)(a1 + 112) |= 0x80u;
        while (2)
        {
          uint64_t v98 = *v17;
          uint64_t v99 = *(void *)(v3 + v98);
          unint64_t v100 = v99 + 1;
          if (v99 == -1 || v100 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v101 = *(unsigned char *)(*(void *)(v3 + *v19) + v99);
            *(void *)(v3 + v98) = v100;
            v97 |= (unint64_t)(v101 & 0x7F) << v95;
            if (v101 < 0)
            {
              v95 += 7;
              BOOL v27 = v96++ >= 9;
              if (v27)
              {
                uint64_t v97 = 0;
                goto LABEL_186;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v97 = 0;
        }
LABEL_186:
        BOOL v120 = v97 != 0;
        uint64_t v121 = 104;
        goto LABEL_195;
      case 14:
        if ((v7 & 1) == 0) {
          goto LABEL_147;
        }
        char v102 = 0;
        unsigned int v103 = 0;
        uint64_t v104 = 0;
        *(_DWORD *)(a1 + 112) |= 0x400u;
        while (2)
        {
          uint64_t v105 = *v17;
          uint64_t v106 = *(void *)(v3 + v105);
          unint64_t v107 = v106 + 1;
          if (v106 == -1 || v107 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v108 = *(unsigned char *)(*(void *)(v3 + *v19) + v106);
            *(void *)(v3 + v105) = v107;
            v104 |= (unint64_t)(v108 & 0x7F) << v102;
            if (v108 < 0)
            {
              v102 += 7;
              BOOL v27 = v103++ >= 9;
              if (v27)
              {
                uint64_t v104 = 0;
                goto LABEL_190;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v104 = 0;
        }
LABEL_190:
        BOOL v120 = v104 != 0;
        uint64_t v121 = 107;
        goto LABEL_195;
      case 15:
        if ((v7 & 1) == 0) {
          goto LABEL_147;
        }
        char v109 = 0;
        unsigned int v110 = 0;
        uint64_t v111 = 0;
        *(_DWORD *)(a1 + 112) |= 0x800u;
        while (2)
        {
          uint64_t v112 = *v17;
          uint64_t v113 = *(void *)(v3 + v112);
          unint64_t v114 = v113 + 1;
          if (v113 == -1 || v114 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v115 = *(unsigned char *)(*(void *)(v3 + *v19) + v113);
            *(void *)(v3 + v112) = v114;
            v111 |= (unint64_t)(v115 & 0x7F) << v109;
            if (v115 < 0)
            {
              v109 += 7;
              BOOL v27 = v110++ >= 9;
              if (v27)
              {
                uint64_t v111 = 0;
                goto LABEL_194;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v111 = 0;
        }
LABEL_194:
        BOOL v120 = v111 != 0;
        uint64_t v121 = 108;
LABEL_195:
        *(unsigned char *)(a1 + v121) = v120;
        goto LABEL_206;
      case 16:
        if (v31 && (*(unsigned char *)(a1 + 113) & 0x40) == 0)
        {
          v116 = PBReaderReadString();
          if (v116)
          {
            v129 = v116;
            -[GEOLogMsgEventTableBookingSession _addNoFlagsErrorMessage:](a1, v116);
            v116 = v129;
          }

          goto LABEL_203;
        }
LABEL_147:
        char v117 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if ((v117 & 1) == 0)
        {
LABEL_222:
          char v123 = 0;
          goto LABEL_223;
        }
        goto LABEL_206;
      default:
        int v38 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v38) {
          goto LABEL_222;
        }
        goto LABEL_206;
    }
  }
}

void sub_18A0692B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A069698(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A069A90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A06AD5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTableBookingSessionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventTableBookingSessionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOLogMsgEventTableBookingSessionReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOLogMsgEventTableBookingSessionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventTableBookingSessionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_18A06AEE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTableBookingSessionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventTableBookingSessionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A06AF4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTableBookingSessionIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2) {
            goto LABEL_126;
          }
          goto LABEL_122;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_126;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_119;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_123;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_126;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_119;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_123;
          }
        case 4u:
          if (v16 == 2) {
            goto LABEL_122;
          }
          goto LABEL_126;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_126;
          }
          unsigned int v29 = 0;
          while (1)
          {
            uint64_t v30 = *v2;
            uint64_t v31 = *(void *)&a1[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
              goto LABEL_119;
            }
            int v33 = *(char *)(*(void *)&a1[*v5] + v31);
            *(void *)&a1[v30] = v32;
            if (v33 < 0)
            {
              BOOL v23 = v29++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_123;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_126;
          }
          unsigned int v34 = 0;
          while (1)
          {
            uint64_t v35 = *v2;
            uint64_t v36 = *(void *)&a1[v35];
            unint64_t v37 = v36 + 1;
            if (v36 == -1 || v37 > *(void *)&a1[*v3]) {
              goto LABEL_119;
            }
            int v38 = *(char *)(*(void *)&a1[*v5] + v36);
            *(void *)&a1[v35] = v37;
            if (v38 < 0)
            {
              BOOL v23 = v34++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_123;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_126;
          }
          unsigned int v39 = 0;
          while (1)
          {
            uint64_t v40 = *v2;
            uint64_t v41 = *(void *)&a1[v40];
            unint64_t v42 = v41 + 1;
            if (v41 == -1 || v42 > *(void *)&a1[*v3]) {
              goto LABEL_119;
            }
            int v43 = *(char *)(*(void *)&a1[*v5] + v41);
            *(void *)&a1[v40] = v42;
            if (v43 < 0)
            {
              BOOL v23 = v39++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_123;
          }
        case 8u:
          if (v16 != 1) {
            goto LABEL_126;
          }
          uint64_t v44 = *v2;
          unint64_t v45 = *(void *)&a1[v44];
          if (v45 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_120;
          }
          unint64_t v46 = v45 + 8;
          if (v46 > *(void *)&a1[*v3]) {
            goto LABEL_120;
          }
          *(void *)&a1[v44] = v46;
          continue;
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_126;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v2;
            uint64_t v49 = *(void *)&a1[v48];
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
              goto LABEL_119;
            }
            int v51 = *(char *)(*(void *)&a1[*v5] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v23 = v47++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_123;
          }
        case 0xAu:
          if (v16 == 2) {
            goto LABEL_122;
          }
          goto LABEL_126;
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_126;
          }
          unsigned int v52 = 0;
          while (1)
          {
            uint64_t v53 = *v2;
            uint64_t v54 = *(void *)&a1[v53];
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
              goto LABEL_119;
            }
            int v56 = *(char *)(*(void *)&a1[*v5] + v54);
            *(void *)&a1[v53] = v55;
            if (v56 < 0)
            {
              BOOL v23 = v52++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_123;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_126;
          }
          unsigned int v57 = 0;
          while (1)
          {
            uint64_t v58 = *v2;
            uint64_t v59 = *(void *)&a1[v58];
            unint64_t v60 = v59 + 1;
            if (v59 == -1 || v60 > *(void *)&a1[*v3]) {
              goto LABEL_119;
            }
            int v61 = *(char *)(*(void *)&a1[*v5] + v59);
            *(void *)&a1[v58] = v60;
            if (v61 < 0)
            {
              BOOL v23 = v57++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_123;
          }
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_126;
          }
          unsigned int v62 = 0;
          while (1)
          {
            uint64_t v63 = *v2;
            uint64_t v64 = *(void *)&a1[v63];
            unint64_t v65 = v64 + 1;
            if (v64 == -1 || v65 > *(void *)&a1[*v3]) {
              goto LABEL_119;
            }
            int v66 = *(char *)(*(void *)&a1[*v5] + v64);
            *(void *)&a1[v63] = v65;
            if (v66 < 0)
            {
              BOOL v23 = v62++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_123;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_126;
          }
          unsigned int v67 = 0;
          while (1)
          {
            uint64_t v68 = *v2;
            uint64_t v69 = *(void *)&a1[v68];
            unint64_t v70 = v69 + 1;
            if (v69 == -1 || v70 > *(void *)&a1[*v3]) {
              goto LABEL_119;
            }
            int v71 = *(char *)(*(void *)&a1[*v5] + v69);
            *(void *)&a1[v68] = v70;
            if (v71 < 0)
            {
              BOOL v23 = v67++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_123;
          }
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_126;
          }
          unsigned int v72 = 0;
          break;
        case 0x10u:
          if (v16 != 2) {
            goto LABEL_126;
          }
LABEL_122:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_126:
          BOOL v77 = 0;
          goto LABEL_125;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_126;
          }
          continue;
      }
      while (1)
      {
        uint64_t v73 = *v2;
        uint64_t v74 = *(void *)&a1[v73];
        unint64_t v75 = v74 + 1;
        if (v74 == -1 || v75 > *(void *)&a1[*v3]) {
          break;
        }
        int v76 = *(char *)(*(void *)&a1[*v5] + v74);
        *(void *)&a1[v73] = v75;
        if (v76 < 0)
        {
          BOOL v23 = v72++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_123;
      }
LABEL_119:
      uint64_t v14 = *v4;
LABEL_120:
      a1[v14] = 1;
LABEL_123:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v77 = a1[*v4] == 0;
LABEL_125:
  PBReaderRecallMark();
  return v77;
}

void sub_18A06B954(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTableBookingSessionIsDirty(os_unfair_lock_s *a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner(a1 + 22);
  BOOL v2 = (a1[28]._os_unfair_lock_opaque & 0x1F000) != 0;
  os_unfair_lock_unlock(a1 + 22);
  return v2;
}

void sub_18A06C15C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A06EE04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id GEOGetRRMetadataRecorderLog()
{
  if (qword_1EB2A0638 != -1) {
    dispatch_once(&qword_1EB2A0638, &__block_literal_global_184);
  }
  uint64_t v0 = (void *)_MergedGlobals_322;

  return v0;
}

void __GEOGetRRMetadataRecorderLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "RRMetadataRecorder");
  id v1 = (void *)_MergedGlobals_322;
  _MergedGlobals_322 = (uint64_t)v0;
}

void sub_18A0741A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A074238(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A074294(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  uint64_t v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)GEOProbeCrumbs;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_18A074A60(_Unwind_Exception *a1)
{
  operator delete(v1);
  if (v2) {
    operator delete(v2);
  }
  _Unwind_Resume(a1);
}

id GEOGetGEOProbeCrumbsLog(void)
{
  if (qword_1EB2A0648 != -1) {
    dispatch_once(&qword_1EB2A0648, &__block_literal_global_185);
  }
  os_log_t v0 = (void *)_MergedGlobals_323;

  return v0;
}

void sub_18A074D30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A075044(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A075574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  maps::path_codec::geo3::RiceEncodedIntegers::~RiceEncodedIntegers((maps::path_codec::geo3::RiceEncodedIntegers *)&a23);

  _Unwind_Resume(a1);
}

void ___ZL23GEOGetGEOProbeCrumbsLogv_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOProbeCrumbs");
  id v1 = (void *)_MergedGlobals_323;
  _MergedGlobals_323 = (uint64_t)v0;
}

id GEOGetPublisherAttributionLog()
{
  if (qword_1EB2A0668 != -1) {
    dispatch_once(&qword_1EB2A0668, &__block_literal_global_140_0);
  }
  os_log_t v0 = (void *)qword_1EB2A0660;

  return v0;
}

void __GEOGetPublisherAttributionLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "PublisherAttribution");
  id v1 = (void *)qword_1EB2A0660;
  qword_1EB2A0660 = (uint64_t)v0;
}

void sub_18A0758C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0759B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A075E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,id a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,id a60,uint64_t a61,char a62,uint64_t a63)
{
  _Block_object_dispose(&a43, 8);
  _Block_object_dispose(&a62, 8);

  _Unwind_Resume(a1);
}

void sub_18A075F98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A076124(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A076224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A076678(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  _Unwind_Resume(a1);
}

void sub_18A076868(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A076A30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void _addAssetsForMarketMask(void *a1, uint64_t a2, unsigned int a3, int a4)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  uint64_t v8 = *(void *)(a2 + 8);
  if (v8)
  {
    uint64_t v9 = a2 + 8;
    do
    {
      unsigned int v10 = *(unsigned __int8 *)(v8 + 32);
      BOOL v11 = v10 >= a3;
      if (v10 >= a3) {
        char v12 = (uint64_t *)v8;
      }
      else {
        char v12 = (uint64_t *)(v8 + 8);
      }
      if (v11) {
        uint64_t v9 = v8;
      }
      uint64_t v8 = *v12;
    }
    while (*v12);
    if (v9 != a2 + 8 && *(unsigned __int8 *)(v9 + 32) <= a3)
    {
      unsigned int v13 = *(void **)(v9 + 40);
      uint64_t v14 = *(void **)(v9 + 48);
      if (v13 != v14)
      {
        long long v24 = xmmword_18A6402D0;
        do
        {
          long long v26 = v24;
          *(void *)((char *)&v26 + 1) = *v13;
          long long v28 = v26;
          objc_msgSend(v7, "addKey:", &v28, v24, v26);
          ++v13;
        }
        while (v13 != v14);
      }
    }
  }
  uint64_t v17 = *(void *)(a2 + 32);
  uint64_t v16 = a2 + 32;
  uint64_t v15 = v17;
  if (v17)
  {
    uint64_t v18 = v16;
    do
    {
      unsigned int v19 = *(unsigned __int8 *)(v15 + 32);
      BOOL v20 = v19 >= a3;
      if (v19 >= a3) {
        unint64_t v21 = (uint64_t *)v15;
      }
      else {
        unint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }
    while (*v21);
    if (v18 != v16 && *(unsigned __int8 *)(v18 + 32) <= a3)
    {
      int v22 = *(void **)(v18 + 40);
      BOOL v23 = *(void **)(v18 + 48);
      if (v22 != v23)
      {
        long long v25 = xmmword_18A6402E0;
        do
        {
          long long v27 = v25;
          *(void *)((char *)&v27 + 1) = *v22;
          HIBYTE(v27) = 0;
          *(_DWORD *)((char *)&v27 + 11) = a4;
          long long v28 = v27;
          objc_msgSend(v7, "addKey:", &v28, v25, v27);
          ++v22;
        }
        while (v22 != v23);
      }
    }
  }
}

void sub_18A076C18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A076DB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A076EC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A077088(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0773B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0775F4(_Unwind_Exception *a1)
{
  std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

void sub_18A077750(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A077864(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A077918(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id _errorForResponse(void *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  int v2 = [v1 status];
  if (v2 > 4)
  {
    if (v2 == 5)
    {
      id v3 = (void *)MEMORY[0x1E4F28C58];
      uint64_t v4 = -10;
      goto LABEL_10;
    }
    if (v2 != 20)
    {
      if (v2 == 60)
      {
        id v3 = (void *)MEMORY[0x1E4F28C58];
        uint64_t v4 = -28;
LABEL_10:
        uint64_t v5 = [v3 GEOErrorWithCode:v4 userInfo:0];
LABEL_11:
        char v6 = (void *)v5;
        goto LABEL_54;
      }
      goto LABEL_17;
    }
    id v7 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v8 = [v1 status];
    if ((int)v8 <= 29)
    {
      uint64_t v9 = @"STATUS_SUCCESS";
      switch((int)v8)
      {
        case 0:
          goto LABEL_50;
        case 1:
          uint64_t v9 = @"STATUS_FAILED";
          break;
        case 2:
          uint64_t v9 = @"STATUS_INCOMPLETE";
          break;
        case 3:
        case 4:
          goto LABEL_41;
        case 5:
          uint64_t v9 = @"INVALID_REQUEST";
          break;
        default:
          if (v8 != 20) {
            goto LABEL_41;
          }
          uint64_t v9 = @"FAILED_NO_RESULT";
          break;
      }
      goto LABEL_50;
    }
    if ((int)v8 > 49)
    {
      if (v8 == 50)
      {
        uint64_t v9 = @"STATUS_DEDUPED";
        goto LABEL_50;
      }
      if (v8 == 60)
      {
        uint64_t v9 = @"VERSION_MISMATCH";
        goto LABEL_50;
      }
    }
    else
    {
      if (v8 == 30)
      {
        uint64_t v9 = @"NEEDS_REFINEMENT";
        goto LABEL_50;
      }
      if (v8 == 40)
      {
        uint64_t v9 = @"FAILED_NOT_AUTHORIZED";
LABEL_50:
        unsigned int v13 = v7;
        uint64_t v14 = -8;
LABEL_53:
        char v6 = [v13 GEOErrorWithCode:v14 reason:v9];

        goto LABEL_54;
      }
    }
LABEL_41:
    objc_msgSend(NSString, "stringWithFormat:", @"(unknown: %i)", v8);
    uint64_t v9 = (__CFString *)objc_claimAutoreleasedReturnValue();
    goto LABEL_50;
  }
  if (v2)
  {
    if (v2 == 1)
    {
      id v3 = (void *)MEMORY[0x1E4F28C58];
      uint64_t v4 = -8;
      goto LABEL_10;
    }
LABEL_17:
    unsigned int v10 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v11 = [v1 status];
    if ((int)v11 <= 29)
    {
      uint64_t v9 = @"STATUS_SUCCESS";
      switch((int)v11)
      {
        case 0:
          goto LABEL_52;
        case 1:
          uint64_t v9 = @"STATUS_FAILED";
          break;
        case 2:
          uint64_t v9 = @"STATUS_INCOMPLETE";
          break;
        case 3:
        case 4:
          goto LABEL_42;
        case 5:
          uint64_t v9 = @"INVALID_REQUEST";
          break;
        default:
          if (v11 != 20) {
            goto LABEL_42;
          }
          uint64_t v9 = @"FAILED_NO_RESULT";
          break;
      }
      goto LABEL_52;
    }
    if ((int)v11 > 49)
    {
      if (v11 == 50)
      {
        uint64_t v9 = @"STATUS_DEDUPED";
        goto LABEL_52;
      }
      if (v11 == 60)
      {
        uint64_t v9 = @"VERSION_MISMATCH";
        goto LABEL_52;
      }
    }
    else
    {
      if (v11 == 30)
      {
        uint64_t v9 = @"NEEDS_REFINEMENT";
        goto LABEL_52;
      }
      if (v11 == 40)
      {
        uint64_t v9 = @"FAILED_NOT_AUTHORIZED";
LABEL_52:
        unsigned int v13 = v10;
        uint64_t v14 = -7;
        goto LABEL_53;
      }
    }
LABEL_42:
    objc_msgSend(NSString, "stringWithFormat:", @"(unknown: %i)", v11);
    uint64_t v9 = (__CFString *)objc_claimAutoreleasedReturnValue();
    goto LABEL_52;
  }
  if (![v1 etaResultsCount])
  {
    char v12 = GEOFindOrCreateLog("com.apple.GeoServices", "GEOQuickETARequester");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      uint64_t v17 = @"Did not get any ETA results";
      _os_log_impl(&dword_188D96000, v12, OS_LOG_TYPE_ERROR, "%{public}@", buf, 0xCu);
    }

    uint64_t v5 = [MEMORY[0x1E4F28C58] GEOErrorWithCode:-8 reason:@"Did not get any ETA results"];
    goto LABEL_11;
  }
  char v6 = 0;
LABEL_54:

  return v6;
}

uint64_t GEOIsFeatureActive(void *a1)
{
  id v1 = a1;
  if (qword_1EB2A0680 != -1) {
    dispatch_once(&qword_1EB2A0680, &__block_literal_global_187);
  }
  uint64_t v12 = 0;
  unsigned int v13 = &v12;
  uint64_t v14 = 0x2020000000;
  char v15 = 0;
  uint64_t v10 = MEMORY[0x1E4F143A8];
  id v2 = v1;
  uint64_t v11 = v2;
  geo_isolate_sync();
  if (*((unsigned char *)v13 + 24))
  {
    uint64_t v3 = 1;
  }
  else
  {
    uint64_t v4 = _getValue(GeoServicesConfig_ClientAuthFeatureFlagsStateInfo, (uint64_t)off_1E9114AD8, 1, 0, 0, 0);
    uint64_t v5 = objc_msgSend(v4, "objectForKeyedSubscript:", v2, v10, 3221225472, __GEOIsFeatureActive_block_invoke_5, &unk_1E53D89C0, v2, &v12);
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0
      && ([v5 objectForKeyedSubscript:@"active"],
          char v6 = objc_claimAutoreleasedReturnValue(),
          objc_opt_class(),
          char isKindOfClass = objc_opt_isKindOfClass(),
          v6,
          (isKindOfClass & 1) != 0))
    {
      uint64_t v8 = [v5 objectForKeyedSubscript:@"active"];
      uint64_t v3 = [v8 BOOLValue];
    }
    else
    {
      uint64_t v3 = 0;
    }
  }
  _Block_object_dispose(&v12, 8);

  return v3;
}

void sub_18A079E98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __GEOIsFeatureActive_block_invoke()
{
  uint64_t v0 = geo_isolater_create();
  id v1 = (void *)_MergedGlobals_325;
  _MergedGlobals_325 = v0;

  geo_isolate_sync();
  id global_queue = (id)geo_get_global_queue();
  uint64_t v2 = _GEOConfigAddBlockListenerForKey(MapsFeaturesConfig_RemoteFeatureFlags, (uint64_t)off_1E9111BD8, global_queue, &__block_literal_global_19_0);
  uint64_t v3 = (void *)qword_1EB2A0678;
  qword_1EB2A0678 = v2;
}

void __GEOIsFeatureActive_block_invoke_2()
{
  uint64_t v0 = _getValue(MapsFeaturesConfig_RemoteFeatureFlags, (uint64_t)off_1E9111BD8, 1, 0, 0, 0);
  id v1 = (void *)GEOIsFeatureActive_remoteFeatureFlags;
  GEOIsFeatureActive_remoteFeatureFlags = v0;
}

uint64_t __GEOIsFeatureActive_block_invoke_3()
{
  return geo_isolate_sync();
}

void __GEOIsFeatureActive_block_invoke_4()
{
  uint64_t v0 = _getValue(MapsFeaturesConfig_RemoteFeatureFlags, (uint64_t)off_1E9111BD8, 1, 0, 0, 0);
  id v1 = (void *)GEOIsFeatureActive_remoteFeatureFlags;
  GEOIsFeatureActive_remoteFeatureFlags = v0;
}

uint64_t __GEOIsFeatureActive_block_invoke_5(uint64_t a1)
{
  uint64_t result = [(id)GEOIsFeatureActive_remoteFeatureFlags containsObject:*(void *)(a1 + 32)];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

uint64_t GEOShouldWatermark()
{
  uint64_t result = MapsFeature_IsEnabled_Watermarking();
  if (result)
  {
    id v1 = +[GEOMapsAuthServiceHelper sharedAuthHelper];
    uint64_t v2 = [v1 isCurrentEnvironmentSecure];

    return v2;
  }
  return result;
}

void sub_18A07ACAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A07ADA4(_Unwind_Exception *a1)
{
}

void __GEOGetImageServiceLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "ImageService");
  id v1 = (void *)qword_1EB2A0698;
  qword_1EB2A0698 = (uint64_t)v0;
}

uint64_t GEOMuninMeshTileKeyMake(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v8[0] = 5;
  if (a6 == 2)
  {
    char v6 = 7;
    goto LABEL_5;
  }
  if (a6 == 1)
  {
    char v6 = 6;
LABEL_5:
    v8[0] = v6;
  }
  *(void *)&v8[1] = a3;
  return *(void *)v8;
}

void *GeoServicesConfig_GetUserDefaultStringKeysForWatchSync()
{
  return &unk_1ED73EFB0;
}

void *GeoServicesConfig_GetConfigStoreStringKeysForWatchSync()
{
  return &unk_1ED73EFC8;
}

void *GeoServicesConfig_GetConfigStoreStringKeysForXPCMigration()
{
  return &unk_1ED73EFE0;
}

void *GeoServicesConfig_GetConfigStoreStringKeysForSystemMigration()
{
  return &unk_1ED73EFF8;
}

void *_getUserDefaultStringKeysForStateCapture()
{
  return &unk_1ED73F010;
}

void *_getConfigStoreStringKeysForStateCapture_1()
{
  return &unk_1ED73F028;
}

uint64_t GeoOfflineConfig_GetUserDefaultStringKeysForWatchSync()
{
  return MEMORY[0x1E4F1CBF0];
}

uint64_t GeoOfflineConfig_GetConfigStoreStringKeysForWatchSync()
{
  return MEMORY[0x1E4F1CBF0];
}

void *_getUserDefaultStringKeysForStateCapture_0()
{
  return &unk_1ED73F148;
}

void *_getConfigStoreStringKeysForStateCapture_2()
{
  return &unk_1ED73F160;
}

uint64_t GeoAnalyticsLibraryCore()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = 0;
  uint64_t v3 = &v2;
  uint64_t v4 = 0x2020000000;
  uint64_t v0 = GeoAnalyticsLibraryCore_frameworkLibrary;
  uint64_t v5 = GeoAnalyticsLibraryCore_frameworkLibrary;
  if (!GeoAnalyticsLibraryCore_frameworkLibrary)
  {
    long long v6 = xmmword_1E53F5300;
    long long v7 = *(_OWORD *)&off_1E53F5310;
    v3[3] = _sl_dlopen();
    GeoAnalyticsLibraryCore_frameworkLibrary = v3[3];
    uint64_t v0 = v3[3];
  }
  _Block_object_dispose(&v2, 8);
  return v0;
}

void sub_18A07D660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __GeoAnalyticsLibraryCore_block_invoke(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  GeoAnalyticsLibraryCore_frameworkLibrary = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t GeoAnalyticsLibrary()
{
  uint64_t v0 = GeoAnalyticsLibraryCore();
  if (!v0)
  {
    uint64_t v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

id getGEOAPPortalClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getGEOAPPortalClass_softClass;
  uint64_t v7 = getGEOAPPortalClass_softClass;
  if (!getGEOAPPortalClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getGEOAPPortalClass_block_invoke;
    v3[3] = &unk_1E53DB3C8;
    v3[4] = &v4;
    __getGEOAPPortalClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_18A07D830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getGEOAPPortalClass_block_invoke(uint64_t a1)
{
  GeoAnalyticsLibrary();
  Class result = objc_getClass("GEOAPPortal");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getGEOAPPortalClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)getGEOAPLocationCollectionReporterClass(v3);
  }
  return result;
}

id getGEOAPLocationCollectionReporterClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getGEOAPLocationCollectionReporterClass_softClass;
  uint64_t v7 = getGEOAPLocationCollectionReporterClass_softClass;
  if (!getGEOAPLocationCollectionReporterClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getGEOAPLocationCollectionReporterClass_block_invoke;
    v3[3] = &unk_1E53DB3C8;
    v3[4] = &v4;
    __getGEOAPLocationCollectionReporterClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_18A07D984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getGEOAPLocationCollectionReporterClass_block_invoke(uint64_t a1)
{
  GeoAnalyticsLibrary();
  Class result = objc_getClass("GEOAPLocationCollectionReporter");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getGEOAPLocationCollectionReporterClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    return (Class)getGEOAPServiceManagerClass();
  }
  return result;
}

id getGEOAPServiceManagerClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getGEOAPServiceManagerClass_softClass;
  uint64_t v7 = getGEOAPServiceManagerClass_softClass;
  if (!getGEOAPServiceManagerClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getGEOAPServiceManagerClass_block_invoke;
    v3[3] = &unk_1E53DB3C8;
    v3[4] = &v4;
    __getGEOAPServiceManagerClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_18A07DAD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getGEOAPServiceManagerClass_block_invoke(uint64_t a1)
{
  GeoAnalyticsLibrary();
  Class result = objc_getClass("GEOAPServiceManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getGEOAPServiceManagerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = (GEONavdPeer *)abort_report_np();
    return (Class)[(GEONavdPeer *)v3 description];
  }
  return result;
}

BOOL GEOAnalyticsPipelineStateDataReadSpecified(uint64_t a1, char *a2, int *a3)
{
  if (!a2) {
    return 0;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 512));
  *(void *)&a2[*MEMORY[0x1E4F940E0]] = *(unsigned int *)(a1 + 508);
  [a2 seekToOffset:*(unsigned int *)(a1 + 504)];
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  unint64_t v8 = *(unsigned __int16 *)(a1 + 740) | ((unint64_t)*(unsigned __int8 *)(a1 + 742) << 16);
  *((void *)&v10 + 1) = v8;
  *(void *)&long long v10 = *(void *)(a1 + 732);
  int32x2_t v9 = (int32x2_t)(v10 >> 54);
  *((void *)&v10 + 1) = v8;
  int32x2_t v11 = (int32x2_t)(v10 >> 43);
  int32x2_t v12 = v9;
  *((void *)&v10 + 1) = v8;
  int32x2_t v13 = (int32x2_t)(v10 >> 44);
  int32x2_t v14 = v11;
  *((void *)&v10 + 1) = v8;
  int32x2_t v15 = v13;
  int32x2_t v16 = (int32x2_t)(v10 >> 51);
  *((void *)&v10 + 1) = v8;
  int32x2_t v17 = (int32x2_t)(v10 >> 41);
  *((void *)&v10 + 1) = v8;
  int32x2_t v18 = (int32x2_t)(v10 >> 47);
  *((void *)&v10 + 1) = v8;
  int32x2_t v19 = (int32x2_t)(v10 >> 49);
  *((void *)&v10 + 1) = v8;
  int32x2_t v20 = (int32x2_t)(v10 >> 58);
  *((void *)&v10 + 1) = v8;
  int32x2_t v21 = (int32x2_t)(v10 >> 60);
  *((void *)&v10 + 1) = v8;
  int32x2_t v22 = v21;
  int32x2_t v23 = (int32x2_t)(v10 >> 59);
  *((void *)&v10 + 1) = v8;
  int32x2_t v24 = (int32x2_t)(v10 >> 55);
  *((void *)&v10 + 1) = v8;
  int32x2_t v25 = (int32x2_t)(v10 >> 53);
  *((void *)&v10 + 1) = v8;
  int32x2_t v26 = (int32x2_t)(v10 >> 46);
  *((void *)&v10 + 1) = v8;
  int32x2_t v27 = (int32x2_t)(v10 >> 38);
  *((void *)&v10 + 1) = v8;
  int32x2_t v28 = (int32x2_t)(v10 >> 37);
  *((void *)&v10 + 1) = v8;
  int32x2_t v29 = (int32x2_t)(v10 >> 50);
  *((void *)&v10 + 1) = v8;
  int32x2_t v30 = (int32x2_t)(v10 >> 48);
  *((void *)&v10 + 1) = v8;
  int32x2_t v31 = (int32x2_t)(v10 >> 42);
  *((void *)&v10 + 1) = v8;
  int32x2_t v32 = (int32x2_t)(v10 >> 62);
  *((void *)&v10 + 1) = v8;
  int32x2_t v33 = (int32x2_t)(v10 >> 61);
  *((void *)&v10 + 1) = v8;
  int32x2_t v34 = (int32x2_t)(v10 >> 63);
  *((void *)&v10 + 1) = v8;
  int32x2_t v35 = (int32x2_t)(v10 >> 56);
  *((void *)&v10 + 1) = v8;
  int32x2_t v36 = (int32x2_t)(v10 >> 39);
  *((void *)&v10 + 1) = v8;
  int32x2_t v37 = (int32x2_t)(v10 >> 45);
  *((void *)&v10 + 1) = v8;
  int32x2_t v38 = (int32x2_t)(v10 >> 40);
  *((void *)&v10 + 1) = v8;
  int32x2_t v39 = (int32x2_t)(v10 >> 57);
  *((void *)&v10 + 1) = v8;
  char v40 = 0;
  *(int32x2_t *)v41.i8 = vzip1_s32(v33, v32);
  int32x2_t v42 = v36;
  int v43 = a2;
  uint64_t v44 = (int *)MEMORY[0x1E4F940E0];
  v41.u64[1] = (unint64_t)vzip1_s32(v34, (int32x2_t)(v8 >> 2));
  *(int32x2_t *)v45.i8 = vzip1_s32(v30, v29);
  v45.u64[1] = (unint64_t)vzip1_s32(v31, (int32x2_t)(v8 >> 14));
  int32x2_t v46 = v38;
  *(int32x2_t *)v47.i8 = vzip1_s32(v26, (int32x2_t)(v8 >> 5));
  v47.u64[1] = (unint64_t)vzip1_s32(v28, v27);
  uint64_t v48 = 0;
  *(int32x2_t *)v49.i8 = vzip1_s32(v25, v24);
  v49.u64[1] = (unint64_t)vzip1_s32((int32x2_t)(v8 >> 9), (int32x2_t)(v8 >> 6));
  *(int32x2_t *)v50.i8 = vzip1_s32((int32x2_t)(v8 >> 3), v20);
  v50.u64[1] = (unint64_t)vzip1_s32(v23, v22);
  *(int32x2_t *)v51.i8 = vzip1_s32((int32x2_t)(v8 >> 12), (int32x2_t)(v8 >> 11));
  v51.u64[1] = (unint64_t)vzip1_s32(v19, v18);
  *(int32x2_t *)v52.i8 = vzip1_s32(v15, v14);
  v52.u64[1] = (unint64_t)vzip1_s32(v17, v16);
  *(int32x2_t *)v53.i8 = vzip1_s32((int32x2_t)v8, (int32x2_t)(v8 >> 1));
  v53.u64[1] = (unint64_t)vzip1_s32((int32x2_t)(v8 >> 4), v12);
  v54.i64[0] = 0x100000001;
  v54.i64[1] = 0x100000001;
  int32x4_t v55 = (int32x4_t)vandq_s8(v50, v54);
  *(int32x2_t *)v50.i8 = vzip1_s32((int32x2_t)(v8 >> 10), v37);
  v50.u64[1] = (unint64_t)vzip1_s32((int32x2_t)(v8 >> 13), v46);
  *(int32x2_t *)v56.i8 = vzip1_s32(v35, (int32x2_t)*(unsigned __int8 *)(a1 + 742));
  v56.u64[1] = (unint64_t)vzip1_s32((int32x2_t)(v8 >> 15), v42);
  int32x4_t v57 = (int32x4_t)vandq_s8(v50, v54);
  int32x4_t v58 = (int32x4_t)vandq_s8(v56, v54);
  *(int32x2_t *)v56.i8 = vzip1_s32(v39, (int32x2_t)(v8 >> 8));
  v56.u64[1] = (unint64_t)vzip1_s32((int32x2_t)(v8 >> 7), (int32x2_t)(v10 >> 52));
  unsigned int v59 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8(v52, v54), (int32x4_t)vandq_s8(v53, v54)), vaddq_s32(v55, (int32x4_t)vandq_s8(v51, v54))), vaddq_s32(vaddq_s32((int32x4_t)vandq_s8(v47, v54), (int32x4_t)vandq_s8(v49, v54)), vaddq_s32((int32x4_t)vandq_s8(v41, v54), (int32x4_t)vandq_s8(v45, v54)))), vaddq_s32(vaddq_s32(v58, v57), (int32x4_t)vandq_s8(v56, v54))));
  while (2)
  {
    uint64_t v60 = 1;
    uint64_t v61 = 1;
    switch(a3[v6])
    {
      case -3:
        char v40 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v60 = v48;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        char v784 = v48;
        char v62 = v7 | (v59 > 0x22);
        if (v7 & 1 | (v59 > 0x22) | v40 & 1) {
          uint64_t v63 = 0;
        }
        else {
          uint64_t v63 = a3;
        }
        uint64_t v64 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v65 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)&v43[*MEMORY[0x1E4F940E8]] >= *(void *)&v43[*MEMORY[0x1E4F940E0]]) {
          goto LABEL_1510;
        }
        int v66 = (int *)MEMORY[0x1E4F940B8];
        char v785 = v40;
        break;
      default:
        ++v59;
LABEL_6:
        uint64_t v60 = v48;
        uint64_t v61 = v7;
LABEL_8:
        ++v6;
        uint64_t v48 = v60;
        uint64_t v7 = v61;
        continue;
    }
    break;
  }
  while (2)
  {
    if (v43[*v65]) {
      goto LABEL_1510;
    }
    char v67 = 0;
    unsigned int v68 = 0;
    unint64_t v69 = 0;
    while (1)
    {
      uint64_t v70 = *v64;
      unint64_t v71 = *(void *)&v43[v70];
      if (v71 == -1 || v71 >= *(void *)&v43[*v44]) {
        break;
      }
      char v72 = *(unsigned char *)(*(void *)&v43[*v66] + v71);
      *(void *)&v43[v70] = v71 + 1;
      v69 |= (unint64_t)(v72 & 0x7F) << v67;
      if ((v72 & 0x80) == 0) {
        goto LABEL_23;
      }
      v67 += 7;
      BOOL v73 = v68++ >= 9;
      if (v73)
      {
        unint64_t v69 = 0;
        int v74 = v43[*v65];
        goto LABEL_25;
      }
    }
    v43[*v65] = 1;
LABEL_23:
    int v74 = v43[*v65];
    if (v43[*v65]) {
      unint64_t v69 = 0;
    }
LABEL_25:
    int v75 = v69 & 7;
    if (v74 || v75 == 4)
    {
LABEL_1510:
      if (v62)
      {
        char v771 = *(unsigned char *)(a1 + 742) | 1;
        unint64_t v772 = *(void *)(a1 + 732) | 0xFFFFFFE000000000;
        *(_WORD *)(a1 + 740) = -1;
        *(void *)(a1 + 732) = v772;
        *(unsigned char *)(a1 + 742) = v771;
      }
      else if (v63)
      {
        while (1)
        {
          int v774 = *v63++;
          int v775 = v774 - 44;
          switch(v774)
          {
            case 44:
              int v776 = 0;
              unint64_t v777 = 0x2000000000;
              goto LABEL_1560;
            case 45:
              int v776 = 0;
              unint64_t v777 = 0x4000000000;
              goto LABEL_1560;
            case 46:
              unint64_t v777 = 0;
              int v776 = 8;
              goto LABEL_1560;
            case 47:
            case 49:
            case 50:
            case 53:
            case 55:
            case 56:
            case 57:
            case 58:
            case 61:
            case 64:
            case 65:
            case 66:
            case 72:
            case 73:
            case 74:
            case 77:
            case 78:
            case 79:
            case 80:
            case 84:
            case 85:
            case 86:
            case 87:
            case 89:
            case 94:
            case 96:
            case 97:
            case 98:
            case 100:
            case 101:
            case 102:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 120:
            case 121:
            case 126:
            case 127:
            case 128:
            case 133:
            case 134:
            case 135:
            case 136:
              continue;
            case 48:
              int v776 = 0;
              unint64_t v777 = 0x400000000000000;
              goto LABEL_1560;
            case 51:
              int v776 = 0;
              unint64_t v777 = 0x800000000000000;
              goto LABEL_1560;
            case 52:
              int v776 = 0;
              unint64_t v777 = 0x1000000000000000;
              goto LABEL_1560;
            case 54:
              int v776 = 0;
              unint64_t v777 = 0x2000000000000000;
              goto LABEL_1560;
            case 59:
              int v776 = 0;
              unint64_t v777 = 0x8000000000000000;
              goto LABEL_1560;
            case 60:
              unint64_t v777 = 0;
              int v776 = 4;
              goto LABEL_1560;
            case 62:
              unint64_t v777 = 0;
              int v776 = 1;
              goto LABEL_1560;
            case 63:
              unint64_t v777 = 0;
              int v776 = 2;
              goto LABEL_1560;
            case 67:
              int v776 = 0;
              unint64_t v777 = 0x40000000000000;
              goto LABEL_1560;
            case 68:
              int v776 = 0;
              unint64_t v777 = 0x20000000000000;
              goto LABEL_1560;
            case 69:
              int v776 = 0;
              unint64_t v777 = 0x80000000000000;
              goto LABEL_1560;
            case 70:
              unint64_t v777 = 0;
              int v776 = 512;
              goto LABEL_1560;
            case 71:
              unint64_t v777 = 0;
              int v776 = 64;
              goto LABEL_1560;
            case 75:
              unint64_t v777 = 0;
              int v776 = 4096;
              goto LABEL_1560;
            case 76:
              unint64_t v777 = 0;
              int v776 = 2048;
              goto LABEL_1560;
            case 81:
              int v776 = 0;
              unint64_t v777 = 0x2000000000000;
              goto LABEL_1560;
            case 82:
              int v776 = 0;
              unint64_t v777 = 0x800000000000;
              goto LABEL_1560;
            case 83:
              int v776 = 0;
              unint64_t v777 = 0x40000000000;
              goto LABEL_1560;
            case 88:
              unint64_t v777 = 0;
              int v776 = 0x4000;
              goto LABEL_1560;
            case 90:
              int v776 = 0;
              unint64_t v777 = 0x100000000000000;
              goto LABEL_1560;
            case 91:
              int v776 = 0;
              unint64_t v777 = 0x1000000000000;
              goto LABEL_1560;
            case 92:
              unint64_t v777 = 0;
              int v776 = 0x10000;
              goto LABEL_1560;
            case 93:
              unint64_t v777 = 0;
              int v776 = 0x8000;
              goto LABEL_1560;
            case 95:
              int v776 = 0;
              unint64_t v777 = 0x4000000000000;
              goto LABEL_1560;
            case 99:
              int v776 = 0;
              unint64_t v777 = 0x8000000000;
              goto LABEL_1560;
            case 103:
              unint64_t v777 = 0;
              int v776 = 32;
              goto LABEL_1560;
            case 119:
              int v776 = 0;
              unint64_t v777 = 0x4000000000000000;
              goto LABEL_1560;
            case 122:
              unint64_t v777 = 0;
              int v776 = 1024;
              goto LABEL_1560;
            case 123:
              int v776 = 0;
              unint64_t v777 = 0x200000000000;
              goto LABEL_1560;
            case 124:
              unint64_t v777 = 0;
              int v776 = 0x2000;
              goto LABEL_1560;
            case 125:
              int v776 = 0;
              unint64_t v777 = 0x10000000000;
              goto LABEL_1560;
            case 129:
              int v776 = 0;
              unint64_t v777 = 0x200000000000000;
              goto LABEL_1560;
            case 130:
              unint64_t v777 = 0;
              int v776 = 256;
              goto LABEL_1560;
            case 131:
              unint64_t v777 = 0;
              int v776 = 128;
              goto LABEL_1560;
            case 132:
              unint64_t v777 = 0;
              int v776 = 16;
              goto LABEL_1560;
            case 137:
              int v776 = 0;
              unint64_t v777 = 0x10000000000000;
LABEL_1560:
              uint64_t v778 = *(void *)(a1 + 732);
              *(void *)(a1 + 724) = *(void *)(a1 + 724);
              *(void *)(a1 + 732) = v778 | v777;
              int v779 = *(unsigned __int16 *)(a1 + 740) | (*(unsigned __int8 *)(a1 + 742) << 16) | v776;
              *(_WORD *)(a1 + 740) |= v776;
              *(unsigned char *)(a1 + 742) = BYTE2(v779);
              break;
            default:
              int v776 = 0;
              unint64_t v777 = 0x80000000000;
              switch(v775)
              {
                case 0:
                  goto LABEL_1561;
                case 1:
                  goto LABEL_1560;
                case 2:
                  int v776 = 0;
                  unint64_t v777 = 0x100000000000;
                  goto LABEL_1560;
                case 3:
                  int v776 = 0;
                  unint64_t v777 = 0x20000000000;
                  goto LABEL_1560;
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                  continue;
                case 9:
                  int v776 = 0;
                  unint64_t v777 = 0x8000000000000;
                  goto LABEL_1560;
                default:
                  if (v775 != 37) {
                    continue;
                  }
                  int v776 = 0;
                  unint64_t v777 = 0x400000000000;
                  goto LABEL_1560;
              }
          }
        }
      }
LABEL_1561:
      BOOL v773 = v43[*v65] == 0;
      if ((v62 & 1) == 0) {
        return v773;
      }
LABEL_1562:
      v780 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;

      return v773;
    }
    unint64_t v77 = v69 >> 3;
    BOOL v78 = v62;
    if (!((v63 == 0) | v62 & 1))
    {
      unint64_t v79 = v63;
      do
      {
        int v81 = *v79++;
        int v80 = v81;
        BOOL v78 = v81 != 0;
        if (v81) {
          BOOL v82 = v80 == v77;
        }
        else {
          BOOL v82 = 1;
        }
      }
      while (!v82);
    }
    switch((int)v77)
    {
      case 1:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x80000000000) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 96;
          goto LABEL_829;
        }
        char v690 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v690 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v691 = *(void *)(a1 + 732);
        uint64_t v692 = v691 << 20 >> 40;
        uint64_t v693 = v691 << 20 >> 63;
        goto LABEL_1471;
      case 2:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x100000000000) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 104;
          goto LABEL_829;
        }
        char v694 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v694 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v695 = *(void *)(a1 + 732);
        uint64_t v692 = v695 << 19 >> 40;
        uint64_t v693 = v695 << 19 >> 63;
        goto LABEL_1471;
      case 3:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x20000000000) != 0)
        {
          char v696 = PBReaderSkipValueWithTag();
          char v40 = v785;
          if ((v696 & 1) == 0) {
            goto LABEL_1565;
          }
          uint64_t v697 = *(void *)(a1 + 732);
          uint64_t v692 = v697 << 22 >> 40;
          uint64_t v693 = v697 << 22 >> 63;
          goto LABEL_1471;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEOCarInfo);
        if (!GEOCarInfoReadAllFrom((uint64_t)v85, v43, v784 & 1)) {
          goto LABEL_1564;
        }
        PBReaderRecallMark();
        uint64_t v86 = 80;
        goto LABEL_948;
      case 4:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v87 = 0;
        unsigned int v88 = 0;
        uint64_t v89 = 0;
        *(void *)(a1 + 732) |= 0x100000000uLL;
        while (2)
        {
          uint64_t v90 = *v64;
          uint64_t v91 = *(void *)&v43[v90];
          unint64_t v92 = v91 + 1;
          if (v91 == -1 || v92 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v93 = *(unsigned char *)(*(void *)&v43[*v66] + v91);
            *(void *)&v43[v90] = v92;
            v89 |= (unint64_t)(v93 & 0x7F) << v87;
            if (v93 < 0)
            {
              v87 += 7;
              BOOL v73 = v88++ >= 9;
              if (v73)
              {
                uint64_t v89 = 0;
                goto LABEL_1022;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v89 = 0;
        }
LABEL_1022:
        BOOL v686 = v89 != 0;
        uint64_t v687 = 716;
        goto LABEL_1376;
      case 5:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v94 = 0;
        unsigned int v95 = 0;
        uint64_t v96 = 0;
        *(void *)(a1 + 732) |= 0x80000000uLL;
        while (2)
        {
          uint64_t v97 = *v64;
          uint64_t v98 = *(void *)&v43[v97];
          unint64_t v99 = v98 + 1;
          if (v98 == -1 || v99 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v100 = *(unsigned char *)(*(void *)&v43[*v66] + v98);
            *(void *)&v43[v97] = v99;
            v96 |= (unint64_t)(v100 & 0x7F) << v94;
            if (v100 < 0)
            {
              v94 += 7;
              BOOL v73 = v95++ >= 9;
              if (v73)
              {
                uint64_t v96 = 0;
                goto LABEL_1026;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v96 = 0;
        }
LABEL_1026:
        BOOL v686 = v96 != 0;
        uint64_t v687 = 715;
        goto LABEL_1376;
      case 6:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v101 = 0;
        unsigned int v102 = 0;
        uint64_t v103 = 0;
        *(void *)(a1 + 732) |= 0x800000000uLL;
        while (2)
        {
          uint64_t v104 = *v64;
          uint64_t v105 = *(void *)&v43[v104];
          unint64_t v106 = v105 + 1;
          if (v105 == -1 || v106 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v107 = *(unsigned char *)(*(void *)&v43[*v66] + v105);
            *(void *)&v43[v104] = v106;
            v103 |= (unint64_t)(v107 & 0x7F) << v101;
            if (v107 < 0)
            {
              v101 += 7;
              BOOL v73 = v102++ >= 9;
              if (v73)
              {
                uint64_t v103 = 0;
                goto LABEL_1030;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v103 = 0;
        }
LABEL_1030:
        BOOL v686 = v103 != 0;
        uint64_t v687 = 719;
        goto LABEL_1376;
      case 7:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v108 = 0;
        unsigned int v109 = 0;
        uint64_t v110 = 0;
        *(void *)(a1 + 732) |= 0x400000000uLL;
        while (2)
        {
          uint64_t v111 = *v64;
          uint64_t v112 = *(void *)&v43[v111];
          unint64_t v113 = v112 + 1;
          if (v112 == -1 || v113 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v114 = *(unsigned char *)(*(void *)&v43[*v66] + v112);
            *(void *)&v43[v111] = v113;
            v110 |= (unint64_t)(v114 & 0x7F) << v108;
            if (v114 < 0)
            {
              v108 += 7;
              BOOL v73 = v109++ >= 9;
              if (v73)
              {
                uint64_t v110 = 0;
                goto LABEL_1034;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v110 = 0;
        }
LABEL_1034:
        BOOL v686 = v110 != 0;
        uint64_t v687 = 718;
        goto LABEL_1376;
      case 8:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        *(void *)(a1 + 724) |= 0x40uLL;
        uint64_t v115 = *v64;
        unint64_t v116 = *(void *)&v43[v115];
        if (v116 <= 0xFFFFFFFFFFFFFFF7 && v116 + 8 <= *(void *)&v43[*v44])
        {
          uint64_t v117 = *(void *)(*(void *)&v43[*v66] + v116);
          *(void *)&v43[v115] = v116 + 8;
        }
        else
        {
          v43[*v65] = 1;
          uint64_t v117 = 0;
        }
        uint64_t v756 = 216;
        goto LABEL_1507;
      case 9:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x8000000000000) != 0)
        {
          char v698 = PBReaderSkipValueWithTag();
          char v40 = v785;
          if ((v698 & 1) == 0) {
            goto LABEL_1565;
          }
          uint64_t v699 = *(void *)(a1 + 732);
          uint64_t v692 = v699 << 12 >> 40;
          uint64_t v693 = v699 << 12 >> 63;
          goto LABEL_1471;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v85, v43)) {
          goto LABEL_1564;
        }
        PBReaderRecallMark();
        uint64_t v86 = 192;
        goto LABEL_948;
      case 10:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v118 = 0;
        unsigned int v119 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x8000000000uLL;
        while (2)
        {
          uint64_t v121 = *v64;
          uint64_t v122 = *(void *)&v43[v121];
          unint64_t v123 = v122 + 1;
          if (v122 == -1 || v123 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v124 = *(unsigned char *)(*(void *)&v43[*v66] + v122);
            *(void *)&v43[v121] = v123;
            v120 |= (unint64_t)(v124 & 0x7F) << v118;
            if (v124 < 0)
            {
              v118 += 7;
              BOOL v73 = v119++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1038;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1038:
        uint64_t v688 = 620;
        goto LABEL_1393;
      case 11:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v125 = 0;
        unsigned int v126 = 0;
        uint64_t v127 = 0;
        *(void *)(a1 + 732) |= 0x2000000uLL;
        while (2)
        {
          uint64_t v128 = *v64;
          uint64_t v129 = *(void *)&v43[v128];
          unint64_t v130 = v129 + 1;
          if (v129 == -1 || v130 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v131 = *(unsigned char *)(*(void *)&v43[*v66] + v129);
            *(void *)&v43[v128] = v130;
            v127 |= (unint64_t)(v131 & 0x7F) << v125;
            if (v131 < 0)
            {
              v125 += 7;
              BOOL v73 = v126++ >= 9;
              if (v73)
              {
                uint64_t v127 = 0;
                goto LABEL_1042;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v127 = 0;
        }
LABEL_1042:
        BOOL v686 = v127 != 0;
        uint64_t v687 = 709;
        goto LABEL_1376;
      case 12:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        *(void *)(a1 + 724) |= 8uLL;
        uint64_t v132 = *v64;
        unint64_t v133 = *(void *)&v43[v132];
        if (v133 <= 0xFFFFFFFFFFFFFFF7 && v133 + 8 <= *(void *)&v43[*v44])
        {
          uint64_t v117 = *(void *)(*(void *)&v43[*v66] + v133);
          *(void *)&v43[v132] = v133 + 8;
        }
        else
        {
          v43[*v65] = 1;
          uint64_t v117 = 0;
        }
        uint64_t v756 = 184;
        goto LABEL_1507;
      case 13:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v134 = 0;
        unsigned int v135 = 0;
        uint64_t v136 = 0;
        *(void *)(a1 + 732) |= 0x4000000uLL;
        while (2)
        {
          uint64_t v137 = *v64;
          uint64_t v138 = *(void *)&v43[v137];
          unint64_t v139 = v138 + 1;
          if (v138 == -1 || v139 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v140 = *(unsigned char *)(*(void *)&v43[*v66] + v138);
            *(void *)&v43[v137] = v139;
            v136 |= (unint64_t)(v140 & 0x7F) << v134;
            if (v140 < 0)
            {
              v134 += 7;
              BOOL v73 = v135++ >= 9;
              if (v73)
              {
                uint64_t v136 = 0;
                goto LABEL_1046;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v136 = 0;
        }
LABEL_1046:
        BOOL v686 = v136 != 0;
        uint64_t v687 = 710;
        goto LABEL_1376;
      case 14:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v141 = 0;
        unsigned int v142 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x40000000uLL;
        while (2)
        {
          uint64_t v143 = *v64;
          uint64_t v144 = *(void *)&v43[v143];
          unint64_t v145 = v144 + 1;
          if (v144 == -1 || v145 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v146 = *(unsigned char *)(*(void *)&v43[*v66] + v144);
            *(void *)&v43[v143] = v145;
            v120 |= (unint64_t)(v146 & 0x7F) << v141;
            if (v146 < 0)
            {
              v141 += 7;
              BOOL v73 = v142++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1050;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1050:
        uint64_t v688 = 584;
        goto LABEL_1393;
      case 15:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v147 = 0;
        unsigned int v148 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x80000000uLL;
        while (2)
        {
          uint64_t v149 = *v64;
          uint64_t v150 = *(void *)&v43[v149];
          unint64_t v151 = v150 + 1;
          if (v150 == -1 || v151 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v152 = *(unsigned char *)(*(void *)&v43[*v66] + v150);
            *(void *)&v43[v149] = v151;
            v120 |= (unint64_t)(v152 & 0x7F) << v147;
            if (v152 < 0)
            {
              v147 += 7;
              BOOL v73 = v148++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1054;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1054:
        uint64_t v688 = 588;
        goto LABEL_1393;
      case 16:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v153 = 0;
        unsigned int v154 = 0;
        uint64_t v155 = 0;
        *(void *)(a1 + 732) |= 0x10uLL;
        while (2)
        {
          uint64_t v156 = *v64;
          uint64_t v157 = *(void *)&v43[v156];
          unint64_t v158 = v157 + 1;
          if (v157 == -1 || v158 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v159 = *(unsigned char *)(*(void *)&v43[*v66] + v157);
            *(void *)&v43[v156] = v158;
            v155 |= (unint64_t)(v159 & 0x7F) << v153;
            if (v159 < 0)
            {
              v153 += 7;
              BOOL v73 = v154++ >= 9;
              if (v73)
              {
                uint64_t v155 = 0;
                goto LABEL_1058;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v155 = 0;
        }
LABEL_1058:
        BOOL v686 = v155 != 0;
        uint64_t v687 = 688;
        goto LABEL_1376;
      case 17:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v160 = 0;
        unsigned int v161 = 0;
        uint64_t v162 = 0;
        *(void *)(a1 + 732) |= 0x80uLL;
        while (2)
        {
          uint64_t v163 = *v64;
          uint64_t v164 = *(void *)&v43[v163];
          unint64_t v165 = v164 + 1;
          if (v164 == -1 || v165 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v166 = *(unsigned char *)(*(void *)&v43[*v66] + v164);
            *(void *)&v43[v163] = v165;
            v162 |= (unint64_t)(v166 & 0x7F) << v160;
            if (v166 < 0)
            {
              v160 += 7;
              BOOL v73 = v161++ >= 9;
              if (v73)
              {
                uint64_t v162 = 0;
                goto LABEL_1062;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v162 = 0;
        }
LABEL_1062:
        BOOL v686 = v162 != 0;
        uint64_t v687 = 691;
        goto LABEL_1376;
      case 18:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v167 = 0;
        unsigned int v168 = 0;
        uint64_t v169 = 0;
        *(void *)(a1 + 732) |= 0x400uLL;
        while (2)
        {
          uint64_t v170 = *v64;
          uint64_t v171 = *(void *)&v43[v170];
          unint64_t v172 = v171 + 1;
          if (v171 == -1 || v172 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v173 = *(unsigned char *)(*(void *)&v43[*v66] + v171);
            *(void *)&v43[v170] = v172;
            v169 |= (unint64_t)(v173 & 0x7F) << v167;
            if (v173 < 0)
            {
              v167 += 7;
              BOOL v73 = v168++ >= 9;
              if (v73)
              {
                uint64_t v169 = 0;
                goto LABEL_1066;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v169 = 0;
        }
LABEL_1066:
        BOOL v686 = v169 != 0;
        uint64_t v687 = 694;
        goto LABEL_1376;
      case 19:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v174 = 0;
        unsigned int v175 = 0;
        uint64_t v176 = 0;
        *(void *)(a1 + 732) |= 0x800uLL;
        while (2)
        {
          uint64_t v177 = *v64;
          uint64_t v178 = *(void *)&v43[v177];
          unint64_t v179 = v178 + 1;
          if (v178 == -1 || v179 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v180 = *(unsigned char *)(*(void *)&v43[*v66] + v178);
            *(void *)&v43[v177] = v179;
            v176 |= (unint64_t)(v180 & 0x7F) << v174;
            if (v180 < 0)
            {
              v174 += 7;
              BOOL v73 = v175++ >= 9;
              if (v73)
              {
                uint64_t v176 = 0;
                goto LABEL_1070;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v176 = 0;
        }
LABEL_1070:
        BOOL v686 = v176 != 0;
        uint64_t v687 = 695;
        goto LABEL_1376;
      case 20:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v181 = 0;
        unsigned int v182 = 0;
        uint64_t v183 = 0;
        *(void *)(a1 + 732) |= 0x2000uLL;
        while (2)
        {
          uint64_t v184 = *v64;
          uint64_t v185 = *(void *)&v43[v184];
          unint64_t v186 = v185 + 1;
          if (v185 == -1 || v186 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v187 = *(unsigned char *)(*(void *)&v43[*v66] + v185);
            *(void *)&v43[v184] = v186;
            v183 |= (unint64_t)(v187 & 0x7F) << v181;
            if (v187 < 0)
            {
              v181 += 7;
              BOOL v73 = v182++ >= 9;
              if (v73)
              {
                uint64_t v183 = 0;
                goto LABEL_1074;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v183 = 0;
        }
LABEL_1074:
        BOOL v686 = v183 != 0;
        uint64_t v687 = 697;
        goto LABEL_1376;
      case 21:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v188 = 0;
        unsigned int v189 = 0;
        uint64_t v190 = 0;
        *(void *)(a1 + 732) |= 0x8000uLL;
        while (2)
        {
          uint64_t v191 = *v64;
          uint64_t v192 = *(void *)&v43[v191];
          unint64_t v193 = v192 + 1;
          if (v192 == -1 || v193 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v194 = *(unsigned char *)(*(void *)&v43[*v66] + v192);
            *(void *)&v43[v191] = v193;
            v190 |= (unint64_t)(v194 & 0x7F) << v188;
            if (v194 < 0)
            {
              v188 += 7;
              BOOL v73 = v189++ >= 9;
              if (v73)
              {
                uint64_t v190 = 0;
                goto LABEL_1078;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v190 = 0;
        }
LABEL_1078:
        BOOL v686 = v190 != 0;
        uint64_t v687 = 699;
        goto LABEL_1376;
      case 22:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v195 = 0;
        unsigned int v196 = 0;
        uint64_t v197 = 0;
        *(void *)(a1 + 732) |= 0x10000uLL;
        while (2)
        {
          uint64_t v198 = *v64;
          uint64_t v199 = *(void *)&v43[v198];
          unint64_t v200 = v199 + 1;
          if (v199 == -1 || v200 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v201 = *(unsigned char *)(*(void *)&v43[*v66] + v199);
            *(void *)&v43[v198] = v200;
            v197 |= (unint64_t)(v201 & 0x7F) << v195;
            if (v201 < 0)
            {
              v195 += 7;
              BOOL v73 = v196++ >= 9;
              if (v73)
              {
                uint64_t v197 = 0;
                goto LABEL_1082;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v197 = 0;
        }
LABEL_1082:
        BOOL v686 = v197 != 0;
        uint64_t v687 = 700;
        goto LABEL_1376;
      case 23:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v202 = 0;
        unsigned int v203 = 0;
        uint64_t v204 = 0;
        *(void *)(a1 + 732) |= 0x20000uLL;
        while (2)
        {
          uint64_t v205 = *v64;
          uint64_t v206 = *(void *)&v43[v205];
          unint64_t v207 = v206 + 1;
          if (v206 == -1 || v207 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v208 = *(unsigned char *)(*(void *)&v43[*v66] + v206);
            *(void *)&v43[v205] = v207;
            v204 |= (unint64_t)(v208 & 0x7F) << v202;
            if (v208 < 0)
            {
              v202 += 7;
              BOOL v73 = v203++ >= 9;
              if (v73)
              {
                uint64_t v204 = 0;
                goto LABEL_1086;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v204 = 0;
        }
LABEL_1086:
        BOOL v686 = v204 != 0;
        uint64_t v687 = 701;
        goto LABEL_1376;
      case 24:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v209 = 0;
        unsigned int v210 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x400000000uLL;
        while (2)
        {
          uint64_t v211 = *v64;
          uint64_t v212 = *(void *)&v43[v211];
          unint64_t v213 = v212 + 1;
          if (v212 == -1 || v213 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v214 = *(unsigned char *)(*(void *)&v43[*v66] + v212);
            *(void *)&v43[v211] = v213;
            v120 |= (unint64_t)(v214 & 0x7F) << v209;
            if (v214 < 0)
            {
              v209 += 7;
              BOOL v73 = v210++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1090;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1090:
        uint64_t v688 = 600;
        goto LABEL_1393;
      case 25:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v215 = 0;
        unsigned int v216 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x800000000uLL;
        while (2)
        {
          uint64_t v217 = *v64;
          uint64_t v218 = *(void *)&v43[v217];
          unint64_t v219 = v218 + 1;
          if (v218 == -1 || v219 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v220 = *(unsigned char *)(*(void *)&v43[*v66] + v218);
            *(void *)&v43[v217] = v219;
            v120 |= (unint64_t)(v220 & 0x7F) << v215;
            if (v220 < 0)
            {
              v215 += 7;
              BOOL v73 = v216++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1094;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1094:
        uint64_t v688 = 604;
        goto LABEL_1393;
      case 26:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v221 = 0;
        unsigned int v222 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x2000000000uLL;
        while (2)
        {
          uint64_t v223 = *v64;
          uint64_t v224 = *(void *)&v43[v223];
          unint64_t v225 = v224 + 1;
          if (v224 == -1 || v225 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v226 = *(unsigned char *)(*(void *)&v43[*v66] + v224);
            *(void *)&v43[v223] = v225;
            v120 |= (unint64_t)(v226 & 0x7F) << v221;
            if (v226 < 0)
            {
              v221 += 7;
              BOOL v73 = v222++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1098;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1098:
        uint64_t v688 = 612;
        goto LABEL_1393;
      case 27:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v227 = 0;
        unsigned int v228 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x200000000uLL;
        while (2)
        {
          uint64_t v229 = *v64;
          uint64_t v230 = *(void *)&v43[v229];
          unint64_t v231 = v230 + 1;
          if (v230 == -1 || v231 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v232 = *(unsigned char *)(*(void *)&v43[*v66] + v230);
            *(void *)&v43[v229] = v231;
            v120 |= (unint64_t)(v232 & 0x7F) << v227;
            if (v232 < 0)
            {
              v227 += 7;
              BOOL v73 = v228++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1102;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1102:
        uint64_t v688 = 596;
        goto LABEL_1393;
      case 28:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v233 = 0;
        unsigned int v234 = 0;
        uint64_t v235 = 0;
        *(void *)(a1 + 732) |= 0x200000uLL;
        while (2)
        {
          uint64_t v236 = *v64;
          uint64_t v237 = *(void *)&v43[v236];
          unint64_t v238 = v237 + 1;
          if (v237 == -1 || v238 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v239 = *(unsigned char *)(*(void *)&v43[*v66] + v237);
            *(void *)&v43[v236] = v238;
            v235 |= (unint64_t)(v239 & 0x7F) << v233;
            if (v239 < 0)
            {
              v233 += 7;
              BOOL v73 = v234++ >= 9;
              if (v73)
              {
                uint64_t v235 = 0;
                goto LABEL_1106;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v235 = 0;
        }
LABEL_1106:
        BOOL v686 = v235 != 0;
        uint64_t v687 = 705;
        goto LABEL_1376;
      case 29:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v240 = 0;
        unsigned int v241 = 0;
        uint64_t v242 = 0;
        *(void *)(a1 + 732) |= 0x400000uLL;
        while (2)
        {
          uint64_t v243 = *v64;
          uint64_t v244 = *(void *)&v43[v243];
          unint64_t v245 = v244 + 1;
          if (v244 == -1 || v245 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v246 = *(unsigned char *)(*(void *)&v43[*v66] + v244);
            *(void *)&v43[v243] = v245;
            v242 |= (unint64_t)(v246 & 0x7F) << v240;
            if (v246 < 0)
            {
              v240 += 7;
              BOOL v73 = v241++ >= 9;
              if (v73)
              {
                uint64_t v242 = 0;
                goto LABEL_1110;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v242 = 0;
        }
LABEL_1110:
        BOOL v686 = v242 != 0;
        uint64_t v687 = 706;
        goto LABEL_1376;
      case 30:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        *(void *)(a1 + 724) |= 4uLL;
        uint64_t v247 = *v64;
        unint64_t v248 = *(void *)&v43[v247];
        if (v248 <= 0xFFFFFFFFFFFFFFF7 && v248 + 8 <= *(void *)&v43[*v44])
        {
          uint64_t v117 = *(void *)(*(void *)&v43[*v66] + v248);
          *(void *)&v43[v247] = v248 + 8;
        }
        else
        {
          v43[*v65] = 1;
          uint64_t v117 = 0;
        }
        uint64_t v756 = 144;
        goto LABEL_1507;
      case 31:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        *(void *)(a1 + 724) |= 2uLL;
        uint64_t v249 = *v64;
        unint64_t v250 = *(void *)&v43[v249];
        if (v250 <= 0xFFFFFFFFFFFFFFF7 && v250 + 8 <= *(void *)&v43[*v44])
        {
          uint64_t v117 = *(void *)(*(void *)&v43[*v66] + v250);
          *(void *)&v43[v249] = v250 + 8;
        }
        else
        {
          v43[*v65] = 1;
          uint64_t v117 = 0;
        }
        uint64_t v756 = 136;
        goto LABEL_1507;
      case 32:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v251 = 0;
        unsigned int v252 = 0;
        uint64_t v253 = 0;
        *(void *)(a1 + 724) |= 0x400000000000000uLL;
        while (2)
        {
          uint64_t v254 = *v64;
          uint64_t v255 = *(void *)&v43[v254];
          unint64_t v256 = v255 + 1;
          if (v255 == -1 || v256 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v257 = *(unsigned char *)(*(void *)&v43[*v66] + v255);
            *(void *)&v43[v254] = v256;
            v253 |= (unint64_t)(v257 & 0x7F) << v251;
            if (v257 < 0)
            {
              v251 += 7;
              BOOL v73 = v252++ >= 9;
              if (v73)
              {
                uint64_t v253 = 0;
                goto LABEL_1114;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v253 = 0;
        }
LABEL_1114:
        BOOL v686 = v253 != 0;
        uint64_t v687 = 678;
        goto LABEL_1376;
      case 33:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v258 = 0;
        unsigned int v259 = 0;
        uint64_t v260 = 0;
        *(void *)(a1 + 724) |= 0x2000000000000000uLL;
        while (2)
        {
          uint64_t v261 = *v64;
          uint64_t v262 = *(void *)&v43[v261];
          unint64_t v263 = v262 + 1;
          if (v262 == -1 || v263 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v264 = *(unsigned char *)(*(void *)&v43[*v66] + v262);
            *(void *)&v43[v261] = v263;
            v260 |= (unint64_t)(v264 & 0x7F) << v258;
            if (v264 < 0)
            {
              v258 += 7;
              BOOL v73 = v259++ >= 9;
              if (v73)
              {
                uint64_t v260 = 0;
                goto LABEL_1118;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v260 = 0;
        }
LABEL_1118:
        BOOL v686 = v260 != 0;
        uint64_t v687 = 681;
        goto LABEL_1376;
      case 34:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v265 = 0;
        unsigned int v266 = 0;
        uint64_t v267 = 0;
        *(void *)(a1 + 724) |= 0x200000000000000uLL;
        while (2)
        {
          uint64_t v268 = *v64;
          uint64_t v269 = *(void *)&v43[v268];
          unint64_t v270 = v269 + 1;
          if (v269 == -1 || v270 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v271 = *(unsigned char *)(*(void *)&v43[*v66] + v269);
            *(void *)&v43[v268] = v270;
            v267 |= (unint64_t)(v271 & 0x7F) << v265;
            if (v271 < 0)
            {
              v265 += 7;
              BOOL v73 = v266++ >= 9;
              if (v73)
              {
                uint64_t v267 = 0;
                goto LABEL_1122;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v267 = 0;
        }
LABEL_1122:
        BOOL v686 = v267 != 0;
        uint64_t v687 = 677;
        goto LABEL_1376;
      case 35:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v272 = 0;
        unsigned int v273 = 0;
        uint64_t v274 = 0;
        *(void *)(a1 + 724) |= 0x1000000000000000uLL;
        while (2)
        {
          uint64_t v275 = *v64;
          uint64_t v276 = *(void *)&v43[v275];
          unint64_t v277 = v276 + 1;
          if (v276 == -1 || v277 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v278 = *(unsigned char *)(*(void *)&v43[*v66] + v276);
            *(void *)&v43[v275] = v277;
            v274 |= (unint64_t)(v278 & 0x7F) << v272;
            if (v278 < 0)
            {
              v272 += 7;
              BOOL v73 = v273++ >= 9;
              if (v73)
              {
                uint64_t v274 = 0;
                goto LABEL_1126;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v274 = 0;
        }
LABEL_1126:
        BOOL v686 = v274 != 0;
        uint64_t v687 = 680;
        goto LABEL_1376;
      case 36:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v279 = 0;
        unsigned int v280 = 0;
        uint64_t v281 = 0;
        *(void *)(a1 + 724) |= 0x800000000000000uLL;
        while (2)
        {
          uint64_t v282 = *v64;
          uint64_t v283 = *(void *)&v43[v282];
          unint64_t v284 = v283 + 1;
          if (v283 == -1 || v284 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v285 = *(unsigned char *)(*(void *)&v43[*v66] + v283);
            *(void *)&v43[v282] = v284;
            v281 |= (unint64_t)(v285 & 0x7F) << v279;
            if (v285 < 0)
            {
              v279 += 7;
              BOOL v73 = v280++ >= 9;
              if (v73)
              {
                uint64_t v281 = 0;
                goto LABEL_1130;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v281 = 0;
        }
LABEL_1130:
        BOOL v686 = v281 != 0;
        uint64_t v687 = 679;
        goto LABEL_1376;
      case 37:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x400000000000) != 0)
        {
          char v700 = PBReaderSkipValueWithTag();
          char v40 = v785;
          if ((v700 & 1) == 0) {
            goto LABEL_1565;
          }
          uint64_t v701 = *(void *)(a1 + 732);
          uint64_t v692 = v701 << 17 >> 40;
          uint64_t v693 = v701 << 17 >> 63;
          goto LABEL_1471;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v85, v43, v784 & 1)) {
          goto LABEL_1564;
        }
        PBReaderRecallMark();
        uint64_t v86 = 120;
        goto LABEL_948;
      case 38:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v286 = 0;
        unsigned int v287 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x2000uLL;
        while (2)
        {
          uint64_t v288 = *v64;
          uint64_t v289 = *(void *)&v43[v288];
          unint64_t v290 = v289 + 1;
          if (v289 == -1 || v290 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v291 = *(unsigned char *)(*(void *)&v43[*v66] + v289);
            *(void *)&v43[v288] = v290;
            v120 |= (unint64_t)(v291 & 0x7F) << v286;
            if (v291 < 0)
            {
              v286 += 7;
              BOOL v73 = v287++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1134;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1134:
        uint64_t v688 = 516;
        goto LABEL_1393;
      case 39:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        *(void *)(a1 + 724) |= 1uLL;
        uint64_t v292 = *v64;
        unint64_t v293 = *(void *)&v43[v292];
        if (v293 <= 0xFFFFFFFFFFFFFFF7 && v293 + 8 <= *(void *)&v43[*v44])
        {
          uint64_t v117 = *(void *)(*(void *)&v43[*v66] + v293);
          *(void *)&v43[v292] = v293 + 8;
        }
        else
        {
          v43[*v65] = 1;
          uint64_t v117 = 0;
        }
        uint64_t v756 = 128;
        goto LABEL_1507;
      case 40:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v294 = 0;
        unsigned int v295 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x4000uLL;
        while (2)
        {
          uint64_t v296 = *v64;
          uint64_t v297 = *(void *)&v43[v296];
          unint64_t v298 = v297 + 1;
          if (v297 == -1 || v298 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v299 = *(unsigned char *)(*(void *)&v43[*v66] + v297);
            *(void *)&v43[v296] = v298;
            v120 |= (unint64_t)(v299 & 0x7F) << v294;
            if (v299 < 0)
            {
              v294 += 7;
              BOOL v73 = v295++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1138;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1138:
        uint64_t v688 = 520;
        goto LABEL_1393;
      case 41:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v300 = 0;
        unsigned int v301 = 0;
        uint64_t v302 = 0;
        *(void *)(a1 + 724) |= 0x100000000000000uLL;
        while (2)
        {
          uint64_t v303 = *v64;
          uint64_t v304 = *(void *)&v43[v303];
          unint64_t v305 = v304 + 1;
          if (v304 == -1 || v305 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v306 = *(unsigned char *)(*(void *)&v43[*v66] + v304);
            *(void *)&v43[v303] = v305;
            v302 |= (unint64_t)(v306 & 0x7F) << v300;
            if (v306 < 0)
            {
              v300 += 7;
              BOOL v73 = v301++ >= 9;
              if (v73)
              {
                uint64_t v302 = 0;
                goto LABEL_1142;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v302 = 0;
        }
LABEL_1142:
        BOOL v686 = v302 != 0;
        uint64_t v687 = 676;
        goto LABEL_1376;
      case 42:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v307 = 0;
        unsigned int v308 = 0;
        uint64_t v309 = 0;
        *(void *)(a1 + 724) |= 0x10000000000000uLL;
        while (2)
        {
          uint64_t v310 = *v64;
          uint64_t v311 = *(void *)&v43[v310];
          unint64_t v312 = v311 + 1;
          if (v311 == -1 || v312 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v313 = *(unsigned char *)(*(void *)&v43[*v66] + v311);
            *(void *)&v43[v310] = v312;
            v309 |= (unint64_t)(v313 & 0x7F) << v307;
            if (v313 < 0)
            {
              v307 += 7;
              BOOL v73 = v308++ >= 9;
              if (v73)
              {
                uint64_t v309 = 0;
                goto LABEL_1146;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v309 = 0;
        }
LABEL_1146:
        BOOL v686 = v309 != 0;
        uint64_t v687 = 672;
        goto LABEL_1376;
      case 43:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v314 = 0;
        unsigned int v315 = 0;
        uint64_t v316 = 0;
        *(void *)(a1 + 732) |= 0x1000000000uLL;
        while (2)
        {
          uint64_t v317 = *v64;
          uint64_t v318 = *(void *)&v43[v317];
          unint64_t v319 = v318 + 1;
          if (v318 == -1 || v319 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v320 = *(unsigned char *)(*(void *)&v43[*v66] + v318);
            *(void *)&v43[v317] = v319;
            v316 |= (unint64_t)(v320 & 0x7F) << v314;
            if (v320 < 0)
            {
              v314 += 7;
              BOOL v73 = v315++ >= 9;
              if (v73)
              {
                uint64_t v316 = 0;
                goto LABEL_1150;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v316 = 0;
        }
LABEL_1150:
        BOOL v686 = v316 != 0;
        uint64_t v687 = 720;
        goto LABEL_1376;
      case 44:
        if (!v78 || (*(void *)(a1 + 732) & 0x2000000000) != 0) {
          goto LABEL_1017;
        }
        if (v75 != 2)
        {
          char v757 = 0;
          unsigned int v758 = 0;
          uint64_t v759 = 0;
          while (1)
          {
            uint64_t v760 = *v64;
            uint64_t v761 = *(void *)&v43[v760];
            unint64_t v762 = v761 + 1;
            if (v761 == -1 || v762 > *(void *)&v43[*v44]) {
              goto LABEL_1499;
            }
            char v763 = *(unsigned char *)(*(void *)&v43[*v66] + v761);
            *(void *)&v43[v760] = v762;
            v759 |= (unint64_t)(v763 & 0x7F) << v757;
            if (v763 < 0)
            {
              v757 += 7;
              BOOL v73 = v758++ >= 9;
              if (!v73) {
                continue;
              }
            }
            goto LABEL_1500;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_1565;
        }
        while (*(void *)&v43[*v64] < *(void *)&v43[*v44] && !v43[*v65])
        {
          char v321 = 0;
          unsigned int v322 = 0;
          uint64_t v323 = 0;
          while (1)
          {
            uint64_t v324 = *v64;
            uint64_t v325 = *(void *)&v43[v324];
            unint64_t v326 = v325 + 1;
            if (v325 == -1 || v326 > *(void *)&v43[*v44]) {
              break;
            }
            char v327 = *(unsigned char *)(*(void *)&v43[*v66] + v325);
            *(void *)&v43[v324] = v326;
            v323 |= (unint64_t)(v327 & 0x7F) << v321;
            if (v327 < 0)
            {
              v321 += 7;
              BOOL v73 = v322++ >= 9;
              if (!v73) {
                continue;
              }
            }
            goto LABEL_356;
          }
          v43[*v65] = 1;
LABEL_356:
          PBRepeatedInt32Add();
        }
        goto LABEL_1474;
      case 45:
        if (!v78 || (*(void *)(a1 + 732) & 0x4000000000) != 0) {
          goto LABEL_1017;
        }
        if (v75 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_1565;
          }
          while (*(void *)&v43[*v64] < *(void *)&v43[*v44] && !v43[*v65])
          {
            char v328 = 0;
            unsigned int v329 = 0;
            uint64_t v330 = 0;
            while (1)
            {
              uint64_t v331 = *v64;
              uint64_t v332 = *(void *)&v43[v331];
              unint64_t v333 = v332 + 1;
              if (v332 == -1 || v333 > *(void *)&v43[*v44]) {
                break;
              }
              char v334 = *(unsigned char *)(*(void *)&v43[*v66] + v332);
              *(void *)&v43[v331] = v333;
              v330 |= (unint64_t)(v334 & 0x7F) << v328;
              if (v334 < 0)
              {
                v328 += 7;
                BOOL v73 = v329++ >= 9;
                if (!v73) {
                  continue;
                }
              }
              goto LABEL_371;
            }
            v43[*v65] = 1;
LABEL_371:
            PBRepeatedInt32Add();
          }
LABEL_1474:
          PBReaderRecallMark();
        }
        else
        {
          char v764 = 0;
          unsigned int v765 = 0;
          uint64_t v766 = 0;
          while (1)
          {
            uint64_t v767 = *v64;
            uint64_t v768 = *(void *)&v43[v767];
            unint64_t v769 = v768 + 1;
            if (v768 == -1 || v769 > *(void *)&v43[*v44]) {
              break;
            }
            char v770 = *(unsigned char *)(*(void *)&v43[*v66] + v768);
            *(void *)&v43[v767] = v769;
            v766 |= (unint64_t)(v770 & 0x7F) << v764;
            if (v770 < 0)
            {
              v764 += 7;
              BOOL v73 = v765++ >= 9;
              if (!v73) {
                continue;
              }
            }
            goto LABEL_1500;
          }
LABEL_1499:
          v43[*v65] = 1;
LABEL_1500:
          PBRepeatedInt32Add();
        }
        goto LABEL_950;
      case 46:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(_WORD *)(a1 + 740) & 8) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 392;
          goto LABEL_829;
        }
        char v702 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v702 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v703 = (*(void *)(a1 + 732) >> 44) | (*(unsigned __int16 *)(a1 + 740) << 20);
        goto LABEL_1470;
      case 47:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v335 = 0;
        unsigned int v336 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x100000000000uLL;
        while (2)
        {
          uint64_t v337 = *v64;
          uint64_t v338 = *(void *)&v43[v337];
          unint64_t v339 = v338 + 1;
          if (v338 == -1 || v339 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v340 = *(unsigned char *)(*(void *)&v43[*v66] + v338);
            *(void *)&v43[v337] = v339;
            v120 |= (unint64_t)(v340 & 0x7F) << v335;
            if (v340 < 0)
            {
              v335 += 7;
              BOOL v73 = v336++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1154;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1154:
        uint64_t v688 = 640;
        goto LABEL_1393;
      case 48:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x400000000000000) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 272;
          goto LABEL_829;
        }
        char v704 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v704 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v705 = *(void *)(a1 + 732);
        uint64_t v692 = (32 * v705) >> 40;
        uint64_t v693 = (32 * v705) >> 63;
        goto LABEL_1471;
      case 49:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v341 = 0;
        unsigned int v342 = 0;
        uint64_t v343 = 0;
        *(void *)(a1 + 724) |= 0x80uLL;
        while (2)
        {
          uint64_t v344 = *v64;
          uint64_t v345 = *(void *)&v43[v344];
          unint64_t v346 = v345 + 1;
          if (v345 == -1 || v346 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v347 = *(unsigned char *)(*(void *)&v43[*v66] + v345);
            *(void *)&v43[v344] = v346;
            v343 |= (unint64_t)(v347 & 0x7F) << v341;
            if (v347 < 0)
            {
              v341 += 7;
              BOOL v73 = v342++ >= 9;
              if (v73)
              {
                uint64_t v343 = 0;
                goto LABEL_1158;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v343 = 0;
        }
LABEL_1158:
        uint64_t v689 = 280;
        goto LABEL_1187;
      case 50:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v348 = 0;
        unsigned int v349 = 0;
        uint64_t v343 = 0;
        *(void *)(a1 + 724) |= 0x100uLL;
        while (2)
        {
          uint64_t v350 = *v64;
          uint64_t v351 = *(void *)&v43[v350];
          unint64_t v352 = v351 + 1;
          if (v351 == -1 || v352 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v353 = *(unsigned char *)(*(void *)&v43[*v66] + v351);
            *(void *)&v43[v350] = v352;
            v343 |= (unint64_t)(v353 & 0x7F) << v348;
            if (v353 < 0)
            {
              v348 += 7;
              BOOL v73 = v349++ >= 9;
              if (v73)
              {
                uint64_t v343 = 0;
                goto LABEL_1162;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v343 = 0;
        }
LABEL_1162:
        uint64_t v689 = 288;
        goto LABEL_1187;
      case 51:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x800000000000000) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 296;
          goto LABEL_829;
        }
        char v706 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v706 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v707 = *(void *)(a1 + 732);
        uint64_t v692 = (16 * v707) >> 40;
        uint64_t v693 = (16 * v707) >> 63;
        goto LABEL_1471;
      case 52:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x1000000000000000) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 304;
          goto LABEL_829;
        }
        char v708 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v708 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v709 = *(void *)(a1 + 732);
        uint64_t v692 = (8 * v709) >> 40;
        uint64_t v693 = (8 * v709) >> 63;
        goto LABEL_1471;
      case 53:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v354 = 0;
        unsigned int v355 = 0;
        uint64_t v343 = 0;
        *(void *)(a1 + 724) |= 0x200uLL;
        while (2)
        {
          uint64_t v356 = *v64;
          unint64_t v357 = *(void *)&v43[v356];
          if (v357 == -1 || v357 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v358 = *(unsigned char *)(*(void *)&v43[*v66] + v357);
            *(void *)&v43[v356] = v357 + 1;
            v343 |= (unint64_t)(v358 & 0x7F) << v354;
            if (v358 < 0)
            {
              v354 += 7;
              BOOL v73 = v355++ >= 9;
              if (v73)
              {
                uint64_t v343 = 0;
                goto LABEL_1166;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v343 = 0;
        }
LABEL_1166:
        uint64_t v689 = 312;
        goto LABEL_1187;
      case 54:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x2000000000000000) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 320;
          goto LABEL_829;
        }
        char v710 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v710 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v711 = *(void *)(a1 + 732);
        uint64_t v692 = (4 * v711) >> 40;
        uint64_t v693 = (4 * v711) >> 63;
        goto LABEL_1471;
      case 55:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        *(void *)(a1 + 724) |= 0x400uLL;
        uint64_t v359 = *v64;
        unint64_t v360 = *(void *)&v43[v359];
        if (v360 <= 0xFFFFFFFFFFFFFFF7 && v360 + 8 <= *(void *)&v43[*v44])
        {
          uint64_t v117 = *(void *)(*(void *)&v43[*v66] + v360);
          *(void *)&v43[v359] = v360 + 8;
        }
        else
        {
          v43[*v65] = 1;
          uint64_t v117 = 0;
        }
        uint64_t v756 = 328;
        goto LABEL_1507;
      case 56:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v361 = 0;
        unsigned int v362 = 0;
        uint64_t v343 = 0;
        *(void *)(a1 + 724) |= 0x800uLL;
        while (2)
        {
          uint64_t v363 = *v64;
          unint64_t v364 = *(void *)&v43[v363];
          if (v364 == -1 || v364 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v365 = *(unsigned char *)(*(void *)&v43[*v66] + v364);
            *(void *)&v43[v363] = v364 + 1;
            v343 |= (unint64_t)(v365 & 0x7F) << v361;
            if (v365 < 0)
            {
              v361 += 7;
              BOOL v73 = v362++ >= 9;
              if (v73)
              {
                uint64_t v343 = 0;
                goto LABEL_1170;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v343 = 0;
        }
LABEL_1170:
        uint64_t v689 = 344;
        goto LABEL_1187;
      case 57:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v366 = 0;
        unsigned int v367 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x20000000000uLL;
        while (2)
        {
          uint64_t v368 = *v64;
          unint64_t v369 = *(void *)&v43[v368];
          if (v369 == -1 || v369 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v370 = *(unsigned char *)(*(void *)&v43[*v66] + v369);
            *(void *)&v43[v368] = v369 + 1;
            v120 |= (unint64_t)(v370 & 0x7F) << v366;
            if (v370 < 0)
            {
              v366 += 7;
              BOOL v73 = v367++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1174;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1174:
        uint64_t v688 = 628;
        goto LABEL_1393;
      case 58:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v371 = 0;
        unsigned int v372 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x40000000000uLL;
        while (2)
        {
          uint64_t v373 = *v64;
          unint64_t v374 = *(void *)&v43[v373];
          if (v374 == -1 || v374 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v375 = *(unsigned char *)(*(void *)&v43[*v66] + v374);
            *(void *)&v43[v373] = v374 + 1;
            v120 |= (unint64_t)(v375 & 0x7F) << v371;
            if (v375 < 0)
            {
              v371 += 7;
              BOOL v73 = v372++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1178;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1178:
        uint64_t v688 = 632;
        goto LABEL_1393;
      case 59:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x8000000000000000) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 352;
          goto LABEL_829;
        }
        char v712 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v712 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v713 = *(void *)(a1 + 732);
        uint64_t v692 = v713 >> 40;
        uint64_t v693 = v713 >> 63;
        goto LABEL_1471;
      case 60:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(_WORD *)(a1 + 740) & 4) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 384;
          goto LABEL_829;
        }
        char v714 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v714 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v703 = (*(void *)(a1 + 732) >> 43) | (*(unsigned __int16 *)(a1 + 740) << 21);
        goto LABEL_1470;
      case 61:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v376 = 0;
        unsigned int v377 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x80000000000uLL;
        while (2)
        {
          uint64_t v378 = *v64;
          unint64_t v379 = *(void *)&v43[v378];
          if (v379 == -1 || v379 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v380 = *(unsigned char *)(*(void *)&v43[*v66] + v379);
            *(void *)&v43[v378] = v379 + 1;
            v120 |= (unint64_t)(v380 & 0x7F) << v376;
            if (v380 < 0)
            {
              v376 += 7;
              BOOL v73 = v377++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1182;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1182:
        uint64_t v688 = 636;
        goto LABEL_1393;
      case 62:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(_WORD *)(a1 + 740) & 1) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 360;
          goto LABEL_829;
        }
        char v715 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v715 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v703 = (*(void *)(a1 + 732) >> 41) | (*(unsigned __int16 *)(a1 + 740) << 23);
        goto LABEL_1470;
      case 63:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(_WORD *)(a1 + 740) & 2) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 368;
          goto LABEL_829;
        }
        char v716 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v716 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v703 = (*(void *)(a1 + 732) >> 42) | (*(unsigned __int16 *)(a1 + 740) << 22);
        goto LABEL_1470;
      case 64:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v381 = 0;
        unsigned int v382 = 0;
        uint64_t v343 = 0;
        *(void *)(a1 + 724) |= 0x1000uLL;
        while (2)
        {
          uint64_t v383 = *v64;
          unint64_t v384 = *(void *)&v43[v383];
          if (v384 == -1 || v384 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v385 = *(unsigned char *)(*(void *)&v43[*v66] + v384);
            *(void *)&v43[v383] = v384 + 1;
            v343 |= (unint64_t)(v385 & 0x7F) << v381;
            if (v385 < 0)
            {
              v381 += 7;
              BOOL v73 = v382++ >= 9;
              if (v73)
              {
                uint64_t v343 = 0;
                goto LABEL_1186;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v343 = 0;
        }
LABEL_1186:
        uint64_t v689 = 376;
LABEL_1187:
        *(void *)(a1 + v689) = v343;
        goto LABEL_1508;
      case 65:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v386 = 0;
        unsigned int v387 = 0;
        uint64_t v388 = 0;
        *(void *)(a1 + 724) |= 0x80000000000000uLL;
        while (2)
        {
          uint64_t v389 = *v64;
          uint64_t v390 = *(void *)&v43[v389];
          unint64_t v391 = v390 + 1;
          if (v390 == -1 || v391 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v392 = *(unsigned char *)(*(void *)&v43[*v66] + v390);
            *(void *)&v43[v389] = v391;
            v388 |= (unint64_t)(v392 & 0x7F) << v386;
            if (v392 < 0)
            {
              v386 += 7;
              BOOL v73 = v387++ >= 9;
              if (v73)
              {
                uint64_t v388 = 0;
                goto LABEL_1191;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v388 = 0;
        }
LABEL_1191:
        BOOL v686 = v388 != 0;
        uint64_t v687 = 675;
        goto LABEL_1376;
      case 66:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v393 = 0;
        unsigned int v394 = 0;
        uint64_t v395 = 0;
        *(void *)(a1 + 732) |= 0x40000000uLL;
        while (2)
        {
          uint64_t v396 = *v64;
          uint64_t v397 = *(void *)&v43[v396];
          unint64_t v398 = v397 + 1;
          if (v397 == -1 || v398 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v399 = *(unsigned char *)(*(void *)&v43[*v66] + v397);
            *(void *)&v43[v396] = v398;
            v395 |= (unint64_t)(v399 & 0x7F) << v393;
            if (v399 < 0)
            {
              v393 += 7;
              BOOL v73 = v394++ >= 9;
              if (v73)
              {
                uint64_t v395 = 0;
                goto LABEL_1195;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v395 = 0;
        }
LABEL_1195:
        BOOL v686 = v395 != 0;
        uint64_t v687 = 714;
        goto LABEL_1376;
      case 67:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x40000000000000) == 0)
        {
          uint64_t v83 = PBReaderReadData();
          uint64_t v84 = 240;
          goto LABEL_829;
        }
        char v717 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v717 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v718 = *(void *)(a1 + 732);
        uint64_t v692 = v718 << 9 >> 40;
        uint64_t v693 = v718 << 9 >> 63;
        goto LABEL_1471;
      case 68:
        if (!v78 || (*(void *)(a1 + 732) & 0x20000000000000) != 0) {
          goto LABEL_1017;
        }
        PBReaderReadData();
        uint64_t v85 = (GEOCarInfo *)objc_claimAutoreleasedReturnValue();
        if (v85) {
          -[GEOAnalyticsPipelineStateData _addNoFlagsMapsServerMetadataSuggestionEntryDisplayed:](a1, v85);
        }
        goto LABEL_910;
      case 69:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x80000000000000) != 0)
        {
          char v719 = PBReaderSkipValueWithTag();
          char v40 = v785;
          if ((v719 & 1) == 0) {
            goto LABEL_1565;
          }
          uint64_t v703 = *(unsigned int *)(a1 + 736);
          goto LABEL_1470;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEOMapsServerMetadata);
        if (!GEOMapsServerMetadataReadAllFrom((uint64_t)v85, v43, v784 & 1)) {
          goto LABEL_1564;
        }
        PBReaderRecallMark();
        uint64_t v86 = 248;
        goto LABEL_948;
      case 70:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(_WORD *)(a1 + 740) & 0x200) != 0)
        {
          char v720 = PBReaderSkipValueWithTag();
          char v40 = v785;
          if ((v720 & 1) == 0) {
            goto LABEL_1565;
          }
          uint64_t v703 = (*(void *)(a1 + 732) >> 50) | (*(unsigned __int16 *)(a1 + 740) << 14);
          goto LABEL_1470;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEORouteDetails);
        if (!GEORouteDetailsReadAllFrom((uint64_t)v85, v43)) {
          goto LABEL_1564;
        }
        PBReaderRecallMark();
        uint64_t v86 = 440;
        goto LABEL_948;
      case 71:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(_WORD *)(a1 + 740) & 0x40) != 0)
        {
          char v721 = PBReaderSkipValueWithTag();
          char v40 = v785;
          if ((v721 & 1) == 0) {
            goto LABEL_1565;
          }
          uint64_t v703 = (*(void *)(a1 + 732) >> 47) | (*(unsigned __int16 *)(a1 + 740) << 17);
          goto LABEL_1470;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEOLogMsgEventPredExTrainingData);
        if (!GEOLogMsgEventPredExTrainingDataReadAllFrom((uint64_t)v85, v43, v784 & 1)) {
          goto LABEL_1564;
        }
        PBReaderRecallMark();
        uint64_t v86 = 416;
        goto LABEL_948;
      case 72:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v400 = 0;
        unsigned int v401 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x1000000000000uLL;
        while (2)
        {
          uint64_t v402 = *v64;
          unint64_t v403 = *(void *)&v43[v402];
          if (v403 == -1 || v403 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v404 = *(unsigned char *)(*(void *)&v43[*v66] + v403);
            *(void *)&v43[v402] = v403 + 1;
            v120 |= (unint64_t)(v404 & 0x7F) << v400;
            if (v404 < 0)
            {
              v400 += 7;
              BOOL v73 = v401++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1199;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1199:
        uint64_t v688 = 656;
        goto LABEL_1393;
      case 73:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v405 = 0;
        unsigned int v406 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x2000000000000uLL;
        while (2)
        {
          uint64_t v407 = *v64;
          unint64_t v408 = *(void *)&v43[v407];
          if (v408 == -1 || v408 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v409 = *(unsigned char *)(*(void *)&v43[*v66] + v408);
            *(void *)&v43[v407] = v408 + 1;
            v120 |= (unint64_t)(v409 & 0x7F) << v405;
            if (v409 < 0)
            {
              v405 += 7;
              BOOL v73 = v406++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1203;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1203:
        uint64_t v688 = 660;
        goto LABEL_1393;
      case 74:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v410 = 0;
        unsigned int v411 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x4000000000000uLL;
        while (2)
        {
          uint64_t v412 = *v64;
          unint64_t v413 = *(void *)&v43[v412];
          if (v413 == -1 || v413 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v414 = *(unsigned char *)(*(void *)&v43[*v66] + v413);
            *(void *)&v43[v412] = v413 + 1;
            v120 |= (unint64_t)(v414 & 0x7F) << v410;
            if (v414 < 0)
            {
              v410 += 7;
              BOOL v73 = v411++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1207;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1207:
        uint64_t v688 = 664;
        goto LABEL_1393;
      case 75:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(_WORD *)(a1 + 740) & 0x1000) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 464;
          goto LABEL_829;
        }
        char v722 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v722 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v703 = (*(void *)(a1 + 732) >> 53) | (*(unsigned __int16 *)(a1 + 740) << 11);
        goto LABEL_1470;
      case 76:
        if (!v78 || (*(_WORD *)(a1 + 740) & 0x800) != 0) {
          goto LABEL_1017;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEOAutoCompleteResultInfo);
        if (!GEOAutoCompleteResultInfoReadAllFrom((uint64_t)v85, v43)) {
          goto LABEL_1564;
        }
        PBReaderRecallMark();
        -[GEOAnalyticsPipelineStateData _addNoFlagsSuggestionsDisplayedResults:](a1, v85);
        goto LABEL_910;
      case 77:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v415 = 0;
        unsigned int v416 = 0;
        uint64_t v417 = 0;
        *(void *)(a1 + 724) |= 0x40000000000000uLL;
        while (2)
        {
          uint64_t v418 = *v64;
          unint64_t v419 = *(void *)&v43[v418];
          if (v419 == -1 || v419 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v420 = *(unsigned char *)(*(void *)&v43[*v66] + v419);
            *(void *)&v43[v418] = v419 + 1;
            v417 |= (unint64_t)(v420 & 0x7F) << v415;
            if (v420 < 0)
            {
              v415 += 7;
              BOOL v73 = v416++ >= 9;
              if (v73)
              {
                uint64_t v417 = 0;
                goto LABEL_1211;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v417 = 0;
        }
LABEL_1211:
        BOOL v686 = v417 != 0;
        uint64_t v687 = 674;
        goto LABEL_1376;
      case 78:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v421 = 0;
        unsigned int v422 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x200000000000uLL;
        while (2)
        {
          uint64_t v423 = *v64;
          unint64_t v424 = *(void *)&v43[v423];
          if (v424 == -1 || v424 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v425 = *(unsigned char *)(*(void *)&v43[*v66] + v424);
            *(void *)&v43[v423] = v424 + 1;
            v120 |= (unint64_t)(v425 & 0x7F) << v421;
            if (v425 < 0)
            {
              v421 += 7;
              BOOL v73 = v422++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1215;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1215:
        uint64_t v688 = 644;
        goto LABEL_1393;
      case 79:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v426 = 0;
        unsigned int v427 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x400000000000uLL;
        while (2)
        {
          uint64_t v428 = *v64;
          unint64_t v429 = *(void *)&v43[v428];
          if (v429 == -1 || v429 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v430 = *(unsigned char *)(*(void *)&v43[*v66] + v429);
            *(void *)&v43[v428] = v429 + 1;
            v120 |= (unint64_t)(v430 & 0x7F) << v426;
            if (v430 < 0)
            {
              v426 += 7;
              BOOL v73 = v427++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1219;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1219:
        uint64_t v688 = 648;
        goto LABEL_1393;
      case 80:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v431 = 0;
        unsigned int v432 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x800000000000uLL;
        while (2)
        {
          uint64_t v433 = *v64;
          unint64_t v434 = *(void *)&v43[v433];
          if (v434 == -1 || v434 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v435 = *(unsigned char *)(*(void *)&v43[*v66] + v434);
            *(void *)&v43[v433] = v434 + 1;
            v120 |= (unint64_t)(v435 & 0x7F) << v431;
            if (v435 < 0)
            {
              v431 += 7;
              BOOL v73 = v432++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1223;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1223:
        uint64_t v688 = 652;
        goto LABEL_1393;
      case 81:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x2000000000000) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 168;
          goto LABEL_829;
        }
        char v723 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v723 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v724 = *(void *)(a1 + 732);
        uint64_t v692 = v724 << 14 >> 40;
        uint64_t v693 = v724 << 14 >> 63;
        goto LABEL_1471;
      case 82:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x800000000000) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 152;
          goto LABEL_829;
        }
        char v725 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v725 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v726 = *(void *)(a1 + 732);
        uint64_t v692 = v726 << 16 >> 40;
        uint64_t v693 = v726 << 16 >> 63;
        goto LABEL_1471;
      case 83:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x40000000000) != 0)
        {
          char v727 = PBReaderSkipValueWithTag();
          char v40 = v785;
          if ((v727 & 1) == 0) {
            goto LABEL_1565;
          }
          uint64_t v728 = *(void *)(a1 + 732);
          uint64_t v692 = v728 << 21 >> 40;
          uint64_t v693 = v728 << 21 >> 63;
          goto LABEL_1471;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEOLogMsgStateCuratedCollection);
        if (!GEOLogMsgStateCuratedCollectionReadAllFrom((uint64_t)v85, v43, v784 & 1)) {
          goto LABEL_1564;
        }
        PBReaderRecallMark();
        uint64_t v86 = 88;
        goto LABEL_948;
      case 84:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v436 = 0;
        unsigned int v437 = 0;
        uint64_t v438 = 0;
        *(void *)(a1 + 732) |= 0x20uLL;
        while (2)
        {
          uint64_t v439 = *v64;
          unint64_t v440 = *(void *)&v43[v439];
          if (v440 == -1 || v440 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v441 = *(unsigned char *)(*(void *)&v43[*v66] + v440);
            *(void *)&v43[v439] = v440 + 1;
            v438 |= (unint64_t)(v441 & 0x7F) << v436;
            if (v441 < 0)
            {
              v436 += 7;
              BOOL v73 = v437++ >= 9;
              if (v73)
              {
                uint64_t v438 = 0;
                goto LABEL_1227;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v438 = 0;
        }
LABEL_1227:
        BOOL v686 = v438 != 0;
        uint64_t v687 = 689;
        goto LABEL_1376;
      case 85:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v442 = 0;
        unsigned int v443 = 0;
        uint64_t v444 = 0;
        *(void *)(a1 + 732) |= 0x40uLL;
        while (2)
        {
          uint64_t v445 = *v64;
          unint64_t v446 = *(void *)&v43[v445];
          if (v446 == -1 || v446 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v447 = *(unsigned char *)(*(void *)&v43[*v66] + v446);
            *(void *)&v43[v445] = v446 + 1;
            v444 |= (unint64_t)(v447 & 0x7F) << v442;
            if (v447 < 0)
            {
              v442 += 7;
              BOOL v73 = v443++ >= 9;
              if (v73)
              {
                uint64_t v444 = 0;
                goto LABEL_1231;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v444 = 0;
        }
LABEL_1231:
        BOOL v686 = v444 != 0;
        uint64_t v687 = 690;
        goto LABEL_1376;
      case 86:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v448 = 0;
        unsigned int v449 = 0;
        uint64_t v450 = 0;
        *(void *)(a1 + 732) |= 8uLL;
        while (2)
        {
          uint64_t v451 = *v64;
          unint64_t v452 = *(void *)&v43[v451];
          if (v452 == -1 || v452 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v453 = *(unsigned char *)(*(void *)&v43[*v66] + v452);
            *(void *)&v43[v451] = v452 + 1;
            v450 |= (unint64_t)(v453 & 0x7F) << v448;
            if (v453 < 0)
            {
              v448 += 7;
              BOOL v73 = v449++ >= 9;
              if (v73)
              {
                uint64_t v450 = 0;
                goto LABEL_1235;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v450 = 0;
        }
LABEL_1235:
        BOOL v686 = v450 != 0;
        uint64_t v687 = 687;
        goto LABEL_1376;
      case 87:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v454 = 0;
        unsigned int v455 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x20000000uLL;
        while (2)
        {
          uint64_t v456 = *v64;
          unint64_t v457 = *(void *)&v43[v456];
          if (v457 == -1 || v457 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v458 = *(unsigned char *)(*(void *)&v43[*v66] + v457);
            *(void *)&v43[v456] = v457 + 1;
            v120 |= (unint64_t)(v458 & 0x7F) << v454;
            if (v458 < 0)
            {
              v454 += 7;
              BOOL v73 = v455++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1239;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1239:
        uint64_t v688 = 580;
        goto LABEL_1393;
      case 88:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(_WORD *)(a1 + 740) & 0x4000) != 0)
        {
          char v729 = PBReaderSkipValueWithTag();
          char v40 = v785;
          if ((v729 & 1) == 0) {
            goto LABEL_1565;
          }
          uint64_t v703 = (*(void *)(a1 + 732) >> 55) | (*(unsigned __int16 *)(a1 + 740) << 9);
          goto LABEL_1470;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEOLogMsgStateUGCPhoto);
        if (!GEOLogMsgStateUGCPhotoReadAllFrom((uint64_t)v85, v43)) {
          goto LABEL_1564;
        }
        PBReaderRecallMark();
        uint64_t v86 = 480;
        goto LABEL_948;
      case 89:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v459 = 0;
        unsigned int v460 = 0;
        uint64_t v461 = 0;
        *(void *)(a1 + 732) |= 0x200uLL;
        while (2)
        {
          uint64_t v462 = *v64;
          unint64_t v463 = *(void *)&v43[v462];
          if (v463 == -1 || v463 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v464 = *(unsigned char *)(*(void *)&v43[*v66] + v463);
            *(void *)&v43[v462] = v463 + 1;
            v461 |= (unint64_t)(v464 & 0x7F) << v459;
            if (v464 < 0)
            {
              v459 += 7;
              BOOL v73 = v460++ >= 9;
              if (v73)
              {
                uint64_t v461 = 0;
                goto LABEL_1243;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v461 = 0;
        }
LABEL_1243:
        BOOL v686 = v461 != 0;
        uint64_t v687 = 693;
        goto LABEL_1376;
      case 90:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x100000000000000) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 256;
          goto LABEL_829;
        }
        char v730 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v730 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v731 = *(void *)(a1 + 732);
        uint64_t v692 = v731 << 7 >> 40;
        uint64_t v693 = v731 << 7 >> 63;
        goto LABEL_1471;
      case 91:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x1000000000000) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 160;
          goto LABEL_829;
        }
        char v732 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v732 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v733 = *(void *)(a1 + 732);
        uint64_t v692 = v733 << 15 >> 40;
        uint64_t v693 = v733 << 15 >> 63;
        goto LABEL_1471;
      case 92:
        if (!v78) {
          goto LABEL_1017;
        }
        if (((*(unsigned __int16 *)(a1 + 740) | (*(unsigned __int8 *)(a1 + 742) << 16)) & 0x10000) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 496;
          goto LABEL_829;
        }
        char v734 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v734 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v703 = (*(unsigned __int16 *)(a1 + 740) << 7) | (*(unsigned __int8 *)(a1 + 742) << 23) | (*(void *)(a1 + 732) >> 57);
        goto LABEL_1470;
      case 93:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(_WORD *)(a1 + 740) & 0x8000) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 488;
          goto LABEL_829;
        }
        char v735 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v735 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v703 = *(unsigned int *)(a1 + 739);
        goto LABEL_1470;
      case 94:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v465 = 0;
        unsigned int v466 = 0;
        uint64_t v467 = 0;
        *(void *)(a1 + 732) |= 4uLL;
        while (2)
        {
          uint64_t v468 = *v64;
          unint64_t v469 = *(void *)&v43[v468];
          if (v469 == -1 || v469 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v470 = *(unsigned char *)(*(void *)&v43[*v66] + v469);
            *(void *)&v43[v468] = v469 + 1;
            v467 |= (unint64_t)(v470 & 0x7F) << v465;
            if (v470 < 0)
            {
              v465 += 7;
              BOOL v73 = v466++ >= 9;
              if (v73)
              {
                uint64_t v467 = 0;
                goto LABEL_1247;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v467 = 0;
        }
LABEL_1247:
        BOOL v686 = v467 != 0;
        uint64_t v687 = 686;
        goto LABEL_1376;
      case 95:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x4000000000000) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 176;
          goto LABEL_829;
        }
        char v736 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v736 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v737 = *(void *)(a1 + 732);
        uint64_t v692 = v737 << 13 >> 40;
        uint64_t v693 = v737 << 13 >> 63;
        goto LABEL_1471;
      case 96:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        *(void *)(a1 + 724) |= 0x20uLL;
        uint64_t v471 = *v64;
        unint64_t v472 = *(void *)&v43[v471];
        if (v472 <= 0xFFFFFFFFFFFFFFF7 && v472 + 8 <= *(void *)&v43[*v44])
        {
          uint64_t v117 = *(void *)(*(void *)&v43[*v66] + v472);
          *(void *)&v43[v471] = v472 + 8;
        }
        else
        {
          v43[*v65] = 1;
          uint64_t v117 = 0;
        }
        uint64_t v756 = 208;
        goto LABEL_1507;
      case 97:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v473 = 0;
        unsigned int v474 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x4000000000uLL;
        while (2)
        {
          uint64_t v475 = *v64;
          uint64_t v476 = *(void *)&v43[v475];
          unint64_t v477 = v476 + 1;
          if (v476 == -1 || v477 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v478 = *(unsigned char *)(*(void *)&v43[*v66] + v476);
            *(void *)&v43[v475] = v477;
            v120 |= (unint64_t)(v478 & 0x7F) << v473;
            if (v478 < 0)
            {
              v473 += 7;
              BOOL v73 = v474++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1251;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1251:
        uint64_t v688 = 616;
        goto LABEL_1393;
      case 98:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v479 = 0;
        unsigned int v480 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x10000000uLL;
        while (2)
        {
          uint64_t v481 = *v64;
          unint64_t v482 = *(void *)&v43[v481];
          if (v482 == -1 || v482 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v483 = *(unsigned char *)(*(void *)&v43[*v66] + v482);
            *(void *)&v43[v481] = v482 + 1;
            v120 |= (unint64_t)(v483 & 0x7F) << v479;
            if (v483 < 0)
            {
              v479 += 7;
              BOOL v73 = v480++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1255;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1255:
        uint64_t v688 = 576;
        goto LABEL_1393;
      case 99:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x8000000000) != 0)
        {
          char v738 = PBReaderSkipValueWithTag();
          char v40 = v785;
          if ((v738 & 1) == 0) {
            goto LABEL_1565;
          }
          uint64_t v739 = *(void *)(a1 + 732);
          uint64_t v692 = v739 << 24 >> 40;
          uint64_t v693 = v739 << 24 >> 63;
          goto LABEL_1471;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEOLogMsgStateAccount);
        if (!GEOLogMsgStateAccountReadAllFrom((uint64_t)v85, v43)) {
          goto LABEL_1564;
        }
        PBReaderRecallMark();
        uint64_t v86 = 64;
        goto LABEL_948;
      case 100:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        *(void *)(a1 + 724) |= 0x10uLL;
        uint64_t v484 = *v64;
        unint64_t v485 = *(void *)&v43[v484];
        if (v485 <= 0xFFFFFFFFFFFFFFF7 && v485 + 8 <= *(void *)&v43[*v44])
        {
          uint64_t v117 = *(void *)(*(void *)&v43[*v66] + v485);
          *(void *)&v43[v484] = v485 + 8;
        }
        else
        {
          v43[*v65] = 1;
          uint64_t v117 = 0;
        }
        uint64_t v756 = 200;
LABEL_1507:
        *(void *)(a1 + v756) = v117;
        goto LABEL_1508;
      case 101:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v486 = 0;
        unsigned int v487 = 0;
        uint64_t v488 = 0;
        *(void *)(a1 + 732) |= 0x800000uLL;
        while (2)
        {
          uint64_t v489 = *v64;
          uint64_t v490 = *(void *)&v43[v489];
          unint64_t v491 = v490 + 1;
          if (v490 == -1 || v491 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v492 = *(unsigned char *)(*(void *)&v43[*v66] + v490);
            *(void *)&v43[v489] = v491;
            v488 |= (unint64_t)(v492 & 0x7F) << v486;
            if (v492 < 0)
            {
              v486 += 7;
              BOOL v73 = v487++ >= 9;
              if (v73)
              {
                uint64_t v488 = 0;
                goto LABEL_1259;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v488 = 0;
        }
LABEL_1259:
        BOOL v686 = v488 != 0;
        uint64_t v687 = 707;
        goto LABEL_1376;
      case 102:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v493 = 0;
        unsigned int v494 = 0;
        uint64_t v495 = 0;
        *(void *)(a1 + 732) |= 0x1000000uLL;
        while (2)
        {
          uint64_t v496 = *v64;
          uint64_t v497 = *(void *)&v43[v496];
          unint64_t v498 = v497 + 1;
          if (v497 == -1 || v498 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v499 = *(unsigned char *)(*(void *)&v43[*v66] + v497);
            *(void *)&v43[v496] = v498;
            v495 |= (unint64_t)(v499 & 0x7F) << v493;
            if (v499 < 0)
            {
              v493 += 7;
              BOOL v73 = v494++ >= 9;
              if (v73)
              {
                uint64_t v495 = 0;
                goto LABEL_1263;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v495 = 0;
        }
LABEL_1263:
        BOOL v686 = v495 != 0;
        uint64_t v687 = 708;
        goto LABEL_1376;
      case 103:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(_WORD *)(a1 + 740) & 0x20) != 0)
        {
          char v740 = PBReaderSkipValueWithTag();
          char v40 = v785;
          if ((v740 & 1) == 0) {
            goto LABEL_1565;
          }
          uint64_t v703 = (*(void *)(a1 + 732) >> 46) | (*(unsigned __int16 *)(a1 + 740) << 18);
          goto LABEL_1470;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEOLogMsgStatePlaceCard);
        if (!GEOLogMsgStatePlaceCardReadAllFrom((uint64_t)v85, v43, v784 & 1)) {
          goto LABEL_1564;
        }
        PBReaderRecallMark();
        uint64_t v86 = 408;
        goto LABEL_948;
      case 104:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v500 = 0;
        unsigned int v501 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x10000000000uLL;
        while (2)
        {
          uint64_t v502 = *v64;
          uint64_t v503 = *(void *)&v43[v502];
          unint64_t v504 = v503 + 1;
          if (v503 == -1 || v504 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v505 = *(unsigned char *)(*(void *)&v43[*v66] + v503);
            *(void *)&v43[v502] = v504;
            v120 |= (unint64_t)(v505 & 0x7F) << v500;
            if (v505 < 0)
            {
              v500 += 7;
              BOOL v73 = v501++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1267;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1267:
        uint64_t v688 = 624;
        goto LABEL_1393;
      case 105:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v506 = 0;
        unsigned int v507 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x400000uLL;
        while (2)
        {
          uint64_t v508 = *v64;
          unint64_t v509 = *(void *)&v43[v508];
          if (v509 == -1 || v509 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v510 = *(unsigned char *)(*(void *)&v43[*v66] + v509);
            *(void *)&v43[v508] = v509 + 1;
            v120 |= (unint64_t)(v510 & 0x7F) << v506;
            if (v510 < 0)
            {
              v506 += 7;
              BOOL v73 = v507++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1271;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1271:
        uint64_t v688 = 552;
        goto LABEL_1393;
      case 106:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v511 = 0;
        unsigned int v512 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x800000uLL;
        while (2)
        {
          uint64_t v513 = *v64;
          unint64_t v514 = *(void *)&v43[v513];
          if (v514 == -1 || v514 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v515 = *(unsigned char *)(*(void *)&v43[*v66] + v514);
            *(void *)&v43[v513] = v514 + 1;
            v120 |= (unint64_t)(v515 & 0x7F) << v511;
            if (v515 < 0)
            {
              v511 += 7;
              BOOL v73 = v512++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1275;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1275:
        uint64_t v688 = 556;
        goto LABEL_1393;
      case 107:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v516 = 0;
        unsigned int v517 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x2000000uLL;
        while (2)
        {
          uint64_t v518 = *v64;
          unint64_t v519 = *(void *)&v43[v518];
          if (v519 == -1 || v519 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v520 = *(unsigned char *)(*(void *)&v43[*v66] + v519);
            *(void *)&v43[v518] = v519 + 1;
            v120 |= (unint64_t)(v520 & 0x7F) << v516;
            if (v520 < 0)
            {
              v516 += 7;
              BOOL v73 = v517++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1279;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1279:
        uint64_t v688 = 564;
        goto LABEL_1393;
      case 108:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v521 = 0;
        unsigned int v522 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x1000000uLL;
        while (2)
        {
          uint64_t v523 = *v64;
          unint64_t v524 = *(void *)&v43[v523];
          if (v524 == -1 || v524 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v525 = *(unsigned char *)(*(void *)&v43[*v66] + v524);
            *(void *)&v43[v523] = v524 + 1;
            v120 |= (unint64_t)(v525 & 0x7F) << v521;
            if (v525 < 0)
            {
              v521 += 7;
              BOOL v73 = v522++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1283;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1283:
        uint64_t v688 = 560;
        goto LABEL_1393;
      case 109:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v526 = 0;
        unsigned int v527 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x8000uLL;
        while (2)
        {
          uint64_t v528 = *v64;
          unint64_t v529 = *(void *)&v43[v528];
          if (v529 == -1 || v529 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v530 = *(unsigned char *)(*(void *)&v43[*v66] + v529);
            *(void *)&v43[v528] = v529 + 1;
            v120 |= (unint64_t)(v530 & 0x7F) << v526;
            if (v530 < 0)
            {
              v526 += 7;
              BOOL v73 = v527++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1287;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1287:
        uint64_t v688 = 524;
        goto LABEL_1393;
      case 110:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v531 = 0;
        unsigned int v532 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x200000uLL;
        while (2)
        {
          uint64_t v533 = *v64;
          unint64_t v534 = *(void *)&v43[v533];
          if (v534 == -1 || v534 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v535 = *(unsigned char *)(*(void *)&v43[*v66] + v534);
            *(void *)&v43[v533] = v534 + 1;
            v120 |= (unint64_t)(v535 & 0x7F) << v531;
            if (v535 < 0)
            {
              v531 += 7;
              BOOL v73 = v532++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1291;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1291:
        uint64_t v688 = 548;
        goto LABEL_1393;
      case 111:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v536 = 0;
        unsigned int v537 = 0;
        uint64_t v538 = 0;
        *(void *)(a1 + 732) |= 0x200000000uLL;
        while (2)
        {
          uint64_t v539 = *v64;
          unint64_t v540 = *(void *)&v43[v539];
          if (v540 == -1 || v540 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v541 = *(unsigned char *)(*(void *)&v43[*v66] + v540);
            *(void *)&v43[v539] = v540 + 1;
            v538 |= (unint64_t)(v541 & 0x7F) << v536;
            if (v541 < 0)
            {
              v536 += 7;
              BOOL v73 = v537++ >= 9;
              if (v73)
              {
                uint64_t v538 = 0;
                goto LABEL_1295;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v538 = 0;
        }
LABEL_1295:
        BOOL v686 = v538 != 0;
        uint64_t v687 = 717;
        goto LABEL_1376;
      case 112:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v542 = 0;
        unsigned int v543 = 0;
        uint64_t v544 = 0;
        *(void *)(a1 + 724) |= 0x4000000000000000uLL;
        while (2)
        {
          uint64_t v545 = *v64;
          unint64_t v546 = *(void *)&v43[v545];
          if (v546 == -1 || v546 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v547 = *(unsigned char *)(*(void *)&v43[*v66] + v546);
            *(void *)&v43[v545] = v546 + 1;
            v544 |= (unint64_t)(v547 & 0x7F) << v542;
            if (v547 < 0)
            {
              v542 += 7;
              BOOL v73 = v543++ >= 9;
              if (v73)
              {
                uint64_t v544 = 0;
                goto LABEL_1299;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v544 = 0;
        }
LABEL_1299:
        BOOL v686 = v544 != 0;
        uint64_t v687 = 682;
        goto LABEL_1376;
      case 113:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v548 = 0;
        unsigned int v549 = 0;
        uint64_t v550 = 0;
        *(void *)(a1 + 732) |= 2uLL;
        while (2)
        {
          uint64_t v551 = *v64;
          unint64_t v552 = *(void *)&v43[v551];
          if (v552 == -1 || v552 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v553 = *(unsigned char *)(*(void *)&v43[*v66] + v552);
            *(void *)&v43[v551] = v552 + 1;
            v550 |= (unint64_t)(v553 & 0x7F) << v548;
            if (v553 < 0)
            {
              v548 += 7;
              BOOL v73 = v549++ >= 9;
              if (v73)
              {
                uint64_t v550 = 0;
                goto LABEL_1303;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v550 = 0;
        }
LABEL_1303:
        BOOL v686 = v550 != 0;
        uint64_t v687 = 685;
        goto LABEL_1376;
      case 114:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v554 = 0;
        unsigned int v555 = 0;
        uint64_t v556 = 0;
        *(void *)(a1 + 724) |= 0x8000000000000000;
        while (2)
        {
          uint64_t v557 = *v64;
          unint64_t v558 = *(void *)&v43[v557];
          if (v558 == -1 || v558 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v559 = *(unsigned char *)(*(void *)&v43[*v66] + v558);
            *(void *)&v43[v557] = v558 + 1;
            v556 |= (unint64_t)(v559 & 0x7F) << v554;
            if (v559 < 0)
            {
              v554 += 7;
              BOOL v73 = v555++ >= 9;
              if (v73)
              {
                uint64_t v556 = 0;
                goto LABEL_1307;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v556 = 0;
        }
LABEL_1307:
        BOOL v686 = v556 != 0;
        uint64_t v687 = 683;
        goto LABEL_1376;
      case 115:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v560 = 0;
        unsigned int v561 = 0;
        uint64_t v562 = 0;
        *(void *)(a1 + 732) |= 1uLL;
        while (2)
        {
          uint64_t v563 = *v64;
          unint64_t v564 = *(void *)&v43[v563];
          if (v564 == -1 || v564 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v565 = *(unsigned char *)(*(void *)&v43[*v66] + v564);
            *(void *)&v43[v563] = v564 + 1;
            v562 |= (unint64_t)(v565 & 0x7F) << v560;
            if (v565 < 0)
            {
              v560 += 7;
              BOOL v73 = v561++ >= 9;
              if (v73)
              {
                uint64_t v562 = 0;
                goto LABEL_1311;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v562 = 0;
        }
LABEL_1311:
        BOOL v686 = v562 != 0;
        uint64_t v687 = 684;
        goto LABEL_1376;
      case 116:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v566 = 0;
        unsigned int v567 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x10000uLL;
        while (2)
        {
          uint64_t v568 = *v64;
          unint64_t v569 = *(void *)&v43[v568];
          if (v569 == -1 || v569 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v570 = *(unsigned char *)(*(void *)&v43[*v66] + v569);
            *(void *)&v43[v568] = v569 + 1;
            v120 |= (unint64_t)(v570 & 0x7F) << v566;
            if (v570 < 0)
            {
              v566 += 7;
              BOOL v73 = v567++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1315;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1315:
        uint64_t v688 = 528;
        goto LABEL_1393;
      case 117:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v571 = 0;
        unsigned int v572 = 0;
        uint64_t v573 = 0;
        *(void *)(a1 + 732) |= 0x1000uLL;
        while (2)
        {
          uint64_t v574 = *v64;
          uint64_t v575 = *(void *)&v43[v574];
          unint64_t v576 = v575 + 1;
          if (v575 == -1 || v576 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v577 = *(unsigned char *)(*(void *)&v43[*v66] + v575);
            *(void *)&v43[v574] = v576;
            v573 |= (unint64_t)(v577 & 0x7F) << v571;
            if (v577 < 0)
            {
              v571 += 7;
              BOOL v73 = v572++ >= 9;
              if (v73)
              {
                uint64_t v573 = 0;
                goto LABEL_1319;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v573 = 0;
        }
LABEL_1319:
        BOOL v686 = v573 != 0;
        uint64_t v687 = 696;
        goto LABEL_1376;
      case 118:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v578 = 0;
        unsigned int v579 = 0;
        uint64_t v580 = 0;
        *(void *)(a1 + 732) |= 0x4000uLL;
        while (2)
        {
          uint64_t v581 = *v64;
          unint64_t v582 = *(void *)&v43[v581];
          if (v582 == -1 || v582 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v583 = *(unsigned char *)(*(void *)&v43[*v66] + v582);
            *(void *)&v43[v581] = v582 + 1;
            v580 |= (unint64_t)(v583 & 0x7F) << v578;
            if (v583 < 0)
            {
              v578 += 7;
              BOOL v73 = v579++ >= 9;
              if (v73)
              {
                uint64_t v580 = 0;
                goto LABEL_1323;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v580 = 0;
        }
LABEL_1323:
        BOOL v686 = v580 != 0;
        uint64_t v687 = 698;
        goto LABEL_1376;
      case 119:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x4000000000000000) == 0)
        {
          uint64_t v83 = PBReaderReadString();
          uint64_t v84 = 336;
LABEL_829:
          v584 = *(void **)(a1 + v84);
          *(void *)(a1 + v84) = v83;
          goto LABEL_949;
        }
        char v741 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if ((v741 & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v742 = *(void *)(a1 + 732);
        uint64_t v692 = (2 * v742) >> 40;
        uint64_t v693 = (2 * v742) >> 63;
        goto LABEL_1471;
      case 120:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v585 = 0;
        unsigned int v586 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x100000000uLL;
        while (2)
        {
          uint64_t v587 = *v64;
          unint64_t v588 = *(void *)&v43[v587];
          if (v588 == -1 || v588 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v589 = *(unsigned char *)(*(void *)&v43[*v66] + v588);
            *(void *)&v43[v587] = v588 + 1;
            v120 |= (unint64_t)(v589 & 0x7F) << v585;
            if (v589 < 0)
            {
              v585 += 7;
              BOOL v73 = v586++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1327;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1327:
        uint64_t v688 = 592;
        goto LABEL_1393;
      case 121:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v590 = 0;
        unsigned int v591 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x8000000uLL;
        while (2)
        {
          uint64_t v592 = *v64;
          unint64_t v593 = *(void *)&v43[v592];
          if (v593 == -1 || v593 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v594 = *(unsigned char *)(*(void *)&v43[*v66] + v593);
            *(void *)&v43[v592] = v593 + 1;
            v120 |= (unint64_t)(v594 & 0x7F) << v590;
            if (v594 < 0)
            {
              v590 += 7;
              BOOL v73 = v591++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1331;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1331:
        uint64_t v688 = 572;
        goto LABEL_1393;
      case 122:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(_WORD *)(a1 + 740) & 0x400) != 0)
        {
          char v743 = PBReaderSkipValueWithTag();
          char v40 = v785;
          if ((v743 & 1) == 0) {
            goto LABEL_1565;
          }
          uint64_t v703 = (*(void *)(a1 + 732) >> 51) | (*(unsigned __int16 *)(a1 + 740) << 13);
          goto LABEL_1470;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEOLogMsgStateSearchResults);
        if (!GEOLogMsgStateSearchResultsReadAllFrom((uint64_t)v85, v43, v784 & 1)) {
          goto LABEL_1564;
        }
        PBReaderRecallMark();
        uint64_t v86 = 448;
        goto LABEL_948;
      case 123:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x200000000000) != 0)
        {
          char v744 = PBReaderSkipValueWithTag();
          char v40 = v785;
          if ((v744 & 1) == 0) {
            goto LABEL_1565;
          }
          uint64_t v745 = *(void *)(a1 + 732);
          uint64_t v692 = v745 << 18 >> 40;
          uint64_t v693 = v745 << 18 >> 63;
          goto LABEL_1471;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEOLogMsgStateImpressionObject);
        if (!GEOLogMsgStateImpressionObjectReadAllFrom((uint64_t)v85, v43)) {
          goto LABEL_1564;
        }
        PBReaderRecallMark();
        uint64_t v86 = 112;
        goto LABEL_948;
      case 124:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(_WORD *)(a1 + 740) & 0x2000) != 0)
        {
          char v746 = PBReaderSkipValueWithTag();
          char v40 = v785;
          if ((v746 & 1) == 0) {
            goto LABEL_1565;
          }
          uint64_t v703 = (*(void *)(a1 + 732) >> 54) | (*(unsigned __int16 *)(a1 + 740) << 10);
          goto LABEL_1470;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEOLogMsgStateTapEvent);
        if (!GEOLogMsgStateTapEventReadAllFrom((uint64_t)v85, v43)) {
          goto LABEL_1564;
        }
        PBReaderRecallMark();
        uint64_t v86 = 472;
        goto LABEL_948;
      case 125:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x10000000000) != 0)
        {
          char v747 = PBReaderSkipValueWithTag();
          char v40 = v785;
          if ((v747 & 1) == 0) {
            goto LABEL_1565;
          }
          uint64_t v748 = *(void *)(a1 + 732);
          uint64_t v692 = v748 << 23 >> 40;
          uint64_t v693 = v748 << 23 >> 63;
          goto LABEL_1471;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEOLogMsgStateActionButtonDetails);
        if (!GEOLogMsgStateActionButtonDetailsReadAllFrom(v85, v43, v784 & 1)) {
          goto LABEL_1564;
        }
        PBReaderRecallMark();
        uint64_t v86 = 72;
        goto LABEL_948;
      case 126:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v595 = 0;
        unsigned int v596 = 0;
        uint64_t v597 = 0;
        *(void *)(a1 + 732) |= 0x80000uLL;
        while (2)
        {
          uint64_t v598 = *v64;
          uint64_t v599 = *(void *)&v43[v598];
          unint64_t v600 = v599 + 1;
          if (v599 == -1 || v600 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v601 = *(unsigned char *)(*(void *)&v43[*v66] + v599);
            *(void *)&v43[v598] = v600;
            v597 |= (unint64_t)(v601 & 0x7F) << v595;
            if (v601 < 0)
            {
              v595 += 7;
              BOOL v73 = v596++ >= 9;
              if (v73)
              {
                uint64_t v597 = 0;
                goto LABEL_1335;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v597 = 0;
        }
LABEL_1335:
        BOOL v686 = v597 != 0;
        uint64_t v687 = 703;
        goto LABEL_1376;
      case 127:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v602 = 0;
        unsigned int v603 = 0;
        uint64_t v604 = 0;
        *(void *)(a1 + 732) |= 0x40000uLL;
        while (2)
        {
          uint64_t v605 = *v64;
          uint64_t v606 = *(void *)&v43[v605];
          unint64_t v607 = v606 + 1;
          if (v606 == -1 || v607 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v608 = *(unsigned char *)(*(void *)&v43[*v66] + v606);
            *(void *)&v43[v605] = v607;
            v604 |= (unint64_t)(v608 & 0x7F) << v602;
            if (v608 < 0)
            {
              v602 += 7;
              BOOL v73 = v603++ >= 9;
              if (v73)
              {
                uint64_t v604 = 0;
                goto LABEL_1339;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v604 = 0;
        }
LABEL_1339:
        BOOL v686 = v604 != 0;
        uint64_t v687 = 702;
        goto LABEL_1376;
      case 128:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v609 = 0;
        unsigned int v610 = 0;
        uint64_t v611 = 0;
        *(void *)(a1 + 732) |= 0x100000uLL;
        while (2)
        {
          uint64_t v612 = *v64;
          uint64_t v613 = *(void *)&v43[v612];
          unint64_t v614 = v613 + 1;
          if (v613 == -1 || v614 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v615 = *(unsigned char *)(*(void *)&v43[*v66] + v613);
            *(void *)&v43[v612] = v614;
            v611 |= (unint64_t)(v615 & 0x7F) << v609;
            if (v615 < 0)
            {
              v609 += 7;
              BOOL v73 = v610++ >= 9;
              if (v73)
              {
                uint64_t v611 = 0;
                goto LABEL_1343;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v611 = 0;
        }
LABEL_1343:
        BOOL v686 = v611 != 0;
        uint64_t v687 = 704;
        goto LABEL_1376;
      case 129:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x200000000000000) != 0)
        {
          char v749 = PBReaderSkipValueWithTag();
          char v40 = v785;
          if ((v749 & 1) == 0) {
            goto LABEL_1565;
          }
          uint64_t v750 = *(void *)(a1 + 732);
          uint64_t v692 = v750 << 6 >> 40;
          uint64_t v693 = v750 << 6 >> 63;
          goto LABEL_1471;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEOLogMsgStateARPPhotoSubmission);
        if (!GEOLogMsgStateARPPhotoSubmissionReadAllFrom((uint64_t)v85, v43)) {
          goto LABEL_1564;
        }
        PBReaderRecallMark();
        uint64_t v86 = 264;
        goto LABEL_948;
      case 130:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(_WORD *)(a1 + 740) & 0x100) != 0)
        {
          char v751 = PBReaderSkipValueWithTag();
          char v40 = v785;
          if ((v751 & 1) == 0) {
            goto LABEL_1565;
          }
          uint64_t v703 = (*(void *)(a1 + 732) >> 49) | (*(unsigned __int16 *)(a1 + 740) << 15);
          goto LABEL_1470;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEOLogMsgStateARPRatingSubmission);
        if (!GEOLogMsgStateARPRatingSubmissionReadAllFrom((uint64_t)v85, v43, v784 & 1)) {
          goto LABEL_1564;
        }
        PBReaderRecallMark();
        uint64_t v86 = 432;
        goto LABEL_948;
      case 131:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(_WORD *)(a1 + 740) & 0x80) != 0)
        {
          char v752 = PBReaderSkipValueWithTag();
          char v40 = v785;
          if ((v752 & 1) == 0) {
            goto LABEL_1565;
          }
          uint64_t v703 = *(unsigned int *)(a1 + 738);
LABEL_1470:
          uint64_t v692 = v703 << 40 >> 40;
          uint64_t v693 = v703 << 40 >> 63;
          goto LABEL_1471;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEOLogMsgStateARPRatingPhotoSubmission);
        if (!GEOLogMsgStateARPRatingPhotoSubmissionReadAllFrom((uint64_t)v85, v43)) {
          goto LABEL_1564;
        }
        PBReaderRecallMark();
        uint64_t v86 = 424;
        goto LABEL_948;
      case 132:
        if (!v78 || (*(_WORD *)(a1 + 740) & 0x10) != 0) {
          goto LABEL_1017;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEORevealedPlaceCardModule);
        if (!GEORevealedPlaceCardModuleReadAllFrom((uint64_t)v85, v43, v784 & 1)) {
          goto LABEL_1564;
        }
        PBReaderRecallMark();
        -[GEOAnalyticsPipelineStateData _addNoFlagsPlaceCardRevealedPlaceCardModule:](a1, v85);
LABEL_910:

        goto LABEL_950;
      case 133:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v616 = 0;
        unsigned int v617 = 0;
        uint64_t v618 = 0;
        *(void *)(a1 + 732) |= 0x100uLL;
        while (2)
        {
          uint64_t v619 = *v64;
          uint64_t v620 = *(void *)&v43[v619];
          unint64_t v621 = v620 + 1;
          if (v620 == -1 || v621 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v622 = *(unsigned char *)(*(void *)&v43[*v66] + v620);
            *(void *)&v43[v619] = v621;
            v618 |= (unint64_t)(v622 & 0x7F) << v616;
            if (v622 < 0)
            {
              v616 += 7;
              BOOL v73 = v617++ >= 9;
              if (v73)
              {
                uint64_t v618 = 0;
                goto LABEL_1347;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v618 = 0;
        }
LABEL_1347:
        BOOL v686 = v618 != 0;
        uint64_t v687 = 692;
        goto LABEL_1376;
      case 134:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v623 = 0;
        unsigned int v624 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x4000000uLL;
        while (2)
        {
          uint64_t v625 = *v64;
          unint64_t v626 = *(void *)&v43[v625];
          if (v626 == -1 || v626 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v627 = *(unsigned char *)(*(void *)&v43[*v66] + v626);
            *(void *)&v43[v625] = v626 + 1;
            v120 |= (unint64_t)(v627 & 0x7F) << v623;
            if (v627 < 0)
            {
              v623 += 7;
              BOOL v73 = v624++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1351;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1351:
        uint64_t v688 = 568;
        goto LABEL_1393;
      case 135:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v628 = 0;
        unsigned int v629 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x1000000000uLL;
        while (2)
        {
          uint64_t v630 = *v64;
          uint64_t v631 = *(void *)&v43[v630];
          unint64_t v632 = v631 + 1;
          if (v631 == -1 || v632 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v633 = *(unsigned char *)(*(void *)&v43[*v66] + v631);
            *(void *)&v43[v630] = v632;
            v120 |= (unint64_t)(v633 & 0x7F) << v628;
            if (v633 < 0)
            {
              v628 += 7;
              BOOL v73 = v629++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1355;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1355:
        uint64_t v688 = 608;
        goto LABEL_1393;
      case 136:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v634 = 0;
        unsigned int v635 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x8000000000000uLL;
        while (2)
        {
          uint64_t v636 = *v64;
          uint64_t v637 = *(void *)&v43[v636];
          unint64_t v638 = v637 + 1;
          if (v637 == -1 || v638 > *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v639 = *(unsigned char *)(*(void *)&v43[*v66] + v637);
            *(void *)&v43[v636] = v638;
            v120 |= (unint64_t)(v639 & 0x7F) << v634;
            if (v639 < 0)
            {
              v634 += 7;
              BOOL v73 = v635++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1359;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1359:
        uint64_t v688 = 668;
        goto LABEL_1393;
      case 137:
        if (!v78) {
          goto LABEL_1017;
        }
        if ((*(void *)(a1 + 732) & 0x10000000000000) != 0)
        {
          char v754 = PBReaderSkipValueWithTag();
          char v40 = v785;
          if ((v754 & 1) == 0) {
            goto LABEL_1565;
          }
          uint64_t v755 = *(void *)(a1 + 732);
          uint64_t v692 = v755 << 11 >> 40;
          uint64_t v693 = v755 << 11 >> 63;
LABEL_1471:
          *((void *)&v753 + 1) = v693;
          *(void *)&long long v753 = v692;
          v6 += v753 >> 23;
          goto LABEL_1508;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_1565;
        }
        uint64_t v85 = objc_alloc_init(GEOLogMsgStateMapsPlaceIds);
        if (GEOLogMsgStateMapsPlaceIdsReadAllFrom(v85, v43))
        {
          PBReaderRecallMark();
          uint64_t v86 = 224;
LABEL_948:
          v584 = *(void **)(a1 + v86);
          *(void *)(a1 + v86) = v85;
LABEL_949:

          --v6;
LABEL_950:
          char v40 = v785;
LABEL_1508:
          if (!(v62 & 1 | (v6 != 0)) || *(void *)&v43[*v64] >= *(void *)&v43[*v44]) {
            goto LABEL_1510;
          }
          continue;
        }
LABEL_1564:

LABEL_1565:
        BOOL v773 = 0;
        char v782 = *(unsigned char *)(a1 + 742) | 1;
        unint64_t v783 = *(void *)(a1 + 732) | 0xFFFFFFE000000000;
        *(_WORD *)(a1 + 740) = -1;
        *(void *)(a1 + 732) = v783;
        *(unsigned char *)(a1 + 742) = v782;
        if (v62) {
          goto LABEL_1562;
        }
        return v773;
      case 139:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v641 = 0;
        unsigned int v642 = 0;
        uint64_t v643 = 0;
        *(void *)(a1 + 724) |= 0x20000000000000uLL;
        while (2)
        {
          uint64_t v644 = *v64;
          unint64_t v645 = *(void *)&v43[v644];
          if (v645 == -1 || v645 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v646 = *(unsigned char *)(*(void *)&v43[*v66] + v645);
            *(void *)&v43[v644] = v645 + 1;
            v643 |= (unint64_t)(v646 & 0x7F) << v641;
            if (v646 < 0)
            {
              v641 += 7;
              BOOL v73 = v642++ >= 9;
              if (v73)
              {
                uint64_t v643 = 0;
                goto LABEL_1363;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v643 = 0;
        }
LABEL_1363:
        BOOL v686 = v643 != 0;
        uint64_t v687 = 673;
        goto LABEL_1376;
      case 140:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v647 = 0;
        unsigned int v648 = 0;
        uint64_t v649 = 0;
        *(void *)(a1 + 732) |= 0x20000000uLL;
        while (2)
        {
          uint64_t v650 = *v64;
          unint64_t v651 = *(void *)&v43[v650];
          if (v651 == -1 || v651 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v652 = *(unsigned char *)(*(void *)&v43[*v66] + v651);
            *(void *)&v43[v650] = v651 + 1;
            v649 |= (unint64_t)(v652 & 0x7F) << v647;
            if (v652 < 0)
            {
              v647 += 7;
              BOOL v73 = v648++ >= 9;
              if (v73)
              {
                uint64_t v649 = 0;
                goto LABEL_1367;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v649 = 0;
        }
LABEL_1367:
        BOOL v686 = v649 != 0;
        uint64_t v687 = 713;
        goto LABEL_1376;
      case 141:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v653 = 0;
        unsigned int v654 = 0;
        uint64_t v655 = 0;
        *(void *)(a1 + 732) |= 0x8000000uLL;
        while (2)
        {
          uint64_t v656 = *v64;
          unint64_t v657 = *(void *)&v43[v656];
          if (v657 == -1 || v657 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v658 = *(unsigned char *)(*(void *)&v43[*v66] + v657);
            *(void *)&v43[v656] = v657 + 1;
            v655 |= (unint64_t)(v658 & 0x7F) << v653;
            if (v658 < 0)
            {
              v653 += 7;
              BOOL v73 = v654++ >= 9;
              if (v73)
              {
                uint64_t v655 = 0;
                goto LABEL_1371;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v655 = 0;
        }
LABEL_1371:
        BOOL v686 = v655 != 0;
        uint64_t v687 = 711;
        goto LABEL_1376;
      case 142:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v659 = 0;
        unsigned int v660 = 0;
        uint64_t v661 = 0;
        *(void *)(a1 + 732) |= 0x10000000uLL;
        while (2)
        {
          uint64_t v662 = *v64;
          unint64_t v663 = *(void *)&v43[v662];
          if (v663 == -1 || v663 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v664 = *(unsigned char *)(*(void *)&v43[*v66] + v663);
            *(void *)&v43[v662] = v663 + 1;
            v661 |= (unint64_t)(v664 & 0x7F) << v659;
            if (v664 < 0)
            {
              v659 += 7;
              BOOL v73 = v660++ >= 9;
              if (v73)
              {
                uint64_t v661 = 0;
                goto LABEL_1375;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          uint64_t v661 = 0;
        }
LABEL_1375:
        BOOL v686 = v661 != 0;
        uint64_t v687 = 712;
LABEL_1376:
        *(unsigned char *)(a1 + v687) = v686;
        goto LABEL_1508;
      case 144:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v665 = 0;
        unsigned int v666 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x100000uLL;
        while (2)
        {
          uint64_t v667 = *v64;
          unint64_t v668 = *(void *)&v43[v667];
          if (v668 == -1 || v668 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v669 = *(unsigned char *)(*(void *)&v43[*v66] + v668);
            *(void *)&v43[v667] = v668 + 1;
            v120 |= (unint64_t)(v669 & 0x7F) << v665;
            if (v669 < 0)
            {
              v665 += 7;
              BOOL v73 = v666++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1380;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1380:
        uint64_t v688 = 544;
        goto LABEL_1393;
      case 145:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v670 = 0;
        unsigned int v671 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x80000uLL;
        while (2)
        {
          uint64_t v672 = *v64;
          unint64_t v673 = *(void *)&v43[v672];
          if (v673 == -1 || v673 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v674 = *(unsigned char *)(*(void *)&v43[*v66] + v673);
            *(void *)&v43[v672] = v673 + 1;
            v120 |= (unint64_t)(v674 & 0x7F) << v670;
            if (v674 < 0)
            {
              v670 += 7;
              BOOL v73 = v671++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1384;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1384:
        uint64_t v688 = 540;
        goto LABEL_1393;
      case 146:
        if ((v40 & 1) == 0) {
          goto LABEL_1017;
        }
        char v675 = 0;
        unsigned int v676 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 724) |= 0x40000uLL;
        while (2)
        {
          uint64_t v677 = *v64;
          unint64_t v678 = *(void *)&v43[v677];
          if (v678 == -1 || v678 >= *(void *)&v43[*v44])
          {
            v43[*v65] = 1;
          }
          else
          {
            char v679 = *(unsigned char *)(*(void *)&v43[*v66] + v678);
            *(void *)&v43[v677] = v678 + 1;
            v120 |= (unint64_t)(v679 & 0x7F) << v675;
            if (v679 < 0)
            {
              v675 += 7;
              BOOL v73 = v676++ >= 9;
              if (v73)
              {
                LODWORD(v120) = 0;
                goto LABEL_1388;
              }
              continue;
            }
          }
          break;
        }
        if (v43[*v65]) {
          LODWORD(v120) = 0;
        }
LABEL_1388:
        uint64_t v688 = 536;
        goto LABEL_1393;
      case 147:
        if (v40)
        {
          char v680 = 0;
          unsigned int v681 = 0;
          uint64_t v120 = 0;
          *(void *)(a1 + 724) |= 0x20000uLL;
          while (1)
          {
            uint64_t v682 = *v64;
            unint64_t v683 = *(void *)&v43[v682];
            if (v683 == -1 || v683 >= *(void *)&v43[*v44]) {
              break;
            }
            char v684 = *(unsigned char *)(*(void *)&v43[*v66] + v683);
            *(void *)&v43[v682] = v683 + 1;
            v120 |= (unint64_t)(v684 & 0x7F) << v680;
            if ((v684 & 0x80) == 0) {
              goto LABEL_1390;
            }
            v680 += 7;
            BOOL v73 = v681++ >= 9;
            if (v73)
            {
              LODWORD(v120) = 0;
              goto LABEL_1392;
            }
          }
          v43[*v65] = 1;
LABEL_1390:
          if (v43[*v65]) {
            LODWORD(v120) = 0;
          }
LABEL_1392:
          uint64_t v688 = 532;
LABEL_1393:
          *(_DWORD *)(a1 + v688) = v120;
        }
        else
        {
LABEL_1017:
          char v685 = PBReaderSkipValueWithTag();
          char v40 = v785;
          if ((v685 & 1) == 0) {
            goto LABEL_1565;
          }
        }
        goto LABEL_1508;
      default:
        int v640 = PBReaderSkipValueWithTag();
        char v40 = v785;
        if (!v640) {
          goto LABEL_1565;
        }
        goto LABEL_1508;
    }
  }
}

void sub_18A086EEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A088B18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0895B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A092648(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A092AB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A092C40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A092DD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A092F64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0934C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A093EE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A094074(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A09420C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A094398(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A094528(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0946C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A094854(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0949E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0A30DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAnalyticsPipelineStateDataCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  [a1[10] readAll:1];
  [a1[24] readAll:1];
  [a1[15] readAll:1];
  [a1[51] readAll:1];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = a1[50];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v17 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v4);
  }

  [a1[31] readAll:1];
  [a1[55] readAll:1];
  [a1[52] readAll:1];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = a1[57];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * v11++), "readAll:", 1, (void)v13);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v9);
  }

  [a1[11] readAll:1];
  [a1[60] readAll:1];
  [a1[8] readAll:1];
  [a1[56] readAll:1];
  [a1[14] readAll:1];
  [a1[59] readAll:1];
  [a1[9] readAll:1];
  [a1[33] readAll:1];
  [a1[54] readAll:1];
  [a1[53] readAll:1];
  return [a1[28] readAll:1];
}

BOOL GEOAnalyticsPipelineStateDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 508))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOAnalyticsPipelineStateDataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 512));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 504) = [v8 position];
  *(_DWORD *)(a1 + 508) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOAnalyticsPipelineStateDataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOAnalyticsPipelineStateDataReadAllFrom_initialTag;
  }
  BOOL Specified = GEOAnalyticsPipelineStateDataReadSpecified(a1, (char *)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOAnalyticsPipelineStateDataCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 512));
  return Specified;
}

void sub_18A0A353C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAnalyticsPipelineStateDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOAnalyticsPipelineStateDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A0A35A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAnalyticsPipelineStateDataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          uint64_t v13 = *v4;
          int v14 = a1[v13];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v13 = *v4;
      int v14 = a1[v13];
      if (a1[v13]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_933;
          }
          goto LABEL_841;
        case 2u:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOCarInfoIsValid(a1)) {
            goto LABEL_933;
          }
          goto LABEL_840;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v20 = 0;
          while (1)
          {
            uint64_t v21 = *v2;
            uint64_t v22 = *(void *)&a1[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v24 = *(char *)(*(void *)&a1[*v5] + v22);
            *(void *)&a1[v21] = v23;
            if (v24 < 0)
            {
              BOOL v25 = v20++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v26 = 0;
          while (1)
          {
            uint64_t v27 = *v2;
            uint64_t v28 = *(void *)&a1[v27];
            unint64_t v29 = v28 + 1;
            if (v28 == -1 || v29 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v30 = *(char *)(*(void *)&a1[*v5] + v28);
            *(void *)&a1[v27] = v29;
            if (v30 < 0)
            {
              BOOL v25 = v26++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v31 = 0;
          while (1)
          {
            uint64_t v32 = *v2;
            uint64_t v33 = *(void *)&a1[v32];
            unint64_t v34 = v33 + 1;
            if (v33 == -1 || v34 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v35 = *(char *)(*(void *)&a1[*v5] + v33);
            *(void *)&a1[v32] = v34;
            if (v35 < 0)
            {
              BOOL v25 = v31++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v36 = 0;
          while (1)
          {
            uint64_t v37 = *v2;
            uint64_t v38 = *(void *)&a1[v37];
            unint64_t v39 = v38 + 1;
            if (v38 == -1 || v39 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v40 = *(char *)(*(void *)&a1[*v5] + v38);
            *(void *)&a1[v37] = v39;
            if (v40 < 0)
            {
              BOOL v25 = v36++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 8u:
        case 0xCu:
        case 0x1Eu:
        case 0x1Fu:
        case 0x27u:
        case 0x37u:
        case 0x60u:
        case 0x64u:
          if (v15 != 1) {
            goto LABEL_933;
          }
          uint64_t v17 = *v2;
          unint64_t v18 = *(void *)&a1[v17];
          if (v18 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_908;
          }
          unint64_t v19 = v18 + 8;
          if (v19 > *(void *)&a1[*v3]) {
            goto LABEL_908;
          }
          *(void *)&a1[v17] = v19;
          goto LABEL_909;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1)) {
            goto LABEL_933;
          }
          goto LABEL_840;
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v41 = 0;
          while (1)
          {
            uint64_t v42 = *v2;
            uint64_t v43 = *(void *)&a1[v42];
            unint64_t v44 = v43 + 1;
            if (v43 == -1 || v44 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v45 = *(char *)(*(void *)&a1[*v5] + v43);
            *(void *)&a1[v42] = v44;
            if (v45 < 0)
            {
              BOOL v25 = v41++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v46 = 0;
          while (1)
          {
            uint64_t v47 = *v2;
            uint64_t v48 = *(void *)&a1[v47];
            unint64_t v49 = v48 + 1;
            if (v48 == -1 || v49 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v50 = *(char *)(*(void *)&a1[*v5] + v48);
            *(void *)&a1[v47] = v49;
            if (v50 < 0)
            {
              BOOL v25 = v46++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v51 = 0;
          while (1)
          {
            uint64_t v52 = *v2;
            uint64_t v53 = *(void *)&a1[v52];
            unint64_t v54 = v53 + 1;
            if (v53 == -1 || v54 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v55 = *(char *)(*(void *)&a1[*v5] + v53);
            *(void *)&a1[v52] = v54;
            if (v55 < 0)
            {
              BOOL v25 = v51++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v56 = 0;
          while (1)
          {
            uint64_t v57 = *v2;
            uint64_t v58 = *(void *)&a1[v57];
            unint64_t v59 = v58 + 1;
            if (v58 == -1 || v59 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v60 = *(char *)(*(void *)&a1[*v5] + v58);
            *(void *)&a1[v57] = v59;
            if (v60 < 0)
            {
              BOOL v25 = v56++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v61 = 0;
          while (1)
          {
            uint64_t v62 = *v2;
            uint64_t v63 = *(void *)&a1[v62];
            unint64_t v64 = v63 + 1;
            if (v63 == -1 || v64 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v65 = *(char *)(*(void *)&a1[*v5] + v63);
            *(void *)&a1[v62] = v64;
            if (v65 < 0)
            {
              BOOL v25 = v61++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x10u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v66 = 0;
          while (1)
          {
            uint64_t v67 = *v2;
            uint64_t v68 = *(void *)&a1[v67];
            unint64_t v69 = v68 + 1;
            if (v68 == -1 || v69 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v70 = *(char *)(*(void *)&a1[*v5] + v68);
            *(void *)&a1[v67] = v69;
            if (v70 < 0)
            {
              BOOL v25 = v66++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x11u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v71 = 0;
          while (1)
          {
            uint64_t v72 = *v2;
            uint64_t v73 = *(void *)&a1[v72];
            unint64_t v74 = v73 + 1;
            if (v73 == -1 || v74 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v75 = *(char *)(*(void *)&a1[*v5] + v73);
            *(void *)&a1[v72] = v74;
            if (v75 < 0)
            {
              BOOL v25 = v71++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v76 = 0;
          while (1)
          {
            uint64_t v77 = *v2;
            uint64_t v78 = *(void *)&a1[v77];
            unint64_t v79 = v78 + 1;
            if (v78 == -1 || v79 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v80 = *(char *)(*(void *)&a1[*v5] + v78);
            *(void *)&a1[v77] = v79;
            if (v80 < 0)
            {
              BOOL v25 = v76++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x13u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v81 = 0;
          while (1)
          {
            uint64_t v82 = *v2;
            uint64_t v83 = *(void *)&a1[v82];
            unint64_t v84 = v83 + 1;
            if (v83 == -1 || v84 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v85 = *(char *)(*(void *)&a1[*v5] + v83);
            *(void *)&a1[v82] = v84;
            if (v85 < 0)
            {
              BOOL v25 = v81++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x14u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v86 = 0;
          while (1)
          {
            uint64_t v87 = *v2;
            uint64_t v88 = *(void *)&a1[v87];
            unint64_t v89 = v88 + 1;
            if (v88 == -1 || v89 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v90 = *(char *)(*(void *)&a1[*v5] + v88);
            *(void *)&a1[v87] = v89;
            if (v90 < 0)
            {
              BOOL v25 = v86++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x15u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v91 = 0;
          while (1)
          {
            uint64_t v92 = *v2;
            uint64_t v93 = *(void *)&a1[v92];
            unint64_t v94 = v93 + 1;
            if (v93 == -1 || v94 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v95 = *(char *)(*(void *)&a1[*v5] + v93);
            *(void *)&a1[v92] = v94;
            if (v95 < 0)
            {
              BOOL v25 = v91++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x16u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v96 = 0;
          while (1)
          {
            uint64_t v97 = *v2;
            uint64_t v98 = *(void *)&a1[v97];
            unint64_t v99 = v98 + 1;
            if (v98 == -1 || v99 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v100 = *(char *)(*(void *)&a1[*v5] + v98);
            *(void *)&a1[v97] = v99;
            if (v100 < 0)
            {
              BOOL v25 = v96++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x17u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v101 = 0;
          while (1)
          {
            uint64_t v102 = *v2;
            uint64_t v103 = *(void *)&a1[v102];
            unint64_t v104 = v103 + 1;
            if (v103 == -1 || v104 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v105 = *(char *)(*(void *)&a1[*v5] + v103);
            *(void *)&a1[v102] = v104;
            if (v105 < 0)
            {
              BOOL v25 = v101++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x18u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v106 = 0;
          while (1)
          {
            uint64_t v107 = *v2;
            uint64_t v108 = *(void *)&a1[v107];
            unint64_t v109 = v108 + 1;
            if (v108 == -1 || v109 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v110 = *(char *)(*(void *)&a1[*v5] + v108);
            *(void *)&a1[v107] = v109;
            if (v110 < 0)
            {
              BOOL v25 = v106++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x19u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v111 = 0;
          while (1)
          {
            uint64_t v112 = *v2;
            uint64_t v113 = *(void *)&a1[v112];
            unint64_t v114 = v113 + 1;
            if (v113 == -1 || v114 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v115 = *(char *)(*(void *)&a1[*v5] + v113);
            *(void *)&a1[v112] = v114;
            if (v115 < 0)
            {
              BOOL v25 = v111++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x1Au:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v116 = 0;
          while (1)
          {
            uint64_t v117 = *v2;
            uint64_t v118 = *(void *)&a1[v117];
            unint64_t v119 = v118 + 1;
            if (v118 == -1 || v119 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v120 = *(char *)(*(void *)&a1[*v5] + v118);
            *(void *)&a1[v117] = v119;
            if (v120 < 0)
            {
              BOOL v25 = v116++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x1Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v121 = 0;
          while (1)
          {
            uint64_t v122 = *v2;
            uint64_t v123 = *(void *)&a1[v122];
            unint64_t v124 = v123 + 1;
            if (v123 == -1 || v124 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v125 = *(char *)(*(void *)&a1[*v5] + v123);
            *(void *)&a1[v122] = v124;
            if (v125 < 0)
            {
              BOOL v25 = v121++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x1Cu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v126 = 0;
          while (1)
          {
            uint64_t v127 = *v2;
            uint64_t v128 = *(void *)&a1[v127];
            unint64_t v129 = v128 + 1;
            if (v128 == -1 || v129 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v130 = *(char *)(*(void *)&a1[*v5] + v128);
            *(void *)&a1[v127] = v129;
            if (v130 < 0)
            {
              BOOL v25 = v126++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x1Du:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v131 = 0;
          while (1)
          {
            uint64_t v132 = *v2;
            uint64_t v133 = *(void *)&a1[v132];
            unint64_t v134 = v133 + 1;
            if (v133 == -1 || v134 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v135 = *(char *)(*(void *)&a1[*v5] + v133);
            *(void *)&a1[v132] = v134;
            if (v135 < 0)
            {
              BOOL v25 = v131++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x20u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v136 = 0;
          while (1)
          {
            uint64_t v137 = *v2;
            uint64_t v138 = *(void *)&a1[v137];
            unint64_t v139 = v138 + 1;
            if (v138 == -1 || v139 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v140 = *(char *)(*(void *)&a1[*v5] + v138);
            *(void *)&a1[v137] = v139;
            if (v140 < 0)
            {
              BOOL v25 = v136++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x21u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v141 = 0;
          while (1)
          {
            uint64_t v142 = *v2;
            uint64_t v143 = *(void *)&a1[v142];
            unint64_t v144 = v143 + 1;
            if (v143 == -1 || v144 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v145 = *(char *)(*(void *)&a1[*v5] + v143);
            *(void *)&a1[v142] = v144;
            if (v145 < 0)
            {
              BOOL v25 = v141++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x22u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v146 = 0;
          while (1)
          {
            uint64_t v147 = *v2;
            uint64_t v148 = *(void *)&a1[v147];
            unint64_t v149 = v148 + 1;
            if (v148 == -1 || v149 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v150 = *(char *)(*(void *)&a1[*v5] + v148);
            *(void *)&a1[v147] = v149;
            if (v150 < 0)
            {
              BOOL v25 = v146++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x23u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v151 = 0;
          while (1)
          {
            uint64_t v152 = *v2;
            uint64_t v153 = *(void *)&a1[v152];
            unint64_t v154 = v153 + 1;
            if (v153 == -1 || v154 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v155 = *(char *)(*(void *)&a1[*v5] + v153);
            *(void *)&a1[v152] = v154;
            if (v155 < 0)
            {
              BOOL v25 = v151++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x24u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v156 = 0;
          while (1)
          {
            uint64_t v157 = *v2;
            uint64_t v158 = *(void *)&a1[v157];
            unint64_t v159 = v158 + 1;
            if (v158 == -1 || v159 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v160 = *(char *)(*(void *)&a1[*v5] + v158);
            *(void *)&a1[v157] = v159;
            if (v160 < 0)
            {
              BOOL v25 = v156++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x25u:
          if (v15 != 2 || !PBReaderPlaceMark() || (GEOLocationIsValid(a1) & 1) == 0) {
            goto LABEL_933;
          }
          goto LABEL_840;
        case 0x26u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v161 = 0;
          while (1)
          {
            uint64_t v162 = *v2;
            uint64_t v163 = *(void *)&a1[v162];
            unint64_t v164 = v163 + 1;
            if (v163 == -1 || v164 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v165 = *(char *)(*(void *)&a1[*v5] + v163);
            *(void *)&a1[v162] = v164;
            if (v165 < 0)
            {
              BOOL v25 = v161++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x28u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v166 = 0;
          while (1)
          {
            uint64_t v167 = *v2;
            uint64_t v168 = *(void *)&a1[v167];
            unint64_t v169 = v168 + 1;
            if (v168 == -1 || v169 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v170 = *(char *)(*(void *)&a1[*v5] + v168);
            *(void *)&a1[v167] = v169;
            if (v170 < 0)
            {
              BOOL v25 = v166++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x29u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v171 = 0;
          while (1)
          {
            uint64_t v172 = *v2;
            uint64_t v173 = *(void *)&a1[v172];
            unint64_t v174 = v173 + 1;
            if (v173 == -1 || v174 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v175 = *(char *)(*(void *)&a1[*v5] + v173);
            *(void *)&a1[v172] = v174;
            if (v175 < 0)
            {
              BOOL v25 = v171++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x2Au:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v176 = 0;
          while (1)
          {
            uint64_t v177 = *v2;
            uint64_t v178 = *(void *)&a1[v177];
            unint64_t v179 = v178 + 1;
            if (v178 == -1 || v179 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v180 = *(char *)(*(void *)&a1[*v5] + v178);
            *(void *)&a1[v177] = v179;
            if (v180 < 0)
            {
              BOOL v25 = v176++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x2Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v181 = 0;
          while (1)
          {
            uint64_t v182 = *v2;
            uint64_t v183 = *(void *)&a1[v182];
            unint64_t v184 = v183 + 1;
            if (v183 == -1 || v184 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v185 = *(char *)(*(void *)&a1[*v5] + v183);
            *(void *)&a1[v182] = v184;
            if (v185 < 0)
            {
              BOOL v25 = v181++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x2Cu:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_933;
            }
            while (1)
            {
              uint64_t v186 = *v2;
              uint64_t v187 = *(void *)&a1[v186];
              unint64_t v188 = v187 + 1;
              if (v187 == -1 || v188 > *(void *)&a1[*v3]) {
                goto LABEL_907;
              }
              int v189 = *(char *)(*(void *)&a1[*v5] + v187);
              *(void *)&a1[v186] = v188;
              if (v189 < 0)
              {
                unsigned int v190 = v15++;
                if (v190 <= 8) {
                  continue;
                }
              }
              goto LABEL_909;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_933;
          }
LABEL_912:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v496 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v497 = *v2;
              uint64_t v498 = *(void *)&a1[v497];
              unint64_t v499 = v498 + 1;
              if (v498 == -1 || v499 > *(void *)&a1[*v3]) {
                break;
              }
              int v500 = *(char *)(*(void *)&a1[*v5] + v498);
              *(void *)&a1[v497] = v499;
              if (v500 < 0)
              {
                BOOL v12 = v496++ >= 9;
                if (!v12) {
                  continue;
                }
              }
              goto LABEL_912;
            }
            a1[*v4] = 1;
          }
          goto LABEL_840;
        case 0x2Du:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_933:
              PBReaderRecallMark();
              return 0;
            }
LABEL_922:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v501 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v502 = *v2;
                uint64_t v503 = *(void *)&a1[v502];
                unint64_t v504 = v503 + 1;
                if (v503 == -1 || v504 > *(void *)&a1[*v3]) {
                  break;
                }
                int v505 = *(char *)(*(void *)&a1[*v5] + v503);
                *(void *)&a1[v502] = v504;
                if (v505 < 0)
                {
                  BOOL v12 = v501++ >= 9;
                  if (!v12) {
                    continue;
                  }
                }
                goto LABEL_922;
              }
              a1[*v4] = 1;
            }
LABEL_840:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_933;
            }
            while (1)
            {
              uint64_t v191 = *v2;
              uint64_t v192 = *(void *)&a1[v191];
              unint64_t v193 = v192 + 1;
              if (v192 == -1 || v193 > *(void *)&a1[*v3]) {
                break;
              }
              int v194 = *(char *)(*(void *)&a1[*v5] + v192);
              *(void *)&a1[v191] = v193;
              if (v194 < 0)
              {
                unsigned int v195 = v15++;
                if (v195 <= 8) {
                  continue;
                }
              }
              goto LABEL_909;
            }
LABEL_907:
            uint64_t v13 = *v4;
LABEL_908:
            a1[v13] = 1;
          }
LABEL_909:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_931;
          }
          break;
        case 0x2Eu:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x2Fu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v196 = 0;
          while (1)
          {
            uint64_t v197 = *v2;
            uint64_t v198 = *(void *)&a1[v197];
            unint64_t v199 = v198 + 1;
            if (v198 == -1 || v199 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v200 = *(char *)(*(void *)&a1[*v5] + v198);
            *(void *)&a1[v197] = v199;
            if (v200 < 0)
            {
              BOOL v25 = v196++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x30u:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x31u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v201 = 0;
          while (1)
          {
            uint64_t v202 = *v2;
            uint64_t v203 = *(void *)&a1[v202];
            unint64_t v204 = v203 + 1;
            if (v203 == -1 || v204 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v205 = *(char *)(*(void *)&a1[*v5] + v203);
            *(void *)&a1[v202] = v204;
            if (v205 < 0)
            {
              BOOL v25 = v201++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x32u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v206 = 0;
          while (1)
          {
            uint64_t v207 = *v2;
            uint64_t v208 = *(void *)&a1[v207];
            unint64_t v209 = v208 + 1;
            if (v208 == -1 || v209 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v210 = *(char *)(*(void *)&a1[*v5] + v208);
            *(void *)&a1[v207] = v209;
            if (v210 < 0)
            {
              BOOL v25 = v206++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x33u:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x34u:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x35u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v211 = 0;
          while (1)
          {
            uint64_t v212 = *v2;
            uint64_t v213 = *(void *)&a1[v212];
            unint64_t v214 = v213 + 1;
            if (v213 == -1 || v214 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v215 = *(char *)(*(void *)&a1[*v5] + v213);
            *(void *)&a1[v212] = v214;
            if (v215 < 0)
            {
              BOOL v25 = v211++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x36u:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x38u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v216 = 0;
          while (1)
          {
            uint64_t v217 = *v2;
            uint64_t v218 = *(void *)&a1[v217];
            unint64_t v219 = v218 + 1;
            if (v218 == -1 || v219 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v220 = *(char *)(*(void *)&a1[*v5] + v218);
            *(void *)&a1[v217] = v219;
            if (v220 < 0)
            {
              BOOL v25 = v216++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x39u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v221 = 0;
          while (1)
          {
            uint64_t v222 = *v2;
            uint64_t v223 = *(void *)&a1[v222];
            unint64_t v224 = v223 + 1;
            if (v223 == -1 || v224 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v225 = *(char *)(*(void *)&a1[*v5] + v223);
            *(void *)&a1[v222] = v224;
            if (v225 < 0)
            {
              BOOL v25 = v221++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x3Au:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v226 = 0;
          while (1)
          {
            uint64_t v227 = *v2;
            uint64_t v228 = *(void *)&a1[v227];
            unint64_t v229 = v228 + 1;
            if (v228 == -1 || v229 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v230 = *(char *)(*(void *)&a1[*v5] + v228);
            *(void *)&a1[v227] = v229;
            if (v230 < 0)
            {
              BOOL v25 = v226++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x3Bu:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x3Cu:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x3Du:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v231 = 0;
          while (1)
          {
            uint64_t v232 = *v2;
            uint64_t v233 = *(void *)&a1[v232];
            unint64_t v234 = v233 + 1;
            if (v233 == -1 || v234 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v235 = *(char *)(*(void *)&a1[*v5] + v233);
            *(void *)&a1[v232] = v234;
            if (v235 < 0)
            {
              BOOL v25 = v231++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x3Eu:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x3Fu:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x40u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v236 = 0;
          while (1)
          {
            uint64_t v237 = *v2;
            uint64_t v238 = *(void *)&a1[v237];
            unint64_t v239 = v238 + 1;
            if (v238 == -1 || v239 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v240 = *(char *)(*(void *)&a1[*v5] + v238);
            *(void *)&a1[v237] = v239;
            if (v240 < 0)
            {
              BOOL v25 = v236++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x41u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v241 = 0;
          while (1)
          {
            uint64_t v242 = *v2;
            uint64_t v243 = *(void *)&a1[v242];
            unint64_t v244 = v243 + 1;
            if (v243 == -1 || v244 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v245 = *(char *)(*(void *)&a1[*v5] + v243);
            *(void *)&a1[v242] = v244;
            if (v245 < 0)
            {
              BOOL v25 = v241++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x42u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v246 = 0;
          while (1)
          {
            uint64_t v247 = *v2;
            uint64_t v248 = *(void *)&a1[v247];
            unint64_t v249 = v248 + 1;
            if (v248 == -1 || v249 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v250 = *(char *)(*(void *)&a1[*v5] + v248);
            *(void *)&a1[v247] = v249;
            if (v250 < 0)
            {
              BOOL v25 = v246++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x43u:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x44u:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x45u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapsServerMetadataIsValid(a1)) {
            goto LABEL_933;
          }
          goto LABEL_840;
        case 0x46u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteDetailsIsValid(a1)) {
            goto LABEL_933;
          }
          goto LABEL_840;
        case 0x47u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventPredExTrainingDataIsValid(a1)) {
            goto LABEL_933;
          }
          goto LABEL_840;
        case 0x48u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v251 = 0;
          while (1)
          {
            uint64_t v252 = *v2;
            uint64_t v253 = *(void *)&a1[v252];
            unint64_t v254 = v253 + 1;
            if (v253 == -1 || v254 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v255 = *(char *)(*(void *)&a1[*v5] + v253);
            *(void *)&a1[v252] = v254;
            if (v255 < 0)
            {
              BOOL v25 = v251++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x49u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v256 = 0;
          while (1)
          {
            uint64_t v257 = *v2;
            uint64_t v258 = *(void *)&a1[v257];
            unint64_t v259 = v258 + 1;
            if (v258 == -1 || v259 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v260 = *(char *)(*(void *)&a1[*v5] + v258);
            *(void *)&a1[v257] = v259;
            if (v260 < 0)
            {
              BOOL v25 = v256++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x4Au:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v261 = 0;
          while (1)
          {
            uint64_t v262 = *v2;
            unint64_t v263 = *(void *)&a1[v262];
            if (v263 == -1 || v263 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v264 = v263 + 1;
            int v265 = *(char *)(*(void *)&a1[*v5] + v263);
            *(void *)&a1[v262] = v264;
            if (v265 < 0)
            {
              BOOL v25 = v261++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x4Bu:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x4Cu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAutoCompleteResultInfoIsValid(a1)) {
            goto LABEL_933;
          }
          goto LABEL_840;
        case 0x4Du:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v266 = 0;
          while (1)
          {
            uint64_t v267 = *v2;
            unint64_t v268 = *(void *)&a1[v267];
            if (v268 == -1 || v268 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v269 = v268 + 1;
            int v270 = *(char *)(*(void *)&a1[*v5] + v268);
            *(void *)&a1[v267] = v269;
            if (v270 < 0)
            {
              BOOL v25 = v266++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x4Eu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v271 = 0;
          while (1)
          {
            uint64_t v272 = *v2;
            unint64_t v273 = *(void *)&a1[v272];
            if (v273 == -1 || v273 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v274 = v273 + 1;
            int v275 = *(char *)(*(void *)&a1[*v5] + v273);
            *(void *)&a1[v272] = v274;
            if (v275 < 0)
            {
              BOOL v25 = v271++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x4Fu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v276 = 0;
          while (1)
          {
            uint64_t v277 = *v2;
            unint64_t v278 = *(void *)&a1[v277];
            if (v278 == -1 || v278 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v279 = v278 + 1;
            int v280 = *(char *)(*(void *)&a1[*v5] + v278);
            *(void *)&a1[v277] = v279;
            if (v280 < 0)
            {
              BOOL v25 = v276++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x50u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v281 = 0;
          while (1)
          {
            uint64_t v282 = *v2;
            unint64_t v283 = *(void *)&a1[v282];
            if (v283 == -1 || v283 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v284 = v283 + 1;
            int v285 = *(char *)(*(void *)&a1[*v5] + v283);
            *(void *)&a1[v282] = v284;
            if (v285 < 0)
            {
              BOOL v25 = v281++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x51u:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x52u:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x53u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateCuratedCollectionIsValid(a1)) {
            goto LABEL_933;
          }
          goto LABEL_840;
        case 0x54u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v286 = 0;
          while (1)
          {
            uint64_t v287 = *v2;
            unint64_t v288 = *(void *)&a1[v287];
            if (v288 == -1 || v288 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v289 = v288 + 1;
            int v290 = *(char *)(*(void *)&a1[*v5] + v288);
            *(void *)&a1[v287] = v289;
            if (v290 < 0)
            {
              BOOL v25 = v286++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x55u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v291 = 0;
          while (1)
          {
            uint64_t v292 = *v2;
            unint64_t v293 = *(void *)&a1[v292];
            if (v293 == -1 || v293 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v294 = v293 + 1;
            int v295 = *(char *)(*(void *)&a1[*v5] + v293);
            *(void *)&a1[v292] = v294;
            if (v295 < 0)
            {
              BOOL v25 = v291++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x56u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v296 = 0;
          while (1)
          {
            uint64_t v297 = *v2;
            unint64_t v298 = *(void *)&a1[v297];
            if (v298 == -1 || v298 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v299 = v298 + 1;
            int v300 = *(char *)(*(void *)&a1[*v5] + v298);
            *(void *)&a1[v297] = v299;
            if (v300 < 0)
            {
              BOOL v25 = v296++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x57u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v301 = 0;
          while (1)
          {
            uint64_t v302 = *v2;
            unint64_t v303 = *(void *)&a1[v302];
            if (v303 == -1 || v303 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v304 = v303 + 1;
            int v305 = *(char *)(*(void *)&a1[*v5] + v303);
            *(void *)&a1[v302] = v304;
            if (v305 < 0)
            {
              BOOL v25 = v301++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x58u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateUGCPhotoIsValid(a1)) {
            goto LABEL_933;
          }
          goto LABEL_840;
        case 0x59u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v306 = 0;
          while (1)
          {
            uint64_t v307 = *v2;
            unint64_t v308 = *(void *)&a1[v307];
            if (v308 == -1 || v308 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v309 = v308 + 1;
            int v310 = *(char *)(*(void *)&a1[*v5] + v308);
            *(void *)&a1[v307] = v309;
            if (v310 < 0)
            {
              BOOL v25 = v306++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x5Au:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x5Bu:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x5Cu:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x5Du:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x5Eu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v311 = 0;
          while (1)
          {
            uint64_t v312 = *v2;
            unint64_t v313 = *(void *)&a1[v312];
            if (v313 == -1 || v313 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v314 = v313 + 1;
            int v315 = *(char *)(*(void *)&a1[*v5] + v313);
            *(void *)&a1[v312] = v314;
            if (v315 < 0)
            {
              BOOL v25 = v311++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x5Fu:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x61u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v316 = 0;
          while (1)
          {
            uint64_t v317 = *v2;
            uint64_t v318 = *(void *)&a1[v317];
            unint64_t v319 = v318 + 1;
            if (v318 == -1 || v319 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v320 = *(char *)(*(void *)&a1[*v5] + v318);
            *(void *)&a1[v317] = v319;
            if (v320 < 0)
            {
              BOOL v25 = v316++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x62u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v321 = 0;
          while (1)
          {
            uint64_t v322 = *v2;
            unint64_t v323 = *(void *)&a1[v322];
            if (v323 == -1 || v323 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v324 = v323 + 1;
            int v325 = *(char *)(*(void *)&a1[*v5] + v323);
            *(void *)&a1[v322] = v324;
            if (v325 < 0)
            {
              BOOL v25 = v321++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x63u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateAccountIsValid(a1)) {
            goto LABEL_933;
          }
          goto LABEL_840;
        case 0x65u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v326 = 0;
          while (1)
          {
            uint64_t v327 = *v2;
            uint64_t v328 = *(void *)&a1[v327];
            unint64_t v329 = v328 + 1;
            if (v328 == -1 || v329 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v330 = *(char *)(*(void *)&a1[*v5] + v328);
            *(void *)&a1[v327] = v329;
            if (v330 < 0)
            {
              BOOL v25 = v326++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x66u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v331 = 0;
          while (1)
          {
            uint64_t v332 = *v2;
            uint64_t v333 = *(void *)&a1[v332];
            unint64_t v334 = v333 + 1;
            if (v333 == -1 || v334 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v335 = *(char *)(*(void *)&a1[*v5] + v333);
            *(void *)&a1[v332] = v334;
            if (v335 < 0)
            {
              BOOL v25 = v331++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x67u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStatePlaceCardIsValid(a1)) {
            goto LABEL_933;
          }
          goto LABEL_840;
        case 0x68u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v336 = 0;
          while (1)
          {
            uint64_t v337 = *v2;
            uint64_t v338 = *(void *)&a1[v337];
            unint64_t v339 = v338 + 1;
            if (v338 == -1 || v339 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v340 = *(char *)(*(void *)&a1[*v5] + v338);
            *(void *)&a1[v337] = v339;
            if (v340 < 0)
            {
              BOOL v25 = v336++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x69u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v341 = 0;
          while (1)
          {
            uint64_t v342 = *v2;
            unint64_t v343 = *(void *)&a1[v342];
            if (v343 == -1 || v343 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v344 = v343 + 1;
            int v345 = *(char *)(*(void *)&a1[*v5] + v343);
            *(void *)&a1[v342] = v344;
            if (v345 < 0)
            {
              BOOL v25 = v341++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x6Au:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v346 = 0;
          while (1)
          {
            uint64_t v347 = *v2;
            unint64_t v348 = *(void *)&a1[v347];
            if (v348 == -1 || v348 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v349 = v348 + 1;
            int v350 = *(char *)(*(void *)&a1[*v5] + v348);
            *(void *)&a1[v347] = v349;
            if (v350 < 0)
            {
              BOOL v25 = v346++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x6Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v351 = 0;
          while (1)
          {
            uint64_t v352 = *v2;
            unint64_t v353 = *(void *)&a1[v352];
            if (v353 == -1 || v353 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v354 = v353 + 1;
            int v355 = *(char *)(*(void *)&a1[*v5] + v353);
            *(void *)&a1[v352] = v354;
            if (v355 < 0)
            {
              BOOL v25 = v351++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x6Cu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v356 = 0;
          while (1)
          {
            uint64_t v357 = *v2;
            unint64_t v358 = *(void *)&a1[v357];
            if (v358 == -1 || v358 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v359 = v358 + 1;
            int v360 = *(char *)(*(void *)&a1[*v5] + v358);
            *(void *)&a1[v357] = v359;
            if (v360 < 0)
            {
              BOOL v25 = v356++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x6Du:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v361 = 0;
          while (1)
          {
            uint64_t v362 = *v2;
            unint64_t v363 = *(void *)&a1[v362];
            if (v363 == -1 || v363 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v364 = v363 + 1;
            int v365 = *(char *)(*(void *)&a1[*v5] + v363);
            *(void *)&a1[v362] = v364;
            if (v365 < 0)
            {
              BOOL v25 = v361++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x6Eu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v366 = 0;
          while (1)
          {
            uint64_t v367 = *v2;
            unint64_t v368 = *(void *)&a1[v367];
            if (v368 == -1 || v368 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v369 = v368 + 1;
            int v370 = *(char *)(*(void *)&a1[*v5] + v368);
            *(void *)&a1[v367] = v369;
            if (v370 < 0)
            {
              BOOL v25 = v366++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x6Fu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v371 = 0;
          while (1)
          {
            uint64_t v372 = *v2;
            unint64_t v373 = *(void *)&a1[v372];
            if (v373 == -1 || v373 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v374 = v373 + 1;
            int v375 = *(char *)(*(void *)&a1[*v5] + v373);
            *(void *)&a1[v372] = v374;
            if (v375 < 0)
            {
              BOOL v25 = v371++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x70u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v376 = 0;
          while (1)
          {
            uint64_t v377 = *v2;
            unint64_t v378 = *(void *)&a1[v377];
            if (v378 == -1 || v378 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v379 = v378 + 1;
            int v380 = *(char *)(*(void *)&a1[*v5] + v378);
            *(void *)&a1[v377] = v379;
            if (v380 < 0)
            {
              BOOL v25 = v376++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x71u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v381 = 0;
          while (1)
          {
            uint64_t v382 = *v2;
            unint64_t v383 = *(void *)&a1[v382];
            if (v383 == -1 || v383 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v384 = v383 + 1;
            int v385 = *(char *)(*(void *)&a1[*v5] + v383);
            *(void *)&a1[v382] = v384;
            if (v385 < 0)
            {
              BOOL v25 = v381++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x72u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v386 = 0;
          while (1)
          {
            uint64_t v387 = *v2;
            unint64_t v388 = *(void *)&a1[v387];
            if (v388 == -1 || v388 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v389 = v388 + 1;
            int v390 = *(char *)(*(void *)&a1[*v5] + v388);
            *(void *)&a1[v387] = v389;
            if (v390 < 0)
            {
              BOOL v25 = v386++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x73u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v391 = 0;
          while (1)
          {
            uint64_t v392 = *v2;
            unint64_t v393 = *(void *)&a1[v392];
            if (v393 == -1 || v393 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v394 = v393 + 1;
            int v395 = *(char *)(*(void *)&a1[*v5] + v393);
            *(void *)&a1[v392] = v394;
            if (v395 < 0)
            {
              BOOL v25 = v391++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x74u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v396 = 0;
          while (1)
          {
            uint64_t v397 = *v2;
            unint64_t v398 = *(void *)&a1[v397];
            if (v398 == -1 || v398 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v399 = v398 + 1;
            int v400 = *(char *)(*(void *)&a1[*v5] + v398);
            *(void *)&a1[v397] = v399;
            if (v400 < 0)
            {
              BOOL v25 = v396++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x75u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v401 = 0;
          while (1)
          {
            uint64_t v402 = *v2;
            uint64_t v403 = *(void *)&a1[v402];
            unint64_t v404 = v403 + 1;
            if (v403 == -1 || v404 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v405 = *(char *)(*(void *)&a1[*v5] + v403);
            *(void *)&a1[v402] = v404;
            if (v405 < 0)
            {
              BOOL v25 = v401++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x76u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v406 = 0;
          while (1)
          {
            uint64_t v407 = *v2;
            unint64_t v408 = *(void *)&a1[v407];
            if (v408 == -1 || v408 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v409 = v408 + 1;
            int v410 = *(char *)(*(void *)&a1[*v5] + v408);
            *(void *)&a1[v407] = v409;
            if (v410 < 0)
            {
              BOOL v25 = v406++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x77u:
          if (v15 == 2) {
            goto LABEL_841;
          }
          goto LABEL_933;
        case 0x78u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v411 = 0;
          while (1)
          {
            uint64_t v412 = *v2;
            unint64_t v413 = *(void *)&a1[v412];
            if (v413 == -1 || v413 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v414 = v413 + 1;
            int v415 = *(char *)(*(void *)&a1[*v5] + v413);
            *(void *)&a1[v412] = v414;
            if (v415 < 0)
            {
              BOOL v25 = v411++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x79u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v416 = 0;
          while (1)
          {
            uint64_t v417 = *v2;
            unint64_t v418 = *(void *)&a1[v417];
            if (v418 == -1 || v418 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v419 = v418 + 1;
            int v420 = *(char *)(*(void *)&a1[*v5] + v418);
            *(void *)&a1[v417] = v419;
            if (v420 < 0)
            {
              BOOL v25 = v416++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x7Au:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateSearchResultsIsValid(a1)) {
            goto LABEL_933;
          }
          goto LABEL_840;
        case 0x7Bu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateImpressionObjectIsValid(a1)) {
            goto LABEL_933;
          }
          goto LABEL_840;
        case 0x7Cu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateTapEventIsValid(a1)) {
            goto LABEL_933;
          }
          goto LABEL_840;
        case 0x7Du:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateActionButtonDetailsIsValid(a1)) {
            goto LABEL_933;
          }
          goto LABEL_840;
        case 0x7Eu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v421 = 0;
          while (1)
          {
            uint64_t v422 = *v2;
            uint64_t v423 = *(void *)&a1[v422];
            unint64_t v424 = v423 + 1;
            if (v423 == -1 || v424 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v425 = *(char *)(*(void *)&a1[*v5] + v423);
            *(void *)&a1[v422] = v424;
            if (v425 < 0)
            {
              BOOL v25 = v421++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x7Fu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v426 = 0;
          while (1)
          {
            uint64_t v427 = *v2;
            uint64_t v428 = *(void *)&a1[v427];
            unint64_t v429 = v428 + 1;
            if (v428 == -1 || v429 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v430 = *(char *)(*(void *)&a1[*v5] + v428);
            *(void *)&a1[v427] = v429;
            if (v430 < 0)
            {
              BOOL v25 = v426++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x80u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v431 = 0;
          while (1)
          {
            uint64_t v432 = *v2;
            uint64_t v433 = *(void *)&a1[v432];
            unint64_t v434 = v433 + 1;
            if (v433 == -1 || v434 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v435 = *(char *)(*(void *)&a1[*v5] + v433);
            *(void *)&a1[v432] = v434;
            if (v435 < 0)
            {
              BOOL v25 = v431++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x81u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateARPPhotoSubmissionIsValid(a1)) {
            goto LABEL_933;
          }
          goto LABEL_840;
        case 0x82u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateARPRatingSubmissionIsValid(a1)) {
            goto LABEL_933;
          }
          goto LABEL_840;
        case 0x83u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateARPRatingPhotoSubmissionIsValid(a1)) {
            goto LABEL_933;
          }
          goto LABEL_840;
        case 0x84u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORevealedPlaceCardModuleIsValid(a1)) {
            goto LABEL_933;
          }
          goto LABEL_840;
        case 0x85u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v436 = 0;
          while (1)
          {
            uint64_t v437 = *v2;
            uint64_t v438 = *(void *)&a1[v437];
            unint64_t v439 = v438 + 1;
            if (v438 == -1 || v439 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v440 = *(char *)(*(void *)&a1[*v5] + v438);
            *(void *)&a1[v437] = v439;
            if (v440 < 0)
            {
              BOOL v25 = v436++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x86u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v441 = 0;
          while (1)
          {
            uint64_t v442 = *v2;
            unint64_t v443 = *(void *)&a1[v442];
            if (v443 == -1 || v443 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v444 = v443 + 1;
            int v445 = *(char *)(*(void *)&a1[*v5] + v443);
            *(void *)&a1[v442] = v444;
            if (v445 < 0)
            {
              BOOL v25 = v441++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x87u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v446 = 0;
          while (1)
          {
            uint64_t v447 = *v2;
            uint64_t v448 = *(void *)&a1[v447];
            unint64_t v449 = v448 + 1;
            if (v448 == -1 || v449 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v450 = *(char *)(*(void *)&a1[*v5] + v448);
            *(void *)&a1[v447] = v449;
            if (v450 < 0)
            {
              BOOL v25 = v446++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x88u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v451 = 0;
          while (1)
          {
            uint64_t v452 = *v2;
            uint64_t v453 = *(void *)&a1[v452];
            unint64_t v454 = v453 + 1;
            if (v453 == -1 || v454 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v455 = *(char *)(*(void *)&a1[*v5] + v453);
            *(void *)&a1[v452] = v454;
            if (v455 < 0)
            {
              BOOL v25 = v451++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x89u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOLogMsgStateMapsPlaceIdsIsValid(a1)) {
            goto LABEL_840;
          }
          goto LABEL_933;
        case 0x8Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v456 = 0;
          while (1)
          {
            uint64_t v457 = *v2;
            unint64_t v458 = *(void *)&a1[v457];
            if (v458 == -1 || v458 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v459 = v458 + 1;
            int v460 = *(char *)(*(void *)&a1[*v5] + v458);
            *(void *)&a1[v457] = v459;
            if (v460 < 0)
            {
              BOOL v25 = v456++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x8Cu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v461 = 0;
          while (1)
          {
            uint64_t v462 = *v2;
            uint64_t v463 = *(void *)&a1[v462];
            unint64_t v464 = v463 + 1;
            if (v463 == -1 || v464 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v465 = *(char *)(*(void *)&a1[*v5] + v463);
            *(void *)&a1[v462] = v464;
            if (v465 < 0)
            {
              BOOL v25 = v461++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x8Du:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v466 = 0;
          while (1)
          {
            uint64_t v467 = *v2;
            uint64_t v468 = *(void *)&a1[v467];
            unint64_t v469 = v468 + 1;
            if (v468 == -1 || v469 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v470 = *(char *)(*(void *)&a1[*v5] + v468);
            *(void *)&a1[v467] = v469;
            if (v470 < 0)
            {
              BOOL v25 = v466++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x8Eu:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v471 = 0;
          while (1)
          {
            uint64_t v472 = *v2;
            uint64_t v473 = *(void *)&a1[v472];
            unint64_t v474 = v473 + 1;
            if (v473 == -1 || v474 > *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            int v475 = *(char *)(*(void *)&a1[*v5] + v473);
            *(void *)&a1[v472] = v474;
            if (v475 < 0)
            {
              BOOL v25 = v471++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x90u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v476 = 0;
          while (1)
          {
            uint64_t v477 = *v2;
            unint64_t v478 = *(void *)&a1[v477];
            if (v478 == -1 || v478 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v479 = v478 + 1;
            int v480 = *(char *)(*(void *)&a1[*v5] + v478);
            *(void *)&a1[v477] = v479;
            if (v480 < 0)
            {
              BOOL v25 = v476++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x91u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v481 = 0;
          while (1)
          {
            uint64_t v482 = *v2;
            unint64_t v483 = *(void *)&a1[v482];
            if (v483 == -1 || v483 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v484 = v483 + 1;
            int v485 = *(char *)(*(void *)&a1[*v5] + v483);
            *(void *)&a1[v482] = v484;
            if (v485 < 0)
            {
              BOOL v25 = v481++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x92u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v486 = 0;
          while (1)
          {
            uint64_t v487 = *v2;
            unint64_t v488 = *(void *)&a1[v487];
            if (v488 == -1 || v488 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v489 = v488 + 1;
            int v490 = *(char *)(*(void *)&a1[*v5] + v488);
            *(void *)&a1[v487] = v489;
            if (v490 < 0)
            {
              BOOL v25 = v486++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        case 0x93u:
          if ((v8 & 7) != 0) {
            goto LABEL_933;
          }
          unsigned int v491 = 0;
          while (1)
          {
            uint64_t v492 = *v2;
            unint64_t v493 = *(void *)&a1[v492];
            if (v493 == -1 || v493 >= *(void *)&a1[*v3]) {
              goto LABEL_907;
            }
            unint64_t v494 = v493 + 1;
            int v495 = *(char *)(*(void *)&a1[*v5] + v493);
            *(void *)&a1[v492] = v494;
            if (v495 < 0)
            {
              BOOL v25 = v491++ > 8;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_909;
          }
        default:
LABEL_841:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_933;
          }
          goto LABEL_909;
      }
    }
  }
LABEL_931:
  BOOL v506 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v506;
}

void sub_18A0A7458(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAnalyticsPipelineStateDataIsDirty(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 512));
  int v2 = *(unsigned __int16 *)(a1 + 740) | (*(unsigned __int8 *)(a1 + 742) << 16);
  uint64_t v3 = *(void *)(a1 + 732);
  if (*(void *)&v2 & 0x20000 | v3 & 0x180000000000) {
    return 1;
  }
  if ((v3 & 0x20000000000) != 0)
  {
    if (GEOCarInfoIsDirty(*(os_unfair_lock_s **)(a1 + 80))) {
      return 1;
    }
    int v2 = *(unsigned __int16 *)(a1 + 740) | (*(unsigned __int8 *)(a1 + 742) << 16);
    uint64_t v3 = *(void *)(a1 + 732);
  }
  if ((v3 & 0x8000000000000) != 0) {
    return 1;
  }
  if ((v3 & 0x400000000000) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 120))) {
      return 1;
    }
    int v2 = *(unsigned __int16 *)(a1 + 740) | (*(unsigned __int8 *)(a1 + 742) << 16);
    uint64_t v3 = *(void *)(a1 + 732);
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOLogMsgStatePlaceCardIsDirty(*(os_unfair_lock_s **)(a1 + 408))) {
      return 1;
    }
    int v2 = *(unsigned __int16 *)(a1 + 740) | (*(unsigned __int8 *)(a1 + 742) << 16);
    uint64_t v3 = *(void *)(a1 + 732);
  }
  if (v3 & 0xFC60006000000000 | v2 & 0x1F) {
    return 1;
  }
  if ((v3 & 0x80000000000000) != 0)
  {
    if (GEOMapsServerMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 248))) {
      return 1;
    }
    int v2 = *(unsigned __int16 *)(a1 + 740) | (*(unsigned __int8 *)(a1 + 742) << 16);
    uint64_t v3 = *(void *)(a1 + 732);
  }
  if ((v2 & 0x200) != 0) {
    return 1;
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEOLogMsgEventPredExTrainingDataIsDirty(*(void *)(a1 + 416))) {
      return 1;
    }
    int v2 = *(unsigned __int16 *)(a1 + 740) | (*(unsigned __int8 *)(a1 + 742) << 16);
    uint64_t v3 = *(void *)(a1 + 732);
  }
  if (v2 & 0x1800 | v3 & 0x7800000000000) {
    return 1;
  }
  if ((v3 & 0x40000000000) != 0)
  {
    if (GEOLogMsgStateCuratedCollectionIsDirty(*(os_unfair_lock_s **)(a1 + 88))) {
      return 1;
    }
    int v2 = *(unsigned __int16 *)(a1 + 740) | (*(unsigned __int8 *)(a1 + 742) << 16);
    uint64_t v3 = *(void *)(a1 + 732);
  }
  if (*(void *)&v2 & 0x1C000 | v3 & 0x100008000000000) {
    return 1;
  }
  if ((v2 & 0x400) != 0)
  {
    if (GEOLogMsgStateSearchResultsIsDirty(*(void *)(a1 + 448))) {
      return 1;
    }
    LOWORD(v2) = *(_WORD *)(a1 + 740);
    uint64_t v3 = *(void *)(a1 + 732);
  }
  if (v2 & 0x2000 | v3 & 0x200210000000000) {
    return 1;
  }
  if ((v2 & 0x100) == 0) {
    goto LABEL_33;
  }
  if (GEOLogMsgStateARPRatingSubmissionIsDirty(*(void *)(a1 + 432))) {
    return 1;
  }
  LOWORD(v2) = *(_WORD *)(a1 + 740);
  uint64_t v3 = *(void *)(a1 + 732);
LABEL_33:
  if (v2 & 0x80 | v3 & 0x10000000000000) {
    return 1;
  }
  if ((v2 & 0x10) == 0) {
    return 0;
  }
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v5 = *(id *)(a1 + 400);
  uint64_t v6 = [v5 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v6)
  {
    uint64_t v7 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v10 != v7) {
          objc_enumerationMutation(v5);
        }
        if (GEORevealedPlaceCardModuleIsDirty(*(os_unfair_lock_s **)(*((void *)&v9 + 1) + 8 * i)))
        {
          uint64_t v6 = 1;
          goto LABEL_46;
        }
      }
      uint64_t v6 = [v5 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v6) {
        continue;
      }
      break;
    }
  }
LABEL_46:

  return v6;
}

os_unfair_lock_s *GEOAnalyticsPipelineStateDataIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOAnalyticsPipelineStateDataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 128);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOAnalyticsPipelineStateDataClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasLookAroundLocation]
    && ([a1 lookAroundLocation],
        id v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    uint64_t v7 = [a1 lookAroundLocation];
    unint64_t v8 = (_DWORD *)[v7 copy];

    GEOLocationClearSensitiveFields(v8);
    [a1 setLookAroundLocation:v8];
  }
  else
  {
    unint64_t v8 = [a1 lookAroundLocation];
    [v8 clearSensitiveFields:a2];
  }
}

void *GEOAnalyticsPipelineStateDataHasSensitiveFields(void *result)
{
  if (result)
  {
    id v1 = [result lookAroundLocation];
    uint64_t HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_18A0AAC28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0AFB44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id GEOGetRoutePreloaderLog(void)
{
  if (qword_1EB2A06C0 != -1) {
    dispatch_once(&qword_1EB2A06C0, &__block_literal_global_192);
  }
  uint64_t v0 = (void *)_MergedGlobals_328;

  return v0;
}

void sub_18A0AFC80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0AFEDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A0B0864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_18A0B09B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A0B0ABC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0B0E48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26)
{
  _Unwind_Resume(a1);
}

void sub_18A0B0F08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0B10E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A0B15F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,id location)
{
  _Unwind_Resume(a1);
}

void sub_18A0B1708(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A0B183C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0B19D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0B2348(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0B2968(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0B2CCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0B2F40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0B37A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_18A0B3AD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0B3B48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL23GEOGetRoutePreloaderLogv_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "RoutePreloader");
  id v1 = (void *)_MergedGlobals_328;
  _MergedGlobals_328 = (uint64_t)v0;
}

uint64_t GEOIsDeviceLocationServicesCapable()
{
  return 1;
}

void sub_18A0B4F8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEODirectionsRequestReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 288));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 284);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 280)];
  uint64_t v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unint64_t v13 = *(void *)(a1 + 328);
  uint32x4_t v14 = (uint32x4_t)vdupq_n_s32(v13);
  v15.i64[0] = 0x100000001;
  v15.i64[1] = 0x100000001;
  uint64x2_t v16 = (uint64x2_t)vdupq_n_s64(v13);
  unsigned int v17 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_18A6405C0), v15), (int32x4_t)(*(_OWORD *)&vshlq_u32(v14, (uint32x4_t)xmmword_18A6405B0) & __PAIR128__(0xFFFFFFE1FFFFFFE1, 0xFFFFFFE1FFFFFFE1))), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_18A6405D0), v15)), (int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vshlq_u64(v16, (uint64x2_t)xmmword_18A6405F0), (int32x4_t)vshlq_u64(v16, (uint64x2_t)xmmword_18A6405E0)), v15)))+ ((v13 >> 41) & 1)+ ((v13 >> 35) & 1)+ (BYTE4(v13) & 1)+ (WORD1(v13) & 1)+ ((v13 >> 23) & 1)+ ((v13 >> 15) & 1)
      + ((v13 >> 37) & 1)
      + ((v13 >> 21) & 1)
      + ((v13 >> 26) & 1)
      + ((v13 >> 38) & 1)
      + ((v13 >> 39) & 1)
      + ((v13 >> 13) & 1)
      + (v13 >> 31);
  while (2)
  {
    uint64_t v18 = 1;
    uint64_t v19 = 1;
    uint64_t v20 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v17;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v19 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v21 = v17 > 0x16;
        char v129 = v21 & ~(_BYTE)v12 | v10;
        char v130 = v21 | v12 | v129;
        if (((v21 | v12) | v9)) {
          uint64_t v22 = 0;
        }
        else {
          uint64_t v22 = a3;
        }
        unint64_t v23 = (int *)MEMORY[0x1E4F940E8];
        char v131 = (v22 == 0) | v21 | v12;
        char v132 = v21 | v12;
        int v24 = (int *)MEMORY[0x1E4F940C8];
        BOOL v25 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v17;
LABEL_7:
        uint64_t v18 = v10;
LABEL_8:
        uint64_t v19 = v11;
        uint64_t v20 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v18;
        uint64_t v11 = v19;
        uint64_t v12 = v20;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v23) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v24)) {
      goto LABEL_376;
    }
    char v26 = 0;
    unsigned int v27 = 0;
    unint64_t v28 = 0;
    while (1)
    {
      uint64_t v29 = *v23;
      uint64_t v30 = *(void *)(v3 + v29);
      unint64_t v31 = v30 + 1;
      if (v30 == -1 || v31 > *(void *)(v3 + *v7)) {
        break;
      }
      char v32 = *(unsigned char *)(*(void *)(v3 + *v25) + v30);
      *(void *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0) {
        goto LABEL_25;
      }
      v26 += 7;
      BOOL v33 = v27++ >= 9;
      if (v33)
      {
        unint64_t v28 = 0;
        int v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v24) = 1;
LABEL_25:
    int v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(unsigned char *)(v3 + *v24)) {
      unint64_t v28 = 0;
    }
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_376:
      int v128 = 1;
      goto LABEL_377;
    }
    unint64_t v36 = v28 >> 3;
    BOOL v37 = v132;
    if ((v131 & 1) == 0)
    {
      uint64_t v38 = v22;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37) {
          goto LABEL_286;
        }
        if ((*(unsigned char *)(a1 + 332) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_423;
          }
          uint64_t v42 = objc_alloc_init(GEORouteAttributes);
          if (GEORouteAttributesReadAllFrom((uint64_t)v42, (void *)v3, v11 & 1))
          {
            PBReaderRecallMark();
            uint64_t v43 = 216;
            goto LABEL_247;
          }
          goto LABEL_422;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v121 = *(void *)(a1 + 328) << 28;
        goto LABEL_361;
      case 2:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 17:
      case 41:
LABEL_55:
        if ((v129 & 1) == 0 || (*(unsigned char *)(a1 + 329) & 0x20) != 0) {
          goto LABEL_286;
        }
        if (!*(void *)(a1 + 16))
        {
          id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          uint64_t v48 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v47;
        }
        int v49 = PBUnknownFieldAdd();
        int v24 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
        BOOL v25 = (int *)MEMORY[0x1E4F940B8];
        if (v49) {
          goto LABEL_375;
        }
        int v128 = 0;
        goto LABEL_378;
      case 3:
        if ((v9 & 1) == 0) {
          goto LABEL_286;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v52 = 0;
        *(void *)(a1 + 328) |= 0x20uLL;
        while (2)
        {
          uint64_t v53 = *v23;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v25) + v54);
            *(void *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              BOOL v33 = v51++ >= 9;
              if (v33)
              {
                LODWORD(v52) = 0;
                goto LABEL_291;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v52) = 0;
        }
LABEL_291:
        uint64_t v118 = 300;
        goto LABEL_367;
      case 4:
        if (!v37) {
          goto LABEL_286;
        }
        if ((*(unsigned char *)(a1 + 330) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_423;
          }
          uint64_t v121 = *(void *)(a1 + 328) << 43;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v42 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v42, (void *)v3, v11 & 1)) {
          goto LABEL_422;
        }
        PBReaderRecallMark();
        uint64_t v43 = 88;
        goto LABEL_247;
      case 5:
        if (!v37) {
          goto LABEL_286;
        }
        if ((*(unsigned char *)(a1 + 330) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_423;
          }
          uint64_t v121 = *(void *)(a1 + 328) << 44;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v42 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_422;
        }
        PBReaderRecallMark();
        uint64_t v43 = 80;
        goto LABEL_247;
      case 6:
        if (!v37) {
          goto LABEL_286;
        }
        if ((*(unsigned char *)(a1 + 331) & 0x10) == 0)
        {
          uint64_t v57 = PBReaderReadData();
          uint64_t v58 = 152;
          goto LABEL_200;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v121 = *(void *)(a1 + 328) << 35;
        goto LABEL_361;
      case 7:
        if (!v37 || (*(unsigned char *)(a1 + 331) & 0x20) != 0) {
          goto LABEL_284;
        }
        PBReaderReadData();
        uint64_t v42 = (GEORouteAttributes *)objc_claimAutoreleasedReturnValue();
        if (v42) {
          -[GEODirectionsRequest _addNoFlagsOriginalRouteZilchPoints:](a1, v42);
        }
        goto LABEL_257;
      case 8:
        if ((v9 & 1) == 0) {
          goto LABEL_286;
        }
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v52 = 0;
        *(void *)(a1 + 328) |= 0x200uLL;
        while (2)
        {
          uint64_t v61 = *v23;
          uint64_t v62 = *(void *)(v3 + v61);
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(v3 + *v25) + v62);
            *(void *)(v3 + v61) = v63;
            v52 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              BOOL v33 = v60++ >= 9;
              if (v33)
              {
                LODWORD(v52) = 0;
                goto LABEL_295;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v52) = 0;
        }
LABEL_295:
        uint64_t v118 = 316;
        goto LABEL_367;
      case 9:
        if (!v37) {
          goto LABEL_286;
        }
        if (*(unsigned char *)(a1 + 330))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_423;
          }
          uint64_t v121 = *(void *)(a1 + 328) << 47;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v42 = objc_alloc_init(GEOClientCapabilities);
        if (!GEOClientCapabilitiesReadAllFrom((uint64_t)v42, (void *)v3, v11 & 1)) {
          goto LABEL_422;
        }
        PBReaderRecallMark();
        uint64_t v43 = 56;
        goto LABEL_247;
      case 10:
        if (!v37) {
          goto LABEL_286;
        }
        if ((*(unsigned char *)(a1 + 331) & 8) == 0)
        {
          uint64_t v57 = PBReaderReadData();
          uint64_t v58 = 144;
          goto LABEL_200;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v121 = *(void *)(a1 + 328) << 36;
        goto LABEL_361;
      case 16:
        if ((v9 & 1) == 0) {
          goto LABEL_286;
        }
        *(void *)(a1 + 328) |= 8uLL;
        uint64_t v65 = *v23;
        unint64_t v66 = *(void *)(v3 + v65);
        if (v66 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v67 = v66 + 4, v66 + 4 <= *(void *)(v3 + *v7)))
        {
          int v68 = *(_DWORD *)(*(void *)(v3 + *v25) + v66);
          *(void *)(v3 + v65) = v67;
        }
        else
        {
          int v68 = 0;
          *(unsigned char *)(v3 + *v24) = 1;
        }
        *(_DWORD *)(a1 + 292) = v68;
        goto LABEL_375;
      case 18:
        if ((v9 & 1) == 0) {
          goto LABEL_286;
        }
        char v69 = 0;
        unsigned int v70 = 0;
        uint64_t v71 = 0;
        *(void *)(a1 + 328) |= 0x800uLL;
        while (2)
        {
          uint64_t v72 = *v23;
          uint64_t v73 = *(void *)(v3 + v72);
          unint64_t v74 = v73 + 1;
          if (v73 == -1 || v74 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v75 = *(unsigned char *)(*(void *)(v3 + *v25) + v73);
            *(void *)(v3 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              BOOL v33 = v70++ >= 9;
              if (v33)
              {
                uint64_t v71 = 0;
                goto LABEL_299;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v71 = 0;
        }
LABEL_299:
        BOOL v119 = v71 != 0;
        uint64_t v120 = 324;
        goto LABEL_308;
      case 19:
        if ((v9 & 1) == 0) {
          goto LABEL_284;
        }
        if (!PBReaderPlaceMark() || (GEOSessionIDReadAllFrom((void *)(a1 + 24), v3) & 1) == 0) {
          goto LABEL_423;
        }
        PBReaderRecallMark();
        *(void *)(a1 + 328) |= 1uLL;
        goto LABEL_362;
      case 20:
        if (!v37) {
          goto LABEL_286;
        }
        if ((*(unsigned char *)(a1 + 330) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_423;
          }
          uint64_t v121 = *(void *)(a1 + 328) << 40;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v42 = objc_alloc_init(GEODirectionsRequestFeedback);
        if (!GEODirectionsRequestFeedbackReadAllFrom((uint64_t)v42, (void *)v3, v11 & 1)) {
          goto LABEL_422;
        }
        PBReaderRecallMark();
        uint64_t v43 = 112;
        goto LABEL_247;
      case 21:
        if (!v37) {
          goto LABEL_286;
        }
        if ((*(unsigned char *)(a1 + 329) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_423;
          }
          uint64_t v121 = *(void *)(a1 + 328) << 48;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v42 = objc_alloc_init(GEOAdditionalEnabledMarkets);
        if (!GEOAdditionalEnabledMarketsReadAllFrom((uint64_t)v42, (void *)v3, v11 & 1)) {
          goto LABEL_422;
        }
        PBReaderRecallMark();
        uint64_t v43 = 48;
        goto LABEL_247;
      case 22:
        if (!v37 || (*(unsigned char *)(a1 + 333) & 2) != 0) {
          goto LABEL_284;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v42 = objc_alloc_init(GEOWaypointTyped);
        if (!GEOWaypointTypedReadAllFrom((uint64_t)v42, (void *)v3, v11 & 1)) {
          goto LABEL_422;
        }
        PBReaderRecallMark();
        -[GEODirectionsRequest _addNoFlagsWaypointTyped:](a1, v42);
        goto LABEL_257;
      case 23:
        if (!v37) {
          goto LABEL_286;
        }
        if ((*(unsigned char *)(a1 + 331) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_423;
          }
          uint64_t v121 = *(void *)(a1 + 328) << 33;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v42 = objc_alloc_init(GEOOriginalRoute);
        if (!GEOOriginalRouteReadAllFrom((uint64_t)v42, (void *)v3, v11 & 1)) {
          goto LABEL_422;
        }
        PBReaderRecallMark();
        uint64_t v43 = 168;
        goto LABEL_247;
      case 24:
        if ((v9 & 1) == 0) {
          goto LABEL_286;
        }
        char v76 = 0;
        unsigned int v77 = 0;
        uint64_t v52 = 0;
        *(void *)(a1 + 328) |= 0x100uLL;
        while (2)
        {
          uint64_t v78 = *v23;
          uint64_t v79 = *(void *)(v3 + v78);
          unint64_t v80 = v79 + 1;
          if (v79 == -1 || v80 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v81 = *(unsigned char *)(*(void *)(v3 + *v25) + v79);
            *(void *)(v3 + v78) = v80;
            v52 |= (unint64_t)(v81 & 0x7F) << v76;
            if (v81 < 0)
            {
              v76 += 7;
              BOOL v33 = v77++ >= 9;
              if (v33)
              {
                LODWORD(v52) = 0;
                goto LABEL_303;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v52) = 0;
        }
LABEL_303:
        uint64_t v118 = 312;
        goto LABEL_367;
      case 25:
        if (!v37) {
          goto LABEL_286;
        }
        if ((*(unsigned char *)(a1 + 332) & 0x20) == 0)
        {
          uint64_t v57 = PBReaderReadData();
          uint64_t v58 = 240;
          goto LABEL_200;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v121 = *(void *)(a1 + 328) << 26;
        goto LABEL_361;
      case 26:
        if ((v9 & 1) == 0) {
          goto LABEL_286;
        }
        char v82 = 0;
        unsigned int v83 = 0;
        uint64_t v84 = 0;
        *(void *)(a1 + 328) |= 0x1000uLL;
        while (2)
        {
          uint64_t v85 = *v23;
          uint64_t v86 = *(void *)(v3 + v85);
          unint64_t v87 = v86 + 1;
          if (v86 == -1 || v87 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v88 = *(unsigned char *)(*(void *)(v3 + *v25) + v86);
            *(void *)(v3 + v85) = v87;
            v84 |= (unint64_t)(v88 & 0x7F) << v82;
            if (v88 < 0)
            {
              v82 += 7;
              BOOL v33 = v83++ >= 9;
              if (v33)
              {
                uint64_t v84 = 0;
                goto LABEL_307;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v84 = 0;
        }
LABEL_307:
        BOOL v119 = v84 != 0;
        uint64_t v120 = 325;
LABEL_308:
        *(unsigned char *)(a1 + v120) = v119;
        goto LABEL_375;
      case 27:
        if (!v37) {
          goto LABEL_286;
        }
        if ((*(unsigned char *)(a1 + 330) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_423;
          }
          uint64_t v121 = *(void *)(a1 + 328) << 45;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v42 = objc_alloc_init(GEOCommonOptions);
        if (!GEOCommonOptionsReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_422;
        }
        PBReaderRecallMark();
        uint64_t v43 = 72;
        goto LABEL_247;
      case 28:
        if (!v37) {
          goto LABEL_286;
        }
        if ((*(unsigned char *)(a1 + 331) & 2) == 0)
        {
          uint64_t v57 = PBReaderReadString();
          uint64_t v58 = 128;
          goto LABEL_200;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v121 = *(void *)(a1 + 328) << 38;
        goto LABEL_361;
      case 29:
        if (!v37) {
          goto LABEL_286;
        }
        if (*(unsigned char *)(a1 + 331))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_423;
          }
          uint64_t v121 = *(void *)(a1 + 328) << 39;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v42 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v42, (void *)v3, v11 & 1)) {
          goto LABEL_422;
        }
        PBReaderRecallMark();
        uint64_t v43 = 120;
        goto LABEL_247;
      case 30:
        if ((v9 & 1) == 0) {
          goto LABEL_286;
        }
        char v89 = 0;
        unsigned int v90 = 0;
        uint64_t v52 = 0;
        *(void *)(a1 + 328) |= 0x80uLL;
        while (2)
        {
          uint64_t v91 = *v23;
          uint64_t v92 = *(void *)(v3 + v91);
          unint64_t v93 = v92 + 1;
          if (v92 == -1 || v93 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v94 = *(unsigned char *)(*(void *)(v3 + *v25) + v92);
            *(void *)(v3 + v91) = v93;
            v52 |= (unint64_t)(v94 & 0x7F) << v89;
            if (v94 < 0)
            {
              v89 += 7;
              BOOL v33 = v90++ >= 9;
              if (v33)
              {
                LODWORD(v52) = 0;
                goto LABEL_312;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v52) = 0;
        }
LABEL_312:
        uint64_t v118 = 308;
        goto LABEL_367;
      case 31:
        if (!v37) {
          goto LABEL_286;
        }
        if ((*(unsigned char *)(a1 + 329) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_423;
          }
          uint64_t v121 = *(void *)(a1 + 328) << 49;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v42 = objc_alloc_init(GEOPDABClientDatasetMetadata);
        if (!GEOPDABClientDatasetMetadataReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_422;
        }
        PBReaderRecallMark();
        uint64_t v43 = 40;
        goto LABEL_247;
      case 32:
        if (!v37 || (*(unsigned char *)(a1 + 330) & 0x20) != 0) {
          goto LABEL_284;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v42 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v42, (void *)v3, v11 & 1)) {
          goto LABEL_422;
        }
        PBReaderRecallMark();
        -[GEODirectionsRequest _addNoFlagsDeviceHistoricalLocation:](a1, v42);
        goto LABEL_257;
      case 33:
        if ((v9 & 1) == 0) {
          goto LABEL_286;
        }
        char v95 = 0;
        unsigned int v96 = 0;
        uint64_t v52 = 0;
        *(void *)(a1 + 328) |= 0x40uLL;
        while (2)
        {
          uint64_t v97 = *v23;
          uint64_t v98 = *(void *)(v3 + v97);
          unint64_t v99 = v98 + 1;
          if (v98 == -1 || v99 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v100 = *(unsigned char *)(*(void *)(v3 + *v25) + v98);
            *(void *)(v3 + v97) = v99;
            v52 |= (unint64_t)(v100 & 0x7F) << v95;
            if (v100 < 0)
            {
              v95 += 7;
              BOOL v33 = v96++ >= 9;
              if (v33)
              {
                LODWORD(v52) = 0;
                goto LABEL_316;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v52) = 0;
        }
LABEL_316:
        uint64_t v118 = 304;
        goto LABEL_367;
      case 34:
        if (!v37) {
          goto LABEL_286;
        }
        if ((*(unsigned char *)(a1 + 331) & 4) == 0)
        {
          uint64_t v57 = PBReaderReadData();
          uint64_t v58 = 136;
LABEL_200:
          unsigned int v101 = *(void **)(a1 + v58);
          *(void *)(a1 + v58) = v57;
          goto LABEL_248;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v121 = *(void *)(a1 + 328) << 37;
        goto LABEL_361;
      case 35:
        if ((v9 & 1) == 0) {
          goto LABEL_286;
        }
        *(void *)(a1 + 328) |= 4uLL;
        uint64_t v102 = *v23;
        unint64_t v103 = *(void *)(v3 + v102);
        if (v103 <= 0xFFFFFFFFFFFFFFF7 && v103 + 8 <= *(void *)(v3 + *v7))
        {
          uint64_t v46 = *(void *)(*(void *)(v3 + *v25) + v103);
          *(void *)(v3 + v102) = v103 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v24) = 1;
          uint64_t v46 = 0;
        }
        uint64_t v122 = 232;
LABEL_374:
        *(void *)(a1 + v122) = v46;
        goto LABEL_375;
      case 36:
        if (!v37 || (*(unsigned char *)(a1 + 331) & 0x80) != 0) {
          goto LABEL_284;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v42 = objc_alloc_init(GEOStopStepEVInfo);
        if (!GEOStopStepEVInfoReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_422;
        }
        PBReaderRecallMark();
        -[GEODirectionsRequest _addNoFlagsOriginalRouteEvInfo:](a1, v42);
        goto LABEL_257;
      case 37:
        if (!v37) {
          goto LABEL_286;
        }
        if (*(unsigned char *)(a1 + 332))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_423;
          }
          uint64_t v121 = *(void *)(a1 + 328) << 31;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v42 = objc_alloc_init(GEOOriginalWaypointRoute);
        if (!GEOOriginalWaypointRouteReadAllFrom((uint64_t)v42, (void *)v3, v11 & 1)) {
          goto LABEL_422;
        }
        PBReaderRecallMark();
        uint64_t v43 = 184;
        goto LABEL_247;
      case 38:
        if ((v9 & 1) == 0) {
          goto LABEL_286;
        }
        char v104 = 0;
        unsigned int v105 = 0;
        uint64_t v52 = 0;
        *(void *)(a1 + 328) |= 0x10uLL;
        while (2)
        {
          uint64_t v106 = *v23;
          uint64_t v107 = *(void *)(v3 + v106);
          unint64_t v108 = v107 + 1;
          if (v107 == -1 || v108 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v109 = *(unsigned char *)(*(void *)(v3 + *v25) + v107);
            *(void *)(v3 + v106) = v108;
            v52 |= (unint64_t)(v109 & 0x7F) << v104;
            if (v109 < 0)
            {
              v104 += 7;
              BOOL v33 = v105++ >= 9;
              if (v33)
              {
                LODWORD(v52) = 0;
                goto LABEL_320;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v52) = 0;
        }
LABEL_320:
        uint64_t v118 = 296;
        goto LABEL_367;
      case 39:
        if (!v37) {
          goto LABEL_286;
        }
        if ((*(unsigned char *)(a1 + 332) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_423;
          }
          uint64_t v121 = *(void *)(a1 + 328) << 29;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v42 = objc_alloc_init(GEORecentLocationHistory);
        if (!GEORecentLocationHistoryReadAllFrom((uint64_t)v42, (void *)v3, v11 & 1)) {
          goto LABEL_422;
        }
        PBReaderRecallMark();
        uint64_t v43 = 200;
        goto LABEL_247;
      case 40:
        if (!v37) {
          goto LABEL_286;
        }
        if ((*(unsigned char *)(a1 + 332) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_423;
          }
          uint64_t v121 = *(void *)(a1 + 328) << 30;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v42 = objc_alloc_init(GEOPrivacyMetadata);
        if (!GEOPrivacyMetadataReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_422;
        }
        PBReaderRecallMark();
        uint64_t v43 = 192;
        goto LABEL_247;
      case 42:
        if (!v37) {
          goto LABEL_286;
        }
        if (*(unsigned char *)(a1 + 333))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_423;
          }
          uint64_t v121 = *(void *)(a1 + 328) << 23;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v42 = objc_alloc_init(GEOTripInfo);
        if (!GEOTripInfoReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_422;
        }
        PBReaderRecallMark();
        uint64_t v43 = 264;
        goto LABEL_247;
      case 43:
        if (v37 && (*(unsigned char *)(a1 + 330) & 0x40) == 0)
        {
          PBReaderReadString();
          uint64_t v42 = (GEORouteAttributes *)objc_claimAutoreleasedReturnValue();
          if (v42) {
            -[GEODirectionsRequest _addNoFlagsDisplayedBannerId:](a1, v42);
          }
LABEL_257:

          goto LABEL_362;
        }
LABEL_284:
        char v116 = PBReaderSkipValueWithTag();
        int v24 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
        BOOL v25 = (int *)MEMORY[0x1E4F940B8];
        if ((v116 & 1) == 0) {
          goto LABEL_421;
        }
        goto LABEL_375;
      case 44:
        if (!v37)
        {
LABEL_286:
          char v117 = PBReaderSkipValueWithTag();
          BOOL v25 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          int v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v117 & 1) == 0)
          {
LABEL_421:
            int v128 = 0;
            goto LABEL_377;
          }
LABEL_375:
          if (!(v130 & 1 | (v8 != 0))) {
            goto LABEL_376;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 330) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_423;
          }
          uint64_t v121 = *(void *)(a1 + 328) << 46;
LABEL_361:
          v8 += v121 >> 63;
LABEL_362:
          int v24 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          BOOL v25 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_375;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_423;
        }
        uint64_t v42 = objc_alloc_init(GEOClientFeedbackInfo);
        if (GEOClientFeedbackInfoReadAllFrom(v42, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v43 = 64;
LABEL_247:
          unsigned int v101 = *(void **)(a1 + v43);
          *(void *)(a1 + v43) = v42;
LABEL_248:

          --v8;
          goto LABEL_362;
        }
LABEL_422:

LABEL_423:
        int v128 = 0;
        int v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_377:
        if (v129) {
LABEL_378:
        }
          *(void *)(a1 + 328) |= 0x2000uLL;
        if (v132 & 1 | ((v128 & 1) == 0))
        {
          *(void *)(a1 + 328) |= 0x3FFFFFFC000uLL;
          goto LABEL_415;
        }
        if (v22)
        {
          while (1)
          {
            int v124 = *v22++;
            int v123 = v124;
            if (v124 <= 99)
            {
              uint64_t v125 = 0x800000000;
              switch(v123)
              {
                case 0:
                  goto LABEL_415;
                case 1:
                  goto LABEL_414;
                case 4:
                  uint64_t v125 = 0x100000;
                  goto LABEL_414;
                case 5:
                  uint64_t v125 = 0x80000;
                  goto LABEL_414;
                case 6:
                  uint64_t v125 = 0x10000000;
                  goto LABEL_414;
                case 7:
                  uint64_t v125 = 0x20000000;
                  goto LABEL_414;
                case 9:
                  uint64_t v125 = 0x10000;
                  goto LABEL_414;
                case 10:
                  uint64_t v125 = 0x8000000;
                  goto LABEL_414;
                case 20:
                  uint64_t v125 = 0x800000;
                  goto LABEL_414;
                case 21:
                  uint64_t v125 = 0x8000;
                  goto LABEL_414;
                case 22:
                  uint64_t v125 = 0x20000000000;
                  goto LABEL_414;
                case 23:
                  uint64_t v125 = 0x40000000;
                  goto LABEL_414;
                case 25:
                  uint64_t v125 = 0x2000000000;
                  goto LABEL_414;
                case 27:
                  uint64_t v125 = 0x40000;
                  goto LABEL_414;
                case 28:
                  uint64_t v125 = 0x2000000;
                  goto LABEL_414;
                case 29:
                  uint64_t v125 = 0x1000000;
                  goto LABEL_414;
                case 31:
                  uint64_t v125 = 0x4000;
                  goto LABEL_414;
                case 32:
                  uint64_t v125 = 0x200000;
                  goto LABEL_414;
                case 34:
                  uint64_t v125 = 0x4000000;
                  goto LABEL_414;
                case 36:
                  uint64_t v125 = 0x80000000;
                  goto LABEL_414;
                case 37:
                  uint64_t v125 = 0x100000000;
                  goto LABEL_414;
                case 39:
                  uint64_t v125 = 0x400000000;
                  goto LABEL_414;
                case 40:
                  uint64_t v125 = 0x200000000;
                  goto LABEL_414;
                case 42:
                  uint64_t v125 = 0x10000000000;
                  goto LABEL_414;
                case 43:
                  uint64_t v125 = 0x400000;
                  goto LABEL_414;
                case 44:
                  uint64_t v125 = 0x20000;
                  goto LABEL_414;
                default:
                  continue;
              }
              break;
            }
            switch(v123)
            {
              case 'd':
                uint64_t v125 = 0x1000000000;
                break;
              case 'e':
                uint64_t v125 = 0x4000000000;
                break;
              case 'f':
                uint64_t v125 = 0x8000000000;
                break;
              default:
                continue;
            }
LABEL_414:
            *(void *)(a1 + 328) |= v125;
          }
        }
LABEL_415:
        if (v128) {
          uint64_t v3 = *(unsigned char *)(v3 + *v24) == 0;
        }
        else {
          uint64_t v3 = 0;
        }
        if (v132)
        {
          unsigned int v126 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        switch((int)v36)
        {
          case 'd':
            if (!v37 || (*(unsigned char *)(a1 + 332) & 0x10) != 0) {
              goto LABEL_284;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_423;
            }
            uint64_t v42 = objc_alloc_init(GEOGeoServiceTag);
            if (!GEOGeoServiceTagReadAllFrom((uint64_t)v42, (void *)v3)) {
              goto LABEL_422;
            }
            PBReaderRecallMark();
            -[GEODirectionsRequest _addNoFlagsServiceTag:](a1, v42);
            goto LABEL_257;
          case 'e':
            if (!v37 || (*(unsigned char *)(a1 + 332) & 0x40) != 0) {
              goto LABEL_284;
            }
            PBReaderReadData();
            uint64_t v42 = (GEORouteAttributes *)objc_claimAutoreleasedReturnValue();
            if (v42) {
              -[GEODirectionsRequest _addNoFlagsTrafficApiResponses:](a1, v42);
            }
            goto LABEL_257;
          case 'f':
            if (!v37 || (*(unsigned char *)(a1 + 332) & 0x80) != 0) {
              goto LABEL_284;
            }
            PBReaderReadString();
            uint64_t v42 = (GEORouteAttributes *)objc_claimAutoreleasedReturnValue();
            if (v42) {
              -[GEODirectionsRequest _addNoFlagsTrafficSnapshotIds:](a1, v42);
            }
            goto LABEL_257;
          case 'g':
            if ((v9 & 1) == 0) {
              goto LABEL_286;
            }
            char v110 = 0;
            unsigned int v111 = 0;
            uint64_t v52 = 0;
            *(void *)(a1 + 328) |= 0x400uLL;
            break;
          default:
            if (v36 != 1025) {
              goto LABEL_55;
            }
            if ((v9 & 1) == 0) {
              goto LABEL_286;
            }
            *(void *)(a1 + 328) |= 2uLL;
            uint64_t v44 = *v23;
            unint64_t v45 = *(void *)(v3 + v44);
            if (v45 <= 0xFFFFFFFFFFFFFFF7 && v45 + 8 <= *(void *)(v3 + *v7))
            {
              uint64_t v46 = *(void *)(*(void *)(v3 + *v25) + v45);
              *(void *)(v3 + v44) = v45 + 8;
            }
            else
            {
              *(unsigned char *)(v3 + *v24) = 1;
              uint64_t v46 = 0;
            }
            uint64_t v122 = 208;
            goto LABEL_374;
        }
        while (2)
        {
          uint64_t v112 = *v23;
          uint64_t v113 = *(void *)(v3 + v112);
          unint64_t v114 = v113 + 1;
          if (v113 == -1 || v114 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v115 = *(unsigned char *)(*(void *)(v3 + *v25) + v113);
            *(void *)(v3 + v112) = v114;
            v52 |= (unint64_t)(v115 & 0x7F) << v110;
            if (v115 < 0)
            {
              v110 += 7;
              BOOL v33 = v111++ >= 9;
              if (v33)
              {
                LODWORD(v52) = 0;
                goto LABEL_366;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v52) = 0;
        }
LABEL_366:
        uint64_t v118 = 320;
LABEL_367:
        *(_DWORD *)(a1 + v118) = v52;
        goto LABEL_375;
    }
  }
}

void sub_18A0B6E2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B71F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B75C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B7814(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B7988(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B7AFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B7C70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B803C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B81B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B857C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B86F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B88E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B8CBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B8E30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B9028(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B921C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B9390(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B9504(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B9870(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B99E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0B9F8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0BA180(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0BA2F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0BA460(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0BA5D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0BA99C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0BAD68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0BDED8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEODirectionsRequestCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  [a1[27] readAll:1];
  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  id v2 = a1[34];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v34 objects:v41 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v35;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v35 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v34 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v34 objects:v41 count:16];
    }
    while (v4);
  }

  [a1[8] readAll:1];
  [a1[11] readAll:1];
  [a1[10] readAll:1];
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id v7 = a1[22];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v30 objects:v40 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v31;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v31 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v30 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v30 objects:v40 count:16];
    }
    while (v9);
  }

  [a1[21] readAll:1];
  [a1[23] readAll:1];
  [a1[7] readAll:1];
  [a1[14] readAll:1];
  [a1[6] readAll:1];
  [a1[9] readAll:1];
  [a1[15] readAll:1];
  [a1[5] readAll:1];
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v12 = a1[12];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v26 objects:v39 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v27;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v27 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v26 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v26 objects:v39 count:16];
    }
    while (v14);
  }

  [a1[25] readAll:1];
  [a1[24] readAll:1];
  [a1[33] readAll:1];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v17 = a1[28];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v22 objects:v38 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v23;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v23 != v20) {
          objc_enumerationMutation(v17);
        }
        objc_msgSend(*(id *)(*((void *)&v22 + 1) + 8 * v21++), "readAll:", 1, (void)v22);
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v22 objects:v38 count:16];
    }
    while (v19);
  }
}

uint64_t GEODirectionsRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 284))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEODirectionsRequestReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 288));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 280) = [v8 position];
  *(_DWORD *)(a1 + 284) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEODirectionsRequestReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEODirectionsRequestReadAllFrom_initialTag;
  }
  uint64_t Specified = GEODirectionsRequestReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEODirectionsRequestCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 288));
  return Specified;
}

void sub_18A0BE434(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEODirectionsRequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEODirectionsRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A0BE498(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0BEFD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEODirectionsRequestIsDirty(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 288));
  uint64_t v2 = *(void *)(a1 + 328);
  if ((v2 & 0x40000000000) != 0) {
    return 1;
  }
  if ((v2 & 0x800000000) != 0)
  {
    if (GEORouteAttributesIsDirty(*(os_unfair_lock_s **)(a1 + 216))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 328);
  }
  if ((v2 & 0x20000420000) == 0)
  {
    if ((v2 & 0x100000) == 0) {
      goto LABEL_9;
    }
    if (!GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 88)))
    {
      uint64_t v2 = *(void *)(a1 + 328);
LABEL_9:
      if ((v2 & 0xB8080000) != 0) {
        return 1;
      }
      if ((v2 & 0x40000000) != 0)
      {
        if (GEOOriginalRouteIsDirty(*(void *)(a1 + 168))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 328);
      }
      if ((v2 & 0x100000000) != 0) {
        return 1;
      }
      if ((v2 & 0x10000) != 0)
      {
        if (GEOClientCapabilitiesIsDirty(*(void *)(a1 + 56))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 328);
      }
      if ((v2 & 0x800000) != 0)
      {
        if (GEODirectionsRequestFeedbackIsDirty(*(void *)(a1 + 112))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 328);
      }
      if ((v2 & 0x8000) != 0)
      {
        if (GEOAdditionalEnabledMarketsIsDirty(*(void *)(a1 + 48))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 328);
      }
      if ((v2 & 0x2002040000) != 0) {
        return 1;
      }
      if ((v2 & 0x1000000) != 0)
      {
        if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 120))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 328);
      }
      if ((v2 & 0x4204000) != 0) {
        return 1;
      }
      if ((v2 & 0x400000000) != 0)
      {
        if (GEORecentLocationHistoryIsDirty(*(void *)(a1 + 200))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 328);
      }
      if ((v2 & 0x1D200000000) != 0) {
        return 1;
      }
      if ((v2 & 0x20000000000) != 0)
      {
        long long v18 = 0u;
        long long v19 = 0u;
        long long v16 = 0u;
        long long v17 = 0u;
        id v5 = *(id *)(a1 + 272);
        uint64_t v6 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
        if (v6)
        {
          uint64_t v7 = v6;
          uint64_t v8 = *(void *)v17;
LABEL_37:
          uint64_t v9 = 0;
          while (1)
          {
            if (*(void *)v17 != v8) {
              objc_enumerationMutation(v5);
            }
            if (GEOWaypointTypedIsDirty(*(os_unfair_lock_s **)(*((void *)&v16 + 1) + 8 * v9))) {
              goto LABEL_55;
            }
            if (v7 == ++v9)
            {
              uint64_t v7 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
              if (v7) {
                goto LABEL_37;
              }
              break;
            }
          }
        }

        uint64_t v2 = *(void *)(a1 + 328);
      }
      if ((v2 & 0x200000) == 0) {
        return 0;
      }
      long long v14 = 0u;
      long long v15 = 0u;
      long long v12 = 0u;
      long long v13 = 0u;
      id v5 = *(id *)(a1 + 96);
      uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
      if (!v3)
      {
LABEL_56:

        return v3;
      }
      uint64_t v10 = *(void *)v13;
LABEL_48:
      uint64_t v11 = 0;
      while (1)
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v5);
        }
        if (GEOLocationIsDirty(*(os_unfair_lock_s **)(*((void *)&v12 + 1) + 8 * v11))) {
          break;
        }
        if (v3 == ++v11)
        {
          uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
          if (v3) {
            goto LABEL_48;
          }
          goto LABEL_56;
        }
      }
LABEL_55:
      uint64_t v3 = 1;
      goto LABEL_56;
    }
  }
  return 1;
}

os_unfair_lock_s *GEODirectionsRequestIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEODirectionsRequestIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 72);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEODirectionsRequestClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  -[GEODirectionsRequest _readWaypointTypeds]((uint64_t)a1);
  if ([a1[34] count])
  {
    unint64_t v6 = 0;
    do
    {
      uint64_t v7 = [a1[34] objectAtIndexedSubscript:v6];
      uint64_t v8 = v7;
      if (a3 && GEOWaypointTypedHasSensitiveFields(v7))
      {
        uint64_t v9 = (void *)[v8 copy];
        uint64_t v10 = [v9 waypointLocation];
        [v10 clearSensitiveFields:a2];

        [a1[34] replaceObjectAtIndex:v6 withObject:v9];
      }
      else
      {
        [v8 clearSensitiveFields:a2];
      }

      ++v6;
    }
    while (v6 < [a1[34] count]);
  }
  if (a3)
  {
    if ([a1 hasCurrentUserLocation]
      && ([a1 currentUserLocation],
          uint64_t v11 = objc_claimAutoreleasedReturnValue(),
          int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v11),
          v11,
          HasSensitiveFields))
    {
      long long v13 = [a1 currentUserLocation];
      long long v14 = (_DWORD *)[v13 copy];

      GEOLocationClearSensitiveFields(v14);
      [a1 setCurrentUserLocation:v14];
    }
    else
    {
      long long v14 = [a1 currentUserLocation];
      [v14 clearSensitiveFields:a2];
    }

    if ([a1 hasLastKnownRoadLocation])
    {
      long long v16 = [a1 lastKnownRoadLocation];
      int v17 = GEOLocationHasSensitiveFields((uint64_t)v16);

      if (v17)
      {
        long long v18 = [a1 lastKnownRoadLocation];
        long long v19 = (_DWORD *)[v18 copy];

        GEOLocationClearSensitiveFields(v19);
        [a1 setLastKnownRoadLocation:v19];
        goto LABEL_18;
      }
    }
  }
  else
  {
    long long v15 = [a1 currentUserLocation];
    [v15 clearSensitiveFields:a2];
  }
  long long v19 = [a1 lastKnownRoadLocation];
  [v19 clearSensitiveFields:a2];
LABEL_18:

  -[GEODirectionsRequest _readDeviceHistoricalLocations]((uint64_t)a1);
  unint64_t result = [a1[12] count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      uint64_t v22 = [a1[12] objectAtIndexedSubscript:i];
      long long v23 = (void *)v22;
      if (a3 && GEOLocationHasSensitiveFields(v22))
      {
        long long v24 = (_DWORD *)[v23 copy];
        GEOLocationClearSensitiveFields(v24);
        [a1[12] replaceObjectAtIndex:i withObject:v24];
      }
      else
      {
        [v23 clearSensitiveFields:a2];
      }

      unint64_t result = [a1[12] count];
    }
  }
  return result;
}

uint64_t GEODirectionsRequestHasSensitiveFields(uint64_t result)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if (result)
  {
    id v1 = (void *)result;
    uint64_t v2 = [(id)result currentUserLocation];
    if (GEOLocationHasSensitiveFields((uint64_t)v2))
    {
LABEL_3:

      return 1;
    }
    uint64_t v3 = [v1 lastKnownRoadLocation];
    char HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v3);

    if (HasSensitiveFields) {
      return 1;
    }
    long long v20 = 0u;
    long long v21 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    uint64_t v2 = [v1 waypointTypeds];
    uint64_t v5 = [v2 countByEnumeratingWithState:&v18 objects:v23 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v19;
LABEL_9:
      uint64_t v8 = 0;
      while (1)
      {
        if (*(void *)v19 != v7) {
          objc_enumerationMutation(v2);
        }
        if (GEOWaypointTypedHasSensitiveFields(*(void **)(*((void *)&v18 + 1) + 8 * v8))) {
          goto LABEL_3;
        }
        if (v6 == ++v8)
        {
          uint64_t v6 = [v2 countByEnumeratingWithState:&v18 objects:v23 count:16];
          if (v6) {
            goto LABEL_9;
          }
          break;
        }
      }
    }

    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    uint64_t v9 = objc_msgSend(v1, "deviceHistoricalLocations", 0);
    uint64_t v10 = [v9 countByEnumeratingWithState:&v14 objects:v22 count:16];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = *(void *)v15;
      while (2)
      {
        uint64_t v13 = 0;
        do
        {
          if (*(void *)v15 != v12) {
            objc_enumerationMutation(v9);
          }
          if (GEOLocationHasSensitiveFields(*(void *)(*((void *)&v14 + 1) + 8 * v13)))
          {

            return 1;
          }
          ++v13;
        }
        while (v11 != v13);
        uint64_t v11 = [v9 countByEnumeratingWithState:&v14 objects:v22 count:16];
        if (v11) {
          continue;
        }
        break;
      }
    }

    return 0;
  }
  return result;
}

void sub_18A0C0D78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C24E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODirectionsRequestResponseAnalyticsDataReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        long long v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18A0C3034(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODirectionsRequestResponseAnalyticsDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEODirectionsRequestResponseAnalyticsDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A0C3098(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODirectionsRequestResponseAnalyticsDataIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      uint64_t v11 = *(void *)&a1[v10];
      unint64_t v12 = v11 + 1;
      if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v9 & 7) == 4;
    }
    if (v15) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v16 = 0;
      goto LABEL_22;
    }
  }
  BOOL v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

void sub_18A0C3860(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEODirectionsResponseReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 360));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 356);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 352)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unint64_t v12 = *(void *)(a1 + 388);
  uint32x4_t v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15.i32[0] = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A640600), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A640610), v14)));
  v16.i32[0] = v12 >> 27;
  v16.i32[1] = v12 >> 34;
  v17.i32[0] = v12 >> 43;
  v17.i32[1] = v12 >> 22;
  uint64x2_t v18 = (uint64x2_t)vdupq_n_s64(v12);
  v15.i32[1] = BYTE4(v12) & 1;
  *(int32x2_t *)v13.i8 = vadd_s32(vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v13.i8, (uint32x2_t)0xFFFFFFEBFFFFFFE3), (int8x8_t)0x100000001), (int32x2_t)vand_s8(v16, (int8x8_t)0x100000001)), vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v13.i8, (uint32x2_t)0xFFFFFFEFFFFFFFECLL), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v18, (uint64x2_t)xmmword_18A640620)), (int8x8_t)0x100000001)), vadd_s32(
                                 (int32x2_t)(*(void *)&vshl_u32(*(uint32x2_t *)v13.i8, (uint32x2_t)0xFFFFFFE6FFFFFFE2) & 0xFFFFFFC1FFFFFFC1), (int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v18, (uint64x2_t)xmmword_18A640630)), (int8x8_t)0x100000001)))), vadd_s32(v15, (int32x2_t)vand_s8(v17, (int8x8_t)0x100000001)));
  unsigned int v19 = vadd_s32(*(int32x2_t *)v13.i8, vdup_lane_s32(*(int32x2_t *)v13.i8, 1)).u32[0]
      + ((v12 >> 18) & 1)
      + ((v12 >> 14) & 1)
      + ((v12 >> 37) & 1)
      + ((v12 >> 41) & 1)
      + ((v12 >> 40) & 1)
      + (WORD1(v12) & 1)
      + ((v12 >> 35) & 1)
      + ((v12 >> 19) & 1)
      + ((v12 >> 38) & 1)
      + ((v12 >> 15) & 1)
      + ((v12 >> 9) & 1)
      + (v12 >> 31);
  while (2)
  {
    uint64_t v20 = 1;
    uint64_t v21 = 1;
    uint64_t v22 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v19;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v21 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v23 = v19 > 0x1A;
        char v24 = v23 & ~(_BYTE)v11 | v9;
        char v25 = v23 | v11;
        long long v26 = (int *)MEMORY[0x1E4F940E8];
        if (((v23 | v11) | v8)) {
          long long v27 = 0;
        }
        else {
          long long v27 = a3;
        }
        int v145 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_433;
        }
        char v146 = v25 | v24;
        char v149 = (v27 == 0) | v25;
        long long v28 = (int *)MEMORY[0x1E4F940C8];
        long long v29 = (int *)MEMORY[0x1E4F940B8];
        char v147 = v23 & ~(_BYTE)v11 | v9;
        char v148 = v23 | v11;
        break;
      default:
        ++v19;
LABEL_7:
        uint64_t v20 = v9;
LABEL_8:
        uint64_t v21 = v10;
        uint64_t v22 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v20;
        uint64_t v10 = v21;
        uint64_t v11 = v22;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v28)) {
      goto LABEL_432;
    }
    char v30 = 0;
    unsigned int v31 = 0;
    unint64_t v32 = 0;
    while (1)
    {
      uint64_t v33 = *v26;
      uint64_t v34 = *(void *)(v3 + v33);
      unint64_t v35 = v34 + 1;
      if (v34 == -1 || v35 > *(void *)(v3 + *v6)) {
        break;
      }
      char v36 = *(unsigned char *)(*(void *)(v3 + *v29) + v34);
      *(void *)(v3 + v33) = v35;
      v32 |= (unint64_t)(v36 & 0x7F) << v30;
      if ((v36 & 0x80) == 0) {
        goto LABEL_25;
      }
      v30 += 7;
      BOOL v37 = v31++ >= 9;
      if (v37)
      {
        unint64_t v32 = 0;
        int v38 = *(unsigned __int8 *)(v3 + *v28);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v28) = 1;
LABEL_25:
    int v38 = *(unsigned __int8 *)(v3 + *v28);
    if (*(unsigned char *)(v3 + *v28)) {
      unint64_t v32 = 0;
    }
LABEL_27:
    int v39 = v32 & 7;
    if (v38 || v39 == 4)
    {
LABEL_432:
      int v145 = 1;
LABEL_433:
      if ((v24 & 1) == 0) {
        goto LABEL_435;
      }
LABEL_434:
      *(void *)(a1 + 388) |= 0x200uLL;
      goto LABEL_435;
    }
    unint64_t v41 = v32 >> 3;
    BOOL v42 = v25;
    if ((v149 & 1) == 0)
    {
      uint64_t v43 = v27;
      do
      {
        int v45 = *v43++;
        int v44 = v45;
        BOOL v42 = v45 != 0;
        if (v45) {
          BOOL v46 = v44 == v41;
        }
        else {
          BOOL v46 = 1;
        }
      }
      while (!v46);
    }
    switch((int)v41)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_336;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        while (2)
        {
          uint64_t v50 = *v26;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v28) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v29) + v51);
            *(void *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v37 = v48++ >= 9;
              if (v37)
              {
                LODWORD(v49) = 0;
                goto LABEL_341;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v28)) {
          LODWORD(v49) = 0;
        }
LABEL_341:
        uint64_t v128 = 380;
        goto LABEL_366;
      case 2:
        if (!v42 || (*(unsigned char *)(a1 + 391) & 0x20) != 0) {
          goto LABEL_334;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEORoute);
        if (!GEORouteReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsRoute:](a1, v54);
        goto LABEL_276;
      case 3:
        if (!v42 || (*(unsigned char *)(a1 + 391) & 8) != 0) {
          goto LABEL_334;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEOPlaceSearchResponse);
        if (!GEOPlaceSearchResponseReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsPlaceSearchResponse:](a1, v54);
        goto LABEL_276;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_336;
        }
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v49 = 0;
        *(void *)(a1 + 388) |= 8uLL;
        while (2)
        {
          uint64_t v61 = *v26;
          uint64_t v62 = *(void *)(v3 + v61);
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v28) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(v3 + *v29) + v62);
            *(void *)(v3 + v61) = v63;
            v49 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              BOOL v37 = v60++ >= 9;
              if (v37)
              {
                LODWORD(v49) = 0;
                goto LABEL_345;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v28)) {
          LODWORD(v49) = 0;
        }
LABEL_345:
        uint64_t v128 = 372;
        goto LABEL_366;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_336;
        }
        char v65 = 0;
        unsigned int v66 = 0;
        uint64_t v67 = 0;
        *(void *)(a1 + 388) |= 0x100uLL;
        while (2)
        {
          uint64_t v68 = *v26;
          uint64_t v69 = *(void *)(v3 + v68);
          unint64_t v70 = v69 + 1;
          if (v69 == -1 || v70 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v28) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(v3 + *v29) + v69);
            *(void *)(v3 + v68) = v70;
            v67 |= (unint64_t)(v71 & 0x7F) << v65;
            if (v71 < 0)
            {
              v65 += 7;
              BOOL v37 = v66++ >= 9;
              if (v37)
              {
                uint64_t v67 = 0;
                goto LABEL_349;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v28)) {
          uint64_t v67 = 0;
        }
LABEL_349:
        BOOL v129 = v67 != 0;
        uint64_t v130 = 387;
        goto LABEL_375;
      case 6:
        if (!v42) {
          goto LABEL_336;
        }
        if ((*(unsigned char *)(a1 + 390) & 0x10) == 0)
        {
          uint64_t v72 = PBReaderReadData();
          uint64_t v73 = 160;
          goto LABEL_291;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v131 = *(void *)(a1 + 388) << 43;
        goto LABEL_416;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_336;
        }
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v76 = 0;
        *(void *)(a1 + 388) |= 0x40uLL;
        while (2)
        {
          uint64_t v77 = *v26;
          uint64_t v78 = *(void *)(v3 + v77);
          unint64_t v79 = v78 + 1;
          if (v78 == -1 || v79 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v28) = 1;
          }
          else
          {
            char v80 = *(unsigned char *)(*(void *)(v3 + *v29) + v78);
            *(void *)(v3 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              BOOL v37 = v75++ >= 9;
              if (v37)
              {
                uint64_t v76 = 0;
                goto LABEL_353;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v28)) {
          uint64_t v76 = 0;
        }
LABEL_353:
        BOOL v129 = v76 != 0;
        uint64_t v130 = 385;
        goto LABEL_375;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_336;
        }
        char v81 = 0;
        unsigned int v82 = 0;
        uint64_t v49 = 0;
        *(void *)(a1 + 388) |= 2uLL;
        while (2)
        {
          uint64_t v83 = *v26;
          uint64_t v84 = *(void *)(v3 + v83);
          unint64_t v85 = v84 + 1;
          if (v84 == -1 || v85 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v28) = 1;
          }
          else
          {
            char v86 = *(unsigned char *)(*(void *)(v3 + *v29) + v84);
            *(void *)(v3 + v83) = v85;
            v49 |= (unint64_t)(v86 & 0x7F) << v81;
            if (v86 < 0)
            {
              v81 += 7;
              BOOL v37 = v82++ >= 9;
              if (v37)
              {
                LODWORD(v49) = 0;
                goto LABEL_357;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v28)) {
          LODWORD(v49) = 0;
        }
LABEL_357:
        uint64_t v128 = 364;
        goto LABEL_366;
      case 9:
        if (!v42 || (*(unsigned char *)(a1 + 391) & 1) != 0) {
          goto LABEL_334;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEORouteIncident);
        if (!GEORouteIncidentReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsIncidentsOnRoutes:](a1, v54);
        goto LABEL_276;
      case 10:
        if (!v42 || (*(unsigned char *)(a1 + 390) & 0x80) != 0) {
          goto LABEL_334;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEORouteIncident);
        if (!GEORouteIncidentReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsIncidentsOffRoutes:](a1, v54);
        goto LABEL_276;
      case 11:
        if (!v42 || (*(unsigned char *)(a1 + 389) & 4) != 0) {
          goto LABEL_334;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_483;
        }
        -[GEODirectionsResponse _reserveProblemDetails:](a1, 1uLL);
        if (!GEOProblemDetailReadAllFrom(*(void *)(a1 + 24) + 12 * *(void *)(a1 + 32), v3)) {
          goto LABEL_483;
        }
        PBReaderRecallMark();
        uint64_t v87 = 32;
        uint64_t v88 = *(void *)(a1 + 32) + 1;
LABEL_281:
        *(void *)(a1 + v87) = v88;
        goto LABEL_417;
      case 12:
      case 28:
LABEL_58:
        if ((v24 & 1) == 0 || (*(unsigned char *)(a1 + 389) & 2) != 0) {
          goto LABEL_336;
        }
        if (!*(void *)(a1 + 16))
        {
          id v56 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          uint64_t v57 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v56;
        }
        int v58 = PBUnknownFieldAdd();
        long long v26 = (int *)MEMORY[0x1E4F940E8];
        long long v28 = (int *)MEMORY[0x1E4F940C8];
        long long v29 = (int *)MEMORY[0x1E4F940B8];
        if (v58) {
          goto LABEL_419;
        }
        int v145 = 0;
        char v25 = v148;
        goto LABEL_434;
      case 13:
        if (!v42 || (*(unsigned char *)(a1 + 389) & 8) != 0) {
          goto LABEL_336;
        }
        if (v39 != 2)
        {
          char v132 = 0;
          unsigned int v133 = 0;
          uint64_t v134 = 0;
          while (1)
          {
            uint64_t v135 = *v26;
            uint64_t v136 = *(void *)(v3 + v135);
            unint64_t v137 = v136 + 1;
            if (v136 == -1 || v137 > *(void *)(v3 + *v6)) {
              break;
            }
            char v138 = *(unsigned char *)(*(void *)(v3 + *v29) + v136);
            *(void *)(v3 + v135) = v137;
            v134 |= (unint64_t)(v138 & 0x7F) << v132;
            if (v138 < 0)
            {
              v132 += 7;
              BOOL v37 = v133++ >= 9;
              if (!v37) {
                continue;
              }
            }
            goto LABEL_431;
          }
          *(unsigned char *)(v3 + *v28) = 1;
LABEL_431:
          PBRepeatedInt32Add();
          goto LABEL_417;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_483;
        }
        while (1)
        {
          char v89 = (int *)MEMORY[0x1E4F940E8];
          unsigned int v90 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)
            || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]))
          {
            break;
          }
          char v91 = 0;
          unsigned int v92 = 0;
          uint64_t v93 = 0;
          char v94 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v95 = *v89;
            uint64_t v96 = *(void *)(v3 + v95);
            unint64_t v97 = v96 + 1;
            if (v96 == -1 || v97 > *(void *)(v3 + *v6)) {
              break;
            }
            char v98 = *(unsigned char *)(*(void *)(v3 + *v94) + v96);
            *(void *)(v3 + v95) = v97;
            v93 |= (unint64_t)(v98 & 0x7F) << v91;
            if (v98 < 0)
            {
              v91 += 7;
              BOOL v37 = v92++ >= 9;
              if (!v37) {
                continue;
              }
            }
            goto LABEL_138;
          }
          *(unsigned char *)(v3 + *v90) = 1;
LABEL_138:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
        long long v28 = (int *)MEMORY[0x1E4F940C8];
        long long v26 = (int *)MEMORY[0x1E4F940E8];
        goto LABEL_418;
      case 14:
        if (!v42 || (*(unsigned char *)(a1 + 391) & 0x40) != 0) {
          goto LABEL_334;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEOTransitServiceGap);
        if (!GEOTransitServiceGapReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsServiceGap:](a1, v54);
        goto LABEL_276;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_336;
        }
        char v99 = 0;
        unsigned int v100 = 0;
        uint64_t v49 = 0;
        *(void *)(a1 + 388) |= 0x10uLL;
        while (2)
        {
          uint64_t v101 = *v26;
          uint64_t v102 = *(void *)(v3 + v101);
          unint64_t v103 = v102 + 1;
          if (v102 == -1 || v103 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v28) = 1;
          }
          else
          {
            char v104 = *(unsigned char *)(*(void *)(v3 + *v29) + v102);
            *(void *)(v3 + v101) = v103;
            v49 |= (unint64_t)(v104 & 0x7F) << v99;
            if (v104 < 0)
            {
              v99 += 7;
              BOOL v37 = v100++ >= 9;
              if (v37)
              {
                LODWORD(v49) = 0;
                goto LABEL_361;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v28)) {
          LODWORD(v49) = 0;
        }
LABEL_361:
        uint64_t v128 = 376;
        goto LABEL_366;
      case 16:
        if (!v42) {
          goto LABEL_336;
        }
        if ((*(unsigned char *)(a1 + 392) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_483;
          }
          uint64_t v131 = *(void *)(a1 + 388) << 24;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEOPBTransitRoutingIncidentMessage);
        if (!GEOPBTransitRoutingIncidentMessageReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        uint64_t v55 = 312;
        goto LABEL_287;
      case 17:
        if (!v42) {
          goto LABEL_336;
        }
        if ((*(unsigned char *)(a1 + 390) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_483;
          }
          uint64_t v131 = *(void *)(a1 + 388) << 42;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEORouteDisplayHints);
        if (!GEORouteDisplayHintsReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        uint64_t v55 = 168;
        goto LABEL_287;
      case 18:
        if (!v42) {
          goto LABEL_336;
        }
        if ((*(unsigned char *)(a1 + 392) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_483;
          }
          uint64_t v131 = *(void *)(a1 + 388) << 29;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEOStyleAttributes);
        if (!GEOStyleAttributesReadAllFrom((uint64_t)v54, (void *)v3)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        uint64_t v55 = 272;
        goto LABEL_287;
      case 19:
        if (!v42) {
          goto LABEL_336;
        }
        if ((*(unsigned char *)(a1 + 392) & 1) == 0)
        {
          uint64_t v72 = PBReaderReadData();
          uint64_t v73 = 256;
          goto LABEL_291;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v131 = *(void *)(a1 + 388) << 31;
        goto LABEL_416;
      case 20:
        if (!v42) {
          goto LABEL_336;
        }
        if ((*(unsigned char *)(a1 + 390) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_483;
          }
          uint64_t v131 = *(void *)(a1 + 388) << 41;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEOAlert);
        if (!GEOAlertReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        uint64_t v55 = 176;
        goto LABEL_287;
      case 21:
        if ((v8 & 1) == 0) {
          goto LABEL_336;
        }
        char v105 = 0;
        unsigned int v106 = 0;
        uint64_t v49 = 0;
        *(void *)(a1 + 388) |= 4uLL;
        while (2)
        {
          uint64_t v107 = *v26;
          uint64_t v108 = *(void *)(v3 + v107);
          unint64_t v109 = v108 + 1;
          if (v108 == -1 || v109 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v28) = 1;
          }
          else
          {
            char v110 = *(unsigned char *)(*(void *)(v3 + *v29) + v108);
            *(void *)(v3 + v107) = v109;
            v49 |= (unint64_t)(v110 & 0x7F) << v105;
            if (v110 < 0)
            {
              v105 += 7;
              BOOL v37 = v106++ >= 9;
              if (v37)
              {
                LODWORD(v49) = 0;
                goto LABEL_365;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v28)) {
          LODWORD(v49) = 0;
        }
LABEL_365:
        uint64_t v128 = 368;
LABEL_366:
        *(_DWORD *)(a1 + v128) = v49;
        goto LABEL_419;
      case 22:
        if (!v42) {
          goto LABEL_336;
        }
        if ((*(unsigned char *)(a1 + 390) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_483;
          }
          uint64_t v131 = *(void *)(a1 + 388) << 46;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEOPDDatasetABStatus);
        if (!GEOPDDatasetABStatusReadAllFrom((uint64_t)v54, (void *)v3)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        uint64_t v55 = 136;
        goto LABEL_287;
      case 23:
        if (!v42 || (*(unsigned char *)(a1 + 392) & 0x10) != 0) {
          goto LABEL_334;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEOTrafficCamera);
        if (!GEOTrafficCameraReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsTrafficCamera:](a1, v54);
        goto LABEL_276;
      case 24:
        if (!v42) {
          goto LABEL_336;
        }
        if ((*(unsigned char *)(a1 + 391) & 4) == 0)
        {
          uint64_t v72 = PBReaderReadData();
          uint64_t v73 = 208;
          goto LABEL_291;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v131 = *(void *)(a1 + 388) << 37;
        goto LABEL_416;
      case 25:
        if ((v8 & 1) == 0) {
          goto LABEL_336;
        }
        char v111 = 0;
        unsigned int v112 = 0;
        uint64_t v113 = 0;
        *(void *)(a1 + 388) |= 0x80uLL;
        while (2)
        {
          uint64_t v114 = *v26;
          uint64_t v115 = *(void *)(v3 + v114);
          unint64_t v116 = v115 + 1;
          if (v115 == -1 || v116 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v28) = 1;
          }
          else
          {
            char v117 = *(unsigned char *)(*(void *)(v3 + *v29) + v115);
            *(void *)(v3 + v114) = v116;
            v113 |= (unint64_t)(v117 & 0x7F) << v111;
            if (v117 < 0)
            {
              v111 += 7;
              BOOL v37 = v112++ >= 9;
              if (v37)
              {
                uint64_t v113 = 0;
                goto LABEL_370;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v28)) {
          uint64_t v113 = 0;
        }
LABEL_370:
        BOOL v129 = v113 != 0;
        uint64_t v130 = 386;
        goto LABEL_375;
      case 26:
        if (!v42) {
          goto LABEL_336;
        }
        if ((*(unsigned char *)(a1 + 392) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_483;
          }
          uint64_t v131 = *(void *)(a1 + 388) << 30;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEOSnapScoreMetadata);
        if (!GEOSnapScoreMetadataReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        uint64_t v55 = 264;
        goto LABEL_287;
      case 27:
        if ((v8 & 1) == 0) {
          goto LABEL_336;
        }
        char v118 = 0;
        unsigned int v119 = 0;
        uint64_t v120 = 0;
        *(void *)(a1 + 388) |= 0x20uLL;
        while (2)
        {
          uint64_t v121 = *v26;
          uint64_t v122 = *(void *)(v3 + v121);
          unint64_t v123 = v122 + 1;
          if (v122 == -1 || v123 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v28) = 1;
          }
          else
          {
            char v124 = *(unsigned char *)(*(void *)(v3 + *v29) + v122);
            *(void *)(v3 + v121) = v123;
            v120 |= (unint64_t)(v124 & 0x7F) << v118;
            if (v124 < 0)
            {
              v118 += 7;
              BOOL v37 = v119++ >= 9;
              if (v37)
              {
                uint64_t v120 = 0;
                goto LABEL_374;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v28)) {
          uint64_t v120 = 0;
        }
LABEL_374:
        BOOL v129 = v120 != 0;
        uint64_t v130 = 384;
LABEL_375:
        *(unsigned char *)(a1 + v130) = v129;
        goto LABEL_419;
      case 29:
        if (!v42) {
          goto LABEL_336;
        }
        if ((*(unsigned char *)(a1 + 390) & 4) == 0)
        {
          uint64_t v72 = PBReaderReadString();
          uint64_t v73 = 144;
          goto LABEL_291;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v131 = *(void *)(a1 + 388) << 45;
        goto LABEL_416;
      case 30:
        if (!v42 || (*(unsigned char *)(a1 + 389) & 0x40) != 0) {
          goto LABEL_334;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEOArrivalParameters);
        if (!GEOArrivalParametersReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsArrivalParameters:](a1, v54);
        goto LABEL_276;
      case 31:
        if (!v42 || (*(unsigned char *)(a1 + 392) & 0x20) != 0) {
          goto LABEL_334;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEOTrafficSignal);
        if (!GEOTrafficSignalReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsTrafficSignal:](a1, v54);
        goto LABEL_276;
      case 32:
        if (!v42) {
          goto LABEL_336;
        }
        if ((*(unsigned char *)(a1 + 393) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_483;
          }
          uint64_t v131 = *(void *)(a1 + 388) << 22;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEOTransitRouteUpdateConfiguration);
        if (!GEOTransitRouteUpdateConfigurationReadAllFrom((uint64_t)v54, (void *)v3)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        uint64_t v55 = 328;
        goto LABEL_287;
      case 33:
        if (!v42 || (*(unsigned char *)(a1 + 393) & 8) != 0) {
          goto LABEL_334;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEOWaypointRoute);
        if (!GEOWaypointRouteReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsWaypointRoute:](a1, v54);
        goto LABEL_276;
      case 34:
        if (!v42 || (*(unsigned char *)(a1 + 393) & 1) != 0)
        {
LABEL_334:
          char v126 = PBReaderSkipValueWithTag();
          long long v26 = (int *)MEMORY[0x1E4F940E8];
          long long v28 = (int *)MEMORY[0x1E4F940C8];
          long long v29 = (int *)MEMORY[0x1E4F940B8];
          if ((v126 & 1) == 0) {
            goto LABEL_483;
          }
          goto LABEL_419;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEOPBTransitPaymentMethodSuggestion);
        if (!GEOPBTransitPaymentMethodSuggestionReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsTransitPaymentMethodSuggestion:](a1, v54);
LABEL_276:

        goto LABEL_417;
      case 35:
        if (!v42) {
          goto LABEL_336;
        }
        if ((*(unsigned char *)(a1 + 389) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_483;
          }
          uint64_t v131 = *(void *)(a1 + 388) << 50;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEODirectionsRequestResponseAnalyticsData);
        if (!GEODirectionsRequestResponseAnalyticsDataReadAllFrom((uint64_t)v54, (void *)v3)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        uint64_t v55 = 104;
        goto LABEL_287;
      case 36:
        if (!v42) {
          goto LABEL_336;
        }
        if ((*(unsigned char *)(a1 + 393) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_483;
          }
          uint64_t v131 = *(void *)(a1 + 388) << 21;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEOUUID);
        if (!GEOUUIDReadAllFrom((uint64_t)v54, (void *)v3)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        uint64_t v55 = 336;
        goto LABEL_287;
      case 37:
        if (!v42) {
          goto LABEL_336;
        }
        if ((*(unsigned char *)(a1 + 389) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_483;
          }
          uint64_t v131 = *(void *)(a1 + 388) << 51;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEOAdvisoriesInfo);
        if (!GEOAdvisoriesInfoReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        uint64_t v55 = 96;
        goto LABEL_287;
      case 38:
        if (!v42)
        {
LABEL_336:
          char v127 = PBReaderSkipValueWithTag();
          long long v29 = (int *)MEMORY[0x1E4F940B8];
          long long v28 = (int *)MEMORY[0x1E4F940C8];
          long long v26 = (int *)MEMORY[0x1E4F940E8];
          if ((v127 & 1) == 0) {
            goto LABEL_483;
          }
          goto LABEL_419;
        }
        if ((*(unsigned char *)(a1 + 391) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_483;
          }
          uint64_t v131 = *(void *)(a1 + 388) << 35;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_483;
        }
        uint64_t v54 = objc_alloc_init(GEOCommonResponseAttributes);
        if (!GEOCommonResponseAttributesReadAllFrom((uint64_t)v54, (void *)v3)) {
          goto LABEL_482;
        }
        PBReaderRecallMark();
        uint64_t v55 = 224;
        goto LABEL_287;
      default:
        switch((int)v41)
        {
          case 952:
            if (!v42 || (*(unsigned char *)(a1 + 391) & 2) != 0) {
              goto LABEL_334;
            }
            PBReaderReadString();
            uint64_t v54 = (GEORoute *)objc_claimAutoreleasedReturnValue();
            if (v54) {
              -[GEODirectionsResponse _addNoFlagsInternalError:](a1, v54);
            }
            goto LABEL_276;
          case 953:
            if (!v42) {
              goto LABEL_336;
            }
            if ((*(unsigned char *)(a1 + 391) & 0x80) == 0)
            {
              uint64_t v72 = PBReaderReadString();
              uint64_t v73 = 248;
              goto LABEL_291;
            }
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_483;
            }
            uint64_t v131 = *(void *)(a1 + 388) << 32;
            goto LABEL_416;
          case 954:
            if (!v42) {
              goto LABEL_336;
            }
            if ((*(unsigned char *)(a1 + 390) & 1) == 0)
            {
              uint64_t v72 = PBReaderReadString();
              uint64_t v73 = 128;
              goto LABEL_291;
            }
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_483;
            }
            uint64_t v131 = *(void *)(a1 + 388) << 47;
            goto LABEL_416;
          case 955:
            if (!v42 || (*(unsigned char *)(a1 + 392) & 8) != 0) {
              goto LABEL_334;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_483;
            }
            uint64_t v54 = objc_alloc_init(GEOTransitSuggestedRoute);
            if (!GEOTransitSuggestedRouteReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
              goto LABEL_482;
            }
            PBReaderRecallMark();
            -[GEODirectionsResponse _addNoFlagsSuggestedRoute:](a1, v54);
            goto LABEL_276;
          case 956:
          case 957:
          case 960:
            goto LABEL_58;
          case 958:
            if ((v8 & 1) == 0) {
              goto LABEL_334;
            }
            if (!PBReaderPlaceMark() || (GEOTimepointReadAllFrom(a1 + 72, v3) & 1) == 0) {
              goto LABEL_483;
            }
            PBReaderRecallMark();
            uint64_t v87 = 388;
            uint64_t v88 = *(void *)(a1 + 388) | 1;
            goto LABEL_281;
          case 959:
            if (!v42) {
              goto LABEL_336;
            }
            if ((*(unsigned char *)(a1 + 390) & 8) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_483;
              }
              uint64_t v131 = *(void *)(a1 + 388) << 44;
LABEL_416:
              v7 += v131 >> 63;
              goto LABEL_417;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_483;
            }
            uint64_t v54 = objc_alloc_init(GEOTransitDecoderData);
            if (GEOTransitDecoderDataReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
            {
              PBReaderRecallMark();
              uint64_t v55 = 152;
LABEL_287:
              uint64_t v125 = *(void **)(a1 + v55);
              *(void *)(a1 + v55) = v54;
LABEL_292:

              --v7;
LABEL_417:
              long long v26 = (int *)MEMORY[0x1E4F940E8];
              long long v28 = (int *)MEMORY[0x1E4F940C8];
LABEL_418:
              long long v29 = (int *)MEMORY[0x1E4F940B8];
LABEL_419:
              if (!(v146 & 1 | (v7 != 0)))
              {
                int v145 = 1;
                goto LABEL_484;
              }
              char v24 = v147;
              char v25 = v148;
              if (*(void *)(v3 + *v26) >= *(void *)(v3 + *v6)) {
                goto LABEL_432;
              }
              continue;
            }
LABEL_482:

LABEL_483:
            int v145 = 0;
LABEL_484:
            char v25 = v148;
            if (v147) {
              goto LABEL_434;
            }
LABEL_435:
            if (v25 & 1 | ((v145 & 1) == 0))
            {
              *(void *)(a1 + 388) |= 0xFFFFFFFFC00uLL;
            }
            else if (v27)
            {
              while (1)
              {
                int v140 = *v27++;
                int v139 = v140;
                uint64_t v141 = 0x20000000;
                switch(v140)
                {
                  case 0:
                    goto LABEL_475;
                  case 1:
                  case 4:
                  case 5:
                  case 7:
                  case 8:
                  case 12:
                  case 15:
                  case 21:
                  case 25:
                  case 27:
                  case 28:
                    continue;
                  case 2:
                    goto LABEL_474;
                  case 3:
                    uint64_t v141 = 0x8000000;
                    goto LABEL_474;
                  case 6:
                    uint64_t v141 = 0x100000;
                    goto LABEL_474;
                  case 9:
                    uint64_t v141 = 0x1000000;
                    goto LABEL_474;
                  case 10:
                    uint64_t v141 = 0x800000;
                    goto LABEL_474;
                  case 11:
                    uint64_t v141 = 1024;
                    goto LABEL_474;
                  case 13:
                    uint64_t v141 = 2048;
                    goto LABEL_474;
                  case 14:
                    uint64_t v141 = 0x40000000;
                    goto LABEL_474;
                  case 16:
                    uint64_t v141 = 0x8000000000;
                    goto LABEL_474;
                  case 17:
                    uint64_t v141 = 0x200000;
                    goto LABEL_474;
                  case 18:
                    uint64_t v141 = 0x400000000;
                    goto LABEL_474;
                  case 19:
                    uint64_t v141 = 0x100000000;
                    goto LABEL_474;
                  case 20:
                    uint64_t v141 = 0x400000;
                    goto LABEL_474;
                  case 22:
                    uint64_t v141 = 0x20000;
                    goto LABEL_474;
                  case 23:
                    uint64_t v141 = 0x1000000000;
                    goto LABEL_474;
                  case 24:
                    uint64_t v141 = 0x4000000;
                    goto LABEL_474;
                  case 26:
                    uint64_t v141 = 0x200000000;
                    goto LABEL_474;
                  case 29:
                    uint64_t v141 = 0x40000;
                    goto LABEL_474;
                  case 30:
                    uint64_t v141 = 0x4000;
                    goto LABEL_474;
                  case 31:
                    uint64_t v141 = 0x2000000000;
                    goto LABEL_474;
                  case 32:
                    uint64_t v141 = 0x20000000000;
                    goto LABEL_474;
                  case 33:
                    uint64_t v141 = 0x80000000000;
                    goto LABEL_474;
                  case 34:
                    uint64_t v141 = 0x10000000000;
                    goto LABEL_474;
                  case 35:
                    uint64_t v141 = 0x2000;
                    goto LABEL_474;
                  case 36:
                    uint64_t v141 = 0x40000000000;
                    goto LABEL_474;
                  case 37:
                    uint64_t v141 = 4096;
                    goto LABEL_474;
                  case 38:
                    uint64_t v141 = 0x10000000;
                    goto LABEL_474;
                  default:
                    int v142 = v139 - 952;
                    switch(v142)
                    {
                      case 0:
                        uint64_t v141 = 0x2000000;
                        break;
                      case 1:
                        uint64_t v141 = 0x80000000;
                        break;
                      case 2:
                        uint64_t v141 = 0x10000;
                        break;
                      case 3:
                        uint64_t v141 = 0x800000000;
                        break;
                      case 4:
                      case 5:
                      case 6:
                      case 8:
                        continue;
                      case 7:
                        uint64_t v141 = 0x80000;
                        break;
                      case 9:
                        uint64_t v141 = 0x4000000000;
                        break;
                      default:
                        if (v142 != 1201) {
                          continue;
                        }
                        uint64_t v141 = 0x8000;
                        break;
                    }
LABEL_474:
                    *(void *)(a1 + 388) |= v141;
                    break;
                }
              }
            }
LABEL_475:
            if (v145)
            {
              uint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
              if ((v25 & 1) == 0) {
                return v3;
              }
LABEL_479:
              uint64_t v143 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = 0;
            }
            else
            {
              uint64_t v3 = 0;
              if (v25) {
                goto LABEL_479;
              }
            }
            return v3;
          case 961:
            if (!v42) {
              goto LABEL_336;
            }
            if ((*(unsigned char *)(a1 + 392) & 0x40) == 0)
            {
              uint64_t v72 = PBReaderReadString();
              uint64_t v73 = 304;
LABEL_291:
              uint64_t v125 = *(void **)(a1 + v73);
              *(void *)(a1 + v73) = v72;
              goto LABEL_292;
            }
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_483;
            }
            uint64_t v131 = *(void *)(a1 + 388) << 25;
            goto LABEL_416;
          default:
            if (v41 != 1201) {
              goto LABEL_58;
            }
            if (!v42) {
              goto LABEL_336;
            }
            if ((*(unsigned char *)(a1 + 389) & 0x80) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_483;
              }
              uint64_t v131 = *(void *)(a1 + 388) << 48;
              goto LABEL_416;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_483;
            }
            uint64_t v54 = objc_alloc_init(GEOClientMetrics);
            if (!GEOClientMetricsReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
              goto LABEL_482;
            }
            PBReaderRecallMark();
            uint64_t v55 = 120;
            goto LABEL_287;
        }
    }
  }
}

void sub_18A0C5D20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C60E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C6750(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C68C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C6D64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C7128(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C74EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C79E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C7ECC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C8310(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C8480(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C85F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C8764(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C88D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C8AC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C8C3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C9000(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C91F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C9448(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C95BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C9980(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C9D44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0C9EB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0CA278(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0CA3EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0CA558(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0CA6CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0CAA90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0CAC04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0CAD78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0CB1D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0CB344(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0CF128(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEODirectionsResponseCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v113 = *MEMORY[0x1E4F143B8];
  long long v98 = 0u;
  long long v99 = 0u;
  long long v100 = 0u;
  long long v101 = 0u;
  id v2 = *(id *)(a1 + 232);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v98 objects:v112 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v99;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v99 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v98 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v98 objects:v112 count:16];
    }
    while (v4);
  }

  long long v96 = 0u;
  long long v97 = 0u;
  long long v94 = 0u;
  long long v95 = 0u;
  id v7 = *(id *)(a1 + 344);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v94 objects:v111 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v95;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v95 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v94 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v94 objects:v111 count:16];
    }
    while (v9);
  }

  long long v92 = 0u;
  long long v93 = 0u;
  long long v90 = 0u;
  long long v91 = 0u;
  id v12 = *(id *)(a1 + 216);
  uint64_t v13 = [v12 countByEnumeratingWithState:&v90 objects:v110 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v91;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v91 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v90 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v90 objects:v110 count:16];
    }
    while (v14);
  }

  long long v88 = 0u;
  long long v89 = 0u;
  long long v86 = 0u;
  long long v87 = 0u;
  id v17 = *(id *)(a1 + 192);
  uint64_t v18 = [v17 countByEnumeratingWithState:&v86 objects:v109 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v87;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v87 != v20) {
          objc_enumerationMutation(v17);
        }
        [*(id *)(*((void *)&v86 + 1) + 8 * v21++) readAll:1];
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v86 objects:v109 count:16];
    }
    while (v19);
  }

  long long v84 = 0u;
  long long v85 = 0u;
  long long v82 = 0u;
  long long v83 = 0u;
  id v22 = *(id *)(a1 + 184);
  uint64_t v23 = [v22 countByEnumeratingWithState:&v82 objects:v108 count:16];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)v83;
    do
    {
      uint64_t v26 = 0;
      do
      {
        if (*(void *)v83 != v25) {
          objc_enumerationMutation(v22);
        }
        [*(id *)(*((void *)&v82 + 1) + 8 * v26++) readAll:1];
      }
      while (v24 != v26);
      uint64_t v24 = [v22 countByEnumeratingWithState:&v82 objects:v108 count:16];
    }
    while (v24);
  }

  long long v80 = 0u;
  long long v81 = 0u;
  long long v78 = 0u;
  long long v79 = 0u;
  id v27 = *(id *)(a1 + 240);
  uint64_t v28 = [v27 countByEnumeratingWithState:&v78 objects:v107 count:16];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = *(void *)v79;
    do
    {
      uint64_t v31 = 0;
      do
      {
        if (*(void *)v79 != v30) {
          objc_enumerationMutation(v27);
        }
        [*(id *)(*((void *)&v78 + 1) + 8 * v31++) readAll:1];
      }
      while (v29 != v31);
      uint64_t v29 = [v27 countByEnumeratingWithState:&v78 objects:v107 count:16];
    }
    while (v29);
  }

  -[GEOPBTransitRoutingIncidentMessage readAll:](*(void *)(a1 + 312), 1);
  [*(id *)(a1 + 168) readAll:1];
  [*(id *)(a1 + 272) readAll:1];
  -[GEOAlert readAll:](*(void *)(a1 + 176), 1);
  [*(id *)(a1 + 136) readAll:1];
  long long v76 = 0u;
  long long v77 = 0u;
  long long v74 = 0u;
  long long v75 = 0u;
  id v32 = *(id *)(a1 + 288);
  uint64_t v33 = [v32 countByEnumeratingWithState:&v74 objects:v106 count:16];
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = *(void *)v75;
    do
    {
      uint64_t v36 = 0;
      do
      {
        if (*(void *)v75 != v35) {
          objc_enumerationMutation(v32);
        }
        [*(id *)(*((void *)&v74 + 1) + 8 * v36++) readAll:1];
      }
      while (v34 != v36);
      uint64_t v34 = [v32 countByEnumeratingWithState:&v74 objects:v106 count:16];
    }
    while (v34);
  }

  -[GEOSnapScoreMetadata readAll:](*(void *)(a1 + 264), 1);
  long long v72 = 0u;
  long long v73 = 0u;
  long long v70 = 0u;
  long long v71 = 0u;
  id v37 = *(id *)(a1 + 112);
  uint64_t v38 = [v37 countByEnumeratingWithState:&v70 objects:v105 count:16];
  if (v38)
  {
    uint64_t v39 = v38;
    uint64_t v40 = *(void *)v71;
    do
    {
      uint64_t v41 = 0;
      do
      {
        if (*(void *)v71 != v40) {
          objc_enumerationMutation(v37);
        }
        [*(id *)(*((void *)&v70 + 1) + 8 * v41++) readAll:1];
      }
      while (v39 != v41);
      uint64_t v39 = [v37 countByEnumeratingWithState:&v70 objects:v105 count:16];
    }
    while (v39);
  }

  long long v68 = 0u;
  long long v69 = 0u;
  long long v66 = 0u;
  long long v67 = 0u;
  id v42 = *(id *)(a1 + 296);
  uint64_t v43 = [v42 countByEnumeratingWithState:&v66 objects:v104 count:16];
  if (v43)
  {
    uint64_t v44 = v43;
    uint64_t v45 = *(void *)v67;
    do
    {
      uint64_t v46 = 0;
      do
      {
        if (*(void *)v67 != v45) {
          objc_enumerationMutation(v42);
        }
        [*(id *)(*((void *)&v66 + 1) + 8 * v46++) readAll:1];
      }
      while (v44 != v46);
      uint64_t v44 = [v42 countByEnumeratingWithState:&v66 objects:v104 count:16];
    }
    while (v44);
  }

  [*(id *)(a1 + 328) readAll:1];
  long long v64 = 0u;
  long long v65 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  id v47 = *(id *)(a1 + 320);
  uint64_t v48 = [v47 countByEnumeratingWithState:&v62 objects:v103 count:16];
  if (v48)
  {
    uint64_t v49 = v48;
    uint64_t v50 = *(void *)v63;
    do
    {
      uint64_t v51 = 0;
      do
      {
        if (*(void *)v63 != v50) {
          objc_enumerationMutation(v47);
        }
        [*(id *)(*((void *)&v62 + 1) + 8 * v51++) readAll:1];
      }
      while (v49 != v51);
      uint64_t v49 = [v47 countByEnumeratingWithState:&v62 objects:v103 count:16];
    }
    while (v49);
  }

  [*(id *)(a1 + 104) readAll:1];
  [*(id *)(a1 + 96) readAll:1];
  [*(id *)(a1 + 224) readAll:1];
  long long v60 = 0u;
  long long v61 = 0u;
  long long v58 = 0u;
  long long v59 = 0u;
  id v52 = *(id *)(a1 + 280);
  uint64_t v53 = [v52 countByEnumeratingWithState:&v58 objects:v102 count:16];
  if (v53)
  {
    uint64_t v54 = v53;
    uint64_t v55 = *(void *)v59;
    do
    {
      uint64_t v56 = 0;
      do
      {
        if (*(void *)v59 != v55) {
          objc_enumerationMutation(v52);
        }
        objc_msgSend(*(id *)(*((void *)&v58 + 1) + 8 * v56++), "readAll:", 1, (void)v58);
      }
      while (v54 != v56);
      uint64_t v54 = [v52 countByEnumeratingWithState:&v58 objects:v102 count:16];
    }
    while (v54);
  }

  [*(id *)(a1 + 152) readAll:1];
  return [*(id *)(a1 + 120) readAll:1];
}

uint64_t GEODirectionsResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 356))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEODirectionsResponseReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 360));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 352) = [v8 position];
  *(_DWORD *)(a1 + 356) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEODirectionsResponseReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEODirectionsResponseReadAllFrom_initialTag;
  }
  uint64_t Specified = GEODirectionsResponseReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEODirectionsResponseCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 360));
  return Specified;
}

void sub_18A0CFA84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEODirectionsResponseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEODirectionsResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A0CFAE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEODirectionsResponseIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = 0;
    uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_233;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v2;
        uint64_t v11 = *(void *)&a1[v10];
        unint64_t v12 = v11 + 1;
        if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        BOOL v14 = v8++ >= 9;
        if (v14)
        {
          unint64_t v9 = 0;
          int v15 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v15 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v16 = v9 & 7;
      if (v15 || v16 == 4) {
        goto LABEL_233;
      }
      unint64_t v18 = v9 >> 3;
      switch((v9 >> 3))
      {
        case 1u:
          if (v5 || (v9 & 7) != 0) {
            goto LABEL_240;
          }
          unsigned int v19 = 0;
          while (1)
          {
            uint64_t v20 = *v2;
            uint64_t v21 = *(void *)&a1[v20];
            unint64_t v22 = v21 + 1;
            if (v21 == -1 || v22 > *(void *)&a1[*v3]) {
              break;
            }
            int v23 = *(char *)(*(void *)&a1[*v6] + v21);
            *(void *)&a1[v20] = v22;
            int v5 = 1;
            if (v23 < 0)
            {
              BOOL v24 = v19++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_219;
          }
          int v5 = 1;
          a1[*v4] = 1;
          goto LABEL_219;
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORouteIsValid(a1)) {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 3u:
          if (v16 != 2 || !PBReaderPlaceMark() || (GEOPlaceSearchResponseIsValid(a1) & 1) == 0) {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 4u:
          if ((v9 & 7) != 0) {
            goto LABEL_240;
          }
          unsigned int v25 = 0;
          while (1)
          {
            uint64_t v26 = *v2;
            uint64_t v27 = *(void *)&a1[v26];
            unint64_t v28 = v27 + 1;
            if (v27 == -1 || v28 > *(void *)&a1[*v3]) {
              goto LABEL_162;
            }
            int v29 = *(char *)(*(void *)&a1[*v6] + v27);
            *(void *)&a1[v26] = v28;
            if (v29 < 0)
            {
              BOOL v24 = v25++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_219;
          }
        case 5u:
          if ((v9 & 7) != 0) {
            goto LABEL_240;
          }
          unsigned int v30 = 0;
          while (1)
          {
            uint64_t v31 = *v2;
            uint64_t v32 = *(void *)&a1[v31];
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)&a1[*v3]) {
              goto LABEL_162;
            }
            int v34 = *(char *)(*(void *)&a1[*v6] + v32);
            *(void *)&a1[v31] = v33;
            if (v34 < 0)
            {
              BOOL v24 = v30++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_219;
          }
        case 6u:
          if (v16 == 2) {
            goto LABEL_218;
          }
          goto LABEL_240;
        case 7u:
          if ((v9 & 7) != 0) {
            goto LABEL_240;
          }
          unsigned int v35 = 0;
          while (1)
          {
            uint64_t v36 = *v2;
            uint64_t v37 = *(void *)&a1[v36];
            unint64_t v38 = v37 + 1;
            if (v37 == -1 || v38 > *(void *)&a1[*v3]) {
              goto LABEL_162;
            }
            int v39 = *(char *)(*(void *)&a1[*v6] + v37);
            *(void *)&a1[v36] = v38;
            if (v39 < 0)
            {
              BOOL v24 = v35++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_219;
          }
        case 8u:
          if ((v9 & 7) != 0) {
            goto LABEL_240;
          }
          unsigned int v40 = 0;
          while (1)
          {
            uint64_t v41 = *v2;
            uint64_t v42 = *(void *)&a1[v41];
            unint64_t v43 = v42 + 1;
            if (v42 == -1 || v43 > *(void *)&a1[*v3]) {
              goto LABEL_162;
            }
            int v44 = *(char *)(*(void *)&a1[*v6] + v42);
            *(void *)&a1[v41] = v43;
            if (v44 < 0)
            {
              BOOL v24 = v40++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_219;
          }
        case 9u:
        case 0xAu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORouteIncidentIsValid(a1)) {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 0xBu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOProblemDetailIsValid(a1)) {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 0xCu:
        case 0x1Cu:
          goto LABEL_218;
        case 0xDu:
          if (v16 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_240:
              PBReaderRecallMark();
              return 0;
            }
LABEL_223:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v70 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v71 = *v2;
                uint64_t v72 = *(void *)&a1[v71];
                unint64_t v73 = v72 + 1;
                if (v72 == -1 || v73 > *(void *)&a1[*v3]) {
                  break;
                }
                int v74 = *(char *)(*(void *)&a1[*v6] + v72);
                *(void *)&a1[v71] = v73;
                if (v74 < 0)
                {
                  BOOL v14 = v70++ >= 9;
                  if (!v14) {
                    continue;
                  }
                }
                goto LABEL_223;
              }
              a1[*v4] = 1;
            }
LABEL_216:
            PBReaderRecallMark();
          }
          else
          {
            if ((v9 & 7) != 0) {
              goto LABEL_240;
            }
            while (1)
            {
              uint64_t v45 = *v2;
              uint64_t v46 = *(void *)&a1[v45];
              unint64_t v47 = v46 + 1;
              if (v46 == -1 || v47 > *(void *)&a1[*v3]) {
                break;
              }
              int v48 = *(char *)(*(void *)&a1[*v6] + v46);
              *(void *)&a1[v45] = v47;
              if (v48 < 0)
              {
                unsigned int v49 = v16++;
                if (v49 <= 8) {
                  continue;
                }
              }
              goto LABEL_219;
            }
LABEL_162:
            a1[*v4] = 1;
          }
LABEL_219:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_233;
          }
          break;
        case 0xEu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTransitServiceGapIsValid(a1)) {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 0xFu:
          if ((v9 & 7) != 0) {
            goto LABEL_240;
          }
          unsigned int v50 = 0;
          while (1)
          {
            uint64_t v51 = *v2;
            uint64_t v52 = *(void *)&a1[v51];
            unint64_t v53 = v52 + 1;
            if (v52 == -1 || v53 > *(void *)&a1[*v3]) {
              goto LABEL_162;
            }
            int v54 = *(char *)(*(void *)&a1[*v6] + v52);
            *(void *)&a1[v51] = v53;
            if (v54 < 0)
            {
              BOOL v24 = v50++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_219;
          }
        case 0x10u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPBTransitRoutingIncidentMessageIsValid(a1)) {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 0x11u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORouteDisplayHintsIsValid(a1)) {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 0x12u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 0x13u:
          if (v16 == 2) {
            goto LABEL_218;
          }
          goto LABEL_240;
        case 0x14u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOAlertIsValid(a1)) {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 0x15u:
          if ((v9 & 7) != 0) {
            goto LABEL_240;
          }
          unsigned int v55 = 0;
          while (1)
          {
            uint64_t v56 = *v2;
            uint64_t v57 = *(void *)&a1[v56];
            unint64_t v58 = v57 + 1;
            if (v57 == -1 || v58 > *(void *)&a1[*v3]) {
              goto LABEL_162;
            }
            int v59 = *(char *)(*(void *)&a1[*v6] + v57);
            *(void *)&a1[v56] = v58;
            if (v59 < 0)
            {
              BOOL v24 = v55++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_219;
          }
        case 0x16u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDDatasetABStatusIsValid(a1)) {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 0x17u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTrafficCameraIsValid(a1)) {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 0x18u:
          if (v16 == 2) {
            goto LABEL_218;
          }
          goto LABEL_240;
        case 0x19u:
          if ((v9 & 7) != 0) {
            goto LABEL_240;
          }
          unsigned int v60 = 0;
          while (1)
          {
            uint64_t v61 = *v2;
            uint64_t v62 = *(void *)&a1[v61];
            unint64_t v63 = v62 + 1;
            if (v62 == -1 || v63 > *(void *)&a1[*v3]) {
              goto LABEL_162;
            }
            int v64 = *(char *)(*(void *)&a1[*v6] + v62);
            *(void *)&a1[v61] = v63;
            if (v64 < 0)
            {
              BOOL v24 = v60++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_219;
          }
        case 0x1Au:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSnapScoreMetadataIsValid(a1)) {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 0x1Bu:
          if ((v9 & 7) != 0) {
            goto LABEL_240;
          }
          unsigned int v65 = 0;
          while (1)
          {
            uint64_t v66 = *v2;
            uint64_t v67 = *(void *)&a1[v66];
            unint64_t v68 = v67 + 1;
            if (v67 == -1 || v68 > *(void *)&a1[*v3]) {
              goto LABEL_162;
            }
            int v69 = *(char *)(*(void *)&a1[*v6] + v67);
            *(void *)&a1[v66] = v68;
            if (v69 < 0)
            {
              BOOL v24 = v65++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_219;
          }
        case 0x1Du:
          if (v16 != 2) {
            goto LABEL_240;
          }
LABEL_218:
          if (PBReaderSkipValueWithTag()) {
            goto LABEL_219;
          }
          goto LABEL_240;
        case 0x1Eu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOArrivalParametersIsValid(a1)) {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 0x1Fu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTrafficSignalIsValid(a1)) {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 0x20u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTransitRouteUpdateConfigurationIsValid(a1)) {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 0x21u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOWaypointRouteIsValid(a1)) {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 0x22u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPBTransitPaymentMethodSuggestionIsValid(a1)) {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 0x23u:
          if (v16 != 2
            || !PBReaderPlaceMark()
            || !GEODirectionsRequestResponseAnalyticsDataIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 0x24u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDSearchClientBehaviorIsValid(a1)) {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 0x25u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOAdvisoriesInfoIsValid(a1)) {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 0x26u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOCommonResponseAttributesIsValid(a1)) {
            goto LABEL_240;
          }
          goto LABEL_216;
        default:
          switch((int)v18)
          {
            case 952:
              if (v16 == 2) {
                goto LABEL_218;
              }
              goto LABEL_240;
            case 953:
              if (v16 == 2) {
                goto LABEL_218;
              }
              goto LABEL_240;
            case 954:
              if (v16 == 2) {
                goto LABEL_218;
              }
              goto LABEL_240;
            case 955:
              if (v16 != 2 || !PBReaderPlaceMark() || !GEOTransitSuggestedRouteIsValid(a1)) {
                goto LABEL_240;
              }
              goto LABEL_216;
            case 956:
            case 957:
            case 960:
              goto LABEL_218;
            case 958:
              if (v16 != 2 || !PBReaderPlaceMark() || (GEOTimepointIsValid(a1) & 1) == 0) {
                goto LABEL_240;
              }
              goto LABEL_216;
            case 959:
              if (v16 == 2 && PBReaderPlaceMark() && GEOTransitDecoderDataIsValid(a1)) {
                goto LABEL_216;
              }
              goto LABEL_240;
            case 961:
              if (v16 == 2) {
                goto LABEL_218;
              }
              goto LABEL_240;
            default:
              if (v18 != 1201) {
                goto LABEL_218;
              }
              if (v16 != 2 || !PBReaderPlaceMark() || !GEOClientMetricsIsValid(a1)) {
                goto LABEL_240;
              }
              goto LABEL_216;
          }
      }
    }
  }
  int v5 = 0;
LABEL_233:
  if (a1[*v4]) {
    BOOL v75 = 1;
  }
  else {
    BOOL v75 = v5 == 0;
  }
  uint64_t v76 = !v75;
  PBReaderRecallMark();
  return v76;
}

BOOL GEORouteDisplayHintsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_72;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_43;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0 && v17++ <= 8) {
              continue;
            }
            goto LABEL_48;
          }
        case 2u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_72;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              uint64_t v24 = *(void *)&a1[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                goto LABEL_43;
              }
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                unsigned int v27 = v15++;
                if (v27 <= 8) {
                  continue;
                }
              }
              goto LABEL_48;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_72;
          }
LABEL_51:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v33 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v34 = *v2;
              uint64_t v35 = *(void *)&a1[v34];
              unint64_t v36 = v35 + 1;
              if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
                break;
              }
              int v37 = *(char *)(*(void *)&a1[*v5] + v35);
              *(void *)&a1[v34] = v36;
              if (v37 < 0)
              {
                BOOL v13 = v33++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_51;
            }
            a1[*v4] = 1;
          }
          goto LABEL_47;
        case 5u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_72:
              PBReaderRecallMark();
              return 0;
            }
LABEL_61:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v38 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v39 = *v2;
                uint64_t v40 = *(void *)&a1[v39];
                unint64_t v41 = v40 + 1;
                if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
                  break;
                }
                int v42 = *(char *)(*(void *)&a1[*v5] + v40);
                *(void *)&a1[v39] = v41;
                if (v42 < 0)
                {
                  BOOL v13 = v38++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_61;
              }
              a1[*v4] = 1;
            }
LABEL_47:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_72;
            }
            while (1)
            {
              uint64_t v28 = *v2;
              uint64_t v29 = *(void *)&a1[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
                break;
              }
              int v31 = *(char *)(*(void *)&a1[*v5] + v29);
              *(void *)&a1[v28] = v30;
              if (v31 < 0)
              {
                unsigned int v32 = v15++;
                if (v32 <= 8) {
                  continue;
                }
              }
              goto LABEL_48;
            }
LABEL_43:
            a1[*v4] = 1;
          }
LABEL_48:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_70;
          }
          break;
        case 6u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORequestOptionsIsValid(a1)) {
            goto LABEL_47;
          }
          goto LABEL_72;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_72;
          }
          goto LABEL_48;
      }
    }
  }
LABEL_70:
  BOOL v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

void sub_18A0D179C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEODirectionsResponseIsDirty(uint64_t a1)
{
  uint64_t v94 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 360));
  uint64_t v2 = *(void *)(a1 + 388);
  if ((v2 & 0x1C0069900C00) != 0) {
    return 1;
  }
  if ((v2 & 0x8000000000) != 0)
  {
    if (GEOPBTransitRoutingIncidentMessageIsDirty(*(void *)(a1 + 312))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 388);
  }
  if ((v2 & 0x200000) != 0)
  {
    if (GEORouteDisplayHintsIsDirty(*(void *)(a1 + 168))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 388);
  }
  if ((v2 & 0x500000000) == 0)
  {
    if ((v2 & 0x400000) != 0)
    {
      if (GEOAlertIsDirty(*(os_unfair_lock_s **)(a1 + 176))) {
        return 1;
      }
      uint64_t v2 = *(void *)(a1 + 388);
    }
    if ((v2 & 0x1004020000) == 0)
    {
      if ((v2 & 0x200000000) != 0)
      {
        if (GEOSnapScoreMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 264))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 388);
      }
      if ((v2 & 0x32000046000) == 0)
      {
        if ((v2 & 0x1000) != 0)
        {
          if (GEOAdvisoriesInfoIsDirty(*(os_unfair_lock_s **)(a1 + 96))) {
            return 1;
          }
          uint64_t v2 = *(void *)(a1 + 388);
        }
        if ((v2 & 0x892010000) == 0)
        {
          if ((v2 & 0x80000) != 0)
          {
            if (GEOTransitDecoderDataIsDirty(*(os_unfair_lock_s **)(a1 + 152))) {
              return 1;
            }
            uint64_t v2 = *(void *)(a1 + 388);
          }
          if ((v2 & 0x4000008000) == 0)
          {
            if ((v2 & 0x20000000) != 0)
            {
              long long v82 = 0u;
              long long v83 = 0u;
              long long v80 = 0u;
              long long v81 = 0u;
              id v5 = *(id *)(a1 + 232);
              uint64_t v6 = [v5 countByEnumeratingWithState:&v80 objects:v93 count:16];
              if (v6)
              {
                uint64_t v7 = v6;
                uint64_t v8 = *(void *)v81;
LABEL_30:
                uint64_t v9 = 0;
                while (1)
                {
                  if (*(void *)v81 != v8) {
                    objc_enumerationMutation(v5);
                  }
                  if (GEORouteIsDirty(*(os_unfair_lock_s **)(*((void *)&v80 + 1) + 8 * v9))) {
                    goto LABEL_128;
                  }
                  if (v7 == ++v9)
                  {
                    uint64_t v7 = [v5 countByEnumeratingWithState:&v80 objects:v93 count:16];
                    if (v7) {
                      goto LABEL_30;
                    }
                    break;
                  }
                }
              }

              uint64_t v2 = *(void *)(a1 + 388);
            }
            if ((v2 & 0x80000000000) != 0)
            {
              long long v78 = 0u;
              long long v79 = 0u;
              long long v76 = 0u;
              long long v77 = 0u;
              id v5 = *(id *)(a1 + 344);
              uint64_t v10 = [v5 countByEnumeratingWithState:&v76 objects:v92 count:16];
              if (v10)
              {
                uint64_t v11 = v10;
                uint64_t v12 = *(void *)v77;
LABEL_40:
                uint64_t v13 = 0;
                while (1)
                {
                  if (*(void *)v77 != v12) {
                    objc_enumerationMutation(v5);
                  }
                  if (GEOWaypointRouteIsDirty(*(os_unfair_lock_s **)(*((void *)&v76 + 1) + 8 * v13))) {
                    goto LABEL_128;
                  }
                  if (v11 == ++v13)
                  {
                    uint64_t v11 = [v5 countByEnumeratingWithState:&v76 objects:v92 count:16];
                    if (v11) {
                      goto LABEL_40;
                    }
                    break;
                  }
                }
              }

              uint64_t v2 = *(void *)(a1 + 388);
            }
            if ((v2 & 0x8000000) != 0)
            {
              long long v74 = 0u;
              long long v75 = 0u;
              long long v72 = 0u;
              long long v73 = 0u;
              id v5 = *(id *)(a1 + 216);
              uint64_t v14 = [v5 countByEnumeratingWithState:&v72 objects:v91 count:16];
              if (v14)
              {
                uint64_t v15 = v14;
                uint64_t v16 = *(void *)v73;
LABEL_50:
                uint64_t v17 = 0;
                while (1)
                {
                  if (*(void *)v73 != v16) {
                    objc_enumerationMutation(v5);
                  }
                  if ((GEOPlaceSearchResponseIsDirty(*(os_unfair_lock_s **)(*((void *)&v72 + 1)
                                                                                            + 8 * v17)) & 1) != 0)
                    goto LABEL_128;
                  if (v15 == ++v17)
                  {
                    uint64_t v15 = [v5 countByEnumeratingWithState:&v72 objects:v91 count:16];
                    if (v15) {
                      goto LABEL_50;
                    }
                    break;
                  }
                }
              }

              uint64_t v2 = *(void *)(a1 + 388);
            }
            if ((v2 & 0x1000000) != 0)
            {
              long long v70 = 0u;
              long long v71 = 0u;
              long long v68 = 0u;
              long long v69 = 0u;
              id v5 = *(id *)(a1 + 192);
              uint64_t v18 = [v5 countByEnumeratingWithState:&v68 objects:v90 count:16];
              if (v18)
              {
                uint64_t v19 = v18;
                uint64_t v20 = *(void *)v69;
LABEL_60:
                uint64_t v21 = 0;
                while (1)
                {
                  if (*(void *)v69 != v20) {
                    objc_enumerationMutation(v5);
                  }
                  if (GEORouteIncidentIsDirty(*(os_unfair_lock_s **)(*((void *)&v68 + 1) + 8 * v21))) {
                    goto LABEL_128;
                  }
                  if (v19 == ++v21)
                  {
                    uint64_t v19 = [v5 countByEnumeratingWithState:&v68 objects:v90 count:16];
                    if (v19) {
                      goto LABEL_60;
                    }
                    break;
                  }
                }
              }

              uint64_t v2 = *(void *)(a1 + 388);
            }
            if ((v2 & 0x800000) != 0)
            {
              long long v66 = 0u;
              long long v67 = 0u;
              long long v64 = 0u;
              long long v65 = 0u;
              id v5 = *(id *)(a1 + 184);
              uint64_t v22 = [v5 countByEnumeratingWithState:&v64 objects:v89 count:16];
              if (v22)
              {
                uint64_t v23 = v22;
                uint64_t v24 = *(void *)v65;
LABEL_70:
                uint64_t v25 = 0;
                while (1)
                {
                  if (*(void *)v65 != v24) {
                    objc_enumerationMutation(v5);
                  }
                  if (GEORouteIncidentIsDirty(*(os_unfair_lock_s **)(*((void *)&v64 + 1) + 8 * v25))) {
                    goto LABEL_128;
                  }
                  if (v23 == ++v25)
                  {
                    uint64_t v23 = [v5 countByEnumeratingWithState:&v64 objects:v89 count:16];
                    if (v23) {
                      goto LABEL_70;
                    }
                    break;
                  }
                }
              }

              uint64_t v2 = *(void *)(a1 + 388);
            }
            if ((v2 & 0x1000000000) != 0)
            {
              long long v62 = 0u;
              long long v63 = 0u;
              long long v60 = 0u;
              long long v61 = 0u;
              id v5 = *(id *)(a1 + 288);
              uint64_t v26 = [v5 countByEnumeratingWithState:&v60 objects:v88 count:16];
              if (v26)
              {
                uint64_t v27 = v26;
                uint64_t v28 = *(void *)v61;
LABEL_80:
                uint64_t v29 = 0;
                while (1)
                {
                  if (*(void *)v61 != v28) {
                    objc_enumerationMutation(v5);
                  }
                  if (GEOTrafficCameraIsDirty(*(os_unfair_lock_s **)(*((void *)&v60 + 1) + 8 * v29))) {
                    goto LABEL_128;
                  }
                  if (v27 == ++v29)
                  {
                    uint64_t v27 = [v5 countByEnumeratingWithState:&v60 objects:v88 count:16];
                    if (v27) {
                      goto LABEL_80;
                    }
                    break;
                  }
                }
              }

              uint64_t v2 = *(void *)(a1 + 388);
            }
            if ((v2 & 0x4000) != 0)
            {
              long long v58 = 0u;
              long long v59 = 0u;
              long long v56 = 0u;
              long long v57 = 0u;
              id v5 = *(id *)(a1 + 112);
              uint64_t v30 = [v5 countByEnumeratingWithState:&v56 objects:v87 count:16];
              if (v30)
              {
                uint64_t v31 = v30;
                uint64_t v32 = *(void *)v57;
LABEL_90:
                uint64_t v33 = 0;
                while (1)
                {
                  if (*(void *)v57 != v32) {
                    objc_enumerationMutation(v5);
                  }
                  if (GEOArrivalParametersIsDirty(*(void *)(*((void *)&v56 + 1) + 8 * v33))) {
                    goto LABEL_128;
                  }
                  if (v31 == ++v33)
                  {
                    uint64_t v31 = [v5 countByEnumeratingWithState:&v56 objects:v87 count:16];
                    if (v31) {
                      goto LABEL_90;
                    }
                    break;
                  }
                }
              }

              uint64_t v2 = *(void *)(a1 + 388);
            }
            if ((v2 & 0x2000000000) != 0)
            {
              long long v54 = 0u;
              long long v55 = 0u;
              long long v52 = 0u;
              long long v53 = 0u;
              id v5 = *(id *)(a1 + 296);
              uint64_t v34 = [v5 countByEnumeratingWithState:&v52 objects:v86 count:16];
              if (v34)
              {
                uint64_t v35 = v34;
                uint64_t v36 = *(void *)v53;
LABEL_100:
                uint64_t v37 = 0;
                while (1)
                {
                  if (*(void *)v53 != v36) {
                    objc_enumerationMutation(v5);
                  }
                  if (GEOTrafficSignalIsDirty(*(void *)(*((void *)&v52 + 1) + 8 * v37))) {
                    goto LABEL_128;
                  }
                  if (v35 == ++v37)
                  {
                    uint64_t v35 = [v5 countByEnumeratingWithState:&v52 objects:v86 count:16];
                    if (v35) {
                      goto LABEL_100;
                    }
                    break;
                  }
                }
              }

              uint64_t v2 = *(void *)(a1 + 388);
            }
            if ((v2 & 0x10000000000) != 0)
            {
              long long v50 = 0u;
              long long v51 = 0u;
              long long v48 = 0u;
              long long v49 = 0u;
              id v5 = *(id *)(a1 + 320);
              uint64_t v38 = [v5 countByEnumeratingWithState:&v48 objects:v85 count:16];
              if (v38)
              {
                uint64_t v39 = v38;
                uint64_t v40 = *(void *)v49;
LABEL_110:
                uint64_t v41 = 0;
                while (1)
                {
                  if (*(void *)v49 != v40) {
                    objc_enumerationMutation(v5);
                  }
                  if (GEOPBTransitPaymentMethodSuggestionIsDirty(*(os_unfair_lock_s **)(*((void *)&v48 + 1) + 8 * v41))) {
                    goto LABEL_128;
                  }
                  if (v39 == ++v41)
                  {
                    uint64_t v39 = [v5 countByEnumeratingWithState:&v48 objects:v85 count:16];
                    if (v39) {
                      goto LABEL_110;
                    }
                    break;
                  }
                }
              }

              uint64_t v2 = *(void *)(a1 + 388);
            }
            if ((v2 & 0x800000000) == 0) {
              return 0;
            }
            long long v46 = 0u;
            long long v47 = 0u;
            long long v44 = 0u;
            long long v45 = 0u;
            id v5 = *(id *)(a1 + 280);
            uint64_t v3 = [v5 countByEnumeratingWithState:&v44 objects:v84 count:16];
            if (!v3)
            {
LABEL_129:

              return v3;
            }
            uint64_t v42 = *(void *)v45;
LABEL_121:
            uint64_t v43 = 0;
            while (1)
            {
              if (*(void *)v45 != v42) {
                objc_enumerationMutation(v5);
              }
              if ((GEOTransitSuggestedRouteIsDirty(*(os_unfair_lock_s **)(*((void *)&v44 + 1)
                                                                                          + 8 * v43)) & 1) != 0)
                break;
              if (v3 == ++v43)
              {
                uint64_t v3 = [v5 countByEnumeratingWithState:&v44 objects:v84 count:16];
                if (v3) {
                  goto LABEL_121;
                }
                goto LABEL_129;
              }
            }
LABEL_128:
            uint64_t v3 = 1;
            goto LABEL_129;
          }
        }
      }
    }
  }
  return 1;
}

os_unfair_lock_s *GEODirectionsResponseIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEODirectionsResponseIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 90);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEODirectionsResponseClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  -[GEODirectionsResponse _readPlaceSearchResponses](a1);
  unint64_t result = [*(id *)(a1 + 216) count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      uint64_t v8 = [*(id *)(a1 + 216) objectAtIndexedSubscript:i];
      uint64_t v9 = v8;
      if (a3 && GEOPlaceSearchResponseHasSensitiveFields(v8))
      {
        uint64_t v10 = (void *)[v9 copy];
        GEOPlaceSearchResponseClearSensitiveFields((uint64_t)v10, a2, 0);
        [*(id *)(a1 + 216) replaceObjectAtIndex:i withObject:v10];
      }
      else
      {
        [v9 clearSensitiveFields:a2];
      }

      unint64_t result = [*(id *)(a1 + 216) count];
    }
  }
  return result;
}

uint64_t GEODirectionsResponseHasSensitiveFields(void *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = objc_msgSend(a1, "placeSearchResponses", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v9;
    while (2)
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v9 != v4) {
          objc_enumerationMutation(v1);
        }
        if (GEOPlaceSearchResponseHasSensitiveFields(*(void **)(*((void *)&v8 + 1) + 8 * v5)))
        {
          uint64_t v6 = 1;
          goto LABEL_12;
        }
        ++v5;
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v6 = 0;
LABEL_12:

  return v6;
}

void sub_18A0D3FAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0D58DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0D61F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0D67B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteDisplayHintsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 96)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFDFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        char v18 = v16 | v11;
        if (((v16 | v11) | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v88 = 1;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        char v22 = v16 & ~(_BYTE)v11 | v9;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_120;
        }
        char v86 = v17;
        char v89 = v18 | v17;
        char v90 = (v19 == 0) | v18;
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        char v87 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_118;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_118:
      int v88 = 1;
      goto LABEL_119;
    }
    unint64_t v35 = v26 >> 3;
    BOOL v36 = v18;
    if ((v90 & 1) == 0)
    {
      uint64_t v37 = v19;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_90;
        }
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(unsigned char *)(a1 + 96) |= 1u;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        while (1)
        {
          uint64_t v44 = *v20;
          uint64_t v45 = *(void *)(v3 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(v3 + *v6)) {
            break;
          }
          char v47 = *(unsigned char *)(*(void *)(v3 + *v23) + v45);
          *(void *)(v3 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0) {
            goto LABEL_95;
          }
          v41 += 7;
          BOOL v31 = v42++ >= 9;
          if (v31)
          {
            uint64_t v43 = 0;
            goto LABEL_97;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_95:
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v43 = 0;
        }
LABEL_97:
        *(unsigned char *)(a1 + 92) = v43 != 0;
        goto LABEL_91;
      case 2:
        if (!v36 || (*(unsigned char *)(a1 + 96) & 8) != 0) {
          goto LABEL_90;
        }
        if (v33 != 2)
        {
          char v68 = 0;
          unsigned int v69 = 0;
          uint64_t v70 = 0;
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v71 = *v20;
            uint64_t v72 = *(void *)(v3 + v71);
            unint64_t v73 = v72 + 1;
            if (v72 == -1 || v73 > *(void *)(v3 + *v6)) {
              goto LABEL_115;
            }
            char v74 = *(unsigned char *)(*(void *)(v3 + *v23) + v72);
            *(void *)(v3 + v71) = v73;
            v70 |= (unint64_t)(v74 & 0x7F) << v68;
            if (v74 < 0)
            {
              v68 += 7;
              BOOL v31 = v69++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_116;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_137;
        }
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6))
        {
          if (*(unsigned char *)(v3 + *v21)) {
            break;
          }
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v50 = 0;
          while (1)
          {
            uint64_t v51 = *v20;
            uint64_t v52 = *(void *)(v3 + v51);
            unint64_t v53 = v52 + 1;
            if (v52 == -1 || v53 > *(void *)(v3 + *v6)) {
              break;
            }
            char v54 = *(unsigned char *)(*(void *)(v3 + *v23) + v52);
            *(void *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              BOOL v31 = v49++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_61;
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_61:
          PBRepeatedInt32Add();
        }
        goto LABEL_84;
      case 5:
        if (!v36 || (*(unsigned char *)(a1 + 96) & 4) != 0) {
          goto LABEL_90;
        }
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_137;
          }
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v21)) {
              break;
            }
            char v58 = 0;
            unsigned int v59 = 0;
            uint64_t v60 = 0;
            while (1)
            {
              uint64_t v61 = *v20;
              uint64_t v62 = *(void *)(v3 + v61);
              unint64_t v63 = v62 + 1;
              if (v62 == -1 || v63 > *(void *)(v3 + *v6)) {
                break;
              }
              char v64 = *(unsigned char *)(*(void *)(v3 + *v23) + v62);
              *(void *)(v3 + v61) = v63;
              v60 |= (unint64_t)(v64 & 0x7F) << v58;
              if (v64 < 0)
              {
                v58 += 7;
                BOOL v31 = v59++ >= 9;
                if (!v31) {
                  continue;
                }
              }
              goto LABEL_83;
            }
            *(unsigned char *)(v3 + *v21) = 1;
LABEL_83:
            PBRepeatedInt32Add();
          }
LABEL_84:
          PBReaderRecallMark();
        }
        else
        {
          char v75 = 0;
          unsigned int v76 = 0;
          uint64_t v77 = 0;
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v78 = *v20;
            uint64_t v79 = *(void *)(v3 + v78);
            unint64_t v80 = v79 + 1;
            if (v79 == -1 || v80 > *(void *)(v3 + *v6)) {
              break;
            }
            char v81 = *(unsigned char *)(*(void *)(v3 + *v23) + v79);
            *(void *)(v3 + v78) = v80;
            v77 |= (unint64_t)(v81 & 0x7F) << v75;
            if (v81 < 0)
            {
              v75 += 7;
              BOOL v31 = v76++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_116;
          }
LABEL_115:
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_116:
          PBRepeatedInt32Add();
        }
        char v18 = v87;
        goto LABEL_91;
      case 6:
        if (!v36) {
          goto LABEL_90;
        }
        if ((*(unsigned char *)(a1 + 96) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_137;
          }
          v7 += *(unsigned __int8 *)(a1 + 96) << 27 >> 31;
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_137;
        }
        long long v65 = objc_alloc_init(GEORequestOptions);
        if (GEORequestOptionsReadAllFrom((uint64_t)v65, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          long long v66 = *(void **)(a1 + 72);
          *(void *)(a1 + 72) = v65;

          --v7;
LABEL_100:
          char v18 = v87;
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
LABEL_91:
          if (!(v89 & 1 | (v7 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_118;
          }
          continue;
        }

LABEL_137:
        int v88 = 0;
        char v18 = v87;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_119:
        char v22 = v86;
LABEL_120:
        if (v22) {
LABEL_121:
        }
          *(unsigned char *)(a1 + 96) |= 2u;
        if (v18 & 1 | ((v88 & 1) == 0))
        {
          *(unsigned char *)(a1 + 96) |= 8u;
          *(unsigned char *)(a1 + 96) |= 4u;
          *(unsigned char *)(a1 + 96) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            int v82 = *v19++;
            char v83 = 8;
            switch(v82)
            {
              case 0:
                goto LABEL_129;
              case 2:
                goto LABEL_128;
              case 5:
                char v83 = 4;
                goto LABEL_128;
              case 6:
                char v83 = 16;
LABEL_128:
                *(unsigned char *)(a1 + 96) |= v83;
                break;
              default:
                continue;
            }
          }
        }
LABEL_129:
        if (v88)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_133:
          long long v84 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v18) {
            goto LABEL_133;
          }
        }
        return v3;
      default:
        if ((v86 & 1) == 0 || (*(unsigned char *)(a1 + 96) & 2) != 0)
        {
LABEL_90:
          char v67 = PBReaderSkipValueWithTag();
          char v18 = v87;
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          if ((v67 & 1) == 0)
          {
            int v88 = 0;
            goto LABEL_119;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v55 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            long long v56 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v55;
          }
          int v57 = PBUnknownFieldAdd();
          char v18 = v87;
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v57)
          {
            int v88 = 0;
            goto LABEL_121;
          }
        }
        goto LABEL_91;
    }
  }
}

void sub_18A0D7654(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0D7ABC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0D8620(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteDisplayHintsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORouteDisplayHintsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORouteDisplayHintsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORouteDisplayHintsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORouteDisplayHintsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_18A0D87B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteDisplayHintsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORouteDisplayHintsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A0D8814(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0D8A58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteDisplayHintsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  BOOL v2 = (*(unsigned char *)(a1 + 96) & 0x3C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return v2;
}

void sub_18A0D8E0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0D9190(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0D9A90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_18A0D9BEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, void *a10)
{
  _Unwind_Resume(a1);
}

void std::deque<GEORoadEdge * {__strong}>::push_back(void *a1, uint64_t *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = ((v4 - v5) << 6) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    std::deque<GEORoadEdge * {__strong}>::__add_back_capacity(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  uint64_t v8 = *(void *)(v5 + ((v7 >> 6) & 0x3FFFFFFFFFFFFF8));
  uint64_t v9 = *a2;
  *a2 = 0;
  *(void *)(v8 + 8 * (v7 & 0x1FF)) = v9;
  ++a1[5];
}

void sub_18A0D9EC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  std::vector<GEORoadEdge * {__strong}>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void sub_18A0DA1D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A0DA3F4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v2 - 88), 8);

  _Unwind_Resume(a1);
}

void sub_18A0DA4C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A0DA638(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10)
{
  _Unwind_Resume(a1);
}

void std::deque<GEORoadEdge * {__strong}>::insert(int64x2_t *a1, char *a2, uint64_t a3, void **a4)
{
  unint64_t v6 = a1[2].u64[0];
  uint64_t v7 = a1->i64[1];
  uint64_t v8 = a1[1].i64[0];
  uint64_t v9 = (char *)(v7 + 8 * (v6 >> 9));
  if (v8 == v7) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = *(void *)v9 + 8 * (a1[2].i64[0] & 0x1FF);
  }
  if (a3 == v10) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = ((a3 - *(void *)a2) >> 3) + ((a2 - v9) << 6) - ((v10 - *(void *)v9) >> 3);
  }
  uint64_t v12 = a1[2].i64[1];
  unint64_t v13 = v12 - v11;
  if (v11 >= v12 - v11)
  {
    if (v8 == v7) {
      uint64_t v22 = 0;
    }
    else {
      uint64_t v22 = ((v8 - v7) << 6) - 1;
    }
    if (v22 == v12 + v6)
    {
      std::deque<GEORoadEdge * {__strong}>::__add_back_capacity(a1);
      uint64_t v12 = a1[2].i64[1];
      unint64_t v13 = v12 - v11;
    }
    if (v12 == v11)
    {
      unint64_t v23 = a1[2].i64[0] + v11;
      uint64_t v24 = *(void *)(a1->i64[1] + ((v23 >> 6) & 0x3FFFFFFFFFFFFF8));
      unsigned int v25 = *a4;
      *a4 = 0;
      *(void *)(v24 + 8 * (v23 & 0x1FF)) = v25;
      ++a1[2].i64[1];
      return;
    }
    unint64_t v26 = a1[2].i64[0] + v12;
    uint64_t v27 = a1->i64[1];
    uint64_t v28 = (void *)(v27 + 8 * (v26 >> 9));
    uint64_t v29 = *v28 + 8 * (v26 & 0x1FF);
    if (a1[1].i64[0] == v27) {
      char v30 = 0;
    }
    else {
      char v30 = (void *)v29;
    }
    uint64_t v31 = (uint64_t)v30 - *v28;
    uint64_t v32 = v31 >> 3;
    if (v31 < 9)
    {
      unint64_t v45 = 512 - v32;
      uint64_t v34 = &v28[-(v45 >> 9)];
      unint64_t v35 = (uint64_t *)(*v34 + 8 * (~(_WORD)v45 & 0x1FF));
    }
    else
    {
      unint64_t v33 = v32 - 1;
      uint64_t v34 = &v28[v33 >> 9];
      unint64_t v35 = (uint64_t *)(*v34 + 8 * (v33 & 0x1FF));
    }
    uint64_t v46 = *v35;
    uint64_t *v35 = 0;
    void *v30 = v46;
    ++a1[2].i64[1];
    if (v13 >= 2)
    {
      char v47 = std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>::operator-[abi:ne180100](v28, (uint64_t)v30, v13);
      uint64_t v49 = v48;
      if (v34 == v47)
      {
        uint64_t v70 = (uint64_t)v35;
        id v55 = v28;
        long long v56 = v30;
      }
      else
      {
        uint64_t v50 = v47;
        uint64_t v53 = *v34;
        uint64_t v52 = v34 - 1;
        uint64_t v51 = v53;
        uint64_t v54 = (uint64_t)v35;
        id v55 = v28;
        long long v56 = v30;
        while (1)
        {
          std::__move_backward_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<GEORoadEdge * {__strong}*,std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>,0>(&v74, v51, v54, v55, v56);
          id v55 = v75;
          long long v56 = v76;
          if (v52 == v50) {
            break;
          }
          uint64_t v57 = *v52--;
          uint64_t v51 = v57;
          uint64_t v54 = v57 + 4096;
        }
        uint64_t v70 = *v50 + 4096;
        uint64_t v48 = v49;
      }
      std::__move_backward_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<GEORoadEdge * {__strong}*,std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>,0>(&v74, v48, v70, v55, v56);
      uint64_t v28 = v75;
      char v30 = v76;
    }
    unint64_t v73 = *a4;
    *a4 = 0;
    if (v30 == (void *)*v28) {
      char v30 = (void *)(*(v28 - 1) + 4096);
    }
    uint64_t v72 = (void *)*(v30 - 1);
    *(v30 - 1) = v73;
    goto LABEL_60;
  }
  if (!v6) {
    std::deque<GEORoadEdge * {__strong}>::__add_front_capacity((char **)a1);
  }
  uint64_t v14 = a1->i64[1];
  uint64_t v15 = a1[1].i64[0];
  BOOL v16 = (void **)(v14 + 8 * ((unint64_t)a1[2].i64[0] >> 9));
  char v17 = *v16;
  if (v11)
  {
    if (v15 == v14) {
      char v18 = 0;
    }
    else {
      char v18 = (void **)((char *)*v16 + 8 * (a1[2].i64[0] & 0x1FF));
    }
    uint64_t v19 = (char *)v18 - v17;
    uint64_t v20 = ((char *)v18 - v17) >> 3;
    if (v19 < 9) {
      uint64_t v21 = (char *)v16[-((unint64_t)(512 - v20) >> 9)] + 8 * (~(512 - (unsigned __int16)v20) & 0x1FF);
    }
    else {
      uint64_t v21 = *(char **)((char *)v16 + (((unint64_t)(v20 - 1) >> 6) & 0x3FFFFFFFFFFFFF8))
    }
          + 8 * ((v20 - 1) & 0x1FF);
    int v38 = *v18;
    void *v18 = 0;
    *uint64_t v21 = v38;
    a1[2] = vaddq_s64(a1[2], (int64x2_t)xmmword_18A62C080);
    if (v11 != 1)
    {
      uint64_t v39 = (char *)v18 - (unsigned char *)*v16;
      uint64_t v40 = v39 >> 3;
      if (v39 < -7)
      {
        unint64_t v58 = 510 - v40;
        unsigned int v42 = (void ***)&v16[-(v58 >> 9)];
        uint64_t v43 = *v42;
        uint64_t v44 = ~v58 & 0x1FFLL;
      }
      else
      {
        unint64_t v41 = v40 + 1;
        unsigned int v42 = (void ***)&v16[v41 >> 9];
        uint64_t v43 = *v42;
        uint64_t v44 = v41 & 0x1FF;
      }
      unsigned int v59 = &v43[v44];
      uint64_t v60 = (void ***)std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>::operator+[abi:ne180100](v16, (uint64_t)v18, v11);
      uint64_t v62 = v61;
      if (v42 == v60)
      {
        char v68 = v59;
        unsigned int v69 = v62;
        char v64 = v16;
        long long v65 = v18;
      }
      else
      {
        unint64_t v63 = v60;
        std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<GEORoadEdge * {__strong}*,std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>,0>(&v74, v59, v43 + 512, v16, v18);
        char v64 = (void **)v75;
        long long v65 = (void **)v76;
        long long v66 = v42 + 1;
        while (v66 != v63)
        {
          char v67 = *v66++;
          std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<GEORoadEdge * {__strong}*,std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>,0>(&v74, v67, v67 + 512, v64, v65);
          char v64 = (void **)v75;
          long long v65 = (void **)v76;
        }
        char v68 = *v63;
        unsigned int v69 = v62;
      }
      std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<GEORoadEdge * {__strong}*,std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>,0>(&v74, v68, v69, v64, v65);
      char v18 = (void **)v76;
    }
    uint64_t v71 = *a4;
    *a4 = 0;
    uint64_t v72 = *v18;
    void *v18 = v71;
LABEL_60:

    return;
  }
  if (v15 == v14) {
    uint64_t v36 = 0;
  }
  else {
    uint64_t v36 = (uint64_t)*v16 + 8 * (a1[2].i64[0] & 0x1FF);
  }
  if ((unsigned char *)v36 == v17) {
    uint64_t v36 = (uint64_t)*(v16 - 1) + 4096;
  }
  uint64_t v37 = *a4;
  *a4 = 0;
  *(void *)(v36 - 8) = v37;
  a1[2] = vaddq_s64(a1[2], (int64x2_t)xmmword_18A62C080);
}

void *std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>::operator+[abi:ne180100](void *result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3 + ((a2 - *result) >> 3);
    if (v3 < 1) {
      result -= (unint64_t)(511 - v3) >> 9;
    }
    else {
      result += (unint64_t)v3 >> 9;
    }
  }
  return result;
}

void sub_18A0DADE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A0DB000(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v2 - 88), 8);

  _Unwind_Resume(a1);
}

void sub_18A0DB0CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A0DB1F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void *std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>::operator-[abi:ne180100](void *result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = ((a2 - *result) >> 3) - a3;
    if (v3 < 1) {
      result -= (unint64_t)(511 - v3) >> 9;
    }
    else {
      result += (unint64_t)v3 >> 9;
    }
  }
  return result;
}

void sub_18A0DB3F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0DB4AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0DB574(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0DB61C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0DB6CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::deque<GEORoadEdge * {__strong}>::__add_front_capacity(char **a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  if (v3 == v2) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = ((v3 - v2) << 6) - 1;
  }
  uint64_t v5 = a1[4];
  if (v4 - (unint64_t)&v5[(void)a1[5]] < 0x200)
  {
    unint64_t v6 = a1[3];
    uint64_t v7 = *a1;
    uint64_t v8 = v6 - *a1;
    if (v3 - v2 >= (unint64_t)v8)
    {
      if (v6 == v7) {
        unint64_t v9 = 1;
      }
      else {
        unint64_t v9 = v8 >> 2;
      }
      unint64_t v41 = a1 + 3;
      uint64_t v37 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v9);
      int v38 = v37;
      uint64_t v39 = v37;
      uint64_t v40 = &v37[8 * v10];
      uint64_t v36 = operator new(0x1000uLL);
      std::__split_buffer<GEORoadEdge * {__strong}*>::push_back(&v37, &v36);
      uint64_t v12 = (uint64_t *)a1[1];
      unint64_t v11 = a1[2];
      unint64_t v13 = v39;
      while (v12 != (uint64_t *)v11)
      {
        if (v13 == v40)
        {
          uint64_t v15 = v37;
          uint64_t v14 = v38;
          if (v38 <= v37)
          {
            if (v13 == v37) {
              unint64_t v21 = 1;
            }
            else {
              unint64_t v21 = (v13 - v37) >> 2;
            }
            uint64_t v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v21);
            uint64_t v25 = v13 - v14;
            BOOL v24 = v13 == v14;
            unint64_t v13 = &v22[8 * (v21 >> 2)];
            if (!v24)
            {
              unint64_t v13 = &v22[8 * (v21 >> 2) + (v25 & 0xFFFFFFFFFFFFFFF8)];
              uint64_t v26 = 8 * (v25 >> 3);
              uint64_t v27 = &v22[8 * (v21 >> 2)];
              do
              {
                uint64_t v28 = *(void *)v14;
                v14 += 8;
                *(void *)uint64_t v27 = v28;
                v27 += 8;
                v26 -= 8;
              }
              while (v26);
            }
            uint64_t v37 = v22;
            int v38 = &v22[8 * (v21 >> 2)];
            uint64_t v39 = v13;
            uint64_t v40 = &v22[8 * v23];
            if (v15) {
              operator delete(v15);
            }
          }
          else
          {
            uint64_t v16 = (v38 - v37) >> 3;
            if (v16 >= -1) {
              uint64_t v17 = v16 + 1;
            }
            else {
              uint64_t v17 = v16 + 2;
            }
            char v18 = &v38[-8 * (v17 >> 1)];
            int64_t v19 = v13 - v38;
            if (v13 != v38)
            {
              memmove(&v38[-8 * (v17 >> 1)], v38, v13 - v38);
              unint64_t v13 = v14;
            }
            uint64_t v20 = &v13[-8 * (v17 >> 1)];
            unint64_t v13 = &v18[v19];
            int v38 = v20;
            uint64_t v39 = &v18[v19];
          }
        }
        uint64_t v29 = *v12++;
        *(void *)unint64_t v13 = v29;
        unint64_t v13 = v39 + 8;
        v39 += 8;
        unint64_t v11 = a1[2];
      }
      char v30 = *a1;
      uint64_t v31 = v38;
      *a1 = v37;
      a1[1] = v31;
      uint64_t v32 = v40;
      a1[2] = v13;
      a1[3] = v32;
      if (v13 - v31 == 8) {
        uint64_t v33 = 256;
      }
      else {
        uint64_t v33 = (uint64_t)(a1[4] + 512);
      }
      a1[4] = (char *)v33;
      if (v30) {
        operator delete(v30);
      }
    }
    else
    {
      if (v2 == v7)
      {
        uint64_t v37 = (char *)operator new(0x1000uLL);
        std::__split_buffer<GEORoadEdge * {__strong}*>::push_back(a1, &v37);
        uint64_t v34 = a1[2];
        uint64_t v37 = (char *)*((void *)v34 - 1);
        a1[2] = v34 - 8;
      }
      else
      {
        uint64_t v37 = (char *)operator new(0x1000uLL);
      }
      std::__split_buffer<ErrorInfo *>::push_front((uint64_t)a1, &v37);
      if (a1[2] - a1[1] == 8) {
        uint64_t v35 = 256;
      }
      else {
        uint64_t v35 = (uint64_t)(a1[4] + 512);
      }
      a1[4] = (char *)v35;
    }
  }
  else
  {
    a1[4] = v5 + 512;
    uint64_t v37 = (char *)*((void *)v3 - 1);
    a1[2] = v3 - 8;
    std::__split_buffer<ErrorInfo *>::push_front((uint64_t)a1, &v37);
  }
}

void sub_18A0DBB58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  operator delete(v10);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void std::__split_buffer<GEORoadEdge * {__strong}*>::push_back(void *a1, void *a2)
{
  uint64_t v4 = (char *)a1[2];
  if (v4 == (char *)a1[3])
  {
    uint64_t v5 = (char *)a1[1];
    uint64_t v6 = (uint64_t)&v5[-*a1];
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (char *)*a1) {
        unint64_t v16 = 1;
      }
      else {
        unint64_t v16 = (uint64_t)&v4[-*a1] >> 2;
      }
      uint64_t v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v16);
      int64_t v19 = &v17[8 * (v16 >> 2)];
      uint64_t v20 = (uint64_t *)a1[1];
      uint64_t v4 = v19;
      uint64_t v21 = a1[2] - (void)v20;
      if (v21)
      {
        uint64_t v4 = &v19[v21 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v22 = 8 * (v21 >> 3);
        uint64_t v23 = &v17[8 * (v16 >> 2)];
        do
        {
          uint64_t v24 = *v20++;
          *(void *)uint64_t v23 = v24;
          v23 += 8;
          v22 -= 8;
        }
        while (v22);
      }
      uint64_t v25 = (char *)*a1;
      *a1 = v17;
      a1[1] = v19;
      a1[2] = v4;
      a1[3] = &v17[8 * v18];
      if (v25)
      {
        operator delete(v25);
        uint64_t v4 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v7 = v6 >> 3;
      BOOL v8 = v6 >> 3 < -1;
      uint64_t v9 = (v6 >> 3) + 2;
      if (v8) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = v7 + 1;
      }
      uint64_t v11 = -(v10 >> 1);
      uint64_t v12 = v10 >> 1;
      unint64_t v13 = &v5[-8 * v12];
      int64_t v14 = v4 - v5;
      if (v4 != v5)
      {
        memmove(&v5[-8 * v12], v5, v4 - v5);
        uint64_t v4 = (char *)a1[1];
      }
      uint64_t v15 = &v4[8 * v11];
      uint64_t v4 = &v13[v14];
      a1[1] = v15;
      a1[2] = &v13[v14];
    }
  }
  *(void *)uint64_t v4 = *a2;
  a1[2] += 8;
}

void std::deque<GEORoadEdge * {__strong}>::__add_back_capacity(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x200;
  unint64_t v4 = v2 - 512;
  if (v3)
  {
    a1[4] = v4;
    uint64_t v5 = (void *)a1[1];
    uint64_t v6 = (char *)a1[2];
    uint64_t v9 = *v5;
    uint64_t v7 = (char *)(v5 + 1);
    uint64_t v8 = v9;
    a1[1] = v7;
    if (v6 != (char *)a1[3])
    {
LABEL_46:
      *(void *)uint64_t v6 = v8;
      a1[2] += 8;
      return;
    }
    uint64_t v10 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v6[-*a1] >> 2;
      }
      char v47 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v46);
      uint64_t v48 = &v47[8 * (v46 >> 2)];
      uint64_t v50 = &v47[8 * v49];
      uint64_t v51 = (uint64_t *)a1[1];
      uint64_t v6 = v48;
      uint64_t v52 = a1[2] - (void)v51;
      if (v52)
      {
        uint64_t v6 = &v48[v52 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v53 = 8 * (v52 >> 3);
        uint64_t v54 = &v47[8 * (v46 >> 2)];
        do
        {
          uint64_t v55 = *v51++;
          *(void *)uint64_t v54 = v55;
          v54 += 8;
          v53 -= 8;
        }
        while (v53);
      }
      goto LABEL_43;
    }
LABEL_5:
    uint64_t v11 = v10 >> 3;
    BOOL v12 = v10 >> 3 < -1;
    uint64_t v13 = (v10 >> 3) + 2;
    if (v12) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = v11 + 1;
    }
    uint64_t v15 = -(v14 >> 1);
    uint64_t v16 = v14 >> 1;
    uint64_t v17 = &v7[-8 * v16];
    int64_t v18 = v6 - v7;
    if (v6 != v7)
    {
      memmove(&v7[-8 * v16], v7, v6 - v7);
      uint64_t v7 = (char *)a1[1];
    }
    uint64_t v6 = &v17[v18];
    a1[1] = &v7[8 * v15];
    a1[2] = &v17[v18];
    goto LABEL_46;
  }
  uint64_t v19 = a1[2];
  unint64_t v20 = (v19 - a1[1]) >> 3;
  uint64_t v21 = a1[3];
  uint64_t v22 = v21 - *a1;
  if (v20 < v22 >> 3)
  {
    if (v21 != v19)
    {
      char v68 = (char *)operator new(0x1000uLL);
      std::__split_buffer<GEORoadEdge * {__strong}*>::push_back(a1, &v68);
      return;
    }
    char v68 = (char *)operator new(0x1000uLL);
    std::__split_buffer<ErrorInfo *>::push_front((uint64_t)a1, &v68);
    uint64_t v57 = (void *)a1[1];
    uint64_t v6 = (char *)a1[2];
    uint64_t v58 = *v57;
    uint64_t v7 = (char *)(v57 + 1);
    uint64_t v8 = v58;
    a1[1] = v7;
    if (v6 != (char *)a1[3]) {
      goto LABEL_46;
    }
    uint64_t v10 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v60 = 1;
      }
      else {
        unint64_t v60 = (uint64_t)&v6[-*a1] >> 2;
      }
      char v47 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v60);
      uint64_t v48 = &v47[8 * (v60 >> 2)];
      uint64_t v50 = &v47[8 * v61];
      uint64_t v62 = (uint64_t *)a1[1];
      uint64_t v6 = v48;
      uint64_t v63 = a1[2] - (void)v62;
      if (v63)
      {
        uint64_t v6 = &v48[v63 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v64 = 8 * (v63 >> 3);
        long long v65 = &v47[8 * (v60 >> 2)];
        do
        {
          uint64_t v66 = *v62++;
          *(void *)long long v65 = v66;
          v65 += 8;
          v64 -= 8;
        }
        while (v64);
      }
LABEL_43:
      long long v56 = (char *)*a1;
      *a1 = v47;
      a1[1] = v48;
      a1[2] = v6;
      a1[3] = v50;
      if (v56)
      {
        operator delete(v56);
        uint64_t v6 = (char *)a1[2];
      }
      goto LABEL_46;
    }
    goto LABEL_5;
  }
  if (v21 == *a1) {
    unint64_t v23 = 1;
  }
  else {
    unint64_t v23 = v22 >> 2;
  }
  uint64_t v72 = a1 + 3;
  char v68 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v23);
  unsigned int v69 = &v68[8 * v20];
  uint64_t v70 = v69;
  uint64_t v71 = &v68[8 * v24];
  char v67 = operator new(0x1000uLL);
  std::__split_buffer<GEORoadEdge * {__strong}*>::push_back(&v68, &v67);
  uint64_t v26 = v68;
  uint64_t v25 = v69;
  uint64_t v27 = v70;
  uint64_t v28 = v71;
  uint64_t v29 = a1[2];
  if (v29 == a1[1])
  {
    unint64_t v45 = v69;
  }
  else
  {
    do
    {
      if (v25 == v26)
      {
        if (v27 >= v28)
        {
          if (v28 == v25) {
            unint64_t v35 = 1;
          }
          else {
            unint64_t v35 = (v28 - v25) >> 2;
          }
          uint64_t v36 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v35);
          uint64_t v26 = v36;
          char v30 = &v36[(2 * v35 + 6) & 0xFFFFFFFFFFFFFFF8];
          uint64_t v39 = v27 - v25;
          BOOL v38 = v27 == v25;
          uint64_t v27 = v30;
          if (!v38)
          {
            uint64_t v27 = &v30[v39 & 0xFFFFFFFFFFFFFFF8];
            uint64_t v40 = 8 * (v39 >> 3);
            unint64_t v41 = v30;
            unsigned int v42 = v25;
            do
            {
              uint64_t v43 = *(void *)v42;
              v42 += 8;
              *(void *)unint64_t v41 = v43;
              v41 += 8;
              v40 -= 8;
            }
            while (v40);
          }
          uint64_t v28 = &v36[8 * v37];
          if (v25) {
            operator delete(v25);
          }
        }
        else
        {
          uint64_t v31 = (v28 - v27) >> 3;
          if (v31 >= -1) {
            uint64_t v32 = v31 + 1;
          }
          else {
            uint64_t v32 = v31 + 2;
          }
          uint64_t v33 = v32 >> 1;
          char v30 = &v25[8 * (v32 >> 1)];
          uint64_t v34 = v25;
          if (v27 != v25)
          {
            memmove(v30, v25, v27 - v25);
            uint64_t v34 = v27;
          }
          uint64_t v27 = &v34[8 * v33];
          uint64_t v26 = v25;
        }
      }
      else
      {
        char v30 = v25;
      }
      uint64_t v44 = *(void *)(v29 - 8);
      v29 -= 8;
      *((void *)v30 - 1) = v44;
      unint64_t v45 = v30 - 8;
      uint64_t v25 = v45;
    }
    while (v29 != a1[1]);
  }
  unsigned int v59 = (char *)*a1;
  *a1 = v26;
  a1[1] = v45;
  a1[2] = v27;
  a1[3] = v28;
  if (v59) {
    operator delete(v59);
  }
}

void sub_18A0DC008(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  operator delete(v10);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<GEORoadEdge * {__strong}*,std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>,0>(void ***a1, void **a2, void **a3, void **a4, void **a5)
{
  uint64_t v6 = a4;
  uint64_t v7 = a2;
  if (a2 == a3)
  {
    uint64_t v9 = a2;
  }
  else
  {
    uint64_t v9 = a3;
    uint64_t v10 = (void **)*a4;
    while (1)
    {
      uint64_t v11 = (char *)v10 - (char *)a5 + 4096;
      if (v9 - v7 >= v11 >> 3) {
        uint64_t v12 = v11 >> 3;
      }
      else {
        uint64_t v12 = v9 - v7;
      }
      if (v12)
      {
        uint64_t v13 = 8 * v12;
        uint64_t v14 = &v7[v12];
        do
        {
          uint64_t v15 = *v7;
          *v7++ = 0;
          uint64_t v16 = *a5;
          *a5++ = v15;

          v13 -= 8;
        }
        while (v13);
        uint64_t v7 = v14;
      }
      if (v7 == v9) {
        break;
      }
      uint64_t v17 = (void **)v6[1];
      ++v6;
      uint64_t v10 = v17;
      a5 = v17;
    }
    if ((char *)*v6 + 4096 == (char *)a5)
    {
      int64_t v18 = (void **)v6[1];
      ++v6;
      a5 = v18;
    }
  }
  *a1 = v9;
  a1[1] = v6;
  a1[2] = a5;
}

void std::__move_backward_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<GEORoadEdge * {__strong}*,std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>,0>(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v6 = a4;
  if (a2 == a3)
  {
    uint64_t v9 = a2;
  }
  else
  {
    uint64_t v9 = a3;
    uint64_t v10 = *a4;
    uint64_t v11 = a3;
    while (1)
    {
      uint64_t v12 = (uint64_t)a5 - v10;
      if ((v11 - a2) >> 3 >= v12 >> 3) {
        uint64_t v13 = v12 >> 3;
      }
      else {
        uint64_t v13 = (v11 - a2) >> 3;
      }
      if (v13)
      {
        uint64_t v14 = -8 * v13;
        uint64_t v15 = (uint64_t *)(v11 - 8);
        do
        {
          uint64_t v16 = *v15;
          *v15-- = 0;
          uint64_t v17 = (void *)*--a5;
          *a5 = v16;

          v14 += 8;
        }
        while (v14);
      }
      v11 -= 8 * v13;
      if (v11 == a2) {
        break;
      }
      uint64_t v18 = *--v6;
      uint64_t v10 = v18;
      a5 = (void *)(v18 + 4096);
    }
    if ((void *)(*v6 + 4096) == a5)
    {
      uint64_t v19 = (void *)v6[1];
      ++v6;
      a5 = v19;
    }
  }
  *a1 = v9;
  a1[1] = v6;
  a1[2] = a5;
}

uint64_t featureTypeForGEOFeatureType(int a1)
{
  uint64_t v1 = (a1 - 1);
  if (v1 < 0x29) {
    return v1 + 1;
  }
  else {
    return 0;
  }
}

void __GEOGetServiceRequesterLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "ServiceRequester");
  uint64_t v1 = (void *)_MergedGlobals_330;
  _MergedGlobals_330 = (uint64_t)v0;
}

void sub_18A0DF5B8(_Unwind_Exception *a1)
{
}

id GEOGetAuditTokenLog()
{
  if (qword_1EB2A0700 != -1) {
    dispatch_once(&qword_1EB2A0700, &__block_literal_global_168);
  }
  os_log_t v0 = (void *)qword_1EB2A06F8;

  return v0;
}

void __GEOGetAuditTokenLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "AuditToken");
  uint64_t v1 = (void *)qword_1EB2A06F8;
  qword_1EB2A06F8 = (uint64_t)v0;
}

void *__getAMSMediaArtworkCropStyleBoundedBoxSymbolLoc_block_invoke(uint64_t a1)
{
  unint64_t v2 = (void *)AppleMediaServicesLibrary();
  unint64_t result = dlsym(v2, "AMSMediaArtworkCropStyleBoundedBox");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  _MergedGlobals_332 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getAMSMediaArtworkCropStyleConstrainedHeightSymbolLoc_block_invoke(uint64_t a1)
{
  unint64_t v2 = (void *)AppleMediaServicesLibrary();
  unint64_t result = dlsym(v2, "AMSMediaArtworkCropStyleConstrainedHeight");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_1EB2A0710 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getAMSMediaArtworkCropStyleConstrainedWidthSymbolLoc_block_invoke(uint64_t a1)
{
  unint64_t v2 = (void *)AppleMediaServicesLibrary();
  unint64_t result = dlsym(v2, "AMSMediaArtworkCropStyleConstrainedWidth");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_1EB2A0718 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getAMSMediaArtworkCropStyleSquareCenterCropSymbolLoc_block_invoke(uint64_t a1)
{
  unint64_t v2 = (void *)AppleMediaServicesLibrary();
  unint64_t result = dlsym(v2, "AMSMediaArtworkCropStyleSquareCenterCrop");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_1EB2A0720 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getAMSMediaArtworkCropStyleSpecificRectangleSymbolLoc_block_invoke(uint64_t a1)
{
  unint64_t v2 = (void *)AppleMediaServicesLibrary();
  unint64_t result = dlsym(v2, "AMSMediaArtworkCropStyleSpecificRectangle");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_1EB2A0728 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getAMSMediaArtworkCropStyleSourceSizeSymbolLoc_block_invoke(uint64_t a1)
{
  unint64_t v2 = (void *)AppleMediaServicesLibrary();
  unint64_t result = dlsym(v2, "AMSMediaArtworkCropStyleSourceSize");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getAMSMediaArtworkCropStyleSourceSizeSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getAMSMediaArtworkFormatHEICSymbolLoc_block_invoke(uint64_t a1)
{
  unint64_t v2 = (void *)AppleMediaServicesLibrary();
  unint64_t result = dlsym(v2, "AMSMediaArtworkFormatHEIC");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getAMSMediaArtworkFormatHEICSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getAMSMediaArtworkFormatJPGSymbolLoc_block_invoke(uint64_t a1)
{
  unint64_t v2 = (void *)AppleMediaServicesLibrary();
  unint64_t result = dlsym(v2, "AMSMediaArtworkFormatJPG");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_1EB2A0730 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getAMSMediaArtworkFormatPNGSymbolLoc_block_invoke(uint64_t a1)
{
  unint64_t v2 = (void *)AppleMediaServicesLibrary();
  unint64_t result = dlsym(v2, "AMSMediaArtworkFormatPNG");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_1EB2A0738 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id GEOGetGEOComposedETARouteLog()
{
  if (qword_1EB2A0748 != -1) {
    dispatch_once(&qword_1EB2A0748, &__block_literal_global_197);
  }
  os_log_t v0 = (void *)_MergedGlobals_333;

  return v0;
}

void __GEOGetGEOComposedETARouteLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOComposedETARoute");
  uint64_t v1 = (void *)_MergedGlobals_333;
  _MergedGlobals_333 = (uint64_t)v0;
}

void sub_18A0E3450(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0E34C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)GEOSnappedRoutePath;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_18A0E36F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0E38C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0E3CD8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::__release_shared[abi:ne180100](v3);

  std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  _Unwind_Resume(a1);
}

void _addFullControlPoint(void ****a1, unsigned int a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = v5;
  if (v5) {
    [v5 zilchControlPointAt:a2];
  }
  else {
    memset(v8, 0, 32);
  }
  int v7 = zilch::ControlPoint::type((zilch::ControlPoint *)v8);
  if (a2 && v7 && [v6 coordinateCount] > (unint64_t)(a2 + 1)) {
    operator new();
  }
  zilch::Message::addPoint(*a1, (const zilch::ControlPoint *)v8);
}

void sub_18A0E40E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, std::__shared_weak_count *a17)
{
  if (a17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a17);
  }
  std::__shared_weak_count::__release_shared[abi:ne180100](v18);

  _Unwind_Resume(a1);
}

void sub_18A0E4508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_18A0E46C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0E4744(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void geo::SnappedPathMapMatchingSection::~SnappedPathMapMatchingSection(id *this)
{
}

{
  uint64_t vars8;

  objc_destroyWeak(this + 1);

  JUMPOUT(0x18C11F580);
}

uint64_t geo::SnappedPathMapMatchingSection::isMatchingCandidate(id *this)
{
  id WeakRetained = objc_loadWeakRetained(this + 1);
  uint64_t v2 = [WeakRetained isMapMatched];

  return v2;
}

void sub_18A0E490C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t geo::SnappedPathMapMatchingSection::polylineStart(id *this)
{
  id WeakRetained = objc_loadWeakRetained(this + 1);
  unsigned int v2 = [WeakRetained routeStartIndex];

  return v2;
}

void sub_18A0E4954(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t geo::SnappedPathMapMatchingSection::polylineEnd(id *this)
{
  id WeakRetained = objc_loadWeakRetained(this + 1);
  unsigned int v2 = [WeakRetained routeEndIndex];

  return v2;
}

void sub_18A0E499C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void geo::SnappedPathMapMatchingSection::forEachSegment(uint64_t a1, void *a2)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  BOOL v3 = a2;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 8));
  id v5 = [WeakRetained edges];

  uint64_t v16 = v5;
  uint64_t v6 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v6)
  {
    uint64_t v15 = *(void *)v18;
    do
    {
      uint64_t v7 = 0;
      uint64_t v14 = v6;
      do
      {
        if (*(void *)v18 != v15) {
          objc_enumerationMutation(v5);
        }
        uint64_t v8 = *(void **)(*((void *)&v17 + 1) + 8 * v7);
        uint64_t v9 = [v8 feature];
        uint64_t v10 = [v8 points];
        uint64_t v11 = [v8 routeOffsets];
        uint64_t v12 = 0;
        while (++v12 < (unint64_t)[v8 pointCount])
        {
          int v13 = v3[2](v3, v10, v10 + 8, v11, v11 + 8, v9);
          v10 += 8;
          v11 += 8;
          if (v13)
          {

            id v5 = v16;
            goto LABEL_12;
          }
        }

        ++v7;
        id v5 = v16;
      }
      while (v7 != v14);
      uint64_t v6 = [v16 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v6);
  }
LABEL_12:
}

void sub_18A0E4B6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void std::__shared_ptr_pointer<std::vector<zilch::GeoCoordinates> *,std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::__shared_ptr_default_delete<std::vector<zilch::GeoCoordinates> const,std::vector<zilch::GeoCoordinates>>,std::allocator<std::vector<zilch::GeoCoordinates>>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x18C11F580);
}

void std::__shared_ptr_pointer<std::vector<zilch::GeoCoordinates> *,std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::__shared_ptr_default_delete<std::vector<zilch::GeoCoordinates> const,std::vector<zilch::GeoCoordinates>>,std::allocator<std::vector<zilch::GeoCoordinates>>>::__on_zero_shared(uint64_t a1)
{
}

uint64_t std::__shared_ptr_pointer<std::vector<zilch::GeoCoordinates> *,std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::__shared_ptr_default_delete<std::vector<zilch::GeoCoordinates> const,std::vector<zilch::GeoCoordinates>>,std::allocator<std::vector<zilch::GeoCoordinates>>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void std::__shared_ptr_emplace<zilch::Message>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1ED518828;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<zilch::Message>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1ED518828;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x18C11F580);
}

void std::__shared_ptr_emplace<zilch::Message>::__on_zero_shared(uint64_t a1)
{
}

unint64_t GEOPBOfflinePerformanceMetricsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  unsigned int v10 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFCFFFEFFFFFFFDLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 3);
  if (v9 & 1 | (v10 > 3) | v8 & 1) {
    int v13 = 0;
  }
  else {
    int v13 = a3;
  }
  uint64_t v14 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v15 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_70;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      unint64_t v21 = *(void *)(v3 + v20);
      if (v21 == -1 || v21 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v22 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v21 + 1;
      v19 |= (unint64_t)(v22 & 0x7F) << v17;
      if ((v22 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      if (v18++ >= 9)
      {
        unint64_t v19 = 0;
        int v24 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v24 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v24 || (v19 & 7) == 4)
    {
LABEL_70:
      if (v12)
      {
        char v37 = 1;
        goto LABEL_80;
      }
      if (v13)
      {
        while (1)
        {
          int v38 = *v13++;
          char v39 = 2;
          switch(v38)
          {
            case 0:
              goto LABEL_81;
            case 1:
              goto LABEL_78;
            case 2:
              char v39 = 8;
              goto LABEL_78;
            case 3:
              char v39 = 4;
              goto LABEL_78;
            case 4:
              char v39 = 1;
              goto LABEL_78;
            case 5:
              char v39 = 16;
LABEL_78:
              *(unsigned char *)(a1 + 68) |= v39;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_81;
    }
    unint64_t v26 = v19 >> 3;
    BOOL v27 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      uint64_t v28 = v13;
      do
      {
        int v30 = *v28++;
        int v29 = v30;
        BOOL v27 = v30 != 0;
        if (v30) {
          BOOL v31 = v29 == v26;
        }
        else {
          BOOL v31 = 1;
        }
      }
      while (!v31);
    }
    switch((int)v26)
    {
      case 1:
        if (!v27) {
          goto LABEL_58;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) == 0)
        {
          uint64_t v32 = PBReaderReadString();
          uint64_t v33 = 24;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_79;
        }
        char v36 = *(unsigned char *)(a1 + 68) << 6;
        goto LABEL_66;
      case 2:
        if (!v27) {
          goto LABEL_58;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          uint64_t v32 = PBReaderReadString();
          uint64_t v33 = 40;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_79;
        }
        char v36 = 16 * *(unsigned char *)(a1 + 68);
        goto LABEL_66;
      case 3:
        if (!v27) {
          goto LABEL_58;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) == 0)
        {
          uint64_t v32 = PBReaderReadString();
          uint64_t v33 = 32;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_79;
        }
        char v36 = 32 * *(unsigned char *)(a1 + 68);
LABEL_66:
        v7 += v36 >> 7;
        goto LABEL_69;
      case 4:
        if (!v27) {
          goto LABEL_58;
        }
        if (*(unsigned char *)(a1 + 68))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_79:
            char v37 = 0;
            goto LABEL_80;
          }
          v7 -= *(unsigned char *)(a1 + 68) & 1;
        }
        else
        {
          uint64_t v32 = PBReaderReadString();
          uint64_t v33 = 16;
LABEL_52:
          uint64_t v34 = *(void **)(a1 + v33);
          *(void *)(a1 + v33) = v32;

          --v7;
        }
        goto LABEL_69;
      case 5:
        if (!v27 || (*(unsigned char *)(a1 + 68) & 0x10) != 0)
        {
LABEL_58:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_79;
          }
LABEL_69:
          if (!(v12 & 1 | (v7 != 0))) {
            goto LABEL_70;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_79;
        }
        unint64_t v35 = objc_alloc_init(GEOPBOfflineServiceMetrics);
        if (GEOPBOfflineServiceMetricsReadAllFrom((uint64_t)v35, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPBOfflinePerformanceMetrics _addNoFlagsServiceMetrics:](a1, v35);

          uint64_t v15 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_69;
        }

        char v37 = 0;
        uint64_t v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_80:
        *(unsigned char *)(a1 + 68) |= 2u;
        *(unsigned char *)(a1 + 68) |= 8u;
        *(unsigned char *)(a1 + 68) |= 4u;
        *(unsigned char *)(a1 + 68) |= 1u;
        *(unsigned char *)(a1 + 68) |= 0x10u;
        if (v37)
        {
LABEL_81:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_82;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v12)
          {
LABEL_82:
            uint64_t v40 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_79;
        }
        goto LABEL_69;
    }
  }
}

void sub_18A0E5748(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0E5CEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0E5DE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPBOfflinePerformanceMetricsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v1 = *(id *)(a1 + 48);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v6;
    while (1)
    {
      if (*(void *)v6 != v4) {
        objc_enumerationMutation(v1);
      }
      if (!--v3)
      {
        uint64_t v3 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
        if (!v3) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPBOfflinePerformanceMetricsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBOfflinePerformanceMetricsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPBOfflinePerformanceMetricsReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPBOfflinePerformanceMetricsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPBOfflinePerformanceMetricsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPBOfflinePerformanceMetricsCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18A0E605C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0E62DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0E6560(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0E6C7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineRequestMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 5) & 1) + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1) {
          uint64_t v15 = 0;
        }
        else {
          uint64_t v15 = a3;
        }
        BOOL v16 = v14 != 0;
        if (v14) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = v15 == 0;
        }
        BOOL v75 = v17;
        unsigned int v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_108;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v27 = v22++ >= 9;
      if (v27)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_108:
      if (v16)
      {
        char v68 = 1;
        goto LABEL_119;
      }
      if (!v15) {
        goto LABEL_120;
      }
      while (1)
      {
        int v70 = *v15++;
        int v69 = v70;
        if (v70 == 4) {
          break;
        }
        if (v69 == 6)
        {
          char v71 = 16;
LABEL_117:
          *(unsigned char *)(a1 + 60) |= v71;
        }
        else if (!v69)
        {
          goto LABEL_120;
        }
      }
      char v71 = 32;
      goto LABEL_117;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v16;
    if (!v75)
    {
      uint64_t v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_82;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (1)
        {
          uint64_t v39 = *v18;
          unint64_t v40 = *(void *)(v3 + v39);
          if (v40 == -1 || v40 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v41 = *(unsigned char *)(*(void *)(v3 + *v20) + v40);
          *(void *)(v3 + v39) = v40 + 1;
          v38 |= (unint64_t)(v41 & 0x7F) << v36;
          if ((v41 & 0x80) == 0) {
            goto LABEL_85;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_87;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_85:
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v38) = 0;
        }
LABEL_87:
        *(_DWORD *)(a1 + 52) = v38;
        goto LABEL_104;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_82;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v46 = *v18;
          unint64_t v47 = *(void *)(v3 + v46);
          if (v47 == -1 || v47 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v20) + v47);
            *(void *)(v3 + v46) = v47 + 1;
            v45 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              BOOL v27 = v44++ >= 9;
              if (v27)
              {
                uint64_t v45 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v45 = 0;
        }
LABEL_91:
        *(void *)(a1 + 32) = v45;
        goto LABEL_104;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_82;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        *(unsigned char *)(a1 + 60) |= 4u;
        while (2)
        {
          uint64_t v52 = *v18;
          unint64_t v53 = *(void *)(v3 + v52);
          if (v53 == -1 || v53 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v20) + v53);
            *(void *)(v3 + v52) = v53 + 1;
            v51 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v27 = v50++ >= 9;
              if (v27)
              {
                uint64_t v51 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v51 = 0;
        }
LABEL_95:
        BOOL v65 = v51 != 0;
        uint64_t v66 = 56;
        goto LABEL_100;
      case 4:
        if (!v31) {
          goto LABEL_82;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_125:
            char v68 = 0;
            goto LABEL_127;
          }
          v9 += *(unsigned __int8 *)(a1 + 60) << 26 >> 31;
        }
        else
        {
          uint64_t v55 = PBReaderReadString();
          long long v56 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v55;

          --v9;
        }
        goto LABEL_103;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_82;
        }
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v59 = 0;
        *(unsigned char *)(a1 + 60) |= 8u;
        while (2)
        {
          uint64_t v60 = *v18;
          unint64_t v61 = *(void *)(v3 + v60);
          if (v61 == -1 || v61 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(v3 + *v20) + v61);
            *(void *)(v3 + v60) = v61 + 1;
            v59 |= (unint64_t)(v62 & 0x7F) << v57;
            if (v62 < 0)
            {
              v57 += 7;
              BOOL v27 = v58++ >= 9;
              if (v27)
              {
                uint64_t v59 = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v59 = 0;
        }
LABEL_99:
        BOOL v65 = v59 != 0;
        uint64_t v66 = 57;
LABEL_100:
        *(unsigned char *)(a1 + v66) = v65;
        goto LABEL_104;
      case 6:
        if (!v31 || (*(unsigned char *)(a1 + 60) & 0x10) != 0)
        {
LABEL_82:
          char v64 = PBReaderSkipValueWithTag();
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v64 & 1) == 0)
          {
LABEL_118:
            char v68 = 0;
            goto LABEL_119;
          }
LABEL_104:
          if (v9) {
            char v67 = 1;
          }
          else {
            char v67 = v16;
          }
          if ((v67 & 1) == 0) {
            goto LABEL_108;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_125;
        }
        BOOL v74 = v16;
        uint64_t v63 = objc_alloc_init(GEOMapRegion);
        if (GEOMapRegionReadAllFrom((uint64_t)v63, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPBOfflineRequestMetadata _addNoFlagsDownloadedRegions:](a1, v63);

          BOOL v16 = v74;
LABEL_103:
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_104;
        }

        char v68 = 0;
        BOOL v16 = v74;
LABEL_127:
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_119:
        *(unsigned char *)(a1 + 60) |= 0x20u;
        *(unsigned char *)(a1 + 60) |= 0x10u;
        if (v68)
        {
LABEL_120:
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v16) {
            goto LABEL_121;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_121:
            uint64_t v72 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v42 = PBReaderSkipValueWithTag();
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v42) {
          goto LABEL_118;
        }
        goto LABEL_104;
    }
  }
}

void sub_18A0E7660(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0E82C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPBOfflineRequestMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 16);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPBOfflineRequestMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBOfflineRequestMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPBOfflineRequestMetadataReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPBOfflineRequestMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPBOfflineRequestMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPBOfflineRequestMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18A0E855C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineRequestMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPBOfflineRequestMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A0E85C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBOfflineRequestMetadataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_54;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_59;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            unint64_t v24 = *(void *)&a1[v23];
            if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
              goto LABEL_54;
            }
            unint64_t v25 = v24 + 1;
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_59;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            unint64_t v29 = *(void *)&a1[v28];
            if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
              goto LABEL_54;
            }
            unint64_t v30 = v29 + 1;
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_59;
          }
        case 4u:
          if (v14 == 2) {
            goto LABEL_44;
          }
          goto LABEL_62;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v32 = 0;
          break;
        case 6u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1)) {
            goto LABEL_62;
          }
          PBReaderRecallMark();
          continue;
        default:
LABEL_44:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_62:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        unint64_t v34 = *(void *)&a1[v33];
        if (v34 == -1 || v34 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v35 = v34 + 1;
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v21 = v32++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_59;
      }
LABEL_54:
      a1[*v4] = 1;
LABEL_59:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

void sub_18A0E8BFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBOfflineRequestMetadataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x70) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18A0E921C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0E9864(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineResponseMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          unsigned int v16 = 0;
        }
        else {
          unsigned int v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v47 = v17;
        unint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_60;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_25;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_60:
      if (v15)
      {
        char v41 = 1;
        goto LABEL_72;
      }
      if (!v16) {
        goto LABEL_73;
      }
      while (1)
      {
        int v44 = *v16++;
        int v43 = v44;
        if (v44 == 1) {
          break;
        }
        if (v43 == 2)
        {
          char v42 = 1;
LABEL_66:
          *(unsigned char *)(a1 + 44) |= v42;
        }
        else if (!v43)
        {
          goto LABEL_73;
        }
      }
      char v42 = 2;
      goto LABEL_66;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v15;
    if (!v47)
    {
      unsigned int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 2) {
      break;
    }
    if (v30 == 1)
    {
      if (v31)
      {
        if ((*(unsigned char *)(a1 + 44) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_71;
          }
          v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
        }
        else
        {
          uint64_t v36 = PBReaderReadString();
          BOOL v37 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v36;

          --v9;
        }
        goto LABEL_56;
      }
LABEL_50:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_71;
      }
      goto LABEL_56;
    }
    if (!PBReaderSkipValueWithTag()) {
      goto LABEL_71;
    }
LABEL_56:
    if (v9) {
      char v40 = 1;
    }
    else {
      char v40 = v15;
    }
    if ((v40 & 1) == 0) {
      goto LABEL_60;
    }
  }
  if (!v31) {
    goto LABEL_50;
  }
  if (*(unsigned char *)(a1 + 44))
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_71:
      char v41 = 0;
      goto LABEL_72;
    }
    v9 -= *(unsigned char *)(a1 + 44) & 1;
    goto LABEL_56;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_71;
  }
  uint64_t v38 = objc_alloc_init(GEOPBOfflinePerformanceMetrics);
  if (GEOPBOfflinePerformanceMetricsReadAllFrom((uint64_t)v38, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    uint64_t v39 = *(void **)(a1 + 16);
    *(void *)(a1 + 16) = v38;

    --v9;
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_56;
  }

  char v41 = 0;
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + 44) |= 2u;
  *(unsigned char *)(a1 + 44) |= 1u;
  if (v41)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v15) {
      goto LABEL_74;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v15)
    {
LABEL_74:
      uint64_t v45 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_18A0E9E44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A0EA84C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineResponseMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBOfflineResponseMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPBOfflineResponseMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPBOfflineResponseMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPBOfflineResponseMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPBOfflinePerformanceMetrics readAll:](*(void *)(a1 + 16), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18A0EA9F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineResponseMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPBOfflineResponseMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A0EAA58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBOfflineResponseMetadataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_107:
    BOOL v52 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v52;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    if (a1[*v4]) {
      goto LABEL_107;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      unint64_t v10 = *(void *)&a1[v9];
      if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
        break;
      }
      char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v10 + 1;
      v8 |= (unint64_t)(v11 & 0x7F) << v6;
      if ((v11 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v12 = v7++ >= 9;
      if (v12)
      {
        unint64_t v8 = 0;
        int v13 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v13 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v14 = v8 & 7;
    if (v13 || v14 == 4) {
      goto LABEL_107;
    }
    if ((v8 >> 3) != 2)
    {
      if ((v8 >> 3) == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_110;
      }
      goto LABEL_106;
    }
    if (v14 != 2 || !PBReaderPlaceMark()) {
      goto LABEL_110;
    }
    objc_msgSend(a1, "position", 0, 0);
    [a1 length];
LABEL_25:
    if (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
    {
      char v16 = 0;
      unsigned int v17 = 0;
      unint64_t v18 = 0;
      while (1)
      {
        uint64_t v19 = *v2;
        unint64_t v20 = *(void *)&a1[v19];
        if (v20 == -1 || v20 >= *(void *)&a1[*v3]) {
          break;
        }
        char v21 = *(unsigned char *)(*(void *)&a1[*v5] + v20);
        *(void *)&a1[v19] = v20 + 1;
        v18 |= (unint64_t)(v21 & 0x7F) << v16;
        if ((v21 & 0x80) == 0) {
          goto LABEL_35;
        }
        v16 += 7;
        BOOL v12 = v17++ >= 9;
        if (v12)
        {
          unint64_t v18 = 0;
          int v22 = a1[*v4];
          goto LABEL_37;
        }
      }
      a1[*v4] = 1;
LABEL_35:
      int v22 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v18 = 0;
      }
LABEL_37:
      int v23 = v18 & 7;
      if (!v22 && v23 != 4) {
        break;
      }
    }
    int v51 = a1[*v4];
    PBReaderRecallMark();
    if (v51) {
      goto LABEL_110;
    }
    PBReaderRecallMark();
LABEL_106:
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      goto LABEL_107;
    }
  }
  switch((v18 >> 3))
  {
    case 1u:
      if (v23 != 2) {
        goto LABEL_109;
      }
      goto LABEL_49;
    case 2u:
      if (v23 == 2) {
        goto LABEL_49;
      }
      goto LABEL_109;
    case 3u:
      if (v23 == 2) {
        goto LABEL_49;
      }
      goto LABEL_109;
    case 4u:
      if (v23 == 2) {
        goto LABEL_49;
      }
      goto LABEL_109;
    case 5u:
      if (v23 != 2 || !PBReaderPlaceMark()) {
        goto LABEL_109;
      }
      [a1 position];
      [a1 length];
      break;
    default:
LABEL_49:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_109;
      }
      goto LABEL_25;
  }
LABEL_54:
  while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
  {
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v2;
      unint64_t v29 = *(void *)&a1[v28];
      if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)&a1[*v5] + v29);
      *(void *)&a1[v28] = v29 + 1;
      v27 |= (unint64_t)(v30 & 0x7F) << v25;
      if ((v30 & 0x80) == 0) {
        goto LABEL_64;
      }
      v25 += 7;
      BOOL v12 = v26++ >= 9;
      if (v12)
      {
        unint64_t v27 = 0;
        int v31 = a1[*v4];
        goto LABEL_66;
      }
    }
    a1[*v4] = 1;
LABEL_64:
    int v31 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v27 = 0;
    }
LABEL_66:
    if (v31 || (v27 & 7) == 4) {
      break;
    }
    unint64_t v33 = v27 >> 3;
    if ((v27 >> 3) == 3)
    {
      if ((v27 & 7) != 0) {
        goto LABEL_108;
      }
      unsigned int v45 = 0;
      while (1)
      {
        uint64_t v46 = *v2;
        unint64_t v47 = *(void *)&a1[v46];
        if (v47 == -1 || v47 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v48 = v47 + 1;
        int v49 = *(char *)(*(void *)&a1[*v5] + v47);
        *(void *)&a1[v46] = v48;
        if (v49 < 0)
        {
          BOOL v39 = v45++ > 8;
          if (!v39) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_97:
      a1[*v4] = 1;
    }
    else
    {
      if (v33 == 2)
      {
        if ((v27 & 7) != 0) {
          goto LABEL_108;
        }
        unsigned int v40 = 0;
        while (1)
        {
          uint64_t v41 = *v2;
          unint64_t v42 = *(void *)&a1[v41];
          if (v42 == -1 || v42 >= *(void *)&a1[*v3]) {
            goto LABEL_97;
          }
          unint64_t v43 = v42 + 1;
          int v44 = *(char *)(*(void *)&a1[*v5] + v42);
          *(void *)&a1[v41] = v43;
          if (v44 < 0)
          {
            BOOL v39 = v40++ > 8;
            if (!v39) {
              continue;
            }
          }
          goto LABEL_54;
        }
      }
      if (v33 == 1)
      {
        if ((v27 & 7) != 0) {
          goto LABEL_108;
        }
        unsigned int v34 = 0;
        while (1)
        {
          uint64_t v35 = *v2;
          unint64_t v36 = *(void *)&a1[v35];
          if (v36 == -1 || v36 >= *(void *)&a1[*v3]) {
            goto LABEL_97;
          }
          unint64_t v37 = v36 + 1;
          int v38 = *(char *)(*(void *)&a1[*v5] + v36);
          *(void *)&a1[v35] = v37;
          if (v38 < 0)
          {
            BOOL v39 = v34++ > 8;
            if (!v39) {
              continue;
            }
          }
          goto LABEL_54;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_108:
        PBReaderRecallMark();
        goto LABEL_109;
      }
    }
  }
  int v50 = a1[*v4];
  PBReaderRecallMark();
  if (!v50)
  {
    PBReaderRecallMark();
    goto LABEL_25;
  }
LABEL_109:
  PBReaderRecallMark();
LABEL_110:
  PBReaderRecallMark();
  return 0;
}

void sub_18A0EB1B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBOfflineResponseMetadataIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 44) & 6) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 44) & 1) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(v3 + 64));
  BOOL v2 = (*(unsigned char *)(v3 + 68) & 0x3F) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 64));
  return v2;
}

os_unfair_lock_s *GEOPBOfflineResponseMetadataIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPBOfflineResponseMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A0EB4F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBOfflineServiceMetricsReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v17 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          *(unsigned char *)(a1 + 28) |= 4u;
          while (1)
          {
            uint64_t v27 = *v4;
            unint64_t v28 = *(void *)&v3[v27];
            if (v28 == -1 || v28 >= *(void *)&v3[*v5]) {
              break;
            }
            char v29 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
            *(void *)&v3[v27] = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if ((v29 & 0x80) == 0) {
              goto LABEL_50;
            }
            v24 += 7;
            BOOL v14 = v25++ >= 9;
            if (v14)
            {
              LODWORD(v26) = 0;
              goto LABEL_52;
            }
          }
          v3[*v6] = 1;
LABEL_50:
          if (v3[*v6]) {
            LODWORD(v26) = 0;
          }
LABEL_52:
          *(_DWORD *)(a1 + 24) = v26;
        }
        else
        {
          if (v17 == 2)
          {
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 28) |= 2u;
            while (1)
            {
              uint64_t v32 = *v4;
              unint64_t v33 = *(void *)&v3[v32];
              if (v33 == -1 || v33 >= *(void *)&v3[*v5]) {
                break;
              }
              char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v33);
              *(void *)&v3[v32] = v33 + 1;
              v20 |= (unint64_t)(v34 & 0x7F) << v30;
              if ((v34 & 0x80) == 0) {
                goto LABEL_54;
              }
              v30 += 7;
              BOOL v14 = v31++ >= 9;
              if (v14)
              {
                uint64_t v20 = 0;
                goto LABEL_56;
              }
            }
            v3[*v6] = 1;
LABEL_54:
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_56:
            uint64_t v35 = 16;
          }
          else
          {
            if (v17 != 1)
            {
              if (!PBReaderSkipValueWithTag()) {
                goto LABEL_60;
              }
              continue;
            }
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 28) |= 1u;
            while (1)
            {
              uint64_t v21 = *v4;
              unint64_t v22 = *(void *)&v3[v21];
              if (v22 == -1 || v22 >= *(void *)&v3[*v5]) {
                break;
              }
              char v23 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0) {
                goto LABEL_46;
              }
              v18 += 7;
              BOOL v14 = v19++ >= 9;
              if (v14)
              {
                uint64_t v20 = 0;
                goto LABEL_48;
              }
            }
            v3[*v6] = 1;
LABEL_46:
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_48:
            uint64_t v35 = 8;
          }
          *(void *)(a1 + v35) = v20;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    BOOL v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_18A0EBE40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id MapsFeatureFlag_AddBlockListener(void *a1, void *a2, void *a3)
{
  v22[3] = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  v20[0] = 0;
  v20[1] = v20;
  v20[2] = 0x2020000000;
  char v21 = 0;
  char v21 = GEOIsFeatureActive(v5);
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  v16[2] = __MapsFeatureFlag_AddBlockListener_block_invoke;
  v16[3] = &unk_1E53F5AB0;
  id v8 = v5;
  id v17 = v8;
  unsigned int v19 = v20;
  id v9 = v7;
  id v18 = v9;
  unint64_t v10 = (void *)MEMORY[0x18C120660](v16);
  uint64_t v11 = _GEOConfigAddBlockListenerForKey(MapsFeaturesConfig_RemoteFeatureFlags, (uint64_t)off_1E9111BD8, v6, v10);
  unint64_t v12 = _GEOConfigAddBlockListenerForKey(GeoServicesConfig_ClientAuthFeatureFlagsStateInfo, (uint64_t)off_1E9114AD8, v6, v10);
  char v13 = _GEOConfigAddBlockListenerForKey(GeoServicesConfig_MapsAuthClientFeatureFlagsLastUpdated, (uint64_t)off_1E9114B28, v6, v10);
  v22[0] = v11;
  v22[1] = v12;
  v22[2] = v13;
  BOOL v14 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:3];

  _Block_object_dispose(v20, 8);

  return v14;
}

void sub_18A0EC320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void MapsFeatureFlag_RemoveBlockListener(void *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    long long v9 = 0u;
    long long v10 = 0u;
    long long v7 = 0u;
    long long v8 = 0u;
    id v2 = v1;
    uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = *(void *)v8;
      do
      {
        uint64_t v6 = 0;
        do
        {
          if (*(void *)v8 != v5) {
            objc_enumerationMutation(v2);
          }
          GEOConfigRemoveBlockListener(*(void **)(*((void *)&v7 + 1) + 8 * v6++));
        }
        while (v4 != v6);
        uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
      }
      while (v4);
    }
  }
  else
  {
    GEOConfigRemoveBlockListener(v1);
  }
}

void MapsFeatureFlag_AddDelegateListener(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v17 = 0;
  id v18 = &v17;
  uint64_t v19 = 0x3032000000;
  uint64_t v20 = __Block_byref_object_copy__96;
  char v21 = __Block_byref_object_dispose__96;
  id v22 = 0;
  objc_initWeak(&location, v7);
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = __MapsFeatureFlag_AddDelegateListener_block_invoke;
  v14[3] = &unk_1E53F5AD8;
  objc_copyWeak(&v15, &location);
  v14[4] = &v17;
  uint64_t v8 = MapsFeatureFlag_AddBlockListener(v5, v6, v14);
  long long v9 = (void *)v18[5];
  v18[5] = v8;

  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  void v11[2] = __MapsFeatureFlag_AddDelegateListener_block_invoke_2;
  v11[3] = &unk_1E53F5B00;
  id v10 = v7;
  id v12 = v10;
  char v13 = &v17;
  withFFDelegateListeners(v11);

  objc_destroyWeak(&v15);
  objc_destroyWeak(&location);
  _Block_object_dispose(&v17, 8);
}

void sub_18A0EC678(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location,char a23)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a23, 8);
  _Unwind_Resume(a1);
}

void withFFDelegateListeners(void *a1)
{
  uint64_t v3 = a1;
  os_unfair_lock_lock(&_MergedGlobals_334);
  if (!qword_1EB2A0758)
  {
    uint64_t v1 = [MEMORY[0x1E4F28E10] weakToStrongObjectsMapTable];
    id v2 = (void *)qword_1EB2A0758;
    qword_1EB2A0758 = v1;
  }
  v3[2]();
  os_unfair_lock_unlock(&_MergedGlobals_334);
}

void sub_18A0EC7C4(_Unwind_Exception *a1)
{
}

void MapsFeatureFlag_RemoveDelegateListenerForAllKeys(void *a1)
{
  id v1 = a1;
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  v3[2] = __MapsFeatureFlag_RemoveDelegateListenerForAllKeys_block_invoke;
  v3[3] = &unk_1E53E4F00;
  id v4 = v1;
  id v2 = v1;
  withFFDelegateListeners(v3);
}

void MapsFeature_RemoveBlockListener(void *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    long long v9 = 0u;
    long long v10 = 0u;
    long long v7 = 0u;
    long long v8 = 0u;
    id v2 = v1;
    uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = *(void *)v8;
      do
      {
        uint64_t v6 = 0;
        do
        {
          if (*(void *)v8 != v5) {
            objc_enumerationMutation(v2);
          }
          GEOConfigRemoveBlockListener(*(void **)(*((void *)&v7 + 1) + 8 * v6++));
        }
        while (v4 != v6);
        uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
      }
      while (v4);
    }
  }
  else
  {
    GEOConfigRemoveBlockListener(v1);
  }
}

void MapsFeature_RemoveDelegateListenerForAllKeys(void *a1)
{
  id v1 = a1;
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  v3[2] = __MapsFeature_RemoveDelegateListenerForAllKeys_block_invoke;
  v3[3] = &unk_1E53E4F00;
  id v4 = v1;
  id v2 = v1;
  withSFFDelegateListeners(v3);
}

uint64_t MapsFeature_IsAvailable(int a1, void *a2)
{
  uint64_t result = 0;
  switch(a1)
  {
    case 4:
      id v4 = off_1E9111BE8;
      BOOL v5 = MapsFeaturesConfig_IsMuninEnabled == 4;
      goto LABEL_68;
    case 5:
      id v4 = off_1E9111BF8;
      BOOL v5 = MapsFeaturesConfig_EnableEVRouting == 5;
      goto LABEL_68;
    case 6:
      id v4 = off_1E9111C08;
      BOOL v5 = MapsFeaturesConfig_ShouldEnableLagunaBeach == 6;
      goto LABEL_68;
    case 7:
      id v4 = off_1E9111C18;
      BOOL v5 = MapsFeaturesConfig_EnableAlberta == 7;
      goto LABEL_68;
    case 8:
      if (MapsFeaturesConfig_Watermarking != 8 || a2 != off_1E9111C28) {
        return 0;
      }
      return GEOIsFeatureActive(@"MapsDisableWatermark") ^ 1;
    case 9:
      id v4 = off_1E9111C38;
      BOOL v5 = MapsFeaturesConfig_ShelbyvilleGlobe == 9;
      goto LABEL_68;
    case 10:
      id v4 = off_1E9111C48;
      BOOL v5 = MapsFeaturesConfig_ShelbyvilleAdvancedWater == 10;
      goto LABEL_68;
    case 11:
      id v4 = off_1E9111C58;
      BOOL v5 = MapsFeaturesConfig_ShelbyvilleAdvancedLighting == 11;
      goto LABEL_68;
    case 12:
      id v4 = off_1E9111C68;
      BOOL v5 = MapsFeaturesConfig_ShelbyvilleRoundedBuildings == 12;
      goto LABEL_68;
    case 13:
      id v4 = off_1E9111C78;
      BOOL v5 = MapsFeaturesConfig_ShelbyvilleColorizedBuildings == 13;
      goto LABEL_68;
    case 14:
      id v4 = off_1E9111C88;
      BOOL v5 = MapsFeaturesConfig_ShelbyvilleBuildingHeights == 14;
      goto LABEL_68;
    case 15:
      id v4 = off_1E9111C98;
      BOOL v5 = MapsFeaturesConfig_ShelbyvilleTerrain == 15;
      goto LABEL_68;
    case 16:
      id v4 = off_1E9111CA8;
      BOOL v5 = MapsFeaturesConfig_ShelbyvilleStonehenge == 16;
      goto LABEL_68;
    case 17:
      id v4 = off_1E9111CB8;
      BOOL v5 = MapsFeaturesConfig_ShelbyvilleSearch == 17;
      goto LABEL_68;
    case 18:
      id v4 = off_1E9111CC8;
      BOOL v5 = MapsFeaturesConfig_ShelbyvillePuck == 18;
      goto LABEL_68;
    case 19:
      id v4 = off_1E9111CD8;
      BOOL v5 = MapsFeaturesConfig_EnableBakersfield == 19;
      goto LABEL_68;
    case 20:
      id v4 = off_1E9111CE8;
      BOOL v5 = MapsFeaturesConfig_Maps269Enabled == 20;
      goto LABEL_68;
    case 21:
      id v4 = off_1E9111CF8;
      BOOL v5 = MapsFeaturesConfig_PedestrianAREnabled == 21;
      goto LABEL_68;
    case 22:
      id v4 = off_1E9111D08;
      BOOL v5 = MapsFeaturesConfig_Maps298Enabled == 22;
      goto LABEL_68;
    case 23:
      id v4 = off_1E9111D18;
      BOOL v5 = MapsFeaturesConfig_Maps357RoutePlanningEnabled == 23;
      goto LABEL_68;
    case 24:
      id v4 = off_1E9111D28;
      BOOL v5 = MapsFeaturesConfig_PlaceCardShowcase == 24;
      goto LABEL_68;
    case 25:
      id v4 = off_1E9111D38;
      BOOL v5 = MapsFeaturesConfig_GuidesMediaIntegrationEnabled == 25;
      goto LABEL_68;
    case 26:
      id v4 = off_1E9111D48;
      BOOL v5 = MapsFeaturesConfig_GuidesMediaIntegrationThirdPartyLinksEnabled == 26;
      goto LABEL_68;
    case 27:
      id v4 = off_1E9111D58;
      BOOL v5 = MapsFeaturesConfig_ShelbyvilleMapKitEnabled == 27;
      goto LABEL_68;
    case 28:
      id v4 = off_1E9111D68;
      BOOL v5 = MapsFeaturesConfig_DrivingMultiWaypointRoutesEnabled == 28;
      goto LABEL_68;
    case 29:
      id v4 = off_1E9111D78;
      BOOL v5 = MapsFeaturesConfig_Maps420 == 29;
      goto LABEL_68;
    case 30:
      id v4 = off_1E9111D88;
      BOOL v5 = MapsFeaturesConfig_TransitPayEnabled == 30;
      goto LABEL_68;
    case 31:
      id v4 = off_1E9111D98;
      BOOL v5 = MapsFeaturesConfig_RAPSydneyEnabled == 31;
      goto LABEL_68;
    case 32:
      id v4 = off_1E9111DA8;
      BOOL v5 = MapsFeaturesConfig_PlaceCardWebViewEnabled == 32;
      goto LABEL_68;
    case 33:
      id v4 = off_1E9111DB8;
      BOOL v5 = MapsFeaturesConfig_SydneyARPEnabled == 33;
      goto LABEL_68;
    case 34:
      id v4 = off_1E9111DC8;
      BOOL v5 = MapsFeaturesConfig_VisualLocalizationCrowdsourcingEnabled == 34;
      goto LABEL_68;
    case 35:
      id v4 = off_1E9111DD8;
      BOOL v5 = MapsFeaturesConfig_ElevatedPolygonsEnabled == 35;
      goto LABEL_68;
    case 36:
      id v4 = off_1E9111DE8;
      BOOL v5 = MapsFeaturesConfig_SearchResultsImpressions == 36;
      goto LABEL_68;
    case 37:
      id v4 = off_1E9111DF8;
      BOOL v5 = MapsFeaturesConfig_StandaloneWatchOffline == 37;
      goto LABEL_68;
    case 38:
      id v4 = off_1E9111E08;
      BOOL v5 = MapsFeaturesConfig_RAPCommunityIDEnabled == 38;
      goto LABEL_68;
    case 39:
      id v4 = off_1E9111E18;
      BOOL v5 = MapsFeaturesConfig_RealTimeEVCharger == 39;
      goto LABEL_68;
    case 40:
      id v4 = off_1E9111E28;
      BOOL v5 = MapsFeaturesConfig_HikingWatchEnabled == 40;
      goto LABEL_68;
    case 41:
      id v4 = off_1E9111E38;
      BOOL v5 = MapsFeaturesConfig_HikingiOSEnabled == 41;
      goto LABEL_68;
    case 42:
      id v4 = off_1E9111E48;
      BOOL v5 = MapsFeaturesConfig_EVRoutingEnhancements == 42;
      goto LABEL_68;
    case 43:
      id v4 = off_1E9111E58;
      BOOL v5 = MapsFeaturesConfig_MapsWally == 43;
      goto LABEL_68;
    case 44:
      id v4 = off_1E9111E68;
      BOOL v5 = MapsFeaturesConfig_ARPCommunityIDEnabled == 44;
      goto LABEL_68;
    case 45:
      id v4 = off_1E9111E78;
      BOOL v5 = MapsFeaturesConfig_SSAOEnabled == 45;
      goto LABEL_68;
    case 46:
      id v4 = off_1E9111E88;
      BOOL v5 = MapsFeaturesConfig_OrderPickupEnabled == 46;
      goto LABEL_68;
    case 47:
      id v4 = off_1E9111E98;
      BOOL v5 = MapsFeaturesConfig_SPRForMapSnapshots == 47;
      goto LABEL_68;
    case 48:
      id v4 = off_1E9111EA8;
      BOOL v5 = MapsFeaturesConfig_OptimizeSearchResultComponents == 48;
      goto LABEL_68;
    case 49:
      id v4 = off_1E9111EB8;
      BOOL v5 = MapsFeaturesConfig_SearchAndDiscovery == 49;
      goto LABEL_68;
    case 50:
      id v4 = off_1E9111EC8;
      BOOL v5 = MapsFeaturesConfig_MyPlacesFeatures == 50;
      goto LABEL_68;
    case 51:
      if (MapsFeaturesConfig_Maps102 != 51 || a2 != off_1E9111ED8) {
        return 0;
      }
      return GEOIsFeatureActive(@"MapsFutureRelease");
    case 52:
      id v4 = off_1E9111EE8;
      BOOL v5 = MapsFeaturesConfig_FlexibleActionLinksEnabled == 52;
      goto LABEL_68;
    case 53:
      id v4 = off_1E9111EF8;
      BOOL v5 = MapsFeaturesConfig_FrenchClimateLaw == 53;
      goto LABEL_68;
    case 54:
      id v4 = off_1E9111F08;
      BOOL v5 = MapsFeaturesConfig_VKMLayoutEnabled_SPR == 54;
      goto LABEL_68;
    case 55:
      id v4 = off_1E9111F18;
      BOOL v5 = MapsFeaturesConfig_VKMLayoutEnabled_Navigation == 55;
      goto LABEL_68;
    case 56:
      id v4 = off_1E9111F28;
      BOOL v5 = MapsFeaturesConfig_VKMLayoutEnabled_Flyover == 56;
      goto LABEL_68;
    case 58:
      id v4 = off_1E9111F48;
      BOOL v5 = MapsFeaturesConfig_Maps182 == 58;
      goto LABEL_68;
    case 59:
      id v4 = off_1E9111F58;
      BOOL v5 = MapsFeaturesConfig_URLUnification == 59;
      goto LABEL_68;
    case 60:
      id v4 = off_1E9111F68;
      BOOL v5 = MapsFeaturesConfig_FCLWithEmissionsAndETA == 60;
      goto LABEL_68;
    case 61:
      id v4 = off_1E9111F78;
      BOOL v5 = MapsFeaturesConfig_FCLShowETA == 61;
LABEL_68:
      uint64_t result = v5 && a2 == v4;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t MapsFeature_IsAvailable_Munin()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_EVRouting()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_LagunaBeach()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_Alberta()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_Watermarking()
{
  return GEOIsFeatureActive(@"MapsDisableWatermark") ^ 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleGlobe()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleAdvancedWater()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleAdvancedLighting()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleRoundedBuildings()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleColorizedBuildings()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleBuildingHeights()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleTerrain()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleStonehenge()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleSearch()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvillePuck()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_Bakersfield()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_Maps269()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_Maps357RoutePlanning()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_PlaceCardShowcase()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_GuidesMediaIntegration()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_GuidesMediaIntegrationThirdPartyLinks()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleMapKit()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_DrivingMultiWaypointRoutes()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_Maps420()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_TransitPay()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_RAPSydney()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_PlaceCardWebView()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_SydneyARP()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_VisualLocalizationCrowdsourcing()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_SearchResultsImpressions()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_StandaloneWatchOffline()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_RAPCommunityID()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_RealTimeEVCharger()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_HikingWatch()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_HikingiOS()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_EVRoutingEnhancements()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_MapsWally()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ARPCommunityID()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_OrderPickup()
{
  return 1;
}

uint64_t MapKitFeature_IsAvailable_SPRForMapSnapshots()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_OptimizeSearchResultComponents()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_SearchAndDiscovery()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_MyPlacesFeatures()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_Maps102()
{
  return GEOIsFeatureActive(@"MapsFutureRelease");
}

uint64_t MapsFeature_IsAvailable_FlexibleActionLinks()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_FrenchClimateLaw()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_VKMLayout_SPR()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_VKMLayout_Navigation()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_VKMLayout_Flyover()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_Maps182()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_URLUnification()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_FCLWithEmissionsAndETA()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_FCLShowETA()
{
  return 1;
}

uint64_t MapsFeature_IsEnabled_Munin()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_IsMuninEnabled, (uint64_t)off_1E9111BE8);
}

uint64_t MapsFeature_IsEnabled_Watermarking()
{
  uint64_t result = GEOConfigGetBOOL(MapsFeaturesConfig_Watermarking, (uint64_t)off_1E9111C28);
  if (result) {
    return GEOIsFeatureActive(@"MapsDisableWatermark") ^ 1;
  }
  return result;
}

uint64_t MapsFeature_IsEnabled_ShelbyvilleStonehenge()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_ShelbyvilleStonehenge, (uint64_t)off_1E9111CA8);
}

uint64_t MapsFeature_IsEnabled_ShelbyvilleSearch()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_ShelbyvilleSearch, (uint64_t)off_1E9111CB8);
}

uint64_t MapsFeature_IsEnabled_ShelbyvillePuck()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_ShelbyvillePuck, (uint64_t)off_1E9111CC8);
}

uint64_t MapsFeature_IsEnabled_Maps357RoutePlanning()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_Maps357RoutePlanningEnabled, (uint64_t)off_1E9111D18);
}

uint64_t MapsFeature_IsEnabled_PlaceCardShowcase()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_PlaceCardShowcase, (uint64_t)off_1E9111D28);
}

uint64_t MapsFeature_IsEnabled_GuidesMediaIntegration()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_GuidesMediaIntegrationEnabled, (uint64_t)off_1E9111D38);
}

uint64_t MapsFeature_IsEnabled_GuidesMediaIntegrationThirdPartyLinks()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_GuidesMediaIntegrationThirdPartyLinksEnabled, (uint64_t)off_1E9111D48);
}

uint64_t MapsFeature_IsEnabled_ShelbyvilleMapKit()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_ShelbyvilleMapKitEnabled, (uint64_t)off_1E9111D58);
}

uint64_t MapsFeature_IsEnabled_DrivingMultiWaypointRoutes()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_DrivingMultiWaypointRoutesEnabled, (uint64_t)off_1E9111D68);
}

uint64_t MapsFeature_IsEnabled_Maps420()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_Maps420, (uint64_t)off_1E9111D78);
}

uint64_t MapsFeature_IsEnabled_RAPSydney()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_RAPSydneyEnabled, (uint64_t)off_1E9111D98);
}

uint64_t MapsFeature_IsEnabled_PlaceCardWebView()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_PlaceCardWebViewEnabled, (uint64_t)off_1E9111DA8);
}

uint64_t MapsFeature_IsEnabled_SydneyARP()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_SydneyARPEnabled, (uint64_t)off_1E9111DB8);
}

uint64_t MapsFeature_IsEnabled_VisualLocalizationCrowdsourcing()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_VisualLocalizationCrowdsourcingEnabled, (uint64_t)off_1E9111DC8);
}

uint64_t MapsFeature_IsEnabled_SearchResultsImpressions()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_SearchResultsImpressions, (uint64_t)off_1E9111DE8);
}

uint64_t MapsFeature_IsEnabled_StandaloneWatchOffline()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_StandaloneWatchOffline, (uint64_t)off_1E9111DF8);
}

uint64_t MapsFeature_IsEnabled_RAPCommunityID()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_RAPCommunityIDEnabled, (uint64_t)off_1E9111E08);
}

uint64_t MapsFeature_IsEnabled_HikingWatch()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_HikingWatchEnabled, (uint64_t)off_1E9111E28);
}

uint64_t MapsFeature_IsEnabled_MapsWally()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_MapsWally, (uint64_t)off_1E9111E58);
}

uint64_t MapsFeature_IsEnabled_ARPCommunityID()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_ARPCommunityIDEnabled, (uint64_t)off_1E9111E68);
}

uint64_t MapsFeature_IsEnabled_SSAO()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_SSAOEnabled, (uint64_t)off_1E9111E78);
}

uint64_t MapsFeature_IsEnabled_OrderPickup()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_OrderPickupEnabled, (uint64_t)off_1E9111E88);
}

uint64_t MapKitFeature_IsEnabled_SPRForMapSnapshots()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_SPRForMapSnapshots, (uint64_t)off_1E9111E98);
}

uint64_t MapsFeature_IsEnabled_OptimizeSearchResultComponents()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_OptimizeSearchResultComponents, (uint64_t)off_1E9111EA8);
}

uint64_t MapsFeature_IsEnabled_Maps102()
{
  uint64_t result = GEOConfigGetBOOL(MapsFeaturesConfig_Maps102, (uint64_t)off_1E9111ED8);
  if (result)
  {
    return GEOIsFeatureActive(@"MapsFutureRelease");
  }
  return result;
}

uint64_t MapsFeature_IsEnabled_FlexibleActionLinks()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_FlexibleActionLinksEnabled, (uint64_t)off_1E9111EE8);
}

uint64_t MapsFeature_IsEnabled_FrenchClimateLaw()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_FrenchClimateLaw, (uint64_t)off_1E9111EF8);
}

uint64_t MapsFeature_IsEnabled_Maps182()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_Maps182, (uint64_t)off_1E9111F48);
}

uint64_t MapsFeature_IsEnabled_URLUnification()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_URLUnification, (uint64_t)off_1E9111F58);
}

uint64_t MapsFeature_IsEnabled_FCLWithEmissionsAndETA()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_FCLWithEmissionsAndETA, (uint64_t)off_1E9111F68);
}

uint64_t MapsFeature_IsEnabled_FCLShowETA()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_FCLShowETA, (uint64_t)off_1E9111F78);
}

uint64_t MapsFeature_SetEnabled(int a1, void *a2, uint64_t a3)
{
  uint64_t result = 0;
  switch(a1)
  {
    case 4:
      if (MapsFeaturesConfig_IsMuninEnabled != 4 || a2 != off_1E9111BE8) {
        return 0;
      }
      int v8 = 4;
      goto LABEL_347;
    case 5:
      if (MapsFeaturesConfig_EnableEVRouting != 5 || a2 != off_1E9111BF8) {
        return 0;
      }
      int v10 = 5;
      goto LABEL_346;
    case 6:
      if (MapsFeaturesConfig_ShouldEnableLagunaBeach != 6 || a2 != off_1E9111C08) {
        return 0;
      }
      int v8 = 6;
      goto LABEL_347;
    case 7:
      if (MapsFeaturesConfig_EnableAlberta != 7 || a2 != off_1E9111C18) {
        return 0;
      }
      int v8 = 7;
      goto LABEL_347;
    case 8:
      BOOL v13 = MapsFeaturesConfig_Watermarking == 8 && a2 == off_1E9111C28;
      if (!v13 || (GEOIsFeatureActive(@"MapsDisableWatermark") & 1) != 0) {
        return 0;
      }
      int v8 = 8;
      goto LABEL_347;
    case 9:
      if (MapsFeaturesConfig_ShelbyvilleGlobe != 9 || a2 != off_1E9111C38) {
        return 0;
      }
      int v10 = 9;
      goto LABEL_346;
    case 10:
      if (MapsFeaturesConfig_ShelbyvilleAdvancedWater != 10 || a2 != off_1E9111C48) {
        return 0;
      }
      int v10 = 10;
      goto LABEL_346;
    case 11:
      if (MapsFeaturesConfig_ShelbyvilleAdvancedLighting != 11 || a2 != off_1E9111C58) {
        return 0;
      }
      int v10 = 11;
      goto LABEL_346;
    case 12:
      if (MapsFeaturesConfig_ShelbyvilleRoundedBuildings != 12 || a2 != off_1E9111C68) {
        return 0;
      }
      int v8 = 12;
      goto LABEL_347;
    case 13:
      if (MapsFeaturesConfig_ShelbyvilleColorizedBuildings != 13 || a2 != off_1E9111C78) {
        return 0;
      }
      int v10 = 13;
      goto LABEL_346;
    case 14:
      if (MapsFeaturesConfig_ShelbyvilleBuildingHeights != 14 || a2 != off_1E9111C88) {
        return 0;
      }
      int v8 = 14;
      goto LABEL_347;
    case 15:
      if (MapsFeaturesConfig_ShelbyvilleTerrain != 15 || a2 != off_1E9111C98) {
        return 0;
      }
      int v8 = 15;
      goto LABEL_347;
    case 16:
      if (MapsFeaturesConfig_ShelbyvilleStonehenge != 16 || a2 != off_1E9111CA8) {
        return 0;
      }
      int v8 = 16;
      goto LABEL_347;
    case 17:
      if (MapsFeaturesConfig_ShelbyvilleSearch != 17 || a2 != off_1E9111CB8) {
        return 0;
      }
      int v10 = 17;
      goto LABEL_346;
    case 18:
      if (MapsFeaturesConfig_ShelbyvillePuck != 18 || a2 != off_1E9111CC8) {
        return 0;
      }
      int v10 = 18;
      goto LABEL_346;
    case 19:
      if (MapsFeaturesConfig_EnableBakersfield != 19 || a2 != off_1E9111CD8) {
        return 0;
      }
      int v10 = 19;
      goto LABEL_346;
    case 20:
      if (MapsFeaturesConfig_Maps269Enabled != 20 || a2 != off_1E9111CE8) {
        return 0;
      }
      int v10 = 20;
      goto LABEL_346;
    case 21:
      if (MapsFeaturesConfig_PedestrianAREnabled != 21 || a2 != off_1E9111CF8) {
        return 0;
      }
      int v10 = 21;
      goto LABEL_346;
    case 22:
      if (MapsFeaturesConfig_Maps298Enabled != 22 || a2 != off_1E9111D08) {
        return 0;
      }
      int v10 = 22;
      goto LABEL_346;
    case 23:
      if (MapsFeaturesConfig_Maps357RoutePlanningEnabled != 23 || a2 != off_1E9111D18) {
        return 0;
      }
      int v10 = 23;
      goto LABEL_346;
    case 24:
      if (MapsFeaturesConfig_PlaceCardShowcase != 24 || a2 != off_1E9111D28) {
        return 0;
      }
      int v8 = 24;
      goto LABEL_347;
    case 25:
      if (MapsFeaturesConfig_GuidesMediaIntegrationEnabled != 25 || a2 != off_1E9111D38) {
        return 0;
      }
      int v10 = 25;
      goto LABEL_346;
    case 26:
      if (MapsFeaturesConfig_GuidesMediaIntegrationThirdPartyLinksEnabled != 26 || a2 != off_1E9111D48) {
        return 0;
      }
      int v10 = 26;
      goto LABEL_346;
    case 27:
      if (MapsFeaturesConfig_ShelbyvilleMapKitEnabled != 27 || a2 != off_1E9111D58) {
        return 0;
      }
      int v10 = 27;
      goto LABEL_346;
    case 28:
      if (MapsFeaturesConfig_DrivingMultiWaypointRoutesEnabled != 28 || a2 != off_1E9111D68) {
        return 0;
      }
      int v8 = 28;
      goto LABEL_347;
    case 29:
      if (MapsFeaturesConfig_Maps420 != 29 || a2 != off_1E9111D78) {
        return 0;
      }
      int v10 = 29;
      goto LABEL_346;
    case 30:
      if (MapsFeaturesConfig_TransitPayEnabled != 30 || a2 != off_1E9111D88) {
        return 0;
      }
      int v8 = 30;
      goto LABEL_347;
    case 31:
      if (MapsFeaturesConfig_RAPSydneyEnabled != 31 || a2 != off_1E9111D98) {
        return 0;
      }
      int v8 = 31;
      goto LABEL_347;
    case 32:
      if (MapsFeaturesConfig_PlaceCardWebViewEnabled != 32 || a2 != off_1E9111DA8) {
        return 0;
      }
      int v8 = 32;
      goto LABEL_347;
    case 33:
      if (MapsFeaturesConfig_SydneyARPEnabled != 33 || a2 != off_1E9111DB8) {
        return 0;
      }
      int v10 = 33;
      goto LABEL_346;
    case 34:
      if (MapsFeaturesConfig_VisualLocalizationCrowdsourcingEnabled != 34 || a2 != off_1E9111DC8) {
        return 0;
      }
      int v10 = 34;
      goto LABEL_346;
    case 35:
      if (MapsFeaturesConfig_ElevatedPolygonsEnabled != 35 || a2 != off_1E9111DD8) {
        return 0;
      }
      int v10 = 35;
      goto LABEL_346;
    case 36:
      if (MapsFeaturesConfig_SearchResultsImpressions != 36 || a2 != off_1E9111DE8) {
        return 0;
      }
      int v10 = 36;
      goto LABEL_346;
    case 37:
      if (MapsFeaturesConfig_StandaloneWatchOffline != 37 || a2 != off_1E9111DF8) {
        return 0;
      }
      int v10 = 37;
      goto LABEL_346;
    case 38:
      if (MapsFeaturesConfig_RAPCommunityIDEnabled != 38 || a2 != off_1E9111E08) {
        return 0;
      }
      int v10 = 38;
      goto LABEL_346;
    case 39:
      if (MapsFeaturesConfig_RealTimeEVCharger != 39 || a2 != off_1E9111E18) {
        return 0;
      }
      int v10 = 39;
      goto LABEL_346;
    case 40:
      if (MapsFeaturesConfig_HikingWatchEnabled != 40 || a2 != off_1E9111E28) {
        return 0;
      }
      int v10 = 40;
      goto LABEL_346;
    case 41:
      if (MapsFeaturesConfig_HikingiOSEnabled != 41 || a2 != off_1E9111E38) {
        return 0;
      }
      int v10 = 41;
      goto LABEL_346;
    case 42:
      if (MapsFeaturesConfig_EVRoutingEnhancements != 42 || a2 != off_1E9111E48) {
        return 0;
      }
      int v10 = 42;
      goto LABEL_346;
    case 43:
      if (MapsFeaturesConfig_MapsWally != 43 || a2 != off_1E9111E58) {
        return 0;
      }
      int v10 = 43;
      goto LABEL_346;
    case 44:
      if (MapsFeaturesConfig_ARPCommunityIDEnabled != 44 || a2 != off_1E9111E68) {
        return 0;
      }
      int v10 = 44;
      goto LABEL_346;
    case 45:
      if (MapsFeaturesConfig_SSAOEnabled != 45 || a2 != off_1E9111E78) {
        return 0;
      }
      int v10 = 45;
      goto LABEL_346;
    case 46:
      if (MapsFeaturesConfig_OrderPickupEnabled != 46 || a2 != off_1E9111E88) {
        return 0;
      }
      int v10 = 46;
      goto LABEL_346;
    case 47:
      if (MapsFeaturesConfig_SPRForMapSnapshots != 47 || a2 != off_1E9111E98) {
        return 0;
      }
      int v10 = 47;
      goto LABEL_346;
    case 48:
      if (MapsFeaturesConfig_OptimizeSearchResultComponents != 48 || a2 != off_1E9111EA8) {
        return 0;
      }
      int v8 = 48;
      goto LABEL_347;
    case 49:
      if (MapsFeaturesConfig_SearchAndDiscovery != 49 || a2 != off_1E9111EB8) {
        return 0;
      }
      int v10 = 49;
      goto LABEL_346;
    case 50:
      if (MapsFeaturesConfig_MyPlacesFeatures != 50 || a2 != off_1E9111EC8) {
        return 0;
      }
      int v10 = 50;
      goto LABEL_346;
    case 51:
      BOOL v64 = MapsFeaturesConfig_Maps102 == 51 && a2 == off_1E9111ED8;
      if (!v64 || (GEOIsFeatureActive(@"MapsFutureRelease") & 1) == 0) {
        return 0;
      }
      int v10 = 51;
      goto LABEL_346;
    case 52:
      if (MapsFeaturesConfig_FlexibleActionLinksEnabled != 52 || a2 != off_1E9111EE8) {
        return 0;
      }
      int v10 = 52;
      goto LABEL_346;
    case 53:
      if (MapsFeaturesConfig_FrenchClimateLaw != 53 || a2 != off_1E9111EF8) {
        return 0;
      }
      int v10 = 53;
      goto LABEL_346;
    case 54:
      if (MapsFeaturesConfig_VKMLayoutEnabled_SPR != 54 || a2 != off_1E9111F08) {
        return 0;
      }
      int v10 = 54;
      goto LABEL_346;
    case 55:
      if (MapsFeaturesConfig_VKMLayoutEnabled_Navigation != 55 || a2 != off_1E9111F18) {
        return 0;
      }
      int v10 = 55;
      goto LABEL_346;
    case 56:
      if (MapsFeaturesConfig_VKMLayoutEnabled_Flyover != 56 || a2 != off_1E9111F28) {
        return 0;
      }
      int v8 = 56;
      goto LABEL_347;
    case 58:
      if (MapsFeaturesConfig_Maps182 != 58 || a2 != off_1E9111F48) {
        return 0;
      }
      int v10 = 58;
      goto LABEL_346;
    case 59:
      if (MapsFeaturesConfig_URLUnification != 59 || a2 != off_1E9111F58) {
        return 0;
      }
      int v10 = 59;
      goto LABEL_346;
    case 60:
      if (MapsFeaturesConfig_FCLWithEmissionsAndETA != 60 || a2 != off_1E9111F68) {
        return 0;
      }
      int v8 = 60;
      goto LABEL_347;
    case 61:
      if (MapsFeaturesConfig_FCLShowETA != 61 || a2 != off_1E9111F78) {
        return 0;
      }
      int v10 = 61;
LABEL_346:
      int v8 = v10;
LABEL_347:
      GEOConfigSetBOOL(v8, (uint64_t)a2);
      return a3;
    default:
      return result;
  }
}

id GEOGetGEOComposedStringLog_1()
{
  if (qword_1E9116960 != -1) {
    dispatch_once(&qword_1E9116960, &__block_literal_global_198);
  }
  os_log_t v0 = (void *)_MergedGlobals_5;

  return v0;
}

void __GEOGetGEOComposedStringLog_block_invoke_4()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOComposedString");
  id v1 = (void *)_MergedGlobals_5;
  _MergedGlobals_5 = (uint64_t)v0;
}

void _geoTransitLineItemsForPlaceDatas(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (v3)
  {
    v5[0] = MEMORY[0x1E4F143A8];
    v5[1] = 3221225472;
    v5[2] = ___geoTransitLineItemsForPlaceDatas_block_invoke;
    v5[3] = &unk_1E53DA278;
    id v6 = v3;
    _attributedGeoMapItemsForPlaceDatasWithHandler(5, a1, 0, 0, 0, 0, v5);
  }
}

void ___geoTransitLineItemsForPlaceDatas_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = [v5 count];
  if (v6 || !v7)
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    int v8 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v5, "count"));
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 3221225472;
    v10[2] = ___geoTransitLineItemsForPlaceDatas_block_invoke_2;
    v10[3] = &unk_1E53F5BA8;
    id v11 = v8;
    id v9 = v8;
    [v5 enumerateObjectsUsingBlock:v10];
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void ___geoTransitLineItemsForPlaceDatas_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = [[_GEOPlaceDataTransitLineItem alloc] initWithMapItem:v3];

  id v4 = v5;
  if (v5)
  {
    [*(id *)(a1 + 32) addObject:v5];
    id v4 = v5;
  }
}

void sub_18A0F3058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void geo::MapNodeRoad::~MapNodeRoad(void **this)
{
  *this = &unk_1ED513B60;
  GEOVectorTileRelease(this[3]);
}

{
  uint64_t vars8;

  *this = &unk_1ED513B60;
  GEOVectorTileRelease(this[3]);

  JUMPOUT(0x18C11F580);
}

uint64_t geo::MapNodeRoad::toString(geo::MapNodeRoad *this)
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v3);
  id v1 = (void *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)", ", 2);
  std::ostream::operator<<();
  std::stringbuf::str();
  v3[0] = *MEMORY[0x1E4FBA418];
  *(void *)((char *)v3 + *(void *)(v3[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v3[1] = MEMORY[0x1E4FBA470] + 16;
  if (v4 < 0) {
    operator delete((void *)v3[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x18C11F4F0](&v5);
}

void sub_18A0F63A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::ostringstream::~ostringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

GEOMapEdgeRoadConnectionFinder *geo::MapNodeRoad::findEdgesOut(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  int v10 = -[GEOMapEdgeConnectionFinder initWithMap:tile:junction:coordinate:]([GEOMapEdgeRoadConnectionFinder alloc], "initWithMap:tile:junction:coordinate:", v7, *(void *)(a1 + 24), *(void *)(a1 + 32), *(double *)(a1 + 8), *(double *)(a1 + 16));
  [(GEOMapRequest *)v10 setCompletionHandler:v9];
  [(GEOMapEdgeConnectionFinder *)v10 findConnectionsOut:v8];
  if ([(GEOMapRequest *)v10 isFinished]) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = v10;
  }
  uint64_t v12 = v11;

  return v12;
}

void sub_18A0F646C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

GEOMapEdgeRoadConnectionFinder *geo::MapNodeRoad::findEdgesIn(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  int v10 = -[GEOMapEdgeConnectionFinder initWithMap:tile:junction:coordinate:]([GEOMapEdgeRoadConnectionFinder alloc], "initWithMap:tile:junction:coordinate:", v7, *(void *)(a1 + 24), *(void *)(a1 + 32), *(double *)(a1 + 8), *(double *)(a1 + 16));
  [(GEOMapRequest *)v10 setCompletionHandler:v9];
  [(GEOMapEdgeConnectionFinder *)v10 findConnectionsIn:v8];
  if ([(GEOMapRequest *)v10 isFinished]) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = v10;
  }
  uint64_t v12 = v11;

  return v12;
}

void sub_18A0F6540(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t geo::MapNodeRoad::type(geo::MapNodeRoad *this)
{
  return 0;
}

GEOStructuredAddress *_buildStructuredAddressFromAnyAddressDictionary(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init(GEOStructuredAddress);
  id v3 = [v1 objectForKeyedSubscript:@"Country"];

  if (v3)
  {
    char v4 = [v1 objectForKeyedSubscript:@"Country"];
    [(GEOStructuredAddress *)v2 setCountry:v4];
LABEL_3:

    goto LABEL_4;
  }
  if (ContactsLibraryCore())
  {
    uint64_t v26 = getCNPostalAddressCountryKey();
    uint64_t v27 = [v1 objectForKey:v26];

    if (v27)
    {
      char v4 = getCNPostalAddressCountryKey();
      unint64_t v28 = [v1 objectForKeyedSubscript:v4];
      [(GEOStructuredAddress *)v2 setCountry:v28];

      goto LABEL_3;
    }
  }
LABEL_4:
  uint64_t v5 = [v1 objectForKeyedSubscript:@"CountryCode"];

  if (v5)
  {
    id v6 = [v1 objectForKeyedSubscript:@"CountryCode"];
    [(GEOStructuredAddress *)v2 setCountryCode:v6];
LABEL_6:

    goto LABEL_7;
  }
  if (ContactsLibraryCore())
  {
    char v29 = getCNPostalAddressISOCountryCodeKey();
    char v30 = [v1 objectForKeyedSubscript:v29];

    if (v30)
    {
      id v6 = getCNPostalAddressISOCountryCodeKey();
      unsigned int v31 = [v1 objectForKeyedSubscript:v6];
      [(GEOStructuredAddress *)v2 setCountryCode:v31];

      goto LABEL_6;
    }
  }
LABEL_7:
  id v7 = [v1 objectForKeyedSubscript:@"State"];

  if (v7)
  {
    id v8 = [v1 objectForKeyedSubscript:@"State"];
    [(GEOStructuredAddress *)v2 setAdministrativeArea:v8];
LABEL_9:

    goto LABEL_10;
  }
  if (ContactsLibraryCore())
  {
    uint64_t v32 = getCNPostalAddressStateKey();
    unint64_t v33 = [v1 objectForKeyedSubscript:v32];

    if (v33)
    {
      id v8 = getCNPostalAddressStateKey();
      char v34 = [v1 objectForKeyedSubscript:v8];
      [(GEOStructuredAddress *)v2 setAdministrativeArea:v34];

      goto LABEL_9;
    }
  }
LABEL_10:
  id v9 = [v1 objectForKeyedSubscript:@"SubAdministrativeArea"];
  [(GEOStructuredAddress *)v2 setSubAdministrativeArea:v9];

  int v10 = [v1 objectForKeyedSubscript:@"City"];

  if (v10)
  {
    uint64_t v11 = [v1 objectForKeyedSubscript:@"City"];
    [(GEOStructuredAddress *)v2 setLocality:v11];
LABEL_12:

    goto LABEL_13;
  }
  if (ContactsLibraryCore())
  {
    uint64_t v35 = getCNPostalAddressCityKey();
    BOOL v36 = [v1 objectForKeyedSubscript:v35];

    if (v36)
    {
      uint64_t v11 = getCNPostalAddressCityKey();
      unint64_t v37 = [v1 objectForKeyedSubscript:v11];
      [(GEOStructuredAddress *)v2 setLocality:v37];

      goto LABEL_12;
    }
  }
LABEL_13:
  uint64_t v12 = [v1 objectForKeyedSubscript:@"SubLocality"];
  [(GEOStructuredAddress *)v2 setSubLocality:v12];

  uint64_t v13 = [v1 objectForKeyedSubscript:@"Premises"];
  [(GEOStructuredAddress *)v2 setPremises:v13];

  BOOL v14 = [v1 objectForKeyedSubscript:@"Thoroughfare"];
  [(GEOStructuredAddress *)v2 setThoroughfare:v14];

  uint64_t v15 = [v1 objectForKeyedSubscript:@"SubThoroughfare"];
  [(GEOStructuredAddress *)v2 setSubThoroughfare:v15];

  uint64_t v16 = [v1 objectForKeyedSubscript:@"Street"];

  if (v16)
  {
    uint64_t v17 = [v1 objectForKeyedSubscript:@"Street"];
    [(GEOStructuredAddress *)v2 setFullThoroughfare:v17];
LABEL_15:

    goto LABEL_16;
  }
  if (ContactsLibraryCore())
  {
    int v38 = getCNPostalAddressStreetKey();
    BOOL v39 = [v1 objectForKeyedSubscript:v38];

    if (v39)
    {
      uint64_t v17 = getCNPostalAddressStreetKey();
      unsigned int v40 = [v1 objectForKeyedSubscript:v17];
      [(GEOStructuredAddress *)v2 setFullThoroughfare:v40];

      goto LABEL_15;
    }
  }
LABEL_16:
  uint64_t v18 = [v1 objectForKeyedSubscript:@"ZIP"];

  if (v18)
  {
    uint64_t v19 = [v1 objectForKeyedSubscript:@"ZIP"];
    [(GEOStructuredAddress *)v2 setPostCode:v19];
  }
  else
  {
    if (!ContactsLibraryCore()) {
      goto LABEL_19;
    }
    uint64_t v41 = getCNPostalAddressPostalCodeKey();
    unint64_t v42 = [v1 objectForKeyedSubscript:v41];

    if (!v42) {
      goto LABEL_19;
    }
    uint64_t v19 = getCNPostalAddressPostalCodeKey();
    unint64_t v43 = [v1 objectForKeyedSubscript:v19];
    [(GEOStructuredAddress *)v2 setPostCode:v43];
  }
LABEL_19:
  uint64_t v20 = [v1 objectForKeyedSubscript:@"AreasOfInterest"];
  [(GEOStructuredAddress *)v2 setAreaOfInterests:v20];

  char v21 = [v1 objectForKeyedSubscript:@"InlandWater"];
  [(GEOStructuredAddress *)v2 setInlandWater:v21];

  id v22 = [v1 objectForKeyedSubscript:@"Ocean"];
  [(GEOStructuredAddress *)v2 setOcean:v22];

  if ([(GEOStructuredAddress *)v2 isEmpty]) {
    char v23 = 0;
  }
  else {
    char v23 = v2;
  }
  char v24 = v23;

  return v24;
}

void sub_18A0F6B44(_Unwind_Exception *a1)
{
  uint64_t v5 = v3;

  _Unwind_Resume(a1);
}

id getCNPostalAddressCountryKey(void)
{
  uint64_t v5 = 0;
  id v6 = &v5;
  uint64_t v7 = 0x2020000000;
  os_log_t v0 = (void **)getCNPostalAddressCountryKeySymbolLoc(void)::ptr;
  uint64_t v8 = getCNPostalAddressCountryKeySymbolLoc(void)::ptr;
  if (!getCNPostalAddressCountryKeySymbolLoc(void)::ptr)
  {
    id v1 = (void *)ContactsLibrary();
    v6[3] = (uint64_t)dlsym(v1, "CNPostalAddressCountryKey");
    getCNPostalAddressCountryKeySymbolLoc(void)::ptr = v6[3];
    os_log_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    dlerror();
    char v4 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  id v2 = *v0;

  return v2;
}

id getCNPostalAddressISOCountryCodeKey(void)
{
  uint64_t v5 = 0;
  id v6 = &v5;
  uint64_t v7 = 0x2020000000;
  os_log_t v0 = (void **)getCNPostalAddressISOCountryCodeKeySymbolLoc(void)::ptr;
  uint64_t v8 = getCNPostalAddressISOCountryCodeKeySymbolLoc(void)::ptr;
  if (!getCNPostalAddressISOCountryCodeKeySymbolLoc(void)::ptr)
  {
    id v1 = (void *)ContactsLibrary();
    v6[3] = (uint64_t)dlsym(v1, "CNPostalAddressISOCountryCodeKey");
    getCNPostalAddressISOCountryCodeKeySymbolLoc(void)::ptr = v6[3];
    os_log_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    dlerror();
    char v4 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  id v2 = *v0;

  return v2;
}

id getCNPostalAddressStateKey(void)
{
  uint64_t v5 = 0;
  id v6 = &v5;
  uint64_t v7 = 0x2020000000;
  os_log_t v0 = (void **)getCNPostalAddressStateKeySymbolLoc(void)::ptr;
  uint64_t v8 = getCNPostalAddressStateKeySymbolLoc(void)::ptr;
  if (!getCNPostalAddressStateKeySymbolLoc(void)::ptr)
  {
    id v1 = (void *)ContactsLibrary();
    v6[3] = (uint64_t)dlsym(v1, "CNPostalAddressStateKey");
    getCNPostalAddressStateKeySymbolLoc(void)::ptr = v6[3];
    os_log_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    dlerror();
    char v4 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  id v2 = *v0;

  return v2;
}

id getCNPostalAddressCityKey(void)
{
  uint64_t v5 = 0;
  id v6 = &v5;
  uint64_t v7 = 0x2020000000;
  os_log_t v0 = (void **)getCNPostalAddressCityKeySymbolLoc(void)::ptr;
  uint64_t v8 = getCNPostalAddressCityKeySymbolLoc(void)::ptr;
  if (!getCNPostalAddressCityKeySymbolLoc(void)::ptr)
  {
    id v1 = (void *)ContactsLibrary();
    v6[3] = (uint64_t)dlsym(v1, "CNPostalAddressCityKey");
    getCNPostalAddressCityKeySymbolLoc(void)::ptr = v6[3];
    os_log_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    dlerror();
    char v4 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  id v2 = *v0;

  return v2;
}

id getCNPostalAddressStreetKey(void)
{
  uint64_t v5 = 0;
  id v6 = &v5;
  uint64_t v7 = 0x2020000000;
  os_log_t v0 = (void **)getCNPostalAddressStreetKeySymbolLoc(void)::ptr;
  uint64_t v8 = getCNPostalAddressStreetKeySymbolLoc(void)::ptr;
  if (!getCNPostalAddressStreetKeySymbolLoc(void)::ptr)
  {
    id v1 = (void *)ContactsLibrary();
    v6[3] = (uint64_t)dlsym(v1, "CNPostalAddressStreetKey");
    getCNPostalAddressStreetKeySymbolLoc(void)::ptr = v6[3];
    os_log_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    dlerror();
    char v4 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  id v2 = *v0;

  return v2;
}

id getCNPostalAddressPostalCodeKey(void)
{
  uint64_t v5 = 0;
  id v6 = &v5;
  uint64_t v7 = 0x2020000000;
  os_log_t v0 = (void **)getCNPostalAddressPostalCodeKeySymbolLoc(void)::ptr;
  uint64_t v8 = getCNPostalAddressPostalCodeKeySymbolLoc(void)::ptr;
  if (!getCNPostalAddressPostalCodeKeySymbolLoc(void)::ptr)
  {
    id v1 = (void *)ContactsLibrary();
    v6[3] = (uint64_t)dlsym(v1, "CNPostalAddressPostalCodeKey");
    getCNPostalAddressPostalCodeKeySymbolLoc(void)::ptr = v6[3];
    os_log_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    dlerror();
    char v4 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  id v2 = *v0;

  return v2;
}

id _buildStructuredAddressFromCNPostalAddress(void *a1)
{
  id v1 = [a1 dictionaryRepresentation];
  id v2 = (void *)[v1 mutableCopy];

  id v3 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:12];
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = ___buildStructuredAddressFromCNPostalAddress_block_invoke;
  v7[3] = &unk_1E53F5CE0;
  id v4 = v3;
  id v8 = v4;
  [v2 enumerateKeysAndObjectsUsingBlock:v7];
  [v2 removeObjectsForKeys:v4];
  uint64_t v5 = _buildStructuredAddressFromAnyAddressDictionary(v2);

  return v5;
}

void sub_18A0F7378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void ___buildStructuredAddressFromCNPostalAddress_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && ![v5 length]
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0) && ![v5 count]
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0) && ![v5 count])
  {
    [*(id *)(a1 + 32) addObject:v6];
  }
}

void sub_18A0F7484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id _buildMissingFormattedAddressStringFromCNPostalAddress(CNPostalAddress *a1)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  uint64_t v17 = a1;
  id v1 = objc_msgSend(NSString, "stringWithFormat:", @"%s forbids %s to be nil", "NSString *_buildMissingFormattedAddressStringFromCNPostalAddress(CNPostalAddress *__strong)", "cnPostalAddress");
  id v2 = v1;
  if (v17)
  {

    uint64_t v16 = [getCNPostalAddressFormatterClass() stringFromPostalAddress:v17 style:0];
    id v15 = [v16 componentsSeparatedByString:@"\n"];
    id v19 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id obj = v15;
    uint64_t v3 = [obj countByEnumeratingWithState:&v20 objects:buf count:16];
    if (v3)
    {
      uint64_t v4 = *(void *)v21;
      do
      {
        for (uint64_t i = 0; i != v3; ++i)
        {
          if (*(void *)v21 != v4) {
            objc_enumerationMutation(obj);
          }
          id v6 = *(void **)(*((void *)&v20 + 1) + 8 * i);
          uint64_t v7 = [MEMORY[0x1E4F28B88] whitespaceCharacterSet];
          id v8 = [v6 componentsSeparatedByCharactersInSet:v7];

          id v9 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"SELF != ''"];
          int v10 = [v8 filteredArrayUsingPredicate:v9];

          uint64_t v11 = [v10 componentsJoinedByString:@" "];
          if ([v11 length]) {
            [v19 addObject:v11];
          }
        }
        uint64_t v3 = [obj countByEnumeratingWithState:&v20 objects:buf count:16];
      }
      while (v3);
    }

    uint64_t v12 = [v19 componentsJoinedByString:@"\n"];
  }
  else
  {
    uint64_t v13 = GEOFindOrCreateLog("com.apple.GeoServices", "GEOAddressObject");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      unsigned int v25 = v2;
      _os_log_impl(&dword_188D96000, v13, OS_LOG_TYPE_ERROR, "%{public}@", buf, 0xCu);
    }

    uint64_t v12 = 0;
  }

  return v12;
}

void sub_18A0F777C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void _AddressObjectPtrFromCNPostalAddress(CNPostalAddress *a1, NSString *a2, NSString *a3, NSString *a4, void *a5)
{
  id v8 = a2;
  char v24 = a3;
  long long v23 = a4;
  id v22 = a5;
  id v9 = _buildMissingFormattedAddressStringFromCNPostalAddress(v8);
  [(NSString *)v37 stdString];

  unint64_t v10 = v38;
  if ((v38 & 0x80u) != 0) {
    unint64_t v10 = (unint64_t)v37[1];
  }
  if (v10)
  {
    [(NSString *)v34 stdString];
    [(NSString *)v32 stdString];
    [(NSString *)__p stdString];
    addr_obj::Localization::Localization(buf, v34, v32, __p);
    if (v31 < 0) {
      operator delete(__p[0]);
    }
    if (v33 < 0) {
      operator delete(v32[0]);
    }
    if (v35 < 0) {
      operator delete(v34[0]);
    }
    if (_MergedGlobals_335 != -1) {
      dispatch_once(&_MergedGlobals_335, &__block_literal_global_201);
    }
    uint64_t v11 = (addr_obj::Logger *)qword_1EB2A0770;
    long long v20 = [(CNPostalAddress *)v8 street];
    [(NSString *)v34 stdString];
    uint64_t v12 = [(CNPostalAddress *)v8 city];
    [(NSString *)v32 stdString];
    uint64_t v13 = [(CNPostalAddress *)v8 state];
    [(NSString *)__p stdString];
    BOOL v14 = [(CNPostalAddress *)v8 postalCode];
    [(NSString *)v29 stdString];
    id v15 = [(CNPostalAddress *)v8 country];
    [(NSString *)v28 stdString];
    uint64_t v16 = [(CNPostalAddress *)v8 ISOCountryCode];
    [(NSString *)v27 stdString];
    uint64_t v17 = [(CNPostalAddress *)v8 subAdministrativeArea];
    [(NSString *)v26 stdString];
    uint64_t v18 = [(CNPostalAddress *)v8 subLocality];
    [(NSString *)v25 stdString];
    addr_obj::AddressObjectFactory::fromContact(v11, (addr_obj::Localization *)buf, (uint64_t)v37, (uint64_t)v34, (uint64_t)v32, (uint64_t)__p, (uint64_t)v29, (uint64_t)v28, (uint64_t)v27, (uint64_t)v26, (uint64_t)v25);
  }
  id v19 = GEOFindOrCreateLog("com.apple.GeoServices", "GEOAddressObject");
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_188D96000, v19, OS_LOG_TYPE_DEBUG, "Empty formatted address and address dictionary, can't create AddressObject", buf, 2u);
  }

  a1->super.isa = 0;
  a1[1].super.isa = 0;
  if ((char)v38 < 0) {
    operator delete(v37[0]);
  }
}

void sub_18A0F7C00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58)
{
  if (*(char *)(v59 - 89) < 0) {
    operator delete(*(void **)(v59 - 112));
  }

  _Unwind_Resume(a1);
}

void sub_18A0F7FE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_18A0F815C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0F84A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,void *a48,uint64_t a49,int a50,__int16 a51,char a52,char a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59,void *a60,uint64_t a61,int a62,__int16 a63)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a47 < 0) {
    operator delete(a42);
  }
  if (a53 < 0) {
    operator delete(a48);
  }
  if (a59 < 0) {
    operator delete(a54);
  }
  if (a65 < 0) {
    operator delete(a60);
  }
  addr_obj::Localization::~Localization((void **)(v67 - 152));
  if (*(char *)(v67 - 201) < 0) {
    operator delete(*(void **)(v67 - 224));
  }
  if (*(char *)(v67 - 177) < 0) {
    operator delete(*(void **)(v67 - 200));
  }
  if (*(char *)(v67 - 153) < 0) {
    operator delete(*(void **)(v67 - 176));
  }

  _Unwind_Resume(a1);
}

void sub_18A0F86AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id GEOAddressObjectOfGEOPDAddressObject(uint64_t a1, uint64_t a2)
{
  id v2 = +[GEOAddressObject addressObjectWithPlaceDataAddressObject:a1 placeDataAddress:0 placeDataInfo:a2 placeDataEntity:0];

  return v2;
}

void sub_18A0F8878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0F8830);
  }
  _Unwind_Resume(a1);
}

void sub_18A0F89DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0F8B80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0F8B38);
  }
  _Unwind_Resume(a1);
}

void sub_18A0F8D48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  id v19 = v17;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0F8CFCLL);
  }

  _Unwind_Resume(a1);
}

void sub_18A0F8FDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0F8F00);
  }
  _Unwind_Resume(a1);
}

void sub_18A0F91BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0F9174);
  }
  _Unwind_Resume(a1);
}

void sub_18A0F9418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0F933CLL);
  }
  _Unwind_Resume(a1);
}

void sub_18A0F95F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0F95A8);
  }
  _Unwind_Resume(a1);
}

void sub_18A0F9800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  long long v21 = v19;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0F97B4);
  }

  _Unwind_Resume(a1);
}

void sub_18A0F98F0(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0F98CCLL);
  }
  _Unwind_Resume(a1);
}

void sub_18A0F9A84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0F9A3CLL);
  }
  _Unwind_Resume(a1);
}

void sub_18A0F9B44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0F9CBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0F9C74);
  }
  _Unwind_Resume(a1);
}

void sub_18A0F9E74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0F9E2CLL);
  }
  _Unwind_Resume(a1);
}

void sub_18A0FA02C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0F9FE4);
  }
  _Unwind_Resume(a1);
}

void sub_18A0FA1FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0FA1B4);
  }
  _Unwind_Resume(a1);
}

void sub_18A0FA3A4(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0FA360);
  }
  _Unwind_Resume(a1);
}

void sub_18A0FA548(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0FA500);
  }
  _Unwind_Resume(a1);
}

void sub_18A0FA708(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0FA6C0);
  }
  _Unwind_Resume(a1);
}

void sub_18A0FAA2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0FABF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0FABB0);
  }
  _Unwind_Resume(a1);
}

void sub_18A0FADB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0FAD6CLL);
  }
  _Unwind_Resume(a1);
}

void sub_18A0FAFC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  long long v21 = v19;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0FAF78);
  }

  _Unwind_Resume(a1);
}

void sub_18A0FB0B4(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0FB090);
  }
  _Unwind_Resume(a1);
}

void sub_18A0FB248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0FB200);
  }
  _Unwind_Resume(a1);
}

void sub_18A0FB378(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0FB4B8(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18A0FB484);
  }
  _Unwind_Resume(a1);
}

id GEOAddressObjectOfGEOPDAddress(uint64_t a1, uint64_t a2)
{
  id v2 = +[GEOAddressObject addressObjectWithPlaceDataAddressObject:0 placeDataAddress:a1 placeDataInfo:0 placeDataEntity:a2];

  return v2;
}

id GEOPDAddressObjectOfGEOAddressObject(void *a1)
{
  id v1 = [a1 rawBytes];
  if (v1)
  {
    id v2 = objc_opt_new();
    -[GEOPDAddressObject setAddressObject:]((uint64_t)v2, v1);
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

void sub_18A0FB5EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *___ZL37getCNPostalAddressCountryKeySymbolLocv_block_invoke(uint64_t a1)
{
  id v2 = (void *)ContactsLibrary();
  uint64_t result = dlsym(v2, "CNPostalAddressCountryKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNPostalAddressCountryKeySymbolLoc(void)::ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *___ZL44getCNPostalAddressISOCountryCodeKeySymbolLocv_block_invoke(uint64_t a1)
{
  id v2 = (void *)ContactsLibrary();
  uint64_t result = dlsym(v2, "CNPostalAddressISOCountryCodeKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNPostalAddressISOCountryCodeKeySymbolLoc(void)::ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *___ZL35getCNPostalAddressStateKeySymbolLocv_block_invoke(uint64_t a1)
{
  id v2 = (void *)ContactsLibrary();
  uint64_t result = dlsym(v2, "CNPostalAddressStateKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNPostalAddressStateKeySymbolLoc(void)::ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *___ZL34getCNPostalAddressCityKeySymbolLocv_block_invoke(uint64_t a1)
{
  id v2 = (void *)ContactsLibrary();
  uint64_t result = dlsym(v2, "CNPostalAddressCityKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNPostalAddressCityKeySymbolLoc(void)::ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *___ZL36getCNPostalAddressStreetKeySymbolLocv_block_invoke(uint64_t a1)
{
  id v2 = (void *)ContactsLibrary();
  uint64_t result = dlsym(v2, "CNPostalAddressStreetKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNPostalAddressStreetKeySymbolLoc(void)::ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *___ZL40getCNPostalAddressPostalCodeKeySymbolLocv_block_invoke(uint64_t a1)
{
  id v2 = (void *)ContactsLibrary();
  uint64_t result = dlsym(v2, "CNPostalAddressPostalCodeKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNPostalAddressPostalCodeKeySymbolLoc(void)::ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

GEOTileKeyList *GEOProactiveAppClipTileKeysNearLocation(double a1, double a2)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  double Double = GEOConfigGetDouble(GeoServicesConfig_DefaultTileRadius_ProactiveAppClip, (uint64_t)off_1E9114B18);
  id v5 = objc_alloc_init(GEOTileKeyList);
  id v6 = +[GEOResourceManifestManager modernManager];
  uint64_t v7 = [v6 activeTileGroup];
  id v8 = [(id)v7 activeTileSetForStyle:72 size:2 scale:0];

  if (v8)
  {
    if ([v8 availableTilesCount])
    {
      double v9 = GEOMapRectMakeWithRadialDistance(a1, a2, Double);
      double v11 = v10;
      double v13 = v12;
      double v15 = v14;
      unsigned int v16 = objc_msgSend(v8, "maximumZoomLevelInRect:");
      double v17 = (double)(1 << v16) * 0.0000000037252903;
      LODWORD(v7) = vcvtmd_s64_f64(v9 * v17);
      int v18 = vcvtmd_s64_f64((v9 + v13) * v17);
      if ((int)v7 <= v18)
      {
        unsigned int v20 = v16;
        signed int v21 = vcvtmd_s64_f64(v11 * v17);
        signed int v22 = vcvtmd_s64_f64((v11 + v15) * v17);
        long long v23 = MEMORY[0x1E4F14500];
        do
        {
          unsigned int v24 = v21;
          if (v21 <= v22)
          {
            do
            {
              uint64_t v29 = 0;
              uint64_t v30 = 0;
              [v8 size];
              [v8 scale];
              unsigned __int8 v26 = v20;
              if (v20 >= 0x100)
              {
                if (os_log_type_enabled(v23, OS_LOG_TYPE_FAULT))
                {
                  *(_WORD *)unint64_t v28 = 0;
                  _os_log_fault_impl(&dword_188D96000, v23, OS_LOG_TYPE_FAULT, "Assertion failed: z <= UINT8_MAX", v28, 2u);
                }
                unsigned __int8 v26 = -1;
              }
              uint64_t v29 = GEOGloriaQuadIDTileKeyMake((gloria::MortonUtils *)v7, v24, v26);
              uint64_t v30 = v27;
              [(GEOTileKeyList *)v5 addKey:&v29];
              ++v24;
            }
            while (v22 + 1 != v24);
          }
          BOOL v25 = v7 == v18;
          uint64_t v7 = (v7 + 1);
        }
        while (!v25);
      }
    }
  }

  return v5;
}

uint64_t _GEONumberOfTileKeysForRegion(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  double v6 = GEOMapRectForMapRegion(a1);
  double v7 = (double)(1 << a5) * 0.0000000037252903;
  unsigned int v11 = vcvtmd_u64_f64(v7 * (v9 + v10)) - vcvtmd_u64_f64(v7 * v9) + 1;
  return v11 + v11 * (vcvtmd_u64_f64(v7 * (v6 + v8)) - vcvtmd_u64_f64(v7 * v6));
}

uint64_t _GEOEnumerateTileKeysForRegion(void *a1, unsigned int a2, char a3, uint64_t a4, unsigned int a5, unsigned int a6, void *a7)
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  double v13 = a7;
  double v14 = GEOMapRectForMapRegion(a1);
  double v17 = (double)(1 << a5) * 0.0000000037252903;
  LODWORD(v18) = vcvtmd_u64_f64(v17 * v14);
  unsigned int v20 = vcvtmd_u64_f64(v17 * (v14 + v19));
  unsigned int v21 = v20 - v18 + 1;
  int v22 = a6 / v21;
  unint64_t v23 = a6 % v21 + v18;
  if (v23 > v20)
  {
    if (!os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT)) {
      goto LABEL_26;
    }
    *(_WORD *)buf = 0;
    unint64_t v37 = MEMORY[0x1E4F14500];
    unsigned __int8 v38 = "Assertion failed: startX <= maxX";
    goto LABEL_30;
  }
  unsigned int v24 = vcvtmd_u64_f64(v17 * (v15 + v16));
  unsigned int v25 = v22 + vcvtmd_u64_f64(v17 * v15);
  if (v25 > v24)
  {
    if (!os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT)) {
      goto LABEL_26;
    }
    *(_WORD *)buf = 0;
    unint64_t v37 = MEMORY[0x1E4F14500];
    unsigned __int8 v38 = "Assertion failed: startY <= maxY";
    goto LABEL_30;
  }
  unint64_t v26 = (unint64_t)(a3 & 0xF) << 48;
  unsigned int v27 = a2 - 72;
  unint64_t v41 = v26 | (a4 << 52);
  unsigned int v39 = v24;
  unsigned int v40 = v18;
  while (1)
  {
    if (v23 <= v20)
    {
      do
      {
        unint64_t v42 = 0;
        uint64_t v43 = 0;
        if (v27 <= 0x11 && ((1 << v27) & 0x20005) != 0)
        {
          unsigned __int8 v28 = a5;
          if (a5 >= 0x100)
          {
            if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Assertion failed: z <= UINT8_MAX", buf, 2u);
            }
            unsigned __int8 v28 = -1;
          }
          unint64_t v29 = GEOGloriaQuadIDTileKeyMake((gloria::MortonUtils *)v23, v25, v28);
        }
        else
        {
          *(void *)&buf[1] = ((unint64_t)(a5 & 0x3F) << 40) & 0x3FFFFFFFFFFFLL | ((unint64_t)v23 << 46);
          buf[0] = 2;
          if (a2 <= 0x19 && ((1 << a2) & 0x200101C) != 0) {
            unint64_t v31 = 128;
          }
          else {
            unint64_t v31 = (unint64_t)(a2 == 26) << 7;
          }
          *((void *)&v32 + objc_destroyWeak(this + 1) = ((unint64_t)(v25 & 0x3FFFFFF) << 8) | ((unint64_t)(a2 & 0x3FFF) << 34) | (v23 >> 18) | v41;
          *(void *)&long long v32 = v23 << 46;
          uint64_t v30 = v32 >> 56;
          unint64_t v29 = v31 | *(void *)buf & 0xFFFFFFFFFFFFFF7FLL;
        }
        unint64_t v42 = v29;
        uint64_t v43 = v30;
        int v33 = v13[2](v13, &v42);
        unint64_t v23 = (v23 + 1);
      }
      while (v33 && v23 <= v20);
      if (v33)
      {
        unsigned int v24 = v39;
        unint64_t v18 = v40;
      }
      else
      {
        uint64_t v34 = 0;
        if (v23 <= v20) {
          goto LABEL_27;
        }
        unsigned int v24 = v39;
        unint64_t v18 = v40;
        if (v25 != v39) {
          goto LABEL_27;
        }
      }
    }
    if (v23 <= v20) {
      break;
    }
    ++v25;
    unint64_t v23 = v18;
    if (v25 > v24) {
      goto LABEL_26;
    }
  }
  if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)buf = 0;
    unint64_t v37 = MEMORY[0x1E4F14500];
    unsigned __int8 v38 = "Assertion failed: x > maxX";
LABEL_30:
    _os_log_fault_impl(&dword_188D96000, v37, OS_LOG_TYPE_FAULT, v38, buf, 2u);
  }
LABEL_26:
  uint64_t v34 = 1;
LABEL_27:
  uint64_t v35 = v34;

  return v35;
}

float64_t GEOLocationCoordinate2DFromOrientedPosition(long long *a1)
{
  uint64_t v1 = *((void *)a1 + 2);
  long long v4 = *a1;
  uint64_t v5 = v1;
  geo::Geocentric<double>::toCoordinate3D<geo::Degrees,double>((double *)&v4, &v3);
  return v3.f64[0];
}

void **GEOMuninMetadataTileCreate(uint64_t a1, uint64_t a2)
{
  uint64_t v83 = *MEMORY[0x1E4F143B8];
  long long v4 = [GEOPDGroundMetadataTile alloc];
  uint64_t v5 = [MEMORY[0x1E4F1C9B8] dataWithBytesNoCopy:a1 length:a2 freeWhenDone:0];
  uint64_t v6 = [(GEOPDGroundMetadataTile *)v4 initWithData:v5];

  if (!v6)
  {
    double v8 = 0;
    goto LABEL_54;
  }
  -[GEOPDGroundMetadataTile _readCoord](v6);
  if (*(void *)(v6 + 32))
  {
    double v7 = -[GEOPDGroundMetadataTile coord]((id *)v6);
  }
  else
  {
    double v7 = 0;
  }
  double v8 = (void **)malloc_type_calloc(1uLL, 0x80uLL, 0x10200407642C3B1uLL);
  if (!v8)
  {
    BOOL v36 = (FILE *)*MEMORY[0x1E4F143C8];
    int v37 = 468;
LABEL_51:
    fprintf(v36, "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v37);
    goto LABEL_52;
  }
  -[GEOPDGroundMetadataTile _readBuildTables](v6);
  size_t v9 = [*(id *)(v6 + 16) count];
  v8[1] = (void *)v9;
  if (v9 > 0x10000)
  {
    BOOL v36 = (FILE *)*MEMORY[0x1E4F143C8];
    int v37 = 472;
    goto LABEL_51;
  }
  double v10 = malloc_type_calloc(v9, 0x28uLL, 0x1000040FF9850F6uLL);
  *double v8 = v10;
  if (!v10)
  {
    BOOL v36 = (FILE *)*MEMORY[0x1E4F143C8];
    int v37 = 474;
    goto LABEL_51;
  }
  -[GEOPDGroundMetadataTile _readPhotoPositions](v6);
  size_t v11 = [*(id *)(v6 + 40) count];
  _OWORD v8[3] = (void *)v11;
  if (v11 >= 0x10001)
  {
    BOOL v36 = (FILE *)*MEMORY[0x1E4F143C8];
    int v37 = 477;
    goto LABEL_51;
  }
  double v12 = malloc_type_calloc(v11, 0x40uLL, 0x1000040036F7A65uLL);
  v8[2] = v12;
  if (!v12)
  {
    BOOL v36 = (FILE *)*MEMORY[0x1E4F143C8];
    int v37 = 479;
    goto LABEL_51;
  }
  uint64_t v77 = (id *)(id)v6;
  -[GEOPDGroundMetadataTile _readCameraMetadataTables]((uint64_t)v77);
  size_t v13 = [v77[3] count];
  long long v80 = 0u;
  long long v81 = 0u;
  long long v78 = 0u;
  long long v79 = 0u;
  double v14 = -[GEOPDGroundMetadataTile photoPositions](v77);
  uint64_t v15 = [v14 countByEnumeratingWithState:&v78 objects:v82 count:16];
  if (v15)
  {
    uint64_t v16 = *(void *)v79;
    do
    {
      for (uint64_t i = 0; i != v15; ++i)
      {
        if (*(void *)v79 != v16) {
          objc_enumerationMutation(v14);
        }
        v13 += [*(id *)(*((void *)&v78 + 1) + 8 * i) cameraMetadatasCount];
      }
      uint64_t v15 = [v14 countByEnumeratingWithState:&v78 objects:v82 count:16];
    }
    while (v15);
  }

  v8[5] = (void *)v13;
  if (v13 >= 0x320001)
  {
    BOOL v36 = (FILE *)*MEMORY[0x1E4F143C8];
    int v37 = 482;
    goto LABEL_51;
  }
  unint64_t v18 = malloc_type_calloc(v13, 0x98uLL, 0x10000406F6DD5A3uLL);
  v8[4] = v18;
  if (!v18)
  {
    BOOL v36 = (FILE *)*MEMORY[0x1E4F143C8];
    int v37 = 484;
    goto LABEL_51;
  }
  v8[7] = (void *)v20;
  if (v20 >= 0x320001)
  {
    BOOL v36 = (FILE *)*MEMORY[0x1E4F143C8];
    int v37 = 487;
    goto LABEL_51;
  }
  unsigned int v21 = malloc_type_calloc(v20, 8uLL, 0x1000040789AEA99uLL);
  v8[6] = v21;
  if (!v21)
  {
    BOOL v36 = (FILE *)*MEMORY[0x1E4F143C8];
    int v37 = 489;
    goto LABEL_51;
  }
  -[GEOPDGroundMetadataTile _readStorefronts]((uint64_t)v77);
  size_t v22 = [v77[6] count];
  unsigned char v8[9] = (void *)v22;
  if (v22 >= 0x10001)
  {
    BOOL v36 = (FILE *)*MEMORY[0x1E4F143C8];
    int v37 = 492;
    goto LABEL_51;
  }
  unint64_t v23 = malloc_type_calloc(v22, 0x28uLL, 0x10000400A747E1EuLL);
  v8[8] = v23;
  if (!v23)
  {
    BOOL v36 = (FILE *)*MEMORY[0x1E4F143C8];
    int v37 = 494;
    goto LABEL_51;
  }
  v8[11] = (void *)v25;
  if (v25 >= 0x10001)
  {
    BOOL v36 = (FILE *)*MEMORY[0x1E4F143C8];
    int v37 = 497;
    goto LABEL_51;
  }
  unint64_t v26 = malloc_type_calloc(v25, 0x30uLL, 0x100004064842E6AuLL);
  v8[10] = v26;
  if (!v26)
  {
    BOOL v36 = (FILE *)*MEMORY[0x1E4F143C8];
    int v37 = 499;
    goto LABEL_51;
  }
  v8[13] = (void *)v28;
  if (v28 >= 0x10001)
  {
    BOOL v36 = (FILE *)*MEMORY[0x1E4F143C8];
    int v37 = 502;
    goto LABEL_51;
  }
  unint64_t v29 = malloc_type_calloc(v28, 0x30uLL, 0x100004064842E6AuLL);
  v8[12] = v29;
  if (!v29)
  {
    BOOL v36 = (FILE *)*MEMORY[0x1E4F143C8];
    int v37 = 504;
    goto LABEL_51;
  }
  v8[15] = (void *)v31;
  if (v31 >= 0x20001)
  {
    BOOL v36 = (FILE *)*MEMORY[0x1E4F143C8];
    int v37 = 507;
    goto LABEL_51;
  }
  long long v32 = malloc_type_calloc(v31, 0x38uLL, 0x10000409380FD32uLL);
  v8[14] = v32;
  if (!v32)
  {
    BOOL v36 = (FILE *)*MEMORY[0x1E4F143C8];
    int v37 = 509;
    goto LABEL_51;
  }
  uint64_t v33 = 0;
  for (unint64_t j = 0; ; ++j)
  {
    -[GEOPDGroundMetadataTile _readBuildTables]((uint64_t)v77);
    if (j >= [v77[2] count]) {
      break;
    }
    uint64_t v35 = -[GEOPDGroundMetadataTile buildTableAtIndex:](v77, j);
    {
      fprintf((FILE *)*MEMORY[0x1E4F143C8], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", 517);

      goto LABEL_52;
    }

    v33 += 40;
  }
  uint64_t v39 = 0;
  for (unint64_t k = 0; ; ++k)
  {
    -[GEOPDGroundMetadataTile _readCameraMetadataTables]((uint64_t)v77);
    if (k >= [v77[3] count]) {
      break;
    }
    unint64_t v41 = -[GEOPDGroundMetadataTile cameraMetadataTables](v77);
    unint64_t v42 = [v41 objectAtIndex:k];

    {
      fprintf((FILE *)*MEMORY[0x1E4F143C8], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", 527);

      goto LABEL_52;
    }

    v39 += 152;
  }
  uint64_t v43 = 0;
  uint64_t v44 = 0;
  for (unint64_t m = 0; ; ++m)
  {
    -[GEOPDGroundMetadataTile _readPhotoPositions]((uint64_t)v77);
    if (m >= [v77[5] count]) {
      break;
    }
    uint64_t v45 = -[GEOPDGroundMetadataTile photoPositions](v77);
    uint64_t v46 = [v45 objectAtIndex:m];

    {
      int v68 = 538;
LABEL_89:
      fprintf((FILE *)*MEMORY[0x1E4F143C8], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v68);

      goto LABEL_52;
    }
    {
      int v68 = 542;
      goto LABEL_89;
    }
    uint64_t v47 = [v46 cameraMetadataIndexsCount];
    if (v47 + v44 + [v46 cameraMetadatasCount] > (unint64_t)v8[7])
    {
      int v68 = 546;
      goto LABEL_89;
    }
    uint64_t v48 = [v46 cameraMetadatasCount];
    unint64_t v49 = (unint64_t)v8[5];
    if (v48 + k > v49)
    {
      int v68 = 547;
      goto LABEL_89;
    }
    {
      int v68 = 549;
      goto LABEL_89;
    }
    uint64_t v50 = [v46 cameraMetadatasCount];
    uint64_t v51 = [v46 cameraMetadatasCount];
    uint64_t v52 = [v46 cameraMetadataIndexsCount];

    k += v50;
    v44 += v51 + v52;
    v43 += 64;
  }
  uint64_t v72 = 0;
  uint64_t v73 = 0;
  uint64_t v71 = 0;
  uint64_t v74 = 0;
  for (unint64_t n = 0; ; ++n)
  {
    -[GEOPDGroundMetadataTile _readStorefronts]((uint64_t)v77);
    if (n >= [v77[6] count]) {
      goto LABEL_53;
    }
    unint64_t v53 = -[GEOPDGroundMetadataTile storefronts](v77);
    char v54 = [v53 objectAtIndex:n];

    uint64_t v55 = (char *)v8[8];
    {
      int v69 = 568;
LABEL_92:
      fprintf((FILE *)*MEMORY[0x1E4F143C8], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v69);

      goto LABEL_52;
    }
    {
      int v69 = 572;
      goto LABEL_92;
    }
    uint64_t v56 = [v54 facesCount];
    if (![v54 hasPresentation]) {
      goto LABEL_83;
    }
    char v57 = [v54 presentation];
    int v58 = [v57 hasCloseUpView];
    uint64_t v59 = &v55[v73];
    if (v58)
    {
      *((void *)v59 + objc_destroyWeak(this + 1) = v72;
      uint64_t v60 = v8[10];
      unint64_t v61 = [v57 closeUpView];

      if ((v62 & 1) == 0)
      {
        int v70 = 586;
        goto LABEL_95;
      }
      ++v72;
    }
    else
    {
      *((void *)v59 + objc_destroyWeak(this + 1) = -1;
    }
    int v63 = [v57 hasStandOffView];
    BOOL v64 = &v55[v73];
    if (!v63)
    {
      *((void *)v64 + 2) = -1;
      goto LABEL_82;
    }
    *((void *)v64 + 2) = v71;
    BOOL v65 = v8[12];
    uint64_t v66 = [v57 standOffView];

    if ((v67 & 1) == 0) {
      break;
    }
    ++v71;
LABEL_82:

LABEL_83:
    v74 += v56;
    v73 += 40;
  }
  int v70 = 596;
LABEL_95:
  fprintf((FILE *)*MEMORY[0x1E4F143C8], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v70);

LABEL_52:
  GEOMuninMetadataTileDestroy(v8);
  double v8 = 0;
LABEL_53:

LABEL_54:
  return v8;
}

void sub_18A0FC848(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t anonymous namespace'::collectionPointPhotoCount(id *this, GEOPDGroundMetadataTile *a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v2 = -[GEOPDGroundMetadataTile photoPositions](this);
  uint64_t v3 = 0;
  uint64_t v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        double v7 = *(void **)(*((void *)&v10 + 1) + 8 * i);
        uint64_t v8 = objc_msgSend(v7, "cameraMetadatasCount", (void)v10);
        v3 += v8 + [v7 cameraMetadataIndexsCount];
      }
      uint64_t v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v4);
  }

  return v3;
}

void sub_18A0FCA68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t anonymous namespace'::storefrontCloseUpViewCount(id *this, GEOPDGroundMetadataTile *a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v2 = -[GEOPDGroundMetadataTile storefronts](this);
  uint64_t v3 = 0;
  uint64_t v4 = [v2 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v12 != v5) {
          objc_enumerationMutation(v2);
        }
        double v7 = *(void **)(*((void *)&v11 + 1) + 8 * i);
        if (objc_msgSend(v7, "hasPresentation", (void)v11))
        {
          uint64_t v8 = [v7 presentation];
          unsigned int v9 = [v8 hasCloseUpView];

          v3 += v9;
        }
      }
      uint64_t v4 = [v2 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v4);
  }

  return v3;
}

void sub_18A0FCBAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t anonymous namespace'::storefrontStandOffViewCount(id *this, GEOPDGroundMetadataTile *a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v2 = -[GEOPDGroundMetadataTile storefronts](this);
  uint64_t v3 = 0;
  uint64_t v4 = [v2 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v12 != v5) {
          objc_enumerationMutation(v2);
        }
        double v7 = *(void **)(*((void *)&v11 + 1) + 8 * i);
        if (objc_msgSend(v7, "hasPresentation", (void)v11))
        {
          uint64_t v8 = [v7 presentation];
          unsigned int v9 = [v8 hasStandOffView];

          v3 += v9;
        }
      }
      uint64_t v4 = [v2 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v4);
  }

  return v3;
}

void sub_18A0FCCFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t anonymous namespace'::storefrontFaceCount(id *this, GEOPDGroundMetadataTile *a2)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = -[GEOPDGroundMetadataTile storefronts](this);
  uint64_t v3 = 0;
  uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        v3 += objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "facesCount", (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  return v3;
}

void sub_18A0FCE20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t anonymous namespace'::decodeBuildEntry(void *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = (uint64_t)v3;
  if (v3 && (v5 = *((unsigned __int16 *)v3 + 54), (~v5 & 3) == 0) && (unsigned int v6 = v3[19], v6 <= 0xFFFE) && (v5 & 0x84) == 0x84)
  {
    *(_WORD *)a2 = v6;
    *(_DWORD *)(a2 + 4) = v3[20];
    unsigned int v7 = v3[21];
    *(_DWORD *)(a2 + 12) = v7;
    *(void *)(a2 + 24) = 0;
    if (v7 >= 2)
    {
      -[GEOPDGroundDataBuild _readLodWithTextures]((uint64_t)v3);
      unint64_t v8 = *(void *)(v4 + 48);
      if (v8 >= 8) {
        unint64_t v8 = 8;
      }
      *(void *)(a2 + 24) = v8;
      if (v8)
      {
        unint64_t v9 = 0;
        do
        {
          -[GEOPDGroundDataBuild _readLodWithTextures](v4);
          *(unsigned char *)(a2 + 32 + v9) = *(_DWORD *)(*(void *)(v4 + 40) + 4 * v9);
          ++v9;
        }
        while (v9 < *(void *)(a2 + 24));
      }
    }
    int v10 = -[GEOPDGroundDataBuild type](v4);
    char v11 = v10 == 2;
    if (v10 == 3) {
      char v11 = 2;
    }
    *(unsigned char *)(a2 + 16) = v11;
    if ((*(_WORD *)(v4 + 108) & 0x10) != 0) {
      *(_DWORD *)(a2 + 20) = *(_DWORD *)(v4 + 92);
    }
    else {
      *(_DWORD *)(a2 + 20) = 1077936128;
    }
    uint64_t v12 = 1;
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x1E4F143C8], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", 222);
    uint64_t v12 = 0;
  }

  return v12;
}

void sub_18A0FCFD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t anonymous namespace'::decodePhotoInfo(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = (uint64_t)v3;
  if (!v3
    || (-[GEOPDCameraMetadata _readPosition]((uint64_t)v3), !*(void *)(v4 + 48))
    || (*(unsigned char *)(v4 + 80) & 1) == 0
    || (-[GEOPDCameraMetadata _readLensProjection](v4), !*(void *)(v4 + 40)))
  {
    uint64_t v16 = (FILE *)*MEMORY[0x1E4F143C8];
LABEL_20:
    fprintf(v16, "%s:%d Metadata parse error: Decode error here\n");
LABEL_21:
    uint64_t v17 = 0;
    goto LABEL_22;
  }
  int v5 = *(_DWORD *)(v4 + 68);
  if (v5 >= 256)
  {
    uint64_t v16 = (FILE *)*MEMORY[0x1E4F143C8];
    goto LABEL_20;
  }
  *(unsigned char *)(a2 + 144) = v5;
  -[GEOPDCameraMetadata lensProjection]((id *)v4);
  unsigned int v6 = (double *)objc_claimAutoreleasedReturnValue();
  if (v6) {
    float v7 = v6[4];
  }
  else {
    float v7 = 0.0;
  }
  *(float *)(a2 + 140) = v7;

  -[GEOPDCameraMetadata lensProjection]((id *)v4);
  unint64_t v8 = (unsigned int *)(id)objc_claimAutoreleasedReturnValue();
  unint64_t v9 = v8;
  if (!v8 || (v8[21] & 0x200) == 0 || (unsigned int v10 = v8[20], v10 >= 7))
  {
    double v19 = (FILE **)MEMORY[0x1E4F143C8];
    fprintf((FILE *)*MEMORY[0x1E4F143C8], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", 161);

    fprintf(*v19, "%s:%d Metadata parse error: Decode error here\n");
    goto LABEL_21;
  }
  *(unsigned char *)(a2 + 136) = v10;

  char v11 = -[GEOPDCameraMetadata position]((id *)v4);
  char v12 = GEOOrientedPositionFromPDPosition(v11, a2);

  if ((v12 & 1) == 0)
  {
    uint64_t v16 = (FILE *)*MEMORY[0x1E4F143C8];
    goto LABEL_20;
  }
  uint64_t v13 = -[GEOPDCameraMetadata lensProjection]((id *)v4);

  if ((v14 & 1) == 0)
  {
    uint64_t v16 = (FILE *)*MEMORY[0x1E4F143C8];
    goto LABEL_20;
  }
  -[GEOPDCameraMetadata _readTextureIds](v4);
  if (*(void *)(v4 + 24) >= 6uLL)
  {
    uint64_t v16 = (FILE *)*MEMORY[0x1E4F143C8];
    goto LABEL_20;
  }
  -[GEOPDCameraMetadata _readTextureIds](v4);
  if (*(void *)(v4 + 24))
  {
    for (unint64_t i = 0; ; ++i)
    {
      -[GEOPDCameraMetadata _readTextureIds](v4);
      if (i >= *(void *)(v4 + 24))
      {
        -[GEOPDCameraMetadata _readTextureIds](v4);
        *(unsigned char *)(a2 + 149) = *(void *)(v4 + 24);
        goto LABEL_35;
      }
      -[GEOPDCameraMetadata _readTextureIds](v4);
      if (*(_DWORD *)(*(void *)(v4 + 16) + 4 * i) >= 0x20u) {
        break;
      }
      -[GEOPDCameraMetadata _readTextureIds](v4);
      *(unsigned char *)(a2 + 145 + i) = *(_DWORD *)(*(void *)(v4 + 16) + 4 * i);
    }
    uint64_t v16 = (FILE *)*MEMORY[0x1E4F143C8];
    goto LABEL_20;
  }
  int v20 = *(unsigned __int8 *)(a2 + 144);
  *(unsigned char *)(a2 + 145) = v20;
  if (v20 == 4 && *(float *)(a2 + 140) > 4.71238898)
  {
    *(unsigned char *)(a2 + 146) = 5;
    char v21 = 2;
  }
  else
  {
    char v21 = 1;
  }
  *(unsigned char *)(a2 + 149) = v21;
LABEL_35:
  uint64_t v17 = 1;
LABEL_22:

  return v17;
}

void sub_18A0FD324(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t anonymous namespace'::decodeCollectionPoint(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  if (![v5 hasImdataId]
    || ([v5 hasPosition] & 1) == 0 && !objc_msgSend(v5, "hasTilePosition")
    || ![v5 hasImageryTimestamp]
    || ([v5 hasBuildTableIndex] & 1) == 0)
  {
    unint64_t v9 = (FILE *)*MEMORY[0x1E4F143C8];
    int v10 = 299;
    goto LABEL_10;
  }
  *(void *)(a2 + 48) = [v5 imdataId];
  *(void *)(a2 + 40) = [v5 imageryTimestamp];
  if (![v5 hasTilePosition])
  {
    uint64_t v13 = [v5 position];
    char v14 = GEOOrientedPositionFromPDPosition(v13, a2);

    if ((v14 & 1) == 0)
    {
      unint64_t v9 = (FILE *)*MEMORY[0x1E4F143C8];
      int v10 = 307;
      goto LABEL_10;
    }
LABEL_13:
    *(_WORD *)(a2 + 56) = [v5 buildTableIndex];
    uint64_t v11 = 1;
    goto LABEL_11;
  }
  float v7 = [v5 tilePosition];
  char v8 = GEOOrientedPositionFromPDTilePosition(v7, v6, a2);

  if (v8) {
    goto LABEL_13;
  }
  unint64_t v9 = (FILE *)*MEMORY[0x1E4F143C8];
  int v10 = 305;
LABEL_10:
  fprintf(v9, "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v10);
  uint64_t v11 = 0;
LABEL_11:

  return v11;
}

void sub_18A0FD4B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL anonymous namespace'::decodePhotoInfos(void *a1, uint64_t a2)
{
  id v3 = a1;
  for (unint64_t i = 0; ; ++i)
  {
    unint64_t v5 = [v3 cameraMetadatasCount];
    if (i >= v5) {
      break;
    }
    id v6 = [v3 cameraMetadatas];
    float v7 = [v6 objectAtIndex:i];

    {
      fprintf((FILE *)*MEMORY[0x1E4F143C8], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", 320);

      break;
    }

    a2 += 152;
  }

  return i >= v5;
}

void sub_18A0FD5AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL anonymous namespace'::decodeCollectionPointPhotos(void *a1, __int16 a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  id v9 = a1;
  uint64_t v10 = [v9 cameraMetadataIndexsCount];
  if (v10) {
    uint64_t v11 = [v9 cameraMetadataIndexsCount];
  }
  else {
    uint64_t v11 = [v9 cameraMetadatasCount];
  }
  unint64_t v12 = v11;
  if (!v11)
  {
LABEL_12:
    BOOL v13 = 1;
    goto LABEL_16;
  }
  BOOL v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = (_WORD *)(a4 + 4);
  while (1)
  {
    _WORD *v15 = a2;
    if (!v10) {
      break;
    }
    if (*(unsigned int *)([v9 cameraMetadataIndexs] + 4 * v14) >= a5)
    {
      int v17 = 334;
      goto LABEL_15;
    }
    int v16 = *(_DWORD *)([v9 cameraMetadataIndexs] + 4 * v14);
LABEL_11:
    *((_DWORD *)v15 - objc_destroyWeak(this + 1) = v16;
    BOOL v13 = ++v14 >= v12;
    v15 += 4;
    if (v12 == v14) {
      goto LABEL_12;
    }
  }
  if (a3 + v14 < a5)
  {
    int v16 = a3 + v14;
    goto LABEL_11;
  }
  int v17 = 337;
LABEL_15:
  fprintf((FILE *)*MEMORY[0x1E4F143C8], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v17);
LABEL_16:

  return v13;
}

void sub_18A0FD700(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t anonymous namespace'::decodeStorefrontBundle(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  uint64_t v6 = [v5 hasIdentifier];
  if (v6)
  {
    *a3 = [v5 identifier];
    a3[3] = a2;
    a3[4] = [v5 facesCount];
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x1E4F143C8], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", 346);
  }

  return v6;
}

void sub_18A0FD7B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL anonymous namespace'::decodeFaces(void *a1, uint64_t a2)
{
  id v3 = a1;
  for (unint64_t i = 0; ; ++i)
  {
    unint64_t v5 = [v3 facesCount];
    if (i >= v5) {
      break;
    }
    uint64_t v6 = [v3 faces];
    float v7 = [v6 objectAtIndex:i];

    if (([v7 hasGeometry] & 1) == 0)
    {
      int v17 = 360;
      goto LABEL_15;
    }
    id v8 = [v7 geometry];
    if (![v8 hasPosition]
      || ![v8 hasWidth]
      || ([v8 hasHeight] & 1) == 0)
    {
      int v16 = 194;
      goto LABEL_14;
    }
    id v9 = [v8 position];
    char v10 = GEOOrientedPositionFromPDPosition(v9, a2);

    if ((v10 & 1) == 0)
    {
      int v16 = 196;
LABEL_14:
      fprintf((FILE *)*MEMORY[0x1E4F143C8], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v16);

      int v17 = 361;
LABEL_15:
      fprintf((FILE *)*MEMORY[0x1E4F143C8], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v17);

      break;
    }
    [v8 width];
    *(float *)&double v11 = v11;
    *(_DWORD *)(a2 + 40) = LODWORD(v11);
    [v8 height];
    *(float *)&double v12 = v12;
    *(_DWORD *)(a2 + 44) = LODWORD(v12);
    int v13 = [v8 hasDepth];
    float v14 = 0.0;
    if (v13)
    {
      objc_msgSend(v8, "depth", 0.0);
      float v14 = v15;
    }
    *(float *)(a2 + 48) = v14;

    a2 += 56;
  }

  return i >= v5;
}

void sub_18A0FD97C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t anonymous namespace'::decodeStorefrontView(void *a1, void *a2)
{
  id v3 = a1;
  if (![v3 hasImdataId] || (objc_msgSend(v3, "hasLookAt") & 1) == 0)
  {
    int v7 = 369;
LABEL_6:
    fprintf((FILE *)*MEMORY[0x1E4F143C8], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v7);
    uint64_t v6 = 0;
    goto LABEL_7;
  }
  *a2 = [v3 imdataId];
  uint64_t v4 = [v3 lookAt];
  char v5 = GEOOrientedPositionFromPDPosition(v4, (uint64_t)(a2 + 1));

  if ((v5 & 1) == 0)
  {
    int v7 = 372;
    goto LABEL_6;
  }
  uint64_t v6 = 1;
LABEL_7:

  return v6;
}

void sub_18A0FDA84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void GEOMuninMetadataTileDestroy(void **a1)
{
  if (a1)
  {
    free(*a1);
    free(a1[2]);
    free(a1[4]);
    free(a1[6]);
    free(a1[8]);
    free(a1[10]);
    free(a1[12]);
    free(a1[14]);
    free(a1);
  }
}

void GEOMuninFrustumFromLensModel(float *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  long long v121 = xmmword_18A640C00;
  uint64_t v122 = 0x80000000800000;
  *(_OWORD *)uint64_t v120 = xmmword_18A640C00;
  *(void *)&v120[16] = 0x80000000800000;
  float v4 = a1[1];
  if (v4 >= 3.14159265 || (float v6 = *a1, *a1 >= 3.14159265))
  {
    uint64_t v28 = 0;
    __asm { FMOV            V0.2S, #-1.0 }
    unint64_t v123 = _D0;
    int v124 = 1065353216;
    do
    {
      *(float *)&v105[v28] = *(float *)((char *)&v123 + v28) * 2000.0;
      v28 += 4;
    }
    while (v28 != 12);
    uint64_t v34 = 0;
    unint64_t v103 = _D0;
    int v104 = -1082130432;
    do
    {
      *(float *)((char *)&v123 + v34) = *(float *)((char *)&v103 + v34) * 2000.0;
      v34 += 4;
    }
    while (v34 != 12);
    uint64_t v35 = 0;
    unint64_t v106 = v123;
    int v107 = v124;
    unint64_t v103 = 0x3F800000BF800000;
    int v104 = 1065353216;
    do
    {
      *(float *)((char *)&v123 + v35) = *(float *)((char *)&v103 + v35) * 2000.0;
      v35 += 4;
    }
    while (v35 != 12);
    uint64_t v36 = 0;
    unint64_t v108 = v123;
    int v109 = v124;
    unint64_t v103 = 0x3F800000BF800000;
    int v104 = -1082130432;
    do
    {
      *(float *)((char *)&v123 + v36) = *(float *)((char *)&v103 + v36) * 2000.0;
      v36 += 4;
    }
    while (v36 != 12);
    uint64_t v37 = 0;
    unint64_t v110 = v123;
    int v111 = v124;
    unint64_t v103 = 0xBF8000003F800000;
    int v104 = 1065353216;
    do
    {
      *(float *)((char *)&v123 + v37) = *(float *)((char *)&v103 + v37) * 2000.0;
      v37 += 4;
    }
    while (v37 != 12);
    uint64_t v38 = 0;
    unint64_t v112 = v123;
    int v113 = v124;
    unint64_t v103 = 0xBF8000003F800000;
    int v104 = -1082130432;
    do
    {
      *(float *)((char *)&v123 + v38) = *(float *)((char *)&v103 + v38) * 2000.0;
      v38 += 4;
    }
    while (v38 != 12);
    uint64_t v39 = 0;
    unint64_t v114 = v123;
    int v115 = v124;
    __asm { FMOV            V0.2S, #1.0 }
    unint64_t v103 = _D0;
    int v104 = 1065353216;
    do
    {
      *(float *)((char *)&v123 + v39) = *(float *)((char *)&v103 + v39) * 2000.0;
      v39 += 4;
    }
    while (v39 != 12);
    uint64_t v41 = 0;
    unint64_t v116 = v123;
    int v117 = v124;
    unint64_t v103 = _D0;
    int v104 = -1082130432;
    do
    {
      *(float *)((char *)&v123 + v4objc_destroyWeak(this + 1) = *(float *)((char *)&v103 + v41) * 2000.0;
      v41 += 4;
    }
    while (v41 != 12);
    uint64_t v42 = 0;
    unint64_t v118 = v123;
    int v119 = v124;
    do
    {
      long long v43 = *(_OWORD *)&v105[v42];
      long long v44 = *(_OWORD *)((char *)&v109 + v42);
      uint64_t v45 = (_OWORD *)(a3 + v42);
      v45[1] = *(_OWORD *)((char *)&v106 + v42 + 4);
      v45[2] = v44;
      *uint64_t v45 = v43;
      v42 += 48;
    }
    while (v42 != 96);
    return;
  }
  if (a2 != 2 && a2 != 4)
  {
    float v46 = 0.5;
    float v101 = v4 * 0.5;
    float v102 = v6 * 0.5;
    float v47 = 1.5708;
    uint64_t v48 = 0;
    while (1)
    {
      uint64_t v49 = 0;
      uint64_t v100 = v48;
      LOBYTE(v47) = byte_18A640C34[v48];
      float v50 = (float)((float)((float)LODWORD(v47) + v46) / 5.0) + -0.5;
      do
      {
        unsigned int v51 = byte_18A640C34[v49];
        unint64_t v123 = 0;
        int v124 = 0;
        if (a2 == 3)
        {
          float v60 = -(float)(a1[5]
                       - (float)((float)((float)((float)((float)((float)v51 + v46) / 5.0) + -0.5) * tanf(v102)) * 2.0));
          float v61 = -(float)(a1[6] - (float)((float)(v50 * tanf(v101)) * 2.0));
          float v62 = sqrtf((float)(v60 * v60) + (float)(v61 * v61));
          float v63 = 1.0;
          int v64 = 5;
          do
          {
            float v63 = v63
                - (float)((float)((float)(v63
                                        * (float)((float)((float)((float)(v62 * v63)
                                                                * (float)(a1[2]
                                                                        + (float)((float)(a1[3]
                                                                                        + (float)(a1[4]
                                                                                                * (float)(v62 * v63)))
                                                                                * (float)(v62 * v63))))
                                                        * (float)(v62 * v63))
                                                + 1.0))
                                + -1.0)
                        / (float)((float)((float)((float)(v62 * v63)
                                                * (float)((float)(a1[2] * 3.0)
                                                        + (float)((float)((float)(a1[3] * 4.0)
                                                                        + (float)((float)(a1[4] * 5.0)
                                                                                * (float)(v62 * v63)))
                                                                * (float)(v62 * v63))))
                                        * (float)(v62 * v63))
                                + 1.0));
            --v64;
          }
          while (v64);
          float v65 = (float)(v60 * v63) - a1[7];
          float v66 = (float)(v61 * v63) - a1[8];
          float v67 = fminf(sqrtf((float)(v65 * v65) + (float)(v66 * v66)), 1.5708);
          float v68 = 0.0;
          if (v67 != 0.0) {
            float v68 = tanf(v67) / v67;
          }
          float v58 = v65 * v68;
          float v59 = -(float)(v68 * v66);
          float v46 = 0.5;
        }
        else
        {
          if (a2) {
            goto LABEL_56;
          }
          float v52 = -(float)(a1[5]
                       - (float)((float)((float)((float)((float)((float)v51 + v46) / 5.0) + -0.5) * tanf(v102)) * 2.0));
          float v53 = -(float)(a1[6] - (float)((float)(v50 * tanf(v101)) * 2.0));
          float v54 = sqrtf((float)(v52 * v52) + (float)(v53 * v53));
          float v55 = 1.0;
          int v56 = 5;
          do
          {
            float v55 = v55
                - (float)((float)((float)(v55
                                        * (float)((float)((float)((float)(v54 * v55)
                                                                * (float)(a1[2]
                                                                        + (float)((float)(a1[3]
                                                                                        + (float)(a1[4]
                                                                                                * (float)(v54 * v55)))
                                                                                * (float)(v54 * v55))))
                                                        * (float)(v54 * v55))
                                                + 1.0))
                                + -1.0)
                        / (float)((float)((float)((float)(v54 * v55)
                                                * (float)((float)(a1[2] * 3.0)
                                                        + (float)((float)((float)(a1[3] * 4.0)
                                                                        + (float)((float)(a1[4] * 5.0)
                                                                                * (float)(v54 * v55)))
                                                                * (float)(v54 * v55))))
                                        * (float)(v54 * v55))
                                + 1.0));
            --v56;
          }
          while (v56);
          float v57 = v53 * v55;
          float v58 = (float)(v52 * v55) - a1[7];
          float v59 = -(float)(v57 - a1[8]);
        }
        unint64_t v123 = __PAIR64__(LODWORD(v59), LODWORD(v58));
        int v124 = -1082130432;
LABEL_56:
        uint64_t v69 = 0;
        float v70 = 0.0;
        do
        {
          float v70 = v70 + (float)(*(float *)((char *)&v123 + v69) * *(float *)((char *)&v123 + v69));
          v69 += 4;
        }
        while (v69 != 12);
        uint64_t v71 = 0;
        float v72 = 1.0 / sqrtf(v70);
        do
        {
          *(float *)&v105[v71] = v72 * *(float *)((char *)&v123 + v71);
          v71 += 4;
        }
        while (v71 != 12);
        uint64_t v73 = 0;
        unint64_t v103 = *(void *)v105;
        int v104 = *(_DWORD *)&v105[8];
        do
        {
          *(float *)&v105[v73] = *(float *)((char *)&v103 + v73) * 2000.0;
          v73 += 4;
        }
        while (v73 != 12);
        for (uint64_t i = 0; i != 12; i += 4)
        {
          BOOL v75 = (float *)((char *)&v121 + i);
          float v76 = *(float *)((char *)&v123 + i);
          float v77 = *(float *)((char *)&v121 + i);
          if (v76 < v77) {
            float v77 = *(float *)((char *)&v123 + i);
          }
          *BOOL v75 = v77;
          if (v75[3] >= v76) {
            float v76 = v75[3];
          }
          v75[3] = v76;
        }
        for (uint64_t j = 0; j != 12; j += 4)
        {
          long long v79 = (float *)&v120[j];
          float v47 = *(float *)&v105[j];
          float v80 = *(float *)&v120[j];
          if (v47 < v80) {
            float v80 = *(float *)&v105[j];
          }
          *long long v79 = v80;
          if (v79[3] >= v47) {
            float v47 = v79[3];
          }
          v79[3] = v47;
        }
        ++v49;
      }
      while (v49 != 6);
      uint64_t v48 = v100 + 1;
      if (v100 == 5) {
        goto LABEL_76;
      }
    }
  }
  for (uint64_t k = 0; k != 4; ++k)
  {
    if (a2 == 4)
    {
      int v17 = (float *)((char *)&unk_18A640C14 + 8 * k);
      float v18 = *v17;
      float v19 = v17[1];
      float v11 = v18 * tanf(v6 * 0.5);
      float v10 = -(float)(tanf(v4 * 0.5) * v19);
      float v9 = -1.0;
    }
    else
    {
      float v9 = 0.0;
      float v10 = 0.0;
      float v11 = 0.0;
      if (a2 == 2)
      {
        double v12 = (float *)((char *)&unk_18A640C14 + 8 * k);
        float v13 = -(float)(a1[5] - (float)((float)(*v12 * 0.5) * v6));
        float v14 = -(float)(a1[6] - (float)((float)(v12[1] * 0.5) * v4));
        float v11 = tanf(v13);
        float v15 = tanf(v14);
        float v16 = cosf(v13);
        float v9 = -1.0;
        float v10 = (float)-v15 / v16;
      }
    }
    uint64_t v20 = 0;
    *(float *)char v105 = v11;
    *(float *)&v105[4] = v10;
    *(float *)&v105[8] = v9;
    do
    {
      char v21 = (float *)((char *)&v121 + v20);
      float v22 = *(float *)&v105[v20];
      float v23 = *(float *)((char *)&v121 + v20);
      if (v22 < v23) {
        float v23 = *(float *)&v105[v20];
      }
      *char v21 = v23;
      if (v21[3] >= v22) {
        float v22 = v21[3];
      }
      v21[3] = v22;
      v20 += 4;
    }
    while (v20 != 12);
    uint64_t v24 = 0;
    *(float *)char v105 = v11 * 2000.0;
    *(float *)&v105[4] = v10 * 2000.0;
    *(float *)&v105[8] = v9 * 2000.0;
    do
    {
      size_t v25 = (float *)&v120[v24];
      float v26 = *(float *)&v105[v24];
      float v27 = *(float *)&v120[v24];
      if (v26 < v27) {
        float v27 = *(float *)&v105[v24];
      }
      *size_t v25 = v27;
      if (v25[3] >= v26) {
        float v26 = v25[3];
      }
      v25[3] = v26;
      v24 += 4;
    }
    while (v24 != 12);
  }
LABEL_76:
  uint64_t v81 = 0;
  uint64_t v82 = v121;
  int v83 = DWORD2(v121);
  *(void *)a3 = v121;
  *(_DWORD *)(a3 + 8) = v83;
  long long v84 = v120;
  do
  {
    long long v85 = v84 + 12;
    if ((v81 & 0xFFFFFFFE) == 0) {
      long long v85 = v84;
    }
    *(_DWORD *)&v105[4 * v81++] = *v85;
    v84 += 4;
  }
  while (v81 != 3);
  uint64_t v86 = 0;
  int v87 = *(_DWORD *)&v105[8];
  *(void *)(a3 + 12) = *(void *)v105;
  int v88 = v122;
  *(_DWORD *)(a3 + 20) = v87;
  *(_DWORD *)(a3 + 24) = v82;
  *(_DWORD *)(a3 + 28) = v88;
  *(_DWORD *)(a3 + 32) = v83;
  do
  {
    char v89 = &v120[v86 + 12];
    if (!v86) {
      char v89 = v120;
    }
    *(_DWORD *)&v105[v86] = *(_DWORD *)v89;
    v86 += 4;
  }
  while (v86 != 12);
  uint64_t v90 = 0;
  int v91 = *(_DWORD *)&v105[8];
  *(void *)(a3 + 36) = *(void *)v105;
  int v92 = HIDWORD(v121);
  *(_DWORD *)(a3 + 44) = v91;
  *(_DWORD *)(a3 + 48) = v92;
  *(_DWORD *)(a3 + 52) = HIDWORD(v82);
  *(_DWORD *)(a3 + 56) = v83;
  do
  {
    long long v93 = (_DWORD *)(((unint64_t)v120 | 0xC) + v90);
    if (v90 == 4) {
      long long v93 = &v120[4];
    }
    *(_DWORD *)&v105[v90] = *v93;
    v90 += 4;
  }
  while (v90 != 12);
  uint64_t v94 = 0;
  int v95 = *(_DWORD *)&v105[8];
  *(void *)(a3 + 60) = *(void *)v105;
  *(_DWORD *)(a3 + 68) = v95;
  do
  {
    long long v96 = (_DWORD *)(((unint64_t)&v121 | 0xC) + v94);
    if (v94 == 8) {
      long long v96 = (_DWORD *)&v121 + 2;
    }
    *(_DWORD *)&v105[v94] = *v96;
    v94 += 4;
  }
  while (v94 != 12);
  *(void *)&long long v97 = *(void *)&v105[4];
  *(_DWORD *)(a3 + 72) = *(_DWORD *)v105;
  int v98 = *(_DWORD *)&v120[20];
  *((void *)&v97 + objc_destroyWeak(this + 1) = *(void *)&v120[12];
  *(_OWORD *)(a3 + 76) = v97;
  *(_DWORD *)(a3 + 92) = v98;
}

uint64_t GEOOrientedPositionFromPDPosition(void *a1, uint64_t a2)
{
  id v3 = a1;
  if ([v3 hasX]
    && [v3 hasY]
    && [v3 hasZ]
    && [v3 hasYaw]
    && [v3 hasPitch]
    && ([v3 hasRoll] & 1) != 0)
  {
    [v3 x];
    *(void *)a2 = v4;
    [v3 y];
    *(void *)(a2 + 8) = v5;
    [v3 z];
    *(void *)(a2 + 16) = v6;
    [v3 yaw];
    *(float *)&double v7 = v7;
    *(_DWORD *)(a2 + 24) = LODWORD(v7);
    [v3 pitch];
    *(float *)&double v8 = v8;
    *(_DWORD *)(a2 + 28) = LODWORD(v8);
    [v3 roll];
    *(float *)&double v9 = v9;
    *(_DWORD *)(a2 + 32) = LODWORD(v9);
    uint64_t v10 = 1;
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x1E4F143C8], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", 821);
    uint64_t v10 = 0;
  }

  return v10;
}

void sub_18A0FE544(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t GEOOrientedPositionFromPDTilePosition(void *a1, void *a2, uint64_t a3)
{
  id v5 = a1;
  id v6 = a2;
  if (!v6)
  {
    float v23 = (FILE *)*MEMORY[0x1E4F143C8];
    int v24 = 835;
    goto LABEL_11;
  }
  if (![v5 hasX]
    || ![v5 hasY]
    || ![v5 hasAltitude]
    || ![v5 hasYaw]
    || ![v5 hasPitch]
    || ([v5 hasRoll] & 1) == 0)
  {
    float v23 = (FILE *)*MEMORY[0x1E4F143C8];
    int v24 = 836;
LABEL_11:
    fprintf(v23, "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v24);
    uint64_t v22 = 0;
    goto LABEL_12;
  }
  char v7 = [v6 zoom];
  int v8 = [v6 y];
  double v9 = 1.0 / (double)(1 << v7);
  double v10 = (double)(int)[v6 x];
  double v11 = (double)((1 << v7) + ~v8);
  v32[0] = v9 * v10;
  v32[1] = v9 * v11;
  v32[2] = 0.0;
  v31[0] = v9 * (v10 + 1.0);
  v31[1] = v9 * v11;
  v31[2] = 0.0;
  geo::Mercator3<double>::toGeocentric<double>(v32, v30);
  geo::Mercator3<double>::toGeocentric<double>(v31, v29);
  double v12 = gm::Matrix<double,3,1>::distanceToPoint<int,void>((uint64_t)v30, (uint64_t)v29);
  int v13 = [v5 altitude];
  unsigned int v14 = [v5 x];
  unsigned int v15 = [v5 y];
  float v16 = (double)v13 / 16383.0;
  float v17 = (double)v14 / 16383.0;
  float v18 = (double)v15 / 16383.0;
  v28[0] = v9 * (v10 + v17);
  v28[1] = v9 * (v11 + v18);
  v28[2] = v12 * v16;
  geo::Mercator3<double>::toGeocentric<double>(v28, (double *)&v26);
  *(_OWORD *)a3 = v26;
  *(void *)(a3 + 16) = v27;
  float v19 = (double)[v5 yaw] / 16383.0 * 6.28318531;
  *(float *)(a3 + 24) = v19;
  float v20 = (double)[v5 pitch] / 16383.0 * 6.28318531;
  *(float *)(a3 + 28) = v20;
  float v21 = (double)[v5 roll] / 16383.0 * 6.28318531;
  *(float *)(a3 + 32) = v21;
  uint64_t v22 = 1;
LABEL_12:

  return v22;
}

void sub_18A0FE7D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double gm::Matrix<double,3,1>::distanceToPoint<int,void>(uint64_t a1, uint64_t a2)
{
  for (uint64_t i = 0; i != 24; i += 8)
    *(double *)((char *)&v6 + i) = *(double *)(a1 + i) - *(double *)(a2 + i);
  uint64_t v3 = 0;
  double v4 = 0.0;
  do
  {
    double v4 = v4 + *(double *)((char *)&v6 + v3) * *(double *)((char *)&v6 + v3);
    v3 += 8;
  }
  while (v3 != 24);
  return sqrt(v4);
}

uint64_t anonymous namespace'::frustumFromPDLensProjection(void *a1, int a2, _OWORD *a3)
{
  id v5 = a1;
  long long v6 = v5;
  if (!v5 || (~v5[42] & 0x1FF) != 0)
  {
    fprintf((FILE *)*MEMORY[0x1E4F143C8], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", 174);
    uint64_t v19 = 0;
  }
  else
  {
    float v7 = *((double *)v5 + 4);
    float v8 = *((double *)v5 + 3);
    v22[0] = v7;
    v22[1] = v8;
    float v9 = *((double *)v5 + 5);
    float v10 = *((double *)v5 + 6);
    v22[2] = v9;
    v22[3] = v10;
    float v11 = *((double *)v5 + 7);
    float v12 = *((double *)v5 + 1);
    void v22[4] = v11;
    v22[5] = v12;
    float v13 = *((double *)v5 + 2);
    float v14 = *((double *)v5 + 8);
    v22[6] = v13;
    v22[7] = v14;
    float v15 = *((double *)v5 + 9);
    v22[8] = v15;
    GEOMuninFrustumFromLensModel(v22, a2, (uint64_t)v21);
    long long v16 = v21[3];
    a3[2] = v21[2];
    a3[3] = v16;
    long long v17 = v21[5];
    a3[4] = v21[4];
    a3[5] = v17;
    long long v18 = v21[1];
    uint64_t v19 = 1;
    *a3 = v21[0];
    a3[1] = v18;
  }

  return v19;
}

double geo::Mercator3<double>::toGeocentric<double>(double *a1, double *a2)
{
  double v4 = (*a1 + -0.5 + *a1 + -0.5) * 3.14159265;
  long double v5 = exp((a1[1] + -0.5 + a1[1] + -0.5) * 3.14159265);
  double v6 = atan(v5) * 2.0 + -1.57079633;
  long double v7 = fmod(v4 + 3.14159265, 6.28318531);
  double v8 = fmod(v7 + 6.28318531, 6.28318531) + -3.14159265;
  double v9 = a1[2];
  __double2 v10 = __sincos_stret(v6);
  double v11 = 6378137.0 / sqrt(v10.__sinval * -0.00669437999 * v10.__sinval + 1.0);
  double v12 = v10.__cosval * (v9 + v11);
  __double2 v13 = __sincos_stret(v8);
  *a2 = v13.__cosval * v12;
  a2[1] = v13.__sinval * v12;
  double result = v10.__sinval * (v9 + v11 * 0.99330562);
  a2[2] = result;
  return result;
}

void sub_18A0FF104(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_18A0FFA74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A0FFF18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_18A10019C(_Unwind_Exception *a1)
{
  double v4 = v3;

  _Unwind_Resume(a1);
}

void sub_18A100368(_Unwind_Exception *a1)
{
  long double v5 = v4;

  _Unwind_Resume(a1);
}

void sub_18A100418(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A10086C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_18A100D2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_18A101148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A1015BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_18A1017DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A101974(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A101EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_18A10209C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A102408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, void *a16, uint64_t a17, uint64_t a18, void *a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_18A102588(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A1027CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_18A1029B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A102DF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_18A1031CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,void *a23)
{
  _Unwind_Resume(a1);
}

void sub_18A1035B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, void *a16, void *a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_18A103710(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A103B14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, void *a18, uint64_t a19, uint64_t a20,void *a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_18A103D60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_18A104264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_18A1045E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_18A1049C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_18A104C3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A104DB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A104FF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_18A10540C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id GEOGetGEOPOICategoryLog()
{
  if (qword_1EB2A07A0 != -1) {
    dispatch_once(&qword_1EB2A07A0, &__block_literal_global_115);
  }
  os_log_t v0 = (void *)qword_1EB2A0798;

  return v0;
}

void sub_18A107A70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A107BE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __GEOGetGEOPOICategoryLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOPOICategory");
  uint64_t v1 = (void *)qword_1EB2A0798;
  qword_1EB2A0798 = (uint64_t)v0;
}

void __GEOPOITypeMappingLogJSONFault_block_invoke()
{
  os_log_t v0 = GEOGetGEOPOICategoryLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)uint64_t v1 = 0;
    _os_log_impl(&dword_188D96000, v0, OS_LOG_TYPE_FAULT, "Invalid POIType mapping JSON detected.", v1, 2u);
  }
}

void sub_18A107FC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOImageServiceImageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  double v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    float v14 = 0;
  }
  else {
    float v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  long long v16 = (int *)MEMORY[0x1E4F940E8];
  long long v17 = (int *)MEMORY[0x1E4F940C8];
  long long v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_62;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      unint64_t v23 = *(void *)(v3 + v22);
      if (v23 == -1 || v23 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_62:
      if (v13)
      {
        char v40 = 1;
        goto LABEL_72;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            int v42 = *v14++;
            int v41 = v42;
            if (v42 != 1 && v41 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v41;
          }
        }
        while (v41);
      }
      goto LABEL_73;
    }
    unint64_t v28 = v21 >> 3;
    BOOL v29 = v13;
    if (!v15)
    {
      uint64_t v30 = v14;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    if (v28 != 2)
    {
      if (v28 != 1)
      {
        int v37 = PBReaderSkipValueWithTag();
        long long v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v37) {
          goto LABEL_70;
        }
        goto LABEL_58;
      }
      if (v29)
      {
        if ((*(unsigned char *)(a1 + 44) & 1) == 0)
        {
          uint64_t v34 = PBReaderReadData();
          uint64_t v35 = 16;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_71;
        }
        v9 -= *(unsigned char *)(a1 + 44) & 1;
LABEL_57:
        long long v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_58:
        if (v9) {
          char v39 = 1;
        }
        else {
          char v39 = v13;
        }
        if ((v39 & 1) == 0) {
          goto LABEL_62;
        }
        continue;
      }
LABEL_51:
      char v38 = PBReaderSkipValueWithTag();
      long long v17 = (int *)MEMORY[0x1E4F940C8];
      if ((v38 & 1) == 0)
      {
LABEL_70:
        char v40 = 0;
        goto LABEL_72;
      }
      goto LABEL_58;
    }
    break;
  }
  if (!v29) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) == 0)
  {
    uint64_t v34 = PBReaderReadData();
    uint64_t v35 = 24;
LABEL_48:
    uint64_t v36 = *(void **)(a1 + v35);
    *(void *)(a1 + v35) = v34;

    long long v17 = (int *)MEMORY[0x1E4F940C8];
    --v9;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_57;
  }
LABEL_71:
  char v40 = 0;
  long long v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v40)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if (!v13) {
      return v3;
    }
    goto LABEL_74;
  }
  unint64_t v3 = 0;
  if (v13)
  {
LABEL_74:
    long long v43 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18A108504(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A108984(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOImageServiceImageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOImageServiceImageReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOImageServiceImageReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOImageServiceImageReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOImageServiceImageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18A108B14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOImageServiceImageReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOImageServiceImageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A108B78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOImageServiceImageIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  double v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    long double v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v16 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v14 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v16 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v16;
}

void sub_18A108EC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOImageServiceImageIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_18A109168(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOImageServiceRequestReadAllFrom(unsigned char *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    double v4 = (int *)MEMORY[0x1E4F940E8];
    long double v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v17 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          a1[24] |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            unint64_t v23 = *(void *)&v3[v22];
            if (v23 == -1 || v23 >= *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0) {
              goto LABEL_42;
            }
            v19 += 7;
            BOOL v14 = v20++ >= 9;
            if (v14)
            {
              LODWORD(v2objc_destroyWeak(this + 1) = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v2objc_destroyWeak(this + 1) = 0;
          }
LABEL_44:
          uint64_t v30 = 16;
        }
        else
        {
          if (v17 != 2)
          {
            if (v17 == 1)
            {
              long long v18 = PBReaderReadData();
              if (v18) {
                [a1 addImageId:v18];
              }
            }
            else if (!PBReaderSkipValueWithTag())
            {
              goto LABEL_52;
            }
            continue;
          }
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v21 = 0;
          a1[24] |= 2u;
          while (1)
          {
            uint64_t v27 = *v4;
            unint64_t v28 = *(void *)&v3[v27];
            if (v28 == -1 || v28 >= *(void *)&v3[*v5]) {
              break;
            }
            char v29 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
            *(void *)&v3[v27] = v28 + 1;
            v21 |= (unint64_t)(v29 & 0x7F) << v25;
            if ((v29 & 0x80) == 0) {
              goto LABEL_46;
            }
            v25 += 7;
            BOOL v14 = v26++ >= 9;
            if (v14)
            {
              LODWORD(v2objc_destroyWeak(this + 1) = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6]) {
            LODWORD(v2objc_destroyWeak(this + 1) = 0;
          }
LABEL_48:
          uint64_t v30 = 20;
        }
        *(_DWORD *)&a1[v30] = v21;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v31 = v3[*v6] == 0;
  }
  else
  {
LABEL_52:
    BOOL v31 = 0;
  }
  objc_sync_exit(v3);

  return v31;
}

void sub_18A109DB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOImageServiceRequestReadFrom(unsigned char *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOImageServiceRequestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A109E14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOImageServiceRequestIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  double v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    long double v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_42;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_42;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v23 = 0;
        while (1)
        {
          uint64_t v24 = *v2;
          unint64_t v25 = *(void *)&a1[v24];
          if (v25 == -1 || v25 >= *(void *)&a1[*v3]) {
            goto LABEL_39;
          }
          unint64_t v26 = v25 + 1;
          int v27 = *(char *)(*(void *)&a1[*v5] + v25);
          *(void *)&a1[v24] = v26;
          if (v27 < 0)
          {
            BOOL v22 = v23++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_41;
        }
      }
      if (v16 == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_44:
        BOOL v28 = 0;
        goto LABEL_43;
      }
LABEL_41:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_42;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_44;
    }
    unsigned int v17 = 0;
    while (1)
    {
      uint64_t v18 = *v2;
      unint64_t v19 = *(void *)&a1[v18];
      if (v19 == -1 || v19 >= *(void *)&a1[*v3]) {
        break;
      }
      unint64_t v20 = v19 + 1;
      int v21 = *(char *)(*(void *)&a1[*v5] + v19);
      *(void *)&a1[v18] = v20;
      if (v21 < 0)
      {
        BOOL v22 = v17++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_41;
    }
LABEL_39:
    a1[*v4] = 1;
    goto LABEL_41;
  }
LABEL_42:
  BOOL v28 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v28;
}

BOOL GEOImageServiceResponseReadAllFrom(unsigned char *a1, void *a2, int a3)
{
  long double v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      while (!v5[*v8])
      {
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          unint64_t v14 = *(void *)&v5[v13];
          if (v14 == -1 || v14 >= *(void *)&v5[*v7]) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v16 = v11++ >= 9;
          if (v16)
          {
            unint64_t v12 = 0;
            int v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v17 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v17 || (v12 & 7) == 4) {
          break;
        }
        switch((v12 >> 3))
        {
          case 1u:
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            a1[28] |= 2u;
            while (1)
            {
              uint64_t v22 = *v6;
              unint64_t v23 = *(void *)&v5[v22];
              if (v23 == -1 || v23 >= *(void *)&v5[*v7]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v5[*v9] + v23);
              *(void *)&v5[v22] = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if ((v24 & 0x80) == 0) {
                goto LABEL_47;
              }
              v19 += 7;
              BOOL v16 = v20++ >= 9;
              if (v16)
              {
                LODWORD(v2objc_destroyWeak(this + 1) = 0;
                goto LABEL_49;
              }
            }
            v5[*v8] = 1;
LABEL_47:
            if (v5[*v8]) {
              LODWORD(v2objc_destroyWeak(this + 1) = 0;
            }
LABEL_49:
            uint64_t v36 = 20;
            goto LABEL_58;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v21 = 0;
            a1[28] |= 4u;
            while (2)
            {
              uint64_t v27 = *v6;
              unint64_t v28 = *(void *)&v5[v27];
              if (v28 == -1 || v28 >= *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v29 = *(unsigned char *)(*(void *)&v5[*v9] + v28);
                *(void *)&v5[v27] = v28 + 1;
                v21 |= (unint64_t)(v29 & 0x7F) << v25;
                if (v29 < 0)
                {
                  v25 += 7;
                  BOOL v16 = v26++ >= 9;
                  if (v16)
                  {
                    LODWORD(v2objc_destroyWeak(this + 1) = 0;
                    goto LABEL_53;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v2objc_destroyWeak(this + 1) = 0;
            }
LABEL_53:
            uint64_t v36 = 24;
            goto LABEL_58;
          case 3u:
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v21 = 0;
            a1[28] |= 1u;
            while (2)
            {
              uint64_t v32 = *v6;
              unint64_t v33 = *(void *)&v5[v32];
              if (v33 == -1 || v33 >= *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v34 = *(unsigned char *)(*(void *)&v5[*v9] + v33);
                *(void *)&v5[v32] = v33 + 1;
                v21 |= (unint64_t)(v34 & 0x7F) << v30;
                if (v34 < 0)
                {
                  v30 += 7;
                  BOOL v16 = v31++ >= 9;
                  if (v16)
                  {
                    LODWORD(v2objc_destroyWeak(this + 1) = 0;
                    goto LABEL_57;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v2objc_destroyWeak(this + 1) = 0;
            }
LABEL_57:
            uint64_t v36 = 16;
LABEL_58:
            *(_DWORD *)&a1[v36] = v21;
            goto LABEL_59;
          case 4u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_62;
            }
            uint64_t v35 = objc_alloc_init(GEOImageServiceImage);
            if (!GEOImageServiceImageReadAllFrom((uint64_t)v35, v5, a3))
            {

              goto LABEL_62;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "addImages:", v35, 0, 0);

LABEL_59:
            if (*(void *)&v5[*v6] >= *(void *)&v5[*v7]) {
              goto LABEL_60;
            }
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_62;
            }
            goto LABEL_59;
        }
      }
    }
LABEL_60:
    BOOL v37 = v5[*v8] == 0;
  }
  else
  {
LABEL_62:
    BOOL v37 = 0;
  }
  objc_sync_exit(v5);

  return v37;
}

void sub_18A10B89C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOImageServiceResponseReadFrom(unsigned char *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOImageServiceResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A10B910(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOImageServiceResponseIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  double v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    long double v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            unint64_t v24 = *(void *)&a1[v23];
            if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            unint64_t v25 = v24 + 1;
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v27 = 0;
          break;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOImageServiceImageIsValid(a1)) {
            goto LABEL_53;
          }
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v28 = *v2;
        unint64_t v29 = *(void *)&a1[v28];
        if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v30 = v29 + 1;
        int v31 = *(char *)(*(void *)&a1[*v5] + v29);
        *(void *)&a1[v28] = v30;
        if (v31 < 0)
        {
          BOOL v21 = v27++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

id GEOGetDefaultsForStateCapture()
{
  os_log_t v0 = [MEMORY[0x1E4F1CA60] dictionaryWithCapacity:3];
  uint64_t v1 = [NSNumber numberWithBool:_GEOConfigRangeCheckEnabled()];
  [v0 setObject:v1 forKeyedSubscript:@"RangeClampEnabled"];

  BOOL v2 = _GEOConfigStorageCFPrefsReadWrite();
  id v3 = [MEMORY[0x1E4F1CA80] set];
  os_unfair_lock_lock_with_options();
  if ([(id)qword_1EB2A07B0 count])
  {
    unint64_t v4 = 0;
    do
    {
      long double v5 = (void (*)(void))[(id)qword_1EB2A07B0 pointerAtIndex:v4];
      if (v5)
      {
        char v6 = v5();
        [v3 addObjectsFromArray:v6];
      }
      ++v4;
    }
    while (v4 < [(id)qword_1EB2A07B0 count]);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&_MergedGlobals_337);
  unsigned int v7 = _valuesForStore(v2, v3);
  [v0 setObject:v7 forKeyedSubscript:@"user_defaults"];

  unint64_t v8 = [MEMORY[0x1E4F1CA80] set];
  os_unfair_lock_lock_with_options();
  if ([(id)qword_1EB2A07B8 count])
  {
    unint64_t v9 = 0;
    do
    {
      unint64_t v10 = (void (*)(void))[(id)qword_1EB2A07B8 pointerAtIndex:v9];
      if (v10)
      {
        char v11 = v10();
        [v8 addObjectsFromArray:v11];
      }
      ++v9;
    }
    while (v9 < [(id)qword_1EB2A07B8 count]);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&_MergedGlobals_337);
  unint64_t v12 = _GEOConfigStorageUser();
  int v13 = _valuesForStore(v12, v8);
  [v0 setObject:v13 forKeyedSubscript:@"config_store"];

  int v14 = _GEOConfigStorageXPC();
  char v15 = _valuesForStore(v14, v8);
  [v0 setObject:v15 forKeyedSubscript:@"config_store_xpc"];

  unsigned int v16 = _GEOConfigStorageSystem();
  uint64_t v17 = _valuesForStore(v16, v8);
  [v0 setObject:v17 forKeyedSubscript:@"config_store_system"];

  return v0;
}

id _valuesForStore(void *a1, void *a2)
{
  id v3 = a2;
  unint64_t v4 = [a1 getConfigValueForKey:0 countryCode:0 options:0 source:0];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    long double v5 = (void *)MEMORY[0x1E4F1CA80];
    char v6 = [v4 allKeys];
    unsigned int v7 = [v5 setWithArray:v6];

    [v7 minusSet:v3];
    [v7 removeObject:@"DefaultsSanitizedVersion"];
    [v7 removeObject:@"GEODefaultsRevision"];
    [v7 removeObject:@"DisableSundanceCleanup"];
    unint64_t v8 = (void *)[v4 mutableCopy];
    unint64_t v9 = [v7 allObjects];
    [v8 removeObjectsForKeys:v9];
  }
  else
  {
    unint64_t v8 = 0;
  }

  return v8;
}

void sub_18A10CBBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18A10CE88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18A10D52C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_18A10D758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{
  _Unwind_Resume(a1);
}

void sub_18A10D8CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A10D9E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A10DBFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A10DD30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A10DEA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_18A10DF9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A10E10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_18A10E20C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A10E34C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_18A10E414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A10E4CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A10E578(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A10E710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A10E7FC(_Unwind_Exception *a1)
{
}

void __GEOGetGEOComposedStringLog_block_invoke_5()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOComposedString");
  uint64_t v1 = (void *)_MergedGlobals_3_3;
  _MergedGlobals_3_3 = (uint64_t)v0;
}

void sub_18A10FC8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id GEOGetSubscriptionExpirationLog()
{
  if (qword_1EB2A07D8 != -1) {
    dispatch_once(&qword_1EB2A07D8, &__block_literal_global_136);
  }
  os_log_t v0 = (void *)qword_1EB2A07D0;

  return v0;
}

id _createBGNonRepeatingSystemTaskRequest(void *a1, double a2)
{
  id v3 = a1;
  if (BackgroundSystemTasksLibraryCore())
  {
    unint64_t v4 = (void *)[objc_alloc((Class)getBGNonRepeatingSystemTaskRequestClass()) initWithIdentifier:v3];
    [v4 setPriority:2];
    [v4 setPreventsDeviceSleep:1];
    [v4 setRequiresExternalPower:0];
    [v4 setRequiresUserInactivity:1];
    [v4 setRequiresProtectionClass:3];
    [v4 setScheduleAfter:a2];
  }
  else
  {
    unint64_t v4 = 0;
  }

  return v4;
}

id _nextSubscriptionUpdateRequiredExpirationDate()
{
  os_log_t v0 = +[GEOOfflineDataConfiguration sharedConfiguration];
  uint64_t v1 = [v0 lastUpdatedDate];
  BOOL v2 = v1;
  if (v1)
  {
    id v3 = v1;
  }
  else
  {
    id v3 = [MEMORY[0x1E4F1C9C8] now];
  }
  unint64_t v4 = v3;

  long double v5 = objc_msgSend(v4, "dateByAddingTimeInterval:", (double)(unint64_t)GEOConfigGetUint64(GeoOfflineConfig_UpdateRequiredExpirationInterval, (uint64_t)off_1E9115818));

  return v5;
}

void sub_18A110B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
}

void sub_18A1116F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
}

void __GEOGetSubscriptionExpirationLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "SubscriptionExpiration");
  uint64_t v1 = (void *)qword_1EB2A07D0;
  qword_1EB2A07D0 = (uint64_t)v0;
}

void sub_18A112E54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A113020(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A1130BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t geo::MapNode::MapNode(uint64_t a1, _OWORD *a2, void *a3, uint64_t a4)
{
  *(void *)a1 = &unk_1ED513B60;
  *(_OWORD *)(a1 + 8) = *a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = a4;
  id v5 = a3;
  uint64_t v6 = GEOVectorTileRetain(v5);
  unsigned int v7 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v6;

  return a1;
}

BOOL geo::MapNode::operator==(void *a1, void *a2)
{
  int v4 = (*(uint64_t (**)(void *))(*a1 + 24))(a1);
  return v4 == (*(unsigned int (**)(void *))(*a2 + 24))(a2) && a1[3] == a2[3] && a1[4] == a2[4];
}

id geo::MapNode::tile(id *this)
{
  return this[3];
}

uint64_t geo::MapNode::junction(geo::MapNode *this)
{
  return *((void *)this + 4);
}

void geo::MapNode::~MapNode(void **this)
{
  *this = &unk_1ED513B60;
  GEOVectorTileRelease(this[3]);
}

id GEOStateSnapshot(void *a1)
{
  id v1 = a1;
  BOOL v2 = [MEMORY[0x1E4F28E78] stringWithString:@"Service URLs:\n"];
  for (uint64_t i = 0; i != 65; ++i)
  {
    unint64_t v4 = i + 1;
    if ((unint64_t)(i - 22) < 0x2B || v4 <= 0x15 && ((1 << v4) & 0x3DDE26) != 0)
    {
      if (v4 > 0x41) {
        id v5 = 0;
      }
      else {
        id v5 = off_1E53F5FF0[i];
      }
      uint64_t v6 = GEOGetURLWithSource(v4, 0);
      [v2 appendFormat:@"\t%@: %@\n", v5, v6];
    }
  }
  [v2 appendString:@"\n"];
  unsigned int v7 = +[GEOExperimentConfiguration sharedConfiguration];
  unint64_t v8 = [v7 detailedDescription];
  [v2 appendFormat:@"A/B Experiment Configuration:\n%@\n\n", v8];

  unint64_t v9 = +[GEOResourceManifestManager modernManagerForConfiguration:v1];
  unint64_t v10 = [v9 detailedDescription];
  [v2 appendFormat:@"%@", v10];

  return v2;
}

id GEOStateSnapshotDictionaryRepresentation()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  id v1 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  for (uint64_t i = 0; i != 65; ++i)
  {
    unint64_t v3 = i + 1;
    if ((unint64_t)(i - 22) < 0x2B || v3 <= 0x15 && ((1 << v3) & 0x3DDE26) != 0)
    {
      unint64_t v4 = GEOGetURLWithSource(i + 1, 0);
      id v5 = [v4 absoluteString];
      if (v5)
      {
        if (v3 > 0x41) {
          uint64_t v6 = 0;
        }
        else {
          uint64_t v6 = off_1E53F5FF0[i];
        }
        [v1 setObject:v5 forKey:v6];
      }
    }
  }
  [v0 setObject:v1 forKey:@"Service URLs"];
  unsigned int v7 = +[GEOExperimentConfiguration sharedConfiguration];
  unint64_t v8 = [v7 detailedDescriptionDictionaryRepresentation];

  if (v8) {
    [v0 setObject:v8 forKey:@"A/B Experiment Configuration"];
  }

  return v0;
}

uint64_t GEOGloriaQuadIDTileKeyMakeWithCoordinate(char a1, double a2, double a3, uint64_t a4, uint64_t a5, const unsigned __int8 *a6)
{
  *(double *)&v10[1] = a2;
  double v11 = a3;
  v10[0] = a1;
  long long v12 = xmmword_18A63FCF0;
  gloria::TileId::FromLatLng((gloria::TileId *)&v10[1], &v11, (const double *)v10, a6);
  *(void *)((char *)&v12 + objc_destroyWeak(this + 1) = a1 & 0x3F | ((v8 | gloria::LEADING_BITS_VALUE_LUT[v7]) << 6);
  return v12;
}

uint64_t GEOGloriaQuadIDTileKeyMake(gloria::MortonUtils *this, unsigned int a2, int a3)
{
  LOBYTE(v6) = 12;
  gloria::MortonUtils::XYToQuadId((gloria::MortonUtils *)this, a2);
  *(void *)((char *)&v6 + objc_destroyWeak(this + 1) = a3 & 0x3F | ((gloria::LEADING_BITS_VALUE_LUT[a3] | v4) << 6);
  return v6;
}

uint64_t GEOGloriaQuadIDTileKeyMakeWithQuadKey(unint64_t a1)
{
  char v1 = __clz(a1);
  *(void *)&v3[1] = ((unint64_t)(char)(63
                                                                             - v1
                                                                             + (((63 - v1) & 0x80) >> 7)) >> 1) | (a1 << 6);
  return *(void *)v3;
}

uint64_t GEOCellularInfoTileKeyMakeWithCoordinate(char a1, uint64_t a2, uint64_t a3, const unsigned __int8 *a4, double a5, double a6)
{
  return GEOGloriaQuadIDTileKeyMakeWithCoordinate(a1, a5, a6, a2, a3, a4);
}

uint64_t GEOCellularInfoTileKeyMake(gloria::MortonUtils *a1, unsigned int a2, int a3)
{
  return GEOGloriaQuadIDTileKeyMake(a1, a2, a3);
}

uint64_t GEOCellularInfoTileKeyMakeWithQuadKey(unint64_t a1)
{
  char v1 = __clz(a1);
  *(void *)&v3[1] = ((unint64_t)(char)(63
                                                                             - v1
                                                                             + (((63 - v1) & 0x80) >> 7)) >> 1) | (a1 << 6);
  return *(void *)v3;
}

void sub_18A120054(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A120208(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A1203CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A120664(_Unwind_Exception *a1)
{
}

void sub_18A1206E4(_Unwind_Exception *a1)
{
}

void sub_18A120C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A121588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id GEOGetGEOComposedRouteLog()
{
  if (qword_1EB2A07F8 != -1) {
    dispatch_once(&qword_1EB2A07F8, &__block_literal_global_286);
  }
  id v0 = (void *)_MergedGlobals_340;

  return v0;
}

void __GEOGetGEOComposedRouteLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOComposedRoute");
  char v1 = (void *)_MergedGlobals_340;
  _MergedGlobals_340 = (uint64_t)v0;
}

void sub_18A121EE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A122114(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A122338(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A122490(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A122CB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A122E34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCountryRegionTupleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOCountryRegionTupleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A12336C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCountryRegionTupleIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v16 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v14 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v16 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v16;
}

void sub_18A1236D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCountryRegionTupleIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18A123998(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A123BEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGenericTileReadAllFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    unsigned int v7 = (_DWORD *)(a1 + 4);
    unint64_t v8 = (_DWORD *)(a1 + 8);
    uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v10 = 0;
      unsigned int v11 = 0;
      unint64_t v12 = 0;
      while (1)
      {
        uint64_t v13 = *v3;
        unint64_t v14 = *(void *)(a2 + v13);
        if (v14 == -1 || v14 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v9) + v14);
        *(void *)(a2 + v13) = v14 + 1;
        v12 |= (unint64_t)(v15 & 0x7F) << v10;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v10 += 7;
        if (v11++ >= 9)
        {
          unint64_t v12 = 0;
          int v17 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v17 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v12 = 0;
      }
LABEL_14:
      if (v17 || (v12 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v19 = v12 >> 3;
      if ((v12 >> 3) == 3)
      {
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 12) |= 1u;
        while (1)
        {
          uint64_t v30 = *v3;
          unint64_t v31 = *(void *)(a2 + v30);
          if (v31 == -1 || v31 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v32 = *(unsigned char *)(*(void *)(a2 + *v9) + v31);
          *(void *)(a2 + v30) = v31 + 1;
          v22 |= (unint64_t)(v32 & 0x7F) << v28;
          if ((v32 & 0x80) == 0)
          {
            unsigned int v27 = (_DWORD *)a1;
            goto LABEL_48;
          }
          v28 += 7;
          BOOL v26 = v29++ > 8;
          if (v26)
          {
            LODWORD(v22) = 0;
            unsigned int v27 = (_DWORD *)a1;
            goto LABEL_50;
          }
        }
        unsigned int v27 = (_DWORD *)a1;
LABEL_47:
        *(unsigned char *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if (v19 == 2) {
        break;
      }
      if (v19 == 1)
      {
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 12) |= 4u;
        while (1)
        {
          uint64_t v23 = *v3;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
          {
            unsigned int v27 = v8;
            goto LABEL_47;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v9) + v24);
          *(void *)(a2 + v23) = v24 + 1;
          v22 |= (unint64_t)(v25 & 0x7F) << v20;
          if ((v25 & 0x80) == 0) {
            break;
          }
          v20 += 7;
          BOOL v26 = v21++ > 8;
          if (v26)
          {
            LODWORD(v22) = 0;
            unsigned int v27 = v8;
            goto LABEL_50;
          }
        }
        unsigned int v27 = v8;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_51:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v33 = 0;
    unsigned int v34 = 0;
    uint64_t v22 = 0;
    *(unsigned char *)(a1 + 12) |= 2u;
    while (1)
    {
      uint64_t v35 = *v3;
      unint64_t v36 = *(void *)(a2 + v35);
      if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
      {
        unsigned int v27 = v7;
        goto LABEL_47;
      }
      char v37 = *(unsigned char *)(*(void *)(a2 + *v9) + v36);
      *(void *)(a2 + v35) = v36 + 1;
      v22 |= (unint64_t)(v37 & 0x7F) << v33;
      if ((v37 & 0x80) == 0) {
        break;
      }
      v33 += 7;
      BOOL v26 = v34++ > 8;
      if (v26)
      {
        LODWORD(v22) = 0;
        unsigned int v27 = v7;
        goto LABEL_50;
      }
    }
    unsigned int v27 = v7;
LABEL_48:
    if (*(unsigned char *)(a2 + *v5)) {
      LODWORD(v22) = 0;
    }
LABEL_50:
    _DWORD *v27 = v22;
    goto LABEL_51;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL GEOLanguageReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          uint64_t v23 = PBReaderReadString();
          if (v23) {
            [(id)a1 addLanguage:v23];
          }
        }
        else if ((v10 >> 3) == 1)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_36;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            LODWORD(v19) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v19;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v24 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v25 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v24;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_41;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v26 = v3[*v6] == 0;
  }
  else
  {
LABEL_41:
    BOOL v26 = 0;
  }
  objc_sync_exit(v3);

  return v26;
}

void sub_18A124920(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLanguageReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLanguageReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A124984(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOLanguageIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = 0;
  }
  else
  {
    int v5 = 0;
    char v6 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v2;
        unint64_t v11 = *(void *)&a1[v10];
        if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v11 + 1;
        v9 |= (unint64_t)(v12 & 0x7F) << v7;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        if (v8++ >= 9)
        {
          unint64_t v9 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v15 = v9 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v9 >> 3) == 2)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_45:
          uint64_t v17 = 0;
          goto LABEL_44;
        }
      }
      else if ((v9 >> 3) == 1)
      {
        uint64_t v17 = 0;
        if (v5 || (v9 & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          unint64_t v20 = *(void *)&a1[v19];
          if (v20 == -1 || v20 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v21 = v20 + 1;
          int v22 = *(char *)(*(void *)&a1[*v6] + v20);
          *(void *)&a1[v19] = v21;
          int v5 = 1;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        int v5 = 1;
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_45;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  if (a1[*v4]) {
    BOOL v24 = 1;
  }
  else {
    BOOL v24 = v5 == 0;
  }
  uint64_t v17 = !v24;
LABEL_44:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOTileSetIsValid(char *a1)
{
  uint64_t v111 = *MEMORY[0x1E4F143B8];
  [a1 position];
  [a1 length];
  BOOL v2 = 0;
  int v110 = 0;
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v109 = 0;
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  int v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    char v6 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v5])
    {
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v3;
        unint64_t v11 = *(void *)&a1[v10];
        if (v11 == -1 || v11 >= *(void *)&a1[*v4]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v11 + 1;
        v9 |= (unint64_t)(v12 & 0x7F) << v7;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        BOOL v13 = v8++ >= 9;
        if (v13)
        {
          unint64_t v9 = 0;
          int v14 = a1[*v5];
          goto LABEL_14;
        }
      }
      a1[*v5] = 1;
LABEL_12:
      int v14 = a1[*v5];
      if (a1[*v5]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v15 = v9 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v9 >> 3))
      {
        case 1u:
          if (v15 == 2) {
            goto LABEL_175;
          }
          goto LABEL_219;
        case 2u:
          if (v15 == 2) {
            goto LABEL_175;
          }
          goto LABEL_219;
        case 3u:
          uint64_t v17 = v109;
          if (!v109) {
            goto LABEL_184;
          }
          if (v109 == 3) {
            goto LABEL_219;
          }
          if (HIDWORD(v109))
          {
            if (HIDWORD(v109) == 3 || v110) {
              goto LABEL_219;
            }
            uint64_t v17 = 2;
          }
          else
          {
            uint64_t v17 = 1;
          }
LABEL_184:
          *((_DWORD *)&v109 + v17) = 3;
          if (v15) {
            goto LABEL_219;
          }
          unsigned int v89 = 0;
          while (1)
          {
            uint64_t v90 = *v3;
            unint64_t v91 = *(void *)&a1[v90];
            if (v91 == -1 || v91 >= *(void *)&a1[*v4]) {
              goto LABEL_210;
            }
            unint64_t v92 = v91 + 1;
            int v93 = *(char *)(*(void *)&a1[*v6] + v91);
            *(void *)&a1[v90] = v92;
            if (v93 < 0)
            {
              BOOL v33 = v89++ > 8;
              if (!v33) {
                continue;
              }
            }
            goto LABEL_211;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark()) {
            goto LABEL_219;
          }
          [a1 position];
          [a1 length];
          if (*(void *)&a1[*v3] >= *(void *)&a1[*v4])
          {
            int v18 = 0;
            goto LABEL_178;
          }
          int v18 = 0;
          while (!a1[*v5])
          {
            char v19 = 0;
            unsigned int v20 = 0;
            unint64_t v21 = 0;
            while (2)
            {
              uint64_t v22 = *v3;
              unint64_t v23 = *(void *)&a1[v22];
              if (v23 == -1 || v23 >= *(void *)&a1[*v4])
              {
                a1[*v5] = 1;
              }
              else
              {
                char v24 = *(unsigned char *)(*(void *)&a1[*v6] + v23);
                *(void *)&a1[v22] = v23 + 1;
                v21 |= (unint64_t)(v24 & 0x7F) << v19;
                if (v24 < 0)
                {
                  v19 += 7;
                  BOOL v13 = v20++ >= 9;
                  if (v13)
                  {
                    unint64_t v21 = 0;
                    int v25 = a1[*v5];
                    goto LABEL_44;
                  }
                  continue;
                }
              }
              break;
            }
            int v25 = a1[*v5];
            if (a1[*v5]) {
              unint64_t v21 = 0;
            }
LABEL_44:
            int v26 = v21 & 7;
            if (v25) {
              BOOL v27 = 1;
            }
            else {
              BOOL v27 = v26 == 4;
            }
            if (!v27)
            {
              switch((v21 >> 3))
              {
                case 1u:
                  if (v18 || (v21 & 7) != 0) {
                    goto LABEL_218;
                  }
                  unsigned int v28 = 0;
                  do
                  {
                    uint64_t v29 = *v3;
                    unint64_t v30 = *(void *)&a1[v29];
                    if (v30 == -1 || v30 >= *(void *)&a1[*v4])
                    {
                      int v18 = 1;
                      a1[*v5] = 1;
                      goto LABEL_86;
                    }
                    unint64_t v31 = v30 + 1;
                    int v32 = *(char *)(*(void *)&a1[*v6] + v30);
                    *(void *)&a1[v29] = v31;
                    int v18 = 1;
                    if ((v32 & 0x80000000) == 0) {
                      break;
                    }
                    BOOL v33 = v28++ > 8;
                  }
                  while (!v33);
                  goto LABEL_86;
                case 2u:
                  if (v26 == 2)
                  {
                    uint64_t v107 = 0;
                    uint64_t v108 = 0;
                    if (PBReaderPlaceMark())
                    {
                      if (GEOTileSetRegionIsValid(a1)) {
                        goto LABEL_75;
                      }
                    }
                  }
                  goto LABEL_218;
                case 3u:
                  if ((v21 & 7) != 0) {
                    goto LABEL_218;
                  }
                  unsigned int v34 = 0;
                  while (1)
                  {
                    uint64_t v35 = *v3;
                    unint64_t v36 = *(void *)&a1[v35];
                    if (v36 == -1 || v36 >= *(void *)&a1[*v4]) {
                      goto LABEL_84;
                    }
                    unint64_t v37 = v36 + 1;
                    int v38 = *(char *)(*(void *)&a1[*v6] + v36);
                    *(void *)&a1[v35] = v37;
                    if (v38 < 0)
                    {
                      BOOL v33 = v34++ > 8;
                      if (!v33) {
                        continue;
                      }
                    }
                    goto LABEL_86;
                  }
                case 4u:
                  if (v26 != 2) {
                    goto LABEL_218;
                  }
                  if (!PBReaderPlaceMark()) {
                    goto LABEL_218;
                  }
                  uint64_t v107 = [a1 position];
                  uint64_t v108 = [a1 length];
                  v106[0] = 0;
                  v106[1] = 0;
                  BOOL AllFrom = GEOGenericTileReadAllFrom((uint64_t)v106, (uint64_t)a1);
                  PBReaderRecallMark();
                  if (!AllFrom) {
                    goto LABEL_218;
                  }
LABEL_75:
                  PBReaderRecallMark();
                  goto LABEL_86;
                case 5u:
                  if ((v21 & 7) != 0) {
                    goto LABEL_218;
                  }
                  unsigned int v40 = 0;
                  break;
                default:
                  if (PBReaderSkipValueWithTag()) {
                    goto LABEL_86;
                  }
LABEL_218:
                  PBReaderRecallMark();
                  goto LABEL_219;
              }
              while (1)
              {
                uint64_t v41 = *v3;
                unint64_t v42 = *(void *)&a1[v41];
                if (v42 == -1 || v42 >= *(void *)&a1[*v4]) {
                  break;
                }
                unint64_t v43 = v42 + 1;
                int v44 = *(char *)(*(void *)&a1[*v6] + v42);
                *(void *)&a1[v41] = v43;
                if (v44 < 0)
                {
                  BOOL v33 = v40++ > 8;
                  if (!v33) {
                    continue;
                  }
                }
                goto LABEL_86;
              }
LABEL_84:
              a1[*v5] = 1;
LABEL_86:
              if (*(void *)&a1[*v3] >= *(void *)&a1[*v4]) {
                break;
              }
              continue;
            }
            break;
          }
LABEL_178:
          int v87 = a1[*v5];
          PBReaderRecallMark();
          if (v87) {
            BOOL v88 = 1;
          }
          else {
            BOOL v88 = v18 == 0;
          }
          if (v88) {
            goto LABEL_219;
          }
LABEL_182:
          PBReaderRecallMark();
          goto LABEL_211;
        case 6u:
          uint64_t v45 = v109;
          if (!v109) {
            goto LABEL_193;
          }
          if (v109 == 6) {
            goto LABEL_219;
          }
          if (HIDWORD(v109))
          {
            if (HIDWORD(v109) == 6 || v110) {
              goto LABEL_219;
            }
            uint64_t v45 = 2;
          }
          else
          {
            uint64_t v45 = 1;
          }
LABEL_193:
          *((_DWORD *)&v109 + v45) = 6;
          if (v15) {
            goto LABEL_219;
          }
          unsigned int v94 = 0;
          while (1)
          {
            uint64_t v95 = *v3;
            unint64_t v96 = *(void *)&a1[v95];
            if (v96 == -1 || v96 >= *(void *)&a1[*v4]) {
              goto LABEL_210;
            }
            unint64_t v97 = v96 + 1;
            int v98 = *(char *)(*(void *)&a1[*v6] + v96);
            *(void *)&a1[v95] = v97;
            if (v98 < 0)
            {
              BOOL v33 = v94++ > 8;
              if (!v33) {
                continue;
              }
            }
            goto LABEL_211;
          }
        case 7u:
          uint64_t v46 = v109;
          if (!v109) {
            goto LABEL_202;
          }
          if (v109 == 7) {
            goto LABEL_219;
          }
          if (HIDWORD(v109))
          {
            if (HIDWORD(v109) == 7 || v110)
            {
LABEL_219:
              PBReaderRecallMark();
              return 0;
            }
            uint64_t v46 = 2;
          }
          else
          {
            uint64_t v46 = 1;
          }
LABEL_202:
          *((_DWORD *)&v109 + v46) = 7;
          if (v15) {
            goto LABEL_219;
          }
          unsigned int v99 = 0;
          while (1)
          {
            uint64_t v100 = *v3;
            unint64_t v101 = *(void *)&a1[v100];
            if (v101 == -1 || v101 >= *(void *)&a1[*v4]) {
              break;
            }
            unint64_t v102 = v101 + 1;
            int v103 = *(char *)(*(void *)&a1[*v6] + v101);
            *(void *)&a1[v100] = v102;
            if (v103 < 0)
            {
              BOOL v33 = v99++ > 8;
              if (!v33) {
                continue;
              }
            }
            goto LABEL_211;
          }
LABEL_210:
          a1[*v5] = 1;
LABEL_211:
          if (*(void *)&a1[*v3] >= *(void *)&a1[*v4]) {
            goto LABEL_212;
          }
          break;
        case 9u:
          if (v15 == 2) {
            goto LABEL_175;
          }
          goto LABEL_219;
        case 0xAu:
          if (v15 != 2) {
            goto LABEL_219;
          }
          uint64_t v107 = 0;
          uint64_t v108 = 0;
          if (!PBReaderPlaceMark() || !GEOLanguageIsValid(a1)) {
            goto LABEL_219;
          }
          goto LABEL_182;
        case 0xBu:
          if ((v9 & 7) != 0) {
            goto LABEL_219;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v3;
            unint64_t v49 = *(void *)&a1[v48];
            if (v49 == -1 || v49 >= *(void *)&a1[*v4]) {
              goto LABEL_210;
            }
            unint64_t v50 = v49 + 1;
            int v51 = *(char *)(*(void *)&a1[*v6] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v33 = v47++ > 8;
              if (!v33) {
                continue;
              }
            }
            goto LABEL_211;
          }
        case 0xCu:
          if ((v9 & 7) != 0) {
            goto LABEL_219;
          }
          unsigned int v52 = 0;
          while (1)
          {
            uint64_t v53 = *v3;
            unint64_t v54 = *(void *)&a1[v53];
            if (v54 == -1 || v54 >= *(void *)&a1[*v4]) {
              goto LABEL_210;
            }
            unint64_t v55 = v54 + 1;
            int v56 = *(char *)(*(void *)&a1[*v6] + v54);
            *(void *)&a1[v53] = v55;
            if (v56 < 0)
            {
              BOOL v33 = v52++ > 8;
              if (!v33) {
                continue;
              }
            }
            goto LABEL_211;
          }
        case 0xDu:
          if (v15 == 2)
          {
            uint64_t v107 = 0;
            uint64_t v108 = 0;
            if (PBReaderPlaceMark())
            {
              if (GEOCountryRegionTupleIsValid(a1)) {
                goto LABEL_182;
              }
            }
          }
          goto LABEL_219;
        case 0xEu:
          if ((v9 & 7) != 0) {
            goto LABEL_219;
          }
          unsigned int v57 = 0;
          while (1)
          {
            uint64_t v58 = *v3;
            unint64_t v59 = *(void *)&a1[v58];
            if (v59 == -1 || v59 >= *(void *)&a1[*v4]) {
              goto LABEL_210;
            }
            unint64_t v60 = v59 + 1;
            int v61 = *(char *)(*(void *)&a1[*v6] + v59);
            *(void *)&a1[v58] = v60;
            if (v61 < 0)
            {
              BOOL v33 = v57++ > 8;
              if (!v33) {
                continue;
              }
            }
            goto LABEL_211;
          }
        case 0xFu:
          if ((v9 & 7) != 0) {
            goto LABEL_219;
          }
          unsigned int v62 = 0;
          while (1)
          {
            uint64_t v63 = *v3;
            unint64_t v64 = *(void *)&a1[v63];
            if (v64 == -1 || v64 >= *(void *)&a1[*v4]) {
              goto LABEL_210;
            }
            unint64_t v65 = v64 + 1;
            int v66 = *(char *)(*(void *)&a1[*v6] + v64);
            *(void *)&a1[v63] = v65;
            if (v66 < 0)
            {
              BOOL v33 = v62++ > 8;
              if (!v33) {
                continue;
              }
            }
            goto LABEL_211;
          }
        case 0x10u:
          if ((v9 & 7) != 0) {
            goto LABEL_219;
          }
          unsigned int v67 = 0;
          while (1)
          {
            uint64_t v68 = *v3;
            unint64_t v69 = *(void *)&a1[v68];
            if (v69 == -1 || v69 >= *(void *)&a1[*v4]) {
              goto LABEL_210;
            }
            unint64_t v70 = v69 + 1;
            int v71 = *(char *)(*(void *)&a1[*v6] + v69);
            *(void *)&a1[v68] = v70;
            if (v71 < 0)
            {
              BOOL v33 = v67++ > 8;
              if (!v33) {
                continue;
              }
            }
            goto LABEL_211;
          }
        case 0x11u:
          if ((v9 & 7) != 0) {
            goto LABEL_219;
          }
          unsigned int v72 = 0;
          while (1)
          {
            uint64_t v73 = *v3;
            unint64_t v74 = *(void *)&a1[v73];
            if (v74 == -1 || v74 >= *(void *)&a1[*v4]) {
              goto LABEL_210;
            }
            unint64_t v75 = v74 + 1;
            int v76 = *(char *)(*(void *)&a1[*v6] + v74);
            *(void *)&a1[v73] = v75;
            if (v76 < 0)
            {
              BOOL v33 = v72++ > 8;
              if (!v33) {
                continue;
              }
            }
            goto LABEL_211;
          }
        case 0x12u:
          if ((v9 & 7) != 0) {
            goto LABEL_219;
          }
          unsigned int v77 = 0;
          while (1)
          {
            uint64_t v78 = *v3;
            unint64_t v79 = *(void *)&a1[v78];
            if (v79 == -1 || v79 >= *(void *)&a1[*v4]) {
              goto LABEL_210;
            }
            unint64_t v80 = v79 + 1;
            int v81 = *(char *)(*(void *)&a1[*v6] + v79);
            *(void *)&a1[v78] = v80;
            if (v81 < 0)
            {
              BOOL v33 = v77++ > 8;
              if (!v33) {
                continue;
              }
            }
            goto LABEL_211;
          }
        case 0x13u:
          if ((v9 & 7) != 0) {
            goto LABEL_219;
          }
          unsigned int v82 = 0;
          while (1)
          {
            uint64_t v83 = *v3;
            unint64_t v84 = *(void *)&a1[v83];
            if (v84 == -1 || v84 >= *(void *)&a1[*v4]) {
              goto LABEL_210;
            }
            unint64_t v85 = v84 + 1;
            int v86 = *(char *)(*(void *)&a1[*v6] + v84);
            *(void *)&a1[v83] = v85;
            if (v86 < 0)
            {
              BOOL v33 = v82++ > 8;
              if (!v33) {
                continue;
              }
            }
            goto LABEL_211;
          }
        case 0x14u:
          if (v15 == 2) {
            goto LABEL_175;
          }
          goto LABEL_219;
        default:
LABEL_175:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_219;
          }
          goto LABEL_211;
      }
    }
LABEL_212:
    BOOL v2 = v110 != 0;
  }
  if (a1[*v5]) {
    BOOL v104 = 0;
  }
  else {
    BOOL v104 = v2;
  }
  PBReaderRecallMark();
  return v104;
}

void sub_18A1263C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1268A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTileSetReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  char v12 = (const float *)(a1 + 128);
  uint32x4_t v13 = (uint32x4_t)vld1q_dup_f32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  unsigned int v15 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A640D80), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A640D90), v14)));
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 4;
        char v20 = v19 | v11;
        char v118 = v19 & ~(_BYTE)v11 | v9;
        char v119 = v8;
        char v121 = v19 | v11 | v118;
        if (((v19 | v11) | v8)) {
          unint64_t v21 = 0;
        }
        else {
          unint64_t v21 = a3;
        }
        char v122 = (v21 == 0) | v20;
        uint64_t v22 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        char v24 = (int *)MEMORY[0x1E4F940B8];
        char v120 = v19 | v11;
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v9;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (*(void *)(v3 + *v22) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v23))
  {
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v22;
      unint64_t v29 = *(void *)(v3 + v28);
      if (v29 == -1 || v29 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v29 + 1;
      v27 |= (unint64_t)(v30 & 0x7F) << v25;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v31 = v26++ >= 9;
      if (v31)
      {
        unint64_t v27 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    if (v32 || (v27 & 7) == 4) {
      break;
    }
    unint64_t v34 = v27 >> 3;
    BOOL v35 = v20;
    if ((v122 & 1) == 0)
    {
      unint64_t v36 = v21;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_163;
        }
        if ((*(unsigned char *)(a1 + 129) & 2) == 0)
        {
          uint64_t v40 = PBReaderReadString();
          uint64_t v41 = 24;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_243;
        }
        int v110 = (int)(*(_DWORD *)(a1 + 128) << 22) >> 31;
        goto LABEL_217;
      case 2:
        if (!v35) {
          goto LABEL_163;
        }
        if ((*(unsigned char *)(a1 + 129) & 0x20) == 0)
        {
          uint64_t v40 = PBReaderReadString();
          uint64_t v41 = 56;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_243;
        }
        int v110 = (int)(*(_DWORD *)(a1 + 128) << 18) >> 31;
        goto LABEL_217;
      case 3:
        if ((v119 & 1) == 0) {
          goto LABEL_163;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        while (2)
        {
          uint64_t v45 = *v22;
          unint64_t v46 = *(void *)(v3 + v45);
          if (v46 == -1 || v46 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(v3 + *v24) + v46);
            *(void *)(v3 + v45) = v46 + 1;
            v44 |= (unint64_t)(v47 & 0x7F) << v42;
            if (v47 < 0)
            {
              v42 += 7;
              BOOL v31 = v43++ >= 9;
              if (v31)
              {
                LODWORD(v44) = 0;
                goto LABEL_168;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_168:
        uint64_t v107 = 116;
        goto LABEL_210;
      case 5:
        if (!v35 || (*(unsigned char *)(a1 + 129) & 0x80) != 0) {
          goto LABEL_163;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_243;
        }
        int v51 = objc_alloc_init(GEOTileSetVersion);
        if (!GEOTileSetVersionReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1)) {
          goto LABEL_242;
        }
        PBReaderRecallMark();
        -[GEOTileSet _addNoFlagsValidVersion:](a1, v51);
        goto LABEL_162;
      case 6:
        if ((v119 & 1) == 0) {
          goto LABEL_163;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v44 = 0;
        while (2)
        {
          uint64_t v54 = *v22;
          unint64_t v55 = *(void *)(v3 + v54);
          if (v55 == -1 || v55 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v24) + v55);
            *(void *)(v3 + v54) = v55 + 1;
            v44 |= (unint64_t)(v56 & 0x7F) << v52;
            if (v56 < 0)
            {
              v52 += 7;
              BOOL v31 = v53++ >= 9;
              if (v31)
              {
                LODWORD(v44) = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_172:
        uint64_t v107 = 108;
        goto LABEL_210;
      case 7:
        if ((v119 & 1) == 0) {
          goto LABEL_163;
        }
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v44 = 0;
        while (2)
        {
          uint64_t v59 = *v22;
          unint64_t v60 = *(void *)(v3 + v59);
          if (v60 == -1 || v60 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(v3 + *v24) + v60);
            *(void *)(v3 + v59) = v60 + 1;
            v44 |= (unint64_t)(v61 & 0x7F) << v57;
            if (v61 < 0)
            {
              v57 += 7;
              BOOL v31 = v58++ >= 9;
              if (v31)
              {
                LODWORD(v44) = 0;
                goto LABEL_176;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_176:
        uint64_t v107 = 112;
        goto LABEL_210;
      case 9:
        if (!v35) {
          goto LABEL_163;
        }
        if ((*(unsigned char *)(a1 + 129) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_243;
          }
          int v110 = (int)(*(_DWORD *)(a1 + 128) << 19) >> 31;
LABEL_217:
          v7 += v110;
        }
        else
        {
          uint64_t v40 = PBReaderReadString();
          uint64_t v41 = 48;
LABEL_83:
          unsigned int v62 = *(void **)(a1 + v41);
          *(void *)(a1 + v4objc_destroyWeak(this + 1) = v40;

          --v7;
        }
        goto LABEL_218;
      case 10:
        if (!v35 || (*(unsigned char *)(a1 + 129) & 0x40) != 0) {
          goto LABEL_163;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_243;
        }
        int v51 = objc_alloc_init(GEOLanguage);
        if (!GEOLanguageReadAllFrom((uint64_t)v51, (void *)v3)) {
          goto LABEL_242;
        }
        PBReaderRecallMark();
        -[GEOTileSet _addNoFlagsSupportedLanguage:](a1, v51);
        goto LABEL_162;
      case 11:
        if ((v119 & 1) == 0) {
          goto LABEL_163;
        }
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v65 = 0;
        *(_DWORD *)(a1 + 128) |= 0x20u;
        while (2)
        {
          uint64_t v66 = *v22;
          unint64_t v67 = *(void *)(v3 + v66);
          if (v67 == -1 || v67 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(v3 + *v24) + v67);
            *(void *)(v3 + v66) = v67 + 1;
            v65 |= (unint64_t)(v68 & 0x7F) << v63;
            if (v68 < 0)
            {
              v63 += 7;
              BOOL v31 = v64++ >= 9;
              if (v31)
              {
                uint64_t v65 = 0;
                goto LABEL_180;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v65 = 0;
        }
LABEL_180:
        BOOL v108 = v65 != 0;
        uint64_t v109 = 124;
        goto LABEL_205;
      case 12:
        if ((v119 & 1) == 0) {
          goto LABEL_163;
        }
        char v69 = 0;
        unsigned int v70 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + 128) |= 0x10u;
        while (2)
        {
          uint64_t v71 = *v22;
          unint64_t v72 = *(void *)(v3 + v71);
          if (v72 == -1 || v72 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(v3 + *v24) + v72);
            *(void *)(v3 + v7objc_destroyWeak(this + 1) = v72 + 1;
            v44 |= (unint64_t)(v73 & 0x7F) << v69;
            if (v73 < 0)
            {
              v69 += 7;
              BOOL v31 = v70++ >= 9;
              if (v31)
              {
                LODWORD(v44) = 0;
                goto LABEL_184;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_184:
        uint64_t v107 = 120;
        goto LABEL_210;
      case 13:
        if (!v35 || (*(unsigned char *)(a1 + 129) & 4) != 0) {
          goto LABEL_163;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_243;
        }
        int v51 = objc_alloc_init(GEOCountryRegionTuple);
        if (GEOCountryRegionTupleReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOTileSet _addNoFlagsCountryRegionAllowlist:](a1, v51);
LABEL_162:

LABEL_218:
          char v20 = v120;
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_219;
        }
LABEL_242:

LABEL_243:
        int v116 = 0;
        int v117 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
        char v20 = v120;
        unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_222:
        if (v118) {
LABEL_223:
        }
          *(_DWORD *)(a1 + v117[63]) |= 0x100u;
        if (v20 & 1 | ((v116 & 1) == 0))
        {
          *(_DWORD *)(a1 + v117[63]) |= 0x200u;
          *(_DWORD *)(a1 + v117[63]) |= 0x2000u;
          *(_DWORD *)(a1 + v117[63]) |= 0x8000u;
          *(_DWORD *)(a1 + v117[63]) |= 0x1000u;
          *(_DWORD *)(a1 + v117[63]) |= 0x4000u;
          *(_DWORD *)(a1 + v117[63]) |= 0x400u;
          *(_DWORD *)(a1 + v117[63]) |= 0x800u;
        }
        else if (v21)
        {
          while (1)
          {
            int v112 = *v21++;
            int v111 = v112;
            int v113 = 512;
            switch(v112)
            {
              case 0:
                goto LABEL_236;
              case 1:
                goto LABEL_235;
              case 2:
                int v113 = 0x2000;
                goto LABEL_235;
              case 3:
              case 4:
              case 6:
              case 7:
              case 8:
              case 11:
              case 12:
                continue;
              case 5:
                int v113 = 0x8000;
                goto LABEL_235;
              case 9:
                int v113 = 4096;
                goto LABEL_235;
              case 10:
                int v113 = 0x4000;
                goto LABEL_235;
              case 13:
                int v113 = 1024;
                goto LABEL_235;
              default:
                if (v111 != 20) {
                  continue;
                }
                int v113 = 2048;
LABEL_235:
                *(_DWORD *)(a1 + v117[63]) |= v113;
                break;
            }
          }
        }
LABEL_236:
        if (v116)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v23) == 0;
          if ((v20 & 1) == 0) {
            return v3;
          }
LABEL_240:
          unint64_t v114 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v20) {
            goto LABEL_240;
          }
        }
        return v3;
      case 14:
        if ((v119 & 1) == 0) {
          goto LABEL_163;
        }
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + 128) |= 2u;
        while (2)
        {
          uint64_t v76 = *v22;
          unint64_t v77 = *(void *)(v3 + v76);
          if (v77 == -1 || v77 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v78 = *(unsigned char *)(*(void *)(v3 + *v24) + v77);
            *(void *)(v3 + v76) = v77 + 1;
            v44 |= (unint64_t)(v78 & 0x7F) << v74;
            if (v78 < 0)
            {
              v74 += 7;
              BOOL v31 = v75++ >= 9;
              if (v31)
              {
                LODWORD(v44) = 0;
                goto LABEL_188;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_188:
        uint64_t v107 = 96;
        goto LABEL_210;
      case 15:
        if ((v119 & 1) == 0) {
          goto LABEL_163;
        }
        char v79 = 0;
        unsigned int v80 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + 128) |= 4u;
        while (2)
        {
          uint64_t v81 = *v22;
          unint64_t v82 = *(void *)(v3 + v81);
          if (v82 == -1 || v82 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v83 = *(unsigned char *)(*(void *)(v3 + *v24) + v82);
            *(void *)(v3 + v8objc_destroyWeak(this + 1) = v82 + 1;
            v44 |= (unint64_t)(v83 & 0x7F) << v79;
            if (v83 < 0)
            {
              v79 += 7;
              BOOL v31 = v80++ >= 9;
              if (v31)
              {
                LODWORD(v44) = 0;
                goto LABEL_192;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_192:
        uint64_t v107 = 100;
        goto LABEL_210;
      case 16:
        if ((v119 & 1) == 0) {
          goto LABEL_163;
        }
        char v84 = 0;
        unsigned int v85 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + 128) |= 8u;
        while (2)
        {
          uint64_t v86 = *v22;
          unint64_t v87 = *(void *)(v3 + v86);
          if (v87 == -1 || v87 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v88 = *(unsigned char *)(*(void *)(v3 + *v24) + v87);
            *(void *)(v3 + v86) = v87 + 1;
            v44 |= (unint64_t)(v88 & 0x7F) << v84;
            if (v88 < 0)
            {
              v84 += 7;
              BOOL v31 = v85++ >= 9;
              if (v31)
              {
                LODWORD(v44) = 0;
                goto LABEL_196;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_196:
        uint64_t v107 = 104;
        goto LABEL_210;
      case 17:
        if ((v119 & 1) == 0) {
          goto LABEL_163;
        }
        char v89 = 0;
        unsigned int v90 = 0;
        uint64_t v91 = 0;
        *(_DWORD *)(a1 + 128) |= 0x80u;
        while (2)
        {
          uint64_t v92 = *v22;
          unint64_t v93 = *(void *)(v3 + v92);
          if (v93 == -1 || v93 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v94 = *(unsigned char *)(*(void *)(v3 + *v24) + v93);
            *(void *)(v3 + v92) = v93 + 1;
            v91 |= (unint64_t)(v94 & 0x7F) << v89;
            if (v94 < 0)
            {
              v89 += 7;
              BOOL v31 = v90++ >= 9;
              if (v31)
              {
                uint64_t v91 = 0;
                goto LABEL_200;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v91 = 0;
        }
LABEL_200:
        BOOL v108 = v91 != 0;
        uint64_t v109 = 126;
        goto LABEL_205;
      case 18:
        if ((v119 & 1) == 0) {
          goto LABEL_163;
        }
        char v95 = 0;
        unsigned int v96 = 0;
        uint64_t v97 = 0;
        *(_DWORD *)(a1 + 128) |= 0x40u;
        while (2)
        {
          uint64_t v98 = *v22;
          unint64_t v99 = *(void *)(v3 + v98);
          if (v99 == -1 || v99 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v100 = *(unsigned char *)(*(void *)(v3 + *v24) + v99);
            *(void *)(v3 + v98) = v99 + 1;
            v97 |= (unint64_t)(v100 & 0x7F) << v95;
            if (v100 < 0)
            {
              v95 += 7;
              BOOL v31 = v96++ >= 9;
              if (v31)
              {
                uint64_t v97 = 0;
                goto LABEL_204;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v97 = 0;
        }
LABEL_204:
        BOOL v108 = v97 != 0;
        uint64_t v109 = 125;
LABEL_205:
        *(unsigned char *)(a1 + v109) = v108;
        goto LABEL_219;
      case 19:
        if ((v119 & 1) == 0) {
          goto LABEL_163;
        }
        char v101 = 0;
        unsigned int v102 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + 128) |= 1u;
        while (2)
        {
          uint64_t v103 = *v22;
          unint64_t v104 = *(void *)(v3 + v103);
          if (v104 == -1 || v104 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v105 = *(unsigned char *)(*(void *)(v3 + *v24) + v104);
            *(void *)(v3 + v103) = v104 + 1;
            v44 |= (unint64_t)(v105 & 0x7F) << v101;
            if (v105 < 0)
            {
              v101 += 7;
              BOOL v31 = v102++ >= 9;
              if (v31)
              {
                LODWORD(v44) = 0;
                goto LABEL_209;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_209:
        uint64_t v107 = 92;
LABEL_210:
        *(_DWORD *)(a1 + v107) = v44;
        goto LABEL_219;
      case 20:
        if (!v35 || (*(unsigned char *)(a1 + 129) & 8) != 0) {
          goto LABEL_163;
        }
        PBReaderReadString();
        int v51 = (GEOTileSetVersion *)objc_claimAutoreleasedReturnValue();
        if (v51) {
          -[GEOTileSet _addNoFlagsDeviceSKUAllowlist:](a1, v51);
        }
        goto LABEL_162;
      default:
        if (v118 & 1) == 0 || (*(unsigned char *)(a1 + 129))
        {
LABEL_163:
          char v106 = PBReaderSkipValueWithTag();
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          char v20 = v120;
          if ((v106 & 1) == 0)
          {
            int v116 = 0;
LABEL_221:
            int v117 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
            goto LABEL_222;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v48 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v49 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v48;
          }
          int v50 = PBUnknownFieldAdd();
          char v20 = v120;
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          if (!v50)
          {
            int v116 = 0;
            int v117 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
            goto LABEL_223;
          }
        }
LABEL_219:
        if (!(v121 & 1 | (v7 != 0))) {
          goto LABEL_220;
        }
        break;
    }
  }
LABEL_220:
  int v116 = 1;
  goto LABEL_221;
}

void sub_18A127AA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A129620(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A129C14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A129D88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A12A384(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A12AD68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A12E198(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOTileSetCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v2 = a1[9];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v26;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v26 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOTileSetVersion readAll:](*(void *)(*((void *)&v25 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v4);
  }

  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v7 = a1[8];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v22;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v21 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
    }
    while (v9);
  }

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v12 = a1[4];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v18;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v18 != v15) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend(*(id *)(*((void *)&v17 + 1) + 8 * v16++), "readAll:", 1, (void)v17);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
    }
    while (v14);
  }
}

unint64_t GEOTileSetReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTileSetReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOTileSetReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOTileSetReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTileSetReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOTileSetCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_18A12E55C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTileSetReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTileSetReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A12E5C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A12EB54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTileSetIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  int v2 = *(_DWORD *)(a1 + 128);
  if ((v2 & 0x1FE00) != 0) {
    return 1;
  }
  if ((v2 & 0x400) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v4 = *(id *)(a1 + 32);
  uint64_t v3 = [v4 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v5 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v4);
        }
        if (GEOCountryRegionTupleIsDirty(*(void *)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v3 = [v4 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v3;
}

os_unfair_lock_s *GEOTileSetIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    char v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOTileSetIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A12F6D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A130170(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOTileSetRegionDescription(unsigned int *a1)
{
  int v2 = NSString;
  uint64_t v3 = _GEOTileSetRegionDictionaryRepresentation(a1);
  id v4 = [v2 stringWithFormat:@"GEOTileSetRegion<%p> %@", a1, v3];

  return v4;
}

id _GEOTileSetRegionDictionaryRepresentation(unsigned int *a1)
{
  int v2 = [MEMORY[0x1E4F1CA60] dictionary];
  uint64_t v3 = [NSNumber numberWithUnsignedInt:*a1];
  [v2 setObject:v3 forKey:@"maxX"];

  id v4 = [NSNumber numberWithUnsignedInt:a1[1]];
  [v2 setObject:v4 forKey:@"maxY"];

  uint64_t v5 = [NSNumber numberWithUnsignedInt:a1[2]];
  [v2 setObject:v5 forKey:@"maxZ"];

  uint64_t v6 = [NSNumber numberWithUnsignedInt:a1[3]];
  [v2 setObject:v6 forKey:@"minX"];

  id v7 = [NSNumber numberWithUnsignedInt:a1[4]];
  [v2 setObject:v7 forKey:@"minY"];

  long long v8 = [NSNumber numberWithUnsignedInt:a1[5]];
  [v2 setObject:v8 forKey:@"minZ"];

  return v2;
}

void _GEOTileSetRegionFromDictionaryRepresentation(void *a1, _DWORD *a2)
{
  id v9 = a1;
  uint64_t v3 = [v9 objectForKeyedSubscript:@"minX"];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    a2[3] = [v3 unsignedIntValue];
  }

  id v4 = [v9 objectForKeyedSubscript:@"minY"];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    a2[4] = [v4 unsignedIntValue];
  }

  uint64_t v5 = [v9 objectForKeyedSubscript:@"maxX"];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    *a2 = [v5 unsignedIntValue];
  }

  uint64_t v6 = [v9 objectForKeyedSubscript:@"maxY"];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    a2[1] = [v6 unsignedIntValue];
  }

  id v7 = [v9 objectForKeyedSubscript:@"minZ"];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    a2[5] = [v7 unsignedIntValue];
  }

  long long v8 = [v9 objectForKeyedSubscript:@"maxZ"];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    a2[2] = [v8 unsignedIntValue];
  }
}

BOOL GEOTileSetRegionReadFrom(_DWORD *a1, uint64_t a2)
{
  return GEOTileSetRegionReadAllFrom(a1, a2);
}

uint64_t GEOTileSetRegionWriteTo()
{
  PBDataWriterWriteUint32Field();
  PBDataWriterWriteUint32Field();
  PBDataWriterWriteUint32Field();
  PBDataWriterWriteUint32Field();
  PBDataWriterWriteUint32Field();

  return PBDataWriterWriteUint32Field();
}

BOOL GEOTileSetRegionEquals(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t GEOTileSetRegionHash()
{
  return PBHashBytes();
}

BOOL GEOTileSetRegionIsValid(void *a1)
{
  uint64_t v5 = [a1 position];
  uint64_t v6 = [a1 length];
  BOOL AllFrom = GEOTileSetRegionReadAllFrom(v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

void sub_18A130CE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOTileSetVersionReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 96) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 96) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 96) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 != 0;
        int v15 = v14 & ~v10 | v9;
        int v16 = v14 | v10;
        if (((v14 | v10) | v7)) {
          long long v17 = 0;
        }
        else {
          long long v17 = a3;
        }
        BOOL v18 = v8 != 0;
        long long v19 = (int *)MEMORY[0x1E4F940E8];
        int v20 = 1;
        long long v21 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_101;
        }
        char v65 = v14 & ~(_BYTE)v10 | v9;
        int v67 = v18 | v16 | v15;
        char v68 = (v17 == 0) | v16;
        long long v22 = (int *)MEMORY[0x1E4F940B8];
        char v66 = v14 | v10;
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v9;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (!*(unsigned char *)(v3 + *v21))
  {
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v19;
      unint64_t v27 = *(void *)(v3 + v26);
      if (v27 == -1 || v27 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v27 + 1;
      v25 |= (unint64_t)(v28 & 0x7F) << v23;
      if ((v28 & 0x80) == 0) {
        goto LABEL_24;
      }
      v23 += 7;
      BOOL v29 = v24++ >= 9;
      if (v29)
      {
        unint64_t v25 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
LABEL_24:
    int v30 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_26:
    if (v30 || (v25 & 7) == 4) {
      break;
    }
    unint64_t v32 = v25 >> 3;
    BOOL v33 = v16;
    if ((v68 & 1) == 0)
    {
      unint64_t v34 = v17;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v7 & 1) == 0) {
          goto LABEL_82;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        while (1)
        {
          uint64_t v41 = *v19;
          unint64_t v42 = *(void *)(v3 + v41);
          if (v42 == -1 || v42 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v22) + v42);
          *(void *)(v3 + v4objc_destroyWeak(this + 1) = v42 + 1;
          v40 |= (unint64_t)(v43 & 0x7F) << v38;
          if ((v43 & 0x80) == 0) {
            goto LABEL_85;
          }
          v38 += 7;
          BOOL v29 = v39++ >= 9;
          if (v29)
          {
            LODWORD(v40) = 0;
            goto LABEL_87;
          }
        }
        *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
LABEL_85:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v40) = 0;
        }
LABEL_87:
        uint64_t v59 = 84;
        goto LABEL_96;
      case 2:
        if (!v33 || (*(unsigned char *)(a1 + 96) & 8) != 0) {
          goto LABEL_80;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_120;
        }
        -[GEOTileSetVersion _reserveAvailableTiles:](a1, 1uLL);
        if (!GEOTileSetRegionReadAllFrom((_DWORD *)(*(void *)(a1 + 24) + 24 * *(void *)(a1 + 32)), v3)) {
          goto LABEL_120;
        }
        PBReaderRecallMark();
        uint64_t v47 = 32;
        goto LABEL_70;
      case 3:
        if ((v7 & 1) == 0) {
          goto LABEL_82;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 96) |= 2u;
        while (2)
        {
          uint64_t v50 = *v19;
          unint64_t v51 = *(void *)(v3 + v50);
          if (v51 == -1 || v51 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v22) + v51);
            *(void *)(v3 + v50) = v51 + 1;
            v40 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v48 += 7;
              BOOL v29 = v49++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v40) = 0;
        }
LABEL_91:
        uint64_t v59 = 92;
        goto LABEL_96;
      case 4:
        if (!v33 || (*(unsigned char *)(a1 + 96) & 0x10) != 0)
        {
LABEL_80:
          int v58 = PBReaderSkipValueWithTag();
          LOBYTE(v16) = v66;
          long long v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v58 & v67 & 1) == 0) {
            goto LABEL_119;
          }
          goto LABEL_98;
        }
        if (!PBReaderPlaceMark()
          || (-[GEOTileSetVersion _reserveGenericTiles:](a1, 1uLL),
              !GEOGenericTileReadAllFrom(*(void *)(a1 + 48) + 16 * *(void *)(a1 + 56), v3)))
        {
LABEL_120:
          int v20 = 0;
          LOBYTE(v16) = v66;
          long long v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_100;
        }
        PBReaderRecallMark();
        uint64_t v47 = 56;
LABEL_70:
        ++*(void *)(a1 + v47);
        LOBYTE(v16) = v66;
        long long v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_97;
      case 5:
        if ((v7 & 1) == 0) {
          goto LABEL_82;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 96) |= 1u;
        while (2)
        {
          uint64_t v55 = *v19;
          unint64_t v56 = *(void *)(v3 + v55);
          if (v56 == -1 || v56 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v22) + v56);
            *(void *)(v3 + v55) = v56 + 1;
            v40 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v53 += 7;
              BOOL v29 = v54++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v40) = 0;
        }
LABEL_95:
        uint64_t v59 = 88;
LABEL_96:
        *(_DWORD *)(a1 + v59) = v40;
        goto LABEL_97;
      default:
        if ((v65 & 1) == 0 || (*(unsigned char *)(a1 + 96) & 4) != 0)
        {
LABEL_82:
          int v58 = PBReaderSkipValueWithTag();
          long long v21 = (int *)MEMORY[0x1E4F940C8];
          LOBYTE(v16) = v66;
          if ((v58 & v67 & 1) == 0)
          {
LABEL_119:
            int v20 = v58;
            goto LABEL_100;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v44 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v45 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v44;
          }
          int v46 = PBUnknownFieldAdd();
          LOBYTE(v16) = v66;
          long long v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v46)
          {
            int v20 = 0;
            goto LABEL_102;
          }
LABEL_97:
          if ((v67 & 1) == 0) {
            goto LABEL_99;
          }
        }
LABEL_98:
        if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v6)) {
          goto LABEL_99;
        }
        break;
    }
  }
LABEL_99:
  int v20 = 1;
LABEL_100:
  LOBYTE(v15) = v65;
LABEL_101:
  if (v15) {
LABEL_102:
  }
    *(unsigned char *)(a1 + 96) |= 4u;
  if (!(v16 & 1 | ((v20 & 1) == 0)))
  {
    if (!v17) {
      goto LABEL_113;
    }
    while (1)
    {
      int v62 = *v17++;
      int v61 = v62;
      if (v62 == 2) {
        break;
      }
      if (v61 == 4)
      {
        char v60 = 16;
LABEL_109:
        *(unsigned char *)(a1 + 96) |= v60;
      }
      else if (!v61)
      {
        goto LABEL_113;
      }
    }
    char v60 = 8;
    goto LABEL_109;
  }
  *(unsigned char *)(a1 + 96) |= 8u;
  *(unsigned char *)(a1 + 96) |= 0x10u;
LABEL_113:
  if (v20)
  {
    uint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
    if ((v16 & 1) == 0) {
      return v3;
    }
    goto LABEL_117;
  }
  uint64_t v3 = 0;
  if (v16)
  {
LABEL_117:
    char v63 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18A13164C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A131DF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOTileSetVersionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTileSetVersionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOTileSetVersionReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOTileSetVersionReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOTileSetVersionReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_18A132060(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A13233C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A132558(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRUserReadAllFrom(void *a1, void *a2, int a3)
{
  id v4 = a2;
  objc_sync_enter(v4);
  if (v4)
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
    char v7 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v4[*MEMORY[0x1E4F940E8]] < *(void *)&v4[*MEMORY[0x1E4F940E0]])
    {
      id v8 = (int *)MEMORY[0x1E4F940B8];
      BOOL v33 = a1;
      do
      {
        if (v4[*v7]) {
          break;
        }
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          uint64_t v12 = *v5;
          unint64_t v13 = *(void *)&v4[v12];
          if (v13 == -1 || v13 >= *(void *)&v4[*v6]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v4[*v8] + v13);
          *(void *)&v4[v12] = v13 + 1;
          v11 |= (unint64_t)(v14 & 0x7F) << v9;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v9 += 7;
          if (v10++ >= 9)
          {
            unint64_t v11 = 0;
            int v16 = v4[*v7];
            goto LABEL_15;
          }
        }
        v4[*v7] = 1;
LABEL_13:
        int v16 = v4[*v7];
        if (v4[*v7]) {
          unint64_t v11 = 0;
        }
LABEL_15:
        if (v16 || (v11 & 7) == 4) {
          break;
        }
        if ((v11 >> 3) == 1)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_51;
          }
          if (*(void *)&v4[*v5] >= *(void *)&v4[*v6])
          {
            long long v21 = 0;
            int v20 = 0;
LABEL_50:

            goto LABEL_51;
          }
          char v18 = 0;
          char v19 = 0;
          int v20 = 0;
          long long v21 = 0;
          while (2)
          {
            if (!v4[*v7])
            {
              char v22 = 0;
              unsigned int v23 = 0;
              unint64_t v24 = 0;
              while (1)
              {
                uint64_t v25 = *v5;
                unint64_t v26 = *(void *)&v4[v25];
                if (v26 == -1 || v26 >= *(void *)&v4[*v6]) {
                  break;
                }
                char v27 = *(unsigned char *)(*(void *)&v4[*v8] + v26);
                *(void *)&v4[v25] = v26 + 1;
                v24 |= (unint64_t)(v27 & 0x7F) << v22;
                if ((v27 & 0x80) == 0) {
                  goto LABEL_32;
                }
                v22 += 7;
                if (v23++ > 8) {
                  goto LABEL_40;
                }
              }
              v4[*v7] = 1;
LABEL_32:
              if (v4[*v7]) {
                unint64_t v24 = 0;
              }
              if ((v24 >> 3) != 2)
              {
                if ((v24 >> 3) == 1)
                {
                  uint64_t v29 = PBReaderReadString();

                  char v19 = 1;
                  long long v21 = (void *)v29;
                  goto LABEL_41;
                }
LABEL_40:
                if (!PBReaderSkipValueWithTag()) {
                  goto LABEL_50;
                }
                goto LABEL_41;
              }
              if (!PBReaderPlaceMark()) {
                goto LABEL_50;
              }
              int v30 = objc_alloc_init(GEOLPRVehicle);

              if ((GEOLPRVehicleReadAllFrom((uint64_t)v30, v4, a3) & 1) == 0)
              {
                int v20 = v30;
                goto LABEL_50;
              }
              PBReaderRecallMark();
              char v18 = 1;
              int v20 = v30;
LABEL_41:
              if (*(void *)&v4[*v5] < *(void *)&v4[*v6]) {
                continue;
              }
            }
            break;
          }
          if ((v19 & 1) == 0 || (v18 & 1) == 0) {
            goto LABEL_50;
          }
          [v33 setVehiclesValue:v20 forKey:v21];
          PBReaderRecallMark();
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_51;
        }
      }
      while (*(void *)&v4[*v5] < *(void *)&v4[*v6]);
    }
    BOOL v31 = v4[*v7] == 0;
  }
  else
  {
LABEL_51:
    BOOL v31 = 0;
  }
  objc_sync_exit(v4);

  return v31;
}

void sub_18A133970(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRUserReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLPRUserReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A1339D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRUserIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || *(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
          goto LABEL_51;
        }
        char v16 = 0;
        char v17 = 0;
        do
        {
          if (a1[*v4]) {
            break;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          unint64_t v20 = 0;
          while (1)
          {
            uint64_t v21 = *v2;
            unint64_t v22 = *(void *)&a1[v21];
            if (v22 == -1 || v22 >= *(void *)&a1[*v3]) {
              break;
            }
            char v23 = *(unsigned char *)(*(void *)&a1[*v5] + v22);
            *(void *)&a1[v21] = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v12 = v19++ >= 9;
            if (v12)
            {
              unint64_t v20 = 0;
              int v24 = a1[*v4];
              goto LABEL_34;
            }
          }
          a1[*v4] = 1;
LABEL_32:
          int v24 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v20 = 0;
          }
LABEL_34:
          if (v24) {
            break;
          }
          int v25 = v20 & 7;
          if ((v20 >> 3) == 2)
          {
            if (v25 != 2 || (GEOLPRVehicleIsValid(a1) & 1) == 0) {
              goto LABEL_51;
            }
            char v17 = 1;
          }
          else if ((v20 >> 3) == 1)
          {
            if (v25 != 2) {
              goto LABEL_51;
            }
            char v16 = 1;
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_51;
            }
          }
          else if (!PBReaderSkipValueWithTag())
          {
            goto LABEL_51;
          }
        }
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
        if ((v16 & 1) == 0 || (v17 & 1) == 0)
        {
LABEL_51:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_51;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v26 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v26;
}

uint64_t GEOLPRVehicleIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = 0;
    char v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_33;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v2;
        unint64_t v11 = *(void *)&a1[v10];
        if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v11 + 1;
        v9 |= (unint64_t)(v12 & 0x7F) << v7;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        if (v8++ >= 9)
        {
          unint64_t v9 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v15 = v9 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_33;
      }
      switch((v9 >> 3))
      {
        case 1u:
          uint64_t v17 = 0;
          if (!v5 && v15 == 2)
          {
            int v5 = 1;
            goto LABEL_29;
          }
          goto LABEL_39;
        case 2u:
          if (v15 != 2) {
            goto LABEL_40;
          }
          goto LABEL_29;
        case 3u:
          if (v15 == 2) {
            goto LABEL_29;
          }
          goto LABEL_40;
        case 4u:
          if (v15 != 2) {
            goto LABEL_40;
          }
LABEL_29:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_40:
            uint64_t v17 = 0;
            goto LABEL_39;
          }
LABEL_30:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_33;
          }
          break;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_40;
          }
          goto LABEL_30;
      }
    }
  }
  int v5 = 0;
LABEL_33:
  if (a1[*v4]) {
    BOOL v18 = 1;
  }
  else {
    BOOL v18 = v5 == 0;
  }
  uint64_t v17 = !v18;
LABEL_39:
  PBReaderRecallMark();
  return v17;
}

unint64_t GEOLPRVehicleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 2);
  if (v9 & 1 | (v10 > 2) | v7 & 1) {
    int v13 = 0;
  }
  else {
    int v13 = a3;
  }
  int v14 = (int *)MEMORY[0x1E4F940E8];
  int v15 = (int *)MEMORY[0x1E4F940C8];
  char v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_66;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      unint64_t v21 = *(void *)(v3 + v20);
      if (v21 == -1 || v21 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v22 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v21 + 1;
      v19 |= (unint64_t)(v22 & 0x7F) << v17;
      if ((v22 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      if (v18++ >= 9)
      {
        unint64_t v19 = 0;
        int v24 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v24 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v24 || (v19 & 7) == 4)
    {
LABEL_66:
      if (v12)
      {
        char v38 = 1;
        goto LABEL_77;
      }
      if (v13)
      {
        while (1)
        {
          int v40 = *v13++;
          char v39 = 2;
          switch(v40)
          {
            case 0:
              goto LABEL_78;
            case 1:
              goto LABEL_73;
            case 2:
              char v39 = 4;
              goto LABEL_73;
            case 3:
              char v39 = 8;
              goto LABEL_73;
            case 4:
              char v39 = 1;
LABEL_73:
              *(unsigned char *)(a1 + 60) |= v39;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_78;
    }
    unint64_t v26 = v19 >> 3;
    BOOL v27 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      char v28 = v13;
      do
      {
        int v30 = *v28++;
        int v29 = v30;
        BOOL v27 = v30 != 0;
        if (v30) {
          BOOL v31 = v29 == v26;
        }
        else {
          BOOL v31 = 1;
        }
      }
      while (!v31);
    }
    switch((int)v26)
    {
      case 1:
        if (!v27) {
          goto LABEL_53;
        }
        if ((*(unsigned char *)(a1 + 60) & 2) == 0)
        {
          uint64_t v32 = PBReaderReadString();
          uint64_t v33 = 24;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_76;
        }
        char v37 = *(unsigned char *)(a1 + 60) << 6;
        goto LABEL_61;
      case 2:
        if (!v27) {
          goto LABEL_53;
        }
        if ((*(unsigned char *)(a1 + 60) & 4) == 0)
        {
          uint64_t v32 = PBReaderReadString();
          uint64_t v33 = 32;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_76;
        }
        char v37 = 32 * *(unsigned char *)(a1 + 60);
        goto LABEL_61;
      case 3:
        if (!v27) {
          goto LABEL_53;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v32 = PBReaderReadString();
          uint64_t v33 = 40;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_76;
        }
        char v37 = 16 * *(unsigned char *)(a1 + 60);
LABEL_61:
        v8 += v37 >> 7;
        goto LABEL_64;
      case 4:
        if (!v27)
        {
LABEL_53:
          char v36 = PBReaderSkipValueWithTag();
          int v15 = (int *)MEMORY[0x1E4F940C8];
          if ((v36 & 1) == 0)
          {
LABEL_75:
            char v38 = 0;
            goto LABEL_77;
          }
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 60) & 1) == 0)
        {
          uint64_t v32 = PBReaderReadString();
          uint64_t v33 = 16;
LABEL_52:
          int v35 = *(void **)(a1 + v33);
          *(void *)(a1 + v33) = v32;

          int v15 = (int *)MEMORY[0x1E4F940C8];
          --v8;
          goto LABEL_65;
        }
        if (PBReaderSkipValueWithTag())
        {
          v8 -= *(unsigned char *)(a1 + 60) & 1;
LABEL_64:
          int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_65:
          if (!(v12 & 1 | (v8 != 0))) {
            goto LABEL_66;
          }
          continue;
        }
LABEL_76:
        char v38 = 0;
        int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_77:
        *(unsigned char *)(a1 + 60) |= 2u;
        *(unsigned char *)(a1 + 60) |= 4u;
        *(unsigned char *)(a1 + 60) |= 8u;
        *(unsigned char *)(a1 + 60) |= 1u;
        if (v38)
        {
LABEL_78:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_79;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v12)
          {
LABEL_79:
            uint64_t v41 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v34 = PBReaderSkipValueWithTag();
        int v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v34) {
          goto LABEL_75;
        }
        goto LABEL_65;
    }
  }
}

void sub_18A134B60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A134C58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A134DC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A134F34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A135470(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRVehicleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRVehicleReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOLPRVehicleReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOLPRVehicleReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRVehicleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18A135600(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRVehicleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRVehicleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A135664(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A13582C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRVehicleIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x1F) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_18A135B30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOGetSystemMonitorLog()
{
  if (qword_1EB2A0818 != -1) {
    dispatch_once(&qword_1EB2A0818, &__block_literal_global_118);
  }
  os_log_t v0 = (void *)qword_1EB2A0810;

  return v0;
}

void _GEOSystemMonitorPowerNotification(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  char v6 = (void *)MEMORY[0x18C1203C0]();
  switch(a3)
  {
    case -536870144:
      int v15 = GEOGetSystemMonitorLog();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_188D96000, v15, OS_LOG_TYPE_DEBUG, "Received kIOMessageSystemHasPoweredOn", buf, 2u);
      }

      char v16 = +[GEOSystemMonitor sharedInstance];
      if (v16)
      {
        *(void *)uint64_t v33 = 0;
        uint64_t v34 = (uint64_t)v33;
        uint64_t v35 = 0x2020000000;
        LOBYTE(v36) = 0;
        *(void *)buf = MEMORY[0x1E4F143A8];
        uint64_t v46 = 3221225472;
        uint64_t v47 = __34__GEOSystemMonitor__systemDidWake__block_invoke;
        char v48 = &unk_1E53D89C0;
        unsigned int v49 = v16;
        uint64_t v50 = v33;
        geo_isolate_sync();
        if (*(unsigned char *)(v34 + 24))
        {
          char v17 = GEOGetSystemMonitorLog();
          if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
          {
            LOWORD(block) = 0;
            _os_log_impl(&dword_188D96000, v17, OS_LOG_TYPE_DEBUG, "System did wake. Notifying observers", (uint8_t *)&block, 2u);
          }

          [v16[3] systemDidWake];
        }
        _Block_object_dispose(v33, 8);
      }

      break;
    case -536870272:
      unsigned int v18 = GEOGetSystemMonitorLog();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_188D96000, v18, OS_LOG_TYPE_DEBUG, "Received kIOMessageSystemWillSleep", buf, 2u);
      }

      uint64_t v19 = +[GEOSystemMonitor sharedInstance];
      v25[0] = MEMORY[0x1E4F143A8];
      v25[1] = 3221225472;
      unint64_t v26 = ___GEOSystemMonitorPowerNotification_block_invoke_122;
      BOOL v27 = &__block_descriptor_40_e5_v8__0l;
      uint64_t v28 = a4;
      uint64_t v20 = v25;
      if (v19)
      {
        blocuint64_t k = 0;
        p_blocuint64_t k = (uint64_t)&block;
        uint64_t v53 = 0x2020000000;
        LOBYTE(v54) = 0;
        *(void *)buf = MEMORY[0x1E4F143A8];
        uint64_t v46 = 3221225472;
        uint64_t v47 = __37__GEOSystemMonitor__systemWillSleep___block_invoke;
        char v48 = &unk_1E53D89C0;
        unsigned int v49 = (void *)v19;
        uint64_t v50 = (uint8_t *)&block;
        geo_isolate_sync();
        if (*(unsigned char *)(p_block + 24))
        {
          unint64_t v21 = GEOGetSystemMonitorLog();
          if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)uint64_t v33 = 0;
            _os_log_impl(&dword_188D96000, v21, OS_LOG_TYPE_DEBUG, "System will sleep. Notifying observers", v33, 2u);
          }

          dispatch_group_t v22 = dispatch_group_create();
          char v23 = *(void **)(v19 + 24);
          *(void *)uint64_t v33 = MEMORY[0x1E4F143A8];
          uint64_t v34 = 3221225472;
          uint64_t v35 = (uint64_t)__37__GEOSystemMonitor__systemWillSleep___block_invoke_14;
          char v36 = &unk_1E53F6370;
          int v24 = v22;
          char v37 = v24;
          [v23 enumerateObserversWithGroup:v24 visitor:v33];
          dispatch_group_notify(v24, *(dispatch_queue_t *)(v19 + 8), v20);
        }
        else
        {
          v26((uint64_t)v20);
        }
        _Block_object_dispose(&block, 8);
      }

      break;
    case -536870288:
      char v7 = GEOGetSystemMonitorLog();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_188D96000, v7, OS_LOG_TYPE_DEBUG, "Received kIOMessageCanSystemSleep", buf, 2u);
      }

      id v8 = +[GEOSystemMonitor sharedInstance];
      v29[0] = MEMORY[0x1E4F143A8];
      v29[1] = 3221225472;
      int v30 = ___GEOSystemMonitorPowerNotification_block_invoke;
      BOOL v31 = &__block_descriptor_40_e8_v12__0B8l;
      uint64_t v32 = a4;
      char v9 = v29;
      if (v8)
      {
        uint64_t v41 = 0;
        unint64_t v42 = &v41;
        uint64_t v43 = 0x2020000000;
        char v44 = 0;
        *(void *)buf = MEMORY[0x1E4F143A8];
        uint64_t v46 = 3221225472;
        uint64_t v47 = __36__GEOSystemMonitor__systemCanSleep___block_invoke;
        char v48 = &unk_1E53D89C0;
        unsigned int v49 = v8;
        uint64_t v50 = (uint8_t *)&v41;
        geo_isolate_sync();
        if (*((unsigned char *)v42 + 24))
        {
          unsigned int v10 = GEOGetSystemMonitorLog();
          if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)uint64_t v33 = 0;
            _os_log_impl(&dword_188D96000, v10, OS_LOG_TYPE_DEBUG, "System is asking to sleep. Checking with observers", v33, 2u);
          }

          dispatch_group_t v11 = dispatch_group_create();
          v39[0] = 0;
          v39[1] = v39;
          v39[2] = 0x2020000000;
          char v40 = 1;
          char v12 = (void *)v8[3];
          *(void *)uint64_t v33 = MEMORY[0x1E4F143A8];
          uint64_t v34 = 3221225472;
          uint64_t v35 = (uint64_t)__36__GEOSystemMonitor__systemCanSleep___block_invoke_11;
          char v36 = &unk_1E53F6348;
          int v13 = v11;
          char v37 = v13;
          char v38 = v39;
          [v12 enumerateObserversWithGroup:v13 visitor:v33];
          int v14 = v8[1];
          blocuint64_t k = MEMORY[0x1E4F143A8];
          p_blocuint64_t k = 3221225472;
          uint64_t v53 = (uint64_t)__36__GEOSystemMonitor__systemCanSleep___block_invoke_3;
          unsigned int v54 = &unk_1E53DBFB0;
          uint64_t v55 = v9;
          unint64_t v56 = v39;
          dispatch_group_notify(v13, v14, &block);

          _Block_object_dispose(v39, 8);
        }
        else
        {
          v30((uint64_t)v9, 1);
        }
        _Block_object_dispose(&v41, 8);
      }

      break;
  }
}

void sub_18A1369A8(_Unwind_Exception *a1, int a2)
{
  _Block_object_dispose((const void *)(v2 - 144), 8);
  if (a2 == 1)
  {
    id v5 = objc_begin_catch(a1);
    char v6 = GEOGetSystemMonitorLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)(v2 - 144) = 138543362;
      *(void *)(v2 - 140) = v5;
      _os_log_impl(&dword_188D96000, v6, OS_LOG_TYPE_FAULT, "Exception raised during system sleep callback: %{public}@", (uint8_t *)(v2 - 144), 0xCu);
    }

    objc_end_catch();
    JUMPOUT(0x18A136964);
  }
  _Unwind_Resume(a1);
}

void sub_18A1373D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18A1378C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18A137A94(_Unwind_Exception *a1)
{
}

void sub_18A137AFC(_Unwind_Exception *a1)
{
}

void sub_18A137CDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_18A13803C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 96), 8);
  _Unwind_Resume(a1);
}

void __GEOGetSystemMonitorLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "SystemMonitor");
  char v1 = (void *)qword_1EB2A0810;
  qword_1EB2A0810 = (uint64_t)v0;
}

void sub_18A13881C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A1388A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A138A1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A138B68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A138C38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id GEOAssetURLForScaleFactor(void *a1, double a2)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v3 = a1;
  id v4 = (void *)[v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v4)
  {
    id v5 = 0;
    uint64_t v6 = *(void *)v16;
    while (2)
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v16 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v15 + 1) + 8 * i);
        if (objc_msgSend(v8, "hasScaleFactor", (void)v15) && objc_msgSend(v8, "hasUrl"))
        {
          if (a2 == 3.0 && [v8 scaleFactor] == 3
            || a2 == 2.0 && [v8 scaleFactor] == 2)
          {
            id v12 = objc_alloc(MEMORY[0x1E4F1CB10]);
            uint64_t v13 = [v8 url];
            id v4 = (void *)[v12 initWithString:v13];

            dispatch_group_t v11 = v3;
            goto LABEL_19;
          }
          if ([v8 scaleFactor] == 1)
          {
            id v9 = v8;

            id v5 = v9;
          }
        }
      }
      id v4 = (void *)[v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
      if (v4) {
        continue;
      }
      break;
    }

    if (v5)
    {
      id v10 = objc_alloc(MEMORY[0x1E4F1CB10]);
      dispatch_group_t v11 = [v5 url];
      id v4 = (void *)[v10 initWithString:v11];
LABEL_19:

      goto LABEL_21;
    }
    id v4 = 0;
  }
  else
  {
    id v5 = v3;
LABEL_21:
  }

  return v4;
}

uint64_t _geoHasOperatingHours(void *a1, void *a2, void *a3)
{
  uint64_t v59 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v53 = a2;
  id v6 = a3;
  if ([v5 count])
  {
    id v7 = objc_alloc(MEMORY[0x1E4F1C9A8]);
    id v8 = (void *)[v7 initWithCalendarIdentifier:*MEMORY[0x1E4F1C318]];
    id v9 = v8;
    if (v6)
    {
      id v10 = [v8 timeZone];
      char v11 = [v6 isEqualToTimeZone:v10];

      if ((v11 & 1) == 0) {
        [v9 setTimeZone:v6];
      }
    }
    uint64_t v12 = [v9 ordinalityOfUnit:512 inUnit:4096 forDate:v53];
    uint64_t v13 = v12 - 1;
    long long v56 = 0u;
    long long v57 = 0u;
    if (v12 == 1) {
      uint64_t v13 = 7;
    }
    uint64_t v52 = v13;
    long long v54 = 0uLL;
    long long v55 = 0uLL;
    id v14 = v5;
    uint64_t v15 = [v14 countByEnumeratingWithState:&v54 objects:v58 count:16];
    if (v15)
    {
      uint64_t v44 = v15;
      uint64_t v45 = v9;
      id v46 = v6;
      id v47 = v5;
      uint64_t v50 = 0;
      unint64_t v51 = 0;
      uint64_t v49 = *(void *)v55;
      do
      {
        for (uint64_t i = 0; i != v44; ++i)
        {
          if (*(void *)v55 != v49) {
            objc_enumerationMutation(v14);
          }
          long long v17 = *(void **)(*((void *)&v54 + 1) + 8 * i);
          uint64_t v18 = objc_msgSend(v17, "timeRangesCount", v44);
          uint64_t v19 = [v17 timeRanges];
          unint64_t v20 = 0;
          uint64_t v21 = v19 + 12 * v18;
          dispatch_group_t v22 = (_DWORD *)(v21 - 12);
          char v48 = (_DWORD *)(v21 - 8);
          while (v20 < [v17 daysCount])
          {
            uint64_t v23 = *(int *)([v17 days] + 4 * v20);
            if (v23) {
              BOOL v24 = v12 == v23;
            }
            else {
              BOOL v24 = 1;
            }
            if (v24)
            {
              int v25 = (_DWORD *)(v19 + 4);
              uint64_t v26 = v18;
              if (v18)
              {
                do
                {
                  if (v19)
                  {
                    int v27 = *(v25 - 1);
                    BOOL v28 = *v25 == 86400 && v27 == 0;
                    if (v28 || v27 != 0)
                    {

                      id v6 = v46;
                      id v5 = v47;
                      id v9 = v45;
                      goto LABEL_58;
                    }
                  }
                  v25 += 3;
                  --v26;
                }
                while (v26);
                uint64_t v50 = v22;
              }
            }
            else if (v52 == v23 && v18 != 0 && v19 != 0)
            {
              uint64_t v32 = v51;
              if (*v48 == 86400) {
                uint64_t v32 = v22;
              }
              unint64_t v51 = v32;
            }
            ++v20;
          }
        }
        uint64_t v44 = [v14 countByEnumeratingWithState:&v54 objects:v58 count:16];
      }
      while (v44);

      id v6 = v46;
      id v5 = v47;
      id v9 = v45;
      if (v50)
      {
        if (!v51)
        {
          uint64_t v42 = 1;
          id v6 = v46;
          id v5 = v47;
          id v9 = v45;
          goto LABEL_62;
        }
        int v33 = v50[1];
        int v34 = *v51;
        id v6 = v46;
        id v5 = v47;
        id v9 = v45;
        if (v33 == 86400 && !v34) {
          goto LABEL_67;
        }
        int v35 = v51[1];
        BOOL v36 = !*v50 && v35 == 86400;
        BOOL v37 = v36;
        if (v33 == v34 || *v50 == v35 || v37)
        {
LABEL_67:
          char v38 = objc_msgSend(v45, "startOfDayForDate:", v53, 0);
          [v53 timeIntervalSinceDate:v38];
          double v40 = v39;

          id v6 = v46;
          id v5 = v47;
          id v9 = v45;
          LODWORD(v4objc_destroyWeak(this + 1) = v50[1];
          if (v40 < (double)v41)
          {
LABEL_58:
            uint64_t v42 = 1;
LABEL_62:

            goto LABEL_63;
          }
        }
      }
    }
    else
    {
    }
    uint64_t v42 = 0;
    goto LABEL_62;
  }
  uint64_t v42 = 0;
LABEL_63:

  return v42;
}

void sub_18A13B01C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void _geoNormalizedAndViewHourModelsForPDHours(void *a1, void *a2, void *a3, unsigned int a4, unsigned int a5, void *a6)
{
  uint64_t v139 = *MEMORY[0x1E4F143B8];
  id v9 = a1;
  id v97 = a2;
  id v96 = a3;
  uint64_t v98 = a6;
  if ([v9 count])
  {
    uint64_t v134 = (char *)&v134;
    uint64_t v135 = &v134;
    unint64_t v136 = 0;
    long long v130 = 0u;
    long long v131 = 0u;
    long long v132 = 0u;
    long long v133 = 0u;
    id obj = v9;
    uint64_t v10 = [obj countByEnumeratingWithState:&v130 objects:v138 count:16];
    if (v10)
    {
      uint64_t v100 = *(void *)v131;
      do
      {
        uint64_t v101 = v10;
        uint64_t v11 = 0;
        do
        {
          if (*(void *)v131 != v100) {
            objc_enumerationMutation(obj);
          }
          uint64_t v12 = *(void **)(*((void *)&v130 + 1) + 8 * v11);
          uint64_t v108 = [v12 daysCount];
          uint64_t v13 = [v12 timeRanges];
          if (v13) {
            uint64_t v14 = [v12 timeRangesCount];
          }
          else {
            uint64_t v14 = 0;
          }
          uint64_t v15 = [v12 hoursThreshold];
          long long v16 = (void *)v15;
          uint64_t v102 = v11;
          if (v15 && (*(unsigned char *)(v15 + 24) & 1) != 0)
          {
            uint64_t v18 = [v12 hoursThreshold];
            if (v18) {
              unsigned int v17 = v18[4];
            }
            else {
              unsigned int v17 = 0;
            }
          }
          else
          {
            unsigned int v17 = 0;
          }

          uint64_t v19 = [v12 hoursThreshold];
          unint64_t v20 = (void *)v19;
          if (v19 && (*(unsigned char *)(v19 + 24) & 2) != 0)
          {
            dispatch_group_t v22 = [v12 hoursThreshold];
            if (v22) {
              unsigned int v21 = v22[5];
            }
            else {
              unsigned int v21 = 0;
            }
          }
          else
          {
            unsigned int v21 = 0;
          }

          if (a4 <= 1) {
            unsigned int v23 = v21;
          }
          else {
            unsigned int v23 = a4;
          }
          unsigned int v24 = a5;
          if (a5 <= 1) {
            unsigned int v24 = v17;
          }
          if (v108)
          {
            uint64_t v25 = 0;
            double v26 = (double)v23;
            double v27 = (double)v24;
            char v106 = v12;
            do
            {
              uint64_t v28 = [v12 days];
              if (v14)
              {
                uint64_t v29 = 0;
                int v30 = *(_DWORD *)(v28 + 4 * v25);
                unint64_t v31 = v136;
                uint64_t v32 = v134;
                do
                {
                  int v33 = (int32x2_t *)(v13 + 12 * v29);
                  __int32 v34 = v33[1].i32[0];
                  int8x8_t v35 = vbsl_s8((int8x8_t)vceq_s32(*v33, (int32x2_t)86400), (int8x8_t)0x1518000000000, (int8x8_t)*v33);
                  if (v30)
                  {
                    BOOL v36 = (char *)operator new(0x30uLL);
                    *((_DWORD *)v36 + 4) = v30;
                    *(int8x8_t *)(v36 + 20) = v35;
                    *((_DWORD *)v36 + 7) = v34;
                    *((double *)v36 + 4) = v27;
                    *((double *)v36 + 5) = v26;
                    *(void *)BOOL v36 = v32;
                    *((void *)v36 + objc_destroyWeak(this + 1) = &v134;
                    *((void *)v32 + objc_destroyWeak(this + 1) = v36;
                    ++v31;
                    uint64_t v134 = v36;
                    unint64_t v136 = v31;
                  }
                  else
                  {
                    uint64_t v37 = 0;
                    do
                    {
                      BOOL v36 = (char *)operator new(0x30uLL);
                      uint64_t v38 = v37 + 1;
                      *((_DWORD *)v36 + 4) = v37 + 1;
                      *(int8x8_t *)(v36 + 20) = v35;
                      *((_DWORD *)v36 + 7) = v34;
                      *((double *)v36 + 4) = v27;
                      *((double *)v36 + 5) = v26;
                      *(void *)BOOL v36 = v32;
                      *((void *)v36 + objc_destroyWeak(this + 1) = &v134;
                      *((void *)v32 + objc_destroyWeak(this + 1) = v36;
                      uint64_t v39 = v31 + v37 + 1;
                      uint64_t v37 = v38;
                      uint64_t v134 = v36;
                      unint64_t v136 = v39;
                      uint64_t v32 = v36;
                    }
                    while (v38 != 7);
                    v31 += v38;
                  }
                  ++v29;
                  uint64_t v32 = v36;
                }
                while (v29 != v14);
              }
              ++v25;
              uint64_t v12 = v106;
            }
            while (v25 != v108);
          }
          uint64_t v11 = v102 + 1;
        }
        while (v102 + 1 != v101);
        uint64_t v10 = [obj countByEnumeratingWithState:&v130 objects:v138 count:16];
      }
      while (v10);
    }

    if (v136)
    {
      std::list<_geoNormalizedAndViewHourModelsForPDHours::DenormalizedTimeRange>::__sort<_geoNormalizedAndViewHourModelsForPDHours::$_0>((uint64_t)v135, (uint64_t)&v134, v136);
      for (uint64_t i = 0; i != 256; i += 32)
      {
        unint64_t v41 = &v137[i];
        *(void *)unint64_t v41 = v41;
        *((void *)v41 + objc_destroyWeak(this + 1) = v41;
        *((void *)v41 + 2) = 0;
        *((_WORD *)v41 + 12) = 0;
      }
      uint64_t v42 = (uint64_t)v135;
      double v43 = 0.0;
      double v44 = 0.0;
      if (v135 != &v134)
      {
        uint64_t v45 = (uint64_t)v135;
        do
        {
          if (v44 <= *(double *)(v45 + 40)) {
            double v44 = *(double *)(v45 + 40);
          }
          if (v43 <= *(double *)(v45 + 32)) {
            double v43 = *(double *)(v45 + 32);
          }
          uint64_t v45 = *(void *)(v45 + 8);
        }
        while ((char **)v45 != &v134);
        do
        {
          uint64_t v46 = *(int *)(v42 + 16);
          id v47 = operator new(0x20uLL);
          char v48 = (uint64_t *)&v137[32 * v46];
          uint64_t v49 = *(void *)(v42 + 20);
          v47[6] = *(_DWORD *)(v42 + 28);
          *((void *)v47 + objc_destroyWeak(this + 1) = v48;
          *((void *)v47 + 2) = v49;
          uint64_t v50 = *v48;
          *(void *)id v47 = *v48;
          *(void *)(v50 + 8) = v47;
          *char v48 = (uint64_t)v47;
          ++v48[2];
          unsigned int v51 = *(_DWORD *)(v42 + 20);
          unsigned int v52 = *(_DWORD *)(v42 + 24);
          if (__PAIR64__(v52, v51) != 0x1518000000000)
          {
            if (v52 == 86400) {
              v137[32 * *(int *)(v42 + 16) + 24] = 1;
            }
            if (!v51) {
              v137[32 * *(int *)(v42 + 16) + 25] = 1;
            }
          }
          uint64_t v42 = *(void *)(v42 + 8);
        }
        while ((char **)v42 != &v134);
      }
      id v53 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:8];
      for (uint64_t j = 1; j != 8; ++j)
      {
        std::list<GEOPDLocalTimeRange>::list(&v122, (uint64_t)&v137[32 * j]);
        LOWORD(v125) = *(_WORD *)&v137[32 * j + 24];
        long long v55 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:v124];
        for (uint64_t k = v123; k != &v122; uint64_t k = (uint64_t *)k[1])
        {
          uint64_t v111 = k[2];
          int v112 = *((_DWORD *)k + 6);
          long long v57 = [[GEOLocalTimeInterval alloc] initWithLocalTimeRange:&v111];
          [v55 addObject:v57];
        }
        int v58 = +[GEOPlaceDailyNormalizedHours dailyNormalizedHoursForWeekday:j timeIntervals:v55 closingThreshold:v125 openingThreshold:BYTE1(v125) openToMidnight:v43 openFromMidnight:v44];
        [v53 addObject:v58];

        std::__list_imp<std::__list_iterator<LoadItem,void *>>::clear(&v122);
      }
      uint64_t v59 = 0;
      uint64_t v60 = 2;
      do
      {
        int v61 = &v137[v59];
        if (v137[v59 + 56])
        {
          uint64_t v62 = v59 == 192 ? 1 : v60;
          char v63 = &v137[32 * v62];
          if (v63[25])
          {
            uint64_t v64 = *((void *)v63 + 1);
            char v65 = operator new(0x20uLL);
            uint64_t v66 = *(void *)(v64 + 16);
            v65[6] = *(_DWORD *)(v64 + 24);
            *((void *)v65 + objc_destroyWeak(this + 1) = v61 + 32;
            *((void *)v65 + 2) = v66;
            uint64_t v67 = *((void *)v61 + 4);
            *(void *)char v65 = v67;
            *(void *)(v67 + 8) = v65;
            *((void *)v61 + 4) = v65;
            ++*(void *)&v137[v59 + 48];
            char v68 = (uint64_t *)*((void *)v63 + 1);
            uint64_t v69 = *v68;
            *(void *)(v69 + 8) = v68[1];
            *(void *)v68[1] = v69;
            --*((void *)v63 + 2);
            operator delete(v68);
          }
        }
        v59 += 32;
        ++v60;
      }
      while (v59 != 224);
      id v70 = objc_alloc(MEMORY[0x1E4F1C9A8]);
      uint64_t v71 = (void *)[v70 initWithCalendarIdentifier:*MEMORY[0x1E4F1C318]];
      unint64_t v72 = v71;
      if (v96)
      {
        char v73 = [v71 timeZone];
        char v74 = [v96 isEqualToTimeZone:v73];

        if ((v74 & 1) == 0) {
          [v72 setTimeZone:v96];
        }
      }
      unsigned int v75 = [v72 components:540 fromDate:v97];
      int v76 = [v75 weekday];
      unint64_t v77 = [v72 startOfDayForDate:v97];
      [v97 timeIntervalSinceDate:v77];
      uint64_t v79 = v78;
      uint64_t v103 = [MEMORY[0x1E4F1CA48] array];
      unsigned int v80 = [MEMORY[0x1E4F1C9A8] currentCalendar];
      uint64_t v81 = [v80 firstWeekday];

      uint64_t v122 = 0;
      unint64_t v123 = &v122;
      uint64_t v124 = 0x4012000000;
      uint64_t v125 = __Block_byref_object_copy__102;
      char v126 = __Block_byref_object_dispose__102;
      char v127 = "";
      uint64_t v128 = v81;
      uint64_t v129 = 1;
      v114[0] = MEMORY[0x1E4F143A8];
      v114[1] = 3221225472;
      v114[2] = ___geoNormalizedAndViewHourModelsForPDHours_block_invoke;
      v114[3] = &unk_1E53F6428;
      char v119 = &v122;
      id v107 = v72;
      id v115 = v107;
      id v116 = v97;
      int v121 = v76;
      uint64_t v120 = v79;
      id v82 = v75;
      id v117 = v82;
      id v83 = v103;
      id v118 = v83;
      char v84 = (void (**)(void, void, void, void))MEMORY[0x18C120660](v114);
      uint64_t v85 = 6;
      do
      {
        char v86 = v81 + 1;
        if ((((_BYTE)v81 + 1) & 7u) <= 1uLL) {
          uint64_t v81 = 1;
        }
        else {
          uint64_t v81 = v86 & 7;
        }
        if ((v86 & 7) != 0) {
          uint64_t v87 = (v86 & 7) - 1;
        }
        else {
          uint64_t v87 = 7;
        }
        char v88 = &v137[32 * v87];
        std::list<GEOPDLocalTimeRange>::list(&v111, (uint64_t)v88);
        __int16 v113 = *((_WORD *)v88 + 12);
        std::list<GEOPDLocalTimeRange>::list(v109, (uint64_t)&v137[32 * v81]);
        __int16 v110 = *(_WORD *)&v137[32 * v81 + 24];
        ((void (**)(void, uint64_t, uint64_t *, void *))v84)[2](v84, v81, &v111, v109);
        std::__list_imp<std::__list_iterator<LoadItem,void *>>::clear(v109);
        std::__list_imp<std::__list_iterator<LoadItem,void *>>::clear(&v111);
        --v85;
      }
      while (v85);
      ((void (**)(void, void, unsigned char *, unsigned char *))v84)[2](v84, 0, &v137[32 * v81], v137);
      char v89 = (void *)[v83 copy];
      unsigned int v90 = (void *)[v53 copy];
      v98[2](v98, v89, v90);

      _Block_object_dispose(&v122, 8);
      for (uint64_t m = 224; m != -32; m -= 32)
        std::__list_imp<std::__list_iterator<LoadItem,void *>>::clear(&v137[m]);
    }
    else
    {
      ((void (*)(void (**)(id, void *, void *), void))v98[2])(v98, 0);
    }
    if (v136)
    {
      unint64_t v93 = v134;
      uint64_t v92 = v135;
      char v94 = *v135;
      *((void *)v94 + objc_destroyWeak(this + 1) = *((void *)v134 + 1);
      **((void **)v93 + objc_destroyWeak(this + 1) = v94;
      unint64_t v136 = 0;
      if (v92 != &v134)
      {
        do
        {
          char v95 = (char **)v92[1];
          operator delete(v92);
          uint64_t v92 = v95;
        }
        while (v95 != &v134);
      }
    }
  }
  else
  {
    v98[2](v98, 0, 0);
  }
}

void sub_18A13BA60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t *a58,uint64_t a59)
{
  if (a59)
  {
    uint64_t v61 = a57;
    uint64_t v60 = a58;
    uint64_t v62 = *a58;
    *(void *)(v62 + 8) = *(void *)(a57 + 8);
    **(void **)(v61 + 8) = v62;
    a59 = 0;
    if (v60 != &a57)
    {
      do
      {
        char v63 = (uint64_t *)v60[1];
        operator delete(v60);
        uint64_t v60 = v63;
      }
      while (v63 != &a57);
    }
  }

  _Unwind_Resume(a1);
}

void ___geoNormalizedAndViewHourModelsForPDHours_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a3 + 16) != *(void *)(a4 + 16)) {
    goto LABEL_12;
  }
  uint64_t v6 = a4;
  uint64_t v7 = a3;
  while (1)
  {
    uint64_t v7 = *(void *)(v7 + 8);
    uint64_t v6 = *(void *)(v6 + 8);
    if (v7 == a3 || v6 == a4) {
      break;
    }
    if (*(_DWORD *)(v7 + 16) != *(_DWORD *)(v6 + 16) || *(_DWORD *)(v7 + 20) != *(_DWORD *)(v6 + 20)) {
      goto LABEL_12;
    }
  }
  if (a2)
  {
    ++*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 56);
  }
  else
  {
LABEL_12:
    objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:");
    id v29 = (id)objc_claimAutoreleasedReturnValue();
    for (uint64_t i = *(void *)(a3 + 8); i != a3; uint64_t i = *(void *)(i + 8))
    {
      uint64_t v10 = objc_msgSend(*(id *)(a1 + 32), "components:fromDate:", 28, *(void *)(a1 + 40), v29);
      objc_msgSend(v10, "setDay:", *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 48) - *(int *)(a1 + 80) + objc_msgSend(v10, "day"));
      unsigned int v11 = *(_DWORD *)(i + 16);
      id v12 = v10;
      [v12 setHour:v11 / 0xE10uLL];
      [v12 setMinute:v11 / 0x3C - 60 * (((143165577 * (unint64_t)(v11 / 0x3C)) >> 32) >> 1)];
      [v12 setSecond:v11 % 0x3C];

      if (*(_DWORD *)(i + 20) != 86400) {
        goto LABEL_16;
      }
      uint64_t v13 = *(void *)(i + 8);
      if (v13 == a3) {
        goto LABEL_16;
      }
      if (*(_DWORD *)(v13 + 16)) {
        goto LABEL_16;
      }
      unint64_t v20 = (void *)[v12 copy];
      unsigned int v21 = *(_DWORD *)(v13 + 20);
      id v16 = v20;
      [v16 setHour:v21 / 0xE10uLL];
      [v16 setMinute:v21 / 0x3C - 60 * (((143165577 * (unint64_t)(v21 / 0x3C)) >> 32) >> 1)];
      [v16 setSecond:v21 % 0x3C];

      objc_msgSend(v16, "setDay:", objc_msgSend(v16, "day") + 1);
      uint64_t i = *(void *)(i + 8);
      if (!v16)
      {
LABEL_16:
        uint64_t v14 = (void *)[v12 copy];
        unsigned int v15 = *(_DWORD *)(i + 20);
        id v16 = v14;
        [v16 setHour:v15 / 0xE10uLL];
        [v16 setMinute:v15 / 0x3C - 60 * (((143165577 * (unint64_t)(v15 / 0x3C)) >> 32) >> 1)];
        [v16 setSecond:v15 % 0x3C];
      }
      if (!a2
        && (*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 56)
          + *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 48))
         % 7uLL == *(_DWORD *)(a1 + 80))
      {
        uint64_t v18 = *(void *)(a3 + 8);
        if (v18 != a3)
        {
          double v19 = *(double *)(a1 + 72);
          while (1)
          {
            LODWORD(v17) = *(_DWORD *)(v18 + 16);
            double v17 = (double)*(unint64_t *)&v17;
            if (v19 >= v17)
            {
              LODWORD(v17) = *(_DWORD *)(v18 + 20);
              double v17 = (double)*(unint64_t *)&v17;
              if (v19 <= v17) {
                break;
              }
            }
            uint64_t v18 = *(void *)(v18 + 8);
            if (v18 == a3) {
              goto LABEL_29;
            }
          }
          uint64_t v22 = [*(id *)(a1 + 48) day];
          if (v22 == [v16 day] - 7)
          {
            objc_msgSend(v12, "setDay:", objc_msgSend(v12, "day") - 7);
            objc_msgSend(v16, "setDay:", objc_msgSend(v16, "day") - 7);
          }
        }
      }
LABEL_29:
      unsigned int v23 = [*(id *)(a1 + 32) dateFromComponents:v12];
      uint64_t v24 = [*(id *)(a1 + 32) dateFromComponents:v16];
      uint64_t v25 = (void *)v24;
      if (v23 && v24 && [v23 compare:v24] == -1)
      {
        double v26 = (void *)[objc_alloc(MEMORY[0x1E4F28C18]) initWithStartDate:v23 endDate:v25];
        [v29 addObject:v26];
      }
    }
    double v27 = +[GEOPlaceDailyHours dailyHours:forDays:](GEOPlaceDailyHours, "dailyHours:forDays:", v29, *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 48), *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 56), v29);
    if (v27) {
      [*(id *)(a1 + 56) addObject:v27];
    }
    uint64_t v28 = *(void *)(*(void *)(a1 + 64) + 8);
    *(void *)(v28 + 48) = a2;
    *(void *)(v28 + 56) = 1;
  }
}

void sub_18A13C0E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{
  _Unwind_Resume(a1);
}

BOOL GEOIsWeekDayInRange(unint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a1 >= a2 && a1 - a2 < a3) {
    return 1;
  }
  return a1 + 7 >= a2 && a1 + 7 - a2 < a3;
}

void *std::list<GEOPDLocalTimeRange>::list(void *a1, uint64_t a2)
{
  *a1 = a1;
  a1[1] = a1;
  a1[2] = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3 != a2)
  {
    uint64_t v5 = 1;
    uint64_t v6 = a1;
    do
    {
      uint64_t v7 = operator new(0x20uLL);
      uint64_t v8 = *(void *)(v3 + 16);
      v7[6] = *(_DWORD *)(v3 + 24);
      *((void *)v7 + objc_destroyWeak(this + 1) = a1;
      *((void *)v7 + 2) = v8;
      *(void *)uint64_t v7 = v6;
      *((void *)v6 + objc_destroyWeak(this + 1) = v7;
      *a1 = v7;
      a1[2] = v5;
      uint64_t v3 = *(void *)(v3 + 8);
      ++v5;
      uint64_t v6 = v7;
    }
    while (v3 != a2);
  }
  return a1;
}

void sub_18A13C220(_Unwind_Exception *a1)
{
  std::__list_imp<std::__list_iterator<LoadItem,void *>>::clear(v1);
  _Unwind_Resume(a1);
}

uint64_t std::list<_geoNormalizedAndViewHourModelsForPDHours::DenormalizedTimeRange>::__sort<_geoNormalizedAndViewHourModelsForPDHours::$_0>(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (a3 >= 2)
  {
    if (a3 == 2)
    {
      id v4 = *(uint64_t **)a2;
      if (*(_DWORD *)(*(void *)a2 + 20) < *(_DWORD *)(result + 20))
      {
        uint64_t v5 = *v4;
        *(void *)(v5 + 8) = v4[1];
        *(void *)v4[1] = v5;
        uint64_t v6 = *(void *)result;
        *(void *)(v6 + 8) = v4;
        uint64_t *v4 = v6;
        *(void *)double result = v4;
        v4[1] = result;
        return (uint64_t)v4;
      }
    }
    else
    {
      unint64_t v8 = a3 >> 1;
      unint64_t v9 = (a3 >> 1) + 1;
      uint64_t v10 = result;
      do
      {
        uint64_t v10 = *(void *)(v10 + 8);
        --v9;
      }
      while (v9 > 1);
      uint64_t v11 = std::list<_geoNormalizedAndViewHourModelsForPDHours::DenormalizedTimeRange>::__sort<_geoNormalizedAndViewHourModelsForPDHours::$_0>(result, v10, a3 >> 1);
      double result = std::list<_geoNormalizedAndViewHourModelsForPDHours::DenormalizedTimeRange>::__sort<_geoNormalizedAndViewHourModelsForPDHours::$_0>(v10, a2, a3 - v8);
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      if (*(_DWORD *)(result + 20) >= v12)
      {
        uint64_t v14 = *(uint64_t **)(v11 + 8);
        uint64_t i = result;
        double result = v11;
      }
      else
      {
        for (uint64_t i = *(void *)(result + 8); i != a2; uint64_t i = *(void *)(i + 8))
        {
          if (*(_DWORD *)(i + 20) >= v12) {
            goto LABEL_14;
          }
        }
        uint64_t i = a2;
LABEL_14:
        uint64_t v15 = *(void *)i;
        uint64_t v16 = *(void *)result;
        *(void *)(v16 + 8) = *(void *)(*(void *)i + 8);
        **(void **)(v15 + 8) = v16;
        uint64_t v17 = *(void *)v11;
        uint64_t v14 = *(uint64_t **)(v11 + 8);
        *(void *)(v17 + 8) = result;
        *(void *)double result = v17;
        *(void *)uint64_t v11 = v15;
        *(void *)(v15 + 8) = v11;
      }
      if (v14 != (uint64_t *)i && i != a2)
      {
        uint64_t v18 = i;
        do
        {
          unsigned int v19 = *((_DWORD *)v14 + 5);
          if (*(_DWORD *)(i + 20) >= v19)
          {
            uint64_t v14 = (uint64_t *)v14[1];
          }
          else
          {
            for (uint64_t j = *(void *)(i + 8); j != a2; uint64_t j = *(void *)(j + 8))
            {
              if (*(_DWORD *)(j + 20) >= v19) {
                goto LABEL_25;
              }
            }
            uint64_t j = a2;
LABEL_25:
            uint64_t v21 = *(void *)j;
            uint64_t v22 = *(void *)i;
            *(void *)(v22 + 8) = *(void *)(*(void *)j + 8);
            **(void **)(v21 + 8) = v22;
            if (v18 == i) {
              uint64_t v18 = j;
            }
            uint64_t v24 = *v14;
            unsigned int v23 = (uint64_t *)v14[1];
            *(void *)(v24 + 8) = i;
            *(void *)uint64_t i = v24;
            uint64_t *v14 = v21;
            *(void *)(v21 + 8) = v14;
            uint64_t v14 = v23;
            uint64_t i = j;
          }
        }
        while (v14 != (uint64_t *)v18 && i != a2);
      }
    }
  }
  return result;
}

void *__getAMSMediaArtworkCropStyleSquareCenterCropSymbolLoc_block_invoke_0(uint64_t a1)
{
  uint64_t v2 = (void *)AppleMediaServicesLibrary();
  double result = dlsym(v2, "AMSMediaArtworkCropStyleSquareCenterCrop");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  _MergedGlobals_342 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getAMSMediaArtworkFormatJPGSymbolLoc_block_invoke_0(uint64_t a1)
{
  uint64_t v2 = (void *)AppleMediaServicesLibrary();
  double result = dlsym(v2, "AMSMediaArtworkFormatJPG");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_1EB2A0828 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id _clearedPlaceRequestFromRequest(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 clientMetadata];
  if (([v2 hasDeviceExtendedLocation] & 1) != 0
    || ([v2 deviceHistoricalLocations],
        uint64_t v3 = objc_claimAutoreleasedReturnValue(),
        uint64_t v4 = [v3 count],
        v3,
        v4))
  {
    uint64_t v5 = (void *)[v1 copy];
    uint64_t v6 = [v5 clientMetadata];
    uint64_t v7 = (void *)[v6 copy];
    [v5 setClientMetadata:v7];

    unint64_t v8 = [v5 clientMetadata];
    [v8 clearLocations];

    if ([v5 hasPlaceRequestParameters])
    {
      unint64_t v9 = [v5 placeRequestParameters];
      uint64_t v10 = (void *)[v9 copy];
      [v5 setPlaceRequestParameters:v10];

      uint64_t v11 = [v5 placeRequestParameters];
      [v11 clearLocations];
    }
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

void *_clearedPlaceResponseFromResponse(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 globalResult];
  uint64_t v3 = -[GEOPDPlaceGlobalResult searchResult](v2);
  uint64_t v4 = (void *)v3;
  if (!v3)
  {
    unint64_t v8 = 0;
    goto LABEL_4;
  }
  -[GEOPDSearchResult _readClientResolvedResult](v3);
  uint64_t v5 = v4[4];

  if (v5)
  {
    uint64_t v4 = (void *)[v1 copy];
    uint64_t v6 = [v1 globalResult];
    uint64_t v7 = (void *)[v6 copy];
    [v4 setGlobalResult:v7];

    uint64_t v2 = [v4 globalResult];
    unint64_t v8 = -[GEOPDPlaceGlobalResult searchResult](v2);
    -[GEOPDSearchResult setClientResolvedResult:]((uint64_t)v8, 0);
LABEL_4:

    goto LABEL_6;
  }
  uint64_t v4 = 0;
LABEL_6:

  return v4;
}

uint64_t _GEOSQLiteVirtualTableCreate(sqlite3 *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7 = NSString;
  id v8 = a2;
  unint64_t v9 = [v8 name];
  uint64_t v10 = [v8 columnDefinitions];
  uint64_t v11 = [v7 stringWithFormat:@"CREATE TABLE %@ (%@)", v9, v10];

  id v12 = v11;
  uint64_t v13 = sqlite3_declare_vtab(a1, (const char *)[v12 UTF8String]);
  if (!v13)
  {
    uint64_t v14 = malloc_type_malloc(0x20uLL, 0x10F0040FD5E28DBuLL);
    void *v14 = 0;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v8;
    *a5 = v14;
  }

  return v13;
}

uint64_t _GEOSQLiteVirtualTableBestIndex()
{
  return 0;
}

uint64_t _GEOSQLiteVirtualTableDestroy(void *a1)
{
  return 0;
}

uint64_t _GEOSQLiteVirtualTableOpen(uint64_t a1, void *a2)
{
  uint64_t v4 = malloc_type_malloc(0x10uLL, 0x1020040EDED9539uLL);
  *(void *)uint64_t v4 = 0;
  v4[2] = 0;
  v4[3] = [*(id *)(a1 + 24) rowCount];
  *a2 = v4;
  return 0;
}

uint64_t _GEOSQLiteVirtualTableClose(void *a1)
{
  return 0;
}

uint64_t _GEOSQLiteVirtualTableFilter(uint64_t a1)
{
  *(_DWORD *)(a1 + 8) = 0;
  return 0;
}

uint64_t _GEOSQLiteVirtualTableNext(uint64_t a1)
{
  return 0;
}

BOOL _GEOSQLiteVirtualTableEOF(uint64_t a1)
{
  return *(_DWORD *)(a1 + 8) >= *(_DWORD *)(a1 + 12);
}

uint64_t _GEOSQLiteVirtualTableColumn(unsigned int *a1, uint64_t a2, int a3)
{
  return 0;
}

uint64_t _GEOSQLiteVirtualTableRowID(uint64_t a1, void *a2)
{
  *a2 = *(unsigned int *)(a1 + 8);
  return 0;
}

uint64_t _GEOSQLiteVirtualTableRename()
{
  return 0;
}

id GEOGetCompanionExtrasLog_0()
{
  if (qword_1EB2A0838 != -1) {
    dispatch_once(&qword_1EB2A0838, &__block_literal_global_210);
  }
  os_log_t v0 = (void *)_MergedGlobals_343;

  return v0;
}

void __GEOGetCompanionExtrasLog_block_invoke_0()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "CompanionExtras");
  id v1 = (void *)_MergedGlobals_343;
  _MergedGlobals_343 = (uint64_t)v0;
}

void sub_18A144B78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDisplayDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 84)), (uint16x4_t)0xFFFAFFFCFFF9FFFDLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 84) >> 5) & 1)+ ((*(_WORD *)(a1 + 84) >> 2) & 1));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 3;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v65 = v18;
        char v66 = v19 | v18;
        if ((v19 | v9)) {
          unint64_t v20 = 0;
        }
        else {
          unint64_t v20 = a3;
        }
        char v67 = (v20 == 0) | v19;
        BOOL v68 = v19;
        uint64_t v21 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_109;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      unint64_t v28 = *(void *)(v3 + v27);
      if (v28 == -1 || v28 >= *(void *)(v3 + *v7)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v28 + 1;
      v26 |= (unint64_t)(v29 & 0x7F) << v24;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v30 = v25++ >= 9;
      if (v30)
      {
        unint64_t v26 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v31 || (v26 & 7) == 4)
    {
LABEL_109:
      int v63 = 1;
      goto LABEL_110;
    }
    unint64_t v33 = v26 >> 3;
    BOOL v34 = v68;
    if ((v67 & 1) == 0)
    {
      int8x8_t v35 = v20;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v9 & 1) == 0) {
          goto LABEL_87;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(_WORD *)(a1 + 84) |= 1u;
        while (1)
        {
          uint64_t v42 = *v21;
          unint64_t v43 = *(void *)(v3 + v42);
          if (v43 == -1 || v43 >= *(void *)(v3 + *v7)) {
            break;
          }
          char v44 = *(unsigned char *)(*(void *)(v3 + *v23) + v43);
          *(void *)(v3 + v42) = v43 + 1;
          v41 |= (unint64_t)(v44 & 0x7F) << v39;
          if ((v44 & 0x80) == 0) {
            goto LABEL_90;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v4objc_destroyWeak(this + 1) = 0;
            goto LABEL_92;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_90:
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v4objc_destroyWeak(this + 1) = 0;
        }
LABEL_92:
        uint64_t v57 = 76;
        goto LABEL_97;
      case 2:
        if (!v34) {
          goto LABEL_87;
        }
        if ((*(_WORD *)(a1 + 84) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_129;
          }
          __int16 v58 = *(_WORD *)(a1 + 84) << 8;
          goto LABEL_106;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_129;
        }
        char v48 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1)) {
          goto LABEL_128;
        }
        PBReaderRecallMark();
        uint64_t v49 = 56;
        goto LABEL_86;
      case 3:
        if (!v34) {
          goto LABEL_87;
        }
        if ((*(_WORD *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_129;
          }
          __int16 v58 = *(_WORD *)(a1 + 84) << 12;
          goto LABEL_106;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_129;
        }
        char v48 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1)) {
          goto LABEL_128;
        }
        PBReaderRecallMark();
        uint64_t v49 = 24;
        goto LABEL_86;
      case 4:
        if (!v34) {
          goto LABEL_87;
        }
        if ((*(_WORD *)(a1 + 84) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_129;
          }
          __int16 v58 = *(_WORD *)(a1 + 84) << 11;
          goto LABEL_106;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_129;
        }
        char v48 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v48, (void *)v3)) {
          goto LABEL_128;
        }
        PBReaderRecallMark();
        uint64_t v49 = 32;
        goto LABEL_86;
      case 5:
        if ((v9 & 1) == 0) {
          goto LABEL_87;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v41 = 0;
        *(_WORD *)(a1 + 84) |= 2u;
        while (2)
        {
          uint64_t v52 = *v21;
          unint64_t v53 = *(void *)(v3 + v52);
          if (v53 == -1 || v53 >= *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v23) + v53);
            *(void *)(v3 + v52) = v53 + 1;
            v41 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              BOOL v30 = v51++ >= 9;
              if (v30)
              {
                LODWORD(v4objc_destroyWeak(this + 1) = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v4objc_destroyWeak(this + 1) = 0;
        }
LABEL_96:
        uint64_t v57 = 80;
LABEL_97:
        *(_DWORD *)(a1 + v57) = v41;
        goto LABEL_108;
      case 6:
        if (!v34 || (*(_WORD *)(a1 + 84) & 0x40) != 0) {
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_129;
        }
        char v48 = objc_alloc_init(GEOPDPlace);
        if (!GEOPDPlaceReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1)) {
          goto LABEL_128;
        }
        PBReaderRecallMark();
        -[GEORPDisplayDetails _addNoFlagsPlace:](a1, v48);

        goto LABEL_107;
      case 7:
        if (!v34) {
          goto LABEL_87;
        }
        if ((*(_WORD *)(a1 + 84) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_129;
          }
          __int16 v58 = *(_WORD *)(a1 + 84) << 10;
LABEL_106:
          v8 += v58 >> 15;
LABEL_107:
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_108:
          if (!(v66 & 1 | (v8 != 0))) {
            goto LABEL_109;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_129;
        }
        char v48 = objc_alloc_init(GEOTextLink);
        if (GEOTextLinkReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v49 = 40;
LABEL_86:
          long long v55 = *(void **)(a1 + v49);
          *(void *)(a1 + v49) = v48;

          --v8;
          goto LABEL_107;
        }
LABEL_128:

LABEL_129:
        int v63 = 0;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_110:
        uint64_t v64 = &OBJC_IVAR___GEOLocalizedBytes__unknownFields;
        if (v65) {
LABEL_111:
        }
          *(_WORD *)(a1 + v64[1008]) |= 4u;
        if (v68 || (v63 & 1) == 0)
        {
          *(_WORD *)(a1 + v64[1008]) |= 0x80u;
          *(_WORD *)(a1 + v64[1008]) |= 8u;
          *(_WORD *)(a1 + v64[1008]) |= 0x10u;
          *(_WORD *)(a1 + v64[1008]) |= 0x40u;
          *(_WORD *)(a1 + v64[1008]) |= 0x20u;
        }
        else if (v20)
        {
          while (1)
          {
            int v60 = *v20++;
            __int16 v59 = 128;
            switch(v60)
            {
              case 0:
                goto LABEL_122;
              case 2:
                goto LABEL_120;
              case 3:
                __int16 v59 = 8;
                goto LABEL_120;
              case 4:
                __int16 v59 = 16;
                goto LABEL_120;
              case 6:
                __int16 v59 = 64;
                goto LABEL_120;
              case 7:
                __int16 v59 = 32;
LABEL_120:
                *(_WORD *)(a1 + v64[1008]) |= v59;
                break;
              default:
                continue;
            }
          }
        }
LABEL_122:
        if (v63) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v68)
        {
          uint64_t v61 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v65 & 1) == 0 || (*(_WORD *)(a1 + 84) & 4) != 0)
        {
LABEL_87:
          char v56 = PBReaderSkipValueWithTag();
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v56 & 1) == 0)
          {
            int v63 = 0;
            goto LABEL_110;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v45 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v46 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v45;
          }
          int v47 = PBUnknownFieldAdd();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v47)
          {
            int v63 = 0;
            uint64_t v64 = &OBJC_IVAR___GEOLocalizedBytes__unknownFields;
            goto LABEL_111;
          }
        }
        goto LABEL_108;
    }
  }
}

void sub_18A145650(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1457C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A145B20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A145EE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A146C30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPDisplayDetailsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  [a1[7] readAll:1];
  [a1[3] readAll:1];
  [a1[4] readAll:1];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v2 = a1[6];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  return [a1[5] readAll:1];
}

unint64_t GEORPDisplayDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPDisplayDetailsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORPDisplayDetailsReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORPDisplayDetailsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPDisplayDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPDisplayDetailsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18A146F10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDisplayDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPDisplayDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A146F74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDisplayDetailsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_53;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_53;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v22 = 0;
          break;
        case 6u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_53;
        case 7u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOTextLinkIsValid(a1)) {
            goto LABEL_57;
          }
LABEL_53:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v23 = *v2;
        unint64_t v24 = *(void *)&a1[v23];
        if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v25 = v24 + 1;
        int v26 = *(char *)(*(void *)&a1[*v5] + v24);
        *(void *)&a1[v23] = v25;
        if (v26 < 0)
        {
          BOOL v21 = v22++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_18A14758C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPDisplayDetailsIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  __int16 v2 = *(_WORD *)(a1 + 84);
  if ((v2 & 0x100) != 0) {
    return 1;
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEOLocalizedStringIsDirty(*(void *)(a1 + 56))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 84);
  }
  if ((v2 & 8) == 0) {
    goto LABEL_8;
  }
  if (GEOLocalizedStringIsDirty(*(void *)(a1 + 24))) {
    return 1;
  }
  __int16 v2 = *(_WORD *)(a1 + 84);
LABEL_8:
  if ((v2 & 0x50) != 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOTextLinkIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 84);
  }
  if ((v2 & 0x40) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 48);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_26;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_26:

  return v3;
}

os_unfair_lock_s *GEORPDisplayDetailsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPDisplayDetailsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A147D9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A148300(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackComponentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    long long v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          unint64_t v14 = *(void *)&v5[v13];
          if (v14 == -1 || v14 >= *(void *)&v5[*v7]) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v16 = v11++ >= 9;
          if (v16)
          {
            unint64_t v12 = 0;
            int v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v17 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v17 || (v12 & 7) == 4) {
          break;
        }
        unint64_t v19 = v12 >> 3;
        if ((v12 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_55;
          }
          int v26 = objc_alloc_init(GEORPFeedbackComponentValue);
          if (!GEORPFeedbackComponentValueReadAllFrom((uint64_t)v26, v5, a3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addValue:", v26, 0, 0);
        }
        else
        {
          if (v19 == 2)
          {
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (1)
            {
              uint64_t v29 = *v6;
              unint64_t v30 = *(void *)&v5[v29];
              if (v30 == -1 || v30 >= *(void *)&v5[*v7]) {
                break;
              }
              char v31 = *(unsigned char *)(*(void *)&v5[*v9] + v30);
              *(void *)&v5[v29] = v30 + 1;
              v22 |= (unint64_t)(v31 & 0x7F) << v27;
              if ((v31 & 0x80) == 0) {
                goto LABEL_48;
              }
              v27 += 7;
              BOOL v16 = v28++ >= 9;
              if (v16)
              {
                LODWORD(v22) = 0;
                goto LABEL_50;
              }
            }
            v5[*v8] = 1;
LABEL_48:
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_50:
            uint64_t v34 = 24;
            goto LABEL_51;
          }
          if (v19 == 1)
          {
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 32) |= 2u;
            while (1)
            {
              uint64_t v23 = *v6;
              unint64_t v24 = *(void *)&v5[v23];
              if (v24 == -1 || v24 >= *(void *)&v5[*v7]) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
              *(void *)&v5[v23] = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if ((v25 & 0x80) == 0) {
                goto LABEL_44;
              }
              v20 += 7;
              BOOL v16 = v21++ >= 9;
              if (v16)
              {
                LODWORD(v22) = 0;
                goto LABEL_46;
              }
            }
            v5[*v8] = 1;
LABEL_44:
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_46:
            uint64_t v34 = 28;
LABEL_51:
            *(_DWORD *)(a1 + v34) = v22;
            continue;
          }
          if (!*(void *)(a1 + 8))
          {
            id v32 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v33 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v32;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_55;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v35 = v5[*v8] == 0;
  }
  else
  {
LABEL_55:
    BOOL v35 = 0;
  }
  objc_sync_exit(v5);

  return v35;
}

void sub_18A149948(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackComponentReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackComponentReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A1499AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackComponentIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackComponentValueIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v16 == 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            unint64_t v25 = *(void *)&a1[v24];
            if (v25 == -1 || v25 >= *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            unint64_t v26 = v25 + 1;
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_43;
          }
        }
        if (v16 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            unint64_t v19 = *(void *)&a1[v18];
            if (v19 == -1 || v19 >= *(void *)&a1[*v3]) {
              break;
            }
            unint64_t v20 = v19 + 1;
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_46;
        }
      }
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEORPFeedbackComponentValueIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 == 2 && PBReaderPlaceMark() && GEORPFeedbackNotificationIsValid((unsigned __int8 *)a1)) {
            goto LABEL_48;
          }
          goto LABEL_51;
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackOverviewIsValid(a1)) {
            goto LABEL_51;
          }
          goto LABEL_48;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackConversationIsValid(a1)) {
            goto LABEL_51;
          }
          goto LABEL_48;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPPoiEnrichmentIsValid(a1)) {
            goto LABEL_51;
          }
          goto LABEL_48;
        case 5u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPRapInfoIsValid(a1)) {
            goto LABEL_51;
          }
          goto LABEL_48;
        case 6u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPThirdPartyPhotoSharingPreferenceIsValid(a1)) {
            goto LABEL_51;
          }
          goto LABEL_48;
        case 7u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPPhotoAttributionPreferencesIsValid(a1)) {
            goto LABEL_51;
          }
LABEL_48:
          PBReaderRecallMark();
          goto LABEL_49;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_51:
            PBReaderRecallMark();
            return 0;
          }
LABEL_49:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_50;
          }
          break;
      }
    }
  }
LABEL_50:
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_18A14AA88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackComponentQueryParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v10 | v9;
        unsigned __int8 v16 = v14 | v10;
        char v50 = v15;
        char v51 = v16 | v15;
        if ((v16 | v7)) {
          unsigned int v17 = 0;
        }
        else {
          unsigned int v17 = a3;
        }
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        char v52 = (v17 == 0) | v16;
        BOOL v53 = v16;
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v9;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_65;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_65:
      int v49 = 1;
      goto LABEL_66;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v53;
    if ((v52 & 1) == 0)
    {
      id v32 = v17;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 5) {
      break;
    }
    if (v30 == 4)
    {
      if (!v31) {
        goto LABEL_56;
      }
      if ((*(unsigned char *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_85;
        }
        int v36 = objc_alloc_init(GEORPPoiEnrichmentQueryParameters);
        if (!GEORPPoiEnrichmentQueryParametersReadAllFrom((uint64_t)v36, (void *)v3)) {
          goto LABEL_84;
        }
        PBReaderRecallMark();
        uint64_t v37 = 24;
LABEL_49:
        BOOL v38 = *(void **)(a1 + v37);
        *(void *)(a1 + v37) = v36;

        --v8;
LABEL_63:
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_64;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_85;
      }
      char v43 = *(unsigned char *)(a1 + 52) << 6;
LABEL_62:
      v8 += v43 >> 7;
      goto LABEL_63;
    }
    if (v50 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_56:
      char v42 = PBReaderSkipValueWithTag();
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if ((v42 & 1) == 0)
      {
        int v49 = 0;
        goto LABEL_66;
      }
      goto LABEL_64;
    }
    if (!*(void *)(a1 + 16))
    {
      id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      unsigned int v40 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v39;
    }
    int v41 = PBUnknownFieldAdd();
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if (!v41)
    {
      int v49 = 0;
      goto LABEL_67;
    }
LABEL_64:
    if (!(v51 & 1 | (v8 != 0))) {
      goto LABEL_65;
    }
  }
  if (!v31) {
    goto LABEL_56;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_85;
    }
    char v43 = 32 * *(unsigned char *)(a1 + 52);
    goto LABEL_62;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_85;
  }
  int v36 = objc_alloc_init(GEORPRapQueryParameters);
  if (GEORPRapQueryParametersReadAllFrom(v36, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v37 = 32;
    goto LABEL_49;
  }
LABEL_84:

LABEL_85:
  int v49 = 0;
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
  if ((v50 & 1) == 0) {
    goto LABEL_68;
  }
LABEL_67:
  *(unsigned char *)(a1 + 52) |= 1u;
LABEL_68:
  if (v53 || (v49 & 1) == 0)
  {
    *(unsigned char *)(a1 + 52) |= 2u;
    *(unsigned char *)(a1 + 52) |= 4u;
    goto LABEL_78;
  }
  if (v17)
  {
    while (1)
    {
      int v46 = *v17++;
      int v45 = v46;
      if (v46 == 4) {
        break;
      }
      if (v45 == 5)
      {
        char v44 = 4;
LABEL_74:
        *(unsigned char *)(a1 + 52) |= v44;
      }
      else if (!v45)
      {
        goto LABEL_78;
      }
    }
    char v44 = 2;
    goto LABEL_74;
  }
LABEL_78:
  if (v49) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v53)
  {
    int v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18A14B138(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A14B7B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackComponentQueryParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackComponentQueryParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackComponentQueryParametersReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackComponentQueryParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackComponentQueryParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18A14B968(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackComponentQueryParametersReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackComponentQueryParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A14B9CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackComponentQueryParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 5) {
        break;
      }
      if ((v8 >> 3) == 4)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPPoiEnrichmentQueryParametersIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEORPRapQueryParametersIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEORPPoiEnrichmentQueryParametersIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v16 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v16;
}

BOOL GEORPRapQueryParametersIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v16 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v16;
}

void sub_18A14C0BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackComponentQueryParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18A14C380(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A14C5FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A14C8C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackComponentValueReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v6 = 0;
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (*(_WORD *)(a1 + 92) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFFBFFFFFFFEFFFDLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 92) >> 6) & 1)+ ((*(_WORD *)(a1 + 92) >> 7) & 1)+ ((*(_WORD *)(a1 + 92) >> 4) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v15 = v11 > 4;
        char v16 = v15 & ~(_BYTE)v10 | v8;
        unsigned __int8 v17 = v15 | v10;
        char v51 = v16;
        char v52 = v17 | v16;
        if ((v17 | v7)) {
          uint64_t v18 = 0;
        }
        else {
          uint64_t v18 = a3;
        }
        char v53 = (v18 == 0) | v17;
        BOOL v54 = v17;
        unint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        char v21 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v8;
LABEL_8:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_10:
        ++v6;
        uint64_t v8 = v12;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    unsigned int v22 = (int *)MEMORY[0x1E4F940E0];
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) || *(unsigned char *)(v3 + *v20)) {
      goto LABEL_100;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v19;
      unint64_t v27 = *(void *)(v3 + v26);
      if (v27 == -1 || v27 >= *(void *)(v3 + *v22)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v21) + v27);
      *(void *)(v3 + v26) = v27 + 1;
      v25 |= (unint64_t)(v28 & 0x7F) << v23;
      if ((v28 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_25:
    int v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v30 || (v25 & 7) == 4)
    {
LABEL_100:
      int v50 = 1;
      goto LABEL_101;
    }
    unint64_t v32 = v25 >> 3;
    BOOL v33 = v54;
    if ((v53 & 1) == 0)
    {
      int v34 = v18;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 92) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_121;
          }
          BOOL v38 = objc_alloc_init(GEORPFeedbackNotification);
          if (GEORPFeedbackNotificationReadAllFrom((uint64_t)v38, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v39 = 32;
            goto LABEL_80;
          }
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_121;
        }
        __int16 v45 = *(_WORD *)(a1 + 92) << 13;
        goto LABEL_97;
      case 2:
        if (!v33) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 92) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_121;
          }
          __int16 v45 = *(_WORD *)(a1 + 92) << 12;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        BOOL v38 = objc_alloc_init(GEORPFeedbackOverview);
        if (!GEORPFeedbackOverviewReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1)) {
          goto LABEL_120;
        }
        PBReaderRecallMark();
        uint64_t v39 = 40;
        goto LABEL_80;
      case 3:
        if (!v33) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 92) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_121;
          }
          __int16 v45 = *(_WORD *)(a1 + 92) << 14;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        BOOL v38 = objc_alloc_init(GEORPFeedbackConversation);
        if (!GEORPFeedbackConversationReadAllFrom(v38, (void *)v3, v9 & 1)) {
          goto LABEL_120;
        }
        PBReaderRecallMark();
        uint64_t v39 = 24;
        goto LABEL_80;
      case 4:
        if (!v33) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 92) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_121;
          }
          __int16 v45 = *(_WORD *)(a1 + 92) << 10;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        BOOL v38 = objc_alloc_init(GEORPPoiEnrichment);
        if (!GEORPPoiEnrichmentReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1)) {
          goto LABEL_120;
        }
        PBReaderRecallMark();
        uint64_t v39 = 56;
        goto LABEL_80;
      case 5:
        if (!v33) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 92) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_121;
          }
          __int16 v45 = *(_WORD *)(a1 + 92) << 9;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        BOOL v38 = objc_alloc_init(GEORPRapInfo);
        if (!GEORPRapInfoReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1)) {
          goto LABEL_120;
        }
        PBReaderRecallMark();
        uint64_t v39 = 64;
        goto LABEL_80;
      case 6:
        if (!v33) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 92) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_121;
          }
          __int16 v45 = *(_WORD *)(a1 + 92) << 8;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        BOOL v38 = objc_alloc_init(GEORPThirdPartyPhotoSharingPreference);
        if (!GEORPThirdPartyPhotoSharingPreferenceReadAllFrom((uint64_t)v38, (void *)v3)) {
          goto LABEL_120;
        }
        PBReaderRecallMark();
        uint64_t v39 = 72;
        goto LABEL_80;
      case 7:
        if (!v33) {
          goto LABEL_81;
        }
        if ((*(_WORD *)(a1 + 92) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_121;
          }
          __int16 v45 = *(_WORD *)(a1 + 92) << 11;
LABEL_97:
          v6 += v45 >> 15;
LABEL_98:
          unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_99:
          if (!(v52 & 1 | (v6 != 0))) {
            goto LABEL_100;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_121;
        }
        BOOL v38 = objc_alloc_init(GEORPPhotoAttributionPreferences);
        if (GEORPPhotoAttributionPreferencesReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v39 = 48;
LABEL_80:
          char v43 = *(void **)(a1 + v39);
          *(void *)(a1 + v39) = v38;

          --v6;
          goto LABEL_98;
        }
LABEL_120:

LABEL_121:
        int v50 = 0;
        unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_101:
        if (v51) {
LABEL_102:
        }
          *(_WORD *)(a1 + 92) |= 1u;
        if (v54 || (v50 & 1) == 0)
        {
          *(_WORD *)(a1 + 92) |= 4u;
          *(_WORD *)(a1 + 92) |= 8u;
          *(_WORD *)(a1 + 92) |= 2u;
          *(_WORD *)(a1 + 92) |= 0x20u;
          *(_WORD *)(a1 + 92) |= 0x40u;
          *(_WORD *)(a1 + 92) |= 0x80u;
          *(_WORD *)(a1 + 92) |= 0x10u;
        }
        else if (v18)
        {
          while (1)
          {
            int v46 = *v18++;
            __int16 v47 = 4;
            switch(v46)
            {
              case 0:
                goto LABEL_114;
              case 1:
                goto LABEL_113;
              case 2:
                __int16 v47 = 8;
                goto LABEL_113;
              case 3:
                __int16 v47 = 2;
                goto LABEL_113;
              case 4:
                __int16 v47 = 32;
                goto LABEL_113;
              case 5:
                __int16 v47 = 64;
                goto LABEL_113;
              case 6:
                __int16 v47 = 128;
                goto LABEL_113;
              case 7:
                __int16 v47 = 16;
LABEL_113:
                *(_WORD *)(a1 + 92) |= v47;
                break;
              default:
                continue;
            }
          }
        }
LABEL_114:
        if (v50) {
          unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v54)
        {
          char v48 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v51 & 1) == 0 || (*(_WORD *)(a1 + 92))
        {
LABEL_81:
          char v44 = PBReaderSkipValueWithTag();
          unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
          if ((v44 & 1) == 0)
          {
            int v50 = 0;
            goto LABEL_101;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v41 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v40;
          }
          int v42 = PBUnknownFieldAdd();
          unint64_t v20 = (int *)MEMORY[0x1E4F940C8];
          if (!v42)
          {
            int v50 = 0;
            goto LABEL_102;
          }
        }
        goto LABEL_99;
    }
  }
}

void sub_18A14D360(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A14D4D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A14D640(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A14D7B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A14D920(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A14DA8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A14E4B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackComponentValueCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 56) readAll:1];
  [*(id *)(a1 + 64) readAll:1];
  [*(id *)(a1 + 72) readAll:1];
  BOOL v2 = *(void **)(a1 + 48);

  return [v2 readAll:1];
}

unint64_t GEORPFeedbackComponentValueReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackComponentValueReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackComponentValueReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackComponentValueReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackComponentValueReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPFeedbackComponentValueCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_18A14E6F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackComponentValueReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackComponentValueReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A14E75C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackNotificationIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  id v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)&a1[v10];
      if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v15 = 0;
      goto LABEL_22;
    }
  }
  BOOL v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEORPFeedbackOverviewIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_47;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_44;
          }
        case 2u:
          if (v14 == 2) {
            goto LABEL_43;
          }
          goto LABEL_47;
        case 3u:
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPTimestampIsValid(a1)) {
            goto LABEL_47;
          }
          PBReaderRecallMark();
          continue;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_47;
          }
          unsigned int v22 = 0;
          break;
        case 6u:
          if (v14 == 2) {
            goto LABEL_43;
          }
          goto LABEL_47;
        default:
LABEL_43:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_47:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v23 = *v2;
        unint64_t v24 = *(void *)&a1[v23];
        if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v25 = v24 + 1;
        int v26 = *(char *)(*(void *)&a1[*v5] + v24);
        *(void *)&a1[v23] = v25;
        if (v26 < 0)
        {
          BOOL v21 = v22++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_44;
      }
LABEL_41:
      a1[*v4] = 1;
LABEL_44:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEORPFeedbackConversationIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackConversationMessageIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEORPRapInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_42;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_43;
          }
        case 2u:
          if (v14 == 2) {
            goto LABEL_28;
          }
          goto LABEL_46;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPRapResponseIsValid(a1)) {
            goto LABEL_46;
          }
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v22 = 0;
          break;
        default:
LABEL_28:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v23 = *v2;
        unint64_t v24 = *(void *)&a1[v23];
        if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v25 = v24 + 1;
        int v26 = *(char *)(*(void *)&a1[*v5] + v24);
        *(void *)&a1[v23] = v25;
        if (v26 < 0)
        {
          BOOL v21 = v22++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_18A14F270(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPFeedbackComponentValueIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  __int16 v2 = *(_WORD *)(a1 + 92);
  if ((v2 & 0x104) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEORPFeedbackOverviewIsDirty(*(void *)(a1 + 40))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 92);
  }
  if ((v2 & 2) != 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEORPPoiEnrichmentIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 92);
  }
  if ((v2 & 0x40) == 0) {
    goto LABEL_13;
  }
  if (GEORPRapInfoIsDirty(*(os_unfair_lock_s **)(a1 + 64))) {
    return 1;
  }
  __int16 v2 = *(_WORD *)(a1 + 92);
LABEL_13:
  if ((v2 & 0x80) != 0) {
    return 1;
  }
  if ((v2 & 0x10) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 48);

  return GEORPPhotoAttributionPreferencesIsDirty(v4);
}

os_unfair_lock_s *GEORPFeedbackComponentValueIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEORPFeedbackComponentValueIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A14F76C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A14FBD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackConversationReadAllFrom(void *a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          unint64_t v14 = *(void *)&v5[v13];
          if (v14 == -1 || v14 >= *(void *)&v5[*v7]) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v17 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v17 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v19 = objc_alloc_init(GEORPFeedbackConversationMessage);
          if (!GEORPFeedbackConversationMessageReadAllFrom((uint64_t)v19, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addMessage:", v19, 0, 0);
        }
        else
        {
          if (!a1[1])
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v21 = (void *)a1[1];
            a1[1] = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v22 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v22 = 0;
  }
  objc_sync_exit(v5);

  return v22;
}

void sub_18A150684(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackConversationReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackConversationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A1506E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackConversationMessageIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2) {
            goto LABEL_38;
          }
          goto LABEL_30;
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPPostedByIsValid(a1)) {
            goto LABEL_38;
          }
          goto LABEL_35;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPTimestampIsValid(a1)) {
            goto LABEL_38;
          }
          goto LABEL_35;
        case 4u:
          if (v14 == 2) {
            goto LABEL_30;
          }
          goto LABEL_38;
        case 5u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackSurveyResponseIsValid(a1)) {
            goto LABEL_38;
          }
LABEL_35:
          PBReaderRecallMark();
          goto LABEL_36;
        default:
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_38:
            PBReaderRecallMark();
            return 0;
          }
LABEL_36:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_37;
          }
          break;
      }
    }
  }
LABEL_37:
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_18A1511B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackConversationMessageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 76)), (uint16x4_t)0xFFFFFFFEFFFBFFFDLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 76) & 1)+ ((*(unsigned char *)(a1 + 76) & 0x10) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v8)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        id v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_82;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      unint64_t v27 = *(void *)(v3 + v26);
      if (v27 == -1 || v27 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v27 + 1;
      v25 |= (unint64_t)(v28 & 0x7F) << v23;
      if ((v28 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
LABEL_25:
    int v30 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v30 || (v25 & 7) == 4)
    {
LABEL_82:
      int v52 = 1;
      goto LABEL_83;
    }
    unint64_t v32 = v25 >> 3;
    BOOL v33 = v57;
    if ((v56 & 1) == 0)
    {
      int v34 = v19;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 56;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_102;
        }
        char v47 = 4 * *(unsigned char *)(a1 + 76);
        goto LABEL_79;
      case 2:
        if (!v33) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 76) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_102;
          }
          char v47 = 16 * *(unsigned char *)(a1 + 76);
          goto LABEL_79;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_102;
        }
        char v43 = objc_alloc_init(GEORPPostedBy);
        if (!GEORPPostedByReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
          goto LABEL_101;
        }
        PBReaderRecallMark();
        uint64_t v44 = 40;
        goto LABEL_58;
      case 3:
        if (!v33) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 76) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_102;
          }
          char v47 = 32 * *(unsigned char *)(a1 + 76);
LABEL_79:
          v7 += v47 >> 7;
LABEL_80:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_81:
          if (!(v55 & 1 | (v7 != 0))) {
            goto LABEL_82;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_102;
        }
        char v43 = objc_alloc_init(GEORPTimestamp);
        if (GEORPTimestampReadAllFrom((uint64_t)v43, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v44 = 32;
LABEL_58:
          __int16 v45 = *(void **)(a1 + v44);
          *(void *)(a1 + v44) = v43;
LABEL_63:

          --v7;
          goto LABEL_80;
        }
LABEL_101:

LABEL_102:
        int v52 = 0;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_83:
        char v53 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
        if (v54) {
LABEL_84:
        }
          *(unsigned char *)(a1 + v53[23]) |= 1u;
        if (v57 || (v52 & 1) == 0)
        {
          *(unsigned char *)(a1 + v53[23]) |= 0x20u;
          *(unsigned char *)(a1 + v53[23]) |= 8u;
          *(unsigned char *)(a1 + v53[23]) |= 4u;
          *(unsigned char *)(a1 + v53[23]) |= 2u;
          *(unsigned char *)(a1 + v53[23]) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            int v49 = *v19++;
            char v48 = 32;
            switch(v49)
            {
              case 0:
                goto LABEL_95;
              case 1:
                goto LABEL_93;
              case 2:
                char v48 = 8;
                goto LABEL_93;
              case 3:
                char v48 = 4;
                goto LABEL_93;
              case 4:
                char v48 = 2;
                goto LABEL_93;
              case 5:
                char v48 = 16;
LABEL_93:
                *(unsigned char *)(a1 + v53[23]) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_95:
        if (v52) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v57)
        {
          int v50 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 4:
        if (!v33) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 76) & 2) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 24;
LABEL_62:
          __int16 v45 = *(void **)(a1 + v39);
          *(void *)(a1 + v39) = v38;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_102;
        }
        char v47 = *(unsigned char *)(a1 + 76) << 6;
        goto LABEL_79;
      case 5:
        if (!v33 || (*(unsigned char *)(a1 + 76) & 0x10) != 0) {
          goto LABEL_69;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_102;
        }
        char v43 = objc_alloc_init(GEORPFeedbackSurveyResponse);
        if (!GEORPFeedbackSurveyResponseReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1)) {
          goto LABEL_101;
        }
        PBReaderRecallMark();
        -[GEORPFeedbackConversationMessage _addNoFlagsSurveyResponse:](a1, v43);

        goto LABEL_80;
      default:
        if (v54 & 1) == 0 || (*(unsigned char *)(a1 + 76))
        {
LABEL_69:
          char v46 = PBReaderSkipValueWithTag();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v46 & 1) == 0)
          {
            int v52 = 0;
            goto LABEL_83;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v41 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v40;
          }
          int v42 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v42)
          {
            int v52 = 0;
            char v53 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
            goto LABEL_84;
          }
        }
        goto LABEL_81;
    }
  }
}

void sub_18A151A88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A151BF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A151D64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A151ED4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A152B40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPFeedbackConversationMessageCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [a1[5] readAll:1];
  [a1[4] readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = a1[6];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEORPFeedbackConversationMessageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackConversationMessageReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORPFeedbackConversationMessageReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORPFeedbackConversationMessageReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackConversationMessageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPFeedbackConversationMessageCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18A152DFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackConversationMessageReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackConversationMessageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A152E60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPostedByIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_38;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_38;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if (v14 != 2) {
          goto LABEL_40;
        }
LABEL_32:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_40;
        }
        goto LABEL_37;
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_40;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 == -1 || v19 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v20 = v19 + 1;
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_37;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_40:
        BOOL v23 = 0;
        goto LABEL_39;
      }
LABEL_37:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_38;
      }
    }
    if (v14 != 2) {
      goto LABEL_40;
    }
    goto LABEL_32;
  }
LABEL_38:
  BOOL v23 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v23;
}

BOOL GEORPFeedbackSurveyResponseIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v16 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v14 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v16 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v16;
}

void sub_18A1534D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackConversationMessageIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v2 = *(unsigned char *)(a1 + 76);
  if ((v2 & 0x60) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 76) & 8) != 0)
  {
    if (GEORPPostedByIsDirty(*(void *)(a1 + 40))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 76);
  }
  if ((v2 & 0x16) != 0) {
    return 1;
  }
  if ((v2 & 0x10) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 48);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEORPFeedbackSurveyResponseIsDirty(*(void *)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_20;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_20:

  return v3;
}

os_unfair_lock_s *GEORPFeedbackConversationMessageIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPFeedbackConversationMessageIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A153AA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A153EB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A15429C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackIdLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1)
      + (*(unsigned char *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        int v15 = v14 & ~v7 | v8;
        int v58 = v14 | v7;
        if (((v14 | v7) | v9)) {
          BOOL v16 = 0;
        }
        else {
          BOOL v16 = a3;
        }
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        int v18 = 1;
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_80;
        }
        char v56 = v15;
        int v57 = (v10 != 0) | v58 | v15;
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  do
  {
    if (*(unsigned char *)(v3 + *v19)) {
      break;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v17;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v27 = v22++ >= 9;
      if (v27)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    int v29 = v23 & 7;
    if (v28 || v29 == 4) {
      break;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v58;
    if (!((v16 == 0) | v58 & 1))
    {
      BOOL v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2)
    {
      if (v32 && (*(unsigned char *)(a1 + 68) & 2) == 0)
      {
        if (v29 == 2)
        {
          int v18 = PBReaderPlaceMark();
          if (!v18) {
            goto LABEL_79;
          }
          while (*(void *)(v3 + *v17) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v19))
          {
            char v38 = 0;
            unsigned int v39 = 0;
            uint64_t v40 = 0;
            while (1)
            {
              uint64_t v41 = *v17;
              unint64_t v42 = *(void *)(v3 + v41);
              if (v42 == -1 || v42 >= *(void *)(v3 + *v6)) {
                break;
              }
              char v43 = *(unsigned char *)(*(void *)(v3 + *v20) + v42);
              *(void *)(v3 + v4objc_destroyWeak(this + 1) = v42 + 1;
              v40 |= (unint64_t)(v43 & 0x7F) << v38;
              if (v43 < 0)
              {
                v38 += 7;
                BOOL v27 = v39++ >= 9;
                if (!v27) {
                  continue;
                }
              }
              goto LABEL_57;
            }
            *(unsigned char *)(v3 + *v19) = 1;
LABEL_57:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          while (1)
          {
            uint64_t v49 = *v17;
            unint64_t v50 = *(void *)(v3 + v49);
            if (v50 == -1 || v50 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v51 = *(unsigned char *)(*(void *)(v3 + *v20) + v50);
            *(void *)(v3 + v49) = v50 + 1;
            v48 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              BOOL v27 = v47++ >= 9;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_75;
          }
          *(unsigned char *)(v3 + *v19) = 1;
LABEL_75:
          PBRepeatedInt32Add();
        }
LABEL_76:
        if ((v57 & 1) == 0) {
          break;
        }
        continue;
      }
    }
    else if (v31 == 1)
    {
      if (v32 && (*(unsigned char *)(a1 + 68) & 4) == 0)
      {
        BOOL v37 = PBReaderReadString();
        if (v37) {
          -[GEORPFeedbackIdLookupParameters _addNoFlagsFeedbackId:](a1, v37);
        }

        goto LABEL_76;
      }
    }
    else if ((v56 & 1) != 0 && (*(unsigned char *)(a1 + 68) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v44 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        __int16 v45 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v44;
      }
      int v18 = PBUnknownFieldAdd();
      if (!v18) {
        goto LABEL_81;
      }
      goto LABEL_76;
    }
    int v18 = PBReaderSkipValueWithTag();
    if ((v18 & v57 & 1) == 0) {
      goto LABEL_79;
    }
  }
  while (*(void *)(v3 + *v17) < *(void *)(v3 + *v6));
  int v18 = 1;
LABEL_79:
  LOBYTE(v15) = v56;
LABEL_80:
  if (v15) {
LABEL_81:
  }
    *(unsigned char *)(a1 + 68) |= 1u;
  if (v58 & 1 | ((v18 & 1) == 0))
  {
    *(unsigned char *)(a1 + 68) |= 4u;
    *(unsigned char *)(a1 + 68) |= 2u;
    goto LABEL_91;
  }
  if (v16)
  {
    while (2)
    {
      while (1)
      {
        int v53 = *v16++;
        int v52 = v53;
        if (v53 == 1) {
          break;
        }
        if (v52 == 2) {
          goto LABEL_90;
        }
        if (!v52) {
          goto LABEL_91;
        }
      }
      LOBYTE(v52) = 4;
LABEL_90:
      *(unsigned char *)(a1 + 68) |= v52;
      continue;
    }
  }
LABEL_91:
  if (v18) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v58)
  {
    char v54 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18A154C48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A15590C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackIdLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackIdLookupParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPFeedbackIdLookupParametersReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPFeedbackIdLookupParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackIdLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18A155A98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackIdLookupParametersReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackIdLookupParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A155AFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackIdLookupParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v14 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_46;
          }
LABEL_32:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v21 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v22 = *v2;
              unint64_t v23 = *(void *)&a1[v22];
              if (v23 == -1 || v23 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v24 = v23 + 1;
              int v25 = *(char *)(*(void *)&a1[*v5] + v23);
              *(void *)&a1[v22] = v24;
              if (v25 < 0)
              {
                BOOL v12 = v21++ >= 9;
                if (!v12) {
                  continue;
                }
              }
              goto LABEL_32;
            }
            a1[*v4] = 1;
          }
          PBReaderRecallMark();
        }
        else
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          while (1)
          {
            uint64_t v16 = *v2;
            unint64_t v17 = *(void *)&a1[v16];
            if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
              break;
            }
            unint64_t v18 = v17 + 1;
            int v19 = *(char *)(*(void *)&a1[*v5] + v17);
            *(void *)&a1[v16] = v18;
            if (v19 < 0)
            {
              unsigned int v20 = v14++;
              if (v20 <= 8) {
                continue;
              }
            }
            goto LABEL_43;
          }
          a1[*v4] = 1;
        }
      }
      else if ((v8 >> 3) == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_46:
        PBReaderRecallMark();
        return 0;
      }
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v26 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v26;
}

void sub_18A156018(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackIdLookupParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_18A156424(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A15673C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackIdLookupResultReadAllFrom(void *a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          unint64_t v14 = *(void *)&v5[v13];
          if (v14 == -1 || v14 >= *(void *)&v5[*v7]) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v17 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v17 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          int v19 = objc_alloc_init(GEORPFeedbackInfo);
          if (!GEORPFeedbackInfoReadAllFrom((uint64_t)v19, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addFeedbackInfo:", v19, 0, 0);
        }
        else
        {
          if (!a1[1])
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v21 = (void *)a1[1];
            a1[1] = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v22 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v22 = 0;
  }
  objc_sync_exit(v5);

  return v22;
}

void sub_18A157170(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackIdLookupResultReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackIdLookupResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A1571D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackIdLookupResultIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackInfoIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEORPFeedbackInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 5)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackComponentIsValid(a1)) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
      }
      else if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 == -1 || v19 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v20 = v19 + 1;
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_38;
        }
        a1[*v4] = 1;
      }
      else if (v16 == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        PBReaderRecallMark();
        return 0;
      }
LABEL_38:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_18A157F48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  char v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  int v13 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v11])
    {
      case -4:
        ++v13;
        uint64_t v14 = v8;
        goto LABEL_8;
      case -3:
        char v10 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v8;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 != 0;
        char v18 = v17 & ~(_BYTE)v12 | v9;
        unsigned __int8 v19 = v17 | v12;
        char v59 = v18;
        char v60 = v19 | v18;
        if ((v19 | v10)) {
          unint64_t v20 = 0;
        }
        else {
          unint64_t v20 = a3;
        }
        int v21 = (int *)MEMORY[0x1E4F940E8];
        char v61 = (v20 == 0) | v19;
        BOOL v62 = v19;
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        BOOL v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v8;
        uint64_t v15 = v9;
LABEL_8:
        uint64_t v16 = v12;
LABEL_10:
        ++v11;
        uint64_t v8 = v14;
        uint64_t v9 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_73;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      unint64_t v28 = *(void *)(v3 + v27);
      if (v28 == -1 || v28 >= *(void *)(v3 + *v7)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v28 + 1;
      v26 |= (unint64_t)(v29 & 0x7F) << v24;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v30 = v25++ >= 9;
      if (v30)
      {
        unint64_t v26 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v31 || (v26 & 7) == 4)
    {
LABEL_73:
      int v57 = 1;
      goto LABEL_74;
    }
    unint64_t v33 = v26 >> 3;
    BOOL v34 = v62;
    if ((v61 & 1) == 0)
    {
      int v35 = v20;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 5) {
      break;
    }
    if (v33 == 2)
    {
      if ((v10 & 1) == 0) {
        goto LABEL_63;
      }
      char v42 = 0;
      unsigned int v43 = 0;
      uint64_t v44 = 0;
      *(unsigned char *)(a1 + 56) |= 1u;
      while (1)
      {
        uint64_t v45 = *v21;
        unint64_t v46 = *(void *)(v3 + v45);
        if (v46 == -1 || v46 >= *(void *)(v3 + *v7)) {
          break;
        }
        char v47 = *(unsigned char *)(*(void *)(v3 + *v23) + v46);
        *(void *)(v3 + v45) = v46 + 1;
        v44 |= (unint64_t)(v47 & 0x7F) << v42;
        if ((v47 & 0x80) == 0) {
          goto LABEL_66;
        }
        v42 += 7;
        BOOL v30 = v43++ >= 9;
        if (v30)
        {
          LODWORD(v44) = 0;
          goto LABEL_68;
        }
      }
      *(unsigned char *)(v3 + *v22) = 1;
LABEL_66:
      if (*(unsigned char *)(v3 + *v22)) {
        LODWORD(v44) = 0;
      }
LABEL_68:
      *(_DWORD *)(a1 + 52) = v44;
    }
    else
    {
      if (v33 == 1)
      {
        if (!v34) {
          goto LABEL_63;
        }
        if ((*(unsigned char *)(a1 + 56) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_93;
          }
          v11 += *(unsigned __int8 *)(a1 + 56) << 28 >> 31;
        }
        else
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v39;

          --v11;
        }
        goto LABEL_71;
      }
      if ((v59 & 1) == 0 || (*(unsigned char *)(a1 + 56) & 2) != 0) {
        goto LABEL_63;
      }
      if (!*(void *)(a1 + 16))
      {
        id v48 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v49 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v48;
      }
      int v50 = PBUnknownFieldAdd();
      BOOL v22 = (int *)MEMORY[0x1E4F940C8];
      unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
      if (!v50)
      {
        int v57 = 0;
        int v58 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
        goto LABEL_75;
      }
    }
LABEL_72:
    if (!(v60 & 1 | (v11 != 0))) {
      goto LABEL_73;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + 56) & 4) != 0)
  {
LABEL_63:
    char v51 = PBReaderSkipValueWithTag();
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    BOOL v22 = (int *)MEMORY[0x1E4F940C8];
    if ((v51 & 1) == 0)
    {
      int v57 = 0;
      goto LABEL_74;
    }
    goto LABEL_72;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_93;
  }
  uint64_t v41 = objc_alloc_init(GEORPFeedbackComponent);
  if (GEORPFeedbackComponentReadAllFrom((uint64_t)v41, (void *)v3, v8 & 1))
  {
    PBReaderRecallMark();
    -[GEORPFeedbackInfo _addNoFlagsFeedbackComponent:](a1, v41);

LABEL_71:
    BOOL v22 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    goto LABEL_72;
  }

LABEL_93:
  int v57 = 0;
  BOOL v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_74:
  int v58 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
  if ((v59 & 1) == 0) {
    goto LABEL_76;
  }
LABEL_75:
  *(unsigned char *)(a1 + v58[42]) |= 2u;
LABEL_76:
  if (v62 || (v57 & 1) == 0)
  {
    *(unsigned char *)(a1 + v58[42]) |= 8u;
    *(unsigned char *)(a1 + v58[42]) |= 4u;
    goto LABEL_86;
  }
  if (v20)
  {
    while (2)
    {
      while (1)
      {
        int v53 = *v20++;
        int v52 = v53;
        if (v53 == 1) {
          break;
        }
        if (v52 == 5)
        {
          char v54 = 4;
          goto LABEL_85;
        }
        if (!v52) {
          goto LABEL_86;
        }
      }
      char v54 = 8;
LABEL_85:
      *(unsigned char *)(a1 + v58[42]) |= v54;
      continue;
    }
  }
LABEL_86:
  if (v57) {
    unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v62)
  {
    char v55 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18A158A34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A159744(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPFeedbackInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEORPFeedbackInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)char v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORPFeedbackInfoReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORPFeedbackInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORPFeedbackInfoCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18A1599D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A159A3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A159CA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18A15A1FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A15A59C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackNotificationReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        unint64_t v13 = *(void *)&v3[v12];
        if (v13 == -1 || v13 >= *(void *)&v3[*v5]) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v13 + 1;
        v11 |= (unint64_t)(v14 & 0x7F) << v9;
        if ((v14 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v16 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v16 = 0;
      }
      else {
        char v16 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v17 = 1;
      }
      else {
        BOOL v17 = (v16 & 7) == 4;
      }
      if (v17) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v18 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unsigned __int8 v19 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v18;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v20 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_18A15ABFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackNotificationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackNotificationReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A15AC60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A15B350(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackOverviewReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  long long v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFCFFFAFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 76) & 4) != 0));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 2;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v67 = v18;
        char v68 = v19 | v18;
        if ((v19 | v9)) {
          BOOL v20 = 0;
        }
        else {
          BOOL v20 = a3;
        }
        char v69 = (v20 == 0) | v19;
        BOOL v70 = v19;
        int v21 = (int *)MEMORY[0x1E4F940E8];
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        BOOL v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_102;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      unint64_t v28 = *(void *)(v3 + v27);
      if (v28 == -1 || v28 >= *(void *)(v3 + *v7)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v28 + 1;
      v26 |= (unint64_t)(v29 & 0x7F) << v24;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v30 = v25++ >= 9;
      if (v30)
      {
        unint64_t v26 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v31 || (v26 & 7) == 4)
    {
LABEL_102:
      int v65 = 1;
      goto LABEL_103;
    }
    unint64_t v33 = v26 >> 3;
    BOOL v34 = v70;
    if ((v69 & 1) == 0)
    {
      int v35 = v20;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v9 & 1) == 0) {
          goto LABEL_80;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        while (1)
        {
          uint64_t v42 = *v21;
          unint64_t v43 = *(void *)(v3 + v42);
          if (v43 == -1 || v43 >= *(void *)(v3 + *v7)) {
            break;
          }
          char v44 = *(unsigned char *)(*(void *)(v3 + *v23) + v43);
          *(void *)(v3 + v42) = v43 + 1;
          v41 |= (unint64_t)(v44 & 0x7F) << v39;
          if ((v44 & 0x80) == 0) {
            goto LABEL_83;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v4objc_destroyWeak(this + 1) = 0;
            goto LABEL_85;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_83:
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v4objc_destroyWeak(this + 1) = 0;
        }
LABEL_85:
        uint64_t v59 = 72;
        goto LABEL_90;
      case 2:
        if (!v34) {
          goto LABEL_80;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x40) == 0)
        {
          uint64_t v48 = PBReaderReadString();
          uint64_t v49 = 48;
          goto LABEL_78;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_120;
        }
        char v60 = 2 * *(unsigned char *)(a1 + 76);
        goto LABEL_99;
      case 3:
        if (!v34) {
          goto LABEL_80;
        }
        if ((*(unsigned char *)(a1 + 76) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_120;
          }
          char v60 = 16 * *(unsigned char *)(a1 + 76);
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_120;
        }
        int v50 = objc_alloc_init(GEORPTimestamp);
        if (!GEORPTimestampReadAllFrom((uint64_t)v50, (void *)v3)) {
          goto LABEL_119;
        }
        PBReaderRecallMark();
        uint64_t v51 = 24;
        goto LABEL_66;
      case 4:
        if (!v34) {
          goto LABEL_80;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_120;
          }
          char v60 = 8 * *(unsigned char *)(a1 + 76);
LABEL_99:
          v8 += v60 >> 7;
LABEL_100:
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          long long v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_101:
          if (!(v68 & 1 | (v8 != 0))) {
            goto LABEL_102;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_120;
        }
        int v50 = objc_alloc_init(GEORPTimestamp);
        if (GEORPTimestampReadAllFrom((uint64_t)v50, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v51 = 32;
LABEL_66:
          int v52 = *(void **)(a1 + v51);
          *(void *)(a1 + v5objc_destroyWeak(this + 1) = v50;
LABEL_79:

          --v8;
          goto LABEL_100;
        }
LABEL_119:

LABEL_120:
        int v65 = 0;
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_103:
        char v66 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
        if (v67) {
LABEL_104:
        }
          *(unsigned char *)(a1 + v66[51]) |= 4u;
        if (v70 || (v65 & 1) == 0)
        {
          *(unsigned char *)(a1 + v66[51]) |= 0x40u;
          *(unsigned char *)(a1 + v66[51]) |= 8u;
          *(unsigned char *)(a1 + v66[51]) |= 0x10u;
          *(unsigned char *)(a1 + v66[51]) |= 0x20u;
        }
        else if (v20)
        {
          while (1)
          {
            int v61 = *v20++;
            char v62 = 64;
            switch(v61)
            {
              case 0:
                goto LABEL_113;
              case 2:
                goto LABEL_112;
              case 3:
                char v62 = 8;
                goto LABEL_112;
              case 4:
                char v62 = 16;
                goto LABEL_112;
              case 6:
                char v62 = 32;
LABEL_112:
                *(unsigned char *)(a1 + v66[51]) |= v62;
                break;
              default:
                continue;
            }
          }
        }
LABEL_113:
        if (v65) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v70)
        {
          int v63 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 5:
        if ((v9 & 1) == 0) {
          goto LABEL_80;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        while (2)
        {
          uint64_t v55 = *v21;
          unint64_t v56 = *(void *)(v3 + v55);
          if (v56 == -1 || v56 >= *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v23) + v56);
            *(void *)(v3 + v55) = v56 + 1;
            v41 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v53 += 7;
              BOOL v30 = v54++ >= 9;
              if (v30)
              {
                LODWORD(v4objc_destroyWeak(this + 1) = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v4objc_destroyWeak(this + 1) = 0;
        }
LABEL_89:
        uint64_t v59 = 68;
LABEL_90:
        *(_DWORD *)(a1 + v59) = v41;
        goto LABEL_101;
      case 6:
        if (!v34) {
          goto LABEL_80;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) == 0)
        {
          uint64_t v48 = PBReaderReadString();
          uint64_t v49 = 40;
LABEL_78:
          int v52 = *(void **)(a1 + v49);
          *(void *)(a1 + v49) = v48;
          goto LABEL_79;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_120;
        }
        char v60 = 4 * *(unsigned char *)(a1 + 76);
        goto LABEL_99;
      default:
        if ((v67 & 1) == 0 || (*(unsigned char *)(a1 + 76) & 4) != 0)
        {
LABEL_80:
          char v58 = PBReaderSkipValueWithTag();
          long long v7 = (int *)MEMORY[0x1E4F940E0];
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v58 & 1) == 0)
          {
            int v65 = 0;
            goto LABEL_103;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v45 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v46 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v45;
          }
          int v47 = PBUnknownFieldAdd();
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          long long v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v47)
          {
            int v65 = 0;
            char v66 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
            goto LABEL_104;
          }
        }
        goto LABEL_101;
    }
  }
}

void sub_18A15BD2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A15BE98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A15C23C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A15CF08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackOverviewReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackOverviewReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPFeedbackOverviewReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPFeedbackOverviewReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackOverviewReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18A15D0C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackOverviewReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackOverviewReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A15D128(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A15D35C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackOverviewIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = *(unsigned __int8 *)(a1 + 76) > 7u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_18A15D744(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A15DB88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A15DE98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackQueryParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
  unsigned int v13 = ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + (*(unsigned char *)(a1 + 76) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 1;
        char v18 = v17 & ~(_BYTE)v11 | v9;
        char v19 = v17 | v11;
        BOOL v20 = (int *)MEMORY[0x1E4F940E8];
        if (((v17 | v11) | v8)) {
          int v21 = 0;
        }
        else {
          int v21 = a3;
        }
        int v22 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_97;
        }
        char v66 = v18;
        char v67 = v19 | v18;
        char v69 = (v21 == 0) | v19;
        BOOL v23 = (int *)MEMORY[0x1E4F940C8];
        char v24 = (int *)MEMORY[0x1E4F940B8];
        char v68 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v9;
LABEL_8:
        uint64_t v15 = v10;
        uint64_t v16 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v14;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v23)) {
      goto LABEL_94;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v20;
      unint64_t v29 = *(void *)(v3 + v28);
      if (v29 == -1 || v29 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v29 + 1;
      v27 |= (unint64_t)(v30 & 0x7F) << v25;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v31 = v26++ >= 9;
      if (v31)
      {
        unint64_t v27 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    int v33 = v27 & 7;
    if (v32 || v33 == 4)
    {
LABEL_94:
      int v22 = 1;
      goto LABEL_95;
    }
    int v35 = v23;
    unint64_t v36 = v27 >> 3;
    BOOL v37 = v19;
    if ((v69 & 1) == 0)
    {
      BOOL v38 = v21;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    if (v36 == 5)
    {
      if (!v37) {
        goto LABEL_74;
      }
      BOOL v23 = v35;
      if ((*(unsigned char *)(a1 + 76) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_114;
        }
        uint64_t v48 = objc_alloc_init(GEORPFeedbackComponentQueryParameters);
        if (!GEORPFeedbackComponentQueryParametersReadAllFrom((uint64_t)v48, (void *)v3, v10 & 1)) {
          goto LABEL_113;
        }
        PBReaderRecallMark();
        uint64_t v49 = 48;
LABEL_67:
        int v50 = *(void **)(a1 + v49);
        *(void *)(a1 + v49) = v48;

        --v7;
LABEL_81:
        char v19 = v68;
        char v24 = (int *)MEMORY[0x1E4F940B8];
        goto LABEL_92;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_114;
      }
      char v55 = 32 * *(unsigned char *)(a1 + 76);
LABEL_80:
      v7 += v55 >> 7;
      goto LABEL_81;
    }
    if (v36 == 4) {
      break;
    }
    if (v36 == 3)
    {
      if (v37 && (*(unsigned char *)(a1 + 76) & 2) == 0)
      {
        BOOL v23 = v35;
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_114;
          }
          char v24 = (int *)MEMORY[0x1E4F940B8];
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v35)) {
              break;
            }
            char v42 = 0;
            unsigned int v43 = 0;
            uint64_t v44 = 0;
            while (1)
            {
              uint64_t v45 = *v20;
              unint64_t v46 = *(void *)(v3 + v45);
              if (v46 == -1 || v46 >= *(void *)(v3 + *v6)) {
                break;
              }
              char v47 = *(unsigned char *)(*(void *)(v3 + *v24) + v46);
              *(void *)(v3 + v45) = v46 + 1;
              v44 |= (unint64_t)(v47 & 0x7F) << v42;
              if (v47 < 0)
              {
                v42 += 7;
                BOOL v31 = v43++ >= 9;
                if (!v31) {
                  continue;
                }
              }
              goto LABEL_55;
            }
            *(unsigned char *)(v3 + *v35) = 1;
LABEL_55:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v56 = 0;
          unsigned int v57 = 0;
          uint64_t v58 = 0;
          char v24 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v59 = *v20;
            unint64_t v60 = *(void *)(v3 + v59);
            if (v60 == -1 || v60 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v61 = *(unsigned char *)(*(void *)(v3 + *v24) + v60);
            *(void *)(v3 + v59) = v60 + 1;
            v58 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              BOOL v31 = v57++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_90;
          }
          *(unsigned char *)(v3 + *v35) = 1;
LABEL_90:
          PBRepeatedInt32Add();
        }
        char v19 = v68;
        goto LABEL_92;
      }
    }
    else if ((v66 & 1) != 0 && (*(unsigned char *)(a1 + 76) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v51 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        int v52 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v51;
      }
      int v53 = PBUnknownFieldAdd();
      char v19 = v68;
      BOOL v23 = v35;
      char v24 = (int *)MEMORY[0x1E4F940B8];
      if (!v53)
      {
        int v22 = 0;
        uint64_t v12 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
        goto LABEL_98;
      }
      goto LABEL_92;
    }
LABEL_74:
    char v54 = PBReaderSkipValueWithTag();
    char v19 = v68;
    BOOL v23 = v35;
    char v24 = (int *)MEMORY[0x1E4F940B8];
    if ((v54 & 1) == 0)
    {
      int v22 = 0;
LABEL_95:
      uint64_t v12 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
      goto LABEL_96;
    }
LABEL_92:
    if (!(v67 & 1 | (v7 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
      goto LABEL_94;
    }
  }
  if (!v37) {
    goto LABEL_74;
  }
  BOOL v23 = v35;
  if ((*(unsigned char *)(a1 + 76) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_114;
    }
    char v55 = 16 * *(unsigned char *)(a1 + 76);
    goto LABEL_80;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_114;
  }
  uint64_t v48 = objc_alloc_init(GEORPFilter);
  if (GEORPFilterReadAllFrom((uint64_t)v48, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v49 = 56;
    goto LABEL_67;
  }
LABEL_113:

LABEL_114:
  int v22 = 0;
  uint64_t v12 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
  char v19 = v68;
LABEL_96:
  char v18 = v66;
LABEL_97:
  if (v18) {
LABEL_98:
  }
    *(unsigned char *)(a1 + v12[160]) |= 1u;
  if (v19 & 1 | ((v22 & 1) == 0))
  {
    *(unsigned char *)(a1 + v12[160]) |= 2u;
    *(unsigned char *)(a1 + v12[160]) |= 8u;
    *(unsigned char *)(a1 + v12[160]) |= 4u;
  }
  else if (v21)
  {
    while (1)
    {
      int v63 = *v21++;
      char v62 = 2;
      switch(v63)
      {
        case 0:
          goto LABEL_107;
        case 3:
          goto LABEL_105;
        case 4:
          char v62 = 8;
          goto LABEL_105;
        case 5:
          char v62 = 4;
LABEL_105:
          *(unsigned char *)(a1 + v12[160]) |= v62;
          break;
        default:
          continue;
      }
    }
  }
LABEL_107:
  if (v22)
  {
    unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
    if ((v19 & 1) == 0) {
      return v3;
    }
LABEL_111:
    uint64_t v64 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v19) {
      goto LABEL_111;
    }
  }
  return v3;
}

void sub_18A15EB7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A15ECE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A15F698(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackQueryParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackQueryParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPFeedbackQueryParametersReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPFeedbackQueryParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackQueryParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 56) readAll:1];
    [*(id *)(a1 + 48) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18A15F850(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackQueryParametersReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackQueryParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A15F8B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackQueryParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_50;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_50;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 5)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackComponentQueryParametersIsValid(a1))
        {
LABEL_52:
          PBReaderRecallMark();
          return 0;
        }
        goto LABEL_35;
      }
      if (v16 == 4) {
        break;
      }
      if (v16 == 3)
      {
        if (v14 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_52;
          }
LABEL_39:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v22 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              unint64_t v24 = *(void *)&a1[v23];
              if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v25 = v24 + 1;
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                BOOL v12 = v22++ >= 9;
                if (!v12) {
                  continue;
                }
              }
              goto LABEL_39;
            }
            a1[*v4] = 1;
          }
LABEL_35:
          PBReaderRecallMark();
          goto LABEL_49;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_52;
        }
        while (1)
        {
          uint64_t v17 = *v2;
          unint64_t v18 = *(void *)&a1[v17];
          if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v19 = v18 + 1;
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            unsigned int v21 = v14++;
            if (v21 <= 8) {
              continue;
            }
          }
          goto LABEL_49;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_52;
      }
LABEL_49:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_50;
      }
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFilterIsValid(a1)) {
      goto LABEL_52;
    }
    goto LABEL_35;
  }
LABEL_50:
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEORPFilterIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v13 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v15 = 0;
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

void sub_18A15FF74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPFeedbackQueryParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  if ((*(unsigned char *)(a1 + 76) & 0x1A) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 76) & 4) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 48);

  return GEORPFeedbackComponentQueryParametersIsDirty(v3);
}

os_unfair_lock_s *GEORPFeedbackQueryParametersIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEORPFeedbackQueryParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A160308(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1605F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackQueryResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          unint64_t v14 = *(void *)&v5[v13];
          if (v14 == -1 || v14 >= *(void *)&v5[*v7]) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v16 = v11++ >= 9;
          if (v16)
          {
            unint64_t v12 = 0;
            int v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v17 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v17 || (v12 & 7) == 4) {
          break;
        }
        unint64_t v19 = v12 >> 3;
        if ((v12 >> 3) == 4)
        {
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 32) |= 2u;
          while (1)
          {
            uint64_t v24 = *v6;
            unint64_t v25 = *(void *)&v5[v24];
            if (v25 == -1 || v25 >= *(void *)&v5[*v7]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v25);
            *(void *)&v5[v24] = v25 + 1;
            v23 |= (unint64_t)(v26 & 0x7F) << v21;
            if ((v26 & 0x80) == 0) {
              goto LABEL_44;
            }
            v21 += 7;
            BOOL v16 = v22++ >= 9;
            if (v16)
            {
              uint64_t v23 = 0;
              goto LABEL_46;
            }
          }
          v5[*v8] = 1;
LABEL_44:
          if (v5[*v8]) {
            uint64_t v23 = 0;
          }
LABEL_46:
          *(unsigned char *)(a1 + 28) = v23 != 0;
        }
        else if (v19 == 3)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v30 = *v6;
            unint64_t v31 = *(void *)&v5[v30];
            if (v31 == -1 || v31 >= *(void *)&v5[*v7]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v5[*v9] + v31);
            *(void *)&v5[v30] = v31 + 1;
            v29 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0) {
              goto LABEL_48;
            }
            v27 += 7;
            BOOL v16 = v28++ >= 9;
            if (v16)
            {
              LODWORD(v29) = 0;
              goto LABEL_50;
            }
          }
          v5[*v8] = 1;
LABEL_48:
          if (v5[*v8]) {
            LODWORD(v29) = 0;
          }
LABEL_50:
          *(_DWORD *)(a1 + 24) = v29;
        }
        else if (v19 == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_54;
          }
          int v20 = objc_alloc_init(GEORPFeedbackInfo);
          if (!GEORPFeedbackInfoReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_54;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addFeedbackInfo:", v20, 0, 0);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v34 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v33;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_54;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v35 = v5[*v8] == 0;
  }
  else
  {
LABEL_54:
    BOOL v35 = 0;
  }
  objc_sync_exit(v5);

  return v35;
}

void sub_18A161404(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackQueryResultReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFeedbackQueryResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A161468(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackQueryResultIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_44;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_44;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 4) {
        break;
      }
      if (v16 == 3)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_46;
        }
        unsigned int v23 = 0;
        while (1)
        {
          uint64_t v24 = *v2;
          unint64_t v25 = *(void *)&a1[v24];
          if (v25 == -1 || v25 >= *(void *)&a1[*v3]) {
            goto LABEL_41;
          }
          unint64_t v26 = v25 + 1;
          int v27 = *(char *)(*(void *)&a1[*v5] + v25);
          *(void *)&a1[v24] = v26;
          if (v27 < 0)
          {
            BOOL v22 = v23++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_43;
        }
      }
      if (v16 == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackInfoIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_46;
      }
LABEL_43:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_44;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_46;
    }
    unsigned int v17 = 0;
    while (1)
    {
      uint64_t v18 = *v2;
      unint64_t v19 = *(void *)&a1[v18];
      if (v19 == -1 || v19 >= *(void *)&a1[*v3]) {
        break;
      }
      unint64_t v20 = v19 + 1;
      int v21 = *(char *)(*(void *)&a1[*v5] + v19);
      *(void *)&a1[v18] = v20;
      if (v21 < 0)
      {
        BOOL v22 = v17++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_43;
    }
LABEL_41:
    a1[*v4] = 1;
    goto LABEL_43;
  }
LABEL_44:
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_18A162240(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackSurveyResponseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v49 = v15 | v8;
        if ((v16 | v9)) {
          unsigned int v17 = 0;
        }
        else {
          unsigned int v17 = a3;
        }
        BOOL v52 = v16;
        char v50 = v16 | v15 | v8;
        char v51 = (v17 == 0) | v16;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_59;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_59:
      int v48 = 1;
      goto LABEL_60;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v52;
    if ((v51 & 1) == 0)
    {
      char v32 = v17;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 2) {
      break;
    }
    if (v30 == 1)
    {
      if (!v31) {
        goto LABEL_51;
      }
      if ((*(unsigned char *)(a1 + 52) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_77;
        }
        char v43 = 32 * *(unsigned char *)(a1 + 52);
        goto LABEL_57;
      }
      uint64_t v36 = PBReaderReadString();
      uint64_t v37 = 32;
      goto LABEL_44;
    }
    if (v49 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_51:
      char v42 = PBReaderSkipValueWithTag();
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if ((v42 & 1) == 0)
      {
        int v48 = 0;
        goto LABEL_60;
      }
      goto LABEL_58;
    }
    if (!*(void *)(a1 + 16))
    {
      id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      int v40 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v39;
    }
    int v41 = PBUnknownFieldAdd();
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if (!v41)
    {
      int v48 = 0;
      goto LABEL_61;
    }
LABEL_58:
    if (!(v50 & 1 | (v10 != 0))) {
      goto LABEL_59;
    }
  }
  if (!v31) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0)
  {
    uint64_t v36 = PBReaderReadString();
    uint64_t v37 = 24;
LABEL_44:
    BOOL v38 = *(void **)(a1 + v37);
    *(void *)(a1 + v37) = v36;

    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v43 = *(unsigned char *)(a1 + 52) << 6;
LABEL_57:
    v10 += v43 >> 7;
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_58;
  }
LABEL_77:
  int v48 = 0;
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_60:
  if ((v49 & 1) == 0) {
    goto LABEL_62;
  }
LABEL_61:
  *(unsigned char *)(a1 + 52) |= 1u;
LABEL_62:
  if (v52 || (v48 & 1) == 0)
  {
    *(unsigned char *)(a1 + 52) |= 4u;
    *(unsigned char *)(a1 + 52) |= 2u;
    goto LABEL_71;
  }
  if (v17)
  {
    while (1)
    {
      int v45 = *v17++;
      int v44 = v45;
      if (v45 == 1) {
        break;
      }
      if (v44 == 2)
      {
LABEL_67:
        *(unsigned char *)(a1 + 52) |= v44;
      }
      else if (!v44)
      {
        goto LABEL_71;
      }
    }
    LOBYTE(v44) = 4;
    goto LABEL_67;
  }
LABEL_71:
  if (v48) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v52)
  {
    unint64_t v46 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18A162888(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A162E68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackSurveyResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPFeedbackSurveyResponseReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPFeedbackSurveyResponseReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPFeedbackSurveyResponseReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPFeedbackSurveyResponseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18A162FF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackSurveyResponseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPFeedbackSurveyResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A16305C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A163204(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackSurveyResponseIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18A1634B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A16370C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFilterReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_32;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v19 = 0;
          }
LABEL_34:
          *(void *)(a1 + 16) = v19;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v23 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v24 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v23;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_18A163EFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFilterReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPFilterReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A163F60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiEnrichmentQueryParametersReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v17 = PBReaderReadString();
          unsigned int v18 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v17;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v20 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_26;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18A164914(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiEnrichmentQueryParametersReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPPoiEnrichmentQueryParametersReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A164978(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A165054(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPostedByReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v57 = v15 | v8;
        char v58 = v16 | v15 | v8;
        if ((v16 | v9)) {
          uint64_t v17 = 0;
        }
        else {
          uint64_t v17 = a3;
        }
        unsigned int v18 = (int *)MEMORY[0x1E4F940E8];
        char v59 = (v17 == 0) | v16;
        BOOL v60 = v16;
        id v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_72;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v27 = v22++ >= 9;
      if (v27)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_72:
      int v55 = 1;
      goto LABEL_73;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v60;
    if ((v59 & 1) == 0)
    {
      char v32 = v17;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 3)
    {
      if (v31)
      {
        if ((*(unsigned char *)(a1 + 56) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_92;
          }
          char v49 = 32 * *(unsigned char *)(a1 + 56);
          goto LABEL_71;
        }
        uint64_t v42 = PBReaderReadString();
        uint64_t v43 = 24;
        goto LABEL_53;
      }
      goto LABEL_60;
    }
    if (v30 != 2)
    {
      if (v30 == 1)
      {
        if (v9)
        {
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v38 = 0;
          *(unsigned char *)(a1 + 56) |= 1u;
          while (1)
          {
            uint64_t v39 = *v18;
            unint64_t v40 = *(void *)(v3 + v39);
            if (v40 == -1 || v40 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v41 = *(unsigned char *)(*(void *)(v3 + *v20) + v40);
            *(void *)(v3 + v39) = v40 + 1;
            v38 |= (unint64_t)(v41 & 0x7F) << v36;
            if ((v41 & 0x80) == 0) {
              goto LABEL_64;
            }
            v36 += 7;
            BOOL v27 = v37++ >= 9;
            if (v27)
            {
              LODWORD(v38) = 0;
              goto LABEL_66;
            }
          }
          *(unsigned char *)(v3 + *v19) = 1;
LABEL_64:
          if (*(unsigned char *)(v3 + *v19)) {
            LODWORD(v38) = 0;
          }
LABEL_66:
          *(_DWORD *)(a1 + 52) = v38;
          goto LABEL_61;
        }
      }
      else if ((v57 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
      {
        if (!*(void *)(a1 + 16))
        {
          id v45 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          unint64_t v46 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v45;
        }
        int v47 = PBUnknownFieldAdd();
        id v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v47)
        {
          int v55 = 0;
          char v56 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
          goto LABEL_74;
        }
        goto LABEL_61;
      }
      goto LABEL_60;
    }
    if (v31) {
      break;
    }
LABEL_60:
    char v48 = PBReaderSkipValueWithTag();
    id v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v48 & 1) == 0)
    {
      int v55 = 0;
      goto LABEL_73;
    }
LABEL_61:
    if (!(v58 & 1 | (v10 != 0))) {
      goto LABEL_72;
    }
  }
  if ((*(unsigned char *)(a1 + 56) & 8) == 0)
  {
    uint64_t v42 = PBReaderReadString();
    uint64_t v43 = 32;
LABEL_53:
    int v44 = *(void **)(a1 + v43);
    *(void *)(a1 + v43) = v42;

    id v19 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_61;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v49 = 16 * *(unsigned char *)(a1 + 56);
LABEL_71:
    v10 += v49 >> 7;
    id v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_61;
  }
LABEL_92:
  int v55 = 0;
  id v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_73:
  char v56 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
  if ((v57 & 1) == 0) {
    goto LABEL_75;
  }
LABEL_74:
  *(unsigned char *)(a1 + v56[87]) |= 2u;
LABEL_75:
  if (v60 || (v55 & 1) == 0)
  {
    *(unsigned char *)(a1 + v56[87]) |= 8u;
    *(unsigned char *)(a1 + v56[87]) |= 4u;
    goto LABEL_85;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        int v51 = *v17++;
        int v50 = v51;
        if (v51 == 2) {
          break;
        }
        if (v50 == 3)
        {
          char v52 = 4;
          goto LABEL_84;
        }
        if (!v50) {
          goto LABEL_85;
        }
      }
      char v52 = 8;
LABEL_84:
      *(unsigned char *)(a1 + v56[87]) |= v52;
      continue;
    }
  }
LABEL_85:
  if (v55) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v60)
  {
    int v53 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18A165788(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A165EA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPostedByReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPPostedByReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPPostedByReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPPostedByReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPPostedByReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18A166030(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPostedByReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPPostedByReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A166094(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A166264(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPostedByIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18A16658C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A166874(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A166B88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v65 = v17;
        char v66 = v9;
        char v67 = v18 | v17;
        if ((v18 | v9)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v21 = (int *)MEMORY[0x1E4F940C8];
        char v68 = (v19 == 0) | v18;
        BOOL v69 = v18;
        unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_87;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      unint64_t v27 = *(void *)(v3 + v26);
      if (v27 == -1 || v27 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v27 + 1;
      v25 |= (unint64_t)(v28 & 0x7F) << v23;
      if ((v28 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v29 = v24++ >= 9;
      if (v29)
      {
        unint64_t v25 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
LABEL_25:
    int v30 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v30 || (v25 & 7) == 4)
    {
LABEL_87:
      int v63 = 1;
      goto LABEL_88;
    }
    unint64_t v32 = v25 >> 3;
    BOOL v33 = v69;
    if ((v68 & 1) == 0)
    {
      int v34 = v19;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v66 & 1) == 0) {
          goto LABEL_70;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (1)
        {
          uint64_t v41 = *v20;
          unint64_t v42 = *(void *)(v3 + v41);
          if (v42 == -1 || v42 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v22) + v42);
          *(void *)(v3 + v4objc_destroyWeak(this + 1) = v42 + 1;
          v40 |= (unint64_t)(v43 & 0x7F) << v38;
          if ((v43 & 0x80) == 0) {
            goto LABEL_73;
          }
          v38 += 7;
          BOOL v29 = v39++ >= 9;
          if (v29)
          {
            uint64_t v40 = 0;
            goto LABEL_75;
          }
        }
        *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
LABEL_73:
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v40 = 0;
        }
LABEL_75:
        *(unsigned char *)(a1 + 56) = v40 != 0;
        goto LABEL_86;
      case 2:
        if (!v33) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v47 = PBReaderReadString();
          char v48 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v47;
          goto LABEL_61;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_107;
        }
        char v57 = 16 * *(unsigned char *)(a1 + 60);
        goto LABEL_84;
      case 3:
        if (!v33) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_107;
          }
          char v57 = 8 * *(unsigned char *)(a1 + 60);
LABEL_84:
          v10 += v57 >> 7;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_107;
        }
        char v49 = objc_alloc_init(GEORPRapResponse);
        if (GEORPRapResponseReadAllFrom((uint64_t)v49, (void *)v3, v7 & 1))
        {
          PBReaderRecallMark();
          char v48 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v49;
LABEL_61:

          --v10;
LABEL_85:
          char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_86:
          if (!(v67 & 1 | (v10 != 0))) {
            goto LABEL_87;
          }
          continue;
        }

LABEL_107:
        int v63 = 0;
        char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_88:
        uint64_t v64 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
        if (v65) {
LABEL_89:
        }
          *(unsigned char *)(a1 + v64[97]) |= 4u;
        if (v69 || (v63 & 1) == 0)
        {
          *(unsigned char *)(a1 + v64[97]) |= 8u;
          *(unsigned char *)(a1 + v64[97]) |= 0x10u;
          goto LABEL_100;
        }
        if (v19)
        {
          while (2)
          {
            while (1)
            {
              int v59 = *v19++;
              int v58 = v59;
              if (v59 == 2) {
                break;
              }
              if (v58 == 3)
              {
                char v60 = 16;
                goto LABEL_99;
              }
              if (!v58) {
                goto LABEL_100;
              }
            }
            char v60 = 8;
LABEL_99:
            *(unsigned char *)(a1 + v64[97]) |= v60;
            continue;
          }
        }
LABEL_100:
        if (v63) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v69)
        {
          char v61 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 4:
        if ((v66 & 1) == 0) {
          goto LABEL_70;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v52 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v53 = *v20;
          unint64_t v54 = *(void *)(v3 + v53);
          if (v54 == -1 || v54 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(v3 + *v22) + v54);
            *(void *)(v3 + v53) = v54 + 1;
            v52 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              BOOL v29 = v51++ >= 9;
              if (v29)
              {
                LODWORD(v52) = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v52) = 0;
        }
LABEL_79:
        *(_DWORD *)(a1 + 52) = v52;
        goto LABEL_86;
      default:
        if ((v65 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          char v56 = PBReaderSkipValueWithTag();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v56 & 1) == 0)
          {
            int v63 = 0;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v44 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v45 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v44;
          }
          int v46 = PBUnknownFieldAdd();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v46)
          {
            int v63 = 0;
            uint64_t v64 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
            goto LABEL_89;
          }
        }
        goto LABEL_86;
    }
  }
}

void sub_18A1673FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A167E20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPRapInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPRapInfoReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPRapInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPRapInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18A167FC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPRapInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A16802C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRapResponseIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2) {
            goto LABEL_46;
          }
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v16 = 0;
          break;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPRapNotificationIsValid(a1)) {
            goto LABEL_46;
          }
          goto LABEL_41;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPDisplayDetailsIsValid(a1)) {
            goto LABEL_46;
          }
          goto LABEL_41;
        case 5u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPUserFormDetailsIsValid(a1)) {
            goto LABEL_46;
          }
LABEL_41:
          PBReaderRecallMark();
          continue;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v17 = *v2;
        unint64_t v18 = *(void *)&a1[v17];
        if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v19 = v18 + 1;
        int v20 = *(char *)(*(void *)&a1[*v5] + v18);
        *(void *)&a1[v17] = v19;
        if (v20 < 0 && v16++ <= 8) {
          continue;
        }
        goto LABEL_42;
      }
      a1[*v4] = 1;
LABEL_42:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_18A1684E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEORPRapInfoIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 60) & 0x28) != 0) {
    return (os_unfair_lock_s *)1;
  }
  if ((*(unsigned char *)(a1 + 60) & 0x10) == 0) {
    return 0;
  }
  id v3 = *(os_unfair_lock_s **)(a1 + 32);

  return GEORPRapResponseIsDirty(v3);
}

os_unfair_lock_s *GEORPRapInfoIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL v2 = _GEORPRapInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return v2;
  }
  return result;
}

void sub_18A168918(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A168CA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A168F58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapNotificationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v52 = v17;
        char v53 = v18 | v17;
        if ((v18 | v7)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        int v20 = (int *)MEMORY[0x1E4F940E8];
        char v54 = (v19 == 0) | v18;
        BOOL v55 = v18;
        char v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_66;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      unint64_t v27 = *(void *)(v3 + v26);
      if (v27 == -1 || v27 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v27 + 1;
      v25 |= (unint64_t)(v28 & 0x7F) << v23;
      if ((v28 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
LABEL_25:
    int v30 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v30 || (v25 & 7) == 4)
    {
LABEL_66:
      int v50 = 1;
      goto LABEL_67;
    }
    unint64_t v32 = v25 >> 3;
    BOOL v33 = v55;
    if ((v54 & 1) == 0)
    {
      int v34 = v19;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    if (v32 == 2) {
      break;
    }
    if (v32 == 1)
    {
      if (!v33) {
        goto LABEL_57;
      }
      if ((*(unsigned char *)(a1 + 52) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_85;
        }
        char v38 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1)) {
          goto LABEL_84;
        }
        PBReaderRecallMark();
        uint64_t v39 = 32;
LABEL_50:
        uint64_t v40 = *(void **)(a1 + v39);
        *(void *)(a1 + v39) = v38;

        --v8;
LABEL_64:
        char v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_85;
      }
      char v45 = 32 * *(unsigned char *)(a1 + 52);
LABEL_63:
      v8 += v45 >> 7;
      goto LABEL_64;
    }
    if (v52 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_57:
      char v44 = PBReaderSkipValueWithTag();
      char v21 = (int *)MEMORY[0x1E4F940C8];
      if ((v44 & 1) == 0)
      {
        int v50 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      unint64_t v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    int v43 = PBUnknownFieldAdd();
    char v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v43)
    {
      int v50 = 0;
      unsigned int v51 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v53 & 1 | (v8 != 0))) {
      goto LABEL_66;
    }
  }
  if (!v33) {
    goto LABEL_57;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_85;
    }
    char v45 = *(unsigned char *)(a1 + 52) << 6;
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_85;
  }
  char v38 = objc_alloc_init(GEOLocalizedString);
  if (GEOLocalizedStringReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v39 = 24;
    goto LABEL_50;
  }
LABEL_84:

LABEL_85:
  int v50 = 0;
  char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_67:
  unsigned int v51 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
  if ((v52 & 1) == 0) {
    goto LABEL_69;
  }
LABEL_68:
  *(unsigned char *)(a1 + v51[106]) |= 1u;
LABEL_69:
  if (v55 || (v50 & 1) == 0)
  {
    *(unsigned char *)(a1 + v51[106]) |= 4u;
    *(unsigned char *)(a1 + v51[106]) |= 2u;
    goto LABEL_78;
  }
  if (v19)
  {
    while (1)
    {
      int v47 = *v19++;
      int v46 = v47;
      if (v47 == 1) {
        break;
      }
      if (v46 == 2)
      {
LABEL_74:
        *(unsigned char *)(a1 + v51[106]) |= v46;
      }
      else if (!v46)
      {
        goto LABEL_78;
      }
    }
    LOBYTE(v46) = 4;
    goto LABEL_74;
  }
LABEL_78:
  if (v50) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v55)
  {
    char v48 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18A16962C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A169C74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapNotificationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPRapNotificationReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORPRapNotificationReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORPRapNotificationReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPRapNotificationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18A169E30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapNotificationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPRapNotificationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A169E94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRapNotificationIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_18A16A200(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPRapNotificationIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if (GEOLocalizedStringIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 52);
  }
  if ((v2 & 2) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 24);

  return GEOLocalizedStringIsDirty(v4);
}

os_unfair_lock_s *GEORPRapNotificationIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEORPRapNotificationIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A16A544(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A16A7C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRapQueryParametersReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v17 = PBReaderReadString();
          if (v17) {
            [a1 addFeedbackId:v17];
          }
        }
        else
        {
          if (!a1[1])
          {
            id v18 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v19 = (void *)a1[1];
            a1[1] = v18;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_28;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_28:
    BOOL v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_18A16B0B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRapQueryParametersReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPRapQueryParametersReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A16B11C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A16B8A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapResponseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFEFFFCFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 72) & 2) != 0));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 2;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v60 = v18;
        char v61 = v19 | v18;
        if ((v19 | v9)) {
          BOOL v20 = 0;
        }
        else {
          BOOL v20 = a3;
        }
        char v62 = (v20 == 0) | v19;
        BOOL v63 = v19;
        char v21 = (int *)MEMORY[0x1E4F940E8];
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        char v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_90;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      unint64_t v28 = *(void *)(v3 + v27);
      if (v28 == -1 || v28 >= *(void *)(v3 + *v7)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v28 + 1;
      v26 |= (unint64_t)(v29 & 0x7F) << v24;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v30 = v25++ >= 9;
      if (v30)
      {
        unint64_t v26 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v31 || (v26 & 7) == 4)
    {
LABEL_90:
      int v58 = 1;
      goto LABEL_91;
    }
    unint64_t v33 = v26 >> 3;
    BOOL v34 = v63;
    if ((v62 & 1) == 0)
    {
      int v35 = v20;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x10) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v39;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_108;
        }
        char v53 = 8 * *(unsigned char *)(a1 + 72);
        goto LABEL_87;
      case 2:
        if ((v9 & 1) == 0) {
          goto LABEL_73;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        while (2)
        {
          uint64_t v47 = *v21;
          unint64_t v48 = *(void *)(v3 + v47);
          if (v48 == -1 || v48 >= *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v23) + v48);
            *(void *)(v3 + v47) = v48 + 1;
            v46 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              BOOL v30 = v45++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v46) = 0;
        }
LABEL_78:
        *(_DWORD *)(a1 + 68) = v46;
        goto LABEL_89;
      case 3:
        if (!v34) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 72) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_108;
          }
          char v53 = 16 * *(unsigned char *)(a1 + 72);
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_108;
        }
        int v50 = objc_alloc_init(GEORPRapNotification);
        if (!GEORPRapNotificationReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_107;
        }
        PBReaderRecallMark();
        uint64_t v51 = 32;
        goto LABEL_71;
      case 4:
        if (!v34) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 72) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_108;
          }
          char v53 = 32 * *(unsigned char *)(a1 + 72);
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_108;
        }
        int v50 = objc_alloc_init(GEORPDisplayDetails);
        if (!GEORPDisplayDetailsReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_107;
        }
        PBReaderRecallMark();
        uint64_t v51 = 24;
        goto LABEL_71;
      case 5:
        if (!v34) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_108;
          }
          char v53 = 4 * *(unsigned char *)(a1 + 72);
LABEL_87:
          v8 += v53 >> 7;
LABEL_88:
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_89:
          if (!(v61 & 1 | (v8 != 0))) {
            goto LABEL_90;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_108;
        }
        int v50 = objc_alloc_init(GEORPUserFormDetails);
        if (GEORPUserFormDetailsReadAllFrom((uint64_t)v50, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v51 = 48;
LABEL_71:
          uint64_t v40 = *(void **)(a1 + v51);
          *(void *)(a1 + v5objc_destroyWeak(this + 1) = v50;
LABEL_72:

          --v8;
          goto LABEL_88;
        }
LABEL_107:

LABEL_108:
        int v58 = 0;
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_91:
        int v59 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
        if (v60) {
LABEL_92:
        }
          *(unsigned char *)(a1 + v59[116]) |= 2u;
        if (v63 || (v58 & 1) == 0)
        {
          *(unsigned char *)(a1 + v59[116]) |= 0x10u;
          *(unsigned char *)(a1 + v59[116]) |= 8u;
          *(unsigned char *)(a1 + v59[116]) |= 4u;
          *(unsigned char *)(a1 + v59[116]) |= 0x20u;
        }
        else if (v20)
        {
          while (1)
          {
            int v54 = *v20++;
            char v55 = 16;
            switch(v54)
            {
              case 0:
                goto LABEL_101;
              case 1:
                goto LABEL_100;
              case 3:
                char v55 = 8;
                goto LABEL_100;
              case 4:
                char v55 = 4;
                goto LABEL_100;
              case 5:
                char v55 = 32;
LABEL_100:
                *(unsigned char *)(a1 + v59[116]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_101:
        if (v58) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v63)
        {
          char v56 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v60 & 1) == 0 || (*(unsigned char *)(a1 + 72) & 2) != 0)
        {
LABEL_73:
          char v52 = PBReaderSkipValueWithTag();
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v52 & 1) == 0)
          {
            int v58 = 0;
            goto LABEL_91;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v43)
          {
            int v58 = 0;
            int v59 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
            goto LABEL_92;
          }
        }
        goto LABEL_89;
    }
  }
}

void sub_18A16C3F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A16C564(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A16C6D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A16D058(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORPRapResponseReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORPRapResponseReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORPRapResponseReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORPRapResponseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 48) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18A16D224(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapResponseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORPRapResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A16D288(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPUserFormDetailsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v13 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v15 = 0;
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

void sub_18A16D674(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPRapResponseIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 72);
  if ((v2 & 0x50) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEORPRapNotificationIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 72);
  }
  if ((v2 & 4) != 0)
  {
    if ((GEORPDisplayDetailsIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) == 0)
    {
      unsigned int v2 = *(unsigned __int8 *)(a1 + 72);
      return (v2 >> 5) & 1;
    }
    return 1;
  }
  return (v2 >> 5) & 1;
}

os_unfair_lock_s *GEORPRapResponseIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORPRapResponseIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A16DAE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A16DEA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPUserFormDetailsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_32;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v19) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v19;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v23 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v24 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v23;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_18A16E874(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPUserFormDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORPUserFormDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A16E8D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A170168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18A1732B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id GEOGetMapsProxyAuthLog()
{
  if (qword_1EB2A0848 != -1) {
    dispatch_once(&qword_1EB2A0848, &__block_literal_global_211);
  }
  os_log_t v0 = (void *)_MergedGlobals_344;

  return v0;
}

void __GEOGetMapsProxyAuthLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "MapsProxyAuth");
  id v1 = (void *)_MergedGlobals_344;
  _MergedGlobals_344 = (uint64_t)v0;
}

void sub_18A173968(void *a1)
{
}

id _buildRequest(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  if (v7
    || (GEOGetURLWithSource(39, 0), (id v7 = (id)objc_claimAutoreleasedReturnValue()) != 0)
    || (GEOGetURLWithSource(51, 0), (id v7 = (id)objc_claimAutoreleasedReturnValue()) != 0))
  {
    uint64_t v11 = [v7 URLByAppendingPathComponent:v8];

    if ([v10 count])
    {
      unint64_t v12 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v10, "count"));
      v20[0] = MEMORY[0x1E4F143A8];
      v20[1] = 3221225472;
      v20[2] = ___buildRequest_block_invoke;
      void v20[3] = &unk_1E53DFD80;
      id v21 = v12;
      id v13 = v12;
      [v10 enumerateKeysAndObjectsUsingBlock:v20];
      BOOL v14 = (void *)[objc_alloc(MEMORY[0x1E4F29088]) initWithURL:v11 resolvingAgainstBaseURL:1];
      [v14 setQueryItems:v13];
      uint64_t v15 = [v14 URL];

      uint64_t v11 = (void *)v15;
    }
    uint64_t v16 = [MEMORY[0x1E4F28E88] requestWithURL:v11];
    [v16 setHTTPMethod:@"GET"];
    v18[0] = MEMORY[0x1E4F143A8];
    v18[1] = 3221225472;
    v18[2] = ___buildRequest_block_invoke_2;
    v18[3] = &unk_1E53DFD80;
    id v7 = v16;
    id v19 = v7;
    [v9 enumerateKeysAndObjectsUsingBlock:v18];
  }

  return v7;
}

id _defaultURLSession()
{
  id WeakRetained = objc_loadWeakRetained(&_defaultURLSession__session);
  if (!WeakRetained)
  {
    id v1 = [MEMORY[0x1E4F290F0] ephemeralSessionConfiguration];
    objc_msgSend(v1, "setTimeoutIntervalForResource:", GEOConfigGetDouble(GeoServicesConfig_ClientAuthFeatureFlagsRequestTimeout, (uint64_t)off_1E9114AE8));
    id WeakRetained = [MEMORY[0x1E4F290E0] sessionWithConfiguration:v1];
    objc_storeWeak(&_defaultURLSession__session, WeakRetained);
  }

  return WeakRetained;
}

__CFString *_responseDescription(void *a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v2 = [v1 statusCode];
    id v3 = [MEMORY[0x1E4F28E78] string];
    [(__CFString *)v3 appendFormat:@"%d: ", v2];
    id v13 = v1;
    uint64_t v4 = [v1 allHeaderFields];
    [(__CFString *)v3 appendString:@"{ "];
    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    uint64_t v5 = [&unk_1ED73F2F8 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v15;
      char v8 = 1;
      do
      {
        for (uint64_t i = 0; i != v6; ++i)
        {
          if (*(void *)v15 != v7) {
            objc_enumerationMutation(&unk_1ED73F2F8);
          }
          uint64_t v10 = *(void *)(*((void *)&v14 + 1) + 8 * i);
          uint64_t v11 = [v4 objectForKeyedSubscript:v10];
          if (v11)
          {
            if ((v8 & 1) == 0) {
              [(__CFString *)v3 appendString:@" / "];
            }
            [(__CFString *)v3 appendString:v10];
            [(__CFString *)v3 appendString:@" = "];
            [(__CFString *)v3 appendString:v11];
            char v8 = 0;
          }
        }
        uint64_t v6 = [&unk_1ED73F2F8 countByEnumeratingWithState:&v14 objects:v18 count:16];
      }
      while (v6);
    }
    [(__CFString *)v3 appendString:@" }"];

    id v1 = v13;
  }
  else
  {
    id v3 = @"<invalid type>";
  }

  return v3;
}

uint64_t _httpStatusCodeSafe(void *a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v2 = [v1 statusCode];
  }
  else
  {
    if (v1)
    {
      id v3 = GEOGetMapsProxyAuthLog();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_FAULT))
      {
        uint64_t v4 = (objc_class *)objc_opt_class();
        uint64_t v5 = NSStringFromClass(v4);
        int v7 = 138412290;
        char v8 = v5;
        _os_log_impl(&dword_188D96000, v3, OS_LOG_TYPE_FAULT, "Expected response of type NSHTTPURLResponse, got %@", (uint8_t *)&v7, 0xCu);
      }
    }
    uint64_t v2 = 0;
  }

  return v2;
}

void sub_18A17540C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
}

BOOL GEOAuthProxyURLIsValid(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 host];
    if (v3)
    {
      uint64_t v4 = [v2 port];
      BOOL v5 = v4 == 0;
    }
    else
    {
      BOOL v5 = 1;
    }
  }
  else
  {
    BOOL v5 = 1;
  }

  return !v5;
}

void sub_18A177988(_Unwind_Exception *a1)
{
}

void sub_18A177EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A177F14(_Unwind_Exception *a1)
{
}

void ___buildRequest_block_invoke(uint64_t a1, void *a2, void *a3)
{
  BOOL v5 = (objc_class *)MEMORY[0x1E4F290C8];
  id v6 = a3;
  id v7 = a2;
  id v9 = (id)[[v5 alloc] initWithName:v7 value:v6];

  char v8 = v9;
  if (v9)
  {
    [*(id *)(a1 + 32) addObject:v9];
    char v8 = v9;
  }
}

uint64_t ___buildRequest_block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) setValue:a3 forHTTPHeaderField:a2];
}

BOOL _GEOMapItemIsEqualForWithinDistanceExcludingName(void *a1, void *a2, long double a3)
{
  id v5 = a1;
  id v6 = a2;
  if ([v5 _placeType]
    && [v6 _placeType]
    && (int v7 = [v5 _placeType], v7 != objc_msgSend(v6, "_placeType"))
    || ([v5 coordinate], fabs(v9 + 180.0) < 0.00000001) && fabs(v8 + 180.0) < 0.00000001
    || ([v6 coordinate], fabs(v11 + 180.0) < 0.00000001) && fabs(v10 + 180.0) < 0.00000001)
  {
    BOOL v12 = 0;
  }
  else
  {
    [v5 coordinate];
    double v15 = v14;
    double v17 = v16;
    [v6 coordinate];
    BOOL v12 = GEOCalculateDistanceRadius(v15, v17, v18, v19, 6367000.0) <= a3;
  }

  return v12;
}

BOOL GEOMapItemIsEqualToMapItemForPurpose(void *a1, void *a2, uint64_t a3)
{
  if (a1 && a2) {
    return GEOMapItemIsEqualToMapItemForPurposeWithinDistance(a1, a2, a3, 50.0);
  }
  else {
    return a1 == a2;
  }
}

id GEOGetGEOComposedRouteLog_0()
{
  if (qword_1EB2A0878 != -1) {
    dispatch_once(&qword_1EB2A0878, &__block_literal_global_212);
  }
  os_log_t v0 = (void *)_MergedGlobals_345;

  return v0;
}

void __GEOGetGEOComposedRouteLog_block_invoke_0()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOComposedRoute");
  id v1 = (void *)_MergedGlobals_345;
  _MergedGlobals_345 = (uint64_t)v0;
}

void _GEOConfigClearExpiredKey(void *a1, uint64_t a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  if (_GEODefaultsUseServer)
  {
    uint64_t v4 = [[GEOConfigClearExpiredKeyRequest alloc] initWithTraits:0 auditToken:0 throttleToken:0];
    [(GEOConfigClearExpiredKeyRequest *)v4 setKeyString:v3];
    [(GEOConfigClearExpiredKeyRequest *)v4 setKeyOptions:a2];
    id v5 = _GEODefaultsServerConnection();
    [(GEOXPCRequest *)v4 send:v5];
  }
  else
  {
    id v6 = _GEOConfigProxy();
    uint64_t v4 = [v6 configExpiryForOptions:a2];

    if ([(GEOConfigClearExpiredKeyRequest *)v4 getConfigKeyIsExpired:v3])
    {
      int v7 = j__GEOGetUserDefaultsLog();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
      {
        int v10 = 138412290;
        id v11 = v3;
        _os_log_impl(&dword_188D96000, v7, OS_LOG_TYPE_DEBUG, "Clearing value for key in DirectStore: %@", (uint8_t *)&v10, 0xCu);
      }

      double v8 = _GEOConfigProxy();
      double v9 = [v8 configStoreForOptions:a2];

      [v9 setConfigValue:0 forKey:v3 options:a2 synchronous:1];
      [(GEOConfigClearExpiredKeyRequest *)v4 clearConfigKeyExpiry:v3];
    }
  }
}

id GEOGetOfflineRequesterLog()
{
  if (qword_1EB2A0888 != -1) {
    dispatch_once(&qword_1EB2A0888, &__block_literal_global_135_0);
  }
  os_log_t v0 = (void *)_MergedGlobals_346;

  return v0;
}

id offlineServiceQueue()
{
  if (qword_1EB2A0890 != -1) {
    dispatch_once(&qword_1EB2A0890, &__block_literal_global_139);
  }
  os_log_t v0 = (void *)qword_1EB2A0898;

  return v0;
}

id offlineServiceConnection()
{
  if (qword_1EB2A08A8 != -1) {
    dispatch_once(&qword_1EB2A08A8, &__block_literal_global_142_0);
  }
  os_log_t v0 = (void *)qword_1EB2A08A0;

  return v0;
}

void sub_18A17CEC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __GEOGetOfflineRequesterLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "OfflineRequester");
  id v1 = (void *)_MergedGlobals_346;
  _MergedGlobals_346 = (uint64_t)v0;
}

void __offlineServiceQueue_block_invoke()
{
  uint64_t v0 = geo_dispatch_workloop_create_with_format();
  id v1 = (void *)qword_1EB2A0898;
  qword_1EB2A0898 = v0;
}

uint64_t __offlineServiceConnection_block_invoke()
{
  uint64_t v0 = [GEOXPCConnection alloc];
  id v1 = offlineServiceQueue();
  uint64_t v2 = [(GEOXPCConnection *)v0 initServerConnectionFor:0 debugIdentifier:@"offline.server" queue:v1 creationBlock:&__block_literal_global_149_0 reconnectBlock:0 eventHandler:&__block_literal_global_153_0];
  id v3 = (void *)qword_1EB2A08A0;
  qword_1EB2A08A0 = v2;

  uint64_t v4 = (void *)qword_1EB2A08A0;

  return [v4 setReconnectAutomatically:1];
}

xpc_connection_t __offlineServiceConnection_block_invoke_2(uint64_t a1, NSObject *a2)
{
  xpc_connection_t v2 = xpc_connection_create("com.apple.GeoServices.MapsOfflineServices", a2);

  return v2;
}

void __offlineServiceConnection_block_invoke_3(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  id v2 = a2;
  if (MEMORY[0x18C1213B0]() != MEMORY[0x1E4F145A8])
  {
    id v3 = (void *)MEMORY[0x18C121170](v2);
    uint64_t v4 = GEOGetOfflineRequesterLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = 136315138;
      id v6 = v3;
      _os_log_impl(&dword_188D96000, v4, OS_LOG_TYPE_ERROR, "Offline service sent unexpected message: %s", (uint8_t *)&v5, 0xCu);
    }

    free(v3);
  }
}

void sub_18A17D9FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A17E0B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A17E22C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A17E2F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A17E4C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A17E610(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A17E734(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A17EA40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A17EAE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A17EB88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A17EC08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A17FE40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __SearchFoundationLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  SearchFoundationLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getSFRequestAppClipInstallCommandClass_block_invoke(uint64_t a1)
{
  SearchFoundationLibrary();
  Class result = objc_getClass("SFRequestAppClipInstallCommand");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1EB2A08C0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)__getSFCallCommandClass_block_invoke(v3);
  }
  return result;
}

Class __getSFCallCommandClass_block_invoke(uint64_t a1)
{
  SearchFoundationLibrary();
  Class result = objc_getClass("SFCallCommand");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1EB2A08C8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)__getSFBeginMapsRoutingCommandClass_block_invoke(v3);
  }
  return result;
}

Class __getSFBeginMapsRoutingCommandClass_block_invoke(uint64_t a1)
{
  SearchFoundationLibrary();
  Class result = objc_getClass("SFBeginMapsRoutingCommand");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1EB2A08D0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)__GEOGetGEODaemonLog_block_invoke_1(v3);
  }
  return result;
}

void __GEOGetGEODaemonLog_block_invoke_1()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEODaemon");
  id v1 = (void *)_MergedGlobals_348;
  _MergedGlobals_348 = (uint64_t)v0;
}

void sub_18A1807E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18A180AC0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 88));
  _Unwind_Resume(a1);
}

void sub_18A181268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,id location)
{
}

void sub_18A181E58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A187E1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventRideBookedSessionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  int v9 = 0;
  int v10 = (const __int16 *)(a1 + 72);
  uint16x4_t v11 = (uint16x4_t)vld1_dup_s16(v10);
  unint64_t v12 = *(void *)&vshl_u16(v11, (uint16x4_t)0xFFF7FFF5FFF6FFF4) & 0xFF81FF81FF81FF81;
  LOWORD(v12) = vaddv_s16((int16x4_t)v12);
  unsigned int v13 = v12;
  while (1)
  {
    unsigned int v14 = a3[v7];
    if (v14 >= 0xFFFFFFFE)
    {
      int v9 = 1;
      goto LABEL_9;
    }
    if (v14 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v14)
  {
    ++v13;
    goto LABEL_9;
  }
  int v15 = v9 | (v13 > 2);
  if ((v15 | v8)) {
    double v16 = 0;
  }
  else {
    double v16 = a3;
  }
  LODWORD(v17) = v15;
  char v114 = (v16 == 0) | v15;
  double v18 = (int *)MEMORY[0x1E4F940E8];
  double v19 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_175;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_175:
      if (v17)
      {
        char v108 = 1;
        goto LABEL_184;
      }
      if (v16)
      {
        while (1)
        {
          int v109 = *v16++;
          __int16 v110 = 1024;
          switch(v109)
          {
            case 7:
              goto LABEL_182;
            case 8:
              __int16 v110 = 4096;
              goto LABEL_182;
            case 9:
              __int16 v110 = 2048;
              goto LABEL_182;
            case 13:
              __int16 v110 = 512;
LABEL_182:
              *(_WORD *)(a1 + 72) |= v110;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_185;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = (char)v17;
    if ((v114 & 1) == 0)
    {
      unint64_t v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_127;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(_WORD *)(a1 + 72) |= 2u;
        while (1)
        {
          uint64_t v40 = *v18;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v20) + v41);
          *(void *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_130;
          }
          v37 += 7;
          BOOL v28 = v38++ >= 9;
          if (v28)
          {
            uint64_t v39 = 0;
            goto LABEL_132;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_130:
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v39 = 0;
        }
LABEL_132:
        BOOL v105 = v39 != 0;
        uint64_t v106 = 64;
        goto LABEL_161;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_127;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(_WORD *)(a1 + 72) |= 4u;
        while (2)
        {
          uint64_t v48 = *v18;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v20) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v28 = v46++ >= 9;
              if (v28)
              {
                uint64_t v47 = 0;
                goto LABEL_136;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v47 = 0;
        }
LABEL_136:
        BOOL v105 = v47 != 0;
        uint64_t v106 = 65;
        goto LABEL_161;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_127;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        *(_WORD *)(a1 + 72) |= 8u;
        while (2)
        {
          uint64_t v55 = *v18;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v20) + v56);
            *(void *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              BOOL v28 = v53++ >= 9;
              if (v28)
              {
                uint64_t v54 = 0;
                goto LABEL_140;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v54 = 0;
        }
LABEL_140:
        BOOL v105 = v54 != 0;
        uint64_t v106 = 66;
        goto LABEL_161;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_127;
        }
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v61 = 0;
        *(_WORD *)(a1 + 72) |= 0x100u;
        while (2)
        {
          uint64_t v62 = *v18;
          uint64_t v63 = *(void *)(v3 + v62);
          unint64_t v64 = v63 + 1;
          if (v63 == -1 || v64 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(v3 + *v20) + v63);
            *(void *)(v3 + v62) = v64;
            v61 |= (unint64_t)(v65 & 0x7F) << v59;
            if (v65 < 0)
            {
              v59 += 7;
              BOOL v28 = v60++ >= 9;
              if (v28)
              {
                uint64_t v61 = 0;
                goto LABEL_144;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v61 = 0;
        }
LABEL_144:
        BOOL v105 = v61 != 0;
        uint64_t v106 = 71;
        goto LABEL_161;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_127;
        }
        char v66 = 0;
        unsigned int v67 = 0;
        uint64_t v68 = 0;
        *(_WORD *)(a1 + 72) |= 0x40u;
        while (2)
        {
          uint64_t v69 = *v18;
          uint64_t v70 = *(void *)(v3 + v69);
          unint64_t v71 = v70 + 1;
          if (v70 == -1 || v71 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(v3 + *v20) + v70);
            *(void *)(v3 + v69) = v71;
            v68 |= (unint64_t)(v72 & 0x7F) << v66;
            if (v72 < 0)
            {
              v66 += 7;
              BOOL v28 = v67++ >= 9;
              if (v28)
              {
                uint64_t v68 = 0;
                goto LABEL_148;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v68 = 0;
        }
LABEL_148:
        BOOL v105 = v68 != 0;
        uint64_t v106 = 69;
        goto LABEL_161;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_127;
        }
        char v73 = 0;
        unsigned int v74 = 0;
        uint64_t v75 = 0;
        *(_WORD *)(a1 + 72) |= 0x80u;
        while (2)
        {
          uint64_t v76 = *v18;
          uint64_t v77 = *(void *)(v3 + v76);
          unint64_t v78 = v77 + 1;
          if (v77 == -1 || v78 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v79 = *(unsigned char *)(*(void *)(v3 + *v20) + v77);
            *(void *)(v3 + v76) = v78;
            v75 |= (unint64_t)(v79 & 0x7F) << v73;
            if (v79 < 0)
            {
              v73 += 7;
              BOOL v28 = v74++ >= 9;
              if (v28)
              {
                uint64_t v75 = 0;
                goto LABEL_152;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v75 = 0;
        }
LABEL_152:
        BOOL v105 = v75 != 0;
        uint64_t v106 = 70;
        goto LABEL_161;
      case 7:
        if (!v32) {
          goto LABEL_127;
        }
        if ((*(_WORD *)(a1 + 72) & 0x400) == 0)
        {
          uint64_t v80 = PBReaderReadString();
          uint64_t v81 = 24;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_190;
        }
        __int16 v107 = 32 * *(_WORD *)(a1 + 72);
        goto LABEL_172;
      case 8:
        if (!v32) {
          goto LABEL_127;
        }
        if ((*(_WORD *)(a1 + 72) & 0x1000) == 0)
        {
          uint64_t v80 = PBReaderReadString();
          uint64_t v81 = 40;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_190;
        }
        __int16 v107 = 8 * *(_WORD *)(a1 + 72);
        goto LABEL_172;
      case 9:
        if (!v32) {
          goto LABEL_127;
        }
        if ((*(_WORD *)(a1 + 72) & 0x800) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_190:
            char v108 = 0;
            goto LABEL_192;
          }
          __int16 v107 = 16 * *(_WORD *)(a1 + 72);
LABEL_172:
          v7 += v107 >> 15;
        }
        else
        {
          uint64_t v80 = PBReaderReadString();
          uint64_t v81 = 32;
LABEL_97:
          id v82 = *(void **)(a1 + v81);
          *(void *)(a1 + v8objc_destroyWeak(this + 1) = v80;

          --v7;
        }
        goto LABEL_173;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_127;
        }
        char v83 = 0;
        unsigned int v84 = 0;
        uint64_t v85 = 0;
        *(_WORD *)(a1 + 72) |= 0x10u;
        while (2)
        {
          uint64_t v86 = *v18;
          uint64_t v87 = *(void *)(v3 + v86);
          unint64_t v88 = v87 + 1;
          if (v87 == -1 || v88 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v89 = *(unsigned char *)(*(void *)(v3 + *v20) + v87);
            *(void *)(v3 + v86) = v88;
            v85 |= (unint64_t)(v89 & 0x7F) << v83;
            if (v89 < 0)
            {
              v83 += 7;
              BOOL v28 = v84++ >= 9;
              if (v28)
              {
                uint64_t v85 = 0;
                goto LABEL_156;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v85 = 0;
        }
LABEL_156:
        BOOL v105 = v85 != 0;
        uint64_t v106 = 67;
        goto LABEL_161;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_127;
        }
        char v90 = 0;
        unsigned int v91 = 0;
        uint64_t v92 = 0;
        *(_WORD *)(a1 + 72) |= 0x20u;
        while (2)
        {
          uint64_t v93 = *v18;
          uint64_t v94 = *(void *)(v3 + v93);
          unint64_t v95 = v94 + 1;
          if (v94 == -1 || v95 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v96 = *(unsigned char *)(*(void *)(v3 + *v20) + v94);
            *(void *)(v3 + v93) = v95;
            v92 |= (unint64_t)(v96 & 0x7F) << v90;
            if (v96 < 0)
            {
              v90 += 7;
              BOOL v28 = v91++ >= 9;
              if (v28)
              {
                uint64_t v92 = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v92 = 0;
        }
LABEL_160:
        BOOL v105 = v92 != 0;
        uint64_t v106 = 68;
LABEL_161:
        *(unsigned char *)(a1 + v106) = v105;
        goto LABEL_174;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_127;
        }
        char v97 = 0;
        unsigned int v98 = 0;
        uint64_t v99 = 0;
        *(_WORD *)(a1 + 72) |= 1u;
        while (2)
        {
          uint64_t v100 = *v18;
          uint64_t v101 = *(void *)(v3 + v100);
          unint64_t v102 = v101 + 1;
          if (v101 == -1 || v102 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v103 = *(unsigned char *)(*(void *)(v3 + *v20) + v101);
            *(void *)(v3 + v100) = v102;
            v99 |= (unint64_t)(v103 & 0x7F) << v97;
            if (v103 < 0)
            {
              v97 += 7;
              BOOL v28 = v98++ >= 9;
              if (v28)
              {
                LODWORD(v99) = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v99) = 0;
        }
LABEL_165:
        *(_DWORD *)(a1 + 60) = v99;
        goto LABEL_174;
      case 13:
        if (!v32 || (*(_WORD *)(a1 + 72) & 0x200) != 0)
        {
LABEL_127:
          char v104 = PBReaderSkipValueWithTag();
          double v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v104 & 1) == 0)
          {
LABEL_183:
            char v108 = 0;
            goto LABEL_184;
          }
          goto LABEL_174;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_190;
        }
        int v113 = (int)v17;
        double v17 = objc_alloc_init(GEORideBookingIntentResponseFailure);
        if (GEORideBookingIntentResponseFailureReadAllFrom((uint64_t)v17, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOLogMsgEventRideBookedSession _addNoFlagsIntentResponseFailure:](a1, v17);

          LODWORD(v17) = v113;
LABEL_173:
          double v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_174:
          if (!(v17 & 1 | (v7 != 0))) {
            goto LABEL_175;
          }
          continue;
        }

        char v108 = 0;
        LOBYTE(v17) = v113;
LABEL_192:
        double v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_184:
        *(_WORD *)(a1 + 72) |= 0x400u;
        *(_WORD *)(a1 + 72) |= 0x1000u;
        *(_WORD *)(a1 + 72) |= 0x800u;
        *(_WORD *)(a1 + 72) |= 0x200u;
        if (v108)
        {
LABEL_185:
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v17) {
            goto LABEL_186;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v17)
          {
LABEL_186:
            uint64_t v111 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v44 = PBReaderSkipValueWithTag();
        double v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v44) {
          goto LABEL_183;
        }
        goto LABEL_174;
    }
  }
}

void sub_18A188B84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A188CEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A18910C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A18A1BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgEventRideBookedSessionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 16);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOLogMsgEventRideBookedSessionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventRideBookedSessionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOLogMsgEventRideBookedSessionReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOLogMsgEventRideBookedSessionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventRideBookedSessionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgEventRideBookedSessionCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18A18A44C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventRideBookedSessionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventRideBookedSessionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A18A4B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventRideBookedSessionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_107;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_98;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_99;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_107;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_98;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_99;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_107;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_98;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_99;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_107;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_98;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_99;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_107;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_98;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_99;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_107;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_98;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_99;
          }
        case 7u:
          if (v15 == 2) {
            goto LABEL_72;
          }
          goto LABEL_107;
        case 8u:
          if (v15 == 2) {
            goto LABEL_72;
          }
          goto LABEL_107;
        case 9u:
          if (v15 == 2) {
            goto LABEL_72;
          }
          goto LABEL_107;
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_107;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_98;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_99;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_107;
          }
          unsigned int v53 = 0;
          while (1)
          {
            uint64_t v54 = *v2;
            uint64_t v55 = *(void *)&a1[v54];
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
              goto LABEL_98;
            }
            int v57 = *(char *)(*(void *)&a1[*v5] + v55);
            *(void *)&a1[v54] = v56;
            if (v57 < 0)
            {
              BOOL v22 = v53++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_99;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_107;
          }
          unsigned int v58 = 0;
          break;
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORideBookingIntentResponseFailureIsValid(a1)) {
            goto LABEL_107;
          }
          PBReaderRecallMark();
          continue;
        default:
LABEL_72:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_107:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v59 = *v2;
        uint64_t v60 = *(void *)&a1[v59];
        unint64_t v61 = v60 + 1;
        if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
          break;
        }
        int v62 = *(char *)(*(void *)&a1[*v5] + v60);
        *(void *)&a1[v59] = v61;
        if (v62 < 0)
        {
          BOOL v22 = v58++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_99;
      }
LABEL_98:
      a1[*v4] = 1;
LABEL_99:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v63 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v63;
}

BOOL GEORideBookingIntentResponseFailureIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_18A18AFD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventRideBookedSessionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(_WORD *)(a1 + 72) & 0x3E00) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_18A18B700(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A18C08C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventRideBookingSessionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 108);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 104)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unint64_t v11 = (const float *)(a1 + 140);
  uint32x4_t v12 = (uint32x4_t)vld1q_dup_f32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  unsigned int v14 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A641340), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A641350), v13)));
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v17 = v14 > 5;
        char v18 = v10 | v17;
        if (((v10 | v17) | v8)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        char v152 = (v19 == 0) | v18;
        int v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
        char v151 = v10 | v17;
        break;
      default:
        ++v14;
LABEL_6:
        uint64_t v15 = v9;
        uint64_t v16 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        continue;
    }
    break;
  }
  while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v21))
  {
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_23;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
LABEL_23:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_25:
    if (v31 || (v25 & 7) == 4) {
      break;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v18;
    if ((v152 & 1) == 0)
    {
      uint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_187;
        }
        if ((*(unsigned char *)(a1 + 142) & 0x20) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 80;
          goto LABEL_162;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_287;
        }
        int v142 = (int)(*(_DWORD *)(a1 + 140) << 10) >> 31;
        goto LABEL_255;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_187;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + 140) |= 8u;
        while (2)
        {
          uint64_t v45 = *v20;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v22) + v46);
            *(void *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v30 = v43++ >= 9;
              if (v30)
              {
                LODWORD(v44) = 0;
                goto LABEL_192;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v44) = 0;
        }
LABEL_192:
        uint64_t v139 = 116;
        goto LABEL_242;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_187;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + 140) |= 0x10u;
        while (2)
        {
          uint64_t v51 = *v20;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v22) + v52);
            *(void *)(v3 + v5objc_destroyWeak(this + 1) = v53;
            v44 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v30 = v50++ >= 9;
              if (v30)
              {
                LODWORD(v44) = 0;
                goto LABEL_196;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v44) = 0;
        }
LABEL_196:
        uint64_t v139 = 120;
        goto LABEL_242;
      case 4:
        if (!v34) {
          goto LABEL_187;
        }
        if ((*(unsigned char *)(a1 + 142) & 8) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 64;
          goto LABEL_162;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_287;
        }
        int v142 = (int)(*(_DWORD *)(a1 + 140) << 12) >> 31;
        goto LABEL_255;
      case 5:
        if (!v34) {
          goto LABEL_187;
        }
        if ((*(unsigned char *)(a1 + 142) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_287;
          }
          int v142 = (int)(*(_DWORD *)(a1 + 140) << 13) >> 31;
          goto LABEL_255;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_287;
        }
        int v150 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v150, (void *)v3)) {
          goto LABEL_286;
        }
        PBReaderRecallMark();
        uint64_t v55 = 56;
        goto LABEL_71;
      case 6:
        if (!v34) {
          goto LABEL_187;
        }
        if ((*(unsigned char *)(a1 + 141) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_287;
          }
          int v142 = (int)(*(_DWORD *)(a1 + 140) << 16) >> 31;
LABEL_255:
          v7 += v142;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_287;
          }
          int v150 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v150, (void *)v3)) {
            goto LABEL_286;
          }
          PBReaderRecallMark();
          uint64_t v55 = 16;
LABEL_71:
          unint64_t v56 = *(void **)(a1 + v55);
          *(void *)(a1 + v55) = v150;
LABEL_163:

          --v7;
        }
        goto LABEL_256;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_187;
        }
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v59 = 0;
        *(_DWORD *)(a1 + 140) |= 0x100u;
        while (2)
        {
          uint64_t v60 = *v20;
          uint64_t v61 = *(void *)(v3 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(v3 + *v22) + v61);
            *(void *)(v3 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if (v63 < 0)
            {
              v57 += 7;
              BOOL v30 = v58++ >= 9;
              if (v30)
              {
                uint64_t v59 = 0;
                goto LABEL_200;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v59 = 0;
        }
LABEL_200:
        BOOL v140 = v59 != 0;
        uint64_t v141 = 133;
        goto LABEL_237;
      case 8:
        if (!v34) {
          goto LABEL_187;
        }
        if ((*(unsigned char *)(a1 + 142) & 0x40) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 88;
          goto LABEL_162;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_287;
        }
        int v142 = (int)(*(_DWORD *)(a1 + 140) << 9) >> 31;
        goto LABEL_255;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_187;
        }
        *(_DWORD *)(a1 + 140) |= 1u;
        uint64_t v64 = *v20;
        unint64_t v65 = *(void *)(v3 + v64);
        if (v65 <= 0xFFFFFFFFFFFFFFF7 && v65 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v66 = *(void *)(*(void *)(v3 + *v22) + v65);
          *(void *)(v3 + v64) = v65 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          uint64_t v66 = 0;
        }
        uint64_t v143 = 24;
        goto LABEL_261;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_187;
        }
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v69 = 0;
        *(_DWORD *)(a1 + 140) |= 0x800u;
        while (2)
        {
          uint64_t v70 = *v20;
          uint64_t v71 = *(void *)(v3 + v70);
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(v3 + *v22) + v71);
            *(void *)(v3 + v70) = v72;
            v69 |= (unint64_t)(v73 & 0x7F) << v67;
            if (v73 < 0)
            {
              v67 += 7;
              BOOL v30 = v68++ >= 9;
              if (v30)
              {
                uint64_t v69 = 0;
                goto LABEL_204;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v69 = 0;
        }
LABEL_204:
        BOOL v140 = v69 != 0;
        uint64_t v141 = 136;
        goto LABEL_237;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_187;
        }
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + 140) |= 0x20u;
        while (2)
        {
          uint64_t v76 = *v20;
          uint64_t v77 = *(void *)(v3 + v76);
          unint64_t v78 = v77 + 1;
          if (v77 == -1 || v78 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v79 = *(unsigned char *)(*(void *)(v3 + *v22) + v77);
            *(void *)(v3 + v76) = v78;
            v44 |= (unint64_t)(v79 & 0x7F) << v74;
            if (v79 < 0)
            {
              v74 += 7;
              BOOL v30 = v75++ >= 9;
              if (v30)
              {
                LODWORD(v44) = 0;
                goto LABEL_208;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v44) = 0;
        }
LABEL_208:
        uint64_t v139 = 124;
        goto LABEL_242;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_187;
        }
        char v80 = 0;
        unsigned int v81 = 0;
        uint64_t v82 = 0;
        *(_DWORD *)(a1 + 140) |= 0x2000u;
        while (2)
        {
          uint64_t v83 = *v20;
          uint64_t v84 = *(void *)(v3 + v83);
          unint64_t v85 = v84 + 1;
          if (v84 == -1 || v85 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v86 = *(unsigned char *)(*(void *)(v3 + *v22) + v84);
            *(void *)(v3 + v83) = v85;
            v82 |= (unint64_t)(v86 & 0x7F) << v80;
            if (v86 < 0)
            {
              v80 += 7;
              BOOL v30 = v81++ >= 9;
              if (v30)
              {
                uint64_t v82 = 0;
                goto LABEL_212;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v82 = 0;
        }
LABEL_212:
        BOOL v140 = v82 != 0;
        uint64_t v141 = 138;
        goto LABEL_237;
      case 13:
        if ((v8 & 1) == 0) {
          goto LABEL_187;
        }
        char v87 = 0;
        unsigned int v88 = 0;
        uint64_t v89 = 0;
        *(_DWORD *)(a1 + 140) |= 0x1000u;
        while (2)
        {
          uint64_t v90 = *v20;
          uint64_t v91 = *(void *)(v3 + v90);
          unint64_t v92 = v91 + 1;
          if (v91 == -1 || v92 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v93 = *(unsigned char *)(*(void *)(v3 + *v22) + v91);
            *(void *)(v3 + v90) = v92;
            v89 |= (unint64_t)(v93 & 0x7F) << v87;
            if (v93 < 0)
            {
              v87 += 7;
              BOOL v30 = v88++ >= 9;
              if (v30)
              {
                uint64_t v89 = 0;
                goto LABEL_216;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v89 = 0;
        }
LABEL_216:
        BOOL v140 = v89 != 0;
        uint64_t v141 = 137;
        goto LABEL_237;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_187;
        }
        *(_DWORD *)(a1 + 140) |= 2u;
        uint64_t v94 = *v20;
        unint64_t v95 = *(void *)(v3 + v94);
        if (v95 <= 0xFFFFFFFFFFFFFFF7 && v95 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v66 = *(void *)(*(void *)(v3 + *v22) + v95);
          *(void *)(v3 + v94) = v95 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          uint64_t v66 = 0;
        }
        uint64_t v143 = 32;
LABEL_261:
        *(void *)(a1 + v143) = v66;
        goto LABEL_262;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_187;
        }
        char v96 = 0;
        unsigned int v97 = 0;
        uint64_t v98 = 0;
        *(_DWORD *)(a1 + 140) |= 0x200u;
        while (2)
        {
          uint64_t v99 = *v20;
          uint64_t v100 = *(void *)(v3 + v99);
          unint64_t v101 = v100 + 1;
          if (v100 == -1 || v101 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v102 = *(unsigned char *)(*(void *)(v3 + *v22) + v100);
            *(void *)(v3 + v99) = v101;
            v98 |= (unint64_t)(v102 & 0x7F) << v96;
            if (v102 < 0)
            {
              v96 += 7;
              BOOL v30 = v97++ >= 9;
              if (v30)
              {
                uint64_t v98 = 0;
                goto LABEL_220;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v98 = 0;
        }
LABEL_220:
        BOOL v140 = v98 != 0;
        uint64_t v141 = 134;
        goto LABEL_237;
      case 16:
        if ((v8 & 1) == 0) {
          goto LABEL_187;
        }
        char v103 = 0;
        unsigned int v104 = 0;
        uint64_t v105 = 0;
        *(_DWORD *)(a1 + 140) |= 4u;
        while (2)
        {
          uint64_t v106 = *v20;
          uint64_t v107 = *(void *)(v3 + v106);
          unint64_t v108 = v107 + 1;
          if (v107 == -1 || v108 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v109 = *(unsigned char *)(*(void *)(v3 + *v22) + v107);
            *(void *)(v3 + v106) = v108;
            v105 |= (unint64_t)(v109 & 0x7F) << v103;
            if (v109 < 0)
            {
              v103 += 7;
              BOOL v30 = v104++ >= 9;
              if (v30)
              {
                uint64_t v105 = 0;
                goto LABEL_224;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v105 = 0;
        }
LABEL_224:
        *(void *)(a1 + 96) = v105;
        goto LABEL_262;
      case 17:
        if ((v8 & 1) == 0) {
          goto LABEL_187;
        }
        char v110 = 0;
        unsigned int v111 = 0;
        uint64_t v112 = 0;
        *(_DWORD *)(a1 + 140) |= 0x4000u;
        while (2)
        {
          uint64_t v113 = *v20;
          uint64_t v114 = *(void *)(v3 + v113);
          unint64_t v115 = v114 + 1;
          if (v114 == -1 || v115 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v116 = *(unsigned char *)(*(void *)(v3 + *v22) + v114);
            *(void *)(v3 + v113) = v115;
            v112 |= (unint64_t)(v116 & 0x7F) << v110;
            if (v116 < 0)
            {
              v110 += 7;
              BOOL v30 = v111++ >= 9;
              if (v30)
              {
                uint64_t v112 = 0;
                goto LABEL_228;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v112 = 0;
        }
LABEL_228:
        BOOL v140 = v112 != 0;
        uint64_t v141 = 139;
        goto LABEL_237;
      case 18:
        if ((v8 & 1) == 0) {
          goto LABEL_187;
        }
        char v117 = 0;
        unsigned int v118 = 0;
        uint64_t v119 = 0;
        *(_DWORD *)(a1 + 140) |= 0x400u;
        while (2)
        {
          uint64_t v120 = *v20;
          uint64_t v121 = *(void *)(v3 + v120);
          unint64_t v122 = v121 + 1;
          if (v121 == -1 || v122 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v123 = *(unsigned char *)(*(void *)(v3 + *v22) + v121);
            *(void *)(v3 + v120) = v122;
            v119 |= (unint64_t)(v123 & 0x7F) << v117;
            if (v123 < 0)
            {
              v117 += 7;
              BOOL v30 = v118++ >= 9;
              if (v30)
              {
                uint64_t v119 = 0;
                goto LABEL_232;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v119 = 0;
        }
LABEL_232:
        BOOL v140 = v119 != 0;
        uint64_t v141 = 135;
        goto LABEL_237;
      case 19:
        if (!v34 || (*(unsigned char *)(a1 + 142) & 1) != 0) {
          goto LABEL_187;
        }
        PBReaderReadString();
        uint64_t v124 = (GEOLatLng *)objc_claimAutoreleasedReturnValue();
        if (!v124) {
          goto LABEL_186;
        }
        int v150 = v124;
        -[GEOLogMsgEventRideBookingSession _addNoFlagsErrorMessage:](a1, v124);
        goto LABEL_185;
      case 20:
        if (!v34) {
          goto LABEL_187;
        }
        if ((*(unsigned char *)(a1 + 142) & 0x10) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 72;
LABEL_162:
          unint64_t v56 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
          goto LABEL_163;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_287;
        }
        int v142 = (int)(*(_DWORD *)(a1 + 140) << 11) >> 31;
        goto LABEL_255;
      case 21:
        if ((v8 & 1) == 0) {
          goto LABEL_187;
        }
        char v125 = 0;
        unsigned int v126 = 0;
        uint64_t v127 = 0;
        *(_DWORD *)(a1 + 140) |= 0x80u;
        while (2)
        {
          uint64_t v128 = *v20;
          uint64_t v129 = *(void *)(v3 + v128);
          unint64_t v130 = v129 + 1;
          if (v129 == -1 || v130 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v131 = *(unsigned char *)(*(void *)(v3 + *v22) + v129);
            *(void *)(v3 + v128) = v130;
            v127 |= (unint64_t)(v131 & 0x7F) << v125;
            if (v131 < 0)
            {
              v125 += 7;
              BOOL v30 = v126++ >= 9;
              if (v30)
              {
                uint64_t v127 = 0;
                goto LABEL_236;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v127 = 0;
        }
LABEL_236:
        BOOL v140 = v127 != 0;
        uint64_t v141 = 132;
LABEL_237:
        *(unsigned char *)(a1 + v14objc_destroyWeak(this + 1) = v140;
        goto LABEL_262;
      case 22:
        if ((v8 & 1) == 0) {
          goto LABEL_187;
        }
        char v132 = 0;
        unsigned int v133 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + 140) |= 0x40u;
        while (2)
        {
          uint64_t v134 = *v20;
          uint64_t v135 = *(void *)(v3 + v134);
          unint64_t v136 = v135 + 1;
          if (v135 == -1 || v136 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v137 = *(unsigned char *)(*(void *)(v3 + *v22) + v135);
            *(void *)(v3 + v134) = v136;
            v44 |= (unint64_t)(v137 & 0x7F) << v132;
            if (v137 < 0)
            {
              v132 += 7;
              BOOL v30 = v133++ >= 9;
              if (v30)
              {
                LODWORD(v44) = 0;
                goto LABEL_241;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v44) = 0;
        }
LABEL_241:
        uint64_t v139 = 128;
LABEL_242:
        *(_DWORD *)(a1 + v139) = v44;
        goto LABEL_262;
      case 23:
        if (!v34 || (*(unsigned char *)(a1 + 142) & 2) != 0)
        {
LABEL_187:
          char v138 = PBReaderSkipValueWithTag();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          char v18 = v151;
          if ((v138 & 1) == 0)
          {
LABEL_279:
            char v144 = 0;
            goto LABEL_280;
          }
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_287;
          }
          int v150 = objc_alloc_init(GEORideBookingIntentResponseFailure);
          if (!GEORideBookingIntentResponseFailureReadAllFrom((uint64_t)v150, (void *)v3))
          {
LABEL_286:

LABEL_287:
            char v144 = 0;
            char v18 = v151;
            BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_280:
            *(_DWORD *)(a1 + 140) |= 0x200000u;
            *(_DWORD *)(a1 + 140) |= 0x80000u;
            *(_DWORD *)(a1 + 140) |= 0x40000u;
            *(_DWORD *)(a1 + 140) |= 0x8000u;
            *(_DWORD *)(a1 + 140) |= 0x400000u;
            *(_DWORD *)(a1 + 140) |= 0x10000u;
            *(_DWORD *)(a1 + 140) |= 0x100000u;
            *(_DWORD *)(a1 + 140) |= 0x20000u;
            if (v144) {
              goto LABEL_281;
            }
            unint64_t v3 = 0;
            if (v18) {
              goto LABEL_282;
            }
            return v3;
          }
          PBReaderRecallMark();
          -[GEOLogMsgEventRideBookingSession _addNoFlagsIntentResponseFailure:](a1, v150);
LABEL_185:
          uint64_t v124 = v150;
LABEL_186:

LABEL_256:
          char v18 = v151;
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        }
LABEL_262:
        if (!(v18 & 1 | (v7 != 0))) {
          goto LABEL_263;
        }
        break;
      default:
        int v41 = PBReaderSkipValueWithTag();
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        char v18 = v151;
        if (!v41) {
          goto LABEL_279;
        }
        goto LABEL_262;
    }
  }
LABEL_263:
  if (v18)
  {
    char v144 = 1;
    goto LABEL_280;
  }
  if (!v19) {
    goto LABEL_281;
  }
  while (2)
  {
    while (1)
    {
      int v146 = *v19++;
      int v145 = v146;
      if (v146 <= 18) {
        break;
      }
      switch(v145)
      {
        case 19:
          int v147 = 0x10000;
          goto LABEL_278;
        case 20:
          int v147 = 0x100000;
LABEL_278:
          *(_DWORD *)(a1 + 140) |= v147;
          break;
        case 23:
          int v147 = 0x20000;
          goto LABEL_278;
      }
    }
    int v147 = 0x200000;
    switch(v145)
    {
      case 0:
        break;
      case 1:
        goto LABEL_278;
      case 4:
        int v147 = 0x80000;
        goto LABEL_278;
      case 5:
        int v147 = 0x40000;
        goto LABEL_278;
      case 6:
        int v147 = 0x8000;
        goto LABEL_278;
      case 8:
        int v147 = 0x400000;
        goto LABEL_278;
      default:
        continue;
    }
    break;
  }
LABEL_281:
  unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  if (v18)
  {
LABEL_282:
    char v148 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18A18D884(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A18D9F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A18DB64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A18DD5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A18E3D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A18E794(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A18EB54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A19055C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgEventRideBookingSessionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [a1[7] readAll:1];
  [a1[2] readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = a1[6];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOLogMsgEventRideBookingSessionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 108))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventRideBookingSessionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 104) = [v8 position];
  *(_DWORD *)(a1 + 108) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOLogMsgEventRideBookingSessionReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOLogMsgEventRideBookingSessionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventRideBookingSessionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgEventRideBookingSessionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 112));
  return Specified;
}

void sub_18A190814(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventRideBookingSessionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventRideBookingSessionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A190878(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventRideBookingSessionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2) {
            goto LABEL_151;
          }
          goto LABEL_124;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_151;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_142;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_148;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_151;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_142;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_148;
          }
        case 4u:
          if (v16 == 2) {
            goto LABEL_124;
          }
          goto LABEL_151;
        case 5u:
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_151;
          }
          goto LABEL_147;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_151;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_142;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_148;
          }
        case 8u:
          if (v16 == 2) {
            goto LABEL_124;
          }
          goto LABEL_151;
        case 9u:
        case 0xEu:
          if (v16 != 1) {
            goto LABEL_151;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_143;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_143;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_151;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_142;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v26 = v37++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_148;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_151;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_142;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v26 = v42++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_148;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_151;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v2;
            uint64_t v49 = *(void *)&a1[v48];
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
              goto LABEL_142;
            }
            int v51 = *(char *)(*(void *)&a1[*v5] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v26 = v47++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_148;
          }
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_151;
          }
          unsigned int v52 = 0;
          while (1)
          {
            uint64_t v53 = *v2;
            uint64_t v54 = *(void *)&a1[v53];
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
              goto LABEL_142;
            }
            int v56 = *(char *)(*(void *)&a1[*v5] + v54);
            *(void *)&a1[v53] = v55;
            if (v56 < 0)
            {
              BOOL v26 = v52++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_148;
          }
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_151;
          }
          unsigned int v57 = 0;
          while (1)
          {
            uint64_t v58 = *v2;
            uint64_t v59 = *(void *)&a1[v58];
            unint64_t v60 = v59 + 1;
            if (v59 == -1 || v60 > *(void *)&a1[*v3]) {
              goto LABEL_142;
            }
            int v61 = *(char *)(*(void *)&a1[*v5] + v59);
            *(void *)&a1[v58] = v60;
            if (v61 < 0)
            {
              BOOL v26 = v57++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_148;
          }
        case 0x10u:
          if ((v8 & 7) != 0) {
            goto LABEL_151;
          }
          unsigned int v62 = 0;
          while (1)
          {
            uint64_t v63 = *v2;
            uint64_t v64 = *(void *)&a1[v63];
            unint64_t v65 = v64 + 1;
            if (v64 == -1 || v65 > *(void *)&a1[*v3]) {
              goto LABEL_142;
            }
            int v66 = *(char *)(*(void *)&a1[*v5] + v64);
            *(void *)&a1[v63] = v65;
            if (v66 < 0)
            {
              BOOL v26 = v62++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_148;
          }
        case 0x11u:
          if ((v8 & 7) != 0) {
            goto LABEL_151;
          }
          unsigned int v67 = 0;
          while (1)
          {
            uint64_t v68 = *v2;
            uint64_t v69 = *(void *)&a1[v68];
            unint64_t v70 = v69 + 1;
            if (v69 == -1 || v70 > *(void *)&a1[*v3]) {
              goto LABEL_142;
            }
            int v71 = *(char *)(*(void *)&a1[*v5] + v69);
            *(void *)&a1[v68] = v70;
            if (v71 < 0)
            {
              BOOL v26 = v67++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_148;
          }
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_151;
          }
          unsigned int v72 = 0;
          while (1)
          {
            uint64_t v73 = *v2;
            uint64_t v74 = *(void *)&a1[v73];
            unint64_t v75 = v74 + 1;
            if (v74 == -1 || v75 > *(void *)&a1[*v3]) {
              goto LABEL_142;
            }
            int v76 = *(char *)(*(void *)&a1[*v5] + v74);
            *(void *)&a1[v73] = v75;
            if (v76 < 0)
            {
              BOOL v26 = v72++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_148;
          }
        case 0x13u:
          if (v16 == 2) {
            goto LABEL_124;
          }
          goto LABEL_151;
        case 0x14u:
          if (v16 == 2) {
            goto LABEL_124;
          }
          goto LABEL_151;
        case 0x15u:
          if ((v8 & 7) != 0) {
            goto LABEL_151;
          }
          unsigned int v77 = 0;
          while (1)
          {
            uint64_t v78 = *v2;
            uint64_t v79 = *(void *)&a1[v78];
            unint64_t v80 = v79 + 1;
            if (v79 == -1 || v80 > *(void *)&a1[*v3]) {
              goto LABEL_142;
            }
            int v81 = *(char *)(*(void *)&a1[*v5] + v79);
            *(void *)&a1[v78] = v80;
            if (v81 < 0)
            {
              BOOL v26 = v77++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_148;
          }
        case 0x16u:
          if ((v8 & 7) != 0) {
            goto LABEL_151;
          }
          unsigned int v82 = 0;
          break;
        case 0x17u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORideBookingIntentResponseFailureIsValid(a1)) {
            goto LABEL_151;
          }
LABEL_147:
          PBReaderRecallMark();
          continue;
        default:
LABEL_124:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_151:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v83 = *v2;
        uint64_t v84 = *(void *)&a1[v83];
        unint64_t v85 = v84 + 1;
        if (v84 == -1 || v85 > *(void *)&a1[*v3]) {
          break;
        }
        int v86 = *(char *)(*(void *)&a1[*v5] + v84);
        *(void *)&a1[v83] = v85;
        if (v86 < 0)
        {
          BOOL v26 = v82++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_148;
      }
LABEL_142:
      uint64_t v14 = *v4;
LABEL_143:
      a1[v14] = 1;
LABEL_148:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v87 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v87;
}

void sub_18A19150C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventRideBookingSessionIsDirty(os_unfair_lock_s *a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner(a1 + 28);
  BOOL v2 = (a1[35]._os_unfair_lock_opaque & 0xFF8000) != 0;
  os_unfair_lock_unlock(a1 + 28);
  return v2;
}

void sub_18A192030(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORideBookingIntentResponseFailureReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 1u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              BOOL v26 = &OBJC_IVAR___GEORideBookingIntentResponseFailure__failure;
              goto LABEL_40;
            }
            v27 += 7;
            BOOL v25 = v28++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              BOOL v26 = &OBJC_IVAR___GEORideBookingIntentResponseFailure__failure;
              goto LABEL_42;
            }
          }
          BOOL v26 = &OBJC_IVAR___GEORideBookingIntentResponseFailure__failure;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_48;
            }
            continue;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              BOOL v26 = &OBJC_IVAR___GEORideBookingIntentResponseFailure__intent;
              goto LABEL_39;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              BOOL v26 = &OBJC_IVAR___GEORideBookingIntentResponseFailure__intent;
              goto LABEL_42;
            }
          }
          BOOL v26 = &OBJC_IVAR___GEORideBookingIntentResponseFailure__intent;
        }
LABEL_40:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_42:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    BOOL v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_18A193BFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORideBookingIntentResponseFailureReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORideBookingIntentResponseFailureReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A193C60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1940C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A194138(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A194284(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A194300(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A19435C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A194484(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A194570(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A194640(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A194718(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A194820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_18A1948BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A194998(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A194AA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_18A194B3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A194C08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A194CF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A194E24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_18A194F58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_18A19508C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_18A195158(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A195240(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A19536C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_18A1954A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_18A1955D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_18A19578C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_18A19583C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(a1);
}

void sub_18A1958E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A1959DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A195A98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A195B54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A195C10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A195DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);

  _Unwind_Resume(a1);
}

void sub_18A196068(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A196104(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A19629C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_18A19634C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(a1);
}

void sub_18A1963F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A1965A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_18A196654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(a1);
}

void sub_18A1966FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A196808(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_18A196820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12) {
    JUMPOUT(0x18A196818);
  }
  JUMPOUT(0x18A196814);
}

void sub_18A196870(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A196908(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A1969B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void GEOFetchTransitCoverageForMapRect(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  uint64_t v84 = *MEMORY[0x1E4F143B8];
  queue = a1;
  id v57 = a2;
  if (!queue)
  {
    queue = MEMORY[0x1E4F14428];
    id v10 = MEMORY[0x1E4F14428];
  }
  uint64_t v11 = +[GEOResourceManifestManager modernManager];
  uint64_t v12 = [v11 activeTileGroup];
  unint64_t v13 = [v12 activeTileSetForTileType:48 scale:0];

  if (v13)
  {
    char v14 = objc_msgSend(v13, "minimumZoomLevelInRect:", a3, a4, a5, a6);
    double v15 = (double)(1 << v14) * 0.0000000037252903;
    LODWORD(v16) = vcvtmd_s64_f64(a3 * v15);
    signed int v49 = vcvtmd_s64_f64((a4 + a6) * v15);
    int v50 = vcvtmd_s64_f64((a3 + a5) * v15);
    unint64_t v53 = v16;
    signed int obj = vcvtmd_s64_f64(a4 * v15);
    unint64_t v17 = (v50 - (uint64_t)(int)v16) * (v49 - (uint64_t)obj);
    if (v57 && v17 >= 0xC9)
    {
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = __GEOFetchTransitCoverageForMapRect_block_invoke_2;
      block[3] = &unk_1E53DDD88;
      uint64_t v73 = (GEOTileKeyList *)v57;
      dispatch_async(queue, block);
      char v18 = v73;
    }
    else
    {
      unsigned int v19 = v13;
      uint64_t v58 = [[GEOTileKeyList alloc] initWithCapacity:v17];
      if ((int)v53 <= v50)
      {
        unint64_t v41 = (unint64_t)(v14 & 0x3F) << 40;
        do
        {
          if (obj <= v49)
          {
            signed int v43 = obj;
            do
            {
              unint64_t v77 = 0;
              uint64_t v78 = 0;
              char v44 = [v13 size];
              uint64_t v45 = [v13 scale];
              unsigned int v46 = [v13 style];
              *(void *)((char *)&v81 + objc_destroyWeak(this + 1) = (v53 << 46) | v41;
              LOBYTE(v8objc_destroyWeak(this + 1) = 2;
              if (v46 <= 0x19 && ((1 << v46) & 0x200101C) != 0) {
                unint64_t v47 = 128;
              }
              else {
                unint64_t v47 = (unint64_t)(v46 == 26) << 7;
              }
              *((void *)&v48 + objc_destroyWeak(this + 1) = (v53 >> 18) | ((unint64_t)(v43 & 0x3FFFFFF) << 8) | ((unint64_t)(v46 & 0x3FFF) << 34) | ((unint64_t)(v44 & 0xF) << 48) | (v45 << 52);
              *(void *)&long long v48 = v53 << 46;
              unint64_t v77 = v47 | v81 & 0xFFFFFFFFFFFFFF7FLL;
              uint64_t v78 = (unint64_t *)(v48 >> 56);
              [(GEOTileKeyList *)v58 addKey:&v77];
              ++v43;
            }
            while (v49 + 1 != v43);
          }
          BOOL v42 = v53 == v50;
          unint64_t v53 = (v53 + 1);
        }
        while (!v42);
      }
      uint64_t v20 = NSString;
      uint64_t v21 = [MEMORY[0x1E4F29128] UUID];
      uint64_t v22 = [v21 UUIDString];
      uint64_t v54 = [v20 stringWithFormat:@"<%s:%@>", "GEOFetchTransitCoverageForMapRect", v22];

      unint64_t v23 = +[GEOTileLoader modernLoader];
      [v23 openForClient:v54];

      *(void *)&long long v81 = 0;
      *((void *)&v81 + objc_destroyWeak(this + 1) = &v81;
      uint64_t v82 = 0x2020000000;
      char v83 = -1;
      unint64_t v77 = 0;
      uint64_t v78 = &v77;
      uint64_t v79 = 0x2020000000;
      char v80 = 0;
      v71[0] = 0;
      v71[1] = v71;
      v71[2] = 0x2020000000;
      v71[3] = 0;
      char v24 = (void *)[(GEOTileKeyList *)v58 copy];
      long long v69 = 0u;
      long long v70 = 0u;
      long long v67 = 0u;
      long long v68 = 0u;
      obja = v58;
      uint64_t v25 = [(GEOTileKeyList *)obja countByEnumeratingWithState:&v67 objects:v76 count:16];
      if (v25)
      {
        uint64_t v26 = *(void *)v68;
        do
        {
          for (uint64_t i = 0; i != v25; ++i)
          {
            if (*(void *)v68 != v26) {
              objc_enumerationMutation(obja);
            }
            uint64_t v28 = *(void *)(*((void *)&v67 + 1) + 8 * i);
            double v29 = GEOMapRectForGEOTileKey(v28);
            double v31 = v30;
            double v33 = v32;
            double v35 = v34;
            int v36 = +[GEOTileLoader modernLoader];
            GEOMapRectIntersection(a3, a4, a5, a6, v29, v31, v33, v35);
            double v39 = v37 / a5 * (v38 / a6);
            v59[0] = MEMORY[0x1E4F143A8];
            v59[1] = 3221225472;
            v59[2] = __GEOFetchTransitCoverageForMapRect_block_invoke_3;
            v59[3] = &unk_1E53F6F98;
            id v60 = v24;
            id v40 = v54;
            id v61 = v40;
            uint64_t v63 = &v77;
            id v62 = v57;
            uint64_t v64 = &v81;
            unint64_t v65 = v71;
            double v66 = v39;
            [v36 loadKey:v28 priority:2147483646 forClient:v40 options:3 reason:4 callbackQ:queue beginNetwork:0 callback:v59];

            unint64_t v13 = v19;
          }
          uint64_t v25 = [(GEOTileKeyList *)obja countByEnumeratingWithState:&v67 objects:v76 count:16];
        }
        while (v25);
      }

      _Block_object_dispose(v71, 8);
      _Block_object_dispose(&v77, 8);
      _Block_object_dispose(&v81, 8);

      char v18 = obja;
    }
    goto LABEL_18;
  }
  if (v57)
  {
    v74[0] = MEMORY[0x1E4F143A8];
    v74[1] = 3221225472;
    v74[2] = __GEOFetchTransitCoverageForMapRect_block_invoke;
    v74[3] = &unk_1E53DDD88;
    unint64_t v75 = (GEOTileKeyList *)v57;
    dispatch_async(queue, v74);
    char v18 = v75;
LABEL_18:
  }
}

void sub_18A19711C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, void *a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v42 - 224), 8);
  _Block_object_dispose((const void *)(v42 - 192), 8);

  _Unwind_Resume(a1);
}

uint64_t __GEOFetchTransitCoverageForMapRect_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(double))(*(void *)(a1 + 32) + 16))(0.0);
}

void __GEOFetchTransitCoverageForMapRect_block_invoke_2(uint64_t a1)
{
  id v2 = [MEMORY[0x1E4F28C58] GEOErrorWithCode:-13 reason:@"Exceeded tile limit of 200"];
  (*(void (**)(double))(*(void *)(a1 + 32) + 16))(0.0);
}

void sub_18A1972DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void __GEOFetchTransitCoverageForMapRect_block_invoke_3(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v18 = a3;
  id v8 = a5;
  if ([*(id *)(a1 + 32) containsKey:a2])
  {
    [*(id *)(a1 + 32) removeKey:a2];
    if (![*(id *)(a1 + 32) count])
    {
      unsigned int v9 = +[GEOTileLoader modernLoader];
      [v9 closeForClient:*(void *)(a1 + 40)];
    }
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    if (!*(unsigned char *)(v10 + 24))
    {
      if (v8)
      {
        *(unsigned char *)(v10 + 24) = 1;
        uint64_t v11 = *(void *)(a1 + 48);
        if (v11) {
          (*(void (**)(uint64_t, uint64_t, id, double))(v11 + 16))(v11, 0xFFFFFFFFLL, v8, 0.0);
        }
      }
      else
      {
        uint64_t v12 = [v18 decodedRepresentation];
        int v13 = [v12 transitCoverage];
        uint64_t v14 = *(void *)(*(void *)(a1 + 64) + 8);
        int v15 = *(unsigned __int8 *)(v14 + 24);
        if (v15 != v13)
        {
          if (v15 == 255) {
            char v16 = v13;
          }
          else {
            char v16 = 2;
          }
          *(unsigned char *)(v14 + 24) = v16;
        }
        if (v13 == 1) {
          *(double *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = *(double *)(a1 + 80)
        }
                                                                      + *(double *)(*(void *)(*(void *)(a1 + 72)
                                                                                              + 8)
                                                                                  + 24);
        if (![*(id *)(a1 + 32) count])
        {
          *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
          uint64_t v17 = *(void *)(a1 + 48);
          if (v17) {
            (*(void (**)(uint64_t, void, void, double))(v17 + 16))(v17, *(char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24), 0, *(double *)(*(void *)(*(void *)(a1 + 72) + 8) + 24));
          }
        }
      }
    }
  }
}

void sub_18A197480(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void GEOFetchTransitCoverageForCoordinate(void *a1, void *a2, double a3, double a4)
{
  v36[2] = *MEMORY[0x1E4F143B8];
  unsigned int v7 = a1;
  id v8 = a2;
  if (!v7)
  {
    unsigned int v7 = MEMORY[0x1E4F14428];
    id v9 = MEMORY[0x1E4F14428];
  }
  uint64_t v10 = +[GEOResourceManifestManager modernManager];
  uint64_t v11 = [v10 activeTileGroup];
  uint64_t v12 = [v11 activeTileSetForTileType:48 scale:0];

  if (v12)
  {
    double v13 = GEOTilePointForCoordinate(a3, a4, 20.0);
    double v15 = v14;
    char v16 = objc_msgSend(v12, "maximumZoomLevelForMapPoint:");
    char v17 = [v12 size];
    uint64_t v18 = [v12 scale];
    unsigned int v19 = [v12 style];
    double v20 = (double)(1 << v16) * 0.0000000037252903;
    unint64_t v21 = vcvtmd_s64_f64(v13 * v20) | 0x3E30000000000000;
    *(void *)((char *)v36 + objc_destroyWeak(this + 1) = (v21 << 46) | ((unint64_t)(v16 & 0x3F) << 40);
    LOBYTE(v36[0]) = 2;
    *((void *)&v23 + objc_destroyWeak(this + 1) = ((unint64_t)(vcvtmd_s64_f64(v15 * v20) & 0x3FFFFFF) << 8) | (v21 >> 18) | ((unint64_t)(v19 & 0x3FFF) << 34) | ((unint64_t)(v17 & 0xF) << 48) | (v18 << 52);
    *(void *)&long long v23 = v21 << 46;
    uint64_t v22 = v23 >> 56;
    if (v19 <= 0x19 && ((1 << v19) & 0x200101C) != 0) {
      unint64_t v24 = 128;
    }
    else {
      unint64_t v24 = (unint64_t)(v19 == 26) << 7;
    }
    v35[0] = v24 | v36[0] & 0xFFFFFFFFFFFFFF7FLL;
    v35[1] = v22;
    uint64_t v25 = [MEMORY[0x1E4F29128] UUID];
    uint64_t v26 = [v25 UUIDString];

    char v27 = +[GEOTileLoader modernLoader];
    [v27 openForClient:v26];

    uint64_t v28 = +[GEOTileLoader modernLoader];
    v30[0] = MEMORY[0x1E4F143A8];
    v30[1] = 3221225472;
    v30[2] = __GEOFetchTransitCoverageForCoordinate_block_invoke_2;
    double v30[3] = &unk_1E53F6FC0;
    id v29 = v26;
    id v31 = v29;
    id v32 = v8;
    [v28 loadKey:v35 priority:2147483646 forClient:v29 options:3 reason:4 callbackQ:v7 beginNetwork:0 callback:v30];
  }
  else if (v8)
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __GEOFetchTransitCoverageForCoordinate_block_invoke;
    block[3] = &unk_1E53DDD88;
    id v34 = v8;
    dispatch_async(v7, block);
  }
}

void sub_18A1977CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

uint64_t __GEOFetchTransitCoverageForCoordinate_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void __GEOFetchTransitCoverageForCoordinate_block_invoke_2(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v15 = a3;
  id v7 = a5;
  id v8 = +[GEOTileLoader modernLoader];
  [v8 closeForClient:*(void *)(a1 + 32)];

  if (v7)
  {
    uint64_t v9 = *(void *)(a1 + 40);
    if (v9) {
      (*(void (**)(uint64_t, uint64_t, id))(v9 + 16))(v9, 0xFFFFFFFFLL, v7);
    }
  }
  else
  {
    uint64_t v10 = [v15 decodedRepresentation];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    if (isKindOfClass)
    {
      uint64_t v12 = [v15 decodedRepresentation];
      char v13 = [v12 transitCoverage];
    }
    else
    {
      char v13 = -1;
    }
    uint64_t v14 = *(void *)(a1 + 40);
    if (v14) {
      (*(void (**)(uint64_t, void, void))(v14 + 16))(v14, v13, 0);
    }
  }
}

void sub_18A197980(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void GEOFetchHybridCoverageForMapRect(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (!v3)
  {
    id v3 = (id)MEMORY[0x1E4F14428];
    id v5 = MEMORY[0x1E4F14428];
  }
  id v8 = v3;
  uint64_t v9 = v4;
  id v6 = v3;
  id v7 = v4;
  geo_dispatch_async_qos();
}

void sub_18A197ABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void __GEOFetchHybridCoverageForMapRect_block_invoke(uint64_t a1)
{
  v48[2] = *MEMORY[0x1E4F143B8];
  double v2 = (double)(1 << *(double *)(a1 + 48)) * 0.0000000037252903;
  float64x2_t v3 = *(float64x2_t *)(a1 + 56);
  int32x2_t v4 = vmovn_s64(vcvtq_s64_f64(vrndmq_f64(vmulq_n_f64(v3, v2))));
  int32x2_t v5 = vmovn_s64(vcvtq_s64_f64(vrndmq_f64(vmulq_n_f64(vaddq_f64(v3, *(float64x2_t *)(a1 + 72)), v2))));
  int64x2_t v6 = vsubl_s32(v5, v4);
  if (v6.i64[1] * v6.i64[0] >= 0x3E9uLL && (id v7 = *(void **)(a1 + 40)) != 0)
  {
    id v8 = *(NSObject **)(a1 + 32);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __GEOFetchHybridCoverageForMapRect_block_invoke_2;
    block[3] = &unk_1E53DDD88;
    id v46 = v7;
    dispatch_async(v8, block);
    uint64_t v9 = v46;
  }
  else
  {
    int32x2_t v38 = v5;
    int32x2_t v39 = v4;
    uint64_t v10 = +[GEOResourceManifestManager modernManager];
    uint64_t v9 = [v10 activeTileGroup];

    unint64_t v11 = v39.u32[0];
    __int32 v37 = v38.i32[0];
    if (v39.i32[0] <= v38.i32[0])
    {
      int v14 = v39.i32[1];
      int v36 = v39.i32[1];
      double v12 = 0.0;
      char v13 = -1;
      do
      {
        v38.i32[0] = v11;
        if (v14 <= v38.i32[1])
        {
          uint64_t v15 = v11 << 46;
          uint64_t v16 = (v11 >> 18);
          int v17 = v14;
          do
          {
            *(void *)((char *)v48 + objc_destroyWeak(this + 1) = v15 | ((unint64_t)(*(double *)(a1 + 48) & 0x3F) << 40);
            LOBYTE(v48[0]) = 0;
            *((void *)&v18 + objc_destroyWeak(this + 1) = v16 & 0xFFFFFFFC000000FFLL | ((unint64_t)(v17 & 0x3FFFFFF) << 8) | 0x2000000000000;
            *(void *)&long long v18 = v15;
            v47[0] = v48[0];
            v47[1] = v18 >> 56;
            double v19 = GEOMapRectForGEOTileKey((uint64_t)v47);
            double v21 = v20;
            double v23 = v22;
            double v25 = v24;
            double v40 = v12;
            double v26 = *(double *)(a1 + 56);
            double v27 = *(double *)(a1 + 64);
            double v28 = *(double *)(a1 + 72);
            double v29 = *(double *)(a1 + 80);
            int v30 = [v9 isHybridModeAvailableForTileKey:v47];
            GEOMapRectIntersection(v26, v27, v28, v29, v19, v21, v23, v25);
            double v33 = v31 / v28 * (v32 / v29);
            if (v13 == -1) {
              char v34 = v30;
            }
            else {
              char v34 = 2;
            }
            if (v30 != v13) {
              char v13 = v34;
            }
            if (!v30) {
              double v33 = -0.0;
            }
            double v12 = v40 + v33;
            ++v17;
          }
          while (v38.i32[1] + 1 != v17);
        }
        unint64_t v11 = (v38.i32[0] + 1);
        int v14 = v36;
      }
      while (v38.i32[0] != v37);
    }
    else
    {
      double v12 = 0.0;
      char v13 = -1;
    }
    v41[0] = MEMORY[0x1E4F143A8];
    v41[1] = 3221225472;
    v41[2] = __GEOFetchHybridCoverageForMapRect_block_invoke_3;
    v41[3] = &unk_1E53F6FE8;
    double v35 = *(NSObject **)(a1 + 32);
    id v42 = *(id *)(a1 + 40);
    char v44 = v13;
    double v43 = v12;
    dispatch_async(v35, v41);
  }
}

void sub_18A197E20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void __GEOFetchHybridCoverageForMapRect_block_invoke_2(uint64_t a1)
{
  id v2 = [MEMORY[0x1E4F28C58] GEOErrorWithCode:-13 reason:@"Exceeded tile limit of 1000"];
  (*(void (**)(double))(*(void *)(a1 + 32) + 16))(0.0);
}

void sub_18A197EC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t __GEOFetchHybridCoverageForMapRect_block_invoke_3(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void, double))(result + 16))(result, *(char *)(a1 + 48), 0, *(double *)(a1 + 40));
  }
  return result;
}

BOOL GEOPDPhotoConstraintsReadAllFrom(uint64_t a1, void *a2)
{
  float64x2_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int32x2_t v4 = (int *)MEMORY[0x1E4F940E8];
    int32x2_t v5 = (int *)MEMORY[0x1E4F940E0];
    int64x2_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      id v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            long long v18 = PBReaderReadString();
            if (v18) {
              -[GEOPDPhotoConstraints addMediaTypes:](a1, v18);
            }

            continue;
          case 2u:
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 40) |= 8u;
            while (2)
            {
              uint64_t v22 = *v4;
              uint64_t v23 = *(void *)&v3[v22];
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
                *(void *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  BOOL v15 = v20++ >= 9;
                  if (v15)
                  {
                    LODWORD(v2objc_destroyWeak(this + 1) = 0;
                    goto LABEL_52;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v2objc_destroyWeak(this + 1) = 0;
            }
LABEL_52:
            *(_DWORD *)(a1 + 36) = v21;
            continue;
          case 3u:
            char v26 = 0;
            unsigned int v27 = 0;
            uint64_t v28 = 0;
            *(unsigned char *)(a1 + 40) |= 1u;
            while (1)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
                break;
              }
              char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
              *(void *)&v3[v29] = v31;
              v28 |= (unint64_t)(v32 & 0x7F) << v26;
              if ((v32 & 0x80) == 0) {
                goto LABEL_54;
              }
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_56;
              }
            }
            v3[*v6] = 1;
LABEL_54:
            if (v3[*v6]) {
              uint64_t v28 = 0;
            }
LABEL_56:
            uint64_t v42 = 8;
            goto LABEL_61;
          case 4u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v28 = 0;
            *(unsigned char *)(a1 + 40) |= 2u;
            break;
          case 5u:
            *(unsigned char *)(a1 + 40) |= 4u;
            uint64_t v39 = *v4;
            unint64_t v40 = *(void *)&v3[v39];
            if (v40 <= 0xFFFFFFFFFFFFFFFBLL && v40 + 4 <= *(void *)&v3[*v5])
            {
              int v41 = *(_DWORD *)(*(void *)&v3[*v7] + v40);
              *(void *)&v3[v39] = v40 + 4;
            }
            else
            {
              v3[*v6] = 1;
              int v41 = 0;
            }
            *(_DWORD *)(a1 + 32) = v41;
            continue;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_66;
            }
            continue;
        }
        while (1)
        {
          uint64_t v35 = *v4;
          uint64_t v36 = *(void *)&v3[v35];
          unint64_t v37 = v36 + 1;
          if (v36 == -1 || v37 > *(void *)&v3[*v5]) {
            break;
          }
          char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
          *(void *)&v3[v35] = v37;
          v28 |= (unint64_t)(v38 & 0x7F) << v33;
          if ((v38 & 0x80) == 0) {
            goto LABEL_58;
          }
          v33 += 7;
          BOOL v15 = v34++ >= 9;
          if (v15)
          {
            uint64_t v28 = 0;
            goto LABEL_60;
          }
        }
        v3[*v6] = 1;
LABEL_58:
        if (v3[*v6]) {
          uint64_t v28 = 0;
        }
LABEL_60:
        uint64_t v42 = 24;
LABEL_61:
        *(void *)(a1 + v42) = v28;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v43 = v3[*v6] == 0;
  }
  else
  {
LABEL_66:
    BOOL v43 = 0;
  }
  objc_sync_exit(v3);

  return v43;
}

void sub_18A198B48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceQuestionnaireLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  int32x2_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    int64x2_t v6 = (int *)MEMORY[0x1E4F940E8];
    id v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          unsigned int v20 = objc_alloc_init(GEOPDPlaceQuestionnairePlaceInfo);
          if (!GEOPDPlaceQuestionnairePlaceInfoReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          -[GEOPDPlaceQuestionnaireLookupParameters addPlaceInfo:](a1, v20);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v21 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v21 = 0;
  }
  objc_sync_exit(v5);

  return v21;
}

void sub_18A199AE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceQuestionnaireLookupParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  float64x2_t v3 = (int *)MEMORY[0x1E4F940E0];
  int32x2_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int32x2_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_64;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_22:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
        {
          char v17 = 0;
          unsigned int v18 = 0;
          unint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v2;
            uint64_t v21 = *(void *)&a1[v20];
            unint64_t v22 = v21 + 1;
            if (v21 == -1 || v22 > *(void *)&a1[*v3]) {
              break;
            }
            char v23 = *(unsigned char *)(*(void *)&a1[*v5] + v21);
            *(void *)&a1[v20] = v22;
            v19 |= (unint64_t)(v23 & 0x7F) << v17;
            if ((v23 & 0x80) == 0) {
              goto LABEL_32;
            }
            v17 += 7;
            BOOL v13 = v18++ >= 9;
            if (v13)
            {
              unint64_t v19 = 0;
              int v24 = a1[*v4];
              goto LABEL_34;
            }
          }
          a1[*v4] = 1;
LABEL_32:
          int v24 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v19 = 0;
          }
LABEL_34:
          int v25 = v19 & 7;
          if (v24 || v25 == 4) {
            break;
          }
          switch((v19 >> 3))
          {
            case 1u:
              if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
                goto LABEL_63;
              }
              PBReaderRecallMark();
              continue;
            case 2u:
              if (v25 == 2) {
                goto LABEL_46;
              }
              goto LABEL_63;
            case 3u:
              if (v25 == 2) {
                goto LABEL_46;
              }
              goto LABEL_63;
            case 4u:
              if ((v19 & 7) != 0) {
                goto LABEL_63;
              }
              unsigned int v27 = 0;
              break;
            default:
LABEL_46:
              if (PBReaderSkipValueWithTag()) {
                continue;
              }
LABEL_63:
              PBReaderRecallMark();
              goto LABEL_64;
          }
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              break;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0 && v27++ <= 8) {
              continue;
            }
            goto LABEL_22;
          }
          a1[*v4] = 1;
        }
        int v33 = a1[*v4];
        PBReaderRecallMark();
        if (v33)
        {
LABEL_64:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_64;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v34 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v34;
}

void sub_18A19A560(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceQuestionnairePlaceInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -3:
        char v7 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v10 | v14;
        if (((v10 | v14) | v7)) {
          char v16 = 0;
        }
        else {
          char v16 = a3;
        }
        char v58 = (v16 == 0) | v15;
        char v17 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        uint64_t v20 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
        char v57 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_74;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v17;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v19) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_74:
      if (v15)
      {
        char v52 = 1;
        goto LABEL_85;
      }
      if (v16)
      {
        while (1)
        {
          int v53 = *v16++;
          char v54 = 8;
          switch(v53)
          {
            case 0:
              goto LABEL_86;
            case 1:
              goto LABEL_80;
            case 2:
              char v54 = 4;
              goto LABEL_80;
            case 3:
              char v54 = 2;
LABEL_80:
              *(unsigned char *)(a1 + v20[307]) |= v54;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_86;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v15;
    if ((v58 & 1) == 0)
    {
      int v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_59;
        }
        if ((*(unsigned char *)(a1 + v20[307]) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_82;
          }
          unint64_t v37 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v37, (void *)v3))
          {
            PBReaderRecallMark();
            char v38 = *(void **)(a1 + 32);
            *(void *)(a1 + 32) = v37;

            --v8;
            uint64_t v20 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
            goto LABEL_72;
          }

          char v52 = 0;
          uint64_t v20 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
          goto LABEL_84;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_82;
        }
        char v51 = 16 * *(unsigned char *)(a1 + v20[307]);
        goto LABEL_71;
      case 2:
        if (!v32) {
          goto LABEL_59;
        }
        if ((*(unsigned char *)(a1 + v20[307]) & 4) == 0)
        {
          uint64_t v40 = PBReaderReadString();
          uint64_t v41 = 24;
          goto LABEL_50;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_82;
        }
        char v51 = 32 * *(unsigned char *)(a1 + v20[307]);
        goto LABEL_71;
      case 3:
        if (!v32) {
          goto LABEL_59;
        }
        if ((*(unsigned char *)(a1 + v20[307]) & 2) == 0)
        {
          uint64_t v40 = PBReaderReadString();
          uint64_t v41 = 16;
LABEL_50:
          uint64_t v42 = *(void **)(a1 + v41);
          *(void *)(a1 + v4objc_destroyWeak(this + 1) = v40;

          --v8;
LABEL_72:
          char v15 = v57;
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_73:
          if (!(v15 & 1 | (v8 != 0))) {
            goto LABEL_74;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v51 = *(unsigned char *)(a1 + v20[307]) << 6;
LABEL_71:
          v8 += v51 >> 7;
          goto LABEL_72;
        }
LABEL_82:
        char v52 = 0;
LABEL_84:
        char v15 = v57;
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
        *(unsigned char *)(a1 + v20[307]) |= 8u;
        *(unsigned char *)(a1 + v20[307]) |= 4u;
        *(unsigned char *)(a1 + v20[307]) |= 2u;
        if (v52)
        {
LABEL_86:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_87;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_87:
            unint64_t v55 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 4:
        if (v7)
        {
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v45 = 0;
          *(unsigned char *)(a1 + v20[307]) |= 1u;
          while (1)
          {
            uint64_t v46 = *v17;
            uint64_t v47 = *(void *)(v3 + v46);
            unint64_t v48 = v47 + 1;
            if (v47 == -1 || v48 > *(void *)(v3 + *v6)) {
              break;
            }
            char v49 = *(unsigned char *)(*(void *)(v3 + *v19) + v47);
            *(void *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if ((v49 & 0x80) == 0) {
              goto LABEL_62;
            }
            v43 += 7;
            BOOL v28 = v44++ >= 9;
            if (v28)
            {
              uint64_t v45 = 0;
              goto LABEL_64;
            }
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_62:
          if (*(unsigned char *)(v3 + *v18)) {
            uint64_t v45 = 0;
          }
LABEL_64:
          *(unsigned char *)(a1 + 52) = v45 != 0;
        }
        else
        {
LABEL_59:
          char v50 = PBReaderSkipValueWithTag();
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v57;
          if ((v50 & 1) == 0)
          {
LABEL_81:
            char v52 = 0;
            goto LABEL_85;
          }
        }
        goto LABEL_73;
      default:
        int v39 = PBReaderSkipValueWithTag();
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v57;
        if (!v39) {
          goto LABEL_81;
        }
        goto LABEL_73;
    }
  }
}

void sub_18A19AEAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A19AFA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceQuestionnairePlaceInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPlaceQuestionnairePlaceInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDPlaceQuestionnairePlaceInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDPlaceQuestionnairePlaceInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPlaceQuestionnairePlaceInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18A19B14C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A19B314(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A19B4D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A19B894(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceQuestionnaireResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (const __int16 *)(a1 + 68);
  uint16x4_t v12 = (uint16x4_t)vld1_dup_s16(v11);
  int16x4_t v13 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v12, (uint16x4_t)0xFFF9FFFBFFF8FFFALL), (int8x8_t)0x1000100010001);
  v13.i16[0] = vaddv_s16(v13);
  unsigned int v14 = v13.i32[0];
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v17 = v14 > 2;
        char v18 = v10 | v17;
        if (((v10 | v17) | v8)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        char v89 = (v19 == 0) | v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v21 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
        unint64_t v23 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
        char v88 = v10 | v17;
        break;
      default:
        ++v14;
LABEL_6:
        uint64_t v15 = v9;
        uint64_t v16 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_133;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v22) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_23;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
LABEL_23:
    int v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v26 = 0;
    }
LABEL_25:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_133:
      if (v18)
      {
        char v83 = 1;
        goto LABEL_145;
      }
      if (v19)
      {
        while (1)
        {
          int v84 = *v19++;
          __int16 v85 = 256;
          switch(v84)
          {
            case 0:
              goto LABEL_146;
            case 2:
              goto LABEL_140;
            case 3:
              __int16 v85 = 64;
              goto LABEL_140;
            case 5:
              __int16 v85 = 32;
              goto LABEL_140;
            case 9:
              __int16 v85 = 128;
LABEL_140:
              *(_WORD *)(a1 + v23[311]) |= v85;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_146;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v18;
    if ((v89 & 1) == 0)
    {
      BOOL v36 = v19;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_101;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + v23[311]) |= 1u;
        while (1)
        {
          uint64_t v43 = *v20;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v6)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v22) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_104;
          }
          v40 += 7;
          BOOL v31 = v41++ >= 9;
          if (v31)
          {
            LODWORD(v42) = 0;
            goto LABEL_106;
          }
        }
        *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
LABEL_104:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v42) = 0;
        }
LABEL_106:
        *(_DWORD *)(a1 + 60) = v42;
        goto LABEL_132;
      case 2:
        if (!v35) {
          goto LABEL_101;
        }
        if ((*(_WORD *)(a1 + v23[311]) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_142;
          }
          __int16 v82 = *(_WORD *)(a1 + v23[311]) << 7;
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_142;
        }
        unint64_t v48 = objc_alloc_init(GEOPDScorecardLayout);
        if (!GEOPDScorecardLayoutReadAllFrom((uint64_t)v48, (void *)v3, v9 & 1)) {
          goto LABEL_143;
        }
        PBReaderRecallMark();
        uint64_t v49 = 40;
        goto LABEL_99;
      case 3:
        if (!v35) {
          goto LABEL_101;
        }
        if ((*(_WORD *)(a1 + v23[311]) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_142;
          }
          __int16 v82 = *(_WORD *)(a1 + v23[311]) << 9;
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_142;
        }
        unint64_t v48 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v48, (void *)v3)) {
          goto LABEL_143;
        }
        PBReaderRecallMark();
        uint64_t v49 = 24;
        goto LABEL_99;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_101;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v52 = 0;
        *(_WORD *)(a1 + v23[311]) |= 8u;
        while (2)
        {
          uint64_t v53 = *v20;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v22) + v54);
            *(void *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              BOOL v31 = v51++ >= 9;
              if (v31)
              {
                uint64_t v52 = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v52 = 0;
        }
LABEL_110:
        BOOL v80 = v52 != 0;
        uint64_t v81 = 66;
        goto LABEL_123;
      case 5:
        if (!v35 || (*(_WORD *)(a1 + v23[311]) & 0x20) != 0) {
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_142;
        }
        unint64_t v48 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v48, (void *)v3)) {
          goto LABEL_143;
        }
        PBReaderRecallMark();
        -[GEOPDPlaceQuestionnaireResult _addNoFlagsHistoricalMapsId:](a1, v48);

        goto LABEL_100;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_101;
        }
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v59 = 0;
        *(_WORD *)(a1 + v23[311]) |= 0x10u;
        while (2)
        {
          uint64_t v60 = *v20;
          uint64_t v61 = *(void *)(v3 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(v3 + *v22) + v61);
            *(void *)(v3 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if (v63 < 0)
            {
              v57 += 7;
              BOOL v31 = v58++ >= 9;
              if (v31)
              {
                uint64_t v59 = 0;
                goto LABEL_114;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v59 = 0;
        }
LABEL_114:
        BOOL v80 = v59 != 0;
        uint64_t v81 = 67;
        goto LABEL_123;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_101;
        }
        char v64 = 0;
        unsigned int v65 = 0;
        uint64_t v66 = 0;
        *(_WORD *)(a1 + v23[311]) |= 2u;
        while (2)
        {
          uint64_t v67 = *v20;
          uint64_t v68 = *(void *)(v3 + v67);
          unint64_t v69 = v68 + 1;
          if (v68 == -1 || v69 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v70 = *(unsigned char *)(*(void *)(v3 + *v22) + v68);
            *(void *)(v3 + v67) = v69;
            v66 |= (unint64_t)(v70 & 0x7F) << v64;
            if (v70 < 0)
            {
              v64 += 7;
              BOOL v31 = v65++ >= 9;
              if (v31)
              {
                uint64_t v66 = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v66 = 0;
        }
LABEL_118:
        BOOL v80 = v66 != 0;
        uint64_t v81 = 64;
        goto LABEL_123;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_101;
        }
        char v71 = 0;
        unsigned int v72 = 0;
        uint64_t v73 = 0;
        *(_WORD *)(a1 + v23[311]) |= 4u;
        while (2)
        {
          uint64_t v74 = *v20;
          uint64_t v75 = *(void *)(v3 + v74);
          unint64_t v76 = v75 + 1;
          if (v75 == -1 || v76 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(v3 + *v22) + v75);
            *(void *)(v3 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if (v77 < 0)
            {
              v71 += 7;
              BOOL v31 = v72++ >= 9;
              if (v31)
              {
                uint64_t v73 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v73 = 0;
        }
LABEL_122:
        BOOL v80 = v73 != 0;
        uint64_t v81 = 65;
LABEL_123:
        *(unsigned char *)(a1 + v8objc_destroyWeak(this + 1) = v80;
        goto LABEL_132;
      case 9:
        if (!v35)
        {
LABEL_101:
          char v79 = PBReaderSkipValueWithTag();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          char v18 = v88;
          if ((v79 & 1) == 0)
          {
LABEL_141:
            char v83 = 0;
            goto LABEL_145;
          }
LABEL_132:
          if (!(v18 & 1 | (v7 != 0))) {
            goto LABEL_133;
          }
          continue;
        }
        if ((*(_WORD *)(a1 + v23[311]) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_142:
            char v83 = 0;
            goto LABEL_144;
          }
          __int16 v82 = *(_WORD *)(a1 + v23[311]) << 8;
LABEL_130:
          v7 += v82 >> 15;
          goto LABEL_131;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_142;
        }
        unint64_t v48 = objc_alloc_init(GEOPDPhotoConstraints);
        if (GEOPDPhotoConstraintsReadAllFrom((uint64_t)v48, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v49 = 32;
LABEL_99:
          uint64_t v78 = *(void **)(a1 + v49);
          *(void *)(a1 + v49) = v48;

          --v7;
LABEL_100:
          unint64_t v23 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
LABEL_131:
          char v18 = v88;
          char v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_132;
        }
LABEL_143:

        char v83 = 0;
        unint64_t v23 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
LABEL_144:
        char v18 = v88;
        char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_145:
        *(_WORD *)(a1 + v23[311]) |= 0x100u;
        *(_WORD *)(a1 + v23[311]) |= 0x40u;
        *(_WORD *)(a1 + v23[311]) |= 0x20u;
        *(_WORD *)(a1 + v23[311]) |= 0x80u;
        if (v83)
        {
LABEL_146:
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if (v18) {
            goto LABEL_147;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v18)
          {
LABEL_147:
            int v86 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v47 = PBReaderSkipValueWithTag();
        char v21 = (int *)MEMORY[0x1E4F940C8];
        char v18 = v88;
        if (!v47) {
          goto LABEL_141;
        }
        goto LABEL_132;
    }
  }
}

void sub_18A19C41C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A19C564(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A19C80C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A19CFEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceQuestionnaireResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  -[GEOPDScorecardLayout readAll:](*(void *)(a1 + 40), 1);
  [*(id *)(a1 + 24) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 16);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPDPlaceQuestionnaireResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPlaceQuestionnaireResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDPlaceQuestionnaireResultReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDPlaceQuestionnaireResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPlaceQuestionnaireResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDPlaceQuestionnaireResultCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18A19DFC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceQuestionnaireResultIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_182:
    BOOL v95 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v95;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_182;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v13 = v7++ >= 9;
      if (v13)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14 || v15 == 4) {
      goto LABEL_182;
    }
    switch((v8 >> 3))
    {
      case 1u:
        if ((v8 & 7) != 0) {
          goto LABEL_185;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            goto LABEL_121;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_181;
        }
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_185;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_36:
        if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
          goto LABEL_179;
        }
        char v23 = 0;
        unsigned int v24 = 0;
        unint64_t v25 = 0;
        while (1)
        {
          uint64_t v26 = *v2;
          uint64_t v27 = *(void *)&a1[v26];
          unint64_t v28 = v27 + 1;
          if (v27 == -1 || v28 > *(void *)&a1[*v3]) {
            break;
          }
          char v29 = *(unsigned char *)(*(void *)&a1[*v5] + v27);
          *(void *)&a1[v26] = v28;
          v25 |= (unint64_t)(v29 & 0x7F) << v23;
          if ((v29 & 0x80) == 0) {
            goto LABEL_46;
          }
          v23 += 7;
          BOOL v13 = v24++ >= 9;
          if (v13)
          {
            unint64_t v25 = 0;
            int v30 = a1[*v4];
            goto LABEL_48;
          }
        }
        a1[*v4] = 1;
LABEL_46:
        int v30 = a1[*v4];
        if (a1[*v4]) {
          unint64_t v25 = 0;
        }
LABEL_48:
        int v31 = v25 & 7;
        if (v30 || v31 == 4)
        {
LABEL_179:
          int v94 = a1[*v4];
          PBReaderRecallMark();
          if (v94) {
            goto LABEL_185;
          }
LABEL_180:
          PBReaderRecallMark();
LABEL_181:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_182;
          }
          continue;
        }
        if ((v25 >> 3) != 2)
        {
          if ((v25 >> 3) == 1 && v31 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_184;
          }
          goto LABEL_36;
        }
        if (v31 == 2 && PBReaderPlaceMark())
        {
          [a1 position];
          [a1 length];
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
          {
            char v33 = 0;
            unsigned int v34 = 0;
            unint64_t v35 = 0;
            while (1)
            {
              uint64_t v36 = *v2;
              uint64_t v37 = *(void *)&a1[v36];
              unint64_t v38 = v37 + 1;
              if (v37 == -1 || v38 > *(void *)&a1[*v3]) {
                break;
              }
              char v39 = *(unsigned char *)(*(void *)&a1[*v5] + v37);
              *(void *)&a1[v36] = v38;
              v35 |= (unint64_t)(v39 & 0x7F) << v33;
              if ((v39 & 0x80) == 0) {
                goto LABEL_69;
              }
              v33 += 7;
              BOOL v13 = v34++ >= 9;
              if (v13)
              {
                unint64_t v35 = 0;
                int v40 = a1[*v4];
                goto LABEL_71;
              }
            }
            a1[*v4] = 1;
LABEL_69:
            int v40 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v35 = 0;
            }
LABEL_71:
            int v41 = v35 & 7;
            if (v40 || v41 == 4) {
              break;
            }
            if ((v35 >> 3) == 2)
            {
              if (v41 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1)) {
                goto LABEL_183;
              }
              PBReaderRecallMark();
            }
            else if ((v35 >> 3) == 1 && v41 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_183:
              PBReaderRecallMark();
              goto LABEL_184;
            }
          }
          int v43 = a1[*v4];
          PBReaderRecallMark();
          if (!v43)
          {
            PBReaderRecallMark();
            goto LABEL_36;
          }
        }
LABEL_184:
        PBReaderRecallMark();
LABEL_185:
        PBReaderRecallMark();
        return 0;
      case 3u:
      case 5u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1)) {
          goto LABEL_180;
        }
        goto LABEL_185;
      case 4u:
        if ((v8 & 7) != 0) {
          goto LABEL_185;
        }
        unsigned int v44 = 0;
        while (1)
        {
          uint64_t v45 = *v2;
          uint64_t v46 = *(void *)&a1[v45];
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)&a1[*v3]) {
            goto LABEL_121;
          }
          int v48 = *(char *)(*(void *)&a1[*v5] + v46);
          *(void *)&a1[v45] = v47;
          if (v48 < 0)
          {
            BOOL v22 = v44++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_181;
        }
      case 6u:
        if ((v8 & 7) != 0) {
          goto LABEL_185;
        }
        unsigned int v49 = 0;
        while (1)
        {
          uint64_t v50 = *v2;
          uint64_t v51 = *(void *)&a1[v50];
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)&a1[*v3]) {
            goto LABEL_121;
          }
          int v53 = *(char *)(*(void *)&a1[*v5] + v51);
          *(void *)&a1[v50] = v52;
          if (v53 < 0)
          {
            BOOL v22 = v49++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_181;
        }
      case 7u:
        if ((v8 & 7) != 0) {
          goto LABEL_185;
        }
        unsigned int v54 = 0;
        while (1)
        {
          uint64_t v55 = *v2;
          uint64_t v56 = *(void *)&a1[v55];
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)&a1[*v3]) {
            goto LABEL_121;
          }
          int v58 = *(char *)(*(void *)&a1[*v5] + v56);
          *(void *)&a1[v55] = v57;
          if (v58 < 0)
          {
            BOOL v22 = v54++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_181;
        }
      case 8u:
        if ((v8 & 7) != 0) {
          goto LABEL_185;
        }
        unsigned int v59 = 0;
        while (1)
        {
          uint64_t v60 = *v2;
          uint64_t v61 = *(void *)&a1[v60];
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)&a1[*v3]) {
            break;
          }
          int v63 = *(char *)(*(void *)&a1[*v5] + v61);
          *(void *)&a1[v60] = v62;
          if (v63 < 0)
          {
            BOOL v22 = v59++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_181;
        }
LABEL_121:
        a1[*v4] = 1;
        goto LABEL_181;
      case 9u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_185;
        }
        [a1 position];
        [a1 length];
LABEL_125:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
        {
          char v64 = 0;
          unsigned int v65 = 0;
          unint64_t v66 = 0;
          while (2)
          {
            uint64_t v67 = *v2;
            uint64_t v68 = *(void *)&a1[v67];
            unint64_t v69 = v68 + 1;
            if (v68 == -1 || v69 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v70 = *(unsigned char *)(*(void *)&a1[*v5] + v68);
              *(void *)&a1[v67] = v69;
              v66 |= (unint64_t)(v70 & 0x7F) << v64;
              if (v70 < 0)
              {
                v64 += 7;
                BOOL v13 = v65++ >= 9;
                if (v13)
                {
                  unint64_t v66 = 0;
                  uint64_t v71 = *v4;
                  int v72 = a1[v71];
                  goto LABEL_137;
                }
                continue;
              }
            }
            break;
          }
          uint64_t v71 = *v4;
          int v72 = a1[v71];
          if (a1[v71]) {
            unint64_t v66 = 0;
          }
LABEL_137:
          int v73 = v66 & 7;
          if (v72) {
            BOOL v74 = 1;
          }
          else {
            BOOL v74 = v73 == 4;
          }
          if (!v74)
          {
            switch((v66 >> 3))
            {
              case 1u:
                if (v73 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_184;
                }
                continue;
              case 2u:
                if ((v66 & 7) != 0) {
                  goto LABEL_184;
                }
                unsigned int v75 = 0;
                while (1)
                {
                  uint64_t v76 = *v2;
                  uint64_t v77 = *(void *)&a1[v76];
                  unint64_t v78 = v77 + 1;
                  if (v77 == -1 || v78 > *(void *)&a1[*v3]) {
                    goto LABEL_171;
                  }
                  int v79 = *(char *)(*(void *)&a1[*v5] + v77);
                  *(void *)&a1[v76] = v78;
                  if (v79 < 0)
                  {
                    BOOL v22 = v75++ > 8;
                    if (!v22) {
                      continue;
                    }
                  }
                  goto LABEL_125;
                }
              case 3u:
                if ((v66 & 7) != 0) {
                  goto LABEL_184;
                }
                unsigned int v80 = 0;
                while (1)
                {
                  uint64_t v81 = *v2;
                  uint64_t v82 = *(void *)&a1[v81];
                  unint64_t v83 = v82 + 1;
                  if (v82 == -1 || v83 > *(void *)&a1[*v3]) {
                    goto LABEL_171;
                  }
                  int v84 = *(char *)(*(void *)&a1[*v5] + v82);
                  *(void *)&a1[v81] = v83;
                  if (v84 < 0)
                  {
                    BOOL v22 = v80++ > 8;
                    if (!v22) {
                      continue;
                    }
                  }
                  goto LABEL_125;
                }
              case 4u:
                if ((v66 & 7) != 0) {
                  goto LABEL_184;
                }
                unsigned int v85 = 0;
                break;
              case 5u:
                if (v73 != 5) {
                  goto LABEL_184;
                }
                uint64_t v90 = *v2;
                unint64_t v91 = *(void *)&a1[v90];
                if (v91 > 0xFFFFFFFFFFFFFFFBLL) {
                  goto LABEL_172;
                }
                unint64_t v92 = v91 + 4;
                if (v92 > *(void *)&a1[*v3]) {
                  goto LABEL_172;
                }
                *(void *)&a1[v90] = v92;
                continue;
              default:
                if (!PBReaderSkipValueWithTag()) {
                  goto LABEL_184;
                }
                continue;
            }
            while (1)
            {
              uint64_t v86 = *v2;
              uint64_t v87 = *(void *)&a1[v86];
              unint64_t v88 = v87 + 1;
              if (v87 == -1 || v88 > *(void *)&a1[*v3]) {
                break;
              }
              int v89 = *(char *)(*(void *)&a1[*v5] + v87);
              *(void *)&a1[v86] = v88;
              if (v89 < 0)
              {
                BOOL v22 = v85++ > 8;
                if (!v22) {
                  continue;
                }
              }
              goto LABEL_125;
            }
LABEL_171:
            uint64_t v71 = *v4;
LABEL_172:
            a1[v71] = 1;
            continue;
          }
          break;
        }
        int v93 = a1[*v4];
        PBReaderRecallMark();
        if (!v93) {
          goto LABEL_180;
        }
        goto LABEL_185;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_185;
        }
        goto LABEL_181;
    }
  }
}

void sub_18A19EC14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceQuestionnaireResultIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 68);
  if ((v2 & 0x200) != 0) {
    return 1;
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEOPDScorecardLayoutIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 68);
  }
  if ((v2 & 0x60) != 0) {
    return 1;
  }
  return (v2 >> 7) & 1;
}

os_unfair_lock_s *GEOPDPlaceQuestionnaireResultIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDPlaceQuestionnaireResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A19F168(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A19FB98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRatingCategoryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          uint64_t v16 = 0;
        }
        else {
          uint64_t v16 = a3;
        }
        BOOL v17 = v16 == 0;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v49 = v17;
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        int v21 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_59;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v18;
      uint64_t v26 = *(void *)(v3 + v25);
      unint64_t v27 = v26 + 1;
      if (v26 == -1 || v27 > *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v20) + v26);
      *(void *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0) {
        goto LABEL_25;
      }
      v22 += 7;
      if (v23++ >= 9)
      {
        unint64_t v24 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v30 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v24 = 0;
    }
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_59:
      if (v15)
      {
        char v44 = 1;
        goto LABEL_72;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            int v46 = *v16++;
            int v45 = v46;
            if (v46 != 1 && v45 != 2) {
              break;
            }
            *(unsigned char *)(a1 + v21[320]) |= v45;
          }
        }
        while (v45);
      }
      goto LABEL_73;
    }
    unint64_t v32 = v24 >> 3;
    BOOL v33 = v15;
    if (!v49)
    {
      unsigned int v34 = v16;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    if (v32 == 2) {
      break;
    }
    if (v32 != 1)
    {
      int v41 = PBReaderSkipValueWithTag();
      uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v41) {
        goto LABEL_68;
      }
      goto LABEL_55;
    }
    if (v33)
    {
      if (*(unsigned char *)(a1 + v21[320]))
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_69:
          char v44 = 0;
          goto LABEL_71;
        }
        v9 -= *(unsigned char *)(a1 + v21[320]) & 1;
      }
      else
      {
        uint64_t v38 = PBReaderReadString();
        char v39 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v38;

        --v9;
      }
      goto LABEL_54;
    }
LABEL_50:
    char v42 = PBReaderSkipValueWithTag();
    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v42 & 1) == 0)
    {
LABEL_68:
      char v44 = 0;
      goto LABEL_72;
    }
LABEL_55:
    if (v9) {
      char v43 = 1;
    }
    else {
      char v43 = v15;
    }
    if ((v43 & 1) == 0) {
      goto LABEL_59;
    }
  }
  if (!v33 || (*(unsigned char *)(a1 + v21[320]) & 2) != 0) {
    goto LABEL_50;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_69;
  }
  int v40 = objc_alloc_init(GEOLocalizedString);
  if (GEOLocalizedStringReadAllFrom((uint64_t)v40, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDRatingCategory _addNoFlagsLocalizedName:](a1, v40);

    int v21 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
LABEL_54:
    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_55;
  }

  char v44 = 0;
  int v21 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
LABEL_71:
  uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + v21[320]) |= 1u;
  *(unsigned char *)(a1 + v21[320]) |= 2u;
  if (v44)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (!v15) {
      return v3;
    }
    goto LABEL_74;
  }
  unint64_t v3 = 0;
  if (v15)
  {
LABEL_74:
    unint64_t v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18A1A00F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1A05EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDRatingCategoryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDRatingCategoryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDRatingCategoryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDRatingCategoryReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDRatingCategoryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDRatingCategoryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDRatingCategoryCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18A1A087C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1A0A98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDRatingCategoryIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 44) & 7) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 24);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOLocalizedStringIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

void sub_18A1A0E08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1A1108(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDScorecardLayoutReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          uint64_t v16 = 0;
        }
        else {
          uint64_t v16 = a3;
        }
        BOOL v17 = v16 == 0;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v50 = v17;
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        int v21 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_59;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v18;
      uint64_t v26 = *(void *)(v3 + v25);
      unint64_t v27 = v26 + 1;
      if (v26 == -1 || v27 > *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v20) + v26);
      *(void *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0) {
        goto LABEL_25;
      }
      v22 += 7;
      if (v23++ >= 9)
      {
        unint64_t v24 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v30 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v24 = 0;
    }
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_59:
      if (v15)
      {
        char v44 = 1;
        goto LABEL_74;
      }
      if (!v16) {
        goto LABEL_75;
      }
      while (1)
      {
        int v47 = *v16++;
        int v46 = v47;
        if (v47 == 1) {
          break;
        }
        if (v46 == 2)
        {
          char v45 = 1;
LABEL_65:
          *(unsigned char *)(a1 + v21[325]) |= v45;
        }
        else if (!v46)
        {
          goto LABEL_75;
        }
      }
      char v45 = 2;
      goto LABEL_65;
    }
    unint64_t v32 = v24 >> 3;
    BOOL v33 = v15;
    if (!v50)
    {
      unsigned int v34 = v16;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    if (v32 == 2) {
      break;
    }
    if (v32 != 1)
    {
      int v41 = PBReaderSkipValueWithTag();
      uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v41) {
        goto LABEL_70;
      }
      goto LABEL_55;
    }
    if (v33)
    {
      if ((*(unsigned char *)(a1 + v21[325]) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_71:
          char v44 = 0;
          goto LABEL_73;
        }
        v9 += *(unsigned __int8 *)(a1 + v21[325]) << 30 >> 31;
      }
      else
      {
        uint64_t v38 = PBReaderReadString();
        char v39 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v38;

        --v9;
      }
      goto LABEL_54;
    }
LABEL_50:
    char v42 = PBReaderSkipValueWithTag();
    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v42 & 1) == 0)
    {
LABEL_70:
      char v44 = 0;
      goto LABEL_74;
    }
LABEL_55:
    if (v9) {
      char v43 = 1;
    }
    else {
      char v43 = v15;
    }
    if ((v43 & 1) == 0) {
      goto LABEL_59;
    }
  }
  if (!v33 || (*(unsigned char *)(a1 + v21[325]) & 1) != 0) {
    goto LABEL_50;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_71;
  }
  int v40 = objc_alloc_init(GEOPDRatingCategory);
  if (GEOPDRatingCategoryReadAllFrom((uint64_t)v40, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDScorecardLayout _addNoFlagsRatingCategory:](a1, v40);

    int v21 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
LABEL_54:
    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_55;
  }

  char v44 = 0;
  int v21 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
LABEL_73:
  uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_74:
  *(unsigned char *)(a1 + v21[325]) |= 2u;
  *(unsigned char *)(a1 + v21[325]) |= 1u;
  if (v44)
  {
LABEL_75:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v15) {
      goto LABEL_76;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v15)
    {
LABEL_76:
      int v48 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_18A1A16F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1A1BEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDScorecardLayoutCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 16);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        -[GEOPDRatingCategory readAll:](*(void *)(*((void *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDScorecardLayoutReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDScorecardLayoutReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDScorecardLayoutReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDScorecardLayoutReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDScorecardLayoutReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDScorecardLayoutCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18A1A1E7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1A2098(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDScorecardLayoutIsDirty(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 44) & 7) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 44) & 1) == 0) {
    return 0;
  }
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v3 = *(id *)(a1 + 16);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v3);
        }
        long long v6 = *(os_unfair_lock_s **)(*((void *)&v9 + 1) + 8 * i);
        if (v6)
        {
          os_unfair_lock_lock_with_options();
          char IsDirty = _GEOPDRatingCategoryIsDirty((uint64_t)v6);
          os_unfair_lock_unlock(v6 + 10);
          if (IsDirty)
          {
            uint64_t v2 = 1;
            goto LABEL_16;
          }
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_16:

  return v2;
}

os_unfair_lock_s *GEOPDScorecardLayoutIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDScorecardLayoutIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A1A249C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1A34D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineDataBatchReferenceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  BOOL v57 = v15;
  uint64_t v16 = (int *)MEMORY[0x1E4F940E8];
  BOOL v17 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_86;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      unint64_t v23 = *(void *)(v3 + v22);
      if (v23 == -1 || v23 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v25 = v20++ >= 9;
      if (v25)
      {
        unint64_t v21 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_86:
      if (v13)
      {
        char v51 = 1;
        goto LABEL_97;
      }
      if (!v14)
      {
LABEL_98:
        unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
        if (!v13) {
          return v3;
        }
LABEL_99:
        uint64_t v55 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      }
      while (1)
      {
        int v53 = *v14++;
        int v52 = v53;
        if (v53 == 1) {
          break;
        }
        if (v52 == 2)
        {
          char v54 = 8;
LABEL_95:
          *(unsigned char *)(a1 + 60) |= v54;
        }
        else if (!v52)
        {
          goto LABEL_98;
        }
      }
      char v54 = 4;
      goto LABEL_95;
    }
    unint64_t v28 = v21 >> 3;
    BOOL v29 = v13;
    if (!v57)
    {
      int v30 = v14;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if (!v29) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 60) & 4) == 0)
        {
          uint64_t v34 = PBReaderReadData();
          uint64_t v35 = 24;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_96;
        }
        char v49 = 32 * *(unsigned char *)(a1 + 60);
        goto LABEL_81;
      case 2:
        if (!v29) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 40;
LABEL_49:
          int v36 = *(void **)(a1 + v35);
          *(void *)(a1 + v35) = v34;

          --v9;
          goto LABEL_82;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v49 = 16 * *(unsigned char *)(a1 + 60);
LABEL_81:
          v9 += v49 >> 7;
LABEL_82:
          if (v9) {
            char v50 = 1;
          }
          else {
            char v50 = v13;
          }
          if ((v50 & 1) == 0) {
            goto LABEL_86;
          }
          continue;
        }
LABEL_96:
        char v51 = 0;
LABEL_97:
        *(unsigned char *)(a1 + 60) |= 4u;
        *(unsigned char *)(a1 + 60) |= 8u;
        if (v51) {
          goto LABEL_98;
        }
        unint64_t v3 = 0;
        if (v13) {
          goto LABEL_99;
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_66;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v40 = *v16;
          unint64_t v41 = *(void *)(v3 + v40);
          if (v41 == -1 || v41 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(v3 + *v18) + v41);
            *(void *)(v3 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              BOOL v25 = v38++ >= 9;
              if (v25)
              {
                uint64_t v39 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          uint64_t v39 = 0;
        }
LABEL_71:
        uint64_t v48 = 32;
        goto LABEL_76;
      case 4:
        if (v8)
        {
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v39 = 0;
          *(unsigned char *)(a1 + 60) |= 1u;
          while (1)
          {
            uint64_t v45 = *v16;
            unint64_t v46 = *(void *)(v3 + v45);
            if (v46 == -1 || v46 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v47 = *(unsigned char *)(*(void *)(v3 + *v18) + v46);
            *(void *)(v3 + v45) = v46 + 1;
            v39 |= (unint64_t)(v47 & 0x7F) << v43;
            if ((v47 & 0x80) == 0) {
              goto LABEL_73;
            }
            v43 += 7;
            BOOL v25 = v44++ >= 9;
            if (v25)
            {
              uint64_t v39 = 0;
              goto LABEL_75;
            }
          }
          *(unsigned char *)(v3 + *v17) = 1;
LABEL_73:
          if (*(unsigned char *)(v3 + *v17)) {
            uint64_t v39 = 0;
          }
LABEL_75:
          uint64_t v48 = 16;
LABEL_76:
          *(void *)(a1 + v48) = v39;
        }
        else
        {
LABEL_66:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_96;
          }
        }
        goto LABEL_82;
      default:
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_96;
        }
        goto LABEL_82;
    }
  }
}

void sub_18A1A3B60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1A3EDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineDataBatchReferenceReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBOfflineDataBatchReferenceReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 48) = [v6 position];
      *(_DWORD *)(a1 + 52) = [v6 length];
      unint64_t Specified = GEOPBOfflineDataBatchReferenceReadSpecified(a1, (unint64_t)v6, (int *)&GEOPBOfflineDataBatchReferenceReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)char v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_18A1A4054(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1A421C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1A43D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1A47E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineDataBatchesRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          uint64_t v16 = 0;
        }
        else {
          uint64_t v16 = a3;
        }
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_93;
        }
        char v67 = (v16 == 0) | v15;
        char v19 = (int *)MEMORY[0x1E4F940B8];
        char v66 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_93;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v26 = v21++ >= 9;
      if (v26)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    int v28 = v22 & 7;
    if (v27 || v28 == 4)
    {
LABEL_93:
      if (v15)
      {
        char v59 = 1;
        goto LABEL_95;
      }
      if (v16)
      {
        while (1)
        {
          int v60 = *v16++;
          char v61 = 4;
          switch(v60)
          {
            case 0:
              goto LABEL_103;
            case 1:
              goto LABEL_102;
            case 2:
              char v61 = 8;
              goto LABEL_102;
            case 3:
              char v61 = 2;
LABEL_102:
              *(unsigned char *)(a1 + 76) |= v61;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_103;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v67 & 1) == 0)
    {
      int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_72;
        }
        if ((*(unsigned char *)(a1 + 76) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_108;
          }
          char v64 = objc_alloc_init(GEOMapRegion);
          if (GEOMapRegionReadAllFrom((uint64_t)v64, (void *)v3))
          {
            PBReaderRecallMark();
            int v36 = *(void **)(a1 + 48);
            *(void *)(a1 + 48) = v64;

            --v7;
            goto LABEL_90;
          }

          goto LABEL_108;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_108;
        }
        v7 += *(unsigned __int8 *)(a1 + 76) << 29 >> 31;
        goto LABEL_90;
      case 2:
        if (!v31 || (*(unsigned char *)(a1 + 76) & 8) != 0) {
          goto LABEL_72;
        }
        unsigned int v38 = PBReaderReadString();
        if (v38)
        {
          unsigned int v65 = v38;
          -[GEOPBOfflineDataBatchesRequest _addNoFlagsSupportedLanguage:](a1, v38);
          unsigned int v38 = v65;
        }

        goto LABEL_90;
      case 3:
        if (!v31 || (*(unsigned char *)(a1 + 76) & 2) != 0) {
          goto LABEL_72;
        }
        if (v28 != 2)
        {
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          while (1)
          {
            uint64_t v56 = *v17;
            unint64_t v57 = *(void *)(v3 + v56);
            if (v57 == -1 || v57 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v58 = *(unsigned char *)(*(void *)(v3 + *v19) + v57);
            *(void *)(v3 + v56) = v57 + 1;
            v55 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v26 = v54++ >= 9;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_89;
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_89:
          PBRepeatedInt32Add();
LABEL_90:
          char v15 = v66;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_91;
        }
        if (PBReaderPlaceMark())
        {
          while (1)
          {
            uint64_t v39 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
              break;
            }
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v42 = 0;
            while (1)
            {
              uint64_t v43 = *v17;
              unint64_t v44 = *(void *)(v3 + v43);
              if (v44 == -1 || v44 >= *(void *)(v3 + *v6)) {
                break;
              }
              char v45 = *(unsigned char *)(*(void *)(v3 + *v19) + v44);
              *(void *)(v3 + v43) = v44 + 1;
              v42 |= (unint64_t)(v45 & 0x7F) << v40;
              if (v45 < 0)
              {
                v40 += 7;
                BOOL v26 = v41++ >= 9;
                if (!v26) {
                  continue;
                }
              }
              goto LABEL_63;
            }
            *(unsigned char *)(v3 + *v39) = 1;
LABEL_63:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v66;
LABEL_91:
          if (!(v15 & 1 | (v7 != 0)) || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_93;
          }
          continue;
        }
LABEL_108:
        char v59 = 0;
        char v15 = v66;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
        *(unsigned char *)(a1 + 76) |= 4u;
        *(unsigned char *)(a1 + 76) |= 8u;
        *(unsigned char *)(a1 + 76) |= 2u;
        if (v59)
        {
LABEL_103:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_104;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v15 & 1) == 0) {
          return v3;
        }
LABEL_104:
        unint64_t v62 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 4:
        if (v8)
        {
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          *(unsigned char *)(a1 + 76) |= 1u;
          while (1)
          {
            uint64_t v49 = *v17;
            unint64_t v50 = *(void *)(v3 + v49);
            if (v50 == -1 || v50 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v51 = *(unsigned char *)(*(void *)(v3 + *v19) + v50);
            *(void *)(v3 + v49) = v50 + 1;
            v48 |= (unint64_t)(v51 & 0x7F) << v46;
            if ((v51 & 0x80) == 0) {
              goto LABEL_75;
            }
            v46 += 7;
            BOOL v26 = v47++ >= 9;
            if (v26)
            {
              uint64_t v48 = 0;
              goto LABEL_77;
            }
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_75:
          if (*(unsigned char *)(v3 + *v18)) {
            uint64_t v48 = 0;
          }
LABEL_77:
          *(void *)(a1 + 40) = v48;
        }
        else
        {
LABEL_72:
          char v52 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v66;
          if ((v52 & 1) == 0)
          {
LABEL_106:
            char v59 = 0;
            goto LABEL_95;
          }
        }
        goto LABEL_91;
      default:
        int v37 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v66;
        if (!v37) {
          goto LABEL_106;
        }
        goto LABEL_91;
    }
  }
}

void sub_18A1A50B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1A5478(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1A6438(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineDataBatchesRequestReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBOfflineDataBatchesRequestReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 64) = [v6 position];
      *(_DWORD *)(a1 + 68) = [v6 length];
      unint64_t Specified = GEOPBOfflineDataBatchesRequestReadSpecified(a1, (unint64_t)v6, (int *)&GEOPBOfflineDataBatchesRequestReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_18A1A65B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1A6BA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1A7008(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1A84F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1A8BD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineDataBatchesSizeRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          uint64_t v16 = 0;
        }
        else {
          uint64_t v16 = a3;
        }
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_93;
        }
        char v67 = (v16 == 0) | v15;
        char v19 = (int *)MEMORY[0x1E4F940B8];
        char v66 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_93;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v26 = v21++ >= 9;
      if (v26)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    int v28 = v22 & 7;
    if (v27 || v28 == 4)
    {
LABEL_93:
      if (v15)
      {
        char v59 = 1;
        goto LABEL_95;
      }
      if (v16)
      {
        while (1)
        {
          int v60 = *v16++;
          char v61 = 4;
          switch(v60)
          {
            case 0:
              goto LABEL_103;
            case 1:
              goto LABEL_102;
            case 2:
              char v61 = 8;
              goto LABEL_102;
            case 3:
              char v61 = 2;
LABEL_102:
              *(unsigned char *)(a1 + 76) |= v61;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_103;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v67 & 1) == 0)
    {
      int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_72;
        }
        if ((*(unsigned char *)(a1 + 76) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_108;
          }
          char v64 = objc_alloc_init(GEOMapRegion);
          if (GEOMapRegionReadAllFrom((uint64_t)v64, (void *)v3))
          {
            PBReaderRecallMark();
            int v36 = *(void **)(a1 + 48);
            *(void *)(a1 + 48) = v64;

            --v7;
            goto LABEL_90;
          }

          goto LABEL_108;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_108;
        }
        v7 += *(unsigned __int8 *)(a1 + 76) << 29 >> 31;
        goto LABEL_90;
      case 2:
        if (!v31 || (*(unsigned char *)(a1 + 76) & 8) != 0) {
          goto LABEL_72;
        }
        unsigned int v38 = PBReaderReadString();
        if (v38)
        {
          unsigned int v65 = v38;
          -[GEOPBOfflineDataBatchesSizeRequest _addNoFlagsSupportedLanguage:](a1, v38);
          unsigned int v38 = v65;
        }

        goto LABEL_90;
      case 3:
        if (!v31 || (*(unsigned char *)(a1 + 76) & 2) != 0) {
          goto LABEL_72;
        }
        if (v28 != 2)
        {
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          while (1)
          {
            uint64_t v56 = *v17;
            unint64_t v57 = *(void *)(v3 + v56);
            if (v57 == -1 || v57 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v58 = *(unsigned char *)(*(void *)(v3 + *v19) + v57);
            *(void *)(v3 + v56) = v57 + 1;
            v55 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v26 = v54++ >= 9;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_89;
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_89:
          PBRepeatedInt32Add();
LABEL_90:
          char v15 = v66;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_91;
        }
        if (PBReaderPlaceMark())
        {
          while (1)
          {
            uint64_t v39 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
              break;
            }
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v42 = 0;
            while (1)
            {
              uint64_t v43 = *v17;
              unint64_t v44 = *(void *)(v3 + v43);
              if (v44 == -1 || v44 >= *(void *)(v3 + *v6)) {
                break;
              }
              char v45 = *(unsigned char *)(*(void *)(v3 + *v19) + v44);
              *(void *)(v3 + v43) = v44 + 1;
              v42 |= (unint64_t)(v45 & 0x7F) << v40;
              if (v45 < 0)
              {
                v40 += 7;
                BOOL v26 = v41++ >= 9;
                if (!v26) {
                  continue;
                }
              }
              goto LABEL_63;
            }
            *(unsigned char *)(v3 + *v39) = 1;
LABEL_63:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v66;
LABEL_91:
          if (!(v15 & 1 | (v7 != 0)) || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_93;
          }
          continue;
        }
LABEL_108:
        char v59 = 0;
        char v15 = v66;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
        *(unsigned char *)(a1 + 76) |= 4u;
        *(unsigned char *)(a1 + 76) |= 8u;
        *(unsigned char *)(a1 + 76) |= 2u;
        if (v59)
        {
LABEL_103:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_104;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v15 & 1) == 0) {
          return v3;
        }
LABEL_104:
        unint64_t v62 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 4:
        if (v8)
        {
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          *(unsigned char *)(a1 + 76) |= 1u;
          while (1)
          {
            uint64_t v49 = *v17;
            unint64_t v50 = *(void *)(v3 + v49);
            if (v50 == -1 || v50 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v51 = *(unsigned char *)(*(void *)(v3 + *v19) + v50);
            *(void *)(v3 + v49) = v50 + 1;
            v48 |= (unint64_t)(v51 & 0x7F) << v46;
            if ((v51 & 0x80) == 0) {
              goto LABEL_75;
            }
            v46 += 7;
            BOOL v26 = v47++ >= 9;
            if (v26)
            {
              uint64_t v48 = 0;
              goto LABEL_77;
            }
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_75:
          if (*(unsigned char *)(v3 + *v18)) {
            uint64_t v48 = 0;
          }
LABEL_77:
          *(void *)(a1 + 40) = v48;
        }
        else
        {
LABEL_72:
          char v52 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v66;
          if ((v52 & 1) == 0)
          {
LABEL_106:
            char v59 = 0;
            goto LABEL_95;
          }
        }
        goto LABEL_91;
      default:
        int v37 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v66;
        if (!v37) {
          goto LABEL_106;
        }
        goto LABEL_91;
    }
  }
}

void sub_18A1A949C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1A9860(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1AA23C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineDataBatchesSizeRequestReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBOfflineDataBatchesSizeRequestReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 64) = [v6 position];
      *(_DWORD *)(a1 + 68) = [v6 length];
      unint64_t Specified = GEOPBOfflineDataBatchesSizeRequestReadSpecified(a1, (unint64_t)v6, (int *)&GEOPBOfflineDataBatchesSizeRequestReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_18A1AA3B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1AA9A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1AAE0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1ABCFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineDataKeyValueReferenceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    BOOL v14 = 0;
  }
  else {
    BOOL v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  BOOL v59 = v15;
  uint64_t v16 = (int *)MEMORY[0x1E4F940E8];
  BOOL v17 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_86;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      unint64_t v23 = *(void *)(v3 + v22);
      if (v23 == -1 || v23 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v25 = v20++ >= 9;
      if (v25)
      {
        unint64_t v21 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_86:
      if (v13)
      {
        char v53 = 1;
        goto LABEL_97;
      }
      if (!v14) {
        goto LABEL_98;
      }
      while (1)
      {
        int v55 = *v14++;
        int v54 = v55;
        if (v55 == 1) {
          break;
        }
        if (v54 == 2)
        {
          char v56 = 8;
LABEL_95:
          *(unsigned char *)(a1 + 60) |= v56;
        }
        else if (!v54)
        {
          goto LABEL_98;
        }
      }
      char v56 = 4;
      goto LABEL_95;
    }
    unint64_t v28 = v21 >> 3;
    BOOL v29 = v13;
    if (!v59)
    {
      unint64_t v30 = v14;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if (!v29) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 60) & 4) == 0)
        {
          uint64_t v34 = PBReaderReadData();
          uint64_t v35 = 16;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_103;
        }
        char v51 = 32 * *(unsigned char *)(a1 + 60);
        goto LABEL_81;
      case 2:
        if (!v29) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 24;
LABEL_49:
          int v37 = *(void **)(a1 + v35);
          *(void *)(a1 + v35) = v34;

          BOOL v17 = (int *)MEMORY[0x1E4F940C8];
          --v9;
          goto LABEL_82;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v51 = 16 * *(unsigned char *)(a1 + 60);
LABEL_81:
          v9 += v51 >> 7;
          BOOL v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_82:
          if (v9) {
            char v52 = 1;
          }
          else {
            char v52 = v13;
          }
          if ((v52 & 1) == 0) {
            goto LABEL_86;
          }
          continue;
        }
LABEL_103:
        char v53 = 0;
        BOOL v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_97:
        *(unsigned char *)(a1 + 60) |= 4u;
        *(unsigned char *)(a1 + 60) |= 8u;
        if (v53)
        {
LABEL_98:
          unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
          if (v13) {
            goto LABEL_99;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v13)
          {
LABEL_99:
            unint64_t v57 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_66;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v41 = *v16;
          unint64_t v42 = *(void *)(v3 + v41);
          if (v42 == -1 || v42 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(v3 + *v18) + v42);
            *(void *)(v3 + v4objc_destroyWeak(this + 1) = v42 + 1;
            v40 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              BOOL v25 = v39++ >= 9;
              if (v25)
              {
                uint64_t v40 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          uint64_t v40 = 0;
        }
LABEL_71:
        uint64_t v50 = 40;
        goto LABEL_76;
      case 4:
        if (v8)
        {
          char v44 = 0;
          unsigned int v45 = 0;
          uint64_t v40 = 0;
          *(unsigned char *)(a1 + 60) |= 1u;
          while (1)
          {
            uint64_t v46 = *v16;
            unint64_t v47 = *(void *)(v3 + v46);
            if (v47 == -1 || v47 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v48 = *(unsigned char *)(*(void *)(v3 + *v18) + v47);
            *(void *)(v3 + v46) = v47 + 1;
            v40 |= (unint64_t)(v48 & 0x7F) << v44;
            if ((v48 & 0x80) == 0) {
              goto LABEL_73;
            }
            v44 += 7;
            BOOL v25 = v45++ >= 9;
            if (v25)
            {
              uint64_t v40 = 0;
              goto LABEL_75;
            }
          }
          *(unsigned char *)(v3 + *v17) = 1;
LABEL_73:
          if (*(unsigned char *)(v3 + *v17)) {
            uint64_t v40 = 0;
          }
LABEL_75:
          uint64_t v50 = 32;
LABEL_76:
          *(void *)(a1 + v50) = v40;
        }
        else
        {
LABEL_66:
          char v49 = PBReaderSkipValueWithTag();
          BOOL v17 = (int *)MEMORY[0x1E4F940C8];
          if ((v49 & 1) == 0)
          {
LABEL_96:
            char v53 = 0;
            goto LABEL_97;
          }
        }
        goto LABEL_82;
      default:
        int v36 = PBReaderSkipValueWithTag();
        BOOL v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v36) {
          goto LABEL_96;
        }
        goto LABEL_82;
    }
  }
}

void sub_18A1ACB28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1ACC08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineDataKeyValueReferenceReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBOfflineDataKeyValueReferenceReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 48) = [v6 position];
      *(_DWORD *)(a1 + 52) = [v6 length];
      unint64_t Specified = GEOPBOfflineDataKeyValueReferenceReadSpecified(a1, (unint64_t)v6, (int *)&GEOPBOfflineDataKeyValueReferenceReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)char v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_18A1ACD84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1ACF4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1AD100(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBOfflineDataLayerBatchesReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_31;
          }
          BOOL v17 = objc_alloc_init(GEOPBOfflineDataBatchReference);
          if (!GEOPBOfflineDataBatchReferenceReadAllFrom((uint64_t)v17, v3))
          {

            goto LABEL_31;
          }
          PBReaderRecallMark();
          -[GEOPBOfflineDataLayerBatches addBatchReference:](a1, v17);
        }
        else if ((v10 >> 3) == 1)
        {
          if (!PBReaderPlaceMark()
            || (GEOPBOfflineDataLayerVersionReadAllFrom(a1 + 8, (uint64_t)v3) & 1) == 0)
          {
            goto LABEL_31;
          }
          PBReaderRecallMark();
          *(unsigned char *)(a1 + 40) |= 1u;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_31;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v18 = v3[*v6] == 0;
  }
  else
  {
LABEL_31:
    BOOL v18 = 0;
  }
  objc_sync_exit(v3);

  return v18;
}

void sub_18A1AD910(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPBOfflineDataLayerVersionIsValid(void *a1)
{
  v4[3] = [a1 position];
  v4[4] = [a1 length];
  memset(v4, 0, 24);
  uint64_t AllFrom = GEOPBOfflineDataLayerVersionReadAllFrom((uint64_t)v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

uint64_t GEOPBOfflineDataLayerVersionWriteTo(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 16);
  if (v2)
  {
    uint64_t result = PBDataWriterWriteInt32Field();
    char v2 = *(unsigned char *)(v1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    return PBDataWriterWriteUint64Field();
  }
  return result;
}

void sub_18A1AE3A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id _GEOPBOfflineDataLayerVersionDictionaryRepresentation(int *a1)
{
  char v2 = [MEMORY[0x1E4F1CA60] dictionary];
  char v3 = *((unsigned char *)a1 + 16);
  if (v3)
  {
    uint64_t v4 = *a1;
    if (v4 >= 0x15)
    {
      objc_msgSend(NSString, "stringWithFormat:", @"(unknown: %i)", *a1);
      uint64_t v5 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      uint64_t v5 = off_1E53F7110[v4];
    }
    [v2 setObject:v5 forKey:@"layer"];

    char v3 = *((unsigned char *)a1 + 16);
  }
  if ((v3 & 2) != 0)
  {
    id v6 = [NSNumber numberWithUnsignedLongLong:*((void *)a1 + 1)];
    [v2 setObject:v6 forKey:@"version"];
  }

  return v2;
}

void _GEOPBOfflineDataLayerVersionFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 objectForKeyedSubscript:@"layer"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 16) |= 1u;
    id v5 = v4;
    if ([v5 isEqualToString:@"LAYER_UNKNOWN"])
    {
      int v6 = 0;
    }
    else if ([v5 isEqualToString:@"LAYER_FARPOINT_METADATA"])
    {
      int v6 = 1;
    }
    else if ([v5 isEqualToString:@"LAYER_ROUTING"])
    {
      int v6 = 2;
    }
    else if ([v5 isEqualToString:@"LAYER_POI_SEARCH_AND_PLACES"])
    {
      int v6 = 3;
    }
    else if ([v5 isEqualToString:@"LAYER_VECTOR_PARSEC_INDEX"])
    {
      int v6 = 4;
    }
    else if ([v5 isEqualToString:@"LAYER_REVGEO"])
    {
      int v6 = 5;
    }
    else if ([v5 isEqualToString:@"LAYER_VECTOR_PARSEC_DATA"])
    {
      int v6 = 6;
    }
    else if ([v5 isEqualToString:@"LAYER_GEO_SEARCH"])
    {
      int v6 = 7;
    }
    else if ([v5 isEqualToString:@"LAYER_SEARCH_STATIC_CONTENT"])
    {
      int v6 = 8;
    }
    else if ([v5 isEqualToString:@"LAYER_VECTOR_TILE"])
    {
      int v6 = 9;
    }
    else if ([v5 isEqualToString:@"LAYER_BROWSE_AND_CATEGORY_SEARCH"])
    {
      int v6 = 10;
    }
    else if ([v5 isEqualToString:@"LAYER_VECTOR_ASSET"])
    {
      int v6 = 11;
    }
    else if ([v5 isEqualToString:@"LAYER_SEARCH_ML_MODELS"])
    {
      int v6 = 12;
    }
    else if ([v5 isEqualToString:@"LAYER_ROUTING_V2"])
    {
      int v6 = 13;
    }
    else if ([v5 isEqualToString:@"LAYER_ROUTING_V2_TRANSIT"])
    {
      int v6 = 14;
    }
    else if ([v5 isEqualToString:@"LAYER_ROUTING_V2_TRAFFIC_INCIDENTS"])
    {
      int v6 = 15;
    }
    else if ([v5 isEqualToString:@"LAYER_GEO_SEARCH_V2"])
    {
      int v6 = 16;
    }
    else if ([v5 isEqualToString:@"LAYER_ROUTING_V3"])
    {
      int v6 = 17;
    }
    else if ([v5 isEqualToString:@"LAYER_ROUTING_V3_METADATA"])
    {
      int v6 = 18;
    }
    else if ([v5 isEqualToString:@"LAYER_ROUTING_V3_TRANSIT"])
    {
      int v6 = 19;
    }
    else if ([v5 isEqualToString:@"LAYER_ROUTING_V3_TRAFFIC_INCIDENTS"])
    {
      int v6 = 20;
    }
    else
    {
      int v6 = 0;
    }
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_49;
    }
    int v6 = [v4 intValue];
  }
  *(_DWORD *)a2 = v6;
LABEL_49:

  id v7 = [v3 objectForKeyedSubscript:@"version"];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 16) |= 2u;
    *(void *)(a2 + 8) = [v7 unsignedLongLongValue];
  }
}

uint64_t GEOPBOfflineDataLayerVersionReadAllFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v1objc_destroyWeak(this + 1) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        *(unsigned char *)(a1 + 16) |= 2u;
        while (1)
        {
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 == -1 || v27 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
          *(void *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0) {
            goto LABEL_41;
          }
          v23 += 7;
          BOOL v14 = v24++ >= 9;
          if (v14)
          {
            uint64_t v25 = 0;
            goto LABEL_43;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
LABEL_43:
        *(void *)(a1 + 8) = v25;
      }
      else if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 16) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_39;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_39:
        *(_DWORD *)a1 = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL GEOPBOfflineTileMetadataReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    int v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      id v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          char v17 = objc_alloc_init(GEOPBTileStyleZoomAvailability);
          if (!GEOPBTileStyleZoomAvailabilityReadAllFrom((uint64_t)v17, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          -[GEOPBOfflineTileMetadata addTileStyleAvailability:](a1, v17);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v18 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    BOOL v18 = 0;
  }
  objc_sync_exit(v3);

  return v18;
}

void sub_18A1B0460(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBOfflineTileMetadataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]]) {
    goto LABEL_83;
  }
  id v5 = (int *)MEMORY[0x1E4F940B8];
  do
  {
    if (a1[*v4]) {
      break;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      unint64_t v10 = *(void *)&a1[v9];
      if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
        break;
      }
      char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v10 + 1;
      v8 |= (unint64_t)(v11 & 0x7F) << v6;
      if ((v11 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v12 = v7++ >= 9;
      if (v12)
      {
        unint64_t v8 = 0;
        int v13 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v13 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v14 = v8 & 7;
    if (v13) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = v14 == 4;
    }
    if (v15) {
      break;
    }
    if ((v8 >> 3) != 1)
    {
      if (PBReaderSkipValueWithTag()) {
        continue;
      }
LABEL_85:
      PBReaderRecallMark();
      return 0;
    }
    if (v14 != 2 || !PBReaderPlaceMark()) {
      goto LABEL_85;
    }
    objc_msgSend(a1, "position", 0, 0);
    [a1 length];
LABEL_22:
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
    {
      char v16 = 0;
      unsigned int v17 = 0;
      unint64_t v18 = 0;
      while (1)
      {
        uint64_t v19 = *v2;
        unint64_t v20 = *(void *)&a1[v19];
        if (v20 == -1 || v20 >= *(void *)&a1[*v3]) {
          break;
        }
        char v21 = *(unsigned char *)(*(void *)&a1[*v5] + v20);
        *(void *)&a1[v19] = v20 + 1;
        v18 |= (unint64_t)(v21 & 0x7F) << v16;
        if ((v21 & 0x80) == 0) {
          goto LABEL_32;
        }
        v16 += 7;
        BOOL v12 = v17++ >= 9;
        if (v12)
        {
          unint64_t v18 = 0;
          int v22 = a1[*v4];
          goto LABEL_34;
        }
      }
      a1[*v4] = 1;
LABEL_32:
      int v22 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v18 = 0;
      }
LABEL_34:
      int v23 = v18 & 7;
      if (v22 || v23 == 4) {
        break;
      }
      unint64_t v25 = v18 >> 3;
      if ((v18 >> 3) == 3)
      {
        if ((v18 & 7) != 0) {
          goto LABEL_84;
        }
        unsigned int v32 = 0;
        while (1)
        {
          uint64_t v33 = *v2;
          unint64_t v34 = *(void *)&a1[v33];
          if (v34 == -1 || v34 >= *(void *)&a1[*v3]) {
            goto LABEL_64;
          }
          unint64_t v35 = v34 + 1;
          int v36 = *(char *)(*(void *)&a1[*v5] + v34);
          *(void *)&a1[v33] = v35;
          if (v36 < 0)
          {
            BOOL v31 = v32++ > 8;
            if (!v31) {
              continue;
            }
          }
          goto LABEL_22;
        }
      }
      if (v25 == 2)
      {
        if (v23 == 2)
        {
          if (!PBReaderPlaceMark())
          {
LABEL_84:
            PBReaderRecallMark();
            goto LABEL_85;
          }
LABEL_68:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v42 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v43 = *v2;
              unint64_t v44 = *(void *)&a1[v43];
              if (v44 == -1 || v44 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v45 = v44 + 1;
              int v46 = *(char *)(*(void *)&a1[*v5] + v44);
              *(void *)&a1[v43] = v45;
              if (v46 < 0)
              {
                BOOL v12 = v42++ >= 9;
                if (!v12) {
                  continue;
                }
              }
              goto LABEL_68;
            }
            a1[*v4] = 1;
          }
          PBReaderRecallMark();
        }
        else
        {
          if ((v18 & 7) != 0) {
            goto LABEL_84;
          }
          while (1)
          {
            uint64_t v37 = *v2;
            unint64_t v38 = *(void *)&a1[v37];
            if (v38 == -1 || v38 >= *(void *)&a1[*v3]) {
              break;
            }
            unint64_t v39 = v38 + 1;
            int v40 = *(char *)(*(void *)&a1[*v5] + v38);
            *(void *)&a1[v37] = v39;
            if (v40 < 0)
            {
              unsigned int v41 = v23++;
              if (v41 <= 8) {
                continue;
              }
            }
            goto LABEL_22;
          }
LABEL_64:
          a1[*v4] = 1;
        }
      }
      else
      {
        if (v25 == 1)
        {
          if ((v18 & 7) != 0) {
            goto LABEL_84;
          }
          unsigned int v26 = 0;
          while (1)
          {
            uint64_t v27 = *v2;
            unint64_t v28 = *(void *)&a1[v27];
            if (v28 == -1 || v28 >= *(void *)&a1[*v3]) {
              goto LABEL_64;
            }
            unint64_t v29 = v28 + 1;
            int v30 = *(char *)(*(void *)&a1[*v5] + v28);
            *(void *)&a1[v27] = v29;
            if (v30 < 0)
            {
              BOOL v31 = v26++ > 8;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_22;
          }
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_84;
        }
      }
    }
    int v47 = a1[*v4];
    PBReaderRecallMark();
    if (v47) {
      goto LABEL_85;
    }
    PBReaderRecallMark();
  }
  while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
LABEL_83:
  BOOL v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

BOOL GEOPBTileStyleZoomAvailabilityReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        int v16 = v10 & 7;
        if (v15 || v16 == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 40) |= 1u;
          while (1)
          {
            uint64_t v27 = *v4;
            unint64_t v28 = *(void *)&v3[v27];
            if (v28 == -1 || v28 >= *(void *)&v3[*v5]) {
              break;
            }
            char v29 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
            *(void *)&v3[v27] = v28 + 1;
            v21 |= (unint64_t)(v29 & 0x7F) << v25;
            if ((v29 & 0x80) == 0) {
              goto LABEL_56;
            }
            v25 += 7;
            BOOL v14 = v26++ >= 9;
            if (v14)
            {
              LODWORD(v2objc_destroyWeak(this + 1) = 0;
              goto LABEL_58;
            }
          }
          v3[*v6] = 1;
LABEL_56:
          if (v3[*v6]) {
            LODWORD(v2objc_destroyWeak(this + 1) = 0;
          }
LABEL_58:
          uint64_t v36 = 32;
        }
        else
        {
          if (v18 == 2)
          {
            if (v16 == 2)
            {
              if (!PBReaderPlaceMark()) {
                goto LABEL_73;
              }
              while (*(void *)&v3[*v4] < *(void *)&v3[*v5] && !v3[*v6])
              {
                char v30 = 0;
                unsigned int v31 = 0;
                uint64_t v32 = 0;
                while (1)
                {
                  uint64_t v33 = *v4;
                  unint64_t v34 = *(void *)&v3[v33];
                  if (v34 == -1 || v34 >= *(void *)&v3[*v5]) {
                    break;
                  }
                  char v35 = *(unsigned char *)(*(void *)&v3[*v7] + v34);
                  *(void *)&v3[v33] = v34 + 1;
                  v32 |= (unint64_t)(v35 & 0x7F) << v30;
                  if (v35 < 0)
                  {
                    v30 += 7;
                    BOOL v14 = v31++ >= 9;
                    if (!v14) {
                      continue;
                    }
                  }
                  goto LABEL_48;
                }
                v3[*v6] = 1;
LABEL_48:
                PBRepeatedUInt32Add();
              }
              PBReaderRecallMark();
            }
            else
            {
              char v37 = 0;
              unsigned int v38 = 0;
              uint64_t v39 = 0;
              while (1)
              {
                uint64_t v40 = *v4;
                unint64_t v41 = *(void *)&v3[v40];
                if (v41 == -1 || v41 >= *(void *)&v3[*v5]) {
                  break;
                }
                char v42 = *(unsigned char *)(*(void *)&v3[*v7] + v41);
                *(void *)&v3[v40] = v41 + 1;
                v39 |= (unint64_t)(v42 & 0x7F) << v37;
                if (v42 < 0)
                {
                  v37 += 7;
                  BOOL v14 = v38++ >= 9;
                  if (!v14) {
                    continue;
                  }
                }
                goto LABEL_71;
              }
              v3[*v6] = 1;
LABEL_71:
              PBRepeatedUInt32Add();
            }
            continue;
          }
          if (v18 != 1)
          {
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_73;
            }
            continue;
          }
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 40) |= 2u;
          while (1)
          {
            uint64_t v22 = *v4;
            unint64_t v23 = *(void *)&v3[v22];
            if (v23 == -1 || v23 >= *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0) {
              goto LABEL_52;
            }
            v19 += 7;
            BOOL v14 = v20++ >= 9;
            if (v14)
            {
              LODWORD(v2objc_destroyWeak(this + 1) = 0;
              goto LABEL_54;
            }
          }
          v3[*v6] = 1;
LABEL_52:
          if (v3[*v6]) {
            LODWORD(v2objc_destroyWeak(this + 1) = 0;
          }
LABEL_54:
          uint64_t v36 = 36;
        }
        *(_DWORD *)(a1 + v36) = v21;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v43 = v3[*v6] == 0;
  }
  else
  {
LABEL_73:
    BOOL v43 = 0;
  }
  objc_sync_exit(v3);

  return v43;
}

void sub_18A1B1BF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void __GEOGetGEOComposedRouteLog_block_invoke_1()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOComposedRoute");
  uint64_t v1 = (void *)_MergedGlobals_350;
  _MergedGlobals_350 = (uint64_t)v0;
}

void __GEOGetOfflineRequesterLog_block_invoke_0()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "OfflineRequester");
  uint64_t v1 = (void *)_MergedGlobals_351;
  _MergedGlobals_351 = (uint64_t)v0;
}

void sub_18A1B3160(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A1B3218(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A1B3578(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_18A1B3858(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A1B3B14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v33 - 176), 8);
  _Block_object_dispose((const void *)(v33 - 144), 8);
  _Block_object_dispose((const void *)(v33 - 112), 8);

  _Unwind_Resume(a1);
}

void sub_18A1B4B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_18A1B51DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL GEOAlwaysUseV2PreambleForRequestKind(int a1)
{
  return a1 == 2560;
}

id GEOProtocolBufferRequestHeader(int a1, int a2, uint64_t a3)
{
  char v6 = (void *)MEMORY[0x18C1203C0]();
  id v7 = objc_alloc_init(MEMORY[0x1E4F94098]);
  writeARPCPreamble(v7, a1, a2);
  [v7 writeBigEndianFixed32:a3];
  char v8 = [v7 immutableData];

  return v8;
}

id GEOProtocolBufferRequestPreamble(int a1, int a2)
{
  uint64_t v4 = (void *)MEMORY[0x18C1203C0]();
  id v5 = objc_alloc_init(MEMORY[0x1E4F94098]);
  writeARPCPreamble(v5, a1, a2);
  char v6 = [v5 immutableData];

  return v6;
}

void sub_18A1B6AD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1B7234(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1B73AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1B7520(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1B7698(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1B7A60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1B7F38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1B81EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1B8364(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1B8524(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1B8698(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1B880C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1B8B2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1B8EF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOETARequestCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  [a1[23] readAll:1];
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  id v2 = a1[15];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v43 objects:v51 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v44;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v44 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v43 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v43 objects:v51 count:16];
    }
    while (v4);
  }

  [a1[9] readAll:1];
  [a1[19] readAll:1];
  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  id v7 = a1[14];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v39 objects:v50 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v40;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v40 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v39 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v39 objects:v50 count:16];
    }
    while (v9);
  }

  long long v37 = 0u;
  long long v38 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  id v12 = a1[17];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v35 objects:v49 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v36;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v36 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v35 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v35 objects:v49 count:16];
    }
    while (v14);
  }

  [a1[10] readAll:1];
  [a1[13] readAll:1];
  [a1[34] readAll:1];
  [a1[35] readAll:1];
  [a1[12] readAll:1];
  [a1[22] readAll:1];
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  id v17 = a1[16];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v31 objects:v48 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v32;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v32 != v20) {
          objc_enumerationMutation(v17);
        }
        [*(id *)(*((void *)&v31 + 1) + 8 * v21++) readAll:1];
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v31 objects:v48 count:16];
    }
    while (v19);
  }

  [a1[11] readAll:1];
  [a1[18] readAll:1];
  [a1[8] readAll:1];
  [a1[27] readAll:1];
  [a1[26] readAll:1];
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v22 = a1[29];
  uint64_t v23 = [v22 countByEnumeratingWithState:&v27 objects:v47 count:16];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)v28;
    do
    {
      uint64_t v26 = 0;
      do
      {
        if (*(void *)v28 != v25) {
          objc_enumerationMutation(v22);
        }
        objc_msgSend(*(id *)(*((void *)&v27 + 1) + 8 * v26++), "readAll:", 1, (void)v27);
      }
      while (v24 != v26);
      uint64_t v24 = [v22 countByEnumeratingWithState:&v27 objects:v47 count:16];
    }
    while (v24);
  }
}

uint64_t GEOETARequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOETARequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A1BC4E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOETARequestIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_224:
    BOOL v87 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v87;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_224;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v13 = v7++ >= 9;
      if (v13)
      {
        unint64_t v8 = 0;
        uint64_t v14 = *v4;
        int v15 = a1[v14];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    uint64_t v14 = *v4;
    int v15 = a1[v14];
    if (a1[v14]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v16 = v8 & 7;
    if (v15 || v16 == 4) {
      goto LABEL_224;
    }
    switch((v8 >> 3))
    {
      case 1u:
        if ((v8 & 7) != 0) {
          goto LABEL_226;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            goto LABEL_166;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0)
          {
            BOOL v23 = v18++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_211;
        }
      case 2u:
        if (v16 != 2 || !PBReaderPlaceMark() || (GEOTimepointIsValid(a1) & 1) == 0) {
          goto LABEL_226;
        }
        goto LABEL_175;
      case 3u:
      case 4u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOWaypointIsValid(a1)) {
          goto LABEL_226;
        }
        goto LABEL_175;
      case 5u:
        if ((v8 & 7) != 0) {
          goto LABEL_226;
        }
        unsigned int v24 = 0;
        while (1)
        {
          uint64_t v25 = *v2;
          uint64_t v26 = *(void *)&a1[v25];
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
            goto LABEL_166;
          }
          int v28 = *(char *)(*(void *)&a1[*v5] + v26);
          *(void *)&a1[v25] = v27;
          if (v28 < 0)
          {
            BOOL v23 = v24++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_211;
        }
      case 6u:
        if ((v8 & 7) != 0) {
          goto LABEL_226;
        }
        unsigned int v29 = 0;
        while (1)
        {
          uint64_t v30 = *v2;
          uint64_t v31 = *(void *)&a1[v30];
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
            goto LABEL_166;
          }
          int v33 = *(char *)(*(void *)&a1[*v5] + v31);
          *(void *)&a1[v30] = v32;
          if (v33 < 0)
          {
            BOOL v23 = v29++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_211;
        }
      case 7u:
        if ((v8 & 7) != 0) {
          goto LABEL_226;
        }
        unsigned int v34 = 0;
        while (1)
        {
          uint64_t v35 = *v2;
          uint64_t v36 = *(void *)&a1[v35];
          unint64_t v37 = v36 + 1;
          if (v36 == -1 || v37 > *(void *)&a1[*v3]) {
            goto LABEL_166;
          }
          int v38 = *(char *)(*(void *)&a1[*v5] + v36);
          *(void *)&a1[v35] = v37;
          if (v38 < 0)
          {
            BOOL v23 = v34++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_211;
        }
      case 8u:
        if (v16 != 2 || !PBReaderPlaceMark() || (GEOSessionIDIsValid(a1) & 1) == 0) {
          goto LABEL_226;
        }
        goto LABEL_175;
      case 9u:
        if ((v8 & 7) != 0) {
          goto LABEL_226;
        }
        unsigned int v39 = 0;
        while (1)
        {
          uint64_t v40 = *v2;
          uint64_t v41 = *(void *)&a1[v40];
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)&a1[*v3]) {
            goto LABEL_166;
          }
          int v43 = *(char *)(*(void *)&a1[*v5] + v41);
          *(void *)&a1[v40] = v42;
          if (v43 < 0)
          {
            BOOL v23 = v39++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_211;
        }
      case 0xAu:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOAdditionalEnabledMarketsIsValid(a1)) {
          goto LABEL_226;
        }
        goto LABEL_175;
      case 0xBu:
      case 0xCu:
      case 0x22u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOWaypointTypedIsValid(a1)) {
          goto LABEL_226;
        }
        goto LABEL_175;
      case 0xDu:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOAutomobileOptionsIsValid(a1)) {
          goto LABEL_226;
        }
        goto LABEL_175;
      case 0xEu:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOTransitOptionsIsValid(a1)) {
          goto LABEL_226;
        }
        goto LABEL_175;
      case 0xFu:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOWalkingOptionsIsValid(a1)) {
          goto LABEL_226;
        }
        goto LABEL_175;
      case 0x10u:
        if ((v8 & 7) != 0) {
          goto LABEL_226;
        }
        unsigned int v44 = 0;
        while (1)
        {
          uint64_t v45 = *v2;
          uint64_t v46 = *(void *)&a1[v45];
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)&a1[*v3]) {
            goto LABEL_166;
          }
          int v48 = *(char *)(*(void *)&a1[*v5] + v46);
          *(void *)&a1[v45] = v47;
          if (v48 < 0)
          {
            BOOL v23 = v44++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_211;
        }
      case 0x11u:
        goto LABEL_210;
      case 0x12u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOCommonOptionsIsValid(a1)) {
          goto LABEL_226;
        }
        goto LABEL_175;
      case 0x13u:
        if (v16 == 2) {
          goto LABEL_210;
        }
        goto LABEL_226;
      case 0x14u:
        if (v16 == 2) {
          goto LABEL_210;
        }
        goto LABEL_226;
      case 0x15u:
        if (v16 == 2) {
          goto LABEL_210;
        }
        goto LABEL_226;
      case 0x16u:
      case 0x18u:
        if (v16 != 2 || !PBReaderPlaceMark() || (GEOLocationIsValid(a1) & 1) == 0) {
          goto LABEL_226;
        }
        goto LABEL_175;
      case 0x17u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOClientCapabilitiesIsValid(a1)) {
          goto LABEL_226;
        }
        goto LABEL_175;
      case 0x19u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDABClientDatasetMetadataIsValid(a1)) {
          goto LABEL_226;
        }
        goto LABEL_175;
      case 0x1Au:
        if ((v8 & 7) != 0) {
          goto LABEL_226;
        }
        unsigned int v49 = 0;
        while (1)
        {
          uint64_t v50 = *v2;
          uint64_t v51 = *(void *)&a1[v50];
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)&a1[*v3]) {
            goto LABEL_166;
          }
          int v53 = *(char *)(*(void *)&a1[*v5] + v51);
          *(void *)&a1[v50] = v52;
          if (v53 < 0)
          {
            BOOL v23 = v49++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_211;
        }
      case 0x1Bu:
        if ((v8 & 7) != 0) {
          goto LABEL_226;
        }
        unsigned int v54 = 0;
        while (1)
        {
          uint64_t v55 = *v2;
          uint64_t v56 = *(void *)&a1[v55];
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)&a1[*v3]) {
            goto LABEL_166;
          }
          int v58 = *(char *)(*(void *)&a1[*v5] + v56);
          *(void *)&a1[v55] = v57;
          if (v58 < 0)
          {
            BOOL v23 = v54++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_211;
        }
      case 0x1Cu:
        if (v16 == 2) {
          goto LABEL_210;
        }
        goto LABEL_226;
      case 0x1Du:
        if (v16 != 2) {
          goto LABEL_226;
        }
LABEL_210:
        if (PBReaderSkipValueWithTag()) {
          goto LABEL_211;
        }
        goto LABEL_226;
      case 0x1Eu:
        if (v16 != 1) {
          goto LABEL_226;
        }
        uint64_t v59 = *v2;
        unint64_t v60 = *(void *)&a1[v59];
        if (v60 > 0xFFFFFFFFFFFFFFF7) {
          goto LABEL_167;
        }
        unint64_t v61 = v60 + 8;
        if (v61 > *(void *)&a1[*v3]) {
          goto LABEL_167;
        }
        *(void *)&a1[v59] = v61;
        goto LABEL_211;
      case 0x1Fu:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOCyclingOptionsIsValid(a1)) {
          goto LABEL_226;
        }
        goto LABEL_175;
      case 0x20u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOOriginalWaypointRouteIsValid(a1)) {
          goto LABEL_226;
        }
        goto LABEL_175;
      case 0x21u:
        if ((v8 & 7) != 0) {
          goto LABEL_226;
        }
        unsigned int v62 = 0;
        while (1)
        {
          uint64_t v63 = *v2;
          uint64_t v64 = *(void *)&a1[v63];
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)&a1[*v3]) {
            break;
          }
          int v66 = *(char *)(*(void *)&a1[*v5] + v64);
          *(void *)&a1[v63] = v65;
          if (v66 < 0)
          {
            BOOL v23 = v62++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_211;
        }
LABEL_166:
        uint64_t v14 = *v4;
LABEL_167:
        a1[v14] = 1;
        goto LABEL_211;
      case 0x23u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEORecentLocationHistoryIsValid(a1)) {
          goto LABEL_226;
        }
        goto LABEL_175;
      case 0x24u:
        if (v16 == 2 && PBReaderPlaceMark() && GEOPrivacyMetadataIsValid(a1)) {
          goto LABEL_175;
        }
        goto LABEL_226;
      case 0x25u:
        if (v16 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_226;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_179:
        if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
          goto LABEL_221;
        }
        char v67 = 0;
        unsigned int v68 = 0;
        unint64_t v69 = 0;
        while (1)
        {
          uint64_t v70 = *v2;
          uint64_t v71 = *(void *)&a1[v70];
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)&a1[*v3]) {
            break;
          }
          char v73 = *(unsigned char *)(*(void *)&a1[*v5] + v71);
          *(void *)&a1[v70] = v72;
          v69 |= (unint64_t)(v73 & 0x7F) << v67;
          if ((v73 & 0x80) == 0) {
            goto LABEL_189;
          }
          v67 += 7;
          BOOL v13 = v68++ >= 9;
          if (v13)
          {
            unint64_t v69 = 0;
            int v74 = a1[*v4];
            goto LABEL_191;
          }
        }
        a1[*v4] = 1;
LABEL_189:
        int v74 = a1[*v4];
        if (a1[*v4]) {
          unint64_t v69 = 0;
        }
LABEL_191:
        if (v74 || (v69 & 7) == 4)
        {
LABEL_221:
          int v86 = a1[*v4];
          PBReaderRecallMark();
          if (v86) {
            goto LABEL_226;
          }
LABEL_175:
          PBReaderRecallMark();
LABEL_211:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_224;
          }
          continue;
        }
        if ((v69 >> 3) != 1)
        {
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_225;
          }
          goto LABEL_179;
        }
        if ((v69 & 7) == 0)
        {
          unsigned int v76 = 0;
          do
          {
            uint64_t v77 = *v2;
            uint64_t v78 = *(void *)&a1[v77];
            unint64_t v79 = v78 + 1;
            if (v78 == -1 || v79 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_179;
            }
            int v80 = *(char *)(*(void *)&a1[*v5] + v78);
            *(void *)&a1[v77] = v79;
            if ((v80 & 0x80000000) == 0) {
              break;
            }
            BOOL v23 = v76++ > 8;
          }
          while (!v23);
          goto LABEL_179;
        }
LABEL_225:
        PBReaderRecallMark();
LABEL_226:
        PBReaderRecallMark();
        return 0;
      default:
        switch((v8 >> 3))
        {
          case 'd':
            if (v16 != 2 || !PBReaderPlaceMark() || (GEOGeoServiceTagIsValid(a1) & 1) == 0) {
              goto LABEL_226;
            }
            goto LABEL_175;
          case 'e':
            if (v16 == 2) {
              goto LABEL_210;
            }
            goto LABEL_226;
          case 'f':
            if (v16 == 2) {
              goto LABEL_210;
            }
            goto LABEL_226;
          case 'g':
            if ((v8 & 7) != 0) {
              goto LABEL_226;
            }
            unsigned int v81 = 0;
            break;
          default:
            goto LABEL_210;
        }
        while (1)
        {
          uint64_t v82 = *v2;
          uint64_t v83 = *(void *)&a1[v82];
          unint64_t v84 = v83 + 1;
          if (v83 == -1 || v84 > *(void *)&a1[*v3]) {
            break;
          }
          int v85 = *(char *)(*(void *)&a1[*v5] + v83);
          *(void *)&a1[v82] = v84;
          if (v85 < 0)
          {
            BOOL v23 = v81++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_211;
        }
        a1[*v4] = 1;
        goto LABEL_211;
    }
  }
}

os_unfair_lock_s *GEOETARequestIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOETARequestIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 74);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A1BE6AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1BFDEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1C0928(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1C0A94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1C0EF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1C1064(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1C1490(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1C15FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETAResponseCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v2 = *(id *)(a1 + 88);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOETAResult readAll:](*(void *)(*((void *)&v17 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v4);
  }

  [*(id *)(a1 + 96) readAll:1];
  -[GEOETAResult readAll:](*(void *)(a1 + 80), 1);
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = *(id *)(a1 + 72);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        -[GEOETAResult readAll:](*(void *)(*((void *)&v13 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v9);
  }

  objc_msgSend(*(id *)(a1 + 56), "readAll:", 1, (void)v13);
  [*(id *)(a1 + 104) readAll:1];
  return [*(id *)(a1 + 48) readAll:1];
}

uint64_t GEOETAResponseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOETAResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A1C29CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *GEOETAResponseIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOETAResponseIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 30);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEOETAResponseClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  -[GEOETAResponse _readEtaResults]((uint64_t)a1);
  if ([a1[11] count])
  {
    unint64_t v6 = 0;
    do
    {
      id v7 = [a1[11] objectAtIndexedSubscript:v6];
      uint64_t v8 = v7;
      if (a3 && GEOETAResultHasSensitiveFields(v7))
      {
        uint64_t v9 = (void *)[v8 copy];
        GEOETAResultClearSensitiveFields((uint64_t)v9, a2, 0);
        [a1[11] replaceObjectAtIndex:v6 withObject:v9];
      }
      else if (v8)
      {
        GEOETAResultClearSensitiveFields((uint64_t)v8, a2, 1);
      }

      ++v6;
    }
    while (v6 < [a1[11] count]);
  }
  if (a3)
  {
    if ([a1 hasOriginPlaceSearchResponse]
      && ([a1 originPlaceSearchResponse],
          uint64_t v10 = objc_claimAutoreleasedReturnValue(),
          int HasSensitiveFields = GEOPlaceSearchResponseHasSensitiveFields(v10),
          v10,
          HasSensitiveFields))
    {
      char v12 = [a1 originPlaceSearchResponse];
      long long v13 = (void *)[v12 copy];

      GEOPlaceSearchResponseClearSensitiveFields((uint64_t)v13, a2, 0);
      [a1 setOriginPlaceSearchResponse:v13];
    }
    else
    {
      long long v13 = [a1 originPlaceSearchResponse];
      [v13 clearSensitiveFields:a2];
    }

    if ([a1 hasEtaResultReferencePointOrigin])
    {
      long long v15 = [a1 etaResultReferencePointOrigin];
      unsigned int v16 = GEOETAResultHasSensitiveFields(v15);

      if (v16)
      {
        long long v17 = [a1 etaResultReferencePointOrigin];
        long long v18 = (void *)[v17 copy];

        GEOETAResultClearSensitiveFields((uint64_t)v18, a2, 0);
        [a1 setEtaResultReferencePointOrigin:v18];
        goto LABEL_20;
      }
    }
  }
  else
  {
    long long v14 = [a1 originPlaceSearchResponse];
    [v14 clearSensitiveFields:a2];
  }
  uint64_t v19 = [a1 etaResultReferencePointOrigin];
  long long v18 = (void *)v19;
  if (v19) {
    GEOETAResultClearSensitiveFields(v19, a2, 1);
  }
LABEL_20:

  -[GEOETAResponse _readEtaResultReferencePointDestinations]((uint64_t)a1);
  unint64_t result = [a1[9] count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      int v22 = [a1[9] objectAtIndexedSubscript:i];
      uint64_t v23 = v22;
      if (a3 && GEOETAResultHasSensitiveFields(v22))
      {
        unsigned int v24 = (void *)[v23 copy];
        GEOETAResultClearSensitiveFields((uint64_t)v24, a2, 0);
        [a1[9] replaceObjectAtIndex:i withObject:v24];
      }
      else if (v23)
      {
        GEOETAResultClearSensitiveFields((uint64_t)v23, a2, 1);
      }

      unint64_t result = [a1[9] count];
    }
  }
  return result;
}

uint64_t GEOETAResponseHasSensitiveFields(uint64_t result)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if (result)
  {
    uint64_t v1 = (void *)result;
    id v2 = [(id)result originPlaceSearchResponse];
    if (GEOPlaceSearchResponseHasSensitiveFields(v2))
    {
LABEL_3:

      return 1;
    }
    id v3 = [v1 etaResultReferencePointOrigin];
    unsigned __int8 v4 = GEOETAResultHasSensitiveFields(v3);

    if (v4) {
      return 1;
    }
    long long v20 = 0u;
    long long v21 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    id v2 = [v1 etaResults];
    uint64_t v5 = [v2 countByEnumeratingWithState:&v18 objects:v23 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v19;
LABEL_9:
      uint64_t v8 = 0;
      while (1)
      {
        if (*(void *)v19 != v7) {
          objc_enumerationMutation(v2);
        }
        if (GEOETAResultHasSensitiveFields(*(id **)(*((void *)&v18 + 1) + 8 * v8))) {
          goto LABEL_3;
        }
        if (v6 == ++v8)
        {
          uint64_t v6 = [v2 countByEnumeratingWithState:&v18 objects:v23 count:16];
          if (v6) {
            goto LABEL_9;
          }
          break;
        }
      }
    }

    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    uint64_t v9 = objc_msgSend(v1, "etaResultReferencePointDestinations", 0);
    uint64_t v10 = [v9 countByEnumeratingWithState:&v14 objects:v22 count:16];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = *(void *)v15;
      while (2)
      {
        uint64_t v13 = 0;
        do
        {
          if (*(void *)v15 != v12) {
            objc_enumerationMutation(v9);
          }
          if (GEOETAResultHasSensitiveFields(*(id **)(*((void *)&v14 + 1) + 8 * v13)))
          {

            return 1;
          }
          ++v13;
        }
        while (v11 != v13);
        uint64_t v11 = [v9 countByEnumeratingWithState:&v14 objects:v22 count:16];
        if (v11) {
          continue;
        }
        break;
      }
    }

    return 0;
  }
  return result;
}

id *GEOETAResultHasSensitiveFields(id *result)
{
  if (result)
  {
    uint64_t v1 = -[GEOETAResult placeSearchResponse](result);
    uint64_t HasSensitiveFields = GEOPlaceSearchResponseHasSensitiveFields(v1);

    return (id *)HasSensitiveFields;
  }
  return result;
}

void GEOETAResultClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  if (a1
    && a3
    && (-[GEOETAResult _readPlaceSearchResponse](a1), *(void *)(a1 + 32))
    && (-[GEOETAResult placeSearchResponse]((id *)a1),
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOPlaceSearchResponseHasSensitiveFields(v5),
        v5,
        HasSensitiveFields))
  {
    uint64_t v7 = -[GEOETAResult placeSearchResponse]((id *)a1);
    id v8 = (id)[v7 copy];

    GEOPlaceSearchResponseClearSensitiveFields((uint64_t)v8, a2, 0);
    -[GEOETAResult setPlaceSearchResponse:](a1, v8);
  }
  else
  {
    -[GEOETAResult placeSearchResponse]((id *)a1);
    id v8 = (id)objc_claimAutoreleasedReturnValue();
    [v8 clearSensitiveFields:a2];
  }
}

void sub_18A1C3A2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1C432C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1C4848(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1C4A5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1C4CBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1C5570(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOETAResultCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  [a1[4] readAll:1];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = a1[5];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = a1[3];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

os_unfair_lock_s *GEOETAResultIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOETAResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A1C6230(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1C7148(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1C72B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1C8A08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOETAResultByTypeCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(a1 + 48);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }

  [*(id *)(a1 + 32) readAll:1];
  -[GEOShortTrafficSummary readAll:](*(void *)(a1 + 40), 1);
}

unint64_t GEOETAResultByTypeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOETAResultByTypeReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A1C8B90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1C8F50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETAResultByTypeIsDirty(uint64_t a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  __int16 v2 = *(_WORD *)(a1 + 104);
  if ((v2 & 0x6000) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 104) & 0x800) != 0)
  {
    if (GEORouteTrafficDetailIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x1000) == 0) {
    goto LABEL_11;
  }
  uint64_t v5 = *(os_unfair_lock_s **)(a1 + 40);
  if (v5)
  {
    os_unfair_lock_lock_with_options();
    char IsDirty = _GEOShortTrafficSummaryIsDirty((uint64_t)v5);
    os_unfair_lock_unlock(v5 + 12);
    if (IsDirty) {
      return 1;
    }
  }
  __int16 v2 = *(_WORD *)(a1 + 104);
LABEL_11:
  if ((v2 & 0x2000) == 0) {
    return 0;
  }
  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v7 = *(id *)(a1 + 48);
  uint64_t v3 = [v7 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    uint64_t v8 = *(void *)v11;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v11 != v8) {
          objc_enumerationMutation(v7);
        }
        if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v10 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_23;
        }
      }
      uint64_t v3 = [v7 countByEnumeratingWithState:&v10 objects:v14 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_23:

  return v3;
}

os_unfair_lock_s *GEOETAResultByTypeIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOETAResultByTypeIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A1C9844(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1CA1E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1CA674(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOETARouteReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 280));
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 276);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 272)];
  uint64_t v6 = 0;
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  long long v11 = (const float *)(a1 + 308);
  uint32x4_t v12 = (uint32x4_t)vld1q_dup_f32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  unsigned int v14 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A641620), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A641630), v13)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A641600), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A641610), v13))), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A641640), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A641650), v13))));
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v16 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v18 = v14 > 0x11;
        char v19 = v18 & ~(_BYTE)v10 | v8;
        char v20 = v18 | v10;
        if (((v18 | v10) | v7)) {
          long long v21 = 0;
        }
        else {
          long long v21 = a3;
        }
        uint64_t v22 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v23 = (int *)MEMORY[0x1E4F940E0];
        int v167 = 1;
        char v24 = v19;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + (int)*MEMORY[0x1E4F940E0])) {
          goto LABEL_345;
        }
        char v166 = v19;
        char v168 = v20 | v19;
        char v170 = (v21 == 0) | v20;
        uint64_t v25 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
        char v169 = v20;
        break;
      default:
        ++v14;
LABEL_7:
        uint64_t v15 = v8;
LABEL_8:
        uint64_t v16 = v9;
        uint64_t v17 = v10;
LABEL_10:
        ++v6;
        uint64_t v8 = v15;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v25)) {
      goto LABEL_339;
    }
    char v27 = 0;
    unsigned int v28 = 0;
    unint64_t v29 = 0;
    while (1)
    {
      uint64_t v30 = *v22;
      uint64_t v31 = *(void *)(v3 + v30);
      unint64_t v32 = v31 + 1;
      if (v31 == -1 || v32 > *(void *)(v3 + *v23)) {
        break;
      }
      char v33 = *(unsigned char *)(*(void *)(v3 + *v26) + v31);
      *(void *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0) {
        goto LABEL_25;
      }
      v27 += 7;
      BOOL v34 = v28++ >= 9;
      if (v34)
      {
        unint64_t v29 = 0;
        int v35 = *(unsigned __int8 *)(v3 + *v25);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v25) = 1;
LABEL_25:
    int v35 = *(unsigned __int8 *)(v3 + *v25);
    if (*(unsigned char *)(v3 + *v25)) {
      unint64_t v29 = 0;
    }
LABEL_27:
    int v36 = v29 & 7;
    if (v35 || v36 == 4)
    {
LABEL_339:
      int v167 = 1;
      goto LABEL_344;
    }
    unint64_t v38 = v29 >> 3;
    BOOL v39 = v20;
    if ((v170 & 1) == 0)
    {
      uint64_t v40 = v21;
      do
      {
        int v42 = *v40++;
        int v41 = v42;
        BOOL v39 = v42 != 0;
        if (v42) {
          BOOL v43 = v41 == v38;
        }
        else {
          BOOL v43 = 1;
        }
      }
      while (!v43);
    }
    switch((int)v38)
    {
      case 1:
        if (!v39) {
          goto LABEL_263;
        }
        if ((*(unsigned char *)(a1 + 310) & 0x80) == 0)
        {
          uint64_t v44 = PBReaderReadData();
          uint64_t v45 = 216;
          goto LABEL_228;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_342;
        }
        int v133 = (int)(*(_DWORD *)(a1 + 308) << 8) >> 31;
        goto LABEL_303;
      case 2:
        if (!v39 || (*(unsigned char *)(a1 + 311) & 4) != 0) {
          goto LABEL_261;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_342;
        }
        uint64_t v46 = objc_alloc_init(GEOETAStep);
        if (!GEOETAStepReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_341;
        }
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsStep:](a1, v46);
        goto LABEL_245;
      case 3:
        if (!v39 || (*(unsigned char *)(a1 + 311) & 0x20) != 0) {
          goto LABEL_261;
        }
        PBReaderReadData();
        uint64_t v46 = (GEOETAStep *)objc_claimAutoreleasedReturnValue();
        if (v46) {
          -[GEOETARoute _addNoFlagsZilchPoints:](a1, v46);
        }
        goto LABEL_245;
      case 4:
        if ((v7 & 1) == 0) {
          goto LABEL_263;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        *(_DWORD *)(a1 + 308) |= 0x20u;
        uint64_t v23 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v50 = *v22;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v23))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v26) + v51);
            *(void *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v34 = v48++ >= 9;
              if (v34)
              {
                uint64_t v49 = 0;
                goto LABEL_269;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v49 = 0;
        }
LABEL_269:
        *(unsigned char *)(a1 + 304) = v49 != 0;
        goto LABEL_306;
      case 5:
        if (!v39 || (*(unsigned char *)(a1 + 310) & 0x40) != 0) {
          goto LABEL_261;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_342;
        }
        uint64_t v46 = objc_alloc_init(GEORoute);
        if (!GEORouteReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_341;
        }
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsReroutedRoute:](a1, v46);
        goto LABEL_245;
      case 6:
        if (!v39 || (*(unsigned char *)(a1 + 310) & 4) != 0) {
          goto LABEL_261;
        }
        PBReaderReadData();
        uint64_t v46 = (GEOETAStep *)objc_claimAutoreleasedReturnValue();
        if (v46) {
          -[GEOETARoute _addNoFlagsInvalidSectionZilchPoints:](a1, v46);
        }
        goto LABEL_245;
      case 7:
        if (!v39 || (*(unsigned char *)(a1 + 309) & 4) != 0) {
          goto LABEL_263;
        }
        if (v36 != 2)
        {
          char v134 = 0;
          unsigned int v135 = 0;
          uint64_t v136 = 0;
          uint64_t v23 = (int *)MEMORY[0x1E4F940E0];
          while (1)
          {
            uint64_t v137 = *v22;
            uint64_t v138 = *(void *)(v3 + v137);
            unint64_t v139 = v138 + 1;
            if (v138 == -1 || v139 > *(void *)(v3 + *v23)) {
              goto LABEL_337;
            }
            char v140 = *(unsigned char *)(*(void *)(v3 + *v26) + v138);
            *(void *)(v3 + v137) = v139;
            v136 |= (unint64_t)(v140 & 0x7F) << v134;
            if (v140 < 0)
            {
              v134 += 7;
              BOOL v34 = v135++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_338;
          }
        }
        int v54 = PBReaderPlaceMark();
        uint64_t v23 = (int *)MEMORY[0x1E4F940E0];
        if (!v54) {
          goto LABEL_342;
        }
        while (1)
        {
          uint64_t v55 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v23) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_265;
          }
          char v56 = 0;
          unsigned int v57 = 0;
          uint64_t v58 = 0;
          uint64_t v59 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v60 = *v22;
            uint64_t v61 = *(void *)(v3 + v60);
            unint64_t v62 = v61 + 1;
            if (v61 == -1 || v62 > *(void *)(v3 + *v23)) {
              break;
            }
            char v63 = *(unsigned char *)(*(void *)(v3 + *v59) + v61);
            *(void *)(v3 + v60) = v62;
            v58 |= (unint64_t)(v63 & 0x7F) << v56;
            if (v63 < 0)
            {
              v56 += 7;
              BOOL v34 = v57++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_82;
          }
          *(unsigned char *)(v3 + *v55) = 1;
LABEL_82:
          PBRepeatedUInt32Add();
        }
      case 8:
        if (!v39 || (*(unsigned char *)(a1 + 309) & 2) != 0) {
          goto LABEL_263;
        }
        if (v36 != 2)
        {
          char v141 = 0;
          unsigned int v142 = 0;
          uint64_t v143 = 0;
          uint64_t v23 = (int *)MEMORY[0x1E4F940E0];
          while (1)
          {
            uint64_t v144 = *v22;
            uint64_t v145 = *(void *)(v3 + v144);
            unint64_t v146 = v145 + 1;
            if (v145 == -1 || v146 > *(void *)(v3 + *v23)) {
              goto LABEL_337;
            }
            char v147 = *(unsigned char *)(*(void *)(v3 + *v26) + v145);
            *(void *)(v3 + v144) = v146;
            v143 |= (unint64_t)(v147 & 0x7F) << v141;
            if (v147 < 0)
            {
              v141 += 7;
              BOOL v34 = v142++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_338;
          }
        }
        int v64 = PBReaderPlaceMark();
        uint64_t v23 = (int *)MEMORY[0x1E4F940E0];
        if (!v64) {
          goto LABEL_342;
        }
        while (1)
        {
          unint64_t v65 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v23) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_265;
          }
          char v66 = 0;
          unsigned int v67 = 0;
          uint64_t v68 = 0;
          unint64_t v69 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v70 = *v22;
            uint64_t v71 = *(void *)(v3 + v70);
            unint64_t v72 = v71 + 1;
            if (v71 == -1 || v72 > *(void *)(v3 + *v23)) {
              break;
            }
            char v73 = *(unsigned char *)(*(void *)(v3 + *v69) + v71);
            *(void *)(v3 + v70) = v72;
            v68 |= (unint64_t)(v73 & 0x7F) << v66;
            if (v73 < 0)
            {
              v66 += 7;
              BOOL v34 = v67++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_97;
          }
          *(unsigned char *)(v3 + *v65) = 1;
LABEL_97:
          PBRepeatedUInt32Add();
        }
      case 10:
        if (!v39 || (*(unsigned char *)(a1 + 310) & 1) != 0) {
          goto LABEL_261;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_342;
        }
        uint64_t v46 = objc_alloc_init(GEORouteIncident);
        if (!GEORouteIncidentReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_341;
        }
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsIncidentsOnETARoute:](a1, v46);
        goto LABEL_245;
      case 11:
        if (!v39 || (*(unsigned char *)(a1 + 310) & 2) != 0) {
          goto LABEL_261;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_342;
        }
        uint64_t v46 = objc_alloc_init(GEORouteIncident);
        if (!GEORouteIncidentReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_341;
        }
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsIncidentsOnReRoutes:](a1, v46);
        goto LABEL_245;
      case 12:
        if (!v39 || (*(unsigned char *)(a1 + 309) & 0x80) != 0) {
          goto LABEL_261;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_342;
        }
        uint64_t v46 = objc_alloc_init(GEORouteIncident);
        if (!GEORouteIncidentReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_341;
        }
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsIncidentsOffReRoutes:](a1, v46);
        goto LABEL_245;
      case 13:
        if ((v7 & 1) == 0) {
          goto LABEL_263;
        }
        char v77 = 0;
        unsigned int v78 = 0;
        uint64_t v79 = 0;
        *(_DWORD *)(a1 + 308) |= 1u;
        uint64_t v23 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v80 = *v22;
          uint64_t v81 = *(void *)(v3 + v80);
          unint64_t v82 = v81 + 1;
          if (v81 == -1 || v82 > *(void *)(v3 + *v23))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v83 = *(unsigned char *)(*(void *)(v3 + *v26) + v81);
            *(void *)(v3 + v80) = v82;
            v79 |= (unint64_t)(v83 & 0x7F) << v77;
            if (v83 < 0)
            {
              v77 += 7;
              BOOL v34 = v78++ >= 9;
              if (v34)
              {
                LODWORD(v79) = 0;
                goto LABEL_273;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v79) = 0;
        }
LABEL_273:
        uint64_t v132 = 284;
        goto LABEL_290;
      case 14:
        if (!v39 || (*(unsigned char *)(a1 + 308) & 0x80) != 0) {
          goto LABEL_263;
        }
        if (v36 != 2)
        {
          char v148 = 0;
          unsigned int v149 = 0;
          uint64_t v150 = 0;
          uint64_t v23 = (int *)MEMORY[0x1E4F940E0];
          while (1)
          {
            uint64_t v151 = *v22;
            uint64_t v152 = *(void *)(v3 + v151);
            unint64_t v153 = v152 + 1;
            if (v152 == -1 || v153 > *(void *)(v3 + *v23)) {
              goto LABEL_337;
            }
            char v154 = *(unsigned char *)(*(void *)(v3 + *v26) + v152);
            *(void *)(v3 + v15objc_destroyWeak(this + 1) = v153;
            v150 |= (unint64_t)(v154 & 0x7F) << v148;
            if (v154 < 0)
            {
              v148 += 7;
              BOOL v34 = v149++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_338;
          }
        }
        int v84 = PBReaderPlaceMark();
        uint64_t v23 = (int *)MEMORY[0x1E4F940E0];
        if (!v84) {
          goto LABEL_342;
        }
        while (1)
        {
          int v85 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v23) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_265;
          }
          char v86 = 0;
          unsigned int v87 = 0;
          uint64_t v88 = 0;
          int v89 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v90 = *v22;
            uint64_t v91 = *(void *)(v3 + v90);
            unint64_t v92 = v91 + 1;
            if (v91 == -1 || v92 > *(void *)(v3 + *v23)) {
              break;
            }
            char v93 = *(unsigned char *)(*(void *)(v3 + *v89) + v91);
            *(void *)(v3 + v90) = v92;
            v88 |= (unint64_t)(v93 & 0x7F) << v86;
            if (v93 < 0)
            {
              v86 += 7;
              BOOL v34 = v87++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_141;
          }
          *(unsigned char *)(v3 + *v85) = 1;
LABEL_141:
          PBRepeatedUInt32Add();
        }
      case 15:
        if (!v39) {
          goto LABEL_263;
        }
        if ((*(unsigned char *)(a1 + 311) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_342;
          }
          int v133 = (16 * *(_DWORD *)(a1 + 308)) >> 31;
          goto LABEL_303;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_342;
        }
        uint64_t v46 = objc_alloc_init(GEOTrafficBannerText);
        if (!GEOTrafficBannerTextReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_341;
        }
        PBReaderRecallMark();
        uint64_t v94 = 248;
        goto LABEL_224;
      case 16:
        if ((v7 & 1) == 0) {
          goto LABEL_263;
        }
        char v95 = 0;
        unsigned int v96 = 0;
        uint64_t v79 = 0;
        *(_DWORD *)(a1 + 308) |= 4u;
        uint64_t v23 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v97 = *v22;
          uint64_t v98 = *(void *)(v3 + v97);
          unint64_t v99 = v98 + 1;
          if (v98 == -1 || v99 > *(void *)(v3 + *v23))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v100 = *(unsigned char *)(*(void *)(v3 + *v26) + v98);
            *(void *)(v3 + v97) = v99;
            v79 |= (unint64_t)(v100 & 0x7F) << v95;
            if (v100 < 0)
            {
              v95 += 7;
              BOOL v34 = v96++ >= 9;
              if (v34)
              {
                LODWORD(v79) = 0;
                goto LABEL_277;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v79) = 0;
        }
LABEL_277:
        uint64_t v132 = 292;
        goto LABEL_290;
      case 17:
        if ((v7 & 1) == 0) {
          goto LABEL_263;
        }
        char v101 = 0;
        unsigned int v102 = 0;
        uint64_t v79 = 0;
        *(_DWORD *)(a1 + 308) |= 8u;
        uint64_t v23 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v103 = *v22;
          uint64_t v104 = *(void *)(v3 + v103);
          unint64_t v105 = v104 + 1;
          if (v104 == -1 || v105 > *(void *)(v3 + *v23))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v106 = *(unsigned char *)(*(void *)(v3 + *v26) + v104);
            *(void *)(v3 + v103) = v105;
            v79 |= (unint64_t)(v106 & 0x7F) << v101;
            if (v106 < 0)
            {
              v101 += 7;
              BOOL v34 = v102++ >= 9;
              if (v34)
              {
                LODWORD(v79) = 0;
                goto LABEL_281;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v79) = 0;
        }
LABEL_281:
        uint64_t v132 = 296;
        goto LABEL_290;
      case 18:
        if ((v7 & 1) == 0) {
          goto LABEL_263;
        }
        char v107 = 0;
        unsigned int v108 = 0;
        uint64_t v79 = 0;
        *(_DWORD *)(a1 + 308) |= 0x10u;
        uint64_t v23 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v109 = *v22;
          uint64_t v110 = *(void *)(v3 + v109);
          unint64_t v111 = v110 + 1;
          if (v110 == -1 || v111 > *(void *)(v3 + *v23))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v112 = *(unsigned char *)(*(void *)(v3 + *v26) + v110);
            *(void *)(v3 + v109) = v111;
            v79 |= (unint64_t)(v112 & 0x7F) << v107;
            if (v112 < 0)
            {
              v107 += 7;
              BOOL v34 = v108++ >= 9;
              if (v34)
              {
                LODWORD(v79) = 0;
                goto LABEL_285;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v79) = 0;
        }
LABEL_285:
        uint64_t v132 = 300;
        goto LABEL_290;
      case 19:
        if ((v7 & 1) == 0) {
          goto LABEL_263;
        }
        char v113 = 0;
        unsigned int v114 = 0;
        uint64_t v79 = 0;
        *(_DWORD *)(a1 + 308) |= 2u;
        uint64_t v23 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v115 = *v22;
          uint64_t v116 = *(void *)(v3 + v115);
          unint64_t v117 = v116 + 1;
          if (v116 == -1 || v117 > *(void *)(v3 + *v23))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v118 = *(unsigned char *)(*(void *)(v3 + *v26) + v116);
            *(void *)(v3 + v115) = v117;
            v79 |= (unint64_t)(v118 & 0x7F) << v113;
            if (v118 < 0)
            {
              v113 += 7;
              BOOL v34 = v114++ >= 9;
              if (v34)
              {
                LODWORD(v79) = 0;
                goto LABEL_289;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v79) = 0;
        }
LABEL_289:
        uint64_t v132 = 288;
LABEL_290:
        *(_DWORD *)(a1 + v132) = v79;
        goto LABEL_306;
      case 20:
        if (!v39 || (*(unsigned char *)(a1 + 309) & 0x10) != 0) {
          goto LABEL_261;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_342;
        }
        uint64_t v46 = objc_alloc_init(GEOEnrouteNotice);
        if (!GEOEnrouteNoticeReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_341;
        }
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsEnrouteNotice:](a1, v46);
        goto LABEL_245;
      case 21:
        if (!v39 || (*(unsigned char *)(a1 + 311) & 0x10) != 0) {
          goto LABEL_261;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_342;
        }
        uint64_t v46 = objc_alloc_init(GEOTrafficColorInfo);
        if (!GEOTrafficColorInfoReadAllFrom(v46, (void *)v3)) {
          goto LABEL_341;
        }
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsTrafficColorInfo:](a1, v46);
        goto LABEL_245;
      case 22:
        if (!v39 || (*(unsigned char *)(a1 + 309) & 0x40) != 0) {
          goto LABEL_261;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_342;
        }
        uint64_t v46 = objc_alloc_init(GEOIncidentOnRouteInfo);
        if (!GEOIncidentOnRouteInfoReadAllFrom(v46, (void *)v3)) {
          goto LABEL_341;
        }
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsIncidentOnRouteInfo:](a1, v46);
        goto LABEL_245;
      case 23:
        if (!v39) {
          goto LABEL_263;
        }
        if ((*(unsigned char *)(a1 + 310) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_342;
          }
          int v133 = (int)(*(_DWORD *)(a1 + 308) << 11) >> 31;
          goto LABEL_303;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_342;
        }
        uint64_t v46 = objc_alloc_init(GEOWaypointInfo);
        if (!GEOWaypointInfoReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_341;
        }
        PBReaderRecallMark();
        uint64_t v94 = 192;
        goto LABEL_224;
      case 24:
        if (!v39) {
          goto LABEL_263;
        }
        if ((*(unsigned char *)(a1 + 309) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_342;
          }
          int v133 = (int)(*(_DWORD *)(a1 + 308) << 20) >> 31;
          goto LABEL_303;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_342;
        }
        uint64_t v46 = objc_alloc_init(GEOWaypointInfo);
        if (!GEOWaypointInfoReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_341;
        }
        PBReaderRecallMark();
        uint64_t v94 = 120;
        goto LABEL_224;
      case 25:
        if (!v39 || (*(unsigned char *)(a1 + 309) & 1) != 0) {
          goto LABEL_263;
        }
        if (v36 == 2)
        {
          int v119 = PBReaderPlaceMark();
          uint64_t v23 = (int *)MEMORY[0x1E4F940E0];
          if (!v119) {
            goto LABEL_342;
          }
          while (1)
          {
            uint64_t v120 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v23) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
              break;
            }
            char v121 = 0;
            unsigned int v122 = 0;
            uint64_t v123 = 0;
            uint64_t v124 = (int *)MEMORY[0x1E4F940B8];
            while (1)
            {
              uint64_t v125 = *v22;
              uint64_t v126 = *(void *)(v3 + v125);
              unint64_t v127 = v126 + 1;
              if (v126 == -1 || v127 > *(void *)(v3 + *v23)) {
                break;
              }
              char v128 = *(unsigned char *)(*(void *)(v3 + *v124) + v126);
              *(void *)(v3 + v125) = v127;
              v123 |= (unint64_t)(v128 & 0x7F) << v121;
              if (v128 < 0)
              {
                v121 += 7;
                BOOL v34 = v122++ >= 9;
                if (!v34) {
                  continue;
                }
              }
              goto LABEL_218;
            }
            *(unsigned char *)(v3 + *v120) = 1;
LABEL_218:
            PBRepeatedUInt32Add();
          }
LABEL_265:
          PBReaderRecallMark();
        }
        else
        {
          char v155 = 0;
          unsigned int v156 = 0;
          uint64_t v157 = 0;
          uint64_t v23 = (int *)MEMORY[0x1E4F940E0];
          while (1)
          {
            uint64_t v158 = *v22;
            uint64_t v159 = *(void *)(v3 + v158);
            unint64_t v160 = v159 + 1;
            if (v159 == -1 || v160 > *(void *)(v3 + *v23)) {
              break;
            }
            char v161 = *(unsigned char *)(*(void *)(v3 + *v26) + v159);
            *(void *)(v3 + v158) = v160;
            v157 |= (unint64_t)(v161 & 0x7F) << v155;
            if (v161 < 0)
            {
              v155 += 7;
              BOOL v34 = v156++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_338;
          }
LABEL_337:
          *(unsigned char *)(v3 + *v25) = 1;
LABEL_338:
          PBRepeatedUInt32Add();
        }
        goto LABEL_305;
      case 26:
        if (!v39) {
          goto LABEL_263;
        }
        if ((*(unsigned char *)(a1 + 310) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_342;
          }
          int v133 = (int)(*(_DWORD *)(a1 + 308) << 12) >> 31;
LABEL_303:
          v6 += v133;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_342;
          }
          uint64_t v46 = objc_alloc_init(GEONavigabilityInfo);
          if (!GEONavigabilityInfoReadAllFrom((uint64_t)v46, (void *)v3)) {
            goto LABEL_341;
          }
          PBReaderRecallMark();
          uint64_t v94 = 184;
LABEL_224:
          uint64_t v129 = *(void **)(a1 + v94);
          *(void *)(a1 + v94) = v46;
LABEL_229:

          --v6;
        }
        goto LABEL_304;
      case 27:
        if (!v39) {
          goto LABEL_263;
        }
        if ((*(unsigned char *)(a1 + 310) & 0x20) == 0)
        {
          uint64_t v44 = PBReaderReadData();
          uint64_t v45 = 200;
LABEL_228:
          uint64_t v129 = *(void **)(a1 + v45);
          *(void *)(a1 + v45) = v44;
          goto LABEL_229;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_342;
        }
        int v133 = (int)(*(_DWORD *)(a1 + 308) << 10) >> 31;
        goto LABEL_303;
      case 28:
        if (!v39 || (*(unsigned char *)(a1 + 311) & 2) != 0) {
          goto LABEL_261;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_342;
        }
        uint64_t v46 = objc_alloc_init(GEORouteLineStyleInfo);
        if (!GEORouteLineStyleInfoReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_341;
        }
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsRouteLineStyleInfo:](a1, v46);
        goto LABEL_245;
      case 29:
        if (!v39 || (*(unsigned char *)(a1 + 309) & 0x20) != 0) {
          goto LABEL_261;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_342;
        }
        uint64_t v46 = objc_alloc_init(GEOGuidanceEvent);
        if (!GEOGuidanceEventReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_341;
        }
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsGuidanceEvent:](a1, v46);
        goto LABEL_245;
      case 30:
        if (!v39 || (*(unsigned char *)(a1 + 311) & 1) != 0)
        {
LABEL_261:
          char v130 = PBReaderSkipValueWithTag();
          uint64_t v23 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v25 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          if ((v130 & 1) == 0) {
            goto LABEL_342;
          }
          goto LABEL_306;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_342;
        }
        uint64_t v46 = objc_alloc_init(GEORouteLineStyleInfo);
        if (GEORouteLineStyleInfoReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOETARoute _addNoFlagsRouteCameraInputInfo:](a1, v46);
LABEL_245:

LABEL_304:
          uint64_t v23 = (int *)MEMORY[0x1E4F940E0];
LABEL_305:
          uint64_t v25 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
LABEL_306:
          if (!(v168 & 1 | (v6 != 0)))
          {
            int v167 = 1;
            goto LABEL_343;
          }
          char v20 = v169;
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v23)) {
            goto LABEL_339;
          }
          continue;
        }
LABEL_341:

LABEL_342:
        int v167 = 0;
LABEL_343:
        char v20 = v169;
LABEL_344:
        char v24 = v166;
LABEL_345:
        if (v24) {
LABEL_346:
        }
          *(_DWORD *)(a1 + 308) |= 0x40u;
        if (v20 & 1 | ((v167 & 1) == 0))
        {
          *(_DWORD *)(a1 + 308) |= 0x800000u;
          *(_DWORD *)(a1 + 308) |= 0x4000000u;
          *(_DWORD *)(a1 + 308) |= 0x20000000u;
          *(_DWORD *)(a1 + 308) |= 0x200000u;
          *(_DWORD *)(a1 + 308) |= 0x400000u;
          *(_DWORD *)(a1 + 308) |= 0x40000u;
          *(_DWORD *)(a1 + 308) |= 0x400u;
          *(_DWORD *)(a1 + 308) |= 0x200u;
          *(_DWORD *)(a1 + 308) |= 0x2000000u;
          *(_DWORD *)(a1 + 308) |= 0x1000000u;
          *(_DWORD *)(a1 + 308) |= 0x10000u;
          *(_DWORD *)(a1 + 308) |= 0x20000u;
          *(_DWORD *)(a1 + 308) |= 0x8000u;
          *(_DWORD *)(a1 + 308) |= 0x100u;
          *(_DWORD *)(a1 + 308) |= 0x80u;
          *(_DWORD *)(a1 + 308) |= 0x8000000u;
          *(_DWORD *)(a1 + 308) |= 0x1000u;
          *(_DWORD *)(a1 + 308) |= 0x10000000u;
          *(_DWORD *)(a1 + 308) |= 0x4000u;
          *(_DWORD *)(a1 + 308) |= 0x100000u;
          *(_DWORD *)(a1 + 308) |= 0x800u;
          *(_DWORD *)(a1 + 308) |= 0x80000u;
          *(_DWORD *)(a1 + 308) |= 0x2000u;
        }
        else if (v21)
        {
          while (1)
          {
            int v162 = *v21++;
            int v163 = 0x800000;
            switch(v162)
            {
              case 0:
                goto LABEL_374;
              case 1:
                goto LABEL_373;
              case 2:
                int v163 = 0x4000000;
                goto LABEL_373;
              case 3:
                int v163 = 0x20000000;
                goto LABEL_373;
              case 5:
                int v163 = 0x400000;
                goto LABEL_373;
              case 6:
                int v163 = 0x40000;
                goto LABEL_373;
              case 7:
                int v163 = 1024;
                goto LABEL_373;
              case 8:
                int v163 = 512;
                goto LABEL_373;
              case 10:
                int v163 = 0x10000;
                goto LABEL_373;
              case 11:
                int v163 = 0x20000;
                goto LABEL_373;
              case 12:
                int v163 = 0x8000;
                goto LABEL_373;
              case 14:
                int v163 = 128;
                goto LABEL_373;
              case 15:
                int v163 = 0x8000000;
                goto LABEL_373;
              case 20:
                int v163 = 4096;
                goto LABEL_373;
              case 21:
                int v163 = 0x10000000;
                goto LABEL_373;
              case 22:
                int v163 = 0x4000;
                goto LABEL_373;
              case 23:
                int v163 = 0x100000;
                goto LABEL_373;
              case 24:
                int v163 = 2048;
                goto LABEL_373;
              case 25:
                int v163 = 256;
                goto LABEL_373;
              case 26:
                int v163 = 0x80000;
                goto LABEL_373;
              case 27:
                int v163 = 0x200000;
                goto LABEL_373;
              case 28:
                int v163 = 0x2000000;
                goto LABEL_373;
              case 29:
                int v163 = 0x2000;
                goto LABEL_373;
              case 30:
                int v163 = 0x1000000;
LABEL_373:
                *(_DWORD *)(a1 + 308) |= v163;
                break;
              default:
                continue;
            }
          }
        }
LABEL_374:
        if (v167)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v20 & 1) == 0) {
            return v3;
          }
LABEL_378:
          unint64_t v164 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v20) {
            goto LABEL_378;
          }
        }
        return v3;
      default:
        if ((v166 & 1) == 0 || (*(unsigned char *)(a1 + 308) & 0x40) != 0)
        {
LABEL_263:
          char v131 = PBReaderSkipValueWithTag();
          uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v25 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v23 = (int *)MEMORY[0x1E4F940E0];
          if ((v131 & 1) == 0) {
            goto LABEL_342;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v74 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v75 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v74;
          }
          int v76 = PBUnknownFieldAdd();
          uint64_t v23 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v25 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          if (!v76)
          {
            int v167 = 0;
            char v20 = v169;
            goto LABEL_346;
          }
        }
        goto LABEL_306;
    }
  }
}

void sub_18A1CC350(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1CC718(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1CCAE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1CCCD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1CD09C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1CD464(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1CD7F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1CDB84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1CDF4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1CE314(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1CE6DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1CEAA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1CEE6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1CF1F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1CF588(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1CF96C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1CFD34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1D00FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1D04C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1D0638(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1D07B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1D0924(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1D3B38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOETARouteCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v112 = *MEMORY[0x1E4F143B8];
  long long v97 = 0u;
  long long v98 = 0u;
  long long v99 = 0u;
  long long v100 = 0u;
  id v2 = a1[30];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v97 objects:v111 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v98;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v98 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v97 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v97 objects:v111 count:16];
    }
    while (v4);
  }

  long long v95 = 0u;
  long long v96 = 0u;
  long long v93 = 0u;
  long long v94 = 0u;
  id v7 = a1[26];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v93 objects:v110 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v94;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v94 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v93 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v93 objects:v110 count:16];
    }
    while (v9);
  }

  long long v91 = 0u;
  long long v92 = 0u;
  long long v89 = 0u;
  long long v90 = 0u;
  id v12 = a1[29];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v89 objects:v109 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v90;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v90 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v89 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v89 objects:v109 count:16];
    }
    while (v14);
  }

  long long v87 = 0u;
  long long v88 = 0u;
  long long v85 = 0u;
  long long v86 = 0u;
  id v17 = a1[28];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v85 objects:v108 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v86;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v86 != v20) {
          objc_enumerationMutation(v17);
        }
        [*(id *)(*((void *)&v85 + 1) + 8 * v21++) readAll:1];
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v85 objects:v108 count:16];
    }
    while (v19);
  }

  long long v83 = 0u;
  long long v84 = 0u;
  long long v81 = 0u;
  long long v82 = 0u;
  id v22 = a1[20];
  uint64_t v23 = [v22 countByEnumeratingWithState:&v81 objects:v107 count:16];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)v82;
    do
    {
      uint64_t v26 = 0;
      do
      {
        if (*(void *)v82 != v25) {
          objc_enumerationMutation(v22);
        }
        [*(id *)(*((void *)&v81 + 1) + 8 * v26++) readAll:1];
      }
      while (v24 != v26);
      uint64_t v24 = [v22 countByEnumeratingWithState:&v81 objects:v107 count:16];
    }
    while (v24);
  }

  long long v79 = 0u;
  long long v80 = 0u;
  long long v77 = 0u;
  long long v78 = 0u;
  id v27 = a1[21];
  uint64_t v28 = [v27 countByEnumeratingWithState:&v77 objects:v106 count:16];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = *(void *)v78;
    do
    {
      uint64_t v31 = 0;
      do
      {
        if (*(void *)v78 != v30) {
          objc_enumerationMutation(v27);
        }
        [*(id *)(*((void *)&v77 + 1) + 8 * v31++) readAll:1];
      }
      while (v29 != v31);
      uint64_t v29 = [v27 countByEnumeratingWithState:&v77 objects:v106 count:16];
    }
    while (v29);
  }

  long long v75 = 0u;
  long long v76 = 0u;
  long long v73 = 0u;
  long long v74 = 0u;
  id v32 = a1[19];
  uint64_t v33 = [v32 countByEnumeratingWithState:&v73 objects:v105 count:16];
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = *(void *)v74;
    do
    {
      uint64_t v36 = 0;
      do
      {
        if (*(void *)v74 != v35) {
          objc_enumerationMutation(v32);
        }
        [*(id *)(*((void *)&v73 + 1) + 8 * v36++) readAll:1];
      }
      while (v34 != v36);
      uint64_t v34 = [v32 countByEnumeratingWithState:&v73 objects:v105 count:16];
    }
    while (v34);
  }

  [a1[31] readAll:1];
  long long v71 = 0u;
  long long v72 = 0u;
  long long v69 = 0u;
  long long v70 = 0u;
  id v37 = a1[16];
  uint64_t v38 = [v37 countByEnumeratingWithState:&v69 objects:v104 count:16];
  if (v38)
  {
    uint64_t v39 = v38;
    uint64_t v40 = *(void *)v70;
    do
    {
      uint64_t v41 = 0;
      do
      {
        if (*(void *)v70 != v40) {
          objc_enumerationMutation(v37);
        }
        [*(id *)(*((void *)&v69 + 1) + 8 * v41++) readAll:1];
      }
      while (v39 != v41);
      uint64_t v39 = [v37 countByEnumeratingWithState:&v69 objects:v104 count:16];
    }
    while (v39);
  }

  long long v67 = 0u;
  long long v68 = 0u;
  long long v65 = 0u;
  long long v66 = 0u;
  id v42 = a1[32];
  uint64_t v43 = [v42 countByEnumeratingWithState:&v65 objects:v103 count:16];
  if (v43)
  {
    uint64_t v44 = v43;
    uint64_t v45 = *(void *)v66;
    do
    {
      uint64_t v46 = 0;
      do
      {
        if (*(void *)v66 != v45) {
          objc_enumerationMutation(v42);
        }
        [*(id *)(*((void *)&v65 + 1) + 8 * v46++) readAll:1];
      }
      while (v44 != v46);
      uint64_t v44 = [v42 countByEnumeratingWithState:&v65 objects:v103 count:16];
    }
    while (v44);
  }

  long long v63 = 0u;
  long long v64 = 0u;
  long long v61 = 0u;
  long long v62 = 0u;
  id v47 = a1[18];
  uint64_t v48 = [v47 countByEnumeratingWithState:&v61 objects:v102 count:16];
  if (v48)
  {
    uint64_t v49 = v48;
    uint64_t v50 = *(void *)v62;
    do
    {
      uint64_t v51 = 0;
      do
      {
        if (*(void *)v62 != v50) {
          objc_enumerationMutation(v47);
        }
        [*(id *)(*((void *)&v61 + 1) + 8 * v51++) readAll:1];
      }
      while (v49 != v51);
      uint64_t v49 = [v47 countByEnumeratingWithState:&v61 objects:v102 count:16];
    }
    while (v49);
  }

  [a1[24] readAll:1];
  [a1[15] readAll:1];
  [a1[23] readAll:1];
  long long v59 = 0u;
  long long v60 = 0u;
  long long v57 = 0u;
  long long v58 = 0u;
  id v52 = a1[17];
  uint64_t v53 = [v52 countByEnumeratingWithState:&v57 objects:v101 count:16];
  if (v53)
  {
    uint64_t v54 = v53;
    uint64_t v55 = *(void *)v58;
    do
    {
      uint64_t v56 = 0;
      do
      {
        if (*(void *)v58 != v55) {
          objc_enumerationMutation(v52);
        }
        objc_msgSend(*(id *)(*((void *)&v57 + 1) + 8 * v56++), "readAll:", 1, (void)v57);
      }
      while (v54 != v56);
      uint64_t v54 = [v52 countByEnumeratingWithState:&v57 objects:v101 count:16];
    }
    while (v54);
  }
}

unint64_t GEOETARouteReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 276))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOETARouteReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 280));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 272) = [v8 position];
  *(_DWORD *)(a1 + 276) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOETARouteReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOETARouteReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOETARouteReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOETARouteCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 280));
  return Specified;
}

void sub_18A1D4408(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOETARouteReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOETARouteReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A1D446C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOETARouteIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_192;
          }
          goto LABEL_143;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOETAStepIsValid(a1)) {
            goto LABEL_192;
          }
          goto LABEL_148;
        case 3u:
          if (v15 == 2) {
            goto LABEL_143;
          }
          goto LABEL_192;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_137;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_149;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteIsValid(a1)) {
            goto LABEL_192;
          }
          goto LABEL_148;
        case 6u:
          if (v15 == 2) {
            goto LABEL_143;
          }
          goto LABEL_192;
        case 7u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_192;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              uint64_t v24 = *(void *)&a1[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                goto LABEL_137;
              }
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                unsigned int v27 = v15++;
                if (v27 <= 8) {
                  continue;
                }
              }
              goto LABEL_149;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_192;
          }
LABEL_152:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v68 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v69 = *v2;
              uint64_t v70 = *(void *)&a1[v69];
              unint64_t v71 = v70 + 1;
              if (v70 == -1 || v71 > *(void *)&a1[*v3]) {
                break;
              }
              int v72 = *(char *)(*(void *)&a1[*v5] + v70);
              *(void *)&a1[v69] = v71;
              if (v72 < 0)
              {
                BOOL v13 = v68++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_152;
            }
            a1[*v4] = 1;
          }
          goto LABEL_148;
        case 8u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_192;
            }
            while (1)
            {
              uint64_t v28 = *v2;
              uint64_t v29 = *(void *)&a1[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
                goto LABEL_137;
              }
              int v31 = *(char *)(*(void *)&a1[*v5] + v29);
              *(void *)&a1[v28] = v30;
              if (v31 < 0)
              {
                unsigned int v32 = v15++;
                if (v32 <= 8) {
                  continue;
                }
              }
              goto LABEL_149;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_192;
          }
LABEL_162:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v73 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v74 = *v2;
              uint64_t v75 = *(void *)&a1[v74];
              unint64_t v76 = v75 + 1;
              if (v75 == -1 || v76 > *(void *)&a1[*v3]) {
                break;
              }
              int v77 = *(char *)(*(void *)&a1[*v5] + v75);
              *(void *)&a1[v74] = v76;
              if (v77 < 0)
              {
                BOOL v13 = v73++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_162;
            }
            a1[*v4] = 1;
          }
          goto LABEL_148;
        case 0xAu:
        case 0xBu:
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteIncidentIsValid(a1)) {
            goto LABEL_192;
          }
          goto LABEL_148;
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_137;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_149;
          }
        case 0xEu:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_192;
            }
            while (1)
            {
              uint64_t v38 = *v2;
              uint64_t v39 = *(void *)&a1[v38];
              unint64_t v40 = v39 + 1;
              if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
                goto LABEL_137;
              }
              int v41 = *(char *)(*(void *)&a1[*v5] + v39);
              *(void *)&a1[v38] = v40;
              if (v41 < 0)
              {
                unsigned int v42 = v15++;
                if (v42 <= 8) {
                  continue;
                }
              }
              goto LABEL_149;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_192;
          }
LABEL_172:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v78 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v79 = *v2;
              uint64_t v80 = *(void *)&a1[v79];
              unint64_t v81 = v80 + 1;
              if (v80 == -1 || v81 > *(void *)&a1[*v3]) {
                break;
              }
              int v82 = *(char *)(*(void *)&a1[*v5] + v80);
              *(void *)&a1[v79] = v81;
              if (v82 < 0)
              {
                BOOL v13 = v78++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_172;
            }
            a1[*v4] = 1;
          }
          goto LABEL_148;
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficBannerTextIsValid(a1)) {
            goto LABEL_192;
          }
          goto LABEL_148;
        case 0x10u:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_137;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_149;
          }
        case 0x11u:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_137;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_149;
          }
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v53 = 0;
          while (1)
          {
            uint64_t v54 = *v2;
            uint64_t v55 = *(void *)&a1[v54];
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
              goto LABEL_137;
            }
            int v57 = *(char *)(*(void *)&a1[*v5] + v55);
            *(void *)&a1[v54] = v56;
            if (v57 < 0)
            {
              BOOL v22 = v53++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_149;
          }
        case 0x13u:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v58 = 0;
          while (1)
          {
            uint64_t v59 = *v2;
            uint64_t v60 = *(void *)&a1[v59];
            unint64_t v61 = v60 + 1;
            if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
              goto LABEL_137;
            }
            int v62 = *(char *)(*(void *)&a1[*v5] + v60);
            *(void *)&a1[v59] = v61;
            if (v62 < 0)
            {
              BOOL v22 = v58++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_149;
          }
        case 0x14u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOEnrouteNoticeIsValid(a1)) {
            goto LABEL_192;
          }
          goto LABEL_148;
        case 0x15u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficColorInfoIsValid(a1)) {
            goto LABEL_192;
          }
          goto LABEL_148;
        case 0x16u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOIncidentOnRouteInfoIsValid(a1)) {
            goto LABEL_192;
          }
          goto LABEL_148;
        case 0x17u:
        case 0x18u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWaypointInfoIsValid(a1)) {
            goto LABEL_192;
          }
          goto LABEL_148;
        case 0x19u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_192:
              PBReaderRecallMark();
              return 0;
            }
LABEL_182:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v83 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v84 = *v2;
                uint64_t v85 = *(void *)&a1[v84];
                unint64_t v86 = v85 + 1;
                if (v85 == -1 || v86 > *(void *)&a1[*v3]) {
                  break;
                }
                int v87 = *(char *)(*(void *)&a1[*v5] + v85);
                *(void *)&a1[v84] = v86;
                if (v87 < 0)
                {
                  BOOL v13 = v83++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_182;
              }
              a1[*v4] = 1;
            }
LABEL_148:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_192;
            }
            while (1)
            {
              uint64_t v63 = *v2;
              uint64_t v64 = *(void *)&a1[v63];
              unint64_t v65 = v64 + 1;
              if (v64 == -1 || v65 > *(void *)&a1[*v3]) {
                break;
              }
              int v66 = *(char *)(*(void *)&a1[*v5] + v64);
              *(void *)&a1[v63] = v65;
              if (v66 < 0)
              {
                unsigned int v67 = v15++;
                if (v67 <= 8) {
                  continue;
                }
              }
              goto LABEL_149;
            }
LABEL_137:
            a1[*v4] = 1;
          }
LABEL_149:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_191;
          }
          break;
        case 0x1Au:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONavigabilityInfoIsValid(a1)) {
            goto LABEL_192;
          }
          goto LABEL_148;
        case 0x1Bu:
          if (v15 == 2) {
            goto LABEL_143;
          }
          goto LABEL_192;
        case 0x1Cu:
        case 0x1Eu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteLineStyleInfoIsValid(a1)) {
            goto LABEL_192;
          }
          goto LABEL_148;
        case 0x1Du:
          if (v15 == 2 && PBReaderPlaceMark() && GEOGuidanceEventIsValid(a1)) {
            goto LABEL_148;
          }
          goto LABEL_192;
        default:
LABEL_143:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_192;
          }
          goto LABEL_149;
      }
    }
  }
LABEL_191:
  BOOL v88 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v88;
}

BOOL GEOETAStepIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_77;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_73;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_74;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_77;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_73;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_74;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_77;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_73;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_74;
          }
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTimeCheckpointsIsValid(a1)) {
            goto LABEL_77;
          }
          goto LABEL_64;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_77;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_73;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_74;
          }
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStopStepEVInfoIsValid(a1)) {
            goto LABEL_77;
          }
          goto LABEL_64;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOEVStateInfoIsValid(a1)) {
            goto LABEL_77;
          }
LABEL_64:
          PBReaderRecallMark();
          continue;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_77;
          }
          unsigned int v38 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_77:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v39 = *v2;
        uint64_t v40 = *(void *)&a1[v39];
        unint64_t v41 = v40 + 1;
        if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
          break;
        }
        int v42 = *(char *)(*(void *)&a1[*v5] + v40);
        *(void *)&a1[v39] = v41;
        if (v42 < 0)
        {
          BOOL v22 = v38++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_74;
      }
LABEL_73:
      a1[*v4] = 1;
LABEL_74:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

void sub_18A1D5EC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETARouteIsDirty(uint64_t a1)
{
  uint64_t v85 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 280));
  int v2 = *(_DWORD *)(a1 + 308);
  if ((v2 & 0x67E78780) != 0) {
    return 1;
  }
  if ((v2 & 0x8000000) == 0)
  {
LABEL_5:
    if ((v2 & 0x10005000) != 0) {
      return 1;
    }
    if ((v2 & 0x100000) != 0)
    {
      if (GEOWaypointInfoIsDirty(*(os_unfair_lock_s **)(a1 + 192))) {
        return 1;
      }
      int v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x800) != 0)
    {
      if (GEOWaypointInfoIsDirty(*(os_unfair_lock_s **)(a1 + 120))) {
        return 1;
      }
      int v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x82000) != 0) {
      return 1;
    }
    if ((v2 & 0x4000000) != 0)
    {
      long long v74 = 0u;
      long long v75 = 0u;
      long long v72 = 0u;
      long long v73 = 0u;
      id v5 = *(id *)(a1 + 240);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v72 objects:v84 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v73;
LABEL_18:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v73 != v8) {
            objc_enumerationMutation(v5);
          }
          if (GEOETAStepIsDirty(*(os_unfair_lock_s **)(*((void *)&v72 + 1) + 8 * v9))) {
            goto LABEL_106;
          }
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v72 objects:v84 count:16];
            if (v7) {
              goto LABEL_18;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x400000) != 0)
    {
      long long v70 = 0u;
      long long v71 = 0u;
      long long v68 = 0u;
      long long v69 = 0u;
      id v5 = *(id *)(a1 + 208);
      uint64_t v10 = [v5 countByEnumeratingWithState:&v68 objects:v83 count:16];
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = *(void *)v69;
LABEL_28:
        uint64_t v13 = 0;
        while (1)
        {
          if (*(void *)v69 != v12) {
            objc_enumerationMutation(v5);
          }
          if (GEORouteIsDirty(*(os_unfair_lock_s **)(*((void *)&v68 + 1) + 8 * v13))) {
            goto LABEL_106;
          }
          if (v11 == ++v13)
          {
            uint64_t v11 = [v5 countByEnumeratingWithState:&v68 objects:v83 count:16];
            if (v11) {
              goto LABEL_28;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x2000000) != 0)
    {
      long long v66 = 0u;
      long long v67 = 0u;
      long long v64 = 0u;
      long long v65 = 0u;
      id v5 = *(id *)(a1 + 232);
      uint64_t v14 = [v5 countByEnumeratingWithState:&v64 objects:v82 count:16];
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v16 = *(void *)v65;
LABEL_38:
        uint64_t v17 = 0;
        while (1)
        {
          if (*(void *)v65 != v16) {
            objc_enumerationMutation(v5);
          }
          if (GEORouteLineStyleInfoIsDirty(*(os_unfair_lock_s **)(*((void *)&v64 + 1) + 8 * v17))) {
            goto LABEL_106;
          }
          if (v15 == ++v17)
          {
            uint64_t v15 = [v5 countByEnumeratingWithState:&v64 objects:v82 count:16];
            if (v15) {
              goto LABEL_38;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x1000000) != 0)
    {
      long long v62 = 0u;
      long long v63 = 0u;
      long long v60 = 0u;
      long long v61 = 0u;
      id v5 = *(id *)(a1 + 224);
      uint64_t v18 = [v5 countByEnumeratingWithState:&v60 objects:v81 count:16];
      if (v18)
      {
        uint64_t v19 = v18;
        uint64_t v20 = *(void *)v61;
LABEL_48:
        uint64_t v21 = 0;
        while (1)
        {
          if (*(void *)v61 != v20) {
            objc_enumerationMutation(v5);
          }
          if (GEORouteLineStyleInfoIsDirty(*(os_unfair_lock_s **)(*((void *)&v60 + 1) + 8 * v21))) {
            goto LABEL_106;
          }
          if (v19 == ++v21)
          {
            uint64_t v19 = [v5 countByEnumeratingWithState:&v60 objects:v81 count:16];
            if (v19) {
              goto LABEL_48;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x10000) != 0)
    {
      long long v58 = 0u;
      long long v59 = 0u;
      long long v56 = 0u;
      long long v57 = 0u;
      id v5 = *(id *)(a1 + 160);
      uint64_t v22 = [v5 countByEnumeratingWithState:&v56 objects:v80 count:16];
      if (v22)
      {
        uint64_t v23 = v22;
        uint64_t v24 = *(void *)v57;
LABEL_58:
        uint64_t v25 = 0;
        while (1)
        {
          if (*(void *)v57 != v24) {
            objc_enumerationMutation(v5);
          }
          if (GEORouteIncidentIsDirty(*(os_unfair_lock_s **)(*((void *)&v56 + 1) + 8 * v25))) {
            goto LABEL_106;
          }
          if (v23 == ++v25)
          {
            uint64_t v23 = [v5 countByEnumeratingWithState:&v56 objects:v80 count:16];
            if (v23) {
              goto LABEL_58;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x20000) != 0)
    {
      long long v54 = 0u;
      long long v55 = 0u;
      long long v52 = 0u;
      long long v53 = 0u;
      id v5 = *(id *)(a1 + 168);
      uint64_t v26 = [v5 countByEnumeratingWithState:&v52 objects:v79 count:16];
      if (v26)
      {
        uint64_t v27 = v26;
        uint64_t v28 = *(void *)v53;
LABEL_68:
        uint64_t v29 = 0;
        while (1)
        {
          if (*(void *)v53 != v28) {
            objc_enumerationMutation(v5);
          }
          if (GEORouteIncidentIsDirty(*(os_unfair_lock_s **)(*((void *)&v52 + 1) + 8 * v29))) {
            goto LABEL_106;
          }
          if (v27 == ++v29)
          {
            uint64_t v27 = [v5 countByEnumeratingWithState:&v52 objects:v79 count:16];
            if (v27) {
              goto LABEL_68;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x8000) != 0)
    {
      long long v50 = 0u;
      long long v51 = 0u;
      long long v48 = 0u;
      long long v49 = 0u;
      id v5 = *(id *)(a1 + 152);
      uint64_t v30 = [v5 countByEnumeratingWithState:&v48 objects:v78 count:16];
      if (v30)
      {
        uint64_t v31 = v30;
        uint64_t v32 = *(void *)v49;
LABEL_78:
        uint64_t v33 = 0;
        while (1)
        {
          if (*(void *)v49 != v32) {
            objc_enumerationMutation(v5);
          }
          if (GEORouteIncidentIsDirty(*(os_unfair_lock_s **)(*((void *)&v48 + 1) + 8 * v33))) {
            goto LABEL_106;
          }
          if (v31 == ++v33)
          {
            uint64_t v31 = [v5 countByEnumeratingWithState:&v48 objects:v78 count:16];
            if (v31) {
              goto LABEL_78;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x1000) != 0)
    {
      long long v46 = 0u;
      long long v47 = 0u;
      long long v44 = 0u;
      long long v45 = 0u;
      id v5 = *(id *)(a1 + 128);
      uint64_t v34 = [v5 countByEnumeratingWithState:&v44 objects:v77 count:16];
      if (v34)
      {
        uint64_t v35 = v34;
        uint64_t v36 = *(void *)v45;
LABEL_88:
        uint64_t v37 = 0;
        while (1)
        {
          if (*(void *)v45 != v36) {
            objc_enumerationMutation(v5);
          }
          if (GEOEnrouteNoticeIsDirty(*(os_unfair_lock_s **)(*((void *)&v44 + 1) + 8 * v37))) {
            goto LABEL_106;
          }
          if (v35 == ++v37)
          {
            uint64_t v35 = [v5 countByEnumeratingWithState:&v44 objects:v77 count:16];
            if (v35) {
              goto LABEL_88;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x2000) == 0) {
      return 0;
    }
    long long v42 = 0u;
    long long v43 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    id v5 = *(id *)(a1 + 136);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v40 objects:v76 count:16];
    if (!v3)
    {
LABEL_107:

      return v3;
    }
    uint64_t v38 = *(void *)v41;
LABEL_99:
    uint64_t v39 = 0;
    while (1)
    {
      if (*(void *)v41 != v38) {
        objc_enumerationMutation(v5);
      }
      if (GEOGuidanceEventIsDirty(*(os_unfair_lock_s **)(*((void *)&v40 + 1) + 8 * v39))) {
        break;
      }
      if (v3 == ++v39)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v40 objects:v76 count:16];
        if (v3) {
          goto LABEL_99;
        }
        goto LABEL_107;
      }
    }
LABEL_106:
    uint64_t v3 = 1;
    goto LABEL_107;
  }
  if ((GEOTrafficBannerTextIsDirty(*(os_unfair_lock_s **)(a1 + 248)) & 1) == 0)
  {
    int v2 = *(_DWORD *)(a1 + 308);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOETARouteIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOETARouteIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 70);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A1D7DD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1D90E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1D9D4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOETAStepReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = (const __int16 *)(a1 + 80);
  uint16x4_t v13 = (uint16x4_t)vld1_dup_s16(v12);
  int16x4_t v14 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v13, (uint16x4_t)0xFFFBFFF9FFF8FFFALL), (int8x8_t)0x1000100010001);
  v14.i16[0] = vaddv_s16(v14);
  unsigned int v15 = v14.i32[0];
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 1;
        char v20 = v19 | v11;
        char v87 = v19 & ~(_BYTE)v11 | v9;
        char v88 = v8;
        char v90 = v19 | v11 | v87;
        if (((v19 | v11) | v8)) {
          uint64_t v21 = 0;
        }
        else {
          uint64_t v21 = a3;
        }
        uint64_t v22 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        char v91 = (v21 == 0) | v20;
        uint64_t v24 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
        uint64_t v25 = (int *)MEMORY[0x1E4F940B8];
        char v89 = v19 | v11;
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v9;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v23)) {
      goto LABEL_132;
    }
    char v26 = 0;
    unsigned int v27 = 0;
    unint64_t v28 = 0;
    while (1)
    {
      uint64_t v29 = *v22;
      uint64_t v30 = *(void *)(v3 + v29);
      unint64_t v31 = v30 + 1;
      if (v30 == -1 || v31 > *(void *)(v3 + *v6)) {
        break;
      }
      char v32 = *(unsigned char *)(*(void *)(v3 + *v25) + v30);
      *(void *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0) {
        goto LABEL_25;
      }
      v26 += 7;
      BOOL v33 = v27++ >= 9;
      if (v33)
      {
        unint64_t v28 = 0;
        int v34 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v34 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v28 = 0;
    }
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_132:
      int v86 = 1;
      goto LABEL_133;
    }
    unint64_t v36 = v28 >> 3;
    BOOL v37 = v20;
    if ((v91 & 1) == 0)
    {
      uint64_t v38 = v21;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if ((v88 & 1) == 0) {
          goto LABEL_101;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + v24[383]) |= 4u;
        while (1)
        {
          uint64_t v45 = *v22;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
            break;
          }
          char v48 = *(unsigned char *)(*(void *)(v3 + *v25) + v46);
          *(void *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0) {
            goto LABEL_104;
          }
          v42 += 7;
          BOOL v33 = v43++ >= 9;
          if (v33)
          {
            LODWORD(v44) = 0;
            goto LABEL_106;
          }
        }
        *(unsigned char *)(v3 + *v23) = 1;
LABEL_104:
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_106:
        uint64_t v80 = 68;
        goto LABEL_123;
      case 2:
        if ((v88 & 1) == 0) {
          goto LABEL_101;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + v24[383]) |= 2u;
        while (2)
        {
          uint64_t v54 = *v22;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v25) + v55);
            *(void *)(v3 + v54) = v56;
            v44 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v33 = v53++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_110:
        uint64_t v80 = 64;
        goto LABEL_123;
      case 3:
        if ((v88 & 1) == 0) {
          goto LABEL_101;
        }
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + v24[383]) |= 0x10u;
        while (2)
        {
          uint64_t v60 = *v22;
          uint64_t v61 = *(void *)(v3 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(v3 + *v25) + v61);
            *(void *)(v3 + v60) = v62;
            v44 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              BOOL v33 = v59++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_114;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_114:
        uint64_t v80 = 76;
        goto LABEL_123;
      case 4:
        if (!v37) {
          goto LABEL_101;
        }
        if ((*(_WORD *)(a1 + v24[383]) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_149;
          }
          uint64_t v24 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
          __int16 v81 = *(_WORD *)(a1 + 80) << 7;
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_149;
        }
        long long v64 = objc_alloc_init(GEOTimeCheckpoints);
        if (!GEOTimeCheckpointsReadAllFrom((uint64_t)v64, (void *)v3, v10 & 1)) {
          goto LABEL_148;
        }
        PBReaderRecallMark();
        uint64_t v65 = 40;
        goto LABEL_92;
      case 5:
        if ((v88 & 1) == 0) {
          goto LABEL_101;
        }
        char v66 = 0;
        unsigned int v67 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + v24[383]) |= 8u;
        while (2)
        {
          uint64_t v68 = *v22;
          uint64_t v69 = *(void *)(v3 + v68);
          unint64_t v70 = v69 + 1;
          if (v69 == -1 || v70 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(v3 + *v25) + v69);
            *(void *)(v3 + v68) = v70;
            v44 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              BOOL v33 = v67++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_118:
        uint64_t v80 = 72;
        goto LABEL_123;
      case 6:
        if (!v37) {
          goto LABEL_101;
        }
        if ((*(_WORD *)(a1 + v24[383]) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_149;
          }
          uint64_t v24 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
          __int16 v81 = *(_WORD *)(a1 + 80) << 9;
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_149;
        }
        long long v64 = objc_alloc_init(GEOStopStepEVInfo);
        if (!GEOStopStepEVInfoReadAllFrom((uint64_t)v64, (void *)v3)) {
          goto LABEL_148;
        }
        PBReaderRecallMark();
        uint64_t v65 = 24;
        goto LABEL_92;
      case 7:
        if (!v37) {
          goto LABEL_101;
        }
        if ((*(_WORD *)(a1 + v24[383]) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_149;
          }
          uint64_t v24 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
          __int16 v81 = *(_WORD *)(a1 + 80) << 8;
LABEL_130:
          v7 += v81 >> 15;
          char v20 = v89;
          uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_131;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_149;
        }
        long long v64 = objc_alloc_init(GEOEVStateInfo);
        if (GEOEVStateInfoReadAllFrom((uint64_t)v64, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v65 = 32;
LABEL_92:
          long long v72 = *(void **)(a1 + v65);
          *(void *)(a1 + v65) = v64;

          --v7;
          char v20 = v89;
          uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v24 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
LABEL_131:
          if (!(v90 & 1 | (v7 != 0))) {
            goto LABEL_132;
          }
          continue;
        }
LABEL_148:

LABEL_149:
        int v86 = 0;
        char v20 = v89;
        uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v24 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
LABEL_133:
        if (v87) {
LABEL_134:
        }
          *(_WORD *)(a1 + v24[383]) |= 0x20u;
        if (v20 & 1 | ((v86 & 1) == 0))
        {
          *(_WORD *)(a1 + v24[383]) |= 0x100u;
          *(_WORD *)(a1 + v24[383]) |= 0x40u;
          *(_WORD *)(a1 + v24[383]) |= 0x80u;
        }
        else if (v21)
        {
          while (1)
          {
            int v82 = *v21++;
            __int16 v83 = 256;
            switch(v82)
            {
              case 0:
                goto LABEL_142;
              case 4:
                goto LABEL_141;
              case 6:
                __int16 v83 = 64;
                goto LABEL_141;
              case 7:
                __int16 v83 = 128;
LABEL_141:
                *(_WORD *)(a1 + v24[383]) |= v83;
                break;
              default:
                continue;
            }
          }
        }
LABEL_142:
        if (v86)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v23) == 0;
          if ((v20 & 1) == 0) {
            return v3;
          }
LABEL_146:
          uint64_t v84 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v20) {
            goto LABEL_146;
          }
        }
        return v3;
      case 8:
        if ((v88 & 1) == 0) {
          goto LABEL_101;
        }
        char v73 = 0;
        unsigned int v74 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + v24[383]) |= 1u;
        while (2)
        {
          uint64_t v75 = *v22;
          uint64_t v76 = *(void *)(v3 + v75);
          unint64_t v77 = v76 + 1;
          if (v76 == -1 || v77 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v78 = *(unsigned char *)(*(void *)(v3 + *v25) + v76);
            *(void *)(v3 + v75) = v77;
            v44 |= (unint64_t)(v78 & 0x7F) << v73;
            if (v78 < 0)
            {
              v73 += 7;
              BOOL v33 = v74++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_122:
        uint64_t v80 = 60;
LABEL_123:
        *(_DWORD *)(a1 + v80) = v44;
        goto LABEL_131;
      default:
        if ((v87 & 1) == 0 || (*(_WORD *)(a1 + v24[383]) & 0x20) != 0)
        {
LABEL_101:
          char v79 = PBReaderSkipValueWithTag();
          uint64_t v24 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
          uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          char v20 = v89;
          if ((v79 & 1) == 0)
          {
            int v86 = 0;
            goto LABEL_133;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            long long v50 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v49;
          }
          int v51 = PBUnknownFieldAdd();
          char v20 = v89;
          uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v24 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
          if (!v51)
          {
            int v86 = 0;
            goto LABEL_134;
          }
        }
        goto LABEL_131;
    }
  }
}

void sub_18A1DA968(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1DAAD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1DB590(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOETAStepReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOETAStepReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOETAStepReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOETAStepReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOETAStepReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 40) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18A1DB75C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOETAStepReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOETAStepReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A1DB7C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1DBA34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETAStepIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 80);
  if ((v2 & 0x200) != 0) {
    return 1;
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEOTimeCheckpointsIsDirty(*(void *)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 80);
  }
  if ((v2 & 0x40) == 0) {
    return (v2 >> 7) & 1;
  }
  return 1;
}

os_unfair_lock_s *GEOETAStepIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOETAStepIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A1DBF3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1DC4A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1DC794(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOETATrafficUpdateRequestReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 256));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 252);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 248)];
  uint64_t v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unint64_t v13 = *(void *)(a1 + 288);
  uint32x4_t v14 = (uint32x4_t)vdupq_n_s32(v13);
  v15.i64[0] = 0x100000001;
  v15.i64[1] = 0x100000001;
  unsigned int v16 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_18A641660), v15))
      + ((v13 >> 9) & 1)
      + ((v13 >> 34) & 1)
      + ((v13 >> 28) & 1)
      + ((v13 >> 33) & 1)
      + ((v13 >> 12) & 1)
      + (BYTE4(v13) & 1)
      + (BYTE3(v13) & 1)
      + ((v13 >> 15) & 1)
      + ((v13 >> 23) & 1)
      + vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_18A641670), v15), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_18A641680), v15)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_18A641690), v15)))+ (v13 >> 31);
  while (2)
  {
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    uint64_t v19 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v16;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v18 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v20 = v16 > 0x13;
        char v107 = v20 & ~(_BYTE)v12 | v10;
        char v108 = v20 | v12 | v107;
        if (((v20 | v12) | v9)) {
          uint64_t v21 = 0;
        }
        else {
          uint64_t v21 = a3;
        }
        uint64_t v22 = (int *)MEMORY[0x1E4F940E8];
        char v109 = (v21 == 0) | v20 | v12;
        char v110 = v20 | v12;
        uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v16;
LABEL_7:
        uint64_t v17 = v10;
LABEL_8:
        uint64_t v18 = v11;
        uint64_t v19 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        uint64_t v12 = v19;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v23)) {
      goto LABEL_299;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v22;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v7)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v32 = v26++ >= 9;
      if (v32)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_299:
      int v106 = 1;
      goto LABEL_300;
    }
    unint64_t v35 = v27 >> 3;
    BOOL v36 = v110;
    if ((v109 & 1) == 0)
    {
      BOOL v37 = v21;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36) {
          goto LABEL_226;
        }
        if ((*(unsigned char *)(a1 + 289) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_344;
          }
          uint64_t v100 = *(void *)(a1 + 288) << 48;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_344;
        }
        BOOL v41 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1)) {
          goto LABEL_343;
        }
        PBReaderRecallMark();
        uint64_t v42 = 80;
        goto LABEL_199;
      case 2:
        if (!v36) {
          goto LABEL_226;
        }
        if ((*(unsigned char *)(a1 + 290) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_344;
          }
          uint64_t v100 = *(void *)(a1 + 288) << 40;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_344;
        }
        BOOL v41 = objc_alloc_init(GEORouteAttributes);
        if (!GEORouteAttributesReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1)) {
          goto LABEL_343;
        }
        PBReaderRecallMark();
        uint64_t v42 = 144;
        goto LABEL_199;
      case 3:
        if ((v9 & 1) == 0) {
          goto LABEL_226;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        *(void *)(a1 + 288) |= 0x100uLL;
        while (2)
        {
          uint64_t v51 = *v22;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v24) + v52);
            *(void *)(v3 + v5objc_destroyWeak(this + 1) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              BOOL v32 = v49++ >= 9;
              if (v32)
              {
                uint64_t v50 = 0;
                goto LABEL_231;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v50 = 0;
        }
LABEL_231:
        *(unsigned char *)(a1 + 284) = v50 != 0;
        goto LABEL_295;
      case 4:
      case 15:
      case 16:
      case 17:
LABEL_54:
        if ((v107 & 1) == 0 || (*(unsigned char *)(a1 + 289) & 2) != 0) {
          goto LABEL_226;
        }
        if (!*(void *)(a1 + 16))
        {
          id v45 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          uint64_t v46 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v45;
        }
        int v47 = PBUnknownFieldAdd();
        uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
        uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
        if (v47) {
          goto LABEL_295;
        }
        int v106 = 0;
        goto LABEL_301;
      case 5:
        if (!v36 || (*(unsigned char *)(a1 + 291) & 1) != 0) {
          goto LABEL_226;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_344;
        }
        BOOL v41 = objc_alloc_init(GEOETARoute);
        if (!GEOETARouteReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1)) {
          goto LABEL_343;
        }
        PBReaderRecallMark();
        -[GEOETATrafficUpdateRequest _addNoFlagsRoute:](a1, v41);
        goto LABEL_217;
      case 6:
        if (!v36) {
          goto LABEL_226;
        }
        if ((*(unsigned char *)(a1 + 289) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_344;
          }
          uint64_t v100 = *(void *)(a1 + 288) << 51;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_344;
        }
        BOOL v41 = objc_alloc_init(GEOClientCapabilities);
        if (!GEOClientCapabilitiesReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1)) {
          goto LABEL_343;
        }
        PBReaderRecallMark();
        uint64_t v42 = 56;
        goto LABEL_199;
      case 7:
        if (!v36) {
          goto LABEL_226;
        }
        if ((*(unsigned char *)(a1 + 290) & 2) == 0)
        {
          uint64_t v55 = PBReaderReadData();
          uint64_t v56 = 96;
          goto LABEL_165;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_344;
        }
        uint64_t v100 = *(void *)(a1 + 288) << 46;
        goto LABEL_293;
      case 8:
        if ((v9 & 1) == 0) {
          goto LABEL_226;
        }
        if (!PBReaderPlaceMark() || (GEOSessionIDReadAllFrom((void *)(a1 + 24), v3) & 1) == 0) {
          goto LABEL_344;
        }
        PBReaderRecallMark();
        *(void *)(a1 + 288) |= 1uLL;
        goto LABEL_294;
      case 9:
        if (!v36) {
          goto LABEL_226;
        }
        if ((*(unsigned char *)(a1 + 289) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_344;
          }
          uint64_t v100 = *(void *)(a1 + 288) << 52;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_344;
        }
        BOOL v41 = objc_alloc_init(GEOAdditionalEnabledMarkets);
        if (!GEOAdditionalEnabledMarketsReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1)) {
          goto LABEL_343;
        }
        PBReaderRecallMark();
        uint64_t v42 = 48;
        goto LABEL_199;
      case 10:
        if (!v36 || (*(unsigned char *)(a1 + 290) & 1) != 0) {
          goto LABEL_226;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_344;
        }
        BOOL v41 = objc_alloc_init(GEOWaypointTyped);
        if (!GEOWaypointTypedReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1)) {
          goto LABEL_343;
        }
        PBReaderRecallMark();
        -[GEOETATrafficUpdateRequest _addNoFlagsDestinationWaypointTyped:](a1, v41);
        goto LABEL_217;
      case 11:
        if ((v9 & 1) == 0) {
          goto LABEL_226;
        }
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v59 = 0;
        *(void *)(a1 + 288) |= 0x10uLL;
        while (2)
        {
          uint64_t v60 = *v22;
          uint64_t v61 = *(void *)(v3 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(v3 + *v24) + v61);
            *(void *)(v3 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if (v63 < 0)
            {
              v57 += 7;
              BOOL v32 = v58++ >= 9;
              if (v32)
              {
                LODWORD(v59) = 0;
                goto LABEL_235;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v59) = 0;
        }
LABEL_235:
        uint64_t v99 = 268;
        goto LABEL_290;
      case 12:
        if (!v36) {
          goto LABEL_226;
        }
        if ((*(unsigned char *)(a1 + 291) & 4) == 0)
        {
          uint64_t v55 = PBReaderReadData();
          uint64_t v56 = 176;
          goto LABEL_165;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_344;
        }
        uint64_t v100 = *(void *)(a1 + 288) << 37;
        goto LABEL_293;
      case 13:
        if ((v9 & 1) == 0) {
          goto LABEL_226;
        }
        char v64 = 0;
        unsigned int v65 = 0;
        uint64_t v59 = 0;
        *(void *)(a1 + 288) |= 0x40uLL;
        while (2)
        {
          uint64_t v66 = *v22;
          uint64_t v67 = *(void *)(v3 + v66);
          unint64_t v68 = v67 + 1;
          if (v67 == -1 || v68 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(v3 + *v24) + v67);
            *(void *)(v3 + v66) = v68;
            v59 |= (unint64_t)(v69 & 0x7F) << v64;
            if (v69 < 0)
            {
              v64 += 7;
              BOOL v32 = v65++ >= 9;
              if (v32)
              {
                LODWORD(v59) = 0;
                goto LABEL_239;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v59) = 0;
        }
LABEL_239:
        uint64_t v99 = 276;
        goto LABEL_290;
      case 14:
        if (!v36) {
          goto LABEL_226;
        }
        if ((*(unsigned char *)(a1 + 289) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_344;
          }
          uint64_t v100 = *(void *)(a1 + 288) << 49;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_344;
        }
        BOOL v41 = objc_alloc_init(GEOCommonOptions);
        if (!GEOCommonOptionsReadAllFrom((uint64_t)v41, (void *)v3)) {
          goto LABEL_343;
        }
        PBReaderRecallMark();
        uint64_t v42 = 72;
        goto LABEL_199;
      case 18:
        if (!v36) {
          goto LABEL_226;
        }
        if ((*(unsigned char *)(a1 + 289) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_344;
          }
          uint64_t v100 = *(void *)(a1 + 288) << 53;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_344;
        }
        BOOL v41 = objc_alloc_init(GEOPDABClientDatasetMetadata);
        if (!GEOPDABClientDatasetMetadataReadAllFrom((uint64_t)v41, (void *)v3)) {
          goto LABEL_343;
        }
        PBReaderRecallMark();
        uint64_t v42 = 40;
        goto LABEL_199;
      case 19:
        if ((v9 & 1) == 0) {
          goto LABEL_226;
        }
        char v70 = 0;
        unsigned int v71 = 0;
        uint64_t v59 = 0;
        *(void *)(a1 + 288) |= 8uLL;
        while (2)
        {
          uint64_t v72 = *v22;
          uint64_t v73 = *(void *)(v3 + v72);
          unint64_t v74 = v73 + 1;
          if (v73 == -1 || v74 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v75 = *(unsigned char *)(*(void *)(v3 + *v24) + v73);
            *(void *)(v3 + v72) = v74;
            v59 |= (unint64_t)(v75 & 0x7F) << v70;
            if (v75 < 0)
            {
              v70 += 7;
              BOOL v32 = v71++ >= 9;
              if (v32)
              {
                LODWORD(v59) = 0;
                goto LABEL_243;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v59) = 0;
        }
LABEL_243:
        uint64_t v99 = 264;
        goto LABEL_290;
      case 20:
        if (!v36) {
          goto LABEL_226;
        }
        if ((*(unsigned char *)(a1 + 291) & 0x20) == 0)
        {
          uint64_t v55 = PBReaderReadData();
          uint64_t v56 = 200;
          goto LABEL_165;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_344;
        }
        uint64_t v100 = *(void *)(a1 + 288) << 34;
        goto LABEL_293;
      case 21:
        if (!v36) {
          goto LABEL_226;
        }
        if ((*(unsigned char *)(a1 + 290) & 0x40) == 0)
        {
          uint64_t v55 = PBReaderReadString();
          uint64_t v56 = 136;
          goto LABEL_165;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_344;
        }
        uint64_t v100 = *(void *)(a1 + 288) << 41;
        goto LABEL_293;
      case 22:
        if ((v9 & 1) == 0) {
          goto LABEL_226;
        }
        *(void *)(a1 + 288) |= 2uLL;
        uint64_t v76 = *v22;
        unint64_t v77 = *(void *)(v3 + v76);
        if (v77 <= 0xFFFFFFFFFFFFFFF7 && v77 + 8 <= *(void *)(v3 + *v7))
        {
          uint64_t v78 = *(void *)(*(void *)(v3 + *v24) + v77);
          *(void *)(v3 + v76) = v77 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v23) = 1;
          uint64_t v78 = 0;
        }
        *(void *)(a1 + 168) = v78;
        goto LABEL_295;
      case 23:
        if (!v36) {
          goto LABEL_226;
        }
        if (*(unsigned char *)(a1 + 292))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_344;
          }
          uint64_t v100 = *(void *)(a1 + 288) << 31;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_344;
        }
        BOOL v41 = objc_alloc_init(GEOETATrafficUpdateWaypointRoute);
        if (!GEOETATrafficUpdateWaypointRouteReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1)) {
          goto LABEL_343;
        }
        PBReaderRecallMark();
        uint64_t v42 = 224;
        goto LABEL_199;
      case 24:
        if (!v36) {
          goto LABEL_226;
        }
        if ((*(unsigned char *)(a1 + 291) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_344;
          }
          uint64_t v100 = *(void *)(a1 + 288) << 32;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_344;
        }
        BOOL v41 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1)) {
          goto LABEL_343;
        }
        PBReaderRecallMark();
        uint64_t v42 = 216;
        goto LABEL_199;
      case 25:
        if (!v36 || (*(unsigned char *)(a1 + 290) & 4) != 0) {
          goto LABEL_226;
        }
        PBReaderReadString();
        BOOL v41 = (GEOLocation *)objc_claimAutoreleasedReturnValue();
        if (v41) {
          -[GEOETATrafficUpdateRequest _addNoFlagsDisplayedBannerId:](a1, v41);
        }
        goto LABEL_217;
      case 26:
        if (!v36) {
          goto LABEL_226;
        }
        if ((*(unsigned char *)(a1 + 290) & 8) == 0)
        {
          uint64_t v55 = PBReaderReadData();
          uint64_t v56 = 112;
LABEL_165:
          char v79 = *(void **)(a1 + v56);
          *(void *)(a1 + v56) = v55;

          uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          --v8;
          goto LABEL_295;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_344;
        }
        uint64_t v100 = *(void *)(a1 + 288) << 44;
        goto LABEL_293;
      case 27:
        if (!v36 || (*(unsigned char *)(a1 + 292) & 2) != 0) {
          goto LABEL_226;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_344;
        }
        BOOL v41 = objc_alloc_init(GEOWaypointTyped);
        if (!GEOWaypointTypedReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1)) {
          goto LABEL_343;
        }
        PBReaderRecallMark();
        -[GEOETATrafficUpdateRequest _addNoFlagsWaypointTyped:](a1, v41);
LABEL_217:

        goto LABEL_294;
      case 28:
        if (!v36) {
          goto LABEL_226;
        }
        if ((*(unsigned char *)(a1 + 290) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_344;
          }
          uint64_t v100 = *(void *)(a1 + 288) << 42;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_344;
        }
        BOOL v41 = objc_alloc_init(GEORecentLocationHistory);
        if (!GEORecentLocationHistoryReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1)) {
          goto LABEL_343;
        }
        PBReaderRecallMark();
        uint64_t v42 = 128;
        goto LABEL_199;
      case 29:
        if (!v36) {
          goto LABEL_226;
        }
        if ((*(unsigned char *)(a1 + 290) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_344;
          }
          uint64_t v100 = *(void *)(a1 + 288) << 43;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_344;
        }
        BOOL v41 = objc_alloc_init(GEOPrivacyMetadata);
        if (!GEOPrivacyMetadataReadAllFrom((uint64_t)v41, (void *)v3)) {
          goto LABEL_343;
        }
        PBReaderRecallMark();
        uint64_t v42 = 120;
        goto LABEL_199;
      case 30:
        if ((v9 & 1) == 0) {
          goto LABEL_226;
        }
        char v80 = 0;
        unsigned int v81 = 0;
        uint64_t v59 = 0;
        *(void *)(a1 + 288) |= 4uLL;
        while (2)
        {
          uint64_t v82 = *v22;
          uint64_t v83 = *(void *)(v3 + v82);
          unint64_t v84 = v83 + 1;
          if (v83 == -1 || v84 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v85 = *(unsigned char *)(*(void *)(v3 + *v24) + v83);
            *(void *)(v3 + v82) = v84;
            v59 |= (unint64_t)(v85 & 0x7F) << v80;
            if (v85 < 0)
            {
              v80 += 7;
              BOOL v32 = v81++ >= 9;
              if (v32)
              {
                LODWORD(v59) = 0;
                goto LABEL_247;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v59) = 0;
        }
LABEL_247:
        uint64_t v99 = 260;
        goto LABEL_290;
      case 31:
        if (!v36) {
          goto LABEL_226;
        }
        if ((*(unsigned char *)(a1 + 291) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_344;
          }
          uint64_t v100 = *(void *)(a1 + 288) << 33;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_344;
        }
        BOOL v41 = objc_alloc_init(GEOTripInfo);
        if (!GEOTripInfoReadAllFrom((uint64_t)v41, (void *)v3)) {
          goto LABEL_343;
        }
        PBReaderRecallMark();
        uint64_t v42 = 208;
        goto LABEL_199;
      case 32:
        if (!v36) {
          goto LABEL_226;
        }
        if ((*(unsigned char *)(a1 + 289) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_344;
          }
          uint64_t v100 = *(void *)(a1 + 288) << 50;
LABEL_293:
          v8 += v100 >> 63;
LABEL_294:
          uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
LABEL_295:
          if (!(v108 & 1 | (v8 != 0))) {
            goto LABEL_299;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_344;
        }
        BOOL v41 = objc_alloc_init(GEOClientFeedbackInfo);
        if (GEOClientFeedbackInfoReadAllFrom(v41, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v42 = 64;
LABEL_199:
          uint64_t v44 = *(void **)(a1 + v42);
          *(void *)(a1 + v42) = v41;
LABEL_200:

          --v8;
          goto LABEL_294;
        }
LABEL_343:

LABEL_344:
        int v106 = 0;
        uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_300:
        if (v107) {
LABEL_301:
        }
          *(void *)(a1 + 288) |= 0x200uLL;
        if (v110 & 1 | ((v106 & 1) == 0))
        {
          *(void *)(a1 + 288) |= 0x7FFFFFC00uLL;
          goto LABEL_337;
        }
        if (v21)
        {
          while (1)
          {
            int v102 = *v21++;
            int v101 = v102;
            if (v102 <= 99)
            {
              uint64_t v103 = 0x8000;
              switch(v101)
              {
                case 0:
                  goto LABEL_337;
                case 1:
                  goto LABEL_336;
                case 2:
                  uint64_t v103 = 0x800000;
                  goto LABEL_336;
                case 5:
                  uint64_t v103 = 0x1000000;
                  goto LABEL_336;
                case 6:
                  uint64_t v103 = 4096;
                  goto LABEL_336;
                case 7:
                  uint64_t v103 = 0x20000;
                  goto LABEL_336;
                case 9:
                  uint64_t v103 = 2048;
                  goto LABEL_336;
                case 10:
                  uint64_t v103 = 0x10000;
                  goto LABEL_336;
                case 12:
                  uint64_t v103 = 0x4000000;
                  goto LABEL_336;
                case 14:
                  uint64_t v103 = 0x4000;
                  goto LABEL_336;
                case 18:
                  uint64_t v103 = 1024;
                  goto LABEL_336;
                case 20:
                  uint64_t v103 = 0x20000000;
                  goto LABEL_336;
                case 21:
                  uint64_t v103 = 0x400000;
                  goto LABEL_336;
                case 23:
                  uint64_t v103 = 0x100000000;
                  goto LABEL_336;
                case 24:
                  uint64_t v103 = 0x80000000;
                  goto LABEL_336;
                case 25:
                  uint64_t v103 = 0x40000;
                  goto LABEL_336;
                case 26:
                  uint64_t v103 = 0x80000;
                  goto LABEL_336;
                case 27:
                  uint64_t v103 = 0x200000000;
                  goto LABEL_336;
                case 28:
                  uint64_t v103 = 0x200000;
                  goto LABEL_336;
                case 29:
                  uint64_t v103 = 0x100000;
                  goto LABEL_336;
                case 31:
                  uint64_t v103 = 0x40000000;
                  goto LABEL_336;
                case 32:
                  uint64_t v103 = 0x2000;
                  goto LABEL_336;
                default:
                  continue;
              }
              break;
            }
            if (v101 > 101)
            {
              if (v101 == 102)
              {
                uint64_t v103 = 0x10000000;
              }
              else
              {
                if (v101 != 1201) {
                  continue;
                }
                uint64_t v103 = 0x400000000;
              }
            }
            else if (v101 == 100)
            {
              uint64_t v103 = 0x2000000;
            }
            else
            {
              if (v101 != 101) {
                continue;
              }
              uint64_t v103 = 0x8000000;
            }
LABEL_336:
            *(void *)(a1 + 288) |= v103;
          }
        }
LABEL_337:
        if (v106) {
          uint64_t v3 = *(unsigned char *)(v3 + *v23) == 0;
        }
        else {
          uint64_t v3 = 0;
        }
        if (v110)
        {
          uint64_t v104 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 33:
        if (v9)
        {
          char v86 = 0;
          unsigned int v87 = 0;
          uint64_t v59 = 0;
          *(void *)(a1 + 288) |= 0x20uLL;
          while (1)
          {
            uint64_t v88 = *v22;
            uint64_t v89 = *(void *)(v3 + v88);
            unint64_t v90 = v89 + 1;
            if (v89 == -1 || v90 > *(void *)(v3 + *v7)) {
              break;
            }
            char v91 = *(unsigned char *)(*(void *)(v3 + *v24) + v89);
            *(void *)(v3 + v88) = v90;
            v59 |= (unint64_t)(v91 & 0x7F) << v86;
            if ((v91 & 0x80) == 0) {
              goto LABEL_249;
            }
            v86 += 7;
            BOOL v32 = v87++ >= 9;
            if (v32)
            {
              LODWORD(v59) = 0;
              goto LABEL_251;
            }
          }
          *(unsigned char *)(v3 + *v23) = 1;
LABEL_249:
          if (*(unsigned char *)(v3 + *v23)) {
            LODWORD(v59) = 0;
          }
LABEL_251:
          uint64_t v99 = 272;
LABEL_290:
          *(_DWORD *)(a1 + v99) = v59;
        }
        else
        {
LABEL_226:
          char v98 = PBReaderSkipValueWithTag();
          uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          if ((v98 & 1) == 0)
          {
            int v106 = 0;
            goto LABEL_300;
          }
        }
        goto LABEL_295;
      default:
        switch((int)v35)
        {
          case 'd':
            if (!v36 || (*(unsigned char *)(a1 + 291) & 2) != 0) {
              goto LABEL_226;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_344;
            }
            BOOL v41 = objc_alloc_init(GEOGeoServiceTag);
            if (!GEOGeoServiceTagReadAllFrom((uint64_t)v41, (void *)v3)) {
              goto LABEL_343;
            }
            PBReaderRecallMark();
            -[GEOETATrafficUpdateRequest _addNoFlagsServiceTag:](a1, v41);
            goto LABEL_217;
          case 'e':
            if (!v36 || (*(unsigned char *)(a1 + 291) & 8) != 0) {
              goto LABEL_226;
            }
            PBReaderReadData();
            BOOL v41 = (GEOLocation *)objc_claimAutoreleasedReturnValue();
            if (v41) {
              -[GEOETATrafficUpdateRequest _addNoFlagsTrafficApiResponses:](a1, v41);
            }
            goto LABEL_217;
          case 'f':
            if (!v36 || (*(unsigned char *)(a1 + 291) & 0x10) != 0) {
              goto LABEL_226;
            }
            PBReaderReadString();
            BOOL v41 = (GEOLocation *)objc_claimAutoreleasedReturnValue();
            if (v41) {
              -[GEOETATrafficUpdateRequest _addNoFlagsTrafficSnapshotIds:](a1, v41);
            }
            goto LABEL_217;
          case 'g':
            if ((v9 & 1) == 0) {
              goto LABEL_226;
            }
            char v92 = 0;
            unsigned int v93 = 0;
            uint64_t v59 = 0;
            *(void *)(a1 + 288) |= 0x80uLL;
            while (2)
            {
              uint64_t v94 = *v22;
              uint64_t v95 = *(void *)(v3 + v94);
              unint64_t v96 = v95 + 1;
              if (v95 == -1 || v96 > *(void *)(v3 + *v7))
              {
                *(unsigned char *)(v3 + *v23) = 1;
              }
              else
              {
                char v97 = *(unsigned char *)(*(void *)(v3 + *v24) + v95);
                *(void *)(v3 + v94) = v96;
                v59 |= (unint64_t)(v97 & 0x7F) << v92;
                if (v97 < 0)
                {
                  v92 += 7;
                  BOOL v32 = v93++ >= 9;
                  if (v32)
                  {
                    LODWORD(v59) = 0;
                    goto LABEL_289;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(v3 + *v23)) {
              LODWORD(v59) = 0;
            }
LABEL_289:
            uint64_t v99 = 280;
            goto LABEL_290;
          default:
            if (v35 != 1201) {
              goto LABEL_54;
            }
            if (!v36) {
              goto LABEL_226;
            }
            if ((*(unsigned char *)(a1 + 292) & 4) == 0)
            {
              uint64_t v43 = PBReaderReadString();
              uint64_t v44 = *(void **)(a1 + 240);
              *(void *)(a1 + 240) = v43;
              goto LABEL_200;
            }
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_344;
            }
            uint64_t v100 = *(void *)(a1 + 288) << 29;
            break;
        }
        goto LABEL_293;
    }
  }
}

void sub_18A1DE1CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1DE42C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1DE7F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1DE968(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1DEAE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1DEC58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1DEECC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1DF044(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1DF40C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1DF854(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1DFBC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1DFD3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1DFF28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1E00A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1E0218(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1E0390(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1E0758(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1E08D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1E0A48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1E0C40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1E0FE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1E13B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1E1778(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1E4300(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOETATrafficUpdateRequestCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  [a1[10] readAll:1];
  [a1[18] readAll:1];
  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  id v2 = a1[19];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v34 objects:v41 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v35;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v35 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v34 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v34 objects:v41 count:16];
    }
    while (v4);
  }

  [a1[28] readAll:1];
  [a1[7] readAll:1];
  [a1[6] readAll:1];
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id v7 = a1[11];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v30 objects:v40 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v31;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v31 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v30 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v30 objects:v40 count:16];
    }
    while (v9);
  }

  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v12 = a1[29];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v26 objects:v39 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v27;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v27 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v26 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v26 objects:v39 count:16];
    }
    while (v14);
  }

  [a1[9] readAll:1];
  [a1[5] readAll:1];
  [a1[27] readAll:1];
  [a1[8] readAll:1];
  [a1[16] readAll:1];
  [a1[15] readAll:1];
  [a1[26] readAll:1];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v17 = a1[20];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v22 objects:v38 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v23;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v23 != v20) {
          objc_enumerationMutation(v17);
        }
        objc_msgSend(*(id *)(*((void *)&v22 + 1) + 8 * v21++), "readAll:", 1, (void)v22);
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v22 objects:v38 count:16];
    }
    while (v19);
  }
}

uint64_t GEOETATrafficUpdateRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 252))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOETATrafficUpdateRequestReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 256));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 248) = [v8 position];
  *(_DWORD *)(a1 + 252) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOETATrafficUpdateRequestReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOETATrafficUpdateRequestReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOETATrafficUpdateRequestReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOETATrafficUpdateRequestCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 256));
  return Specified;
}

void sub_18A1E482C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOETATrafficUpdateRequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOETATrafficUpdateRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A1E4890(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOETATrafficUpdateRequestIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      unint64_t v18 = v8 >> 3;
      switch((v8 >> 3))
      {
        case 1u:
        case 0x18u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOLocationIsValid(a1)) {
            goto LABEL_139;
          }
          goto LABEL_166;
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORouteAttributesIsValid(a1)) {
            goto LABEL_166;
          }
          goto LABEL_139;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_166;
          }
          unsigned int v19 = 0;
          while (1)
          {
            uint64_t v20 = *v2;
            uint64_t v21 = *(void *)&a1[v20];
            unint64_t v22 = v21 + 1;
            if (v21 == -1 || v22 > *(void *)&a1[*v3]) {
              goto LABEL_148;
            }
            int v23 = *(char *)(*(void *)&a1[*v5] + v21);
            *(void *)&a1[v20] = v22;
            if (v23 < 0)
            {
              BOOL v24 = v19++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_154;
          }
        case 4u:
        case 0xFu:
        case 0x10u:
        case 0x11u:
          goto LABEL_153;
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOETARouteIsValid(a1)) {
            goto LABEL_166;
          }
          goto LABEL_139;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOClientCapabilitiesIsValid(a1)) {
            goto LABEL_166;
          }
          goto LABEL_139;
        case 7u:
          if (v16 == 2) {
            goto LABEL_153;
          }
          goto LABEL_166;
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSessionIDIsValid(a1)) {
            goto LABEL_166;
          }
          goto LABEL_139;
        case 9u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOAdditionalEnabledMarketsIsValid(a1)) {
            goto LABEL_166;
          }
          goto LABEL_139;
        case 0xAu:
        case 0x1Bu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOWaypointTypedIsValid(a1)) {
            goto LABEL_166;
          }
          goto LABEL_139;
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_166;
          }
          unsigned int v25 = 0;
          while (1)
          {
            uint64_t v26 = *v2;
            uint64_t v27 = *(void *)&a1[v26];
            unint64_t v28 = v27 + 1;
            if (v27 == -1 || v28 > *(void *)&a1[*v3]) {
              goto LABEL_148;
            }
            int v29 = *(char *)(*(void *)&a1[*v5] + v27);
            *(void *)&a1[v26] = v28;
            if (v29 < 0)
            {
              BOOL v24 = v25++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_154;
          }
        case 0xCu:
          if (v16 == 2) {
            goto LABEL_153;
          }
          goto LABEL_166;
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_166;
          }
          unsigned int v30 = 0;
          while (1)
          {
            uint64_t v31 = *v2;
            uint64_t v32 = *(void *)&a1[v31];
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)&a1[*v3]) {
              goto LABEL_148;
            }
            int v34 = *(char *)(*(void *)&a1[*v5] + v32);
            *(void *)&a1[v31] = v33;
            if (v34 < 0)
            {
              BOOL v24 = v30++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_154;
          }
        case 0xEu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOCommonOptionsIsValid(a1)) {
            goto LABEL_166;
          }
          goto LABEL_139;
        case 0x12u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDABClientDatasetMetadataIsValid(a1)) {
            goto LABEL_166;
          }
          goto LABEL_139;
        case 0x13u:
          if ((v8 & 7) != 0) {
            goto LABEL_166;
          }
          unsigned int v35 = 0;
          while (1)
          {
            uint64_t v36 = *v2;
            uint64_t v37 = *(void *)&a1[v36];
            unint64_t v38 = v37 + 1;
            if (v37 == -1 || v38 > *(void *)&a1[*v3]) {
              goto LABEL_148;
            }
            int v39 = *(char *)(*(void *)&a1[*v5] + v37);
            *(void *)&a1[v36] = v38;
            if (v39 < 0)
            {
              BOOL v24 = v35++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_154;
          }
        case 0x14u:
          if (v16 == 2) {
            goto LABEL_153;
          }
          goto LABEL_166;
        case 0x15u:
          if (v16 == 2) {
            goto LABEL_153;
          }
          goto LABEL_166;
        case 0x16u:
          if (v16 != 1) {
            goto LABEL_166;
          }
          uint64_t v40 = *v2;
          unint64_t v41 = *(void *)&a1[v40];
          if (v41 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_149;
          }
          unint64_t v42 = v41 + 8;
          if (v42 > *(void *)&a1[*v3]) {
            goto LABEL_149;
          }
          *(void *)&a1[v40] = v42;
          goto LABEL_154;
        case 0x17u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOETATrafficUpdateWaypointRouteIsValid(a1)) {
            goto LABEL_166;
          }
          goto LABEL_139;
        case 0x19u:
          if (v16 == 2) {
            goto LABEL_153;
          }
          goto LABEL_166;
        case 0x1Au:
          if (v16 != 2) {
            goto LABEL_166;
          }
LABEL_153:
          if (PBReaderSkipValueWithTag()) {
            goto LABEL_154;
          }
          goto LABEL_166;
        case 0x1Cu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORecentLocationHistoryIsValid(a1)) {
            goto LABEL_166;
          }
          goto LABEL_139;
        case 0x1Du:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPrivacyMetadataIsValid(a1)) {
            goto LABEL_166;
          }
          goto LABEL_139;
        case 0x1Eu:
          if ((v8 & 7) != 0) {
            goto LABEL_166;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_148;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v24 = v43++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_154;
          }
        case 0x1Fu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTripInfoIsValid(a1)) {
            goto LABEL_166;
          }
          goto LABEL_139;
        case 0x20u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOClientFeedbackInfoIsValid(a1)) {
            goto LABEL_166;
          }
LABEL_139:
          PBReaderRecallMark();
          goto LABEL_154;
        case 0x21u:
          if ((v8 & 7) != 0)
          {
LABEL_166:
            PBReaderRecallMark();
            return 0;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              break;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v24 = v48++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_154;
          }
LABEL_148:
          uint64_t v14 = *v4;
LABEL_149:
          a1[v14] = 1;
LABEL_154:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_165;
          }
          break;
        default:
          switch((int)v18)
          {
            case 'd':
              if (v16 != 2 || !PBReaderPlaceMark() || !GEOGeoServiceTagIsValid(a1)) {
                goto LABEL_166;
              }
              goto LABEL_139;
            case 'e':
              if (v16 == 2) {
                goto LABEL_153;
              }
              goto LABEL_166;
            case 'f':
              if (v16 == 2) {
                goto LABEL_153;
              }
              goto LABEL_166;
            case 'g':
              if ((v8 & 7) != 0) {
                goto LABEL_166;
              }
              unsigned int v53 = 0;
              break;
            default:
              if (v18 != 1201 || v16 == 2) {
                goto LABEL_153;
              }
              goto LABEL_166;
          }
          while (1)
          {
            uint64_t v54 = *v2;
            uint64_t v55 = *(void *)&a1[v54];
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
              break;
            }
            int v57 = *(char *)(*(void *)&a1[*v5] + v55);
            *(void *)&a1[v54] = v56;
            if (v57 < 0)
            {
              BOOL v24 = v53++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_154;
          }
          a1[*v4] = 1;
          goto LABEL_154;
      }
    }
  }
LABEL_165:
  BOOL v58 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v58;
}

BOOL GEOETATrafficUpdateWaypointRouteIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v17 = 0;
          do
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_53;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0) {
              break;
            }
          }
          while (v17++ <= 8);
          goto LABEL_53;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOETARouteIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_52;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTraversalTimesIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_52;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteIncidentIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_52;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficBannerTextIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_52;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWaypointRouteIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_52;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONavigabilityInfoIsValid(a1)) {
            goto LABEL_57;
          }
LABEL_52:
          PBReaderRecallMark();
          goto LABEL_53;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_57:
            PBReaderRecallMark();
            return 0;
          }
LABEL_53:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_56;
          }
          break;
      }
    }
  }
LABEL_56:
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_18A1E5D48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETATrafficUpdateRequestIsDirty(uint64_t a1)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 256));
  uint64_t v2 = *(void *)(a1 + 288);
  if ((v2 & 0x800000000) != 0) {
    return 1;
  }
  if ((v2 & 0x8000) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 80))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 288);
  }
  if ((v2 & 0x800000) != 0)
  {
    if (GEORouteAttributesIsDirty(*(os_unfair_lock_s **)(a1 + 144))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 288);
  }
  if ((v2 & 0x1000000) == 0)
  {
    if ((v2 & 0x100000000) != 0)
    {
      if (GEOETATrafficUpdateWaypointRouteIsDirty(*(os_unfair_lock_s **)(a1 + 224))) {
        return 1;
      }
      uint64_t v2 = *(void *)(a1 + 288);
    }
    if ((v2 & 0x1000) != 0)
    {
      if (GEOClientCapabilitiesIsDirty(*(void *)(a1 + 56))) {
        return 1;
      }
      uint64_t v2 = *(void *)(a1 + 288);
    }
    if ((v2 & 0xA0000) == 0)
    {
      if ((v2 & 0x800) != 0)
      {
        if (GEOAdditionalEnabledMarketsIsDirty(*(void *)(a1 + 48))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 288);
      }
      if ((v2 & 0x224414400) == 0)
      {
        if ((v2 & 0x80000000) != 0)
        {
          if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 216))) {
            return 1;
          }
          uint64_t v2 = *(void *)(a1 + 288);
        }
        if ((v2 & 0x42000) == 0)
        {
          if ((v2 & 0x200000) == 0) {
            goto LABEL_27;
          }
          if (!GEORecentLocationHistoryIsDirty(*(void *)(a1 + 128)))
          {
            uint64_t v2 = *(void *)(a1 + 288);
LABEL_27:
            if ((v2 & 0x45A100000) != 0) {
              return 1;
            }
            if ((v2 & 0x1000000) != 0)
            {
              long long v26 = 0u;
              long long v27 = 0u;
              long long v24 = 0u;
              long long v25 = 0u;
              id v5 = *(id *)(a1 + 152);
              uint64_t v6 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
              if (v6)
              {
                uint64_t v7 = v6;
                uint64_t v8 = *(void *)v25;
LABEL_33:
                uint64_t v9 = 0;
                while (1)
                {
                  if (*(void *)v25 != v8) {
                    objc_enumerationMutation(v5);
                  }
                  if (GEOETARouteIsDirty(*(os_unfair_lock_s **)(*((void *)&v24 + 1) + 8 * v9))) {
                    goto LABEL_61;
                  }
                  if (v7 == ++v9)
                  {
                    uint64_t v7 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
                    if (v7) {
                      goto LABEL_33;
                    }
                    break;
                  }
                }
              }

              uint64_t v2 = *(void *)(a1 + 288);
            }
            if ((v2 & 0x10000) != 0)
            {
              long long v22 = 0u;
              long long v23 = 0u;
              long long v20 = 0u;
              long long v21 = 0u;
              id v5 = *(id *)(a1 + 88);
              uint64_t v10 = [v5 countByEnumeratingWithState:&v20 objects:v29 count:16];
              if (v10)
              {
                uint64_t v11 = v10;
                uint64_t v12 = *(void *)v21;
LABEL_43:
                uint64_t v13 = 0;
                while (1)
                {
                  if (*(void *)v21 != v12) {
                    objc_enumerationMutation(v5);
                  }
                  if (GEOWaypointTypedIsDirty(*(os_unfair_lock_s **)(*((void *)&v20 + 1) + 8 * v13))) {
                    goto LABEL_61;
                  }
                  if (v11 == ++v13)
                  {
                    uint64_t v11 = [v5 countByEnumeratingWithState:&v20 objects:v29 count:16];
                    if (v11) {
                      goto LABEL_43;
                    }
                    break;
                  }
                }
              }

              uint64_t v2 = *(void *)(a1 + 288);
            }
            if ((v2 & 0x200000000) == 0) {
              return 0;
            }
            long long v18 = 0u;
            long long v19 = 0u;
            long long v16 = 0u;
            long long v17 = 0u;
            id v5 = *(id *)(a1 + 232);
            uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v28 count:16];
            if (!v3)
            {
LABEL_62:

              return v3;
            }
            uint64_t v14 = *(void *)v17;
LABEL_54:
            uint64_t v15 = 0;
            while (1)
            {
              if (*(void *)v17 != v14) {
                objc_enumerationMutation(v5);
              }
              if (GEOWaypointTypedIsDirty(*(os_unfair_lock_s **)(*((void *)&v16 + 1) + 8 * v15))) {
                break;
              }
              if (v3 == ++v15)
              {
                uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v28 count:16];
                if (v3) {
                  goto LABEL_54;
                }
                goto LABEL_62;
              }
            }
LABEL_61:
            uint64_t v3 = 1;
            goto LABEL_62;
          }
        }
      }
    }
  }
  return 1;
}

os_unfair_lock_s *GEOETATrafficUpdateRequestIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOETATrafficUpdateRequestIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 64);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOETATrafficUpdateRequestClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasCurrentUserLocation]
    && ([a1 currentUserLocation],
        uint64_t v6 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v6),
        v6,
        HasSensitiveFields))
  {
    uint64_t v8 = [a1 currentUserLocation];
    uint64_t v9 = (_DWORD *)[v8 copy];

    GEOLocationClearSensitiveFields(v9);
    [a1 setCurrentUserLocation:v9];
  }
  else
  {
    uint64_t v9 = [a1 currentUserLocation];
    [v9 clearSensitiveFields:a2];
  }

  -[GEOETATrafficUpdateRequest _readDestinationWaypointTypeds]((uint64_t)a1);
  if ([a1[11] count])
  {
    unint64_t v10 = 0;
    do
    {
      uint64_t v11 = [a1[11] objectAtIndexedSubscript:v10];
      uint64_t v12 = v11;
      if (a3 && GEOWaypointTypedHasSensitiveFields(v11))
      {
        uint64_t v13 = (void *)[v12 copy];
        uint64_t v14 = [v13 waypointLocation];
        [v14 clearSensitiveFields:a2];

        [a1[11] replaceObjectAtIndex:v10 withObject:v13];
      }
      else
      {
        [v12 clearSensitiveFields:a2];
      }

      ++v10;
    }
    while (v10 < [a1[11] count]);
  }
  -[GEOETATrafficUpdateRequest _readWaypointTypeds]((uint64_t)a1);
  if ([a1[29] count])
  {
    unint64_t v15 = 0;
    do
    {
      long long v16 = [a1[29] objectAtIndexedSubscript:v15];
      long long v17 = v16;
      if (a3 && GEOWaypointTypedHasSensitiveFields(v16))
      {
        long long v18 = (void *)[v17 copy];
        long long v19 = [v18 waypointLocation];
        [v19 clearSensitiveFields:a2];

        [a1[29] replaceObjectAtIndex:v15 withObject:v18];
      }
      else
      {
        [v17 clearSensitiveFields:a2];
      }

      ++v15;
    }
    while (v15 < [a1[29] count]);
  }
  if ((a3 & 1) != 0
    && [a1 hasTripOrigin]
    && ([a1 tripOrigin],
        long long v20 = objc_claimAutoreleasedReturnValue(),
        int v21 = GEOLocationHasSensitiveFields((uint64_t)v20),
        v20,
        v21))
  {
    long long v22 = [a1 tripOrigin];
    long long v23 = (_DWORD *)[v22 copy];

    GEOLocationClearSensitiveFields(v23);
    [a1 setTripOrigin:v23];
  }
  else
  {
    long long v23 = [a1 tripOrigin];
    [v23 clearSensitiveFields:a2];
  }
}

uint64_t GEOETATrafficUpdateRequestHasSensitiveFields(uint64_t result)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if (result)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = [(id)result currentUserLocation];
    if (GEOLocationHasSensitiveFields((uint64_t)v2))
    {
LABEL_3:

      return 1;
    }
    uint64_t v3 = [v1 tripOrigin];
    char HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v3);

    if (HasSensitiveFields) {
      return 1;
    }
    long long v20 = 0u;
    long long v21 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    uint64_t v2 = [v1 destinationWaypointTypeds];
    uint64_t v5 = [v2 countByEnumeratingWithState:&v18 objects:v23 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v19;
LABEL_9:
      uint64_t v8 = 0;
      while (1)
      {
        if (*(void *)v19 != v7) {
          objc_enumerationMutation(v2);
        }
        if (GEOWaypointTypedHasSensitiveFields(*(void **)(*((void *)&v18 + 1) + 8 * v8))) {
          goto LABEL_3;
        }
        if (v6 == ++v8)
        {
          uint64_t v6 = [v2 countByEnumeratingWithState:&v18 objects:v23 count:16];
          if (v6) {
            goto LABEL_9;
          }
          break;
        }
      }
    }

    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    uint64_t v9 = objc_msgSend(v1, "waypointTypeds", 0);
    uint64_t v10 = [v9 countByEnumeratingWithState:&v14 objects:v22 count:16];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = *(void *)v15;
      while (2)
      {
        uint64_t v13 = 0;
        do
        {
          if (*(void *)v15 != v12) {
            objc_enumerationMutation(v9);
          }
          if (GEOWaypointTypedHasSensitiveFields(*(void **)(*((void *)&v14 + 1) + 8 * v13)))
          {

            return 1;
          }
          ++v13;
        }
        while (v11 != v13);
        uint64_t v11 = [v9 countByEnumeratingWithState:&v14 objects:v22 count:16];
        if (v11) {
          continue;
        }
        break;
      }
    }

    return 0;
  }
  return result;
}

void sub_18A1E7960(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1E8CC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1E9188(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1E9968(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOETATrafficUpdateResponseReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 156);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 152)];
  uint64_t v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = *(_DWORD *)(a1 + 172);
  uint32x4_t v14 = (uint32x4_t)vdupq_n_s32(v13);
  v15.i64[0] = 0x100000001;
  v15.i64[1] = 0x100000001;
  unsigned int v16 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_18A6416A0), v15), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_18A6416B0), v15)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_18A6416C0), v15)))+ ((v13 >> 10) & 1)+ ((v13 >> 6) & 1)+ ((v13 >> 2) & 1);
  while (2)
  {
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    uint64_t v19 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v16;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v18 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v20 = v16 > 0xA;
        char v21 = v20 & ~(_BYTE)v12 | v10;
        unsigned __int8 v22 = v20 | v12;
        char v73 = v21;
        char v74 = v22 | v21;
        if ((v22 | v9)) {
          long long v23 = 0;
        }
        else {
          long long v23 = a3;
        }
        uint64_t v24 = (int *)MEMORY[0x1E4F940E8];
        long long v25 = (int *)MEMORY[0x1E4F940C8];
        char v75 = (v23 == 0) | v22;
        BOOL v76 = v22;
        long long v26 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v16;
LABEL_7:
        uint64_t v17 = v10;
LABEL_8:
        uint64_t v18 = v11;
        uint64_t v19 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        uint64_t v12 = v19;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v24) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v25)) {
      goto LABEL_159;
    }
    char v27 = 0;
    unsigned int v28 = 0;
    unint64_t v29 = 0;
    while (1)
    {
      uint64_t v30 = *v24;
      uint64_t v31 = *(void *)(v3 + v30);
      unint64_t v32 = v31 + 1;
      if (v31 == -1 || v32 > *(void *)(v3 + *v7)) {
        break;
      }
      char v33 = *(unsigned char *)(*(void *)(v3 + *v26) + v31);
      *(void *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0) {
        goto LABEL_25;
      }
      v27 += 7;
      BOOL v34 = v28++ >= 9;
      if (v34)
      {
        unint64_t v29 = 0;
        int v35 = *(unsigned __int8 *)(v3 + *v25);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v25) = 1;
LABEL_25:
    int v35 = *(unsigned __int8 *)(v3 + *v25);
    if (*(unsigned char *)(v3 + *v25)) {
      unint64_t v29 = 0;
    }
LABEL_27:
    if (v35 || (v29 & 7) == 4)
    {
LABEL_159:
      int v72 = 1;
      goto LABEL_160;
    }
    unint64_t v37 = v29 >> 3;
    BOOL v38 = v76;
    if ((v75 & 1) == 0)
    {
      int v39 = v23;
      do
      {
        int v41 = *v39++;
        int v40 = v41;
        BOOL v38 = v41 != 0;
        if (v41) {
          BOOL v42 = v40 == v37;
        }
        else {
          BOOL v42 = 1;
        }
      }
      while (!v42);
    }
    switch((int)v37)
    {
      case 1:
        if ((v9 & 1) == 0) {
          goto LABEL_129;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        *(_DWORD *)(a1 + 172) |= 2u;
        while (1)
        {
          uint64_t v46 = *v24;
          uint64_t v47 = *(void *)(v3 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(v3 + *v7)) {
            break;
          }
          char v49 = *(unsigned char *)(*(void *)(v3 + *v26) + v47);
          *(void *)(v3 + v46) = v48;
          v45 |= (unint64_t)(v49 & 0x7F) << v43;
          if ((v49 & 0x80) == 0) {
            goto LABEL_132;
          }
          v43 += 7;
          BOOL v34 = v44++ >= 9;
          if (v34)
          {
            LODWORD(v45) = 0;
            goto LABEL_134;
          }
        }
        *(unsigned char *)(v3 + *v25) = 1;
LABEL_132:
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v45) = 0;
        }
LABEL_134:
        uint64_t v65 = 168;
        goto LABEL_139;
      case 2:
        if (!v38 || (*(unsigned char *)(a1 + 173) & 0x10) != 0) {
          goto LABEL_129;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_188;
        }
        uint64_t v50 = objc_alloc_init(GEOETARoute);
        if (!GEOETARouteReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_187;
        }
        PBReaderRecallMark();
        -[GEOETATrafficUpdateResponse _addNoFlagsRoute:](a1, v50);
        goto LABEL_110;
      case 3:
        if (!v38) {
          goto LABEL_129;
        }
        if ((*(unsigned char *)(a1 + 173) & 0x20) == 0)
        {
          uint64_t v52 = PBReaderReadData();
          uint64_t v53 = 120;
          goto LABEL_77;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_188;
        }
        int v66 = (int)(*(_DWORD *)(a1 + 172) << 18) >> 31;
        goto LABEL_156;
      case 4:
        if (!v38) {
          goto LABEL_129;
        }
        if ((*(unsigned char *)(a1 + 172) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_188;
          }
          int v66 = (int)(*(_DWORD *)(a1 + 172) << 24) >> 31;
          goto LABEL_156;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_188;
        }
        uint64_t v50 = objc_alloc_init(GEOPDDatasetABStatus);
        if (!GEOPDDatasetABStatusReadAllFrom((uint64_t)v50, (void *)v3)) {
          goto LABEL_187;
        }
        PBReaderRecallMark();
        uint64_t v51 = 72;
        goto LABEL_121;
      case 5:
        if (!v38 || (*(unsigned char *)(a1 + 172) & 0x20) != 0) {
          goto LABEL_129;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_188;
        }
        uint64_t v50 = objc_alloc_init(GEOTrafficCamera);
        if (!GEOTrafficCameraReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_187;
        }
        PBReaderRecallMark();
        -[GEOETATrafficUpdateResponse _addNoFlagsCamera:](a1, v50);
        goto LABEL_110;
      case 6:
        if (!v38) {
          goto LABEL_129;
        }
        if ((*(unsigned char *)(a1 + 173) & 8) == 0)
        {
          uint64_t v52 = PBReaderReadData();
          uint64_t v53 = 104;
          goto LABEL_77;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_188;
        }
        int v66 = (int)(*(_DWORD *)(a1 + 172) << 20) >> 31;
        goto LABEL_156;
      case 7:
        if (!v38) {
          goto LABEL_129;
        }
        if ((*(unsigned char *)(a1 + 173) & 1) == 0)
        {
          uint64_t v52 = PBReaderReadString();
          uint64_t v53 = 80;
LABEL_77:
          uint64_t v54 = *(void **)(a1 + v53);
          *(void *)(a1 + v53) = v52;
          goto LABEL_122;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_188;
        }
        int v66 = (int)(*(_DWORD *)(a1 + 172) << 23) >> 31;
        goto LABEL_156;
      case 8:
        if (!v38 || (*(unsigned char *)(a1 + 173) & 0x40) != 0) {
          goto LABEL_129;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_188;
        }
        uint64_t v50 = objc_alloc_init(GEOTrafficSignal);
        if (!GEOTrafficSignalReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_187;
        }
        PBReaderRecallMark();
        -[GEOETATrafficUpdateResponse _addNoFlagsTrafficSignal:](a1, v50);
        goto LABEL_110;
      case 9:
        if (!v38 || (*(unsigned char *)(a1 + 172) & 0x10) != 0) {
          goto LABEL_129;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_188;
        }
        uint64_t v50 = objc_alloc_init(GEOArrivalParameters);
        if (!GEOArrivalParametersReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_187;
        }
        PBReaderRecallMark();
        -[GEOETATrafficUpdateResponse _addNoFlagsArrivalParameters:](a1, v50);
LABEL_110:

        goto LABEL_157;
      case 10:
        if (!v38 || (*(unsigned char *)(a1 + 172) & 8) != 0) {
          goto LABEL_129;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_188;
        }
        -[GEOETATrafficUpdateResponse _reserveProblemDetails:](a1, 1uLL);
        if (!GEOProblemDetailReadAllFrom(*(void *)(a1 + 24) + 12 * *(void *)(a1 + 32), v3)) {
          goto LABEL_188;
        }
        PBReaderRecallMark();
        ++*(void *)(a1 + 32);
        goto LABEL_157;
      case 11:
        if (!v38) {
          goto LABEL_129;
        }
        if (*(unsigned char *)(a1 + 174))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_188;
          }
          int v66 = (int)(*(_DWORD *)(a1 + 172) << 15) >> 31;
          goto LABEL_156;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_188;
        }
        uint64_t v50 = objc_alloc_init(GEOETATrafficUpdateWaypointRoute);
        if (!GEOETATrafficUpdateWaypointRouteReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_187;
        }
        PBReaderRecallMark();
        uint64_t v51 = 144;
        goto LABEL_121;
      case 12:
        if ((v9 & 1) == 0) {
          goto LABEL_129;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v45 = 0;
        *(_DWORD *)(a1 + 172) |= 1u;
        while (2)
        {
          uint64_t v57 = *v24;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v26) + v58);
            *(void *)(v3 + v57) = v59;
            v45 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              BOOL v34 = v56++ >= 9;
              if (v34)
              {
                LODWORD(v45) = 0;
                goto LABEL_138;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v45) = 0;
        }
LABEL_138:
        uint64_t v65 = 164;
LABEL_139:
        *(_DWORD *)(a1 + v65) = v45;
        goto LABEL_158;
      case 13:
        if (!v38 || (*(unsigned char *)(a1 + 173) & 2) != 0) {
          goto LABEL_129;
        }
        PBReaderReadString();
        uint64_t v50 = (GEOETARoute *)objc_claimAutoreleasedReturnValue();
        if (v50) {
          -[GEOETATrafficUpdateResponse _addNoFlagsInternalError:](a1, v50);
        }
        goto LABEL_110;
      case 14:
        if (!v38) {
          goto LABEL_129;
        }
        if ((*(unsigned char *)(a1 + 173) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_188;
          }
          int v66 = (int)(*(_DWORD *)(a1 + 172) << 16) >> 31;
          goto LABEL_156;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_188;
        }
        uint64_t v50 = objc_alloc_init(GEOUUID);
        if (!GEOUUIDReadAllFrom((uint64_t)v50, (void *)v3)) {
          goto LABEL_187;
        }
        PBReaderRecallMark();
        uint64_t v51 = 136;
        goto LABEL_121;
      case 15:
        if (!v38) {
          goto LABEL_129;
        }
        if ((*(unsigned char *)(a1 + 173) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_188;
          }
          int v66 = (int)(*(_DWORD *)(a1 + 172) << 21) >> 31;
LABEL_156:
          v8 += v66;
LABEL_157:
          long long v25 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          long long v26 = (int *)MEMORY[0x1E4F940B8];
LABEL_158:
          if (!(v74 & 1 | (v8 != 0))) {
            goto LABEL_159;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_188;
        }
        uint64_t v50 = objc_alloc_init(GEOCommonResponseAttributes);
        if (GEOCommonResponseAttributesReadAllFrom((uint64_t)v50, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v51 = 96;
LABEL_121:
          uint64_t v54 = *(void **)(a1 + v51);
          *(void *)(a1 + v5objc_destroyWeak(this + 1) = v50;
LABEL_122:

          --v8;
          goto LABEL_157;
        }
LABEL_187:

LABEL_188:
        int v72 = 0;
        long long v25 = (int *)MEMORY[0x1E4F940C8];
LABEL_160:
        if (v73) {
LABEL_161:
        }
          *(_DWORD *)(a1 + 172) |= 4u;
        if (v76 || (v72 & 1) == 0)
        {
          *(_DWORD *)(a1 + 172) |= 0x1000u;
          *(_DWORD *)(a1 + 172) |= 0x10000u;
          *(_DWORD *)(a1 + 172) |= 0x2000u;
          *(_DWORD *)(a1 + 172) |= 0x80u;
          *(_DWORD *)(a1 + 172) |= 0x20u;
          *(_DWORD *)(a1 + 172) |= 0x800u;
          *(_DWORD *)(a1 + 172) |= 0x8000u;
          *(_DWORD *)(a1 + 172) |= 0x100u;
          *(_DWORD *)(a1 + 172) |= 0x4000u;
          *(_DWORD *)(a1 + 172) |= 0x10u;
          *(_DWORD *)(a1 + 172) |= 8u;
          *(_DWORD *)(a1 + 172) |= 0x200u;
          *(_DWORD *)(a1 + 172) |= 0x400u;
          *(_DWORD *)(a1 + 172) |= 0x40u;
        }
        else if (v23)
        {
          while (1)
          {
            int v68 = *v23++;
            int v67 = v68;
            int v69 = 4096;
            switch(v68)
            {
              case 0:
                goto LABEL_181;
              case 1:
              case 12:
                continue;
              case 2:
                goto LABEL_180;
              case 3:
                int v69 = 0x2000;
                goto LABEL_180;
              case 4:
                int v69 = 128;
                goto LABEL_180;
              case 5:
                int v69 = 32;
                goto LABEL_180;
              case 6:
                int v69 = 2048;
                goto LABEL_180;
              case 7:
                int v69 = 256;
                goto LABEL_180;
              case 8:
                int v69 = 0x4000;
                goto LABEL_180;
              case 9:
                int v69 = 16;
                goto LABEL_180;
              case 10:
                int v69 = 8;
                goto LABEL_180;
              case 11:
                int v69 = 0x10000;
                goto LABEL_180;
              case 13:
                int v69 = 512;
                goto LABEL_180;
              case 14:
                int v69 = 0x8000;
                goto LABEL_180;
              case 15:
                int v69 = 1024;
                goto LABEL_180;
              default:
                if (v67 != 1051) {
                  continue;
                }
                int v69 = 64;
LABEL_180:
                *(_DWORD *)(a1 + 172) |= v69;
                break;
            }
          }
        }
LABEL_181:
        if (v72) {
          uint64_t v3 = *(unsigned char *)(v3 + *v25) == 0;
        }
        else {
          uint64_t v3 = 0;
        }
        if (v76)
        {
          char v70 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v37 == 1051)
        {
          if (!v38) {
            goto LABEL_129;
          }
          if ((*(unsigned char *)(a1 + 172) & 0x40) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_188;
            }
            int v66 = (int)(*(_DWORD *)(a1 + 172) << 25) >> 31;
            goto LABEL_156;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_188;
          }
          uint64_t v50 = objc_alloc_init(GEOClientMetrics);
          if (!GEOClientMetricsReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
            goto LABEL_187;
          }
          PBReaderRecallMark();
          uint64_t v51 = 64;
          goto LABEL_121;
        }
        if ((v73 & 1) == 0 || (*(unsigned char *)(a1 + 172) & 4) != 0)
        {
LABEL_129:
          char v64 = PBReaderSkipValueWithTag();
          long long v26 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          long long v25 = (int *)MEMORY[0x1E4F940C8];
          if ((v64 & 1) == 0)
          {
            int v72 = 0;
            goto LABEL_160;
          }
          goto LABEL_158;
        }
        if (!*(void *)(a1 + 16))
        {
          id v61 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          unint64_t v62 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v61;
        }
        int v63 = PBUnknownFieldAdd();
        long long v25 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
        long long v26 = (int *)MEMORY[0x1E4F940B8];
        if (!v63)
        {
          int v72 = 0;
          goto LABEL_161;
        }
        goto LABEL_158;
    }
  }
}

void sub_18A1EAB9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1EAD08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1EAE78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1EAFE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1EB3B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1EB528(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1EB69C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1EB810(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1EBBD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1EBFA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1EC504(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1EC8D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1EE390(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETATrafficUpdateResponseCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  id v2 = a1[14];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v35 objects:v42 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v36;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v36 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v35 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v35 objects:v42 count:16];
    }
    while (v4);
  }

  [a1[18] readAll:1];
  [a1[9] readAll:1];
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  id v7 = a1[7];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v31 objects:v41 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v32;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v32 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v31 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v31 objects:v41 count:16];
    }
    while (v9);
  }

  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v12 = a1[16];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v27 objects:v40 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v28;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v28 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v27 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v27 objects:v40 count:16];
    }
    while (v14);
  }

  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v17 = a1[6];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v23 objects:v39 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v24;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v24 != v20) {
          objc_enumerationMutation(v17);
        }
        objc_msgSend(*(id *)(*((void *)&v23 + 1) + 8 * v21++), "readAll:", 1, (void)v23);
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v23 objects:v39 count:16];
    }
    while (v19);
  }

  [a1[12] readAll:1];
  return [a1[8] readAll:1];
}

uint64_t GEOETATrafficUpdateResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 156))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOETATrafficUpdateResponseReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 160));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 152) = [v8 position];
  *(_DWORD *)(a1 + 156) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOETATrafficUpdateResponseReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOETATrafficUpdateResponseReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOETATrafficUpdateResponseReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOETATrafficUpdateResponseCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 160));
  return Specified;
}

void sub_18A1EE838(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOETATrafficUpdateResponseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOETATrafficUpdateResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A1EE89C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOETATrafficUpdateResponseIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_88;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOETARouteIsValid(a1)) {
            goto LABEL_88;
          }
          goto LABEL_84;
        case 3u:
          if (v15 == 2) {
            goto LABEL_85;
          }
          goto LABEL_88;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDDatasetABStatusIsValid(a1)) {
            goto LABEL_88;
          }
          goto LABEL_84;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficCameraIsValid(a1)) {
            goto LABEL_88;
          }
          goto LABEL_84;
        case 6u:
          if (v15 == 2) {
            goto LABEL_85;
          }
          goto LABEL_88;
        case 7u:
          if (v15 == 2) {
            goto LABEL_85;
          }
          goto LABEL_88;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficSignalIsValid(a1)) {
            goto LABEL_88;
          }
          goto LABEL_84;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOArrivalParametersIsValid(a1)) {
            goto LABEL_88;
          }
          goto LABEL_84;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOProblemDetailIsValid(a1)) {
            goto LABEL_88;
          }
          goto LABEL_84;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOETATrafficUpdateWaypointRouteIsValid(a1)) {
            goto LABEL_88;
          }
          goto LABEL_84;
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_88;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              break;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_86;
          }
LABEL_74:
          a1[*v4] = 1;
          goto LABEL_86;
        case 0xDu:
          if (v15 == 2) {
            goto LABEL_85;
          }
          goto LABEL_88;
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchClientBehaviorIsValid(a1)) {
            goto LABEL_88;
          }
          goto LABEL_84;
        case 0xFu:
          if (v15 == 2 && PBReaderPlaceMark() && GEOCommonResponseAttributesIsValid(a1)) {
            goto LABEL_84;
          }
          goto LABEL_88;
        default:
          if ((v8 >> 3) == 1051)
          {
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOClientMetricsIsValid(a1))
            {
LABEL_88:
              PBReaderRecallMark();
              return 0;
            }
LABEL_84:
            PBReaderRecallMark();
          }
          else
          {
LABEL_85:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_88;
            }
          }
LABEL_86:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_87;
          }
          break;
      }
    }
  }
LABEL_87:
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_18A1EF36C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETATrafficUpdateResponseIsDirty(uint64_t a1)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  int v2 = *(_DWORD *)(a1 + 172);
  if ((v2 & 0x21000) != 0) {
    return 1;
  }
  if ((v2 & 0x10000) == 0)
  {
LABEL_5:
    if ((v2 & 0xEFF8) != 0) {
      return 1;
    }
    if ((v2 & 0x1000) != 0)
    {
      long long v34 = 0u;
      long long v35 = 0u;
      long long v32 = 0u;
      long long v33 = 0u;
      id v5 = *(id *)(a1 + 112);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v32 objects:v39 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v33;
LABEL_11:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v33 != v8) {
            objc_enumerationMutation(v5);
          }
          if (GEOETARouteIsDirty(*(os_unfair_lock_s **)(*((void *)&v32 + 1) + 8 * v9))) {
            goto LABEL_49;
          }
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v32 objects:v39 count:16];
            if (v7) {
              goto LABEL_11;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 172);
    }
    if ((v2 & 0x20) != 0)
    {
      long long v30 = 0u;
      long long v31 = 0u;
      long long v28 = 0u;
      long long v29 = 0u;
      id v5 = *(id *)(a1 + 56);
      uint64_t v10 = [v5 countByEnumeratingWithState:&v28 objects:v38 count:16];
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = *(void *)v29;
LABEL_21:
        uint64_t v13 = 0;
        while (1)
        {
          if (*(void *)v29 != v12) {
            objc_enumerationMutation(v5);
          }
          if (GEOTrafficCameraIsDirty(*(os_unfair_lock_s **)(*((void *)&v28 + 1) + 8 * v13))) {
            goto LABEL_49;
          }
          if (v11 == ++v13)
          {
            uint64_t v11 = [v5 countByEnumeratingWithState:&v28 objects:v38 count:16];
            if (v11) {
              goto LABEL_21;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 172);
    }
    if ((v2 & 0x4000) != 0)
    {
      long long v26 = 0u;
      long long v27 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      id v5 = *(id *)(a1 + 128);
      uint64_t v14 = [v5 countByEnumeratingWithState:&v24 objects:v37 count:16];
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v16 = *(void *)v25;
LABEL_31:
        uint64_t v17 = 0;
        while (1)
        {
          if (*(void *)v25 != v16) {
            objc_enumerationMutation(v5);
          }
          if (GEOTrafficSignalIsDirty(*(void *)(*((void *)&v24 + 1) + 8 * v17))) {
            goto LABEL_49;
          }
          if (v15 == ++v17)
          {
            uint64_t v15 = [v5 countByEnumeratingWithState:&v24 objects:v37 count:16];
            if (v15) {
              goto LABEL_31;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 172);
    }
    if ((v2 & 0x10) == 0) {
      return 0;
    }
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id v5 = *(id *)(a1 + 48);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v20 objects:v36 count:16];
    if (!v3)
    {
LABEL_50:

      return v3;
    }
    uint64_t v18 = *(void *)v21;
LABEL_42:
    uint64_t v19 = 0;
    while (1)
    {
      if (*(void *)v21 != v18) {
        objc_enumerationMutation(v5);
      }
      if (GEOArrivalParametersIsDirty(*(void *)(*((void *)&v20 + 1) + 8 * v19))) {
        break;
      }
      if (v3 == ++v19)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v20 objects:v36 count:16];
        if (v3) {
          goto LABEL_42;
        }
        goto LABEL_50;
      }
    }
LABEL_49:
    uint64_t v3 = 1;
    goto LABEL_50;
  }
  if ((GEOETATrafficUpdateWaypointRouteIsDirty(*(os_unfair_lock_s **)(a1 + 144)) & 1) == 0)
  {
    int v2 = *(_DWORD *)(a1 + 172);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOETATrafficUpdateResponseIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOETATrafficUpdateResponseIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 40);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A1F04AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1F0F40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1F13A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1F1760(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOETATrafficUpdateWaypointRouteReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFFAFFFEFFFBFFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 4) & 1)+ ((*(_WORD *)(a1 + 88) >> 3) & 1)+ ((*(_WORD *)(a1 + 88) >> 1) & 1));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 3;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v61 = v18;
        char v62 = v19 | v18;
        if ((v19 | v9)) {
          long long v20 = 0;
        }
        else {
          long long v20 = a3;
        }
        long long v21 = (int *)MEMORY[0x1E4F940E8];
        char v63 = (v20 == 0) | v19;
        BOOL v64 = v19;
        long long v22 = (int *)MEMORY[0x1E4F940C8];
        long long v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_98;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_98:
      int v59 = 1;
      goto LABEL_99;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v64;
    if ((v63 & 1) == 0)
    {
      long long v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v9 & 1) == 0) {
          goto LABEL_85;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (1)
        {
          uint64_t v43 = *v21;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v7)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v23) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_88;
          }
          v40 += 7;
          BOOL v31 = v41++ >= 9;
          if (v31)
          {
            LODWORD(v42) = 0;
            goto LABEL_90;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_88:
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v42) = 0;
        }
LABEL_90:
        *(_DWORD *)(a1 + 84) = v42;
        goto LABEL_97;
      case 2:
        if (!v35 || (*(_WORD *)(a1 + 88) & 0x20) != 0) {
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_119;
        }
        uint64_t v47 = objc_alloc_init(GEOETARoute);
        if (!GEOETARouteReadAllFrom((uint64_t)v47, (void *)v3, v11 & 1)) {
          goto LABEL_118;
        }
        PBReaderRecallMark();
        -[GEOETATrafficUpdateWaypointRoute _addNoFlagsRouteLeg:](a1, v47);
        goto LABEL_78;
      case 4:
        if (!v35) {
          goto LABEL_85;
        }
        if ((*(_WORD *)(a1 + 88) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_119;
          }
          __int16 v54 = *(_WORD *)(a1 + 88) << 8;
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_119;
        }
        uint64_t v47 = objc_alloc_init(GEOTraversalTimes);
        if (!GEOTraversalTimesReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_118;
        }
        PBReaderRecallMark();
        uint64_t v51 = 64;
        goto LABEL_84;
      case 5:
        if (!v35 || (*(_WORD *)(a1 + 88) & 4) != 0) {
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_119;
        }
        uint64_t v47 = objc_alloc_init(GEORouteIncident);
        if (!GEORouteIncidentReadAllFrom((uint64_t)v47, (void *)v3, v11 & 1)) {
          goto LABEL_118;
        }
        PBReaderRecallMark();
        -[GEOETATrafficUpdateWaypointRoute _addNoFlagsIncidentsOnUserWaypointRoute:](a1, v47);
        goto LABEL_78;
      case 6:
        if (!v35 || (*(_WORD *)(a1 + 88) & 0x40) != 0) {
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_119;
        }
        uint64_t v47 = objc_alloc_init(GEOTrafficBannerText);
        if (!GEOTrafficBannerTextReadAllFrom((uint64_t)v47, (void *)v3, v11 & 1)) {
          goto LABEL_118;
        }
        PBReaderRecallMark();
        -[GEOETATrafficUpdateWaypointRoute _addNoFlagsTrafficBannerText:](a1, v47);
        goto LABEL_78;
      case 7:
        if (!v35 || (*(_WORD *)(a1 + 88) & 0x10) != 0) {
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_119;
        }
        uint64_t v47 = objc_alloc_init(GEOWaypointRoute);
        if (!GEOWaypointRouteReadAllFrom((uint64_t)v47, (void *)v3, v11 & 1)) {
          goto LABEL_118;
        }
        PBReaderRecallMark();
        -[GEOETATrafficUpdateWaypointRoute _addNoFlagsNewWaypointRoutes:](a1, v47);
LABEL_78:

        goto LABEL_96;
      case 8:
        if (!v35) {
          goto LABEL_85;
        }
        if ((*(_WORD *)(a1 + 88) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_119;
          }
          __int16 v54 = *(_WORD *)(a1 + 88) << 12;
LABEL_95:
          v8 += v54 >> 15;
LABEL_96:
          long long v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_97:
          if (!(v62 & 1 | (v8 != 0))) {
            goto LABEL_98;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_119;
        }
        uint64_t v47 = objc_alloc_init(GEONavigabilityInfo);
        if (GEONavigabilityInfoReadAllFrom((uint64_t)v47, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v51 = 32;
LABEL_84:
          uint64_t v52 = *(void **)(a1 + v51);
          *(void *)(a1 + v5objc_destroyWeak(this + 1) = v47;

          --v8;
          goto LABEL_96;
        }
LABEL_118:

LABEL_119:
        int v59 = 0;
        long long v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_99:
        char v60 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
        if (v61) {
LABEL_100:
        }
          *(_WORD *)(a1 + v60[460]) |= 2u;
        if (v64 || (v59 & 1) == 0)
        {
          *(_WORD *)(a1 + v60[460]) |= 0x20u;
          *(_WORD *)(a1 + v60[460]) |= 0x80u;
          *(_WORD *)(a1 + v60[460]) |= 4u;
          *(_WORD *)(a1 + v60[460]) |= 0x40u;
          *(_WORD *)(a1 + v60[460]) |= 0x10u;
          *(_WORD *)(a1 + v60[460]) |= 8u;
        }
        else if (v20)
        {
          while (1)
          {
            int v56 = *v20++;
            __int16 v55 = 32;
            switch(v56)
            {
              case 0:
                goto LABEL_112;
              case 2:
                goto LABEL_110;
              case 4:
                __int16 v55 = 128;
                goto LABEL_110;
              case 5:
                __int16 v55 = 4;
                goto LABEL_110;
              case 6:
                __int16 v55 = 64;
                goto LABEL_110;
              case 7:
                __int16 v55 = 16;
                goto LABEL_110;
              case 8:
                __int16 v55 = 8;
LABEL_110:
                *(_WORD *)(a1 + v60[460]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_112:
        if (v59) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v64)
        {
          uint64_t v57 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v61 & 1) == 0 || (*(_WORD *)(a1 + 88) & 2) != 0)
        {
LABEL_85:
          char v53 = PBReaderSkipValueWithTag();
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          long long v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v59 = 0;
            goto LABEL_99;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v48 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v49 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v48;
          }
          int v50 = PBUnknownFieldAdd();
          long long v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v50)
          {
            int v59 = 0;
            char v60 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
            goto LABEL_100;
          }
        }
        goto LABEL_97;
    }
  }
}

void sub_18A1F2420(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1F258C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1F2950(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1F2D14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1F30E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1F4154(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETATrafficUpdateWaypointRouteCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  id v2 = a1[6];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v35 objects:v42 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v36;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v36 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v35 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v35 objects:v42 count:16];
    }
    while (v4);
  }

  [a1[8] readAll:1];
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  id v7 = a1[3];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v31 objects:v41 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v32;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v32 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v31 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v31 objects:v41 count:16];
    }
    while (v9);
  }

  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v12 = a1[7];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v27 objects:v40 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v28;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v28 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v27 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v27 objects:v40 count:16];
    }
    while (v14);
  }

  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v17 = a1[5];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v23 objects:v39 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v24;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v24 != v20) {
          objc_enumerationMutation(v17);
        }
        objc_msgSend(*(id *)(*((void *)&v23 + 1) + 8 * v21++), "readAll:", 1, (void)v23);
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v23 objects:v39 count:16];
    }
    while (v19);
  }

  return [a1[4] readAll:1];
}

unint64_t GEOETATrafficUpdateWaypointRouteReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOETATrafficUpdateWaypointRouteReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOETATrafficUpdateWaypointRouteReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOETATrafficUpdateWaypointRouteReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOETATrafficUpdateWaypointRouteReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOETATrafficUpdateWaypointRouteCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_18A1F45DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOETATrafficUpdateWaypointRouteReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOETATrafficUpdateWaypointRouteReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A1F4640(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1F4A90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETATrafficUpdateWaypointRouteIsDirty(uint64_t a1)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  __int16 v2 = *(_WORD *)(a1 + 88);
  if ((v2 & 0x1FC) == 0)
  {
    if ((v2 & 4) != 0)
    {
      long long v26 = 0u;
      long long v27 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      id v4 = *(id *)(a1 + 24);
      uint64_t v5 = [v4 countByEnumeratingWithState:&v24 objects:v30 count:16];
      if (v5)
      {
        uint64_t v6 = v5;
        uint64_t v7 = *(void *)v25;
LABEL_6:
        uint64_t v8 = 0;
        while (1)
        {
          if (*(void *)v25 != v7) {
            objc_enumerationMutation(v4);
          }
          if (GEORouteIncidentIsDirty(*(os_unfair_lock_s **)(*((void *)&v24 + 1) + 8 * v8))) {
            goto LABEL_34;
          }
          if (v6 == ++v8)
          {
            uint64_t v6 = [v4 countByEnumeratingWithState:&v24 objects:v30 count:16];
            if (v6) {
              goto LABEL_6;
            }
            break;
          }
        }
      }

      __int16 v2 = *(_WORD *)(a1 + 88);
    }
    if ((v2 & 0x40) != 0)
    {
      long long v22 = 0u;
      long long v23 = 0u;
      long long v20 = 0u;
      long long v21 = 0u;
      id v4 = *(id *)(a1 + 56);
      uint64_t v9 = [v4 countByEnumeratingWithState:&v20 objects:v29 count:16];
      if (v9)
      {
        uint64_t v10 = v9;
        uint64_t v11 = *(void *)v21;
LABEL_16:
        uint64_t v12 = 0;
        while (1)
        {
          if (*(void *)v21 != v11) {
            objc_enumerationMutation(v4);
          }
          if (GEOTrafficBannerTextIsDirty(*(os_unfair_lock_s **)(*((void *)&v20 + 1) + 8 * v12))) {
            goto LABEL_34;
          }
          if (v10 == ++v12)
          {
            uint64_t v10 = [v4 countByEnumeratingWithState:&v20 objects:v29 count:16];
            if (v10) {
              goto LABEL_16;
            }
            break;
          }
        }
      }

      __int16 v2 = *(_WORD *)(a1 + 88);
    }
    if ((v2 & 0x10) == 0) {
      return 0;
    }
    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v4 = *(id *)(a1 + 40);
    uint64_t v3 = [v4 countByEnumeratingWithState:&v16 objects:v28 count:16];
    if (!v3)
    {
LABEL_35:

      return v3;
    }
    uint64_t v13 = *(void *)v17;
LABEL_27:
    uint64_t v14 = 0;
    while (1)
    {
      if (*(void *)v17 != v13) {
        objc_enumerationMutation(v4);
      }
      if (GEOWaypointRouteIsDirty(*(os_unfair_lock_s **)(*((void *)&v16 + 1) + 8 * v14))) {
        break;
      }
      if (v3 == ++v14)
      {
        uint64_t v3 = [v4 countByEnumeratingWithState:&v16 objects:v28 count:16];
        if (v3) {
          goto LABEL_27;
        }
        goto LABEL_35;
      }
    }
LABEL_34:
    uint64_t v3 = 1;
    goto LABEL_35;
  }
  return 1;
}

os_unfair_lock_s *GEOETATrafficUpdateWaypointRouteIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOETATrafficUpdateWaypointRouteIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A1F5798(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1F5E04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPathComputationOptionsReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            long long v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18A1F67C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOShortTrafficSummaryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v51 = v17;
        char v52 = v18 | v17;
        if ((v18 | v7)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        char v53 = (v19 == 0) | v18;
        BOOL v54 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_62;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v2objc_destroyWeak(this + 1) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_62:
      int v49 = 1;
      goto LABEL_63;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v54;
    if ((v53 & 1) == 0)
    {
      long long v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34 || (*(unsigned char *)(a1 + 52) & 4) != 0) {
        goto LABEL_56;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_81;
      }
      BOOL v39 = objc_alloc_init(GEOFormattedString);
      if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
        goto LABEL_80;
      }
      PBReaderRecallMark();
      -[GEOShortTrafficSummary _addNoFlagsTitle:](a1, v39);

      goto LABEL_60;
    }
    if (v51 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_56:
      char v44 = PBReaderSkipValueWithTag();
      uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if ((v44 & 1) == 0)
      {
        int v49 = 0;
        goto LABEL_63;
      }
      goto LABEL_61;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      uint64_t v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    int v43 = PBUnknownFieldAdd();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v43)
    {
      int v49 = 0;
      int v50 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v52 & 1 | (v8 != 0))) {
      goto LABEL_62;
    }
  }
  if (!v34) {
    goto LABEL_56;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_81;
    }
    v8 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
    goto LABEL_60;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_81;
  }
  BOOL v39 = objc_alloc_init(GEOFormattedString);
  if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    char v40 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v39;

    --v8;
LABEL_60:
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_61;
  }
LABEL_80:

LABEL_81:
  int v49 = 0;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_63:
  int v50 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
  if ((v51 & 1) == 0) {
    goto LABEL_65;
  }
LABEL_64:
  *(unsigned char *)(a1 + v50[475]) |= 1u;
LABEL_65:
  if (v54 || (v49 & 1) == 0)
  {
    *(unsigned char *)(a1 + v50[475]) |= 4u;
    *(unsigned char *)(a1 + v50[475]) |= 2u;
    goto LABEL_74;
  }
  if (v19)
  {
    while (1)
    {
      int v46 = *v19++;
      int v45 = v46;
      if (v46 == 1) {
        break;
      }
      if (v45 == 2)
      {
LABEL_70:
        *(unsigned char *)(a1 + v50[475]) |= v45;
      }
      else if (!v45)
      {
        goto LABEL_74;
      }
    }
    LOBYTE(v45) = 4;
    goto LABEL_70;
  }
LABEL_74:
  if (v49) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v54)
  {
    uint64_t v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18A1F70BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1F75DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1F76CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOShortTrafficSummaryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  return [*(id *)(a1 + 24) readAll:1];
}

unint64_t GEOShortTrafficSummaryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOShortTrafficSummaryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOShortTrafficSummaryReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOShortTrafficSummaryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOShortTrafficSummaryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOShortTrafficSummaryCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18A1F7A54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1F7C84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOShortTrafficSummaryIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 52);
  if ((v2 & 0xC) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 52);
  }
  if ((v2 & 4) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 32);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_19;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_19:

  return v3;
}

void sub_18A1F8034(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A1F8DF0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_18A1F9F04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18A1FA37C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13)
{
  char v17 = *(void **)v13;
  if (*(void *)v13)
  {
    *(void *)(v13 + 8) = v17;
    operator delete(v17);
  }

  MEMORY[0x18C11F580](v13, 0x20C40960023A9);
  _Unwind_Resume(a1);
}

void sub_18A1FA688(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

BOOL anonymous namespace'::KeyAndPriority::compare_less_priority(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)(a1 + 16) < *(_DWORD *)(a2 + 16);
}

void *std::__split_buffer<anonymous namespace'::KeyAndPriority>::__split_buffer(void *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  a1[3] = 0;
  a1[4] = a4;
  if (a2)
  {
    if (a2 >= 0xCCCCCCCCCCCCCCDLL) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    char v7 = (char *)operator new(20 * a2);
  }
  else
  {
    char v7 = 0;
  }
  long long v8 = &v7[20 * a3];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v8;
  a1[3] = &v7[20 * a2];
  return a1;
}

void std::__introsort<std::_ClassicAlgPolicy,BOOL (*&)(anonymous namespace'::KeyAndPriority const&,anonymous namespace'::KeyAndPriority const&),anonymous namespace'::KeyAndPriority*,false>(unint64_t a1, unint64_t a2, uint64_t (**a3)(long long *, long long *), uint64_t a4, char a5)
{
  uint64_t v118 = *MEMORY[0x1E4F143B8];
  while (2)
  {
    uint64_t v112 = a2 - 20;
    char v109 = (long long *)(a2 - 60);
    char v110 = (long long *)(a2 - 40);
    unint64_t v12 = a1;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          a1 = v12;
          uint64_t v13 = a2 - v12;
          uint64_t v14 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a2 - v12) >> 2);
          if (v6 || !v5)
          {
            switch(v14)
            {
              case 0:
              case 1:
                return;
              case 2:
                if ((*a3)((long long *)v112, (long long *)a1))
                {
                  long long v45 = *(_OWORD *)a1;
                  int v117 = *(_DWORD *)(a1 + 16);
                  long long v116 = v45;
                  long long v46 = *(_OWORD *)v112;
                  *(_DWORD *)(a1 + 16) = *(_DWORD *)(v112 + 16);
                  *(_OWORD *)a1 = v46;
                  long long v47 = v116;
                  *(_DWORD *)(v112 + 16) = v117;
                  *(_OWORD *)uint64_t v112 = v47;
                }
                break;
              case 3:
                break;
              case 4:
                break;
              case 5:
                id v48 = (long long *)(a1 + 20);
                int v49 = (long long *)(a1 + 40);
                int v50 = (long long *)(a1 + 60);
                if (((unsigned int (*)(uint64_t, unint64_t, __n128))*a3)(v112, a1 + 60, v51))
                {
                  long long v116 = *v50;
                  long long v52 = v116;
                  int v117 = *(_DWORD *)(a1 + 76);
                  int v53 = v117;
                  int v54 = *(_DWORD *)(v112 + 16);
                  *int v50 = *(_OWORD *)v112;
                  *(_DWORD *)(a1 + 76) = v54;
                  *(_DWORD *)(v112 + 16) = v53;
                  *(_OWORD *)uint64_t v112 = v52;
                  if ((*a3)((long long *)(a1 + 60), (long long *)(a1 + 40)))
                  {
                    int v55 = *(_DWORD *)(a1 + 56);
                    long long v56 = *v49;
                    *int v49 = *v50;
                    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a1 + 76);
                    *int v50 = v56;
                    *(_DWORD *)(a1 + 76) = v55;
                    if ((*a3)((long long *)(a1 + 40), (long long *)(a1 + 20)))
                    {
                      int v57 = *(_DWORD *)(a1 + 36);
                      long long v58 = *v48;
                      *id v48 = *v49;
                      *(_DWORD *)(a1 + 36) = *(_DWORD *)(a1 + 56);
                      *int v49 = v58;
                      *(_DWORD *)(a1 + 56) = v57;
                      if ((*a3)((long long *)(a1 + 20), (long long *)a1))
                      {
                        long long v59 = *(_OWORD *)a1;
                        int v117 = *(_DWORD *)(a1 + 16);
                        long long v116 = v59;
                        *(_OWORD *)a1 = *v48;
                        *(_DWORD *)(a1 + 16) = *(_DWORD *)(a1 + 36);
                        *id v48 = v116;
                        *(_DWORD *)(a1 + 36) = v117;
                      }
                    }
                  }
                }
                break;
              default:
                JUMPOUT(0);
            }
            return;
          }
          if (v13 <= 479)
          {
            char v60 = (long long *)(a1 + 20);
            BOOL v62 = a1 == a2 || v60 == (long long *)a2;
            if (a5)
            {
              if (!v62)
              {
                uint64_t v63 = 0;
                unint64_t v64 = a1;
                do
                {
                  uint64_t v65 = (long long *)v64;
                  unint64_t v64 = (unint64_t)v60;
                  if ((*a3)(v60, v65))
                  {
                    long long v66 = *(_OWORD *)v64;
                    int v117 = *(_DWORD *)(v64 + 16);
                    long long v116 = v66;
                    uint64_t v67 = v63;
                    while (1)
                    {
                      uint64_t v68 = a1 + v67;
                      *(_OWORD *)(v68 + 20) = *(_OWORD *)(a1 + v67);
                      *(_DWORD *)(v68 + 36) = *(_DWORD *)(a1 + v67 + 16);
                      if (!v67) {
                        break;
                      }
                      v67 -= 20;
                      if (((*a3)(&v116, (long long *)(v67 + a1)) & 1) == 0)
                      {
                        uint64_t v69 = a1 + v67 + 20;
                        goto LABEL_79;
                      }
                    }
                    uint64_t v69 = a1;
LABEL_79:
                    long long v70 = v116;
                    *(_DWORD *)(v69 + 16) = v117;
                    *(_OWORD *)uint64_t v69 = v70;
                  }
                  char v60 = (long long *)(v64 + 20);
                  v63 += 20;
                }
                while (v64 + 20 != a2);
              }
            }
            else if (!v62)
            {
              unint64_t v103 = a1 - 20;
              do
              {
                uint64_t v104 = (long long *)a1;
                a1 = (unint64_t)v60;
                if ((*a3)(v60, v104))
                {
                  long long v105 = *(_OWORD *)a1;
                  int v117 = *(_DWORD *)(a1 + 16);
                  long long v116 = v105;
                  unint64_t v106 = v103;
                  do
                  {
                    *(_OWORD *)(v106 + 40) = *(_OWORD *)(v106 + 20);
                    *(_DWORD *)(v106 + 56) = *(_DWORD *)(v106 + 36);
                    char v107 = (*a3)(&v116, (long long *)v106);
                    v106 -= 20;
                  }
                  while ((v107 & 1) != 0);
                  long long v108 = v116;
                  *(_DWORD *)(v106 + 56) = v117;
                  *(_OWORD *)(v106 + 40) = v108;
                }
                char v60 = (long long *)(a1 + 20);
                v103 += 20;
              }
              while (a1 + 20 != a2);
            }
            return;
          }
          if (!a4)
          {
            if (a1 != a2)
            {
              int64_t v71 = (unint64_t)(v14 - 2) >> 1;
              unint64_t v111 = a2;
              int64_t v113 = v71;
              do
              {
                int64_t v72 = v71;
                if (v113 >= v71)
                {
                  uint64_t v73 = (2 * v71) | 1;
                  unint64_t v74 = a1 + 20 * v73;
                  if (2 * v71 + 2 < v14 && (*a3)((long long *)(a1 + 20 * v73), (long long *)(v74 + 20)))
                  {
                    v74 += 20;
                    uint64_t v73 = 2 * v72 + 2;
                  }
                  unint64_t v75 = a1 + 20 * v72;
                  if (((*a3)((long long *)v74, (long long *)v75) & 1) == 0)
                  {
                    long long v76 = *(_OWORD *)v75;
                    int v117 = *(_DWORD *)(v75 + 16);
                    long long v116 = v76;
                    do
                    {
                      unint64_t v77 = v74;
                      long long v78 = *(_OWORD *)v74;
                      *(_DWORD *)(v75 + 16) = *(_DWORD *)(v74 + 16);
                      *(_OWORD *)unint64_t v75 = v78;
                      if (v113 < v73) {
                        break;
                      }
                      uint64_t v79 = (2 * v73) | 1;
                      unint64_t v74 = a1 + 20 * v79;
                      uint64_t v80 = 2 * v73 + 2;
                      if (v80 < v14 && (*a3)((long long *)(a1 + 20 * v79), (long long *)(v74 + 20)))
                      {
                        v74 += 20;
                        uint64_t v79 = v80;
                      }
                      unint64_t v75 = v77;
                      uint64_t v73 = v79;
                    }
                    while (!(*a3)((long long *)v74, &v116));
                    long long v81 = v116;
                    *(_DWORD *)(v77 + 16) = v117;
                    *(_OWORD *)unint64_t v77 = v81;
                    a2 = v111;
                  }
                }
                int64_t v71 = v72 - 1;
              }
              while (v72);
              int64_t v82 = v13 / 0x14uLL;
              do
              {
                uint64_t v83 = 0;
                long long v84 = *(_OWORD *)a1;
                int v115 = *(_DWORD *)(a1 + 16);
                long long v114 = v84;
                unint64_t v85 = a1;
                do
                {
                  uint64_t v86 = v85 + 20 * v83 + 20;
                  uint64_t v87 = (2 * v83) | 1;
                  uint64_t v88 = 2 * v83 + 2;
                  if (v88 < v82
                    && (*a3)((long long *)(v85 + 20 * v83 + 20), (long long *)(v85 + 20 * v83 + 40)))
                  {
                    v86 += 20;
                    uint64_t v87 = v88;
                  }
                  long long v89 = *(_OWORD *)v86;
                  *(_DWORD *)(v85 + 16) = *(_DWORD *)(v86 + 16);
                  *(_OWORD *)unint64_t v85 = v89;
                  unint64_t v85 = v86;
                  uint64_t v83 = v87;
                }
                while (v87 <= (uint64_t)((unint64_t)(v82 - 2) >> 1));
                unint64_t v90 = (long long *)(a2 - 20);
                if (v86 == a2 - 20)
                {
                  unint64_t v93 = a2 - 20;
                  long long v101 = v114;
                  *(_DWORD *)(v86 + 16) = v115;
                  *(_OWORD *)uint64_t v86 = v101;
                }
                else
                {
                  long long v91 = *v90;
                  *(_DWORD *)(v86 + 16) = *(_DWORD *)(a2 - 4);
                  *(_OWORD *)uint64_t v86 = v91;
                  long long v92 = v114;
                  *(_DWORD *)(a2 - 4) = v115;
                  unint64_t v93 = a2 - 20;
                  *unint64_t v90 = v92;
                  uint64_t v94 = v86 - a1 + 20;
                  if (v94 >= 21)
                  {
                    unint64_t v95 = (v94 / 0x14uLL - 2) >> 1;
                    unint64_t v96 = a1 + 20 * v95;
                    if ((*a3)((long long *)v96, (long long *)v86))
                    {
                      long long v97 = *(_OWORD *)v86;
                      int v117 = *(_DWORD *)(v86 + 16);
                      long long v116 = v97;
                      do
                      {
                        uint64_t v98 = v96;
                        long long v99 = *(_OWORD *)v96;
                        *(_DWORD *)(v86 + 16) = *(_DWORD *)(v96 + 16);
                        *(_OWORD *)uint64_t v86 = v99;
                        if (!v95) {
                          break;
                        }
                        unint64_t v95 = (v95 - 1) >> 1;
                        unint64_t v96 = a1 + 20 * v95;
                        uint64_t v86 = v98;
                      }
                      while (((*a3)((long long *)v96, &v116) & 1) != 0);
                      long long v100 = v116;
                      *(_DWORD *)(v98 + 16) = v117;
                      *(_OWORD *)uint64_t v98 = v100;
                    }
                  }
                }
                BOOL v102 = v82-- <= 2;
                a2 = v93;
              }
              while (!v102);
            }
            return;
          }
          unint64_t v15 = a2;
          unint64_t v16 = (unint64_t)v14 >> 1;
          unint64_t v17 = a1 + 20 * ((unint64_t)v14 >> 1);
          if ((unint64_t)v13 < 0xA01)
          {
          }
          else
          {
            uint64_t v18 = 5 * v16;
            long long v19 = *(_OWORD *)a1;
            int v117 = *(_DWORD *)(a1 + 16);
            long long v116 = v19;
            int v20 = *(_DWORD *)(v17 + 16);
            *(_OWORD *)a1 = *(_OWORD *)v17;
            *(_DWORD *)(a1 + 16) = v20;
            long long v21 = v116;
            *(_DWORD *)(v17 + 16) = v117;
            *(_OWORD *)unint64_t v17 = v21;
          }
          --a4;
          if (a5 & 1) != 0 || ((*a3)((long long *)(a1 - 20), (long long *)a1)) {
            break;
          }
          long long v35 = *(_OWORD *)a1;
          int v115 = *(_DWORD *)(a1 + 16);
          long long v114 = v35;
          if ((*a3)(&v114, (long long *)v112))
          {
            unint64_t v12 = a1;
            a2 = v15;
            do
              v12 += 20;
            while (((*a3)(&v114, (long long *)v12) & 1) == 0);
          }
          else
          {
            int v36 = (long long *)(a1 + 20);
            a2 = v15;
            do
            {
              unint64_t v12 = (unint64_t)v36;
              if ((unint64_t)v36 >= v15) {
                break;
              }
              int v37 = (*a3)(&v114, v36);
              int v36 = (long long *)(v12 + 20);
            }
            while (!v37);
          }
          unint64_t v38 = a2;
          if (v12 < a2)
          {
            unint64_t v38 = a2;
            do
              v38 -= 20;
            while (((*a3)(&v114, (long long *)v38) & 1) != 0);
          }
          while (v12 < v38)
          {
            long long v39 = *(_OWORD *)v12;
            int v117 = *(_DWORD *)(v12 + 16);
            long long v116 = v39;
            long long v40 = *(_OWORD *)v38;
            *(_DWORD *)(v12 + 16) = *(_DWORD *)(v38 + 16);
            *(_OWORD *)unint64_t v12 = v40;
            long long v41 = v116;
            *(_DWORD *)(v38 + 16) = v117;
            *(_OWORD *)unint64_t v38 = v41;
            do
              v12 += 20;
            while (!(*a3)(&v114, (long long *)v12));
            do
              v38 -= 20;
            while (((*a3)(&v114, (long long *)v38) & 1) != 0);
          }
          uint64_t v42 = (long long *)(v12 - 20);
          BOOL v5 = v12 - 20 >= a1;
          BOOL v6 = v12 - 20 == a1;
          if (v12 - 20 != a1)
          {
            long long v43 = *v42;
            *(_DWORD *)(a1 + 16) = *(_DWORD *)(v12 - 4);
            *(_OWORD *)a1 = v43;
          }
          a5 = 0;
          long long v44 = v114;
          *(_DWORD *)(v12 - 4) = v115;
          *uint64_t v42 = v44;
        }
        uint64_t v22 = 0;
        long long v23 = *(_OWORD *)a1;
        int v115 = *(_DWORD *)(a1 + 16);
        long long v114 = v23;
        do
          v22 += 20;
        while (((*a3)((long long *)(v22 + a1), &v114) & 1) != 0);
        unint64_t v24 = a1 + v22;
        unint64_t v25 = (long long *)v15;
        BOOL v6 = v22 == 20;
        a2 = v15;
        if (v6)
        {
          unint64_t v25 = (long long *)v15;
          do
          {
            if (v24 >= (unint64_t)v25) {
              break;
            }
            unint64_t v25 = (long long *)((char *)v25 - 20);
          }
          while (((*a3)(v25, &v114) & 1) == 0);
        }
        else
        {
          do
            unint64_t v25 = (long long *)((char *)v25 - 20);
          while (!(*a3)(v25, &v114));
        }
        if (v24 >= (unint64_t)v25)
        {
          uint64_t v31 = v24 - 20;
        }
        else
        {
          unint64_t v26 = v24;
          uint64_t v27 = v25;
          do
          {
            long long v28 = *(_OWORD *)v26;
            int v117 = *(_DWORD *)(v26 + 16);
            long long v116 = v28;
            long long v29 = *v27;
            *(_DWORD *)(v26 + 16) = *((_DWORD *)v27 + 4);
            *(_OWORD *)unint64_t v26 = v29;
            long long v30 = v116;
            *((_DWORD *)v27 + 4) = v117;
            long long *v27 = v30;
            do
              v26 += 20;
            while (((*a3)((long long *)v26, &v114) & 1) != 0);
            do
              uint64_t v27 = (long long *)((char *)v27 - 20);
            while (!(*a3)(v27, &v114));
          }
          while (v26 < (unint64_t)v27);
          uint64_t v31 = v26 - 20;
        }
        if (v31 != a1)
        {
          long long v32 = *(_OWORD *)v31;
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(v31 + 16);
          *(_OWORD *)a1 = v32;
        }
        long long v33 = v114;
        *(_DWORD *)(v31 + 16) = v115;
        *(_OWORD *)uint64_t v31 = v33;
        if (v24 >= (unint64_t)v25) {
          break;
        }
LABEL_33:
        a5 = 0;
        unint64_t v12 = v31 + 20;
      }
      unint64_t v12 = v31 + 20;
      {
        break;
      }
      if (!v34) {
        goto LABEL_33;
      }
    }
    a2 = v31;
    if (!v34) {
      continue;
    }
    break;
  }
}

uint64_t std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(anonymous namespace'::KeyAndPriority const&,anonymous namespace'::KeyAndPriority const&),anonymous namespace'::KeyAndPriority*>(long long *a1, long long *a2, long long *a3, uint64_t (**a4)(long long *, long long *))
{
  char v8 = (*a4)(a2, a1);
  uint64_t result = (*a4)(a3, a2);
  if (v8)
  {
    if (result)
    {
      int v10 = *((_DWORD *)a1 + 4);
      long long v11 = *a1;
      int v12 = *((_DWORD *)a3 + 4);
      *a1 = *a3;
      *((_DWORD *)a1 + 4) = v12;
    }
    else
    {
      int v19 = *((_DWORD *)a1 + 4);
      long long v20 = *a1;
      int v21 = *((_DWORD *)a2 + 4);
      *a1 = *a2;
      *((_DWORD *)a1 + 4) = v21;
      *a2 = v20;
      *((_DWORD *)a2 + 4) = v19;
      uint64_t result = (*a4)(a3, a2);
      if (!result) {
        return result;
      }
      int v10 = *((_DWORD *)a2 + 4);
      long long v11 = *a2;
      int v22 = *((_DWORD *)a3 + 4);
      *a2 = *a3;
      *((_DWORD *)a2 + 4) = v22;
    }
    *a3 = v11;
    *((_DWORD *)a3 + 4) = v10;
  }
  else if (result)
  {
    int v13 = *((_DWORD *)a2 + 4);
    long long v14 = *a2;
    int v15 = *((_DWORD *)a3 + 4);
    *a2 = *a3;
    *((_DWORD *)a2 + 4) = v15;
    *a3 = v14;
    *((_DWORD *)a3 + 4) = v13;
    uint64_t result = (*a4)(a2, a1);
    if (result)
    {
      int v16 = *((_DWORD *)a1 + 4);
      long long v17 = *a1;
      int v18 = *((_DWORD *)a2 + 4);
      *a1 = *a2;
      *((_DWORD *)a1 + 4) = v18;
      *a2 = v17;
      *((_DWORD *)a2 + 4) = v16;
    }
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(anonymous namespace'::KeyAndPriority const&,anonymous namespace'::KeyAndPriority const&),anonymous namespace'::KeyAndPriority*>(uint64_t a1, uint64_t a2, uint64_t (**a3)(long long *, long long *))
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = (a2 - a1) >> 2;
  BOOL result = 1;
  switch(0xCCCCCCCCCCCCCCCDLL * v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      char v8 = (long long *)(a2 - 20);
      if ((*a3)((long long *)(a2 - 20), (long long *)a1))
      {
        int v9 = *(_DWORD *)(a1 + 16);
        long long v10 = *(_OWORD *)a1;
        int v11 = *(_DWORD *)(a2 - 4);
        *(_OWORD *)a1 = *v8;
        *(_DWORD *)(a1 + 16) = v11;
        *char v8 = v10;
        *(_DWORD *)(a2 - 4) = v9;
      }
      return 1;
    case 3uLL:
      return 1;
    case 4uLL:
      return 1;
    case 5uLL:
      int v19 = (long long *)(a1 + 20);
      long long v20 = (long long *)(a1 + 40);
      int v21 = (long long *)(a1 + 60);
      uint64_t v22 = a2 - 20;
      if (((unsigned int (*)(uint64_t, uint64_t, __n128))*a3)(v22, a1 + 60, v23))
      {
        int v24 = *(_DWORD *)(a1 + 76);
        long long v25 = *v21;
        int v26 = *(_DWORD *)(v22 + 16);
        *int v21 = *(_OWORD *)v22;
        *(_DWORD *)(a1 + 76) = v26;
        *(_OWORD *)uint64_t v22 = v25;
        *(_DWORD *)(v22 + 16) = v24;
        if ((*a3)((long long *)(a1 + 60), (long long *)(a1 + 40)))
        {
          int v27 = *(_DWORD *)(a1 + 56);
          long long v28 = *v20;
          *long long v20 = *v21;
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(a1 + 76);
          *int v21 = v28;
          *(_DWORD *)(a1 + 76) = v27;
          if ((*a3)((long long *)(a1 + 40), (long long *)(a1 + 20)))
          {
            int v29 = *(_DWORD *)(a1 + 36);
            long long v30 = *v19;
            long long *v19 = *v20;
            *(_DWORD *)(a1 + 36) = *(_DWORD *)(a1 + 56);
            *long long v20 = v30;
            *(_DWORD *)(a1 + 56) = v29;
            if ((*a3)((long long *)(a1 + 20), (long long *)a1))
            {
              int v31 = *(_DWORD *)(a1 + 16);
              long long v32 = *(_OWORD *)a1;
              *(_OWORD *)a1 = *v19;
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(a1 + 36);
              long long *v19 = v32;
              *(_DWORD *)(a1 + 36) = v31;
            }
          }
        }
      }
      return 1;
    default:
      int v12 = (long long *)(a1 + 40);
      uint64_t v13 = a1 + 60;
      if (a1 + 60 == a2) {
        return 1;
      }
      uint64_t v14 = 0;
      int v15 = 0;
      break;
  }
  while (1)
  {
    if ((*a3)((long long *)v13, v12))
    {
      long long v33 = *(_OWORD *)v13;
      int v34 = *(_DWORD *)(v13 + 16);
      uint64_t v16 = v14;
      while (1)
      {
        uint64_t v17 = a1 + v16;
        *(_OWORD *)(v17 + 60) = *(_OWORD *)(a1 + v16 + 40);
        *(_DWORD *)(v17 + 76) = *(_DWORD *)(a1 + v16 + 56);
        if (v16 == -40) {
          break;
        }
        v16 -= 20;
        if (((*a3)(&v33, (long long *)(v17 + 20)) & 1) == 0)
        {
          uint64_t v18 = a1 + v16 + 60;
          goto LABEL_12;
        }
      }
      uint64_t v18 = a1;
LABEL_12:
      *(_OWORD *)uint64_t v18 = v33;
      *(_DWORD *)(v18 + 16) = v34;
      if (++v15 == 8) {
        return v13 + 20 == a2;
      }
    }
    int v12 = (long long *)v13;
    v14 += 20;
    v13 += 20;
    if (v13 == a2) {
      return 1;
    }
  }
}

__n128 std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(anonymous namespace'::KeyAndPriority const&,anonymous namespace'::KeyAndPriority const&),anonymous namespace'::KeyAndPriority*>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (**a5)(long long *, long long *))
{
  if ((*a5)((long long *)a4, (long long *)a3))
  {
    int v11 = *(_DWORD *)(a3 + 16);
    long long v12 = *(_OWORD *)a3;
    int v13 = *(_DWORD *)(a4 + 16);
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(_DWORD *)(a3 + 16) = v13;
    *(_OWORD *)a4 = v12;
    *(_DWORD *)(a4 + 16) = v11;
    if ((*a5)((long long *)a3, (long long *)a2))
    {
      int v14 = *(_DWORD *)(a2 + 16);
      long long v15 = *(_OWORD *)a2;
      int v16 = *(_DWORD *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_DWORD *)(a2 + 16) = v16;
      *(_OWORD *)a3 = v15;
      *(_DWORD *)(a3 + 16) = v14;
      if ((*a5)((long long *)a2, (long long *)a1))
      {
        int v17 = *(_DWORD *)(a1 + 16);
        __n128 result = *(__n128 *)a1;
        int v18 = *(_DWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_DWORD *)(a1 + 16) = v18;
        *(__n128 *)a2 = result;
        *(_DWORD *)(a2 + 16) = v17;
      }
    }
  }
  return result;
}

uint64_t std::__inplace_merge<std::_ClassicAlgPolicy,BOOL (*&)(anonymous namespace'::KeyAndPriority const&,anonymous namespace'::KeyAndPriority const&),std::__wrap_iter<anonymous namespace'::KeyAndPriority*>>(uint64_t result, char *a2, char *a3, uint64_t (**a4)(char *, char *), int64_t a5, unint64_t a6, char *a7, int64_t a8)
{
  unint64_t v93 = a6;
  if (a6)
  {
    int v13 = (char *)result;
    while (a5 > a8 && (uint64_t)v93 > a8)
    {
      uint64_t v14 = 0;
      int64_t v15 = -a5;
      while (1)
      {
        int v16 = &v13[v14];
        __n128 result = (*a4)(a2, &v13[v14]);
        if (result) {
          break;
        }
        --a5;
        v14 += 20;
        if (__CFADD__(v15++, 1)) {
          return result;
        }
      }
      unint64_t v18 = -v15;
      unint64_t v19 = v93;
      long long v91 = a3;
      if (-v15 >= (uint64_t)v93)
      {
        if (v15 == -1)
        {
          unint64_t v77 = &v13[v14];
          int v103 = *(_DWORD *)&v13[v14 + 16];
          long long v98 = *(_OWORD *)&v13[v14];
          long long v78 = *(_OWORD *)a2;
          *((_DWORD *)v77 + 4) = *((_DWORD *)a2 + 4);
          *(_OWORD *)unint64_t v77 = v78;
          *(_OWORD *)a2 = v98;
          *((_DWORD *)a2 + 4) = v103;
          return result;
        }
        int v27 = a3;
        int v21 = &v13[20 * ((unint64_t)a5 >> 1) + v14];
        int v26 = a2;
        if (a2 != v27)
        {
          int64_t v82 = a4;
          long long v84 = a7;
          long long v28 = *a4;
          unint64_t v29 = 0xCCCCCCCCCCCCCCCDLL * ((v91 - a2) >> 2);
          __srca = a2;
          do
          {
            long long v30 = &a2[20 * (v29 >> 1)];
            unsigned int v31 = v28(v30, v21);
            if (v31) {
              v29 += ~(v29 >> 1);
            }
            else {
              v29 >>= 1;
            }
            if (v31) {
              a2 = v30 + 20;
            }
          }
          while (v29);
          a7 = v84;
          unint64_t v18 = -v15;
          a4 = v82;
          int v26 = __srca;
          unint64_t v19 = v93;
        }
        unint64_t v25 = v18 >> 1;
        unint64_t v20 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - v26) >> 2);
      }
      else
      {
        unint64_t v20 = v93 >> 1;
        int v21 = a2;
        a2 += 20 * (v93 >> 1);
        __src = v21;
        if (v21 - v13 != v14)
        {
          uint64_t v83 = v13;
          uint64_t v22 = (v21 - v13 - v14) >> 2;
          __n128 v23 = (unsigned int (**)(char *, uint64_t))a4;
          unint64_t v24 = 0xCCCCCCCCCCCCCCCDLL * v22;
          int v21 = v16;
          do
          {
            if ((*v23)(a2, (uint64_t)&v21[20 * (v24 >> 1)]))
            {
              v24 >>= 1;
            }
            else
            {
              v21 += 20 * (v24 >> 1) + 20;
              v24 += ~(v24 >> 1);
            }
          }
          while (v24);
          a4 = (uint64_t (**)(char *, char *))v23;
          int v13 = v83;
          unint64_t v19 = v93;
          unint64_t v20 = v93 >> 1;
        }
        unint64_t v25 = 0xCCCCCCCCCCCCCCCDLL * ((v21 - v13 - v14) >> 2);
        int v26 = __src;
      }
      if (v21 == v26)
      {
        int v36 = a2;
      }
      else
      {
        uint64_t v32 = a2 - v26;
        if (a2 == v26)
        {
          int v36 = v21;
        }
        else
        {
          long long v33 = v21 + 20;
          if (v21 + 20 == v26)
          {
            int v100 = *((_DWORD *)v21 + 4);
            long long v95 = *(_OWORD *)v21;
            unint64_t v85 = a7;
            __srcb = (void *)v25;
            unint64_t v39 = v20;
            memmove(v21, v26, a2 - v26);
            unint64_t v20 = v39;
            a7 = v85;
            unint64_t v25 = (unint64_t)__srcb;
            unint64_t v19 = v93;
            long long v40 = &v21[v32];
            *(_OWORD *)long long v40 = v95;
            int v36 = &v21[v32];
            *((_DWORD *)v40 + 4) = v100;
          }
          else
          {
            int v34 = v26 + 20;
            if (v26 + 20 == a2)
            {
              int v101 = *((_DWORD *)a2 - 1);
              long long v96 = *(_OWORD *)(a2 - 20);
              if (a2 - 20 != v21)
              {
                uint64_t v86 = a7;
                __srcc = (void *)v25;
                unint64_t v41 = v20;
                memmove(v21 + 20, v21, a2 - 20 - v21);
                unint64_t v20 = v41;
                a7 = v86;
                unint64_t v25 = (unint64_t)__srcc;
                unint64_t v19 = v93;
              }
              int v36 = v21 + 20;
              *((_DWORD *)v21 + 4) = v101;
              *(_OWORD *)int v21 = v96;
            }
            else
            {
              unint64_t v35 = 0xCCCCCCCCCCCCCCCDLL * ((v26 - v21) >> 2);
              if (v35 == 0xCCCCCCCCCCCCCCCDLL * (v32 >> 2))
              {
                int v36 = v26;
                do
                {
                  int v99 = *((_DWORD *)v33 - 1);
                  long long v94 = *(_OWORD *)(v33 - 20);
                  long long v37 = *(_OWORD *)(v34 - 20);
                  *((_DWORD *)v33 - objc_destroyWeak(this + 1) = *((_DWORD *)v34 - 1);
                  *(_OWORD *)(v33 - 20) = v37;
                  *(_OWORD *)(v34 - 20) = v94;
                  *((_DWORD *)v34 - objc_destroyWeak(this + 1) = v99;
                  if (v33 == v26) {
                    break;
                  }
                  v33 += 20;
                  BOOL v38 = v34 == a2;
                  v34 += 20;
                }
                while (!v38);
              }
              else
              {
                uint64_t v42 = 0xCCCCCCCCCCCCCCCDLL * (v32 >> 2);
                unint64_t v43 = 0xCCCCCCCCCCCCCCCDLL * ((v26 - v21) >> 2);
                do
                {
                  uint64_t v44 = v43;
                  unint64_t v43 = v42;
                  uint64_t v42 = v44 % v42;
                }
                while (v42);
                if (v43)
                {
                  long long v45 = &v21[20 * v43];
                  do
                  {
                    long long v46 = *(_OWORD *)(v45 - 20);
                    int v47 = *((_DWORD *)v45 - 1);
                    v45 -= 20;
                    int v102 = v47;
                    long long v97 = v46;
                    id v48 = &v45[4 * ((v26 - v21) >> 2)];
                    int v49 = v45;
                    do
                    {
                      int v50 = v48;
                      long long v51 = *(_OWORD *)v48;
                      *((_DWORD *)v49 + 4) = *((_DWORD *)v48 + 4);
                      *(_OWORD *)int v49 = v51;
                      unint64_t v52 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - v48) >> 2);
                      v48 += 4 * ((v26 - v21) >> 2);
                      BOOL v53 = __OFSUB__(v35, v52);
                      uint64_t v55 = v35 - v52;
                      char v54 = (v55 < 0) ^ v53;
                      long long v56 = &v21[20 * v55];
                      if (!v54) {
                        id v48 = v56;
                      }
                      int v49 = v50;
                    }
                    while (v48 != v45);
                    *((_DWORD *)v50 + 4) = v102;
                    *(_OWORD *)int v50 = v97;
                  }
                  while (v45 != v21);
                }
                int v36 = &v21[4 * (v32 >> 2)];
              }
            }
          }
        }
      }
      a5 = -(uint64_t)v25 - v15;
      if ((uint64_t)(v25 + v20) >= (uint64_t)(v19 - (v25 + v20) - v15))
      {
        long long v59 = v36;
        unint64_t v60 = v25;
        int64_t v61 = a5;
        BOOL v62 = a7;
        unint64_t v63 = v20;
        a2 = v21;
        unint64_t v58 = v63;
        a7 = v62;
        a5 = v60;
        a3 = v59;
      }
      else
      {
        int v16 = v36;
        unint64_t v57 = v19 - v20;
        unint64_t v58 = v57;
        a3 = v91;
      }
      unint64_t v93 = v58;
      int v13 = v16;
      if (!v58) {
        return result;
      }
    }
    if (a5 <= (uint64_t)v93)
    {
      if (v13 != a2)
      {
        unint64_t v71 = 0;
        do
        {
          int64_t v72 = &a7[v71];
          long long v73 = *(_OWORD *)&v13[v71];
          *((_DWORD *)v72 + 4) = *(_DWORD *)&v13[v71 + 16];
          *(_OWORD *)int64_t v72 = v73;
          v71 += 20;
        }
        while (&v13[v71] != a2);
        if (v71)
        {
          unint64_t v74 = a7;
          while (a2 != a3)
          {
            __n128 result = (*a4)(a2, v74);
            if (result)
            {
              long long v75 = *(_OWORD *)a2;
              *((_DWORD *)v13 + 4) = *((_DWORD *)a2 + 4);
              *(_OWORD *)int v13 = v75;
              a2 += 20;
            }
            else
            {
              long long v76 = *(_OWORD *)v74;
              *((_DWORD *)v13 + 4) = *((_DWORD *)v74 + 4);
              *(_OWORD *)int v13 = v76;
              v74 += 20;
            }
            v13 += 20;
            if (&a7[v71] == v74) {
              return result;
            }
          }
          return (uint64_t)memmove(v13, v74, a7 - v74 + v71);
        }
      }
    }
    else if (a3 != a2)
    {
      unint64_t v64 = 0;
      do
      {
        uint64_t v65 = &a7[v64];
        long long v66 = *(_OWORD *)&a2[v64];
        *((_DWORD *)v65 + 4) = *(_DWORD *)&a2[v64 + 16];
        *(_OWORD *)uint64_t v65 = v66;
        v64 += 20;
      }
      while (&a2[v64] != a3);
      if (v64)
      {
        uint64_t v67 = &a7[v64];
        uint64_t v68 = a3 - 20;
        while (a2 != v13)
        {
          __n128 result = (*a4)(v67 - 20, a2 - 20);
          if (result) {
            uint64_t v69 = a2 - 20;
          }
          else {
            uint64_t v69 = v67 - 20;
          }
          if (result) {
            a2 -= 20;
          }
          int v70 = *((_DWORD *)v69 + 4);
          if (!result) {
            v67 -= 20;
          }
          *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
          *((_DWORD *)v68 + 4) = v70;
          v68 -= 20;
          if (v67 == a7) {
            return result;
          }
        }
        unint64_t v79 = 0;
        do
        {
          uint64_t v80 = &v68[v79];
          long long v81 = *(_OWORD *)&v67[v79 - 20];
          *((_DWORD *)v80 + 4) = *(_DWORD *)&v67[v79 - 4];
          *(_OWORD *)uint64_t v80 = v81;
          v79 -= 20;
        }
        while (&v67[v79] != a7);
      }
    }
  }
  return result;
}

BOOL GEOARElementDetailsReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    BOOL v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 16) |= 2u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if ((v32 & 0x80) == 0) {
              goto LABEL_50;
            }
            v26 += 7;
            BOOL v15 = v27++ >= 9;
            if (v15)
            {
              uint64_t v28 = 0;
              goto LABEL_52;
            }
          }
          v3[*v6] = 1;
LABEL_50:
          if (v3[*v6]) {
            uint64_t v28 = 0;
          }
LABEL_52:
          BOOL v40 = v28 != 0;
          uint64_t v41 = 12;
        }
        else
        {
          if (v18 != 2)
          {
            if (v18 == 1)
            {
              char v19 = 0;
              unsigned int v20 = 0;
              uint64_t v21 = 0;
              *(unsigned char *)(a1 + 16) |= 1u;
              while (1)
              {
                uint64_t v22 = *v4;
                uint64_t v23 = *(void *)&v3[v22];
                unint64_t v24 = v23 + 1;
                if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                  break;
                }
                char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
                *(void *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if ((v25 & 0x80) == 0) {
                  goto LABEL_46;
                }
                v19 += 7;
                BOOL v15 = v20++ >= 9;
                if (v15)
                {
                  LODWORD(v2objc_destroyWeak(this + 1) = 0;
                  goto LABEL_48;
                }
              }
              v3[*v6] = 1;
LABEL_46:
              if (v3[*v6]) {
                LODWORD(v2objc_destroyWeak(this + 1) = 0;
              }
LABEL_48:
              *(_DWORD *)(a1 + 8) = v21;
            }
            else if (!PBReaderSkipValueWithTag())
            {
              goto LABEL_60;
            }
            continue;
          }
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v35 = 0;
          *(unsigned char *)(a1 + 16) |= 4u;
          while (1)
          {
            uint64_t v36 = *v4;
            uint64_t v37 = *(void *)&v3[v36];
            unint64_t v38 = v37 + 1;
            if (v37 == -1 || v38 > *(void *)&v3[*v5]) {
              break;
            }
            char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
            *(void *)&v3[v36] = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if ((v39 & 0x80) == 0) {
              goto LABEL_54;
            }
            v33 += 7;
            BOOL v15 = v34++ >= 9;
            if (v15)
            {
              uint64_t v35 = 0;
              goto LABEL_56;
            }
          }
          v3[*v6] = 1;
LABEL_54:
          if (v3[*v6]) {
            uint64_t v35 = 0;
          }
LABEL_56:
          BOOL v40 = v35 != 0;
          uint64_t v41 = 13;
        }
        *(unsigned char *)(a1 + v4objc_destroyWeak(this + 1) = v40;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_18A1FDF1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARElementDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOARElementDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A1FDF80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARElementDetailsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOARPRatingReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    BOOL v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          uint64_t v25 = PBReaderReadString();
          unint64_t v26 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_34:
          *(unsigned char *)(a1 + 16) = v20 != 0;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18A1FECB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARPRatingReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOARPRatingReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A1FED14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARPRatingIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          BOOL v23 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

BOOL GEOARSessionThermalPressureReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    BOOL v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 28) |= 8u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_47;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_49;
              }
            }
            v3[*v6] = 1;
LABEL_47:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_49:
            uint64_t v40 = 24;
            goto LABEL_58;
          case 2u:
            *(unsigned char *)(a1 + 28) |= 1u;
            uint64_t v25 = *v4;
            unint64_t v26 = *(void *)&v3[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v27 = *(void *)(*(void *)&v3[*v7] + v26);
              *(void *)&v3[v25] = v26 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v27 = 0;
            }
            *(void *)(a1 + 8) = v27;
            continue;
          case 3u:
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 28) |= 2u;
            while (2)
            {
              uint64_t v30 = *v4;
              uint64_t v31 = *(void *)&v3[v30];
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
                *(void *)&v3[v30] = v32;
                v20 |= (unint64_t)(v33 & 0x7F) << v28;
                if (v33 < 0)
                {
                  v28 += 7;
                  BOOL v15 = v29++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_53;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_53:
            uint64_t v40 = 16;
            goto LABEL_58;
          case 4u:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 28) |= 4u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_63;
            }
            continue;
        }
        while (1)
        {
          uint64_t v36 = *v4;
          uint64_t v37 = *(void *)&v3[v36];
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)&v3[*v5]) {
            break;
          }
          char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
          *(void *)&v3[v36] = v38;
          v20 |= (unint64_t)(v39 & 0x7F) << v34;
          if ((v39 & 0x80) == 0) {
            goto LABEL_55;
          }
          v34 += 7;
          BOOL v15 = v35++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_57;
          }
        }
        v3[*v6] = 1;
LABEL_55:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_57:
        uint64_t v40 = 20;
LABEL_58:
        *(_DWORD *)(a1 + v40) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v41 = v3[*v6] == 0;
  }
  else
  {
LABEL_63:
    BOOL v41 = 0;
  }
  objc_sync_exit(v3);

  return v41;
}

void sub_18A2000C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARSessionThermalPressureReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOARSessionThermalPressureReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A200138(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARSessionThermalPressureIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_51;
          }
        case 2u:
          if (v16 != 1) {
            goto LABEL_54;
          }
          uint64_t v24 = *v2;
          unint64_t v25 = *(void *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_50;
          }
          unint64_t v26 = v25 + 8;
          if (v26 > *(void *)&a1[*v3]) {
            goto LABEL_50;
          }
          *(void *)&a1[v24] = v26;
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v23 = v27++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_51;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_54:
          BOOL v37 = 0;
          goto LABEL_53;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v23 = v32++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_51;
      }
LABEL_49:
      uint64_t v14 = *v4;
LABEL_50:
      a1[v14] = 1;
LABEL_51:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
LABEL_53:
  PBReaderRecallMark();
  return v37;
}

void sub_18A200BAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOActionButtonDetailReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 3) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  BOOL v62 = v15;
  int v16 = (int *)MEMORY[0x1E4F940E8];
  unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
  unsigned int v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_85;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_85:
      if (v13)
      {
        char v56 = 1;
        goto LABEL_96;
      }
      if (!v14) {
        goto LABEL_97;
      }
      while (1)
      {
        int v58 = *v14++;
        int v57 = v58;
        if (v58 == 1) {
          break;
        }
        if (v57 == 2)
        {
          char v59 = 8;
LABEL_94:
          *(unsigned char *)(a1 + 52) |= v59;
        }
        else if (!v57)
        {
          goto LABEL_97;
        }
      }
      char v59 = 4;
      goto LABEL_94;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v62)
    {
      int v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 52) & 4) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 16;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_102;
        }
        char v54 = 32 * *(unsigned char *)(a1 + 52);
        goto LABEL_80;
      case 2:
        if (!v30) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 52) & 8) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 24;
LABEL_49:
          unint64_t v38 = *(void **)(a1 + v36);
          *(void *)(a1 + v36) = v35;

          unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
          --v9;
          goto LABEL_81;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v54 = 16 * *(unsigned char *)(a1 + 52);
LABEL_80:
          v9 += v54 >> 7;
          unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_81:
          if (v9) {
            char v55 = 1;
          }
          else {
            char v55 = v13;
          }
          if ((v55 & 1) == 0) {
            goto LABEL_85;
          }
          continue;
        }
LABEL_102:
        char v56 = 0;
        unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_96:
        *(unsigned char *)(a1 + 52) |= 4u;
        *(unsigned char *)(a1 + 52) |= 8u;
        if (v56)
        {
LABEL_97:
          unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
          if (v13) {
            goto LABEL_98;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v13)
          {
LABEL_98:
            unint64_t v60 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_66;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 52) |= 1u;
        while (2)
        {
          uint64_t v42 = *v16;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(v3 + *v18) + v43);
            *(void *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v26 = v40++ >= 9;
              if (v26)
              {
                LODWORD(v4objc_destroyWeak(this + 1) = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v4objc_destroyWeak(this + 1) = 0;
        }
LABEL_71:
        *(_DWORD *)(a1 + 44) = v41;
        goto LABEL_81;
      case 4:
        if (v8)
        {
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          *(unsigned char *)(a1 + 52) |= 2u;
          while (1)
          {
            uint64_t v49 = *v16;
            uint64_t v50 = *(void *)(v3 + v49);
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)(v3 + *v6)) {
              break;
            }
            char v52 = *(unsigned char *)(*(void *)(v3 + *v18) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if ((v52 & 0x80) == 0) {
              goto LABEL_73;
            }
            v46 += 7;
            BOOL v26 = v47++ >= 9;
            if (v26)
            {
              uint64_t v48 = 0;
              goto LABEL_75;
            }
          }
          *(unsigned char *)(v3 + *v17) = 1;
LABEL_73:
          if (*(unsigned char *)(v3 + *v17)) {
            uint64_t v48 = 0;
          }
LABEL_75:
          *(unsigned char *)(a1 + 48) = v48 != 0;
        }
        else
        {
LABEL_66:
          char v53 = PBReaderSkipValueWithTag();
          unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
LABEL_95:
            char v56 = 0;
            goto LABEL_96;
          }
        }
        goto LABEL_81;
      default:
        int v37 = PBReaderSkipValueWithTag();
        unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v37) {
          goto LABEL_95;
        }
        goto LABEL_81;
    }
  }
}

void sub_18A2012A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A201B14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOActionButtonDetailReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOActionButtonDetailReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOActionButtonDetailReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOActionButtonDetailReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOActionButtonDetailReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18A201CA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOActionButtonDetailReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOActionButtonDetailReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A201D08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActionButtonDetailIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_44;
          }
          goto LABEL_22;
        case 2u:
          if (v15 == 2) {
            goto LABEL_22;
          }
          goto LABEL_44;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_40;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_41;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_22:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_44:
          BOOL v28 = 0;
          goto LABEL_43;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_41;
      }
LABEL_40:
      a1[*v4] = 1;
LABEL_41:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v28;
}

void sub_18A202168(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActionButtonDetailIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_18A2024B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAutoCompleteResultInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    BOOL v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_30;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_32:
          *(_DWORD *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_18A2030E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAutoCompleteResultInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOAutoCompleteResultInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A20314C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAutoCompleteResultInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOCacheHitReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    BOOL v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 4u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOCacheHit__requestorType;
                goto LABEL_54;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                break;
              }
              v18 += 7;
              BOOL v25 = v19++ > 8;
              if (v25)
              {
                LODWORD(v20) = 0;
                unint64_t v26 = &OBJC_IVAR___GEOCacheHit__requestorType;
                goto LABEL_57;
              }
            }
            unint64_t v26 = &OBJC_IVAR___GEOCacheHit__requestorType;
            goto LABEL_55;
          case 2u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 8u;
            while (2)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOCacheHit__tileSourceType;
                goto LABEL_54;
              }
              char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
              *(void *)&v3[v29] = v31;
              v20 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                BOOL v25 = v28++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  unint64_t v26 = &OBJC_IVAR___GEOCacheHit__tileSourceType;
                  goto LABEL_57;
                }
                continue;
              }
              break;
            }
            unint64_t v26 = &OBJC_IVAR___GEOCacheHit__tileSourceType;
            goto LABEL_55;
          case 3u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 2u;
            while (2)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5])
              {
                unint64_t v26 = &OBJC_IVAR___GEOCacheHit__count;
                goto LABEL_54;
              }
              char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
              *(void *)&v3[v35] = v37;
              v20 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                BOOL v25 = v34++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  unint64_t v26 = &OBJC_IVAR___GEOCacheHit__count;
                  goto LABEL_57;
                }
                continue;
              }
              break;
            }
            unint64_t v26 = &OBJC_IVAR___GEOCacheHit__count;
            goto LABEL_55;
          case 4u:
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 1u;
            break;
          default:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_65;
            }
            continue;
        }
        while (1)
        {
          uint64_t v41 = *v4;
          uint64_t v42 = *(void *)&v3[v41];
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)&v3[*v5]) {
            break;
          }
          char v44 = *(unsigned char *)(*(void *)&v3[*v7] + v42);
          *(void *)&v3[v41] = v43;
          v20 |= (unint64_t)(v44 & 0x7F) << v39;
          if ((v44 & 0x80) == 0)
          {
            unint64_t v26 = &OBJC_IVAR___GEOCacheHit__bytes;
            goto LABEL_55;
          }
          v39 += 7;
          BOOL v25 = v40++ > 8;
          if (v25)
          {
            LODWORD(v20) = 0;
            unint64_t v26 = &OBJC_IVAR___GEOCacheHit__bytes;
            goto LABEL_57;
          }
        }
        unint64_t v26 = &OBJC_IVAR___GEOCacheHit__bytes;
LABEL_54:
        v3[*v6] = 1;
LABEL_55:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_57:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v45 = v3[*v6] == 0;
  }
  else
  {
LABEL_65:
    BOOL v45 = 0;
  }
  objc_sync_exit(v3);

  return v45;
}

void sub_18A2044DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCacheHitReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOCacheHitReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A204550(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCacheHitIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          BOOL v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v21 = v32++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

BOOL GEOCacheMissReadAllFrom(unsigned char *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    BOOL v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (!v3[*v6])
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            a1[36] |= 0x10u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_61;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_63;
              }
            }
            v3[*v6] = 1;
LABEL_61:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_63:
            uint64_t v50 = 32;
            goto LABEL_80;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v20 = 0;
            a1[36] |= 8u;
            while (2)
            {
              uint64_t v27 = *v4;
              uint64_t v28 = *(void *)&v3[v27];
              unint64_t v29 = v28 + 1;
              if (v28 == -1 || v29 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
                *(void *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_67;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_67:
            uint64_t v50 = 28;
            goto LABEL_80;
          case 3u:
            char v31 = 0;
            unsigned int v32 = 0;
            uint64_t v20 = 0;
            a1[36] |= 2u;
            while (2)
            {
              uint64_t v33 = *v4;
              uint64_t v34 = *(void *)&v3[v33];
              unint64_t v35 = v34 + 1;
              if (v34 == -1 || v35 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v36 = *(unsigned char *)(*(void *)&v3[*v7] + v34);
                *(void *)&v3[v33] = v35;
                v20 |= (unint64_t)(v36 & 0x7F) << v31;
                if (v36 < 0)
                {
                  v31 += 7;
                  BOOL v15 = v32++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_71;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_71:
            uint64_t v50 = 20;
            goto LABEL_80;
          case 4u:
            char v37 = 0;
            unsigned int v38 = 0;
            uint64_t v20 = 0;
            a1[36] |= 1u;
            while (2)
            {
              uint64_t v39 = *v4;
              uint64_t v40 = *(void *)&v3[v39];
              unint64_t v41 = v40 + 1;
              if (v40 == -1 || v41 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v42 = *(unsigned char *)(*(void *)&v3[*v7] + v40);
                *(void *)&v3[v39] = v41;
                v20 |= (unint64_t)(v42 & 0x7F) << v37;
                if (v42 < 0)
                {
                  v37 += 7;
                  BOOL v15 = v38++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_75;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_75:
            uint64_t v50 = 16;
            goto LABEL_80;
          case 5u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_84;
            }
            unint64_t v43 = objc_alloc_init(GEOCacheMissLoadError);
            if (!GEOCacheMissLoadErrorReadAllFrom((uint64_t)v43, v3))
            {

              goto LABEL_84;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "addErrors:", v43, 0, 0);

LABEL_81:
            if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
              goto LABEL_82;
            }
            break;
          case 6u:
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v20 = 0;
            a1[36] |= 4u;
            while (2)
            {
              uint64_t v46 = *v4;
              uint64_t v47 = *(void *)&v3[v46];
              unint64_t v48 = v47 + 1;
              if (v47 == -1 || v48 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v49 = *(unsigned char *)(*(void *)&v3[*v7] + v47);
                *(void *)&v3[v46] = v48;
                v20 |= (unint64_t)(v49 & 0x7F) << v44;
                if (v49 < 0)
                {
                  v44 += 7;
                  BOOL v15 = v45++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_79;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_79:
            uint64_t v50 = 24;
LABEL_80:
            *(_DWORD *)&a1[v50] = v20;
            goto LABEL_81;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_84;
            }
            goto LABEL_81;
        }
      }
    }
LABEL_82:
    BOOL v51 = v3[*v6] == 0;
  }
  else
  {
LABEL_84:
    BOOL v51 = 0;
  }
  objc_sync_exit(v3);

  return v51;
}

void sub_18A2061E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCacheMissReadFrom(unsigned char *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOCacheMissReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A206264(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCacheMissIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOCacheMissLoadErrorIsValid(a1)) {
            goto LABEL_69;
          }
          PBReaderRecallMark();
          continue;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v38 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_69:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v39 = *v2;
        uint64_t v40 = *(void *)&a1[v39];
        unint64_t v41 = v40 + 1;
        if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
          break;
        }
        int v42 = *(char *)(*(void *)&a1[*v5] + v40);
        *(void *)&a1[v39] = v41;
        if (v42 < 0)
        {
          BOOL v22 = v38++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_66;
      }
LABEL_65:
      a1[*v4] = 1;
LABEL_66:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

BOOL GEOCacheMissLoadErrorIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_42;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_42;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v24 = 0;
        while (1)
        {
          uint64_t v25 = *v2;
          uint64_t v26 = *(void *)&a1[v25];
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
            goto LABEL_39;
          }
          int v28 = *(char *)(*(void *)&a1[*v5] + v26);
          *(void *)&a1[v25] = v27;
          if (v28 < 0)
          {
            BOOL v23 = v24++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_41;
        }
      }
      if (v17 == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_44:
        BOOL v29 = 0;
        goto LABEL_43;
      }
LABEL_41:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_42;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_44;
    }
    unsigned int v18 = 0;
    while (1)
    {
      uint64_t v19 = *v2;
      uint64_t v20 = *(void *)&a1[v19];
      unint64_t v21 = v20 + 1;
      if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
        break;
      }
      int v22 = *(char *)(*(void *)&a1[*v5] + v20);
      *(void *)&a1[v19] = v21;
      if (v22 < 0)
      {
        BOOL v23 = v18++ > 8;
        if (!v23) {
          continue;
        }
      }
      goto LABEL_41;
    }
LABEL_39:
    a1[*v4] = 1;
    goto LABEL_41;
  }
LABEL_42:
  BOOL v29 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v29;
}

BOOL GEOCacheMissLoadErrorReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    BOOL v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v24 = *v4;
            uint64_t v25 = *(void *)&v3[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&v3[*v5]) {
              break;
            }
            char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v25);
            *(void *)&v3[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0) {
              goto LABEL_40;
            }
            v21 += 7;
            BOOL v15 = v22++ >= 9;
            if (v15)
            {
              LODWORD(v23) = 0;
              goto LABEL_42;
            }
          }
          v3[*v6] = 1;
LABEL_40:
          if (v3[*v6]) {
            LODWORD(v23) = 0;
          }
LABEL_42:
          uint64_t v34 = 16;
        }
        else
        {
          if (v18 != 2)
          {
            if (v18 == 1)
            {
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v19;
            }
            else if (!PBReaderSkipValueWithTag())
            {
              goto LABEL_50;
            }
            continue;
          }
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v23 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0) {
              goto LABEL_44;
            }
            v28 += 7;
            BOOL v15 = v29++ >= 9;
            if (v15)
            {
              LODWORD(v23) = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6]) {
            LODWORD(v23) = 0;
          }
LABEL_46:
          uint64_t v34 = 20;
        }
        *(_DWORD *)(a1 + v34) = v23;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_18A2079DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCacheMissLoadErrorReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOCacheMissLoadErrorReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A207A40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargeLocationDetailsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    BOOL v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 12) |= 4u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              char v27 = &OBJC_IVAR___GEOChargeLocationDetails__routeResumed;
              goto LABEL_49;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              uint64_t v21 = 0;
              char v27 = &OBJC_IVAR___GEOChargeLocationDetails__routeResumed;
              goto LABEL_51;
            }
          }
          char v27 = &OBJC_IVAR___GEOChargeLocationDetails__routeResumed;
LABEL_48:
          v3[*v6] = 1;
        }
        else if (v18 == 2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 12) |= 2u;
          while (1)
          {
            uint64_t v36 = *v4;
            uint64_t v37 = *(void *)&v3[v36];
            unint64_t v38 = v37 + 1;
            if (v37 == -1 || v38 > *(void *)&v3[*v5])
            {
              char v27 = &OBJC_IVAR___GEOChargeLocationDetails__routePaused;
              goto LABEL_48;
            }
            char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
            *(void *)&v3[v36] = v38;
            v21 |= (unint64_t)(v39 & 0x7F) << v34;
            if ((v39 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v26 = v35++ > 8;
            if (v26)
            {
              uint64_t v21 = 0;
              char v27 = &OBJC_IVAR___GEOChargeLocationDetails__routePaused;
              goto LABEL_51;
            }
          }
          char v27 = &OBJC_IVAR___GEOChargeLocationDetails__routePaused;
        }
        else
        {
          if (v18 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_58;
            }
            continue;
          }
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              char v27 = &OBJC_IVAR___GEOChargeLocationDetails__arrivedAtChargeLocation;
              goto LABEL_48;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              uint64_t v21 = 0;
              char v27 = &OBJC_IVAR___GEOChargeLocationDetails__arrivedAtChargeLocation;
              goto LABEL_51;
            }
          }
          char v27 = &OBJC_IVAR___GEOChargeLocationDetails__arrivedAtChargeLocation;
        }
LABEL_49:
        if (v3[*v6]) {
          uint64_t v21 = 0;
        }
LABEL_51:
        *(unsigned char *)(a1 + *v27) = v21 != 0;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_58:
    BOOL v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_18A208764(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargeLocationDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOChargeLocationDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2087C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargeLocationDetailsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_18A20910C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCollectionDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 72) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 72) >> 3) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  BOOL v12 = (v7 & 1 | v10) != 0;
  if (((v7 & 1 | v10) != 0) | v8 & 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  int v14 = (int *)MEMORY[0x1E4F940E8];
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6))
  {
LABEL_105:
    if (v12)
    {
      char v69 = 1;
      goto LABEL_107;
    }
    if (!v13) {
      goto LABEL_118;
    }
    while (1)
    {
      int v71 = *v13++;
      int v70 = v71;
      if (v71 == 1) {
        break;
      }
      if (v70 == 2)
      {
        char v72 = 8;
LABEL_117:
        *(unsigned char *)(a1 + 72) |= v72;
      }
      else if (!v70)
      {
        goto LABEL_118;
      }
    }
    char v72 = 4;
    goto LABEL_117;
  }
  if (v13) {
    BOOL v16 = (v7 & 1 | v10) != 0;
  }
  else {
    BOOL v16 = 1;
  }
  BOOL v75 = v16;
  unsigned int v17 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(v3 + *v15)) {
      goto LABEL_105;
    }
    char v18 = 0;
    unsigned int v19 = 0;
    unint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = *v14;
      uint64_t v22 = *(void *)(v3 + v21);
      unint64_t v23 = v22 + 1;
      if (v22 == -1 || v23 > *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v17) + v22);
      *(void *)(v3 + v2objc_destroyWeak(this + 1) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0) {
        goto LABEL_27;
      }
      v18 += 7;
      BOOL v25 = v19++ >= 9;
      if (v25)
      {
        unint64_t v20 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_27:
    int v26 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v20 = 0;
    }
LABEL_29:
    int v27 = v20 & 7;
    if (v26 || v27 == 4) {
      goto LABEL_105;
    }
    unint64_t v29 = v20 >> 3;
    BOOL v30 = v12;
    if (!v75)
    {
      unint64_t v31 = v13;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30 || (*(unsigned char *)(a1 + 72) & 4) != 0) {
          goto LABEL_77;
        }
        if (v27 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_122;
          }
          while (1)
          {
            unsigned int v35 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]))
            {
              PBReaderRecallMark();
              goto LABEL_104;
            }
            char v36 = 0;
            unsigned int v37 = 0;
            uint64_t v38 = 0;
            while (1)
            {
              uint64_t v39 = *v14;
              uint64_t v40 = *(void *)(v3 + v39);
              unint64_t v41 = v40 + 1;
              if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
                break;
              }
              char v42 = *(unsigned char *)(*(void *)(v3 + *v17) + v40);
              *(void *)(v3 + v39) = v41;
              v38 |= (unint64_t)(v42 & 0x7F) << v36;
              if (v42 < 0)
              {
                v36 += 7;
                BOOL v25 = v37++ >= 9;
                if (!v25) {
                  continue;
                }
              }
              goto LABEL_55;
            }
            *(unsigned char *)(v3 + *v35) = 1;
LABEL_55:
            PBRepeatedUInt64Add();
          }
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v64 = 0;
        while (1)
        {
          uint64_t v65 = *v14;
          uint64_t v66 = *(void *)(v3 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(v3 + *v6)) {
            break;
          }
          char v68 = *(unsigned char *)(*(void *)(v3 + *v17) + v66);
          *(void *)(v3 + v65) = v67;
          v64 |= (unint64_t)(v68 & 0x7F) << v62;
          if (v68 < 0)
          {
            v62 += 7;
            BOOL v25 = v63++ >= 9;
            if (!v25) {
              continue;
            }
          }
          goto LABEL_103;
        }
        *(unsigned char *)(v3 + *v15) = 1;
LABEL_103:
        PBRepeatedUInt64Add();
        goto LABEL_104;
      case 2:
        if (!v30) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 72) & 8) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          char v44 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v43;

          BOOL v15 = (int *)MEMORY[0x1E4F940C8];
          --v9;
LABEL_78:
          if (v9) {
            int v61 = 1;
          }
          else {
            int v61 = v12;
          }
          if (v61 != 1 || *(void *)(v3 + *v14) >= *(void *)(v3 + *v6)) {
            goto LABEL_105;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          v9 += *(unsigned __int8 *)(a1 + 72) << 28 >> 31;
LABEL_104:
          BOOL v15 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_78;
        }
LABEL_122:
        char v69 = 0;
        BOOL v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_107:
        *(unsigned char *)(a1 + 72) |= 4u;
        *(unsigned char *)(a1 + 72) |= 8u;
        if (v69)
        {
LABEL_118:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_119;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if (!v12) {
          return v3;
        }
LABEL_119:
        long long v73 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_77;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        while (2)
        {
          uint64_t v48 = *v14;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v17) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v25 = v46++ >= 9;
              if (v25)
              {
                uint64_t v47 = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          uint64_t v47 = 0;
        }
LABEL_87:
        *(void *)(a1 + 48) = v47;
        goto LABEL_78;
      case 5:
        if (v8)
        {
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          *(unsigned char *)(a1 + 72) |= 2u;
          while (1)
          {
            uint64_t v56 = *v14;
            uint64_t v57 = *(void *)(v3 + v56);
            unint64_t v58 = v57 + 1;
            if (v57 == -1 || v58 > *(void *)(v3 + *v6)) {
              break;
            }
            char v59 = *(unsigned char *)(*(void *)(v3 + *v17) + v57);
            *(void *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if ((v59 & 0x80) == 0) {
              goto LABEL_89;
            }
            v53 += 7;
            BOOL v25 = v54++ >= 9;
            if (v25)
            {
              uint64_t v55 = 0;
              goto LABEL_91;
            }
          }
          *(unsigned char *)(v3 + *v15) = 1;
LABEL_89:
          if (*(unsigned char *)(v3 + *v15)) {
            uint64_t v55 = 0;
          }
LABEL_91:
          *(unsigned char *)(a1 + 68) = v55 != 0;
        }
        else
        {
LABEL_77:
          char v60 = PBReaderSkipValueWithTag();
          BOOL v15 = (int *)MEMORY[0x1E4F940C8];
          if ((v60 & 1) == 0)
          {
LABEL_121:
            char v69 = 0;
            goto LABEL_107;
          }
        }
        goto LABEL_78;
      default:
        int v52 = PBReaderSkipValueWithTag();
        BOOL v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v52) {
          goto LABEL_121;
        }
        goto LABEL_78;
    }
  }
}

void sub_18A209B90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A20A2E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCollectionDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOCollectionDetailsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOCollectionDetailsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOCollectionDetailsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOCollectionDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18A20A46C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCollectionDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOCollectionDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A20A4D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCollectionDetailsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_61;
            }
            while (1)
            {
LABEL_48:
              if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || (unsigned int v33 = a1[*v4], a1[*v4]))
              {
                PBReaderRecallMark();
                goto LABEL_58;
              }
              while (1)
              {
                uint64_t v34 = *v2;
                uint64_t v35 = *(void *)&a1[v34];
                unint64_t v36 = v35 + 1;
                if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
                  break;
                }
                int v37 = *(char *)(*(void *)&a1[*v5] + v35);
                *(void *)&a1[v34] = v36;
                if (v37 < 0)
                {
                  BOOL v13 = v33++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_48;
              }
              a1[*v4] = 1;
            }
          }
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_46;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              unsigned int v21 = v15++;
              if (v21 <= 8) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 2u:
          if (v15 == 2) {
            goto LABEL_36;
          }
          goto LABEL_61;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_46;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v27 = v22++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v28 = 0;
          break;
        default:
LABEL_36:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_61:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v27 = v28++ > 8;
          if (!v27) {
            continue;
          }
        }
        goto LABEL_58;
      }
LABEL_46:
      a1[*v4] = 1;
LABEL_58:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

void sub_18A20AA4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCollectionDetailsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 72) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_18A20ADDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODailyUseSummaryUseEventReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    BOOL v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 4u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_52;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_54;
              }
            }
            v3[*v6] = 1;
LABEL_52:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_54:
            uint64_t v46 = 24;
            goto LABEL_63;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (2)
            {
              uint64_t v27 = *v4;
              uint64_t v28 = *(void *)&v3[v27];
              unint64_t v29 = v28 + 1;
              if (v28 == -1 || v29 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
                *(void *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_58;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_58:
            uint64_t v46 = 16;
            goto LABEL_63;
          case 3u:
            char v31 = 0;
            unsigned int v32 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 2u;
            while (2)
            {
              uint64_t v33 = *v4;
              uint64_t v34 = *(void *)&v3[v33];
              unint64_t v35 = v34 + 1;
              if (v34 == -1 || v35 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v36 = *(unsigned char *)(*(void *)&v3[*v7] + v34);
                *(void *)&v3[v33] = v35;
                v20 |= (unint64_t)(v36 & 0x7F) << v31;
                if (v36 < 0)
                {
                  v31 += 7;
                  BOOL v15 = v32++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_62;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_62:
            uint64_t v46 = 20;
LABEL_63:
            *(_DWORD *)(a1 + v46) = v20;
            continue;
          case 4u:
            char v37 = 0;
            unsigned int v38 = 0;
            uint64_t v39 = 0;
            *(unsigned char *)(a1 + 32) |= 8u;
            break;
          case 5u:
            uint64_t v44 = PBReaderReadString();
            char v45 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v44;

            continue;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_70;
            }
            continue;
        }
        while (1)
        {
          uint64_t v40 = *v4;
          uint64_t v41 = *(void *)&v3[v40];
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)&v3[*v5]) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)&v3[*v7] + v41);
          *(void *)&v3[v40] = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_65;
          }
          v37 += 7;
          BOOL v15 = v38++ >= 9;
          if (v15)
          {
            uint64_t v39 = 0;
            goto LABEL_67;
          }
        }
        v3[*v6] = 1;
LABEL_65:
        if (v3[*v6]) {
          uint64_t v39 = 0;
        }
LABEL_67:
        *(unsigned char *)(a1 + 28) = v39 != 0;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v47 = v3[*v6] == 0;
  }
  else
  {
LABEL_70:
    BOOL v47 = 0;
  }
  objc_sync_exit(v3);

  return v47;
}

void sub_18A211B98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODailyUseSummaryUseEventReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEODailyUseSummaryUseEventReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A211C10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODailyUseSummaryUseEventIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_51;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_51;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_51;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v33 = 0;
          break;
        case 5u:
          if (v15 == 2) {
            goto LABEL_53;
          }
          goto LABEL_57;
        default:
LABEL_53:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          BOOL v38 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        uint64_t v34 = *v2;
        uint64_t v35 = *(void *)&a1[v34];
        unint64_t v36 = v35 + 1;
        if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
          break;
        }
        int v37 = *(char *)(*(void *)&a1[*v5] + v35);
        *(void *)&a1[v34] = v36;
        if (v37 < 0)
        {
          BOOL v22 = v33++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_51:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v38 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v38;
}

BOOL GEODeviceSyncDataReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    BOOL v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          *(unsigned char *)(a1 + 32) |= 2u;
          uint64_t v18 = *v4;
          unint64_t v19 = *(void *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
            *(void *)&v3[v18] = v19 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v20 = 0;
          }
          *(void *)(a1 + 24) = v20;
        }
        else if ((v10 >> 3) == 1)
        {
          if (!PBReaderPlaceMark() || (GEOSessionIDReadAllFrom((void *)(a1 + 8), (uint64_t)v3) & 1) == 0) {
            goto LABEL_33;
          }
          PBReaderRecallMark();
          *(unsigned char *)(a1 + 32) |= 1u;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_33;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_33:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18A212AB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODeviceSyncDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEODeviceSyncDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A212B1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODeviceSyncDataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v16 != 1) {
          goto LABEL_34;
        }
        uint64_t v18 = *v2;
        unint64_t v19 = *(void *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v20 = v19 + 8, v20 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v18] = v20;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOSessionIDIsValid(a1))
        {
LABEL_34:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_34;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v21;
}

BOOL GEODodgeballDetailsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEODurationInNavigationModeReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    BOOL v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          *(unsigned char *)(a1 + 20) |= 1u;
          uint64_t v25 = *v4;
          unint64_t v26 = *(void *)&v3[v25];
          if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v27 = *(void *)(*(void *)&v3[*v7] + v26);
            *(void *)&v3[v25] = v26 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v27 = 0;
          }
          *(void *)(a1 + 8) = v27;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_34;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_41;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v28 = v3[*v6] == 0;
  }
  else
  {
LABEL_41:
    BOOL v28 = 0;
  }
  objc_sync_exit(v3);

  return v28;
}

void sub_18A214130(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODurationInNavigationModeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEODurationInNavigationModeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A214194(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODynamicContextHyperlinkDetailsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    BOOL v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          uint64_t v25 = PBReaderReadString();
          unint64_t v26 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18A214928(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODynamicContextHyperlinkDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEODynamicContextHyperlinkDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A21498C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOElementDetailsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    BOOL v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 4u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_58;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_60;
              }
            }
            v3[*v6] = 1;
LABEL_58:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_60:
            uint64_t v51 = 20;
            goto LABEL_73;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (2)
            {
              uint64_t v28 = *v4;
              uint64_t v29 = *(void *)&v3[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
                *(void *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    uint64_t v27 = 0;
                    goto LABEL_64;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v27 = 0;
            }
LABEL_64:
            *(void *)(a1 + 8) = v27;
            continue;
          case 3u:
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 8u;
            while (2)
            {
              uint64_t v34 = *v4;
              uint64_t v35 = *(void *)&v3[v34];
              unint64_t v36 = v35 + 1;
              if (v35 == -1 || v36 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v37 = *(unsigned char *)(*(void *)&v3[*v7] + v35);
                *(void *)&v3[v34] = v36;
                v20 |= (unint64_t)(v37 & 0x7F) << v32;
                if (v37 < 0)
                {
                  v32 += 7;
                  BOOL v15 = v33++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_68;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_68:
            uint64_t v51 = 24;
            goto LABEL_73;
          case 4u:
            char v38 = 0;
            unsigned int v39 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 2u;
            while (2)
            {
              uint64_t v40 = *v4;
              uint64_t v41 = *(void *)&v3[v40];
              unint64_t v42 = v41 + 1;
              if (v41 == -1 || v42 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v43 = *(unsigned char *)(*(void *)&v3[*v7] + v41);
                *(void *)&v3[v40] = v42;
                v20 |= (unint64_t)(v43 & 0x7F) << v38;
                if (v43 < 0)
                {
                  v38 += 7;
                  BOOL v15 = v39++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_72;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_72:
            uint64_t v51 = 16;
LABEL_73:
            *(_DWORD *)(a1 + v5objc_destroyWeak(this + 1) = v20;
            continue;
          case 5u:
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v46 = 0;
            *(unsigned char *)(a1 + 32) |= 0x10u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_80;
            }
            continue;
        }
        while (1)
        {
          uint64_t v47 = *v4;
          uint64_t v48 = *(void *)&v3[v47];
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)&v3[*v5]) {
            break;
          }
          char v50 = *(unsigned char *)(*(void *)&v3[*v7] + v48);
          *(void *)&v3[v47] = v49;
          v46 |= (unint64_t)(v50 & 0x7F) << v44;
          if ((v50 & 0x80) == 0) {
            goto LABEL_75;
          }
          v44 += 7;
          BOOL v15 = v45++ >= 9;
          if (v15)
          {
            uint64_t v46 = 0;
            goto LABEL_77;
          }
        }
        v3[*v6] = 1;
LABEL_75:
        if (v3[*v6]) {
          uint64_t v46 = 0;
        }
LABEL_77:
        *(unsigned char *)(a1 + 28) = v46 != 0;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v52 = v3[*v6] == 0;
  }
  else
  {
LABEL_80:
    BOOL v52 = 0;
  }
  objc_sync_exit(v3);

  return v52;
}

void sub_18A215F30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOElementDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOElementDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A215FA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOElementDetailsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v21 = v32++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v37 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_65:
          BOOL v42 = 0;
          goto LABEL_64;
      }
      while (1)
      {
        uint64_t v38 = *v2;
        uint64_t v39 = *(void *)&a1[v38];
        unint64_t v40 = v39 + 1;
        if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
          break;
        }
        int v41 = *(char *)(*(void *)&a1[*v5] + v39);
        *(void *)&a1[v38] = v40;
        if (v41 < 0)
        {
          BOOL v21 = v37++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_62;
      }
LABEL_61:
      a1[*v4] = 1;
LABEL_62:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v42 = a1[*v4] == 0;
LABEL_64:
  PBReaderRecallMark();
  return v42;
}

BOOL GEOImpressionObjectIdReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    BOOL v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              int v26 = &OBJC_IVAR___GEOImpressionObjectId__low;
              goto LABEL_40;
            }
            v27 += 7;
            BOOL v25 = v28++ > 8;
            if (v25)
            {
              uint64_t v20 = 0;
              int v26 = &OBJC_IVAR___GEOImpressionObjectId__low;
              goto LABEL_42;
            }
          }
          int v26 = &OBJC_IVAR___GEOImpressionObjectId__low;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_48;
            }
            continue;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              int v26 = &OBJC_IVAR___GEOImpressionObjectId__high;
              goto LABEL_39;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              uint64_t v20 = 0;
              int v26 = &OBJC_IVAR___GEOImpressionObjectId__high;
              goto LABEL_42;
            }
          }
          int v26 = &OBJC_IVAR___GEOImpressionObjectId__high;
        }
LABEL_40:
        if (v3[*v6]) {
          uint64_t v20 = 0;
        }
LABEL_42:
        *(void *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    BOOL v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_18A216D6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOImpressionObjectIdReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOImpressionObjectIdReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A216DD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOImpressionObjectIdIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_18A2178B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A217A28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A218AB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A218C24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A218D94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A218F08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2190AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21921C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21938C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2194FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A219670(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2197E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A219958(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A219ACC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A219C40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A219DB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A219F28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21A098(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21A208(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21A37C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21A4E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21A65C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21A7CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21A93C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21AAD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21AC4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21ADBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21AF30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21B0A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21B214(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21B388(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21B4FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21B670(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21B7E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21B954(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21BC40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21BDB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21C03C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21C258(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21C3CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21C5E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21C724(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21C898(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21CA0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21CB80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21CCF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21CE68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21CFDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A21D148(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgEventCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = a1[22];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  [a1[2] readAll:1];
  [a1[61] readAll:1];
  [a1[48] readAll:1];
  [a1[55] readAll:1];
  [a1[37] readAll:1];
  [a1[32] readAll:1];
  [a1[11] readAll:1];
  [a1[58] readAll:1];
  [a1[56] readAll:1];
  [a1[57] readAll:1];
  [a1[29] readAll:1];
  [a1[20] readAll:1];
  [a1[43] readAll:1];
  [a1[41] readAll:1];
  [a1[24] readAll:1];
  [a1[45] readAll:1];
  [a1[44] readAll:1];
  [a1[50] readAll:1];
  [a1[49] readAll:1];
  [a1[16] readAll:1];
  [a1[51] readAll:1];
  [a1[5] readAll:1];
  [a1[42] readAll:1];
  [a1[4] readAll:1];
  [a1[6] readAll:1];
  [a1[63] readAll:1];
  [a1[34] readAll:1];
  [a1[54] readAll:1];
  [a1[17] readAll:1];
  [a1[13] readAll:1];
  [a1[53] readAll:1];
  [a1[23] readAll:1];
  [a1[39] readAll:1];
  [a1[30] readAll:1];
  [a1[59] readAll:1];
  [a1[12] readAll:1];
  [a1[14] readAll:1];
  [a1[15] readAll:1];
  [a1[7] readAll:1];
  [a1[8] readAll:1];
  [a1[25] readAll:1];
  [a1[18] readAll:1];
  [a1[62] readAll:1];
  [a1[21] readAll:1];
  [a1[9] readAll:1];
  [a1[40] readAll:1];
  [a1[38] readAll:1];
  [a1[35] readAll:1];
  [a1[52] readAll:1];
  [a1[3] readAll:1];
  [a1[33] readAll:1];
  [a1[19] readAll:1];
  [a1[47] readAll:1];
  [a1[36] readAll:1];
  [a1[10] readAll:1];
  [a1[28] readAll:1];
  [a1[31] readAll:1];
  [a1[46] readAll:1];
  return [a1[26] readAll:1];
}

unint64_t GEOLogMsgEventReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 516))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 520));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 512) = [v8 position];
  *(_DWORD *)(a1 + 516) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOLogMsgEventReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOLogMsgEventReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgEventCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 520));
  return Specified;
}

void sub_18A21DA44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A21DAA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_284;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        goto LABEL_284;
      }
      unint64_t v18 = v8 >> 3;
      if ((int)(v8 >> 3) > 99)
      {
        switch((int)v18)
        {
          case 100:
            if ((v8 & 7) != 0) {
              goto LABEL_285;
            }
            unsigned int v19 = 0;
            break;
          case 101:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventUserActionIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 102:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventStateTimingIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 103:
          case 107:
          case 112:
          case 122:
          case 128:
          case 130:
            goto LABEL_38;
          case 104:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventTileSetStateIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 105:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventPlaceDataCacheIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 106:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventNetworkIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 108:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventDirectionsIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 109:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventTransitAppLaunchIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 110:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventTimeToLeaveHypothesisIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 111:
            if (v16 != 2
              || !PBReaderPlaceMark()
              || !GEOLogMsgEventTimeToLeaveInitialTravelTimeIsValid(a1))
            {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 113:
            if (v16 != 2
              || !PBReaderPlaceMark()
              || !GEOLogMsgEventMapsWidgetsInteractionSessionIsValid(a1))
            {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 114:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventListInteractionSessionIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 115:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventRefineSearchSessionIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 116:
            if (v16 != 2
              || !PBReaderPlaceMark()
              || !GEOLogMsgEventProactiveSuggestionInteractionSessionIsValid(a1))
            {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 117:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventMapLaunchIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 118:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventRideBookingSessionIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 119:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventRideBookedSessionIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 120:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventTableBookingSessionIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 121:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventTableBookedSessionIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 123:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventFullNavTraceIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 124:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventTelemetricIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 125:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventClientACSuggestionsIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 126:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventRealtimeTrafficProbeIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 127:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventBatchTrafficProbeIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 129:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventCommuteWindowIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 131:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventWifiConnectionQualityProbeIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 132:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventParkedCarIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 133:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventTileCacheAnalyticIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 134:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventGridDurationIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 135:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventDisplayAnalyticIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 136:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventThrottleIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 137:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventMapKitCountsIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 138:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventPredExTrainingDataIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 139:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventMarcoLiteUsageIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 140:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventTripDepartureFeedbackIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 141:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventDirectionsRequestDetailsIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 142:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventEVRoutingVehicleDetailsIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 143:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventEVTripIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 144:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventCuratedCollectionStatsIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 145:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventCuratedCollectionUsageIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 146:
            if (v16 != 2
              || !PBReaderPlaceMark()
              || !GEOLogMsgEventMapsDeviceSettingsIsValid((unsigned __int8 *)a1))
            {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 147:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventHardStopIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 148:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventVLFUsageIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 149:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventLogDiscardIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 150:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventDailyUseSummaryIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 151:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventPressureDataIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 152:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventPOIBusynessDataIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 153:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventPeriodicSettingsSummaryIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 154:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventThermalPressureIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 155:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventARSessionUsageIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 156:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventNetworkSelectionHarvestIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 157:
            if (v16 != 2
              || !PBReaderPlaceMark()
              || !GEOLogMsgEventImpressionEventIsValid((unsigned __int8 *)a1))
            {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 158:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventShowcaseSuppressionIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 159:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventPlaceCacheLookupIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 160:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventDeviceSyncStatusIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 161:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventMapsInteractionIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 162:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventNetworkEventSummaryIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 163:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventServiceMetadataIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 164:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventMapsEngagementIsValid(a1)) {
              goto LABEL_285;
            }
            goto LABEL_279;
          default:
            if (v18 != 2000) {
              goto LABEL_38;
            }
            if (v16 != 1) {
              goto LABEL_285;
            }
            uint64_t v25 = *v2;
            unint64_t v26 = *(void *)&a1[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v27 = v26 + 8, v27 <= *(void *)&a1[*v3])) {
              *(void *)&a1[v25] = v27;
            }
            else {
              a1[v14] = 1;
            }
            goto LABEL_280;
        }
        while (1)
        {
          uint64_t v20 = *v2;
          uint64_t v21 = *(void *)&a1[v20];
          unint64_t v22 = v21 + 1;
          if (v21 == -1 || v22 > *(void *)&a1[*v3]) {
            break;
          }
          int v23 = *(char *)(*(void *)&a1[*v5] + v21);
          *(void *)&a1[v20] = v22;
          if (v23 < 0 && v19++ <= 8) {
            continue;
          }
          goto LABEL_280;
        }
        a1[*v4] = 1;
        goto LABEL_280;
      }
      if (v18 == 1) {
        break;
      }
      if (v18 == 2)
      {
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventIdIsValid(a1)) {
          goto LABEL_285;
        }
LABEL_279:
        PBReaderRecallMark();
        goto LABEL_280;
      }
      if (v18 == 3 && v16 != 2) {
        goto LABEL_285;
      }
LABEL_38:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_285;
      }
LABEL_280:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_284;
      }
    }
    if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateIsValid(a1))
    {
LABEL_285:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_279;
  }
LABEL_284:
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOLogMsgStateIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((int)(v8 >> 3) > 600)
      {
        switch((int)v17)
        {
          case 702:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStatePlaceCardIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 703:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateRouteIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 704:
          case 711:
          case 712:
            goto LABEL_50;
          case 705:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapsServerIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 706:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateTileSetIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 707:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStatePlaceRequestIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 708:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateNavigationIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 709:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapRestoreIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 710:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateSuggestionsIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 713:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateOfflineIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 714:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateSummaryLookAroundLogIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 715:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateDetailLookAroundLogIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 716:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateLookAroundViewIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 717:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMuninResourceIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 718:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapLaunchIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 719:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateCuratedCollectionIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 720:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateUGCPhotoIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 721:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateDirectionsDetailIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 722:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMarketIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 723:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateRoutingSettingsIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 724:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapsFeaturesIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 725:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapsUserSettingsIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 726:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateARPPhotoSubmissionIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 727:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateARPRatingSubmissionIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 728:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateARPRatingPhotoSubmissionIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 729:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapsPlaceIdsIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 730:
            if (v15 != 2
              || !PBReaderPlaceMark()
              || !GEOLogMsgStatePlaceCardRapIsValid((unsigned __int8 *)a1))
            {
              goto LABEL_240;
            }
            break;
          case 731:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateOfflineDownloadIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          default:
            if (v17 == 601)
            {
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateUserSessionIsValid(a1))
              {
LABEL_240:
                PBReaderRecallMark();
                return 0;
              }
            }
            else
            {
              if (v17 != 602)
              {
LABEL_50:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_240;
                }
                continue;
              }
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateExperimentsIsValid(a1)) {
                goto LABEL_240;
              }
            }
            break;
        }
      }
      else
      {
        if ((int)v17 > 300)
        {
          switch((int)v17)
          {
            case 501:
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapViewIsValid(a1)) {
                goto LABEL_240;
              }
              goto LABEL_235;
            case 502:
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapViewLocationIsValid(a1)) {
                goto LABEL_240;
              }
              goto LABEL_235;
            case 503:
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateTransitIsValid(a1)) {
                goto LABEL_240;
              }
              goto LABEL_235;
            case 504:
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapSettingsIsValid(a1)) {
                goto LABEL_240;
              }
              goto LABEL_235;
            case 505:
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapUIIsValid(a1)) {
                goto LABEL_240;
              }
              goto LABEL_235;
            case 506:
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapUIShownIsValid(a1)) {
                goto LABEL_240;
              }
              goto LABEL_235;
            default:
              if (v17 != 301) {
                goto LABEL_50;
              }
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateApplicationIdentifierIsValid(a1)) {
                goto LABEL_240;
              }
              goto LABEL_235;
          }
        }
        switch((int)v17)
        {
          case 1:
            if (v15 == 2) {
              goto LABEL_50;
            }
            goto LABEL_240;
          case 2:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateUserIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 3:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateAccountIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 4:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateRAPIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 5:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStatePlaceSummaryLayoutIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 6:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateTransitStepIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 7:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateNearbyTransitIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 8:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateSearchResultsIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 9:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateElementImpressionIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 10:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateImpressionObjectIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 11:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateTapEventIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 12:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateActionButtonDetailsIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          case 13:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateRoutingWaypointsIsValid(a1)) {
              goto LABEL_240;
            }
            break;
          default:
            if (v17 == 99)
            {
              if ((v8 & 7) != 0) {
                goto LABEL_240;
              }
              unsigned int v18 = 0;
              while (1)
              {
                uint64_t v19 = *v2;
                uint64_t v20 = *(void *)&a1[v19];
                unint64_t v21 = v20 + 1;
                if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
                  break;
                }
                int v22 = *(char *)(*(void *)&a1[*v5] + v20);
                *(void *)&a1[v19] = v21;
                if (v22 < 0 && v18++ <= 8) {
                  continue;
                }
                goto LABEL_236;
              }
              a1[*v4] = 1;
              continue;
            }
            if (v17 != 201) {
              goto LABEL_50;
            }
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateDeviceIdentifierIsValid(a1)) {
              goto LABEL_240;
            }
            break;
        }
      }
LABEL_235:
      PBReaderRecallMark();
LABEL_236:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEOLogMsgEventIdIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgEventUserActionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_57;
          }
          goto LABEL_53;
        case 2u:
          if (v15 == 2) {
            goto LABEL_53;
          }
          goto LABEL_57;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_51;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_51;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventUserActionModuleInfoIsValid(a1)) {
            goto LABEL_57;
          }
          PBReaderRecallMark();
          continue;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v28 = 0;
          break;
        case 7u:
          if (v15 == 2) {
            goto LABEL_53;
          }
          goto LABEL_57;
        default:
LABEL_53:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_51:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgEventStateTimingIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v16 != 1) {
          goto LABEL_34;
        }
        uint64_t v18 = *v2;
        unint64_t v19 = *(void *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v20 = v19 + 8, v20 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v18] = v20;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOStateTransitionFeedbackIsValid(a1))
        {
LABEL_34:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_34;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v21;
}

BOOL GEOLogMsgEventTileSetStateIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 3u:
        case 4u:
          if (v16 != 1) {
            goto LABEL_38;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_34;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_34;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_38;
          }
          unsigned int v21 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_38:
          BOOL v27 = 0;
          goto LABEL_37;
      }
      while (1)
      {
        uint64_t v22 = *v2;
        uint64_t v23 = *(void *)&a1[v22];
        unint64_t v24 = v23 + 1;
        if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
          break;
        }
        int v25 = *(char *)(*(void *)&a1[*v5] + v23);
        *(void *)&a1[v22] = v24;
        if (v25 < 0 && v21++ <= 8) {
          continue;
        }
        goto LABEL_35;
      }
      uint64_t v14 = *v4;
LABEL_34:
      a1[v14] = 1;
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
LABEL_37:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLogMsgEventPlaceDataCacheIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventNetworkIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_164;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_166;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_164;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_166;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_164;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_166;
          }
        case 4u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
        case 0xDu:
        case 0xEu:
        case 0x1Bu:
        case 0x1Cu:
        case 0x1Du:
        case 0x1Eu:
        case 0x1Fu:
        case 0x20u:
        case 0x21u:
        case 0x22u:
        case 0x23u:
        case 0x24u:
        case 0x25u:
        case 0x26u:
        case 0x27u:
        case 0x28u:
        case 0x29u:
        case 0x2Au:
        case 0x2Bu:
        case 0x2Cu:
        case 0x2Du:
        case 0x2Eu:
        case 0x2Fu:
        case 0x30u:
        case 0x31u:
          goto LABEL_154;
        case 5u:
          if (v16 == 2) {
            goto LABEL_154;
          }
          goto LABEL_169;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_164;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v26 = v37++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_166;
          }
        case 7u:
          if (v16 == 2) {
            goto LABEL_154;
          }
          goto LABEL_169;
        case 8u:
          if (v16 == 2) {
            goto LABEL_154;
          }
          goto LABEL_169;
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_164;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v26 = v42++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_166;
          }
        case 0x10u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v2;
            uint64_t v49 = *(void *)&a1[v48];
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
              goto LABEL_164;
            }
            int v51 = *(char *)(*(void *)&a1[*v5] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v26 = v47++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_166;
          }
        case 0x11u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v52 = 0;
          while (1)
          {
            uint64_t v53 = *v2;
            uint64_t v54 = *(void *)&a1[v53];
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
              goto LABEL_164;
            }
            int v56 = *(char *)(*(void *)&a1[*v5] + v54);
            *(void *)&a1[v53] = v55;
            if (v56 < 0)
            {
              BOOL v26 = v52++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_166;
          }
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v57 = 0;
          while (1)
          {
            uint64_t v58 = *v2;
            uint64_t v59 = *(void *)&a1[v58];
            unint64_t v60 = v59 + 1;
            if (v59 == -1 || v60 > *(void *)&a1[*v3]) {
              goto LABEL_164;
            }
            int v61 = *(char *)(*(void *)&a1[*v5] + v59);
            *(void *)&a1[v58] = v60;
            if (v61 < 0)
            {
              BOOL v26 = v57++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_166;
          }
        case 0x13u:
        case 0x14u:
          if (v16 != 1) {
            goto LABEL_169;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_165;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_165;
          }
          *(void *)&a1[v18] = v20;
          goto LABEL_166;
        case 0x15u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v62 = 0;
          while (1)
          {
            uint64_t v63 = *v2;
            uint64_t v64 = *(void *)&a1[v63];
            unint64_t v65 = v64 + 1;
            if (v64 == -1 || v65 > *(void *)&a1[*v3]) {
              goto LABEL_164;
            }
            int v66 = *(char *)(*(void *)&a1[*v5] + v64);
            *(void *)&a1[v63] = v65;
            if (v66 < 0)
            {
              BOOL v26 = v62++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_166;
          }
        case 0x16u:
          if (v16 == 2) {
            goto LABEL_154;
          }
          goto LABEL_169;
        case 0x17u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v67 = 0;
          while (1)
          {
            uint64_t v68 = *v2;
            uint64_t v69 = *(void *)&a1[v68];
            unint64_t v70 = v69 + 1;
            if (v69 == -1 || v70 > *(void *)&a1[*v3]) {
              goto LABEL_164;
            }
            int v71 = *(char *)(*(void *)&a1[*v5] + v69);
            *(void *)&a1[v68] = v70;
            if (v71 < 0)
            {
              BOOL v26 = v67++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_166;
          }
        case 0x18u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v72 = 0;
          while (1)
          {
            uint64_t v73 = *v2;
            uint64_t v74 = *(void *)&a1[v73];
            unint64_t v75 = v74 + 1;
            if (v74 == -1 || v75 > *(void *)&a1[*v3]) {
              goto LABEL_164;
            }
            int v76 = *(char *)(*(void *)&a1[*v5] + v74);
            *(void *)&a1[v73] = v75;
            if (v76 < 0)
            {
              BOOL v26 = v72++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_166;
          }
        case 0x19u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v77 = 0;
          while (1)
          {
            uint64_t v78 = *v2;
            uint64_t v79 = *(void *)&a1[v78];
            unint64_t v80 = v79 + 1;
            if (v79 == -1 || v80 > *(void *)&a1[*v3]) {
              goto LABEL_164;
            }
            int v81 = *(char *)(*(void *)&a1[*v5] + v79);
            *(void *)&a1[v78] = v80;
            if (v81 < 0)
            {
              BOOL v26 = v77++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_166;
          }
        case 0x1Au:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v82 = 0;
          while (1)
          {
            uint64_t v83 = *v2;
            uint64_t v84 = *(void *)&a1[v83];
            unint64_t v85 = v84 + 1;
            if (v84 == -1 || v85 > *(void *)&a1[*v3]) {
              goto LABEL_164;
            }
            int v86 = *(char *)(*(void *)&a1[*v5] + v84);
            *(void *)&a1[v83] = v85;
            if (v86 < 0)
            {
              BOOL v26 = v82++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_166;
          }
        case 0x32u:
          if (v16 == 2) {
            goto LABEL_154;
          }
          goto LABEL_169;
        case 0x33u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v87 = 0;
          while (1)
          {
            uint64_t v88 = *v2;
            uint64_t v89 = *(void *)&a1[v88];
            unint64_t v90 = v89 + 1;
            if (v89 == -1 || v90 > *(void *)&a1[*v3]) {
              goto LABEL_164;
            }
            int v91 = *(char *)(*(void *)&a1[*v5] + v89);
            *(void *)&a1[v88] = v90;
            if (v91 < 0)
            {
              BOOL v26 = v87++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_166;
          }
        case 0x34u:
          if (v16 == 2) {
            goto LABEL_154;
          }
          goto LABEL_169;
        case 0x35u:
          if (v16 == 2) {
            goto LABEL_154;
          }
          goto LABEL_169;
        case 0x36u:
          if ((v8 & 7) != 0) {
            goto LABEL_169;
          }
          unsigned int v92 = 0;
          while (1)
          {
            uint64_t v93 = *v2;
            uint64_t v94 = *(void *)&a1[v93];
            unint64_t v95 = v94 + 1;
            if (v94 == -1 || v95 > *(void *)&a1[*v3]) {
              break;
            }
            int v96 = *(char *)(*(void *)&a1[*v5] + v94);
            *(void *)&a1[v93] = v95;
            if (v96 < 0)
            {
              BOOL v26 = v92++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_166;
          }
LABEL_164:
          uint64_t v14 = *v4;
LABEL_165:
          a1[v14] = 1;
          goto LABEL_166;
        default:
          if ((v8 >> 3) == 100)
          {
            if (v16 != 2 || !PBReaderPlaceMark() || !GEONetworkSessionTaskTransactionMetricsIsValid(a1))
            {
LABEL_169:
              PBReaderRecallMark();
              return 0;
            }
            PBReaderRecallMark();
          }
          else
          {
LABEL_154:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_169;
            }
          }
LABEL_166:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_167;
          }
          break;
      }
    }
  }
LABEL_167:
  BOOL v97 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v97;
}

BOOL GEOLogMsgEventDirectionsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 2 && PBReaderPlaceMark() && GEODirectionsFeedbackIsValid(a1)) {
            goto LABEL_178;
          }
          goto LABEL_317;
        case 2u:
        case 0x29u:
        case 0x2Du:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1)) {
            goto LABEL_317;
          }
          goto LABEL_178;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEONavigationAudioFeedbackIsValid(a1)) {
            goto LABEL_317;
          }
          goto LABEL_178;
        case 5u:
        case 0x2Au:
          if (v16 != 1) {
            goto LABEL_317;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_313;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_313;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSessionIDIsValid(a1)) {
            goto LABEL_317;
          }
          goto LABEL_178;
        case 7u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEODurationInNavigationModeIsValid(a1)) {
            goto LABEL_317;
          }
          goto LABEL_178;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v26 = v37++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v26 = v42++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v2;
            uint64_t v49 = *(void *)&a1[v48];
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v51 = *(char *)(*(void *)&a1[*v5] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v26 = v47++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v52 = 0;
          while (1)
          {
            uint64_t v53 = *v2;
            uint64_t v54 = *(void *)&a1[v53];
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v56 = *(char *)(*(void *)&a1[*v5] + v54);
            *(void *)&a1[v53] = v55;
            if (v56 < 0)
            {
              BOOL v26 = v52++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v57 = 0;
          while (1)
          {
            uint64_t v58 = *v2;
            uint64_t v59 = *(void *)&a1[v58];
            unint64_t v60 = v59 + 1;
            if (v59 == -1 || v60 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v61 = *(char *)(*(void *)&a1[*v5] + v59);
            *(void *)&a1[v58] = v60;
            if (v61 < 0)
            {
              BOOL v26 = v57++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v62 = 0;
          while (1)
          {
            uint64_t v63 = *v2;
            uint64_t v64 = *(void *)&a1[v63];
            unint64_t v65 = v64 + 1;
            if (v64 == -1 || v65 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v66 = *(char *)(*(void *)&a1[*v5] + v64);
            *(void *)&a1[v63] = v65;
            if (v66 < 0)
            {
              BOOL v26 = v62++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x10u:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v67 = 0;
          while (1)
          {
            uint64_t v68 = *v2;
            uint64_t v69 = *(void *)&a1[v68];
            unint64_t v70 = v69 + 1;
            if (v69 == -1 || v70 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v71 = *(char *)(*(void *)&a1[*v5] + v69);
            *(void *)&a1[v68] = v70;
            if (v71 < 0)
            {
              BOOL v26 = v67++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x11u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_317;
          }
          goto LABEL_178;
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v72 = 0;
          while (1)
          {
            uint64_t v73 = *v2;
            uint64_t v74 = *(void *)&a1[v73];
            unint64_t v75 = v74 + 1;
            if (v74 == -1 || v75 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v76 = *(char *)(*(void *)&a1[*v5] + v74);
            *(void *)&a1[v73] = v75;
            if (v76 < 0)
            {
              BOOL v26 = v72++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x13u:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v77 = 0;
          while (1)
          {
            uint64_t v78 = *v2;
            uint64_t v79 = *(void *)&a1[v78];
            unint64_t v80 = v79 + 1;
            if (v79 == -1 || v80 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v81 = *(char *)(*(void *)&a1[*v5] + v79);
            *(void *)&a1[v78] = v80;
            if (v81 < 0)
            {
              BOOL v26 = v77++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x14u:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v82 = 0;
          while (1)
          {
            uint64_t v83 = *v2;
            uint64_t v84 = *(void *)&a1[v83];
            unint64_t v85 = v84 + 1;
            if (v84 == -1 || v85 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v86 = *(char *)(*(void *)&a1[*v5] + v84);
            *(void *)&a1[v83] = v85;
            if (v86 < 0)
            {
              BOOL v26 = v82++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x15u:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v87 = 0;
          while (1)
          {
            uint64_t v88 = *v2;
            uint64_t v89 = *(void *)&a1[v88];
            unint64_t v90 = v89 + 1;
            if (v89 == -1 || v90 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v91 = *(char *)(*(void *)&a1[*v5] + v89);
            *(void *)&a1[v88] = v90;
            if (v91 < 0)
            {
              BOOL v26 = v87++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x16u:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v92 = 0;
          while (1)
          {
            uint64_t v93 = *v2;
            uint64_t v94 = *(void *)&a1[v93];
            unint64_t v95 = v94 + 1;
            if (v94 == -1 || v95 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v96 = *(char *)(*(void *)&a1[*v5] + v94);
            *(void *)&a1[v93] = v95;
            if (v96 < 0)
            {
              BOOL v26 = v92++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x17u:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v97 = 0;
          while (1)
          {
            uint64_t v98 = *v2;
            uint64_t v99 = *(void *)&a1[v98];
            unint64_t v100 = v99 + 1;
            if (v99 == -1 || v100 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v101 = *(char *)(*(void *)&a1[*v5] + v99);
            *(void *)&a1[v98] = v100;
            if (v101 < 0)
            {
              BOOL v26 = v97++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x18u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOWaypointInfoIsValid(a1)) {
            goto LABEL_317;
          }
LABEL_178:
          PBReaderRecallMark();
          continue;
        case 0x19u:
          if (v16 == 2) {
            goto LABEL_182;
          }
          goto LABEL_317;
        case 0x1Au:
          if (v16 == 2) {
            goto LABEL_182;
          }
          goto LABEL_317;
        case 0x1Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v102 = 0;
          while (1)
          {
            uint64_t v103 = *v2;
            uint64_t v104 = *(void *)&a1[v103];
            unint64_t v105 = v104 + 1;
            if (v104 == -1 || v105 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v106 = *(char *)(*(void *)&a1[*v5] + v104);
            *(void *)&a1[v103] = v105;
            if (v106 < 0)
            {
              BOOL v26 = v102++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x1Cu:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v107 = 0;
          while (1)
          {
            uint64_t v108 = *v2;
            uint64_t v109 = *(void *)&a1[v108];
            unint64_t v110 = v109 + 1;
            if (v109 == -1 || v110 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v111 = *(char *)(*(void *)&a1[*v5] + v109);
            *(void *)&a1[v108] = v110;
            if (v111 < 0)
            {
              BOOL v26 = v107++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x1Du:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v112 = 0;
          while (1)
          {
            uint64_t v113 = *v2;
            uint64_t v114 = *(void *)&a1[v113];
            unint64_t v115 = v114 + 1;
            if (v114 == -1 || v115 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v116 = *(char *)(*(void *)&a1[*v5] + v114);
            *(void *)&a1[v113] = v115;
            if (v116 < 0)
            {
              BOOL v26 = v112++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x1Eu:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v117 = 0;
          while (1)
          {
            uint64_t v118 = *v2;
            uint64_t v119 = *(void *)&a1[v118];
            unint64_t v120 = v119 + 1;
            if (v119 == -1 || v120 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v121 = *(char *)(*(void *)&a1[*v5] + v119);
            *(void *)&a1[v118] = v120;
            if (v121 < 0)
            {
              BOOL v26 = v117++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x1Fu:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v122 = 0;
          while (1)
          {
            uint64_t v123 = *v2;
            uint64_t v124 = *(void *)&a1[v123];
            unint64_t v125 = v124 + 1;
            if (v124 == -1 || v125 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v126 = *(char *)(*(void *)&a1[*v5] + v124);
            *(void *)&a1[v123] = v125;
            if (v126 < 0)
            {
              BOOL v26 = v122++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x20u:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v127 = 0;
          while (1)
          {
            uint64_t v128 = *v2;
            uint64_t v129 = *(void *)&a1[v128];
            unint64_t v130 = v129 + 1;
            if (v129 == -1 || v130 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v131 = *(char *)(*(void *)&a1[*v5] + v129);
            *(void *)&a1[v128] = v130;
            if (v131 < 0)
            {
              BOOL v26 = v127++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x21u:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v132 = 0;
          while (1)
          {
            uint64_t v133 = *v2;
            uint64_t v134 = *(void *)&a1[v133];
            unint64_t v135 = v134 + 1;
            if (v134 == -1 || v135 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v136 = *(char *)(*(void *)&a1[*v5] + v134);
            *(void *)&a1[v133] = v135;
            if (v136 < 0)
            {
              BOOL v26 = v132++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x22u:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v137 = 0;
          while (1)
          {
            uint64_t v138 = *v2;
            uint64_t v139 = *(void *)&a1[v138];
            unint64_t v140 = v139 + 1;
            if (v139 == -1 || v140 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v141 = *(char *)(*(void *)&a1[*v5] + v139);
            *(void *)&a1[v138] = v140;
            if (v141 < 0)
            {
              BOOL v26 = v137++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x23u:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v142 = 0;
          while (1)
          {
            uint64_t v143 = *v2;
            uint64_t v144 = *(void *)&a1[v143];
            unint64_t v145 = v144 + 1;
            if (v144 == -1 || v145 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v146 = *(char *)(*(void *)&a1[*v5] + v144);
            *(void *)&a1[v143] = v145;
            if (v146 < 0)
            {
              BOOL v26 = v142++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x24u:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v147 = 0;
          while (1)
          {
            uint64_t v148 = *v2;
            uint64_t v149 = *(void *)&a1[v148];
            unint64_t v150 = v149 + 1;
            if (v149 == -1 || v150 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v151 = *(char *)(*(void *)&a1[*v5] + v149);
            *(void *)&a1[v148] = v150;
            if (v151 < 0)
            {
              BOOL v26 = v147++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x25u:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v152 = 0;
          while (1)
          {
            uint64_t v153 = *v2;
            uint64_t v154 = *(void *)&a1[v153];
            unint64_t v155 = v154 + 1;
            if (v154 == -1 || v155 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v156 = *(char *)(*(void *)&a1[*v5] + v154);
            *(void *)&a1[v153] = v155;
            if (v156 < 0)
            {
              BOOL v26 = v152++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x26u:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v157 = 0;
          while (1)
          {
            uint64_t v158 = *v2;
            uint64_t v159 = *(void *)&a1[v158];
            unint64_t v160 = v159 + 1;
            if (v159 == -1 || v160 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v161 = *(char *)(*(void *)&a1[*v5] + v159);
            *(void *)&a1[v158] = v160;
            if (v161 < 0)
            {
              BOOL v26 = v157++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x27u:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v162 = 0;
          while (1)
          {
            uint64_t v163 = *v2;
            uint64_t v164 = *(void *)&a1[v163];
            unint64_t v165 = v164 + 1;
            if (v164 == -1 || v165 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v166 = *(char *)(*(void *)&a1[*v5] + v164);
            *(void *)&a1[v163] = v165;
            if (v166 < 0)
            {
              BOOL v26 = v162++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x28u:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v167 = 0;
          while (1)
          {
            uint64_t v168 = *v2;
            uint64_t v169 = *(void *)&a1[v168];
            unint64_t v170 = v169 + 1;
            if (v169 == -1 || v170 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v171 = *(char *)(*(void *)&a1[*v5] + v169);
            *(void *)&a1[v168] = v170;
            if (v171 < 0)
            {
              BOOL v26 = v167++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x2Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v172 = 0;
          while (1)
          {
            uint64_t v173 = *v2;
            uint64_t v174 = *(void *)&a1[v173];
            unint64_t v175 = v174 + 1;
            if (v174 == -1 || v175 > *(void *)&a1[*v3]) {
              goto LABEL_312;
            }
            int v176 = *(char *)(*(void *)&a1[*v5] + v174);
            *(void *)&a1[v173] = v175;
            if (v176 < 0)
            {
              BOOL v26 = v172++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_314;
          }
        case 0x2Cu:
          if ((v8 & 7) != 0) {
            goto LABEL_317;
          }
          unsigned int v177 = 0;
          break;
        default:
LABEL_182:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_317:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v178 = *v2;
        uint64_t v179 = *(void *)&a1[v178];
        unint64_t v180 = v179 + 1;
        if (v179 == -1 || v180 > *(void *)&a1[*v3]) {
          break;
        }
        int v181 = *(char *)(*(void *)&a1[*v5] + v179);
        *(void *)&a1[v178] = v180;
        if (v181 < 0)
        {
          BOOL v26 = v177++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_314;
      }
LABEL_312:
      uint64_t v14 = *v4;
LABEL_313:
      a1[v14] = 1;
LABEL_314:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v182 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v182;
}

BOOL GEOLogMsgEventTransitAppLaunchIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2) {
            goto LABEL_34;
          }
          goto LABEL_24;
        case 2u:
        case 3u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_34;
          }
          PBReaderRecallMark();
          goto LABEL_31;
        case 4u:
          if (v16 != 1) {
            goto LABEL_34;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v20 = v19 + 8, v20 <= *(void *)&a1[*v3])) {
            *(void *)&a1[v18] = v20;
          }
          else {
            a1[v14] = 1;
          }
          goto LABEL_31;
        default:
LABEL_24:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_34:
            PBReaderRecallMark();
            return 0;
          }
LABEL_31:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_32;
          }
          break;
      }
    }
  }
LABEL_32:
  BOOL v21 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v21;
}

BOOL GEOLogMsgEventTimeToLeaveHypothesisIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_59;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_59;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_59;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v37 = 0;
          break;
        case 5u:
        case 6u:
        case 7u:
        case 8u:
          if (v16 != 1) {
            goto LABEL_62;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_58;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_58;
          }
          *(void *)&a1[v18] = v20;
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_62:
          BOOL v42 = 0;
          goto LABEL_61;
      }
      while (1)
      {
        uint64_t v38 = *v2;
        uint64_t v39 = *(void *)&a1[v38];
        unint64_t v40 = v39 + 1;
        if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
          break;
        }
        int v41 = *(char *)(*(void *)&a1[*v5] + v39);
        *(void *)&a1[v38] = v40;
        if (v41 < 0)
        {
          BOOL v26 = v37++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_59;
      }
LABEL_57:
      uint64_t v14 = *v4;
LABEL_58:
      a1[v14] = 1;
LABEL_59:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v42 = a1[*v4] == 0;
LABEL_61:
  PBReaderRecallMark();
  return v42;
}

BOOL GEOLogMsgEventTimeToLeaveInitialTravelTimeIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOLogMsgEventMapLaunchIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTimeToLeaveMapLaunchIsValid(a1))
        {
LABEL_31:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 2)
        {
          if (v15 != 2) {
            goto LABEL_31;
          }
        }
        else if (v17 == 1 && v15 != 2)
        {
          goto LABEL_31;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_31;
        }
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

BOOL GEOLogMsgEventFullNavTraceIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventTelemetricIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTelemetricEntityIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventRealtimeTrafficProbeIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}